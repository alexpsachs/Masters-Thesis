{
    "jescalan": "All core compilers have error handling, although I'm sure some of them need debugging\n. I'm not totally sure on this one. I definitely wanted to ship this with my version of compass (roots), which in my experience has been a lot cleaner and easier to deal with and also includes highly customizable and modular UI mixins. The only thing it doesn't have is the spriting functionality, which I don't use anyway but would be easy to build in if needed (or build as an extension to the command line too - `roots sprite folder-name`).\n\nAlso a big thing for me is to not have this depend on ruby. It's notoriously difficult to install ruby for those who don't have it already, and I'd want to be able to use this for getting people hooked on and/or teaching preprocessors. Installing node is super straightforward and I've never had anyone have trouble with it.\n\nI spent a while looking for a decent port of sass to javascript earlier this week and couldn't really find one that worked. I'm starting to think that just including stylus would be enough - it works with or without brackets and semis so both preferences there are satisfied, and it's definitely cleaner than both sass and scss, and is made for javascript and node.\n\nAt the same time, I wouldn't want to isolate people who were super hooked on sass and compass, but I think maybe a sass and compass module should be built as a plugin that can be included with this guy if you want - this way we'd avoid the ruby install problems unless the person almost definitely already had ruby.\n. I've been mulling this over and am thinking we should only ship it with the core set we have defined now: jade, stylus, coffee, ejs, and any type of static file - just to keep it light. I want to define a nice interface for adapters though so that people can easily write extra compilers and pull them into the app when needed.\n\nThe nice thing is that it's not too difficult to execute anything from the command line directly, so even if there isn't a good native compiler for say, haml or sass (which honestly there isn't - the ones TJ made are long abandoned and now broken), it should be fairly trivial to implement the compilation of this type of thing directly from the command line.\n\nI think haml and sass (compass if you want but I don't really mess with that stuff) should definitely ship as plugins, and would be a good way to serve as an example plugin template for other people to check out. I'm writing up the plugin spec now, it should be super easy to add in to the existing workflow.\n. I think this has been more or less resolved - the default stack is set as the quickest, cleanest, and most reliable ones we have in javascript - jade, stylus, and coffee. Any extra languages can be easily added to the compile stack through plugins.\n. I would say tests have improved significantly enough that I can close this issue. Of course, going after better test coverage is and will always be a goal, but it's no longer an absolute disaster\n. good call\n. Not sure if this is actually any cleaner - I'll look it over more thoroughly and either merge or implement promises probably tomorrow\n. I'm going to look into sequence as a way to handle this and throw it up here, then we can decide which one is cleaner\n. Sorry I'm so late on this - this looks good, but it still has the count in there which sort of bothers me. I'm trying to implement this with promises right now (which are confusing the shit out of me, but good opportunity to learn), and if it looks cleaner that way I'll merge that in. Otherwise I'll merge this guy.\n\nAlso what you have here with abstracting the compiler names out to a list is a fantastic idea which I definitely should have in there. The compile section in general could def use some drying\n. Ok, just pushed a refactor which is similar to this, but a little more cleaned up - check it out and let me know if it doesn't make any sense or if you think we should create some hybrid of the two\n. No longer relevant due to extensive refactors - closing this. Was a good pull request though : )\n. This is excellent - has it been tested with subdirectories? You might want to use readdirp rather than reddir here to make sure the structure is maintained. Also, the watcher library I had in there could detect whether a file was added, removed, or changed, which is something we could use in the future to make the compilation faster by only compiling/adding files that changed. This is just on first look though...\n\nBut the video was amazing though.\n. Changing this from bug to enhancement. The livereload code now works through a local function and only appears when watching the files, but we can still do better. Buffering streams ftw!\n. What say you of this? https://github.com/flatiron/union\n. Ok I'm going to close this seeing as we haven't been able to get close for 7 months. Perhaps in the distant future...\n. I think this is brilliant. Will definitely make this happen - should be a fairly straightforward implementation as well\n. This does work now, implemented in 78d3b8581a\n. closed as duplicate of #1\n. Well, layouts and partials are implemented, so I'm going to close this. I would like to have multiple languages allowed at once, will likely implement this later this week or next week.\n. So I've been tinkering with this and it turns out you can't copy a folder recursively in FTP because you can't create a file at a nested path. Each file or folder must be created directly in the current working directory. That means in order to effectively copy the files over, I'd need to write a script that would jump back and forth from directory to directory automatically making files and other directories until everything was copied over.\n\nThis is a brutal task and I really don't want to do it right now, so I'm back burner-ing this issue. If anyone knows of possibly a library that's already written to do this, that would be awesome. Otherwise, I'll work on it once the demand/my free time gets high enough.\n. Good news, the fantastic author of node-ftp has added an options to make directiories with nested paths as of this commit: https://github.com/mscdex/node-ftp/commit/1f32e8ec1cf4d8818a90371e733f530d199dad09 -- this means it should be a bit easier to implement this functionality and it should definitely be done soon.\n. I've been trying to figure this out, but I'm really not sure why it's happening... @samccone - any idea?\n. Plugin interface is functional, although not yet 100% smoothed out, especially installation. First commit with working plugin interface was 7271fabe76\n. you're killing it with this file watcher\n. This could be a plugin, but no need for it in core. Would be a good example of a plugin that requires a library, once I can figure that out. Either way, closing this for now.\n. closing - images will be in assets/img and I'm thinking a vendor folder will contain client side JS assets installed via bower as well as a plugins folder.\n. Closing this from lack of interest\n. Closed by 58ba4ce24c46fb1d5ed286802ec91054939aba10\n. bower was integrated in commit 4b740c89bc\n. I'm going to close this - compass is not going to compile very quickly, and it's not built to run for javascript. If people want to use compass, there are plenty of other frameworks (middleman, yeoman) that pull it in, and it would be fairly easy for someone who understands the project to build a plugin for roots if they wanted. But it's not worth spending extra time on it for me.\n. Sure, i just want to make it available as a mixin, for convenience, if they want. It could just grab the parent background property, add @2x to the url, then get the width and height and set those as background-size. Ya know?\n. That's definitely true, although I'd classify the @2x more as a convention at the point than a practice that some people use. I know you've been working a lot of responsive stuff lately though - how have you been doing it? Is there any kind of mixin functionality you'd put on your wishlist?\n. solid point. you've used this more than me, can you think of any shortcuts that would make this easier/automatic?\n. This has been added to root-css as `bg-retina()`. I'd still like to build out a mechanism to incorporate your svg method, but that will happen down the road.\n. Update: it's require.js that's causing the issue. What the eff?\n. Resolved, it was a bug in uglify.js that was fixed in a more recent release. Updated the dependency and it works great - whoo!\n. No, it's not. This issue was closed more than a year ago, these updates are present in 2.0.6 stable. If your watcher is not catching file changes, feel free to open a new issue.\n\nBut yes you should use the edge version unless you are dependent on deployers, which is the only piece that's not yet stable in the edge version.\n. have you checked out this beast? https://github.com/bestiejs/lodash\n. For sure, I wouldn't have thought of this either. Next on my list after a small docs site is mocha tests :smile: \n\nEasy change though, just add a filter to readdirp for `\"!components\"`\n. yea i can grab it\n. Got most of this done in about an hour. Nice way to test roots though, I found a couple bugs in the process. The repo is here: https://github.com/jenius/roots.cx\n. took a look at this, doesnt seem like it's the compile logic - ping @samccone \n. pull down the roots.cx project and run it there - it tends to happen as you add more files (not that the roots.cs project has a ton of files, but its more than the really minimal example)\n. I'm starting to see this more often, especially as projects have more files and content in the files. I feel like at this point this bug is my biggest hang-up before shipping. Have you had a chance to check this out @samccone ? I'll dig into it as well :smile: \n. Yeah I'll push one up in a few :sake: \n\nAlso, just changed the name of the repo so you might want to rm and re-clone, or just change the origin\n. Here's a solid example. Just tested and I'm seeing double reloads every time over here:\n\nhttps://github.com/jenius/roots/tree/reload_bug\n. you da bes :shipit: \n. This has been added - just set `exports.coffeescript_bare` to true in the `app.coffee` file\n. closed by 2d3d813f56\n. closed by 44e8b41b0f8f414182434d76599d87f3992ada19\n. I like this, about to merge that shit in. The only thing that makes me sad is the delay before reload - is there no way we can get around that 500ms wait? It might be worth poking around in here to see how they handle the reload thing - yeoman does a pretty good job with it:\n\nhttps://github.com/yeoman/yeoman/blob/master/cli/tasks/server.js\nhttps://github.com/gruntjs/grunt/blob/master/tasks/watch.js -> this one is better\n\nI'll poke around too.\n. Ah boo, that's no good. Did you check out the watcher module in grunt? It looks like the only possible delay they have in there is a 200ms thing, and they are checking the stats on a file. It seems like their reload is a bit quicker - think it would be worth digging in to that and experimenting?\n. Yep, looks great. Thanks @idpro - this will go out the next time roots ships.\n. Either way is fine. I've just been working off master, so thats fine for now. If I need I can always pull it down into a different branch anyway locally : )\n. Hi @dunphyben -- this is not the place for questions like this, although I do appreciate that you searched the issues. Roots does not deal with javascript at all, it's a static site generator. You just load in jquery using a script tag as you would on any static site and it will work.\n. you can use the `round()` mixin for this. `round: none` will reset and `round: 5px` would set all to 5 pixels.\n\nThis is in the documentation - if you just have a question like that feel free to email me instead rather than filing an issue!\n. 1. This should be filed in the [roots.cx repo](http://github.com/jenius/roots.cx)\n2. This needs to have more specific detail, screenshots, etc. The site doesn't have white text on a white background - are you sure this is not just your computer?\n. On it. Good catch.\n. Fixed in ba9cb8377dd401022a6f596e7448ab1a42602535 - thanks for catching this. run roots update to get a fresh patch for this fix.\n. You can run `roots new whatever` from your command line to have roots generate a starting template for you. Whatever being whatever the name you want your project to be.\n\nWas this what you were after, or did I miss the point? Just to add a little to this, roots is not similar to bootstrap in any way. It's intended for professionals to build high-quality custom sites - not as a tool you can use to generate a generic-looking stylesheet to slap on your site so that you can not hire a designer, or because you don't really know how to write css.\n\nThat being said, [semantic.gs](http://semantic.gs) is built into roots, and you can use it to quickly mock out grid structures if this is your style. There are a few examples on their site of basic grids, and the documentation on how to use it within roots [can be found here](http://roots.cx/css/#grid).\n. I think that would be a great compromise - thanks @samccone. I'll try to get a video up that walks through the process of building a simple site this weekend : )\n\nOr do you want to do it and get your smooth voice on the roots radio-waves?\n. Ping @samccone - up for this still? If not I can crank it through, I do have a fancy new mic...\n. good deal. and maybe fix the part of the watcher that pulls in new files? :wink: \n. These are done and up on the website at http://roots.cx - a bunch more tutorials, clearer video and audio. Hope this helps!\n. Into it. Could you check out how I'm doing the browser rewrite for errors (it's pretty janky) and let me know what you think of doing it that way? Should be fairly straightforward to implement though.\n. For reference, here's the file that handles the compile error messages: https://github.com/jenius/roots/blob/master/lib/utils/errors.js\n. Hey Matt,\n\nThis is some good work, but I don't think I want to have this included by default. Everyone has their own project preferences, and the entypo icons notably require attribution, which I'm sure many people would forget (and in fact you already did in this pull request) - I don't want to have a bunch of people violating the license of entypo because of roots.\n\nOn the other hand, the next feature I've got in the pipeline is an ability to add custom starting templates that can be defined by users. For example, if someone likes working with straight javascript and having the html5 boilerplate and entypo, they would be able to define this. I think this would be great to add as a custom template for sure. Let me get back to you on this one. Any other thoughts are welcome.\n\nAlso, roots ships with a font-face definition mixin - feel free to tinker with that as well. It's in the docs under utilities: http://roots.cx/css/#utilities\n. Did you really see the icons as blurry? If so, this might have been a massive glitch in either your phone's rendering engine or with entypo itself. The icons on the main site are font icons, as [you can see here](https://github.com/jenius/roots.cx/blob/master/assets/css/main.styl#L9), so there's no reason why it shouldn't be clear.\n\nThat being said, it would be great if the author of entypo would allow the icons to be packaged by default into the framework. I'll contact him and ask about this, although I do understand why he wants attribution and am not convinced that he would allow this.\n. Right. I only want a very basic template as the default - if people want to add entypo, it's simple to do. But I don't think I should push it on them by default - ya know?\n\nAs for the play buttons, totally forgot about making those retina. The videos were a last minute addition before ship. But that's a great call, could you [open up an issue in the roots.cx repo](https://github.com/jenius/roots.cx/issues) about the fact that these should be retina? Good catch!\n. Thanks so much Matt. I'm going to close this pull request -- not because it's a bad idea by any means, just because I think offering custom templates would be an even better way of implementing it. Could you open an issue instead about putting in custom user-defined templates? This would be a really big feature that I hope a lot of people would enjoy. I only ask you to open it because I want to make sure you know when I ship it, and that it was helped a lot by your input : )\n. I suppose, but really you'd have to be insane to type that and expect a good result. What's happening here, as you know, is that you are creating a new roots project called the name of the current folder. So it makes sense that it would overwrite the current folder with the new roots project. I can manually prevent the user from entering `.` or `..` as the name, would that help?\n. Uglifyjs is already in there for javascript dawg. Do yo research. But this is an excellent suggestion and I'll definitely merge this : )\n. Makes a ton of sense - I wrote the deploy script for mac and linux. I'll add in alternate syntax for windows as soon as I can - for now you might just have to run heroku deploy to get the job done : )\n. Blame it on the :bird: goose\n. Just an update - have not forgot about this. Roots core is getting a fairly large refactor in the next week or two, and I think I'm going to transition all the command line interaction to run on top of [shelljs](https://github.com/arturadib/shelljs) -- this will solve any differences between windows and unix : )\n. crazy - good call @randallagordon. other good news -- this fix has been pushed to master and will be deployed soon : )\n. shipped - let me know if you are still running into issues!\n. The compile helper keeps track of each file's target (html,css, js) - let me poke around and see if there's a way to do this without a significant slowdown. It would be super helpful if you could poke around with the watcher and see if you can get it to emit the file type.\n\nActually I'm wondering if making the watcher extend eventemitter would be a good idea in general. Just speculating though\n. This is the next big feature I'm working on, and should be set to ship in version 1.1\n. Also, the next big step after this would be to have the watcher return what operation happened on the file. Really it would just need to know the difference between modified/new and deleted, so that instead of trying to recompile a deleted file it would just remove it.\n. Added and resolved in the master branch\n. Yeah wow same thoughts in general - this is crazy. Great work on this project first of all, clearly you guys have poured a ton of thought and effort into this. I think that rather than trying to squash the entire project into roots, perhaps it might be better to steal small parts of it and include them in the pipeline. What I especially liked and what roots does not yet have I'll go over below:\n- The image optimization. still worried about the external dependencies, but I like how you guys did it and the tailored npm packages you have made to integrate optipng, pngcrush, jpegtran etc. This should definitely be something that happens on compile IF you have the binaries installed, but I definitely don't want it to raise a fuss if you don't because relying on entirely external dependencies that must be separately installed for me is a little whack.\n- Your use of require.js - I think we can definitely do better with this. I've been thinking about the best way to roll JS dependencies together and I think roots' philosophy is currently a bit undecided. I have the asset pipeline in there thanks to snockets, so if you want you can define a single `application.js` (or `.coffee`) and require all your others there. But I also have require.js included by default so you can dictate which sections of your code depend on which libraries and make it work efficiently there. The whole coffeescript issue is a separate thing - with coffee's automatic closures, it makes sharing code between included separate files super difficult. Having a system where you could export and require like commonjs on the client side I think would be ideal.\n- The options for putting your assets out to a CDN. For a static site, yeah, probably not crucial. But nice to have the option there anyway.\n- Assetgraph itself. I love this: \"if you change the url of an asset, all relations pointing at it are automatically updated\" - brilliant. Getting that integrated would definitely be something I'm interested in, although how feasible it is without increasing the project complexity is a major consideration - keeping things clean and simple is a big concern for us.\n- Inlining small images. This should definitely be done. I know stylus has support for this within the css - I should work on including that. Having it happen within `<img>` tags would be an added benefit.\n\nOverall I feel like pulling in [AssetGraph itself](https://github.com/One-com/assetgraph) and working with that directly rather than trying to pull assetgraph-build might be a better approach.\n\nIt seems like we have pretty similar goals in general with these two projects though, and clearly you guys have done some great work. I would definitely welcome you jumping in and contributing to roots, if that's something you're interested in!\n. So I keep coming back to look at this and thinking about it throughout the refactor process, and I think it would be incredibly awesome to build some pieces of this idea into the project.\n\nOne instance where it recently came up was with selectively compiling on save. Right now, roots compiles the entire project when you run `roots watch`, pops up the site in your browser, then watches the files and compiles individually changed files to save time. But the problem arises when a dependency that is not specifically compiled (such as a layout file or partial) is changed. Since this file isn't compiled, passing the filename through roots throws an error. And since I don't have an \"AST\" that knows what depends on what, I can't selectively compile only the files that change as a result of the original file changing. My temporary solution is that when an ignored file is compiled, the whole project gets recompiled, but obviously this isn't ideal.\n\nI feel like having an assetgraph would help with situations like this and a bunch of others. The only question I have here for you @Munter is whether assetgraph only works with vanilla html, css, and javascript. I feel like the real benefits would be to have assetgraph chew through the jade, stylus, and coffeescript files in order to figure out the relations there, before they are compiled. If not, would it be a monumental task to build adapters for other languages?\n. This is excellent - just a couple questions:\n- Does it have jade support? This is fairly important : )\n- Like you said, this is not set up really well for pre-processing. While this module would be easy to build in to the `roots watch` server, the end goal is for roots to spit out nice, compressed, and organized html, css, and js to a public folder - your app is then run as a static site from this folder. Would it be extremely difficult to pull this module out so that it could be used in node manually rather than only as middleware? If not, I'll start tinkering with it!\n. I'm going to close this just because I don't think it's viable at the moment. It would require a major rewrite of the core of roots, which I'm not prepared to do at the moment, and it would require quite a bit of external support to get everything wired up correctly.\n\nI do like this idea and would very much like to have it integrated at some point in the future. I'll keep it in the back of my mind, but I don't want to have this stagnant issue sitting around as open just because I want to get the issues section focused down to things we're working on right now.\n\nThanks so much @Munter for all your answers and support here, and don't doubt that someday we will be back here probably asking more questions :smile: \n. Definitely agreed, and I'll make sure to check out node-task. Thanks again @Munter!\n. Sorry for continuing to open and close this, but since this issue has been stagnant for months and I'm trying to really focus down on the next couple releases, I'm going to close this again. As soon as @slang800 is back to working on this actively, we can re-open : )\n. Yeah you're right. Can I assign this one to you? I feel like having worked with the watcher more you could handle this more easily than I can.\n. Awesome fix for this, resolved in the refactor branch. Will close this issue when the merge happens.\n. Resolved in master branch, will ship soon\n. Closed by b344c18\n. Ok this is a good one. The issue is that nodejitsu is paid where heroku is free (at least to start), so people would need a paid account to do it.\n. I'm not sure I agree with this, and here's why:\n1. It already relies on npm. The curl script is just a shortcut that checks if you have node, and if you do runs `npm install roots -g`.\n2. The `roots update` command just runs `npm update roots` in the background anyway.\n\nSo the project does rely entirely on npm, the commands you specified are just syntactic sugar to make things cleaner. If you want to use npm to manage it, you can. In fact on the site I specify how to install it using npm, and I assume those familiar will do this. I don't think removing the wrapper commands would help anyone. Life would be the exact same for those who are familiar with node and npm, and slightly more difficult for those who are not.\n. Fair enough, I can agree with this. I think to start I'll just switch the priority - I'll keep the other scripts in there but emphasize the npm ones rather than my custom ones. If I see usage for the custom ones going down I'll gradually phase them out. Thank you for this suggestion -- I'm going to close this issue and the roots website will be updated with this revision tonight!\n. Wtf? I'm closing this - re-open it if you have any more details or plans for what you think the starting framework should be.\n. I still don't understand what you mean...\n. Are you talking about the default contents of the index page? The readme? What it says on the command line after running the command?\n. Was this one resolved in your last round of PRs?\n. Ok I'm closing this, trying to organize the issues here.\n. Looks good :thumbsup: \n. Absolutely agreed. We need a bad ass port though, which one should we use? 20075 kind of looks like roots if you squint really hard haha\n. Actually I think we should stick with a bit lower of a number. How about 1400? It's not reserved for anything specifically and is easy to pronounce and remember. We could also use 1111, this doesn't seem to be taken by anything standard.\n\nHere's the list of registered ports: http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers\n. done and done. really like this little addition\n. Could you leave in the process.env.PORT line and push?\n. Yeah the point was that you could override it if you want to when you run roots watch. `PORT=321309 roots watch` would do a manual override if for some odd reason they are running another dev app on that port. Don't think it would be necessary, but it can't hurt to offer the option.\n\nIf you recall, that's what https://github.com/jenius/roots/pull/36 added\n. You have an error in your css, as it told you. It's telling you where the error is - run roots watch, go into the public folder, and go to line 58 of your css file. Go back into your stylus file, make the correction, and you should be set.\n\nIf you are really struggling, I can help you find it, just post a link to the github repo with your project in it.\n. The library that's throwing this error is [csso](https://github.com/css/csso), and I'm quite sure that it works right. I definitely think it should be throwing the file name with the error (i'll see if I can submit this to them), but there is without a doubt some invalid css in there somewhere.\n\nEither way glad you could figure this out! If you're having a lot of trouble with the minification step you will be able to run it with the `--no-compress` option as of the next time roots ships, which should be in a day or two : )\n. Oh sweet jesus you're using bootstrap with roots? Although I wish I could say \"I built a kill switch if you try to install bootstrap\", I didn't actually think anyone that knew how to write jade, stylus, and coffee would go there, so I didn't. Maybe it will be there in the next release.\n\nEither way, it looks like this is an error with bower, and it looks like [you're not the only one that's run into it](https://github.com/yeoman/yeoman/issues/search?q=127%20git). Perhaps checking out some of the answers on the bower repo would help?\n\nI'd say it's likely due to some sort of weird setup with git - are you sure your git is the latest version and everything is set up right?\n. Did you manage to resolve this? Since this is not an issue with roots and rather with bower, I'm going to close this issue.\n. Yeah great call I noticed this before. I'll fix that, it's just making the position fixed rather than absolute\n. Can you do a little more investigation here and make sure? I haven't seen this happening with any of my code. Also wait are you sure running a nested import like that is legit? If it turns out this is happening, it might be a stylus bug rather than us\n. Hey I'm going to close this just to keep it clean - by all means re-open this if you have more details or a fix etc.\n. Not sure I want to do this just because it's not the standard with express. I wanted to keep this close to the express default template. But then again I did add connect-assets... that was mostly just for getting back roots' familiar languages tho\n. Same thing on this one - I don't want to vary from express' defaults unless we have a solid reason for it. And come on moving the commas to the end of lines is not an improvement, thats the opposite!\n. Fine, I'll merge this one. Still not on board with commas at the end being better, but I'll take it.\n. Just started playing with this, and it's actually super brilliant. I'm incorporating this into the refactored build, and honestly, this is going to take the compile speed up a huge huge amount. We really only have to compile a single file each save (rather than all of them), and my goal is to ship this next version with that happening.\n\nThat said, I'm starting to realize that the mark of great engineering on this project is going to be when I can either feed a single file or a giant nested directory through roots and it will handle them both nicely, while still having a dry and readable codebase.\n\nThis is the next big thing I'll be working on : )\n. Manually merged this into the refactor branch - whoo!\n. I'm using underscores rather than camel case through the app - I feel like changing it only in this location makes things more confusing...\n. I'm going to close this one and pick out some pieces from the debounce pull request\n. Is there any way you could separate these two? This PR also includes the contents of another PR :/\n. Also, just curious - why did you add this? Isn't this just going to slow the reload time down without any other tangible benefit?\n. Ah ok, let me check this out. Sounds like a good call : )\n. Manually merged into refactor branch - whoo!\n. I like this idea. If you fire up a new roots project, it will scaffold out a basic boilerplate, but I'd be happy to put up a couple examples of sites built on roots if that would make life easier for people...\n. #40 appears to be an exact duplicate - going to close this one, although it is still very much on my to-do list\n. What you are asking here is not an issue with roots, it's a design question about the specific site you're working on. Things like this don't exactly belong in the issues section, perhaps emailing me would be an easier way to get help : )\n\nIf you want variables in your views, there are locals available, as you mentioned. If you want to store state on a dom element, you can use javascript (data attributes). If you are looking to do some sort of other wizardry in the views, look through the documentation for jade, as this is the view engine.\n. Ok sorry, it wasn't clear that this was what you were after from the original question. So would it help if I added an variable that just contains the template name to each view automatically?\n. I see no reason we shouldn't be able to do this. I'll put this on the list for the next release, which should be later this week or early next : )\n. shipped - variable is called path - available in all views\n. Hey Sebastian,\n\nAll you need to do here is reference require.js with an absolute path or use a new layout in your subdirectory that references it relatively - this is just about paths - there's no roots magic involved whatsoever. Thanks for bringing this up though, I might change the default to reference it absolutely : )\n. Awesome - closing this one. I'll ping it from commit when I push the absolute reference in the default template\n. Change the extension on the file to `.css`\n. If it helps, I originally wrote the library in sass but ported it over because stylus fits the task better. I would recommend giving stylus a shot and seeing how you like it. It's extremely similar to sass anyway, should be an easy experiment.\n. Not sure exactly what the issue is here, sorry for being slow - could you explain it one more time Sam? Are you sure this is not an issue that can be solved using `ignore_files` in app.coffee?\n\nEither way, I'll try to replicate this according to the original issue @jsncbt and update on the status today\n. Ok, so I took a look at this, and it's not an issue with roots, it's just the way that stylus works. It seems like you are having two distinct problems here:\n- use of `@import`\n- use of `ignored_files`\n\nAs for the `@import` issue, this is stylus working the way it was intended. When you import a file, it makes it's contents available to the file you just imported it into. It does not make its contents available to every other file that is imported into that file. So in this way, the behavior you have experienced is normal, and is exactly how stylus is supposed to work.\n\nThe second issue, it seems, is that you are using a number of \"mixin templates\" -- that is, files that are only intended to be imported into another file, and not compiled themselves. In this case, you must make sure you have manually ignored these files from the compile process. It's impossible for roots to make the call automatically as to which files you want to ignore or not, so there is no other solution than indicating it yourself.\n\nIn order to do this, you can either add all the file names individually to the `ignore_files` array in the `app.coffee` file, or you can make use of the convention that I applied throughout roots -- that files beginning with an underscore will be ignored by the compile process. You can actually see this rule is already in the `ignore_files` array (in [minimatch](https://github.com/isaacs/minimatch) syntax) -- if you would like to follow a different convention it can quite easily be changed.\n\nYou might have noticed that I did a similar thing while building [roots-css](https://github.com/jenius/roots-css). One additional concept I took advantage of was stylus' use of [index files](http://learnboost.github.com/stylus/docs/import.html). You can see how I implemented the \"base\" file for roots-css [here](https://github.com/jenius/roots-css/blob/master/roots-css/index.styl).\n\nHope this makes some sense - let me know if any part of it is unclear or if I missed the issue. If you'd like, I can upload a copy of the sample project in which I solved your issue. If this makes sense and takes care of the problem, feel free to close the issue!\n\n@samccone -- was this something you brought up in a previous issue that I didn't quite get what you were after, and does this solve your problem as well?\n. Here's the test project - I'm going to close this issue, but let me know if you are still running into troubles!\n\nhttp://cl.ly/LybU\n. Thanks @ChristianBundy - this is a great start! Thanks _so_ much for helping us out, we really appreciate it. My only concern is that the colors and style don't fit too well with the current aesthetic on http://roots.cx...\n. ping @karolinaszczur on this one : )\n. There's also a [$10 reward](https://www.bountysource.com/#repos/jenius/roots/issues/75) for whoever does this :+1: \n. Hey brooss, thanks for helping out! This is a good start, but I'd like to see a little more work here to make sure it fits with roots' aesthetic. This just looks a little like clip art to me because of the style and coloring. Thanks again for pitching in though!\n. Yeah probably. Just simple, clean, bold line vector is what i was thinking - your thoughts?\n. Love both of these : )\n. @brooss we definitely appreciate the hard work you're putting in - don't get me wrong. I just don't think that plant graphic isn't quite making the cut for us. It's hard to critique a design because I know design can be very subjective, but what you're posting is just not the style we're after.\n\nI'll try to be more specific - the only change you made to the second version was putting it inside a grey circle and changing the color. For the rocket image, it's not the fact that it's inside a circle that we like, it's more the overall style: bold, clean, geometric lines and subtle shading.\n\nIn addition, there's something about the plant drawing that looks a lot like clip art to me - I think it's probably the cartoon-y style on the curves of the leaves. I think maybe revising that base image would be a good place to start. In addition, the roots have some strange aliasing going on, and 2 of them are not connected to the plant at all.\n\nSorry that I'm so picky about this, the only reason I am is because I'm a designer myself, and I've been pouring my heart into both the design and code behind this project - I want to make sure that if we do choose to add a logo, it's something we really love :smile: \n. Wow, really like this direction @PatrikLythell - very simple and nicely done abstraction\n. Wow, that's crazy with the colors idea, never would have thought of that. Looking forward to seeing your tinkerings. Also pinging @noahatkinson on this one ; )\n. Yeah this does look nice, really fresh. I think the only thing left that's still putting me off a little is the color scheme...\n\nThanks _so_ much @PatrikLythell for the continued awesome work!\n. Oh I do like the pastels, it's just this particular combo I think - grey, light grey, pink, and purple - doesn't seem like it totally fits. Especially because the current theme is a greyish blue and orange. Far from bad though, just being a perfectionist :smile: \n\nMaybe something like this palette would fit better? http://www.colourlovers.com/palette/694737/Thought_Provoking\nOr this one? http://www.colourlovers.com/palette/443995/i_demand_a_pancake\n. Ah, like this a lot more. Thought anyone else?\n. Awesome. I'm going to call this closed, and I'll get this into the roots website as soon as I can, and as soon as I get a svg file from @PatrikLythell. Whoo! I'll also add you to the credits under the FAQ, if that's ok with you Patrik. Thanks so much for this great work :smile: \n. Awesome, thanks so much! Looks great. Is there any chance you could send a circle version and convert the font to outlines as well? Much :heart: \n. Thanks so much @PatrikLythell - you should claim the reward for this one :stuck_out_tongue: https://www.bountysource.com/#issues/98485-a-roots-vector-logo\n\nAnd yeah that is a good idea @samccone  - perhaps I shall :wink: \n. just shows up as a blank space for me...\n. ![wat](http://cl.ly/M2M1/Screen%20Shot%202013-01-08%20at%201.23.29%20PM.png)\n. didn't do it :cry: \n. Oh yeah I got it to work on my laptop. Aiite want me to throw it in, or are you gunna PR that shit?\n. Yeah this is a big thing in Rails, and I don't disagree at all. This is what I was sort of after in the default new project template, especially with establishing the `views` and `assets/css`, `assets/js` and `assets/img` folders. Although it's possible to change them if you dig into the source I don't encourage it.\n\nAre there any other places you see establishing conventions being useful?\n. Yeah, it bothers me a good amount that component is not requirejs compatible. I think I'd rather side with requirejs if we had to pick one, honestly.\n\nThis is an interesting concept though, I know you were writing some crazy stuff in the other issue about bower related to that. Are you still thinking of integrating package managers more tightly with require or something else? I've started on the asset graph as well so I can see a remote possibility of a tie-in there too.\n. Good news, this has just been tested and implemented! A short note has been added to all new projects' app.coffee file about how it works, docs coming soon on http://roots.cx!\n. Status: Refactored the deploy process to more elegantly handle multiple deploy recipes, ran into a bug with jitsu being called from a child process which prevents that one from being totally smooth, and ran into a bug with the ftp adapter which is causing file uploads to hang. Filed issues in both projects, hopefully will be resolved soon so these two can be pushed through!\n. Yep, nobody is - code looks good, thanks for taking an initiative here randall :thumbsup: \n. Also, feel free to not reference via absolute path - you can add this to the PR :thumbsup: \n. Update - just removed the absolute path css reference and pushed to master. Also fixed the ftp deploy adapter, which is nearly ready to ship - it just has to remove the current remote directory contents before pushing new files, which means I need to write a stupid recursive ftp method which I'm going to do today.\n. Ok, so the ftp and nodejitsu deployers have been shipped, so I'm going to close this up. They haven't been super thoroughly tested or documented, but this will be part of the large release coming up in about a month.\n. Absolutely! You can do this, it's just not documented (wanna submit a PR and add it?)\n\nJust run `PORT=3000 roots watch`, with 3000 being whatever port you want : )\n. Thanks for the contribution jonki! Looks great : )\n. This is resolved in master, should be shipped soon. I've been tinkering with super minimal apps in the tests and noticed the bombing, just set the defaults to nothing.\n. I'd also like to add to this that it bombs if there's no app.coffee file, which I also intend to fix. I mean, you don't really need one if you don't want.\n. Ah bitches. Well at least it gave clear instructions haha! If you run `npm install roots -g`, does it return an error for you? If so, could you paste it here?\n\nGood call on the copy as well, I updated that and it will go out with the next release : )\n. Weird - that's all roots update does. It only returns that message if there's an error. Can you still reproduce this error?\n. You can just create a variable in the view and print it in the layout. Example:\n\n``` jade\n//- in view file\n- title = \"blah blah\"\n\n//- in layout\nhead\n  title= title\n```\n\nIf this takes care of your issue, feel free to close : )\n. Seems like this was introduced in an updated version of jade. I'll get a workaround up here in a moment.\n. Ok, so it turns out you need to use jade's layout system to get around this, as after some updates, this functionality is currently out of scope for roots' basic layout system (I'll explain more later). Here's how to use jade layouts to accomplish it:\n\n**layout.jade**\n\n``` jade\n!!!\n  html\n    head\n      title\n        block title\n    body\n      block content\n```\n\n**index.jade**\n\n``` jade\nextends layout\n\nblock title\n  | testing title\n\nblock content\n  p hello world\n```\n\nNow, the reasons why I'm currently unable to patch this block/yield functionality into the layout engine. In order to do this in a language-agnostic manner (which is how nearly everything in roots operates, in order to give you the flexibility to choose which language you like best), it would either require a second parse of the content to somehow pull out language-native variable tokens or a modification of the first parse, neither of which are good.\n\nOn top of that, it would require a custom mod for each language to (if even possible) go grab the token representing certain variables or keywords, which would be a lot of extra work to create and maintain as languages change. The only alternative is adding another compile pass on top of the files for custom roots syntax, which I'd also rather not do. Any other ways this could be implemented smoothly are welcome though!\n. OH GOD I'M SORRY GUYS I DON'T KNOW HOW THIS HAPPENED.\n\nWill be fixed in one moment!\n. manually patched - thank you for the quick fix tho!\n. Thanks for the heads up - let me check this out and I'll get back to you in an hour or two : )\n. Was definitely a lurking scope bug - thanks for catching this, it's fixed and I patched and shipped it. Roots upgrade should restore the functionality :thumbsup: \n. haha good work, took the words right out of my mouth. hope you enjoy roots :smile: \n. Can you try running `npm install roots -g` and paste the output here if it was an error?\n. Super weird, not sure what's going on there. Roots update just runs that exact command, and only spits out the line you got if there was an error. Since it runs fine, I'm not sure how that's happening... :weary: \n\nEither way, I guess use `npm install roots -g` in the future until I can replicate that issue and figure out what's causing it. Any additional info about what OS, node version you are on etc?\n. Ah, great call. Want to put in a pull request for it? Open source contribution FTW!\n. Closed by 0016b8ed35086f7aa23295ca14501c4d48932c7b\n. Please update the issue with your code as well - I need that to see the error. Most likely you are missing a unit (percent, em, pixel) on some of your variables, based on what the error is telling you.\n. The indentation is wrong here. Look it over quickly and you'll see the issue :smile: \n\nAlso, you don't need to import nib or nib gradients, both of these are included (and extended) in the roots css library\n. Awesome, thanks for finding this out, makes a lot of sense. Docs updated to fix this issue in https://github.com/jenius/roots.cx/commit/0422f3751e8fc80281b814b7c1e437082e76db0d\n. Thanks for filing this one - I had noticed it personally a few times, but it was really getting out of hand. This is an issue with the way csso (the css compressor I'm using) throws errors. I looked into it for a while and it looks like their error handling process is just crappy, and the library isn't super well maintained although it is a really neat project. I'm going to switch to [clean-css](https://github.com/GoalSmashers/clean-css) for css minification until this is resolved.\n\nThis fix will go out next release :smile: \n. Excellent - thanks! If you can't find it right away feel free to drop a zipped up copy of the project that produced the error in here and I'll hunt it down. Jade should report filenames, I am passing them in the jade compiler.\n. Second comment closed by 0016b8ed35086f7aa23295ca14501c4d48932c7b\n. Any update on this? I'd consider this issue closed except for the comment you had about the jade error. If this can't be reproduced, I'll close this up : )\n. Sweet, thanks Sean!\n. Could you add some reproduction instructions so it's easier for me to track it down?\n. Hey, so I tried doing this and I'm getting like 5 errors, but they are all very clear and include a full stack trace. Perhaps this will resolved in a recent update? I have put some fixes in for error handling recently so that might be it.\n\nIf you can confirm this isn't happening anymore, could you close?\n. I know! I can't figure out why - I'm pretty sure I have it in the right spot in the package.json file, but npm just isn't installing it for me. Any thoughts on this?\n. First of all, thanks so much for looking through the code and for this fantastic pull request. It makes me so happy to have people pulling apart my code and checking out roots. Most of these changes are fantastic, and I'm definitely going to merge at least most parts of this PR. A couple things I noticed you did here that I don't totally agree with:\n1. Commas after rather than before lines: for lists that frequently change or are added to, having a comma before rather than after each line makes for fewer mistakes. If you can make an argument that convinces me otherwise, I'll gladly concede - this is just a practice I've picked up through a bunch of coding and it's been very helpful so far.\n2. Semicolons everywhere: although I know it's often touted as a good practice to always use semis in javascript, it can also be useful to understand how automatic semicolon insertion works in the javascript parser in order to avoid unnecessary extra characters. Don't get me wrong, my semicolon usage is sporadic and could definitely use work, but some of your additions here are not necessary and are just adding extra characters. This article is a great related read: http://jamesallardice.com/understanding-automatic-semi-colon-insertion-in-javascript/\n3. Double vs triple equals: again, it's often stated that it's a best practice to always use triple equals, but if you understand the difference between double and triple equals, you'll find that there are mant situations where the double equals can be used safely, and in fact often to your advantage. This is a great explanation of the two: http://stackoverflow.com/questions/359494/javascript-vs-does-it-matter-which-equal-operator-i-use\n\nAs for your request for changing to coffeescript, I'm a little conflicted. I do thoroughly enjoy coffeescript, and always use it when coding for the front-end, but in this case, I'm actually happy that I didn't use coffeescript for the following reasons:\n- The roots codebase is almost like a work of art for me (albeit a work of art that has plenty of work still to go), and having total control over how everything operates is a very appealing concept in this respect. It's easy to write clean coffeescript that compiles into something that really doesn't look that nice, and this bothers me knowing that what's under the hood is a little messy.\n- Not everyone who writes javascript is familiar with coffeescript, but everyone who writes coffeescript does know javascript. By having this project written in vanilla javascript, it makes it more accessible to contributions.\n- If I wrote this in coffeescript, it would need to be compiled before running each time. This just adds one extra annoying step for me when working on the project and for anyone else when trying to set it up.\n- Writing this large of a codebase in vanilla javascript has helped me understand a lot of the finer and subtler points of javascript and how to make vanilla javascript look and work well, and I never would have had those benefits with coffeescript.\n. Checking for undefined is the one place that I do use the triple equals, for this exact reason. You have two options here:\n\n`typeof variable === 'undefined'` and `variable == undefined` -- the section option looks a lot cleaner to me.\n. And your point on ASI is definitely great, I agree. I'm going to pull this in and try to merge it with a couple small edits today. Just wanted to thank you again for taking the time to look over the code and for making so many fantastic points and suggestions : )\n. Wrap-up: I merged most of these changes. The semis are a good call - there's no reason not to have them consistently. I also like the newlines at end of file. The `typeof` fix you put in was almost right - it seems like the best option after doing a bit of research is `typeof whatever === 'undefined'`, where you had a double equals rather than triple. I moved the commas to the end as you suggested, although I'm still not totally sold on this. And finally, I re-compressed some of the one-liners that you expanded, as I think there is readability value to one-lining very short expressons.\n\nOverall great work - thanks so much for making these contributions, and the many others I've seen coming in from you Sean. I can't express how happy it makes me to see people using and looking over code that I wrote. Your time spent on this means a lot, even if only just to me : )\n. Awesome - you are totally right. Great pull request\n. Again, great suggestion. I would definitely be down with using jsdoc. This wouldn't be _super_ high on my priorities list just because most people won't see it, but definitely worth keeping as a open issue to bother me until I get it done. Would more than welcome any pull requests contributing help with this for any file : )\n. I really like the look of transformers. Being used to tilt in ruby, I actually was looking for something like this when I started working on roots, but didn't find a stable one. It worries me a tiny bit that this one is so young and not super heavily used or watched, but definitely looks like it might be worth a shot.\n\nI really like the idea of handling compilation externally, and this would in addition add a ton of extra potential languages to roots' capabilities. Thanks for the suggestion!\n. Totally right, I just noticed this the other day. This is a bug for sure. We did have it working in a previous version though, which is strange. Ping @samccone on this - we'll make sure to have it resolved soon. Pushing out a release with a number of other fixes this week, hopefully I'll ship a fix for this with it :thumbsup:  \n. This still doesn't work...\n. Ok, I pulled it down and the 'file added' test is indeed failing. I also refactored the tests file to be a little more dry for future work, and changed the args to accept an object instead of individual params, because that shit was driving me crazy -- I'll throw up a PR for that in a couple minutes.\n\nWhat's happening is that the test fails the first time you run it and creates the \"creation\" file. The second time you run it, as soon as the \"creation\" file is there, the test passes. So every other time I run it, the file added test fails, which probably means something is broken...\n. v0.8.18\n. Fixed by 90f0f6fc63127a525d4860b199ae69d27921159d - thanks to @samccone for amazing work on the updated watcher, and i found a little bug in my code that was also messing this up a bit.\n. This should be fixed in the latest release - the shell script now requires sudo to run : )\n. Thanks for confirming this one - that regex specifically was where I thought it would be. You did some great work tracking this down, and if you want to take a shot at sending in a pull request for a fix, you should definitely do that - you deserve some credit : )\n. Could you rebase these two commits together? It's good form for pull requests in general and will be good practice : )\n\nhttp://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\n. I'm deviously plotting out a huge cms piece that will ship separately but connect seamlessly. More info about that later ;)\n. It definitely will be. All it requires from the core is handling for static and dynamic content, and it reads through the folder and spins up a CMS based on that. Got plenty of work to go there, but it will be out in the next month or two for sure.\n. Definitely agreed, good idea. Some major refactors are going to come along with this, starting this week. We might want some sort of roots organization at some point to keep track of the repos too...\n\nMy end goal is to have roots be able to handle any sort of static compile workflow with any tools in the back end, and have it be opinionated based on the settings we implement for the initial generator. This way the code will be super flexible if you want to go there, but the defaults will remain the same as they are now. A lot of under-the-surface changes for great good.\n. Update: this is very close to finished. It's functional, but the code isn't quite as clean as I'd like it, and tests aren't finished for this piece yet. I slimmed down the spec even further - any template with front matter is automatically treated as dynamic content, no specification in app.coffee needed. I'm pretty excited about this update though, really sweet.\n. Pushed to master and deployed to npm. Whoo!\n. background-image isn't a mixin, which is why this doesn't work. if you declare it as a css property (use a colon rather than parens), it will work. and this should be filed in roots-css, not roots core\n. ![sheeeeeeeyit](http://www.lolz.se/fun/clay_sheeeit.gif)\n. commit that shit\n. This should be resolved on master, saw the same error though in testing.\n. Fair. Where would you suggest we put bower installs? I feel like making another components folder at root is pretty awkward. Maybe a vendor folder?\n. I'm good with that. Do you want to make that change and pull request it? I can do it if not, but you've been making some great contributions so far :smile: \n. Closed by #105\n. Good call on the requirejs thing. I'm sure there's a way around this, let me play around with it a bit before merge.\n. Nice new profile picture\n. can you reopen the one in the roots-css repo?\n. Really weird. Upgrade to the latest version, I just shipped a new one this afternoon with a number of fixes for things. But there should have been no breaking changes with any of the updates, and these errors don't appear to be related.\n\nThe first error makes no sense that it would appear on roots watch - the express project template is not accessed in this process. Either you are doing something really strange or the code is seriously whacked out. I could still take a look at it, but you'd have to bundle up your project and drop it here in a zip file so I can pull it down and take a look - it has to be a serious issue with the project or with your system setup.\n\nThe second error tells you exactly what the issue is - your project is too big, and you computer can't handle watching all those files at once. Googling this would show [an answer](http://stackoverflow.com/questions/8965606/node-and-error-emfile-too-many-open-files) pretty quickly. But it's more than likely that something weird is going on with this project as well, so if you want drop that here too and I can debug it further. This should only happen if you are dealing with 10,000+ files, which seems unlikely.\n. No worries - but yeah having `node_modules` in there could definitely mess some things up. No worries, things like this happen, and we are always happy to help. Sometimes you just need [a rubber duck](http://en.wikipedia.org/wiki/Rubber_duck_debugging) anyway. So good to hear that you are enjoying roots! :thumbsup: \n. I'm into this. Can you add this to the \"add additional deploy adapters\" ticket? The whole deploy adapters deal is still not 100% polished yet\n. Closed and added to https://github.com/jenius/roots/issues/79\n. Definitely agreed here. Was thinking about this a while ago but never got around to it\n. Anyone have thoughts on the best way to do this? Should I be pinging the npm repository directly? Any examples of npm scripts that do this already? If there's a convention, would be easier than rolling me own :smile: \n. Awesome, I'll pull that down this week and see if I can finish out a couple pieces\n. I get what you're saying but I still don't exactly agree. I might be mistaken, but it seems to me like not too many people have `npm update` on a cron job, and it would be super easy to install roots and never update it because you just don't know when an update is out. A small notification when creating a new project that there is a new updated version doesn't seem to be super invasive to me, and the only request it makes is to npm. Additionally, it doesn't auto update everything (like `npm update -g` would), it just notifies you that there is a new version and you can choose to update if you want.\n\nIf people did find it invasive though, I probably should have a way to turn the feature off - does that sound like a reasonable way to handle it?\n. Really great and insightful comment. A few points as a response:\n- I do agree that it should be a separate piece, which is why I built it as a separate package outside of roots. Very easy to take out if npm adds this functionality, but npm doesn't have this functionality, and in my humble opinion it is  very useful for staying up to date with new versions of your software.\n- Great find with update_notifier, I was looking for existing solutions like this but didn't come across this one. Definitely going to check it out, possibly use it instead.\n- Is this something you are really interested in making? Theoretically it wouldn't be too difficult. Would it only check global packages? Would it be a tool you could run, or was automatically run inside a node project for its dependencies?\n. @Hoverbear Read through the issue - it's not for updating it, it's for notifying you that there's an update available\n. If you can replicate it consistently, could you zip up the app and post it here so I can take a crack at is as well? I've never seen this...\n. Yep, you right. Great find. I'll take a crack at it - feel free to give it a shot too if you want.\n. Fixed on master by 4d9e534672ead2fb9e206552378935ac78f7793e\n. Could you upload a sample project so I can tinker with this? This actually appears to be a pretty rough issue by the error message...\n. No idea... this seems like a massive edge case, but if you can figure it out you will achieve the edge case bug squasher sword of invulnerability +100. I'll assign it to you.\n. Can't replicate. Post an example?\n. The only reproducible instance I have found of this is when you have the layout in a folder that's ignored, but the layout itself is not ignored. Is this what you have going on by any chance?\n. Have you made sure that the layout is ignored?\n. Yes, you need to ignore it in app.coffee, since layouts are not supposed to be compiled. Just add `layout.jade` to the `ignore_files` array and your problem will be resolved.\n. Yeah try spraying miracle gro on it, that usually does the trick\n\n![](http://static2.wikia.nocookie.net/__cb20121109193118/itsalwayssunny/images/4/43/Charlie's_Mom_Has_Cancer.jpg)\n. Closed by 596e49a38afbf9bf5e7ced0593d7b7dfde73fb12\n. Hey so a couple comments here:\n1. I really like the use of prompt. I should probably be using that in some of the other deploy recipes, honestly.\n2. I don't like asking for a password in here, seems to invasive. I think we should assume that they are able to create a github repo on their own and add it as the origin. We could check for the presence of an origin branch and if not, tell them to add one, linking to github help. This would eliminate a bunch of extra logic too.\n3. Otherwise this looks great. Have you tested it? Is it working?\n. Ok, no worries. Just checking up on this, would love to get it merged in! I'll be on the lookout for updates : )\n. great PR - thanks @jpsull - I'll test this and merge soon!\n. Dude I am seeing this as well, it's absurd. Good catch, and I'll be looking out for this. I see it happening almost totally randomly, but it _definitely_ is happening.\n\nAlso seeing the server sometimes crash like that. So bad. This is a high priority one for me\n. Yeah but what is weirder for me is that these files are being watched at all after having been ignored. I'd love to figure out why it's going down rather than just try/catching it, ya know?\n. You know what, we're not ignoring anything. That could be the reason. During the switch to monocle, the injection of manual ignores must have been dropped. :ghost: \n\nhttps://github.com/jenius/roots/blob/master/lib/watcher.js\n\nI am ignoring the files out of the compile process though here: https://github.com/jenius/roots/blob/master/lib/roots.js#L75\n\nLet me put in a fix for this right now and ship a patch. We're due for a ship soon anyway :shipit: \n. Ok, this should be fixed now. I restructured the way files are watched and ignored, it's a lot cleaner and nicer now. I also added an `ignore_folders` property to the app.coffee file, and added `.git` to that instead for all new templates. Old templates can solve the git copy problem by adding `exports.ignore_folders = ['.git']` to app.coffee :smile: \n. :tada:\n. Hm, interesting. Wanna send a PR for this? If not I'll put it on a branch and give it a try.\n. Ah weird, I haven't seen that before. Thoughts @samccone?\n\nCould you try to isolate the issue and give us specific instructions on how to reproduce it? This would help us patch up the bug quicker :smile: \n. Ok hold the phone, we're in disaster control at the moment. Fix will be up shortly.\n. Ok, we are back up and running, sorry for the delays. Thanks for bringing this up @dingyi! Update roots and everything should be running fine.\n. Just kidding, we still are having a few issues with the watcher. But it's not bombing!\n. Ok, just shipped a fresh version and we're clear :smile: \n. Doesn't run correctly - check the travis build\n. Ok, so I think the way to handle this in general is to make the directory name configurable, which I know is a lot of what you were working on in here. I don't think I'm ready to set it to `.public` yet just because of a few conventions around serving from the public directory, but I think making it a configurable value is definitely the best first step. Going to get this merged in soon for sure.\n. @slang800 refer to my comment above. im not 100% sold on it, but im not totally against it either\n. :tada: glad this was worked out! thanks so much @slang800 for helping out here\n. I'm into that. I was prevented from being able to do it before now because of the way layouts were handled, but now that the compiler interface has been simplified at version >= 1.3 we should be able to do something like this.\n\nThe only thing I'd want to keep in mind is the plugin interface, which is crucial for me at the moment. If we move out compilers, we can't lose the plugin interface : )\n. Ok, so I've spent some time thinking about this and I'm about ready to start this process. I see a couple pieces that I feel are low-hanging fruit:\n1. **Deployers** - These should be broken out to their own node deployment library and required into roots. Like almost everything else that's flexible in roots, this would be a simple adapter pattern implementation.\n2. **Template precompilation** -- although right now only jade templates are precompiled, I'd like to make roots available for use in a variety of languages, which means precompiling templates in those languages as well. This would fit the same type of adapter pattern as everything else, and would essentially be a [transformers](https://github.com/ForbesLindesay/transformers) specifically for precompiling templates.\n3. **Client-side package managers** - like the other two, this is another situation in which there are a variety of options different people prefer, and there needs to be a unified interface that could be managed with the adapter pattern. Right now it supports bower and cdnjs, but there are a variety of other client-side package manager that people may want to use like [component for example](https://github.com/jenius/roots/issues/171) that we'd like to be able to easily support. The only requirement here would be the ability to customize the download directory so they all push installed scripts to the same place.\n\nEssentially what we'd be doing here was providing a sort of ORM (not really but you know what I mean) for these three needs - deployment, template precompilation, and client-side package managers. Each of these libraries would provide a consistent interface to a variety of different libraries, and make it easy to pull request in or add additional libraries as they emerge.\n\nI'd like to get started with this process soon - if anyone is interested in tackling one of these let me know and the project lead is all yours. If nobody steps up, I'll slowly crank through them all myself. I have tentative names planned out for each one : )\n. Closing this issue as the process has already begun and I think feedback has been offered.\n. @samccone could you take this one down whenever you have a moment?\n. Can we close this one?\n. Any progress on this one? I think we have well under 10 roots users on windows, but it would be nice if it did work : )\n. Thanks for checking this out @declandewet -- @Daiz- are you still seeing this? @samccone have you checked this out?\n. This is great - thanks for the insights @L8D - this kind of stuff really helps when diagnosing these problems :moneybag: \n. I'd love to know if this is happening still in v2.0 and up - I feel like it shouldn't be. Any updates @Daiz- or @declandewet ?\n. Ok, I'm going to close this specific issue out then. If anything else comes up definitely open a new issue though!\n. Definitely would not want to scope them directly to window, probably under some namespace to minimize the possibility of overwriting variables. Perhaps something like `locals` or `config` would work for the namespace.\n\nThis can be done manually for now, by doing something like this in any jade file:\n\n``` jade\nscript!= \"var example = \" + example\n```\n\nThis will bind a variable called \"example\" in your app.coffee file to window.example in any javascript. I feel like doing this manually when you need to might be an easier way to handle the situation - the only other solution I can think of is to have roots automatically compile a statement like this into your html, or to automatically write extra variables to all your js files, which seems pretty dirty to me all around.\n\nAny thoughts anyone else - @samccone @slang800 ?\n. I feel like it would be easier to set it as `window.api_url` actually in the main.coffee file, then you could access it from anywhere, rather that setting it as a view helper and pulling it from there...\n. ping @samccone @slang800 \n. What do you mean out of scope?\n. Great to hear this @slang800, I'll keep bower around then. I've already built out most of the cdnjs wrapper I want here this morning:\n\nhttps://github.com/jenius/cli-js\n\nWill probably have some sort of integration, not sure how to balance this one and bower though...\n. The only issue I have with this is the vast amount of manual effort it would take to write this and keep it updated. Are you saying have some sort of tool that generates this stuff?\n. Yes, it's a different package manager option. And you can use `roots pkg copy jquery` to grab the link and include it yourself. I essentially was just making the package manager you choose configurable. I personally prefer cdnjs to bower, and I assume other people might like other ones (maybe ender, volo, jam, etc) - so turning package managers into adapters I think is something that would be useful rather than having only one possible option.\n. Great work, never would have found this because I stay away from spaces in filenames like the plague, hah. Thanks for taking the time to tinker with our tests and for sending in a fantastic PR, and your username and avatar are also of very high quality.\n. Well that's strange. Travis told me it was all set, and as soon as I merged this, it broke all the tests....\n. Never mind, it was something else. Fixed.\n. Hey hey, good to see you again here! A couple things:\n1. I don't want to hit coffee by default, maybe this should be a separate option?\n2. Let's go over the git-fu required to get these commits cleaned up. Want me to write out the steps here or go over it through chat somewhere else?\n. 1. Because I don't want to mess with the express defaults unless people specifically want that.\n2. Yeah, you're going to be after an interactive rebase. [This article](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) might help : )\n. Hey @Hoverbear - are you planning on making adjustments to this PR? Just a quick status check\n. I am definitely interested in having it as an option, just perhaps not the default (don't want to force cs on people if they don't want it). I'll close it for now, but if you want to take another crack at it it would be awesome!\n. This is in the works on the `multipass-compile` branch - currently looking solid and tests are passing.\n. This has been shipped in the latest release\n. I don't think it's quite there yet. I'm not totally happy with tmpl-precompile and would like to have our own wrapper, but for now jade's abilities to do this are not enough.\n\nhttps://github.com/visionmedia/jade#browser-support\n\nIt requires a runtime file to be included, and I need to loop through the folder creating a global variable and namespaces for each file. Currently, this is what tmpl-precompile does, so it still is pretty useful as far as not reinventing the wheel.\n. That's exactly what I meant, it still needs a wrapper to do this. This is exactly what tmpl-precompile does - it adds the necessary functions from the runtime file, then reads through a folder, pulls out the templates, compiles them with jade, and organizes them into namespaces under a `window`-bound main object.\n\nI feel like it's possible that jade could in the future have an option to automatically add the runtime file, as you mentioned this is a fairly small piece of the process. It's not really a very long or complicated process, but it still does need to happen.\n\nI think that we could write a little wrapper to do this that would be more concise than tmpl-precompile, but I'm working on a lot of things at the moment, so since tmpl-precompile works fine and doesn't significantly slow anything down, I figure sticking with that for now can't hurt.\n\nWould you be interested in writing a tool to replace it?\n. Sure - you can add it to `lib/precompile.js` :smile: \n. Oh yeah I wasn't planning on removing the project structure, I just want to remove the _requirement to have one_. Everything will appear to be the same after this change, but you will be able to also run roots on a single jade file sitting in a directory and have it compile without throwing all sorts of errors about how it needs layouts and app.coffee files etc. Hope that makes a little more sense\n. This has been shipped in the latest release\n. This was resolved and a fix was shipped a few days ago. Just cleaning up.\n. A few small bugs with the handling for dynamic content, and a large bug in error handling that was suppressing errors\n. yes, there are some strange issues after the recent upgrade - i'm working hard to iron them out. what's strange is that all my tests are passing and it seems to work on smaller projects but not large ones. I'll have a patch shipped soon :heart: \n. It was not, but thats interesting - what issues were you seeing?\n. This should be resolved in the latest version. Thanks for the heads up!\n. Awesome, this is so fantastic. Huge contribution here. I'll look over this as soon as github is back up and I have a second. Thanks so much for this great work @slang800 \n. Looks like it might be easier to review with a little rebasing - are you all set with interactive rebase? It's a weird thing that took me a while to pick up is the only reason I ask, we can help if ya need :smile: \n. excellent, tests passing locally? i know travis got effed by github being down for a bit\n. No worries, I'm going to pull this down locally, run it through a couple more tests, make sure it's passing on my machine as well, then merge\n. Yep, looks great. Thanks Declan!\n. The test suite fail is on me not this PR. Not exactly sure what went wrong but something randomly crapped out. Looking into it now, will have a fix up shortly\n. Got it - it was a jade upgrade that broke it. Downgrading the jade version and filing a bug in a few moments\n. haha this is specifically for marking the place where the page content is injected into the layout, trying to make it most intuitive :rabbit: \n. Because that would bind it too hard to jade. You _can_ use jade's built-in layout system (the --min template has it as a default), but I don't want to make it less extensible\n. haha how about `!= content`\n. isn't that a good thing? this is code for layouts that we're talking about...\n. :money_with_wings: \n. no reason for the colons, this isn't ruby so there are no symbols. I do like the idea of being able to yield different blocks too, but that requires an expansion of the layout system\n. I agree, but it's only necessary if you aren't using jade so it's not that high on my priorities list at the moment because I've gotta assume a very large percentage of people using roots are also using jade\n. Yeah, you are definitely correct. This only happens when you add new files that you have to restart. It's on my radar for sure but I'm in the middle of a few refactors. Will get to it as soon as I can!\n. Hey @tokki - you are right, if you're recompiling a large number of big files it will take longer. When you are using `roots watch`, as long as the file is not ignored, it should only compile that single changed file which will speed it up. But I am acutely aware that if you have a gigantic project, roots does not perform at optimum possible levels.\n\nThe reason I can't have it just compile the single file that you changed every time is because many times files have dependencies. For example, you might have a partial that's included on your index page - if you change the partial, the index page would have to be recompiled. Being able to detect what depends on what like this requires a sort of **asset graph**, which is something I will be working on and integrating into roots in the future. This is a large and difficult project though, so it will take a bit.\n\nFor now, I would assume that if you have an absolutely gigantic project that has to compile often, roots might not be the best option _yet_.\n\nThe other possibility is that you have a lot of files that never change - in this case it's easy to ignore them and drop them back in later. Just use the ignores in app.coffee to make this happen.\n\nRef #149 \n. Hey @bendangelo, good catch, seeing this as well. I'll have this patched in a minute\n. Resolved by b999abef0f35d6b7042852838a0c2bdd83bc7ccd - sorry about that. Update roots for a fix or just change the \"layout\" variable in the front matter to actually reflect the path to the `_single` layout, as such:\n\nold:\n\n``` jade\n---\ntitle: hello world\ndate: 1/1/1970\nlayout: _single.jade\n---\n```\n\nnew:\n\n``` jade\n---\ntitle: hello world\ndate: 1/1/1970\nlayout: ../layouts/_single.jade\n---\n```\n. So I'm entirely winging it here, but I started messing around with some of this stuff this weekend and came to the conclusion that actually parsing each language to generate an AST wouldn't actually be that helpful. For example, in stylus the biggest pull is the `@import` statements, in jade I need to get layouts and partials. Almost all of the things I need most are not built directly into the language and are actually features of the preprocessor, which is why [asset-graph](https://github.com/One-com/assetgraph), although brilliant, is of little use to us.\n\nThe way I started doing it was with regexes. I'm fully planning on putting up the code I have early early so I can get you guys' input and help with it, but I barely have anything at all now. It's essentially a structure where each language has a folder, and in it, files. The files are named by the asset they detect, and export a regex source which can be used to scan the source code for that particular asset, and the match will be the asset path.\n\nI know it's quite basic, and it makes me a tad bit nervous not to be running a full parse, but I just don't feel like it's necessary to tokenize the entire language just to pull out a very small number of things we're relying on.\n\nI also definitely want to make it super extensible, so that adding languages is just a matter of creating a new folder with matchers and writing tests.\n. Woah missed a lot here. So I guess my last comment didn't really ring true to anyone, but the following discussion is _exactly_ why I though it would be easiest to build it that way.\n\nI don't want to have to subclass node core modules or fork a compiler and figure out its inner workings every time we need to add support for language to the asset graph. I want a single interface we can use to parse any language, and what that boils down to is regexes (unless we want to build a custom parser for each, which seems like ridiculous overkill).\n\nIt's important _not_ to think about solving this problem for one particular language, but rather for any language we might encounter or that might be used with roots.\n. As for the structure of the AST output, I'm not 100% on this, but good to see you guys' suggestions. If I had to take a stab at it, this is what I'd go for:\n\n``` js\n\n{\n  root: \"/Users/jeff/Desktop/whatever\",\n  files: {\n    'views/index.jade': {\n      deps: ['views/_partial.jade' ]\n    }\n  }\n}\n\n```\n\nPretty similar to what you guys have proposed, but added a couple more properties just to make what's being accessed clear and to make it a little more extensible if we need. Also added a root path and reference everything relative by default, because it would be easy to build the full path if needed this way. Thoughts?\n. Both of the things you commented on I added for clarity. I think it's a great idea to know, for any given AST which references all its files with relative paths, what root it was generated from. I do understand that in roots' particular situation, you almost always just read `process.cwd()` and get the same result, but I feel like it's good practice to make sure everything in the data structure is clear.\n\nThe reason I had deps in there was about the same. It makes it extensible if we ever do need to add anything else, without breaking everything, and makes both the data structure and the calls to it clear on what you are getting.\n. In my mind, including the root once is far better than repeating it for every single file path. Keeping things DRY : )\n\nFor the `deps` piece, I could be convinced otherwise, but I feel like the extra clarity and potential extensibility of using an object there holds merit. I don't have an answer at the moment for what else we might add or I would have said it earlier, but this project is still in very early stages, so I can't say I'd be shocked if we didn't 100% on the requirements.\n. I'm still on the regex train over here. I'll post my take on it soon once I get a chance to clean up my initial implementation. What you started with there is sweet though for sure\n. @slang800 agreed with point 2 that you made -- that's exactly why I think regexes are the way to go. Regex works with every compiler - we just parse the file contents. Also, I feel like the detection for jade and stylus will be _super_ easy. `@import` and `\\ninclude` are pretty simple to pull out with a simple regex.\n\nFor point 1, if we are going to parse the _compiled_ html and css, we might be able to use https://github.com/One-com/assetgraph for this...\n. For your point @slang800 it would detect the language of the file, and parse it for that language's specific grammar, defined by a regex for each construct. So if you had the text `@import` in your jade, it would do nothing.\n. Then we would need a real good regex. That's a super edge case though...\n. Hey @slang800 - I know it's been a while on this, but do you still think we could do through by patching fs? If it was possible, it would be a nice way to do it. Have you worked on this prototype anymore?\n. Ah you're right. That is not a feasible way to do it then, is it. I really want to return to working on the asset graph, but am in the middle of some large refactors to the core at the moment. But will be more active on this soon!\n. Hm, if sean's solution does give us dependents per file, it is a valid point that _not_ having to write an additional static analysis tool for every language we support would be a large benefit.\n. Woah, this is great. And yeah that sounds perfect - thanks @slang800 for the hard work and excited to see this starting to come together!\n. Closing in favor of #586 for now\n. Hahah I love the last paragraph. This is a really interesting idea though, I'll have to think about it. Breaking windows is somewhat of a concern, but it's true that hardly anyone using roots is on windows.\n. http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback - kind of funny that node's symlink util only works on windows O_o\n. does anyone know of a linux/mac node symlink library, or do we have to resort to `exec`?\n. So I assume you meant that this would only happen on `watch` since assets would definitely have to be copied on `compile` -- no?\n. Yeah I want to jump on this soon. I'm not really sure how to mitigate the bower thing. I don't really think it's super appropriate to namespace it under roots at all, but I do like being able to drop the packages into `assets/components` rather than just `components` at root.\n\nI also would like to be able to expand this so that people can use other package managers if they want. I would _love_ to get a possible integration with cdnjs like I mentioned in #132, and I know there are a couple other package managers that people might like to use - if I could make that interface extensible, I feel like it would be a much nicer time for everyone.\n\nI like the idea of roots pkg - this is general enough that it can apply to any package manager, and it's short. If everyone is good with that, happy to make that change!\n. That being said, I'm not seeing the issue with it not exiting properly, just tested it. Could you add some reproduction instructions?\n. Glad you worked this out! You can wrap the values of front matter in quotes to make weird things like this less likely to pop up - I usually end up doing this. Even though it may just add extra characters sometimes, it will often save you from whack issues like this one :sheep: \n. Haha my first response was good, if anyone is using bootstrap with roots, I will cry. But that aside, it's probably valid that I should add the ability to not use axis if you really dont want it for some reason\n. I am happy to sincerely answer your question: it is because I don't like bootstrap. For more details, see this answer I made to someone asking a similar question: https://github.com/jenius/axis/issues/17\n\nAxis is open source, and you are welcome to fork it and make anything you want. But if you do, and you turn it into something terrible, all I would ask is that you do not purposely associate me with it.\n\nIf you care about good design and craftsmanship when building websites, I think your energies would be much better spend expanding on axis and building stylus-based, modular, and opinion-free css patterns than porting bootstrap. I'm happy to discuss any suggestions anyone may have for it, but if we are going to continue this, let's please do it in the correct repository.\n. Clean html was a huge motivation behind axis, like you mentioned here @declandewet. The other big piece for me is flexibility. While it's fairly difficult to strip down bootstrap and change options to make it your own, axis was built with the sole purpose of being transparent and flexible. It came from my work at an agency, where every site we build is vastly different. I wanted to have some way to encapsulate css patterns that kept the source clean and was customizable enough to fit anywhere between brands like CMT to Target.\n\nPoint well taken though @slang800 - I do understand that it's possible to use it well, but I see it used poorly so often that it doesn't strike me as something I would encourage people to get after.\n\nFor @L8D, javascript plugins _should_ have nothing to do with the css underneath, and bootstrap is no exception. You should be able to bring in the JS plugins without having to also import all of bootstrap's css : )\n. I'm going to close this specific issue just because the actual goal is axis-specific rather than roots-specific. I'll open up an issue in https://github.com/jenius/axis and make sure that this change is made for the v2 release of roots. I think the way to get it done is to have options for both in the API - if you want roots to be automatically imported, you'd call something like `axis.implicit()` and if you want to be able to import it yourself where you want, `axis.explicit()`, rather than the single default implicit function call that it has now.\n\nThere was some interesting unrelated discussion in here though, if anyone wants to open a new issue to talk about any of it, you are more than welcome to do this : )\n. A version warning appears whenever you run `roots new` - that should be enough I think. When you manually upgrade you should be checking the version number and making sure your stuff is up to date. That being said, I should probably have a changelog.\n. Got it, and definitely agreed. Perhaps adding a comment block to the top of the `app.coffee` file with the roots version would do the trick here (and of course reading/detecting it on roots command)? I'll definitely start maintaining a changelog/upgrade guide for new versions from now on either way.\n. Yeah reloading just css is a weird thing - not as easy as it seems. Livereload attempts to do this, but in my experience with livereload, it was fairly faulty and I found myself having to frequently manually reload the page which for me was way more of a pain than just having it auto-reload for me.\n\nReloading just css means that current styles on the page need to be stripped and new styles need to be injected. Like sam mentioned, this means roots would need a thorough knowledge of where any and all style definitions on a page are so it can strip them and load in the new ones.\n\nI would definitely like to make this happen eventually, but I'd say this issue is low priority for me, just because of the large amount of effort required to implement and the fairly small payoff\n. Already in there. You can add `exports.no_livereload = true` to your `app.coffee` file and it will turn the live reload functionality off.\n. I'm going to close this one - we'll use #170 to track the development of this one :smile: \n. Love this, thanks for opening it up and starting the conversation here @slang800 - this was definitely on my to-do list and helps a ton that you've taken the initiative to jump on it. I'll review this stuff sometime today :moneybag: \n. I'd be ok with it if we could figure out a way to incorporate `r.js` - i feel like concatenating your files still holds a decent amount of value\n. This is also another spot where we would want to differentiate between dev and production. In development, I like having all my scripts in their own places - it's only when I run `roots compile` that I'd want to squash them all together.\n\nThis particular optimization might also be dependent on the asset-graph though - not super familiar with how r.js works, but I feel like we might need to make some changes to how require is referenced in the html?\n. I don't know much about using source maps to point back to original files. Is this something that will work in major browsers? The good thing about not having them concatenated in my mind is debugging purposes, but if debugging is the same this way I have no issues.\n\nRead through the article and conversation and I can't say I'm 100% with the program (did only spend a couple minutes), but would love to see more. If we were to drop AMD for CJS, we would still need a module loader of some sort - which one would you recommend?\n. Looked quickly through builder and it looks very component-specific. Are you proposing that we straight up build component into roots, or just that we have the default module loading happen differently?\n. Just dropping this in, as I think it might be relevant to discussion here: http://jspm.io/\n. Absolutely correct, and I should have logged this before in roots, I was aware of it. But since it's actually an issue with readdirp, [I logged the issue there](https://github.com/thlorenz/readdirp/issues/4) - have been meaning to try to jump in and add a pull request to fix it, but haven't had a ton of time recently.\n. Resolved in roots v3\n. Why all the way down to patch?\n. If you put `*.swp` in the `ignore_files` array it should be ignored. Not sure how you were adding it before. What happens right now is that if a file that's ignored is changed, it recompiles the entire project. Like you mentioned, this is where the dependency graph comes in, which is definitely in the works, see #149.\n\nThere is however a solution to this you can use while we work on the asset graph. There's a secret list that you can add to called `watcher_ignore_files` - if you add a file to this list it will not be watched or compiled ever :)\n. The way I'm implementing this, conflicts are no more likely than before. And yeah, let me see if I can make sure that the exports syntax stays valid too : )\n. Nope, they come in the exact same way and are locally namespaced to that file. I just pushed another commit through to the v2 branch that makes using the exports syntax also work if you prefer that (so you don't need to switch over), but it makes no sense to me to type \"exports\" before everything for no apparent reason when I can locally namespace everything and pull it that way.\n\nThe way I did it was by changing equals signs to colons, effectively making the entire app.coffee file one giant object. Then I compile it with coffee using the `--bare` flag and save it directly to a variable, which keeps everything namespaced locally but also gets rid of the necessity to use `exports` in a config file.\n. I think that's a pretty severe misuse of app.coffee, which is supposed to be for roots app settings. You could easily have another file called server.coffee to cover that functionality. I know that it's not technically illegal, but I also don't think that's in any way clean code (should be separated into different files) , and I wouldn't want to encourage it.\n\nI did add a fallback though, so it's not 100% necessary to convert if you don't want to.\n. I meant for app.coffee to be a config file. The reason I made it coffeescript was mostly so that you can write functions as locals - this is a pretty important option in my mind. If I made it something like json or yaml, that wouldn't really be an option.\n. The problem is certainly not with how roots compiles templates, its with the fact that you are asking roots to compile a file of the wrong format into a template, and as it should be, roots is throwing you an error because that file can't be properly precompiled.\n\nIf there is an issue here with anything, it's with the way roots ignores files particularly in the templates folder. Let me check that out and make sure everything is working ok.\n. Perhaps this commit will help: 0fd9904efbc998f91d3c88b23fffd2f0db0ed215\n. Yeah, you can just use a regular js file and it will work fine. Happy to add the extra template, I'll probably have it live as a separate repo that can be included as an [custom template](bfafbaa4322258fdc2b90f80c2f807c2e2c4aa06) once v2 is released :smile: \n\nClosing this for now - @ganarajpr could you open an issue or pull request to make this more clear in the docs in the [roots.cx repo](https://github.com/jenius/rootx.cx)?\n. hahah yeah this is definitely a ridiculous fake PR\n. So I actually purposely don't have a default for layouts, because I don't want to require you to use layouts if you don't want. If you remove the layouts config from `app.coffee` it won't use layouts, assuming that since you deleted it, you don't want to use them.\n. Ah gotchya, sorry I didn't totally pick that up before. Ok let me take another look at that patch, will most likely be merged : )\n. Haha I only ask because I don't want to create an issue in order to get in contact with you for anything haha - but sounds good. I opened the changes as a pull request so it will be easier to review, going to close this issue : )\n. Ok @samccone @slang800 what do you guys think - should have resolved the issues you guys brought up earlier\n. I feel like this is probably ready to merge. Tests are passing, everything is working, and we can still definitely discuss some of the features, but like you guys are saying this is a huge pull request.\n\nFor now, I'm going to cherry pick out some of the smaller commits and merge them into master. But unless there are any major issues you guys see, it seems like this is ready to be merged in :dart: \n. I'm going to merge this guys - further discussion on features still welcome though!\n. I'm definitely good with merging this, but I did a bunch more work on the v2 branch throughout today - could you rebase and make sure it's up to date?\n. I considered this when I was just starting out, but when I had used livereload in the past I had a lot of issues with the partial page reloads and it ended up frequently messing up my css so I had to go manually reload it which really defeats the point. I'm not sure if it's improved a lot since then (actually seems like it hasn't been in very active development at all), but I'd be worried if just for that reason.\n. So I'm wondering if we could take an even easier approach. If the watcher detects that a stylus file changed, as soon as the compile is done, it just reloads all stylesheets on the page...\n. We can't do that unless the asset graph is in place, which is on our list but is a gigantic project...\n. Closing due to inactivity, but we are still thinking about this\n. This would fit nicely as a package manager, which is now flexible (https://github.com/jenius/roots/commit/87934005774c463502f638e4848dde3eb529b8e6) - you can just make a new file in `lib/package_managers` and work it out from there\n. I'm going to close this for now as I don't know if anyone else uses component and @slang800 is not actively working on this. As soon as this becomes active again by all means re-open! At the moment I'm thinking there are two ways of implementing this:\n1. A new package manager plugin that can be used\n2. A custom template set up for component projects\n\nI'm not super invested in this since I don't use component, so it's not going to be a priority at least for me over the bunches of other features we have planned, but I would be more than happy to help if anyone else wants to try to take this on.\n. This would probably fit well as an after plugin for v3 - see browserify example: https://github.com/jenius/roots-browserify\n. Only question I have here is can nopt handle args without flags? I don't want to require using flags for all the default arguments. I don't see it immediately in the readme anywhere. If it does, happy to make this conversion : )\n. Oh yeah definitely agreed on the debug flag\n. Yeah, but when would that possibly happen? If someone is installing fresh, it will pull the latest version. Is there any situation where someone would get an older version after we push out this upgrade?\n. Ah, good to know!\n. If you could force push this into v1.5 and close this one, would be awesome.\n. I just cherry picked the commit into the v2 branch - if you want I can move it into the v1.5 one as well. Closing this for now though.\n. You can also just use css files, they get copied right through. Is that totally not what you're after?\n\n@slang800 I've also been thinking about exposing the core compilers' interfaces somehow through app.coffee...\n. That sounds fine, if you can work it in there it would be great\n. This is possible with the expanded compiler options API in roots v3 - whoo!\n. Hi, sorry for not responding quicker, I have had limited internet. Thanks for posting this solution and sorry you had to figure this out!\n. `echo \"alias server='python -m SimpleHTTPServer'\" >> ~/.profile`\n\nAlso, is this not exactly what roots watch does?\n. So I don't exactly think this fits with roots' functionality or should be included in the docs etc. but since roots already has a server and like you mentioned it would only be like 10 lines of code, if you want to add this in just to have it on hand I'm cool with that.\n. What would be the benefit of an independent npm module? It would just be a very thin wrapper over an existing git npm module, with a little bit of missing functionality hacked in by going to the command line.\n. Ok I see what you're getting at. Pretty similar concept to #125 - maybe we should start doing this for a few different components. Have been contemplating a roots organization to hold the components and related projects - thoughts on this?\n. Ok, someone is squatting on the roots github account right now, but it's been inactive since 2008, so we should be able to pick it up, according to [github's name squatting policy](https://help.github.com/articles/name-squatting-policy) - I already sent in a request, hoping for the best!\n. Oh thats awesome - good to know. I'll have to check that out for sprout, which is the main user of git functionality now\n. Looked at faceleg/git-basic -- looks significantly worse than what has been implemented here. There are only a couple functions, it doesn't include everything we need, and it's just a wrapper for `child-process.exec`.\n\nIn addition, having the sync options is pretty valuable to me, since almost every git command in roots would gain no advantage other than cluttering the code if it were to run as async, and shell does an incredible job of providing that option if we're going to have to go to the command line to implement this anyway.\n\nI agree that this shouldn't be part of roots, hence my comment in the pull request that this will be separated from roots in the near future.\n\nFinally, judging by the discussion on the issue you posted @slang800 it wouldn't be trivial to add the clone feature through native bindings, a assumption reinforced by the fact that there isn't a node git wrapper out there that includes clone functionality. If we could accomplish this, I agree that this would be the way to go down the line, but in the interest of moving this project forward, I think going to the command line is a fair replacement for now.\n\nEDIT: Quick check of the source for sentinentwaffle/gift shows that it actually is just wrapping a child process executing these things on the command line as well, no native bindings present. So a pull request might be in range, although it would not result in any speed or efficiency increases.\n. If either of you can figure out how to use node-gitteh or any of the other node-git native binding libraries out there (they all have the same API) to do what we need to do for roots, which is mainly cloning and syncing with remote branches, I would welcome a pull request.\n\nBut after looking through the (very confusing) docs for a couple of these native libraries, all I learned was that 1) the docs were really hard to decipher and usually documented the C functions rather than javascript and 2) none of them have the functionality we need built in, as far as I can tell.\n\nIf anyone has a suggestion that they have researched and found to have the functionality we need it would be awesome, but for now just tossing git various wrapper libraries out there and \"+1\"ing them without researching them at all isn't getting us anywhere.\n\nI'm not going to put the additional work into making this it's own library though until we have decided that we actually need a separate library and can't rely on something that's already out there.\n. So as I go through this I'm starting to realize more and more that there isn't actually a library out there that comprehensively wraps all of git's functionality. I mean, git has a staggering number of commands and options, and it seems like people have just taken a shot at random subsets of command that they need at the time, which of course is how this is starting out as well.\n\nI think it would be sort of a cool project, albeit slightly tedious, to craft up a git wrapper library that covers most of the features you could possibly need out of git and offers both a sync and async interface. This could be done in a fairly straightforward manner just by using shelljs and child-process -- the sync and async methods would almost entirely mirror each other, but both variations can be immensely useful in various situations. For example, if you look through the github pages deployer, it would quickly become a ridiculous nest of callbacks or promises if all of the tasks were async, and there's no reason for them to be - they all depend on each other. But at other times, it can be valuable to do other work while a longer process like a clone runs.\n\nI'm definitely going to move this out to it's own repo shortly -- it needs a lot of tests too. I think it could definitely be a very useful project, especially if it's very active in accepting contributions from people who need slightly more obscure functionality. Theoretically over time it would become very comprehensive that way.\n\nI don't however think this should be a blocker to the next release. It will be a really nice code readability and modularity helper, but it won't actually speed anything up or change any of the functionality.\n. Looks like we're getting pretty close with this, but the commit log needs some cleanup. Just browsed through your transformers pull request - crazy conversation. It's awesome that you're still working through all that though :fried_shrimp: \n. Arrite sounds good. Let's merge this branch separately from the asset graph though. I wish they would get back to me about https://github.com/roots because it would be really nice to have that one so we could start putting our repos there...\n. Ehh... I would still wait. We don't really know how the asset graph is going to work, exactly. We can add that later once the asset graph is further along.\n. Yeah I don't use snockets either just because I use require, but theoretically it's a great feature and I should use it. I guess this goes back to our conversation on concatenating...\n. I don't think we can remove snockets yet because that would be a breaking change, and I'm not comfortable making another one so soon after a major version release. In addition, I think it is important that we offer a way to concatenate javascript files as part of the pipeline like we have discussed at various points -- we offer this for html and css, and snockets provides this functionality for js.\n. Ok let me pull this down today and give it a run-through real quick\n. Awesome, looks much better. The only thing I'm concerned with now is the breaking change for plugins. I think we need a fallback so that all plugins don't break as soon as this is merged...\n. I've used them a number of times, and their use will continue to increase at least for me as I build out ways to use roots in a variety of different environments. But whether or not we think people are using them is not really something we can use to justify what's technically a breaking change (and you know that)\n. Sure, we can just make options an optional param. If options is a function, set it as callback, if it's an object, use it as options.\n. Ok I think I see what you're saying. I mean the immediate solution I see is to swap the order of the callback and options params. The negative of this is that it breaks conventions which is not great, but the plus side is we avoid a large breaking change. We could always slate a switch back for the next major release? I feel like there isn't a great solution to this, so we have to work with what we can get...\n. :thumbsdown: @samccone \n. That would be a major version bump, just for this small change, and weeks after we released another major version. That's not a good idea. :thumbsdown: again.\n. Excellent. So everything is good in this branch other than the breaking change to plugins?\n. Ok, I'll pull the branch down this weekend and give it a solid run-through.\n. So there were a number of conflicts that I just worked out and merged with master. Two newer tests are failing, but these were fixed by a change to master that wasn't yet reflected here. I'm going to try to port that fix in so tests are passing, then do a little more thorough testing before this gets merged. Overall looks solid though!\n. As I go through this I'm finding more and more bugs. I guess it's a good opportunity to add extra test coverage, but also means I want to be extra careful merging it. I'll probably need a couple more days to ensure that everything is coming out right. For reference, here's what I'm chasing at the moment:\n1. compile project callback being called before assets are copied (and therefore before the compile is done)\n2. html is being compresses even when `--no-compress` option is used with the compile command\n3. views and assets directories manually set rather than adhering to the config values at various points\n4. dynamic content not resolving correctly in all instances\n5. a lot of the added documentation is without descriptions\n\n... this is only on initial pass. I think in general this needs a bit more love. It's a major rewrite of many of the core pieces of roots, so it affects everything.\n\nAlso, the fact that this is a single pull request is a little crazy. This is way more than just changing roots to support transformers, I think it would be appropriate to split into what the changes actually represent, although I'm not sure if that's possible anymore with the way the commits are organized.\n. Ok all tests are passing. Will still be working on this a good bit though...\n. Ok, so I'd like to get this branch merged sooner rather than later so that we can move ahead with new features. There are two issues in particular though that are preventing me from doing so -- the two breaking changes that were made in this branch.\n\nThe first is the axis upgrade -- although it is long overdue, it does mean that the grid systems on all roots project will immediately break on release. This is a huge change, and if we introduce this, I would like for it to be with plenty of preparatory materials to guide users through the transition. Right now, jeet on it's own is not well-maintained, and it needs a major redesign of the documentation, [as has been previously noted](https://github.com/jenius/axis/pull/49). The axis core team has volunteered to help make this change, but it has not happened yet. I'm not comfortable shipping this update without also having excellent docs for the new grid system and a clear transition guide ready in the changelog when it happens. Because of this, I'm going to cherry pick the commits that do this into their own branch and pull request to be merged later.\n\nThe second is the change to the plugin interface. While I'm less worried about this because I think I might be the only one using plugins, it still is a breaking change unfortunately, and in all honesty I should be bumping to the next major version. However, in the interest of getting this shipped soon, I'd like to just bump the minor version, include specific instructions on how to make the changes required to plugins in the changelog, and hope for the best.\n\nOther than that, this branch is quite stable at the moment. All tests are passing, and a number of new tests have been added. It is doing well at compiling anything I throw at it, and @slang800's new livereload implementation is working nicely. I'm planning on merging this to master soon, building [nested dynamic folders](https://github.com/jenius/roots/issues/230) on top of it, and dropping a rather significant minor version upgrade. From here, I'd love to pursue some of our more advanced features (like assetgraph) more aggressively, and if we can get them completed soon push them along with v3.\n. Ok @samccone all the merges you pointed out have been made and the branch has been rebased off master : ) If anyone else wants to take a final look at this before merge now's the time!\n. Just pushed a patch release to master and rebased this branch off master to include the changes. This is getting merged soon, promise.\n\nAlso, i finally figured out how to use the releases page correctly, check this out! https://github.com/jenius/roots/releases\n. Ok, so I finally figured out how to ship prereleases through npm, and shipped out this branch for testing. You can pull it down using `npm install roots@2.1.0 -g`.\n\nI've been using this to make changes to http://carrot.is, which is the largest site running on roots that I know of, and which takes advantage of more or less every feature of roots that's available, and I've noticed a number of bugs I didn't catch before:\n- The compile speed seems to be significantly slower. Like at least 2 times as slow. I'm not sure why this is, but clearly I need to be benchmarking these things.\n- There are a number of errors with dynamic content specifically. The way that the project reloads when dynamic content is present is questionable: it duplicates content, doesn't update some versions, and a variety of other shenanigans.\n\nDefinitely want to make sure these are patched up before merge.\n. Yeah so let me think about what tests we still want...\n1. Dynamic content is duplicating on reload, which probably means some of the locals context isn't being cleared out. This has to be fixed before merge. I think I have a good handle on how to start tackling this.\n2. I want to know if this is slower compiling than master right now, and if so, why. I'm not great at benchmarking, but we should have something in place. There are a lot of coffeescript requires going on, that miiight have something to do with it. Might.\n3. I would love to have any tests at all in place for the watcher. I've really struggled to figure out how to test file watching. I know you have something of a handle on this, so this would be a good first place for you to take a stab at it Sam if you want.\n\nAlso the test suite is growing, which is great. We might want to break this down a little and make sure conventions between different describe blocks are set and that our utility functions are nicely separated. I'd be ok with this being broken into a couple files as long as it's still easy to run them all.\n. ``` coffee\nit 'should reload the page when a change is made to a file'\nit 'should display an error on reload when there is one'\n```\n\netc.\n. Ok these most recent commits should make the test suite a lot more reliable and easier to work with. I also added a few more compilers because it's so easy. We now support all the popular css preprocessors along with a huge range of html template engines -- more out of the box than any other static compiler I'm aware of. Whoo! :tada: \n\nStill on the to-do list before merge is benchmarking compile times and fixing up the issue with double-loaded dynamic content. Taking care of these soon : )\n\nI'd also love to get the analytics in there before we ship this update, but that is a bit ambitious since it's a pretty significant integration.\n. Ok so this is getting very close. We're running the carrot site in production on the prerelease and it's been stable so far. There are a couple weird edge bugs that I'd like to work out, and I also would like to have roots store custom templates in a separate user config rather than in the project like it does now (eek). We're slowly filling out the test suite, over 50 tests now (whoo!). I've been using edge for all my projects though and it's looking good, so I'm anticipating a merge and release soon. Any other thoughts?\n. Ok still to-do before gearing up to merge this guy (it really needs to be merged soon we're coming up on 100 commits on this release branch):\n- `post.content` and `post.contents` need to be set equal, although `content` is being deprecated\n- replace Q.js with when.js (simple change, working on it now)\n- #267\n- really thorough testing through for any bugs or breakage on any roots app any of us have made, ever.\n\nThere are still boatloads of features I'd love to have in here, but these will have to happen in the next release, because this one is overdue to be shipped.\n. Ok I'm ready to merge this today and push it out as 2.1.0. Any objections?\n. Approved on all of this, except I use underscores rather than camelCase just because it's a huge amount easier to read for me. According to [scientific studies](http://ieeexplore.ieee.org/xpl/login.jsp?reload=true&tp=&arnumber=5521745&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5521745), camelCase takes on average 20% longer to read than underscores. You'll find underscores rather than camelCase in many places throughout the codebase because of this bias I have :rabbit: \n. Haha yeah it's definitely some ruby influence, but I think ruby influence means a lot. There's a ton of emphasis in the ruby community on making code clean, clear, and readable, and I see no reason that shouldn't carry over to everything else :smile: \n. Ok there's one more thing that **really** bothers me about coffeescript that I'm going to have a very hard time getting over unless there's some way to solve it -- named functions.\n\nFor me, it makes a world of difference to have your implementation code at the top of your file, and any private functions at the bottom. Way cleaner, easier to read, and a more logical progression. As far as I'm aware, since coffeescript does not have named functions and all functions are assigned to a variable, you can't organize your code this way, so all functions are at the top, and the implementation is at the bottom.\n\nIf there were a way around this, I'd be much more likely to fold, but for me this is a massive block.\n. Eh, don't think that's relevant. In node, thankfully we don't care about IE, so I'm not sure what the excuse is for coffee not at least having an option somewhere to be able to use named functions. But is what you're saying in general that things need to be refactored into classes if we were to switch to coffeescript in order to keep them clean?\n. That seems like a ridiculous way to do it, but I do appreciate the examples of workarounds, this is really good to know. I think if we were to go coffeescript, we'd also have to make this project very object oriented as well in order to keep it clean.\n. No I don't see this as an issue, it just adds to the premise of this issue - it's not just a conversion to coffeescript, it's a conversion to coffee _and_ refactor to make roots more object-oriented and class based. Which I think I wouldn't be opposed to as long as they go hand-in-hand.\n. Since we are doing this, going to close out this issue\n. Excellent pull request - thank you @slang800 \n. I think it would be an awful idea to merge ignore files and ignore folders. I'm ok with having a single `ignore_patterns` that you can use if you want which would simply delegate to ignore files and folders, but I also think you should be able to _not_ use that and just go with ignore files and folders if you need, since that how roots actually works under the hood, and since there are situations where you might want to ignore all folders that start with something but not all files.\n\nAlso, I used to have roots structured to put the globals in a config object which I had to require when I needed them, but ended up changing to globals because it was just a ton easier and made the code a lot cleaner, since the config object had to be required pretty much in every file. If you do the Project object refactor and find that it's not simply more of a pain that works, but just warning you that this might be the case.\n. No no, thats _exactly_ what I disagree with. I'm ok with the external representation (read: what you set in the `app.coffee` file) being `ignore_patterns` (or just `ignore`), but the internal representation has to be folders and files. Doing it another way would limit flexibility, which is something I'm not ok with.\n\nUnless I just didn't get what you meant by internal representation hah\n. Situation: I have a folder called \"tools\" that I put some tools I use to build stuff or some derpy images or whatever. Don't need to compiled, add it to ignore patterns. Now any file that has the word tools in it is also ignored.\n\nIf I want to ignore a folder but not a file or vice versa, couldn't do it with a single pattern. Roots actually used to use a single pattern, and I took it out and replaced with the file and folder specific ignores because that's a much better way to do it. I wouldn't accept a merge that reverted this back, but I would be a proponent of having the default be a single property that just maps to both file and folder ignores internally.\n. Nope, not unless https://github.com/jenius/roots/issues/157 is closed\n. It will be very difficult to get me to agree with using a single array of patterns for folders and files internally. That's taking a step backwards. Currently you can be specific between the ignored files and folders, that change would take away the ability for you to be specific like this. Like I said before, I'm totally fine with presenting a single pattern array _externally_ as the default but I see no reason we should strip functionality.\n. People not having to research minimatch and experiment continually to figure out how to ignore a folder and not same-named files also is one use case...\n. Woah, crazy. I'm on vacation for the next 2 weeks so I might not have time to check it out in depth, but I'll try if I get a chance!\n. Really liking the work happening here :thumbsup: \n. Sounds good. I'm really stoked about the potential of having an asset graph. I think if we could really pull it off, it would make roots stand a very significant distance above other static compilers -- in another league, so to speak. I'm sorry I haven't been able to focus more of my efforts into making this happen recently - I have been spending a lot of time working on another roots-related project that I think will make a huge difference, and that I'm also very exited to tell you guys more about soon.\n\nI really appreciate your leadership and hard work pushing roots forward and trying to make it the best we can. I know we'll get there soon : )\n. I'll send you an email about it :cactus: \n. You could easily get a job right now, it's true. If you wanted to come work with us full time on roots, open source, and roots-related client projects, we are hiring, straight up. We've interviewed people that are probably 10 years older than you and significantly less qualified. At the same time, I don't think college is without value. Although usually they bill themselves as academics only, college is really a lot more than that. I haven't applied a single thing that I learned in college to my professional work (never took a single comp sci or design class), but I don't regret going either.\n\nIf anything, I would suggest not studying computer science, since you clearly are well in control of that already - try something different. And if that doesn't interest you because you're looking for free time to continue the awesome work you do already, no use going to college, you could just get paid to do it full time, hah.\n. I think your comment about not being able to get work without a degree in the future is off-base for sure. It's what colleges want you to believe, absolutely, but the logic is backwards. A degree is there to prove that you are capable of doing a certain type of work, and to serve as a notice to companies that you have studied X concepts and now theoretically should be able to work with them.\n\nActually doing work on the other hand is already doing what a degree is supposed to tell companies that you are able to do. So if you are already clearly able to do it, you have examples of how you can do it, and on top of that people are willing to pay you for doing it, I can't imagine someone saying: \"Hey listen, I looked through all the samples of good work that you've already done in programming, it's clear that you are good at programming, and I'm impressed by your abilities, but since you never actually went to college to learn how to program, I have to assume you don't know how to do it.\" That just makes no sense, and if anybody was that idiotic, I wouldn't want to work for them anyway. The certification means nothing, _especially_ a field where you can show your work. Value always has been, and always will be attached directly to _good work_, and never has and never will be associated with certifications and bullshit like that.\n\nOn the other hand, I think the \"trying college out\" point is a solid one. College is a unique experience in life, and in my opinion an experience worth having, even if it doesn't end up being for the full 4 years. But for god's sake don't go just for the meaningless piece of paper. Kanye West had [some nice thoughts on the topic](http://rapgenius.com/Kanye-west-school-spirit-skit-2-lyrics).\n. hahaha we need to have everyone jot down their college experience as an emoji sequence. The fact that there's no mario kart emoji is going to be a blow to mine though... but let's give it a shot:\n\n:flushed: :snowflake: :page_facing_up: :pizza: :sushi: :microscope: :saxophone: :woman: :beers: :computer: \n. O_o - ok let me know if this is coming up again!\n. Sweet - yeah I've run into that same mistake more than once with not properly ignoring layouts. It kind of bothers me that the layouts can't be auto-ignored like they are for normal view layouts, but I think it would be a bit too computationally expensive to have them auto-ignored because it would take another separate pass and read through all the dynamic content.\n\nSomething interesting to think about though. Either way glad to see you are using and possibly enjoying roots!\n. Any thoughts on how we'd get started on this?\n. Or at very least a tiny interface that prompts you to set a language if you don't have one in `process.env` already\n. Oh yeah definitely agreed. I wonder if there is one already and/or how we could find it...\n. Just a note that this will be possible though the roots extension API in v3, and will be built out as an external extension. Going to close this issue since it's very solidly on our radar and will happen, but will not be in roots core and it might take a bit to get to this so trying to keep the issues section clean.\n. Nope, not yet. I may be missing an easier way to do it, but in my estimation an extension like this requires a very complex mod to the central roots compile pipeline. By all means feel free to take a crack at it though!\n. Yeah absolutely. Could you send it to me before publish? Would love to review!\n. @Leeds-eBooks wow, this is a really impressive piece of work. nice job! That being said, the code is honestly boggling my mind. I'm having a really hard time understanding what you're doing here. Is there any way you could try to clarify the code a little? Or even a chance we could jump on a call or something and you could walk me through it?\n. No problem, and thank you for making it! Let me know when you have updated.\n. Hey @Leeds-eBooks -- yeah, I'm really sorry for the holdup. I've been working part time and had only very little time for this kind of stuff. I just read through the plugin and it looks legit. There's certainly some Babel stuff in there that could be cleaned up, and having tests in place would make a **huge** difference, but if it's working and people are using it by all means you are welcome to put it up on npm!\n. If I have some time on my hands I will certainly contribute some of these changes too :grinning: \n. Oh wow drama time! But yeah @roots unless you are going to use the account, you are squatting, which is against github's terms. But we don't want to resort to that -- we have been working super hard on the open source roots framework for more than a year now, and it would be incredible if you would be willing to donate the account to an open source project. All we are trying to do is make life easier for developers, and we are putting so much work into it. It would really mean a lot to us :heart: \n. Good lord, this is ridiculous, slightly embarrassing, and a little sad. I guess I missed a lot while I was out...\n. Oh yeah wow really ambitious project, but I like this. I don't think it should be a part of roots by any means, but it would be great as a separate project that was built to cooperate with roots _if_ you wanted it. I'm currently working on one large project that is going to sit alongside roots much like this -- something that would be a huge enhancement to roots if you wanted it, and built specifically for roots projects, but also fairly easy to couple and decouple if you want or don't want to use it.\n\nAgain, a lot like you said above. But in general, very interested -- I think this is a great idea, and would be a great fit especially once we can get the asset graph going on : )\n. I'm going to close this as it's not slated to be part of core, and @slang800 has been busy with college over the last couple months - feel free to re-open if this becomes an active area or you would like more feedback!\n. Oh ok, so I see what you're saying but there's another way that I've been using to accomplish this. For dynamic content, you can set a `layout` in the front matter to ensure that you always have a specific piece of front matter set, like the title, then use `post.title` to set it per-page. You could do this for menu options as well.\n\nHere's an example of how I make this work: https://github.com/jenius/roots/blob/master/templates/new/blog/views/_single_post.jade\n\nThat being said, I assume you tested this, and front matter variables do not override app.coffee globals? Honestly I would think that they should, but I'd have to take a stab at testing this a bit myself.\n. Ok awesome, going to close this issue then - let me know if there's any other problems you're running into or suggestions for feature requests!\n. Yeah, don't care about IE8 at all for the roots homepage, really. If you want to build a site that works in IE8, it is very easy to accomplish with roots, and I have done it quite a number of times at work for clients that require that level of support, testing through perfectly. But that being said, I would like to propose two things:\n1. Like Sam said, @cspotcode if you want to open a PR on https://github.com/jenius/roots.cx (where this issue should have been filed) to fix, that would be much appreciated. If not, I'd understand because IE8 is the worst, and to answer Sean's question 0.2% of our traffic from the last ~5 months has been from IE8, which doesn't justify the effort for me.\n2. We should add a notice that appears in old browsers noting that the roots homepage does not support them, but you can use roots to build sites that support any browser since it's just a framework. Because I do think this is important. And the fact that people are even comparing roots with bootstrap makes no sense to me since they are in no way similar, but if they are I don't want to lose any potential converts in the interest of making the web a better place ; )\n. Totally agree with you on the IE8 front, I unfortunately need to support that piece of junk for all my client projects. For me, what's important is that things are not obviously broken. If I can get to that point with IE8, that's totally good enough for me.\n\nThat being said, this is not a client project, and nobody considering using roots would be using IE8 as noted previously, which is why it wasn't resolved earlier. But in general I think we're on the same page, and I don't disagree that this should be resolved.\n\nI'm going to close this issue, and open one up in the roots.cx repo. Looking forward to a pull request if you've got time, in the meantime this will be in my backlog which I'm trying to clear out as soon as I can!\n. Would love for this to be merged soon - if I have a few minutes this week I'll add the test, if someone else can beat me to it please do :smile: \n. Hi @DAddYE - I was on vacation for the past 2 weeks, just got back and catching up on issues. I assure you we did see this and I'm going to read it over and give you a more detailed response as soon as I get my life together!\n. Ok let me give this a shot:\n\n#### Front Matter\n\nWhile I don't disagree that using the `:yaml` filter would make it more jade-like, I feel like we should stick with vanilla front matter for two reasons:\n1. Anyone coming in from jekyll, the other other decent solution for static publishing, will be comfortable with it\n2. We can use front matter in any language, but can only use `:yaml` in jade. Eventually I would like to expand dynamic content such that it can work for other languages if people prefer, so a universal solution is much more attractive to me.\n\n#### SEO\n\nWhile in theory I agree with this, we have to keep in mind that roots is a static site compiler, so this request doesn't exactly make sense. What roots outputs is files - requests don't get passed through a router that we could map short to long names in. So the best solution for this will be to just give your files long names, or to simply make genuinely good and focused content instead of keyword spamming in your URLs for popularity.\n\n#### Paths\n\nTotally agreed. This is actually quite high on my list for features to add. I would call this nested dynamic content directories, and you will be seeing this feature rolled out soon.\n\n#### File Paths\n\nI don't totally understand what you mean here, but I'm going to tentatively say this is not a good idea. There has to be a difference between dynamic and static files (dynamic files are handled very differently), and what you seem to be proposing is making every file automatically dynamic. If you need dynamic files, I see not reason not to just add in a tiny front matter block, even if it just has a title in it in order to achieve this effect.\n\nLet me know if I didn't get you on this last one and was totally off-base though.\n. Hey @DAddYE - any comments here? This has been open for a month now...\n. ### Front Matter\n\nSo I have two major issues with this. First, we need a universal solution like I mentioned before. Not every language has a yaml filter, and I'm not pledging to build one into any and every language that works with roots. Second, front matter is parsed separately from the rest of the file, and not handled as jade. In fact, it's removed from the file before the jade is parsed, and doesn't show up in the compiled result since it's just _metadata_, not actually jade content. Because of these two reasons, I have to say no to this one.\n\n### File Paths\n\nOk, I see what you're saying here. I actually just ran into a similar problem and what I did was write a small script to rename all the images so that they follow a logical order, then generate a front matter file for each one. Definitely was not part of roots with the outside scripting, but I would have needed to do that anyway because I'm hosting the images on s3 since that's a much better idea when you're dealing with a boatload of images.\n\nI think it's feasible that we could build in support for mapping all content into variables though. Would love to get @slang800's opinion on this too.\n. I'm going to close this because it's been inactive for a while, there are ways to solve any of these issues, and we aren't going to get a chance to look at this for a while. But someday we might be back here working through this feature so don't give up hope!\n. Wow, glad this was resolved and thank you for the detailed resolution report @HHSnopek \n. I'm not sure that I'm totally down with the roots-dev team name... something about it doesn't seem right. Any other thoughts on a good organization name we could use to house roots projects?\n. Yeah that was the same reason I was thinking - it would just be easier to manage as a team.\n. Would be interested to hear @kylemac's thoughts here as well\n. Closing due to inactivity. If this is moved, it will probably be to carrot\n. We need a few more details and some sample code we can use to reproduce in order to close this out @aesnyder :sheep: \n. The way with the least code that you can reproduce the issue with and the full text of the error being thrown would be great. This is the case for any and all bugs reported in open source projects -- in order to fix, we need instructions to be able to reproduce the issue :thumbsup: \n. Hey @aesnyder still waiting on any details at all that we could use to help you fix this issue. The content of the error message even would be something -- currently we have nothing. Otherwise if you figured this out and resolved it, could you post what you fixed and close the issue?\n. Ugh if this really is the case that will be the 3rd breaking change bug that we'll have filed. The latest jade versions screwed a lot of things up, but I thought I had caught them all at this point. Let me test this out tomorrow and get a fix in - really sorry about this. I won't downgrade jade in the main project though, I'd rather just patch up the holes and move forward.\n. Just tested a precompiled template with the following code:\n\n``` jade\n- foos = [1,2,3]\n\n- for foo in foos\n  li= foo\n```\n\n...everything was working fine. I need someone to provide me with a way to reproduce this issue before it can be resolved por favor :frog: \n. I'm closing this issue. We can re-open this if someone can provide me any details at all on what the problem is.\n. Ok @HHSnopek sorry I've been out on this one for a bit but I'm fairly sure I know fixes to each of your problems. All of the problems are a result of upgrading roots to the next major version (including breaking changes as any major version does) and not consulting the changelog to see what needed to be modified. Let's go over these in order:\n\n**First Error**\nYou were already running a roots app on port 1111, you can't run two apps on the same port at once. It appears that you figured this out by the later errors though, so I'll presume this is resolved.\n\n**Second Error**\nMake sure to check `app.coffee` and ensure that `title_with_markup` is defined in the locals. If not, just remove it from the view. This function is defined initially in the default template roots ships with, but you may have removed it by accident or something. Seems like this has been resolved as well.\n\n**Third Error**\nAs of version 2.0, `yield` is no longer the correct keyword for templates - this is a big breaking change and was the major reason why we bumped roots to 2.0. It can be noted [here in the changelog](https://github.com/jenius/roots/blob/master/changelog.md). To fix this, just change all instances of `yield` to `content` and it should be fixed up.\n\nHope this helps, and I'm sorry you've been having trouble migrating! Taking a look over the changelog to see if there was anything else you may have missed could be helpful. Also I know node errors looks really frightening and spit out loads of junk, but I always try to remind myself to stay calm, read the error message, and try to understand what it's telling me. Usually this will get me far enough in the right direction to fix things : )\n\nFinal note, you might want to check out the [new default app.coffee](https://github.com/jenius/roots/blob/master/templates/new/default/app.coffee) and use that instead - this will also clean up your debug output a lot.\n. Make sure you ran `npm install` in your project directory\n. The docs and video tutorials are for version 2 of roots, which is the current stable release, not the prerelease version 3 which it seems like you are using.\n\nWe aren't quite done with the public docs and such for v3, which is why it's still in prerelease, sorry about that. We're working to get these pieces ready for you guys as soon as possible!\n. Sorry, were you talking about the video on the jeet site, or the roots site?\n. Ah ok, sorry I was in v3 mode for some reason. Glad all is working well now!\n. I'm terrible at testing so take this with a grain of salt, but the reason it's this way is because I usually go for integration tests first because they cover areas that are most prone to breakage. But I don't disagree that it would be good to also add unit tests.\n. Trying to think of how we should break this down. Think a good way to start would be by command? I feel like there are a number of components that are split across multiple commands, but this might be a good place to start at least. So we have the commands:\n\n[ ] watch\n[ ] compile\n[ ] deploy\n[ ] template\n[ ] new\n[ ] pkg\n[ ] plugin\n\nThen we have other misc stuff:\n\n[ ] error handling\n[ ] precompiled templates\n[ ] configuration stuff\n\n... ugh there's so much\n. Honestly I think it will take a solid time investment, at least for me. Definitely accepting help though if you can :neckbeard: \n. This is generally in progress, I'm going to close out this issue :thumbsup: \n. I've actually been gearing up to make a tumblr extension for roots for a while. The multipass compile ability that was added for version 2.0 is going to be the major piece that enables this. In theory, if we had a tumblr parser, we could add this as a custom compiler and write tumblr tags on top of jade, which would be huge. We've already done some experiments with having roots handle shopify theming using multipass and custom compilers, and it has worked.\n\nOne of the biggest things left in the way of being able to do full tumblr dev with roots right now is having someone write a javascript \"tumblrscript\" parser. If anyone knows of a solid one that's already well-maintained, that would be a huge step forward. This is the 'difficult task' declan was referring to, and is definitely difficult, but far from impssible.\n\nIn short, we are definitely going to make this happen, and have been planning to for a while. Would love any and all help with this.\n. Not enough - tumblr-like won't make the cut. We need a _javascript tumblr parser_. I'm just not good at writing compilers, although I did get started a while ago using peg.js. If anyone wants to take a stab at this, would love that, pull down [peg.js](http://pegjs.majda.cz/), get a solid tumblr language sample and the small spec, and start tokenizing! If we can get a functional tested parser in place, the rest would be easy : )\n\nAnd yes, we'd populate it by default with dummy content, with the possibility of authenticating to bring in your own blog's content. But dummy should be good enough really for development.\n. Except it uses [a python parsing module](http://pyparsing.wikispaces.com/) and we need a js one, like peg as suggested above, so really we need to just rewrite it, unless you also want to port pyparsing to js, which seems like a questionable decision.\n. @mikedidthis we're more or less waiting for someone who has more experience writing parsers, or for one of us to have some time and/or the need to figure it out. Once we can implement a javascript parser for tumblr script, the world of possibilities will immediately open to us.\n. At long last this has been taken care of! https://github.com/nporteschaikin/sneak\n. Done in release branch\n. Hey @slang800, could you submit a patch for this to the master branch as well?\n. it's possible, but i also have a release planned before the end of this week, and we do still have a breaking change in the transformers branch which has yet to be resolved, so it would help if we could get it patched up quicker. It's not a big fix, right?\n. I'm going to close this since it's done in the release branch\n. Yeah, this is part of the issues I'm seeing specifically with the gh-pages deployer, which I brought up here: https://github.com/jenius/roots/issues/205\n\nDefinitely looking into getting these fixed up soon. Sorry! The github pages deployer is nasty and difficult to test : /\n. I haven't been able to reproduce this, so I'm closing it.\n. Ok tags are up to speed. This will continue in the future. The next release will be soon and will add more test coverage and a fix for dynamic content in addition to more fixes to the github pages deployer, which really has been a difficult one.\n. Good call. Any other guidelines you guys have in mind for contributing? I feel like it will be easier to say \"you need a test for this\" after we expand our own tests a little more, hah\n. Done in release branch\n. Oh, that's because `_*` is an ignore pattern set in `app.coffee` - it's just a convention that files with leading underscores are ignored. If this isn't your thing, you can always jump into `app.coffee` and remove that pattern : )\n. Oh yeah, that's a custom addition made via [snockets](https://github.com/pthrasher/snockets) - it doesn't come with regular coffeescript : )\n\nSorry, I thought you were trying to use requirejs there rather than the concat require. Makes sense though. If everything has been worked out feel free to close this issue :sheep: \n. Well actually either one is an option, and each has advantages and disadvantages. I find myself almost exclusively using require these days.\n. If you're looking to concat, i'd go with snockets. You can use use [r.js](http://requirejs.org/docs/optimization.html) though if you want to do this through require, although I don't have it deeply integrated into roots.\n\nGenerally what I do with require is break my scripts into logical sections and only bring them in on pages where I need them. You can do this intelligently by reading a body class or data attribute : )\n. I haven't seen this issue and have been working heavily with the most recent version of roots and a lot of media queries. Is there any way you could put together reproduction steps so we can isolate the issue?\n. I'm not sure I totally understand what you said in the last message...\n. The prefix is no mysterious roots feature, it's right in `app.coffee`, a part of the ignores. I have the pattern in `ignore_files` by default, if you want it to be the case for folders as well, just add the underscore pattern to the `ignore_folders` array as well : )\n. Excellent - thank you @L8D \n. Hey @courcelan - so actually deployers are already extensible, although at the moment not on a per-project basis. I figure if someone has made a deployer for a new environment, why not share it with everyone? [Here's the folder](https://github.com/jenius/roots/tree/master/lib/deploy_recipes) that deploy recipes are in - they are built on a simple adapter pattern. I'm more than willing to accept pull requests for new deployers -- actually that's where the github pages deployer originated.\n\nWhat you're saying about different environments is interesting as well, and I don't disagree. However, I think that building in that capacity would be tough. For example, you can only deploy one environment to github pages, there's no way to get multiple sites up there. `roots deploy` is really a convenience tool - I figure if you want a more complex deploy process you can easily manage it yourself.\n\nPersonally, I get around this issue by using [this small deploy script](https://github.com/visionmedia/deploy), and sending them to my little digital ocean box, on which I have set up a post-deploy hook for roots that compiles the project. This works really nicely and is super cheap. In addition, I'm working on a more complete system that would support simple and cheap roots hosting (and a lot more) at work, so when that comes out, deploys will be easier.\n. That's a good idea. It actually wouldn't be too tough to implement either - would anyone like to open a new issue for this? There would only be one boolean option: watching. We could call this whatever we want really - I feel like `env == 'dev'` would be good?\n\nWe wouldn't even need something like args, we could pass variables directly in when app.coffee is evaluated.\n. Ah awesome, that's great. I feel like we could make the interface a bit cleaner though...\n. I feel like you're moving towards a middleware-like concept, which generally I'm in favor of. What I meant in this issue was attaching to (before or after) the `roots compile` command specifically, rather than hooking into the internals of the command itself, which I think might be overly complicated. I think that's what you were thinking as well though, judging by your response.\n. So just to touch this again, the most recent compiler refactor opens up the possibility of this being able to happen, although I don't yet have a public interface to compiler extensions. But there are three hooks which extensions can jump into and work magic.\n. This is being added through the roots extension API and before/after hooks in v3\n. Ok so I recently learned that almond cannot be used to load scripts from CDNs or any sort of external URLs, they must be loaded locally. For me that puts it entirely out of the range of usefulness, and I'd be ready to close this issue. If anyone else would like to fight for almond feel free to step up, but judging by the crickets so far I'm guessing not...\n. No this is how it's supposed to happen (symlinks are in development for extra speed), but I don't doubt that it is somehow related to the problem. I'll get this worked out shortly :cactus: \n. `roots compile` will do a full compile and compress, copying files over. if you want to compile without compressing, add the option `--no-compress` - this is all in the docs :heart: \n. Yes. When you are watching, it would be silly to re-copy assets any time they are changed, since changes are happening quickly, so we have them symlinked, because it's a super fast operation and works exactly the same. When you're ready to go to production, you compile and everything gets copied.\n. Don't agree at all. I would argue that the solution to this is removing support for the old syntax rather than switching back to it. The problem here is not with the new syntax, it's with the patched in fix to still support the old syntax. I think support for the old syntax should be removed in the next release, since it's been deprecated in this one. I also think we should add a console message that the old syntax is deprecated when 'exports' is detected, which isn't in there now.\n\nRoots is not made for people familiar with node.js. It's made for people that want to make websites. There's zero node knowledge required to use with roots, and I'd like to keep it that way. `app.coffee` is a config file -- the simpler, the better.\n. First argument I don't think is remotely valid unless you can actually find any actual down side to doing it this way.\n\nSecond argument is ok, but it's also useless extra syntax that's unnecessary. There's no reason to have the word \"exports\" before every variable -- this is a config file. If there's an option to not have it or to have it, and there's no other arguments either way, I'm going to choose the simpler and more straightforward one.\n. We don't need standardization. This is not a node library or module, it's a **configuration file**.\n. That's exactly why I'm doing it like this - the way we have it now is exactly the same as cson - the entire file is treated as a json object when it's imported. It just also can have functions in there. It is a config file in that it provides configuration settings for the app : )\n\nI know that since it has the capacity for script in there, you can do other things with the file, but I don't think we should encourage that since it's not the intended use.\n. I'm going to close this one, as it's been quiet for three months. Feel free to re-open if anyone has any new opinions\n. So I ended up coming up with something today that will resolve this is a much more straightforward manner -- rather than looking for `exports.`, it just requires the file upfront. If there are no exports, it's assumed that it's a default config file with no scripting. If there are exports detected, it's loaded directly.\n\nI think this should satisfy both sides of the issue. For those looking to incorporate more advanced scripting functionality, you can use exports in the file without issue. And for those looking for a basic uncluttered setup, there's no need to use it in order to get the config to work.\n\nYay for making everyone happy!\n. Great call here, and good solution. I'm into it\n. This issue has been closed on the transformers branch, where new features are being added, so I'm going to close it up : )\n. Yep, sounds good to me. Super easy implementation. If someone wants to send in a PR, you can claim credit and close, otherwise I'll drop this in sometime this week : )\n. This pull request seems to be built on top of the refactors in the transformers branch, which is not ready to be merged yet. Let's do it the opposite way -- build the PR off master, then once it's merged make the translation in the transformers branch.\n. I'm not convinced that transformers will be merged soon. I'm not trying to hold anyone back or say that there isn't some really great work going on in the transformers branch (because there definitely is) -- all I'm saying is that roots is large, very complex, and doesn't have as much test coverage as we want it to yet. So rewriting most of the core is not something you can just push through without having tested it _very_ extensively. I know @slang800 has indicated on multiple occasions that he thinks it's ready to merge, but I checked it through last weekend, found a large number of bugs, and even with the latest code in that branch, it's still not ready to merge.\n\nA lot of people depend on roots for their projects and I'm not going to push a release that breaks things, which means we need to be careful. In the meantime, I see no reason to halt forward progress until that branch is merged. While rewriting things is fantastic, this particular rewrite is based on style, and not on lack of functionality or capability to add functionality for the current codebase. So while I think it's totally ok to submit pull requests to the transformers branch, I also see no reason not to also push them to master.\n. Ok, that's fine with me. We can stick with merging to transformers\n. Would love to see a cleaner commit log for this -- this is a small feature and shouldn't be more than a couple commits at most. Could you rebase this a little bit before merge?\n. Yeah you have to remove any commits in here that you didn't make. When your doing an interactive rebase, you can just delete the lines showing the commits and they will be removed.\n. Ok let me see if I can do the rebase for you\n. Unless there's a way I'm not aware of, I need access to your fork in order to modify your pull request - if you give me push access i can clean it up\n. Ok so I made a couple changes here. The test was not correct (passing does not mean correct) - pointed out where it went wrong above. Also, all the commands are currently js, not coffee, so I converted the command back to js. With the most recent commit, it's fixed -- the command and test are both running correctly.\n\nIf this is all good from everyone, I'd propose merging the two commits to a single one, then I think we're ready to merge this PR : )\n. Excellent - now just squash those last 3 commits together and we should be good\n. It seems like you don't have a ton of rebase experience - would it help to go over rebase a little? It is very confusing and takes a bit to pick up. Shoot me an email (http://jenius.me/#!/contact) and we can go over it\n. Haha so you actually removed my commit that fixed all the mistakes and now we're back to the original state. What you needed to do was merge together your original commit and mine that made the fixes : /\n. Haha ok, so this is super close, but now you have a borked implementation in the first commit and the fix in the second. I would say you should pull the second commit apart to the completion of readme and man and merge the fix with the original broken commit, but I've tortured you enough here already. I'll merge this if you squash the two commits together into one final glorious commit :smile: \n. That, my friend, is a solid commit. Good work. No worries, what's more important is that you learned something :+1: Now your next pull request will be super boss.\n. Is this pull request dependent on another one? I know you're working on a lot at once, but I think each PR should address one issue, and be actually merge-able. The transformers PR is still far from stable and needs a good bit more work before it's ready to merge, so if this one depends on transformers, that means we can't merge one until the other etc.\n\nAlso, the two things this PR changes should be separated into two PR's.\n. We could easily make this non-breaking by setting the livereload variable to be empty, then adding a deprecation notice. I think this might be a better idea than breaking everything immediately...\n. By the way this is an awesome PR, and a fantastic idea. Love this : )\n. Agreed on that front, I think keeping them in their own area is a good idea. And don't get me wrong, I'm very much used to pushing code ahead as fast as I can with wide refactors that can possibly break things, because usually it's just me using it and I can fix it. This whole \"you make a mistake and it affects a lot of people\" thing is a totally new concept to me too. Deprecation notices are something I really have never thought of for any of my other projects. But we can all learn together on this one, hah\n. How is this one looking - possible to merge into transformers yet?\n. Yeah if everything is ok you can go ahead and merge this in whenever and we'll work out the rest in the transformers branch, which by the way as of today's changes passes my test for release so we're getting there : )\n. Actually I'm going to take a shot at merging this now. There are a huge number of conflicts but it's ok\n. Ok so I got this merged with the latest on transformers, fixed up a couple things and it looks like everything is working nicely. I only have one bug left that I can see - sometimes the script write is not coming out correctly, and it's leaving the close tags for body and html before the roots injector script is loaded. I'm going to try to work this out, then I'd like to merge these two branches together. I think the best way at this point would just to be to force push this branch's contents over transformers and close this one.\n. Ok never mind fixed that one, you were just missing a close tag. Everything working quite smoothly here, tests passing and the ultimate test, that it correctly compiles http://carrot.is, works :tongue: \n. Ok this has been merged into the transformers branch, I'm going to close this.\n. Could you expand on this a bit? I would love to separate the dynamic content parsing (and layout parsing) from the compilation, but they are very closely tied together at a number of different points so I haven't seen a reasonable way we could do that yet. If you have a proposal for one, would be very interested in hearing it.\n. I'm not convinced that would work straight up. The file helper's cooperation with the compile process is without a doubt the most complex part of roots -- it scrambled my brain writing it, and does every time I need to make changes to the process. Although I know it might look like it would be easy to drop out (it already has been dropped to a pair of functions within the file helper), there are a lot of nasty bugs and edge situations that arise if there's even the tiniest oversight.\n\nWhat's especially important to consider is how the dynamic content parser varies it's behavior across situations. For example, when there are multiple extensions on a file and it's compiled multiple times, the front matter doesn't get parsed out until the final pass. In addition, when dynamic content files are parsed into layouts, the dynamic locals need to be present there. Here alone, the dynamic content is already twisted up in the multi compile process and the layout parsing. We can't drop the interfaces between these sections, although we could possibly change them and/or make them cleaner.\n\nI almost feel like tackling that section might be easier pair programming (although not sure how we'd do that remotely). A lot of the core is complex and not heavily covered by tests (my greatest weakness for sure - testing). On first look, it is tempting to tear it apart and reorganize, but there are many ways to introduce a multitude of subtle bugs, like we've seen in the transformers branch.\n\nI definitely think this should be attacked, just carefully : )\n. I agree, which is why I'm in favor of giving this a shot. And if you ever do end up here in NYC, you're always welcome at the office : )\n\nSo I suppose the question is how should we get started on this one?\n. Separation of layouts and dynamic contents is in place in the release branch. Still needs a bit of work, but going to close out this issue\n. Ah, a devious bug indeed. Ok, let me check this out and see if I can patch it.\n. Ok I see how you did it there. My implementation was a little on the safer side but I don't mind doing it like this for a temp patch that won't be documented.\n\nAlso, you should test before you submit... [come on!](http://www.youtube.com/watch?v=SP_9zH9Q44o)\n. Hah, I guess thats one way to do it... let's get this shipped out.\n. Transformers branch is stable and ready to be merged within the next few days -- does anyone want to take a shot at implementing this before the next release?\n. Would be awesome - try to work this into [accord](https://github.com/jenius/accord) though rather than the current roots version - this is where the compile process has been pulled out to for the next version.\n. Would be awesome. You could accept source maps as a special option to the compiler, or maybe expose another function just to generate the source map - I'll let you look over it and decide. The code for just accord is a lot easier to wrangle\n. Ok so I took a stab at integrating this with transformers this morning and really it's a terrible language. There's honestly no reason to use it over something like ejs or mustache, so I'd rather not add it really. I'm going to close this out -- if anyone is interested in adding kit support, feel free to give it a shot, but it should be a PR to https://github.com/ForbesLindesay/transformers\n. Hey Josh,\n\nJust checking in on progress with this one : )\n. Awesome. Just so you know, [this is where it will eventually end up](https://github.com/jenius/ship), and should be a big piece of a number of projects other than roots as well. Thanks for your hard work here!\n. Yep, this looks great. Unfortunately still don't have a good way to test deployer, just want to confirm that this has been tested through (errors and all) and is working?\n. Yeah I'm really coming up blank on rendering data into json. Might have to make some little homebrew solution for this. The good news is it's easy to parse json, all we'd need to add is some sort of dynamic tag like ERB that it took an extra step through and ran replacements.\n\n**Tiny example in coffeescript:**\n\n``` coffee\n# JSON Templating\n\nmini_tmpl = (json, tmpl) ->\n  str = JSON.stringify(json)\n  src = \"<%= (.*?) %>\"\n  for m in str.match(new RegExp(src, \"g\"))\n    str = str.replace(m, tmpl[m.match(new RegExp(src))[1]])\n  return JSON.parse(str)\n\n\ntest_json = {\n  foo: \"<%= bar %>\"\n  \"<%= baz %>\": \"quux\"\n}\n\ntemplate = { bar: 'snargle', baz: 'snargle2' }\n\nconsole.log mini_tmpl(test_json, template)\n\n```\n\nJust tested this and it works. I feel like someone must have done this already somewhere but honestly can not find one...\n. I'm going to close this - it has been pulled in to [ship](https://github.com/carrot/ship) and is currently [working nicely](https://github.com/carrot/ship/commit/80f4f8f42a4efd0df356f8cd9882b7bb58b285c7). This is huge @joshrowley, thanks so much for the contribution and looking forward to seeing your code in the next release!\n. Ugh I'm not sure how to handle this. Does a breaking change in a dependency mean we need a major version bump? If anyone was using the grid system previously, this update will without a doubt break their app : /\n. Yeah, I'm ok with that. Really, I'd like better docs for jeet's grid system before I push it on all roots users anyway. I'll merge this to the transformers branch then.\n. Merged to transformers, tested and fixed a couple issues in the new version of axis, looking good now : )\n. Ok well for one, the warnings you are getting there are not requirejs, they are uglifyjs, and it's totally fine. It's just optimizing and compressing your script and letting you know what it did. This happens every time `roots compile` is run. Also I think I see the problem already -- it looks like there's some mistake with path joining - you can see the slash is the wrong way (for windows, ugh) at `public/js`.\n. Yes it does, but not automatically, only if you use the [right tools](http://nodejs.org/api/path.html) . Thats why I was saying there's probably a path normalization mistake somewhere.\n. [Found the issue](https://github.com/jenius/roots/blob/master/lib/deploy_recipes/heroku.js#L29). I'm going to try to have this fixed by next release (soon). Can windows handle globstars like this?\n. Hm - is there any way you could find out how I'd execute a command like this in windows? All I need to accomplish here is moving the contents of a folder to a specified destination...\n. hahah nailed it\n. So it's no secret that roots deployers are being extracted into [their own library](https://github.com/carrot/ship) which will be more thoroughly tested, and this should resolve the issue :smile: - I'm going to close this for now because I'm trying to narrow down issues that we're focusing on and come back with an update once the integration of ship is complete\n. Alright so it turns out that I really wasn't thinking ahead when I wrote this spec because this is not possible, since the contents of each category under `site` is an array. So this means that there would have to be some sort of awkward syntax accessor like `blog.announcements.all` in order to get content from each folder so that the nesting would work right, or the code would have to become more complex by checking to see if there is a nested folder, and only if not removing the accessor.\n\nNot totally sure what to do about this at the moment, any suggestions welcome!\n. Kidding, it turns out arrays are objects. The things you learn after thinking you understood javascript. Implementation for this coming shortly to the transformers branch.\n. Done in release branch, closing\n. Ok so we have decided to merge jeet's stylus util library with axis, which is awesome.\n\nAs for the docs, I'd be happy to go either way. I think it makes axis to be scoped under the roots site because they are bound together somewhat in that roots is by far the easiest way to put axis to use. Like we discussed before though, I'd love to give axis it's own look and brand. So maybe it would be something like axis.roots.cx and have it's own thing going on, but still fall under the same general umbrella because the two projects fit together and are overseen by a lot of the same people.\n\nFor jeet, I'd say it's up to @CorySimmons. We could subdomain it out with it's own look and brand much like axis, or we could keep it on it's own domain if that's what he wants. In the end, I'd like for each of them to have its own colors and logo though just for differentiation. They all are quite valid alone and can be used on their own, they just work really nicely together and using them together is often the best context anyway. This is somewhat similar to [yeoman/grunt/bower](http://yeoman.io/) except the tools are quite different, rather than templating, build tool, and package management, we'd have build tool, css library, and grid. Iderknow. This is all a work in progress, totally open to suggestions.\n. Haha yep, thats what I was thinking - have them all work perfectly as standalone components, but also package together particularly nicely. I'm cool with having them at their own domains if that's what you want. And definitely would be happy to have you take a shot at the branding. I think it would be awesome to have the three with somewhat similar logos - the jeet one is already on the same general level - a nice clean vector that fits in a circle.\n. It's going to be a long time before this is merged unfortunately, as this is a massively breaking update which targets v3.0.0, so I'm going to close this out for now. BUT the good news is that there is a way to include the latest version of axis in the most recent prerelease - instructions below:\n- in your app.coffee file, make an array called `view_helpers`\n- install the latest version of axis locally in your roots project\n- ignore it from the compile process\n- use `module.require` to add it into the `view_helpers` array\n- ???\n- profit!\n. Just came across this library, which I think would be a greats staring point for the view helpers: https://github.com/HubSpot/humanize\n. Here's another great one for dates. Would be killer if moment was built in: http://momentjs.com/\n. Woah, underscore.string looks great. I'll look into that a little further, but looks incredible.\n. This feature has landed on the release branch. Roots ships with underscore, underscore.string, and moment by default, and you can also include your own view helper bundles through app.coffee. Whoo!\n. @airtonix You can do it this way with roots v3, which is currently what's being actively developed. You can test out the latest v3 prerelease with `npm i roots@pre -g`.\n\nIn v3, you can run this in your `app.coffee` file and it will work:\n\n``` coffee\nmodule.exports =\n  ignore: ['view_helpers/*']\n  locals:\n    foo: require('./view_helpers/foo')\n```\n. Yeah, I was chatting with @kylemac about this today and we are thinking it might be a good approach to introduce the ability to control number of posts per page somewhere, then only render the first N to locals, and split the rest by N to .json files in a folder called `/pages`. So you could handle it how you want -- likely making an ajax request to `/blog/pages/N` then piping the content through a template of some sort, then you can handle the render however you want - maybe we can have some prebuilt functions that will do a couple different ways for you (paging, infinite scroll, etc)\n\nI think this idea has some refinement to go, but I do think it's the right direction in general...\n. Ok, I see what you're getting at. I think the possibility to extend roots in this way will become more feasible as roots itself becomes more modular. For example, javascript pagination could be rolled into a view helper of some sort, like I mention in #233. Either way I think this is a good place to discuss it blogs and blog features for now.\n\nI don't agree with the wordpress piece. Blogs do not need to be hosted on a server, and should be static - there's no reason for them to be dynamic. This was a huge motivation behind dynamic content. I hooked up wordpress with a json api to roots a number of months ago for my company's blog and hated it. The extra load time was painful, and dealing with wordpress was painful. Making a blog should be simple, super fast, and super cheap to host. I'm totally fine with extracting out the blog pieces (and even the dynamic content piece if we can figure out how to do that), but I am not planning on stopping development on either because I don't think any existing solution solves this problem right, including wordpress.\n. I agree. In order for it to work nicely with everything else it will need a lot of hooks into the process though. This is definitely something I'll be spending some time thinking about...\n. We already have a blog template - `roots new project_name --blog`. The issue is that it's not possible to create a full-featured blog just using the current feature-set of axis and roots - it needs bit of extra functionality to be built in, and we're discussing here how that extra functionality should be architected.\n\nAnd yes, my aim with roots is to be able to entirely replace wordpress with a cheaper, faster, and easier alternative. We are attacking every piece of it, some of it public and open source, and some of it private. It will be done, but it's a big mission and takes a while : )\n. Nope, asset-graph would make no difference in regard to these features actually. The asset graph is mostly for faster and more efficient compilation.\n\nSam already expressed that it should be an extension and I agreed, so we are clear on that. I'm working on restructuring the compiler so it can be more easily extended.\n\nAs far as using wordpress and dropping roots dynamic content, I don't think you guys will ever get me to agree to that, although attempts of course are welcome. I can list reasons on reasons on reasons why wordpress is a horrible platform for basic blogging, and why publishing in general would be tons more efficient as static sites. Anyone is more than welcome to use roots with wordpress if they want to, and as we have seen above it works fine. But I am not going to strip features and functionality from roots and suggest that people go this route, because I personally do not agree with it at all.\n\nA couple reasons why I think blogs and publishing should always be static:\n- Wordpress is written in PHP. It requires a server and a database. As traffic and content increase, this becomes increasingly expensive. Roots is written in html, requires no server and no database, and a high traffic blog could easily be hosted for under $5 a month, even from S3 if you wanted.\n- Roots is much faster than wordpress. Like, orders of magnitude. Compiled html is the \"C\" of the internet - it's as fast as you can possibly get. It's probably not critical that your blog is updated the moment you hit publish, and that a 10 second delay to compile before it goes live wouldn't be so much as noticed. This tradeoff buys you instant loads on all your pages, since your html is pre-compiled. And since your blog is probably not updated super frequently, these savings compound quickly.\n- So overall, a blog on roots is easier to set up, faster to load, and cheaper to host. It's a huge win on all counts.\n\nJust saw your comment @slang800, and I know you are super concerned with separation of content. Personally, I'm not concerned as much as you are about this, but I also think thats a separate issue. A system could be devised to separate the content and compile it in, but I absolutely do not want to add an extra ajax load to every single page in order to get the content. If it's separated in development, it has to be compiled in. And wordpress does not do that, so the price you pay for separation of content is a delayed page load, a gigantic ugly backend, and an extra http request. If roots users want separation of content, they shouldn't have to pay any price.\n. That's still not good enough for me. There should absolutely not be an extra ajax load just to get your content. We could easily build a way that you could put your content in a json file and have it compiled into templates, and I think that's what we should do if more content separation is something people are interested in.\n\nNever lower your standards! :point_up: \n. As I mentioned above, any of these (including pagination) can be done right now, but it's not _convenient_ to do so, and it takes a little manual js and jade work. My goal was to make these easy for people to implement by wrapping up the implementations in simple functions, and to make them as efficient as possible.\n\nSearch is actually the most difficult one. I think it would involve an addon that would push your json to an external database, which you could ping in your search field to return results. But that's for the far future, I'd rather focus on categories and pagination at the moment.\n. Yeah I'm not in favor of tighly coupling anything, I just am strongly against having to use javascript in any way to achieve separation of content. I think the best solution would be the extension that compiled is content from json. I'm working on a restructure of the compiler that would allow easier extensions which is almost ready -- this would make it easy to add an extension like that in. This would also allow us to solve the i18n problem : )\n. Ok so I think we've come to a point where we have a pretty decent understanding of the landscape when it comes to static sites and blogs, and I want to write it up here briefly, then close this issue and have an article published on the roots site about this when we launch. Here goes.\n\nIf you are a programmer looking to make a small simple personal blog that will never go over a couple hundred posts, you can get away with using the dynamic content extension and using jade files with metadata. If you want pagination for your posts, you can do this with jade by capping out the number rendered on the page, then dumping the rest as json objects into a script tag and loading them onto the page when a button is clicked via javascript. This is not the cleanest or most full featured solution, and requires manually editing the source files to update, which is why it should be used only for programmer after a small simple personal blog. A good example of this is http://carrot.is/coding, which only has a few high quality posts, probably will never have pagination, and is very simple and straightforward with no categories, tags, search, comments, etc.\n\nHowever, as soon as you are looking to get more of the features typically expected of a blog, you will want to graduate from the dynamic content approach to something more robust. Simply put, is is not possible to efficiently manage hundreds of blog posts, or have tagging or search functionality with a static site. You need a database for this -- this is what databases were invented for. On the other hand, that does not mean you still need to hit the database every time a user loads the page, as you are almost always fetching the same 5 or so blog posts rendered initially.\n\nWe have been chasing a particular combination of static and dynamic sites in which the site loads as quickly as possible, is hosted as static, but has a CMS and still can handle typically dynamic features like user login or search, for a while, and roots v3 was built around this concept. This is what we recommend for larger or more feature-rich blogs.\n\nA good example of this kind of flow uses [roots-contentful](https://github.com/carrot/roots-contentful). Contentful is a CMS that exposes data though a JSON API rather than integrating with a front-end. This roots extension integrates with Contetntful and pulls in data to be rendered as part of a static site. So you can pull your blog posts, which can be editied via CMS, and render the first 5 on a static page, then if the user hits a \"more posts\" button, use Contentful's JSON API with javascript to pull in the next 5 and render them into the same template you used for the static ones (if you are using [client-templates](https://github.com/carrot/roots-client-templates)). This is the most efficient flow you can get. If you prefer another CMS, it's certainly possible for that to happen using a roots extension, but the only one we have made at the moment is for Contentful, since it's such a good fit with it's strong JSON API.\n\nAs a proof of this concept, we have [our own company's blog](http://carrot.is/blogging) running on this exact framework. This blog has hundreds of posts, all managed remotely by non-developers through a CMS, and yet it still loads instantly and all of carrot.is is a static site made on top of roots v3, can handle 50k+ requests per second, and is hosted for $5/month.\n\nThere's plenty of room for growth and improvement to the ease with which static blogs can be managed here, and if this is something you are interested in, please reach out because we would love to get some help making it better.\n. Yessir, it's documented [right in app.coffee](https://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9). If you want to change the default layout, you can do so by changing the string after `default` to point to the layout you want to use (or if you are making a template, just change the contents of `layout.jade`).\n\nYou can also bypass the roots layout engine and use jade's instead if you'd like -- running `roots new example --min` will give you a template that does this.\n. Yes, you can do that. That's the exact piece that's documented in `app.coffee`. Let me try to break this down a little:\n\n``` yaml\n# Layout file config\n# `default` applies to all views. Override for specific\n# views as seen below.\nlayouts:\n  default: 'layout.jade'\n  # 'special_view.jade': 'special_layout.jade'\n```\n\n`default` is unsurprisingly what's used as a default layout for all pages. You can see that below, commented out, is a **example** of a view-specific override. The key is a pointer to the view that you want to have a different layout (you can change this), and the value is a pointer to the layout you want it to have (you can change this as well). You can also add more of these lines if you want -- one for each view-layout pair.\n\nSo for example, if you had a view called `special_view.jade` in your views folder, and you'd like that specific view to use `special_layout.jade` rather than the default layout, uncommenting that last line would do exactly this. However, if you have different names for the view and layout that you want to do a custom override for, you can go ahead and change \"special_view\" to whatever your view's name is. Does that make a little more sense?\n. No problem, as always let me know if there's anything else that could be clarified!\n. You can do this with front matter. Just specify the layout in the front matter, relative to the post. For example\n\n```\n---\ntitle: 'whatever your post is called'\nlayout: '_custom-layout.jade'\n---\n\n:markdown\n  Here's the contents of my post!\n```\n\nThen then layout would be a file in the posts folder called `_custom-layout.jade`\n. An underscore before the file name causes it to be ignored from the compile process. This can be changed in app.coffee. @monkeez I'm not sure why you have your blog set up this way, but there certainly is an easier and more straightforward way to do it. If you run `roots new example_project --blog`, it has a folder structure that does what you need in a more straightforward fashion.\n\nTo solve the specific problem you're having, it's just about adjusting paths. When you set a layout through app.coffee, it starts looking in the views folder to find it, since this is where most layouts are (this could be changed if you think it's confusing). If you want to jump back up a level from the views folder and then go into the posts folder, you can do it with the path. So in this case, you'd need it to be `../posts/index.jade` as the key in order to find it correctly.\n\nFor reference, here's the line where it builds the path to the layout: https://github.com/jenius/roots/blob/compiler-restructure/lib/extensions/layouts.coffee#L61\n. So this is another case where you might want to use jade layouts if you are trying to do more complicated stuff, since roots' built-in layout system is very minimal -- handling partials and layouts is really up to the templating language creator, roots just covers the most basic case for languages that haven't done this. Jade however has great templating, so there's no need to use roots' templating if you have that. I showed an example of how you could modify the title in the other issue.\n\nHere, you can solve this in exactly the way I mentioned in my reply though if you want to stick with roots' layouts. Since what I said didn't seem to sink in, I made an example that does what you're after and uploaded it here. Hope this helps!\n\nhttp://cl.ly/RnK2\n\nTo be fair, jade is going through a restructuring of their docs right now and the docs for layouts are pretty much nonexistant. Here's what I could find: https://github.com/visionmedia/jade/blob/master/examples/extend-layout.jade\n\nIf you run `roots new whatever --min` it provides a good example of how to use jade's layout engine as well.\n. It's ok! This is good to hear, and it helps me to know where I should be making things more clear. Please feel free to ask if anything comes up that confuses you at all - I made this so it's hard for me to know what parts aren't as clear to people who aren't as familiar. Any bit of light that can be shed on this helps to make roots better for people just coming on : )\n. Yeah, I think jade layouts is the way to go if you're trying to do anything complex with layouts. We would have spent more time making the roots layout engine more robust if it were possible, but it unfortunately is not without writing custom extensions for each language that roots supports then keeping them maintained as the languages evolve, which is too much work for me at least. The way I see it, it's up to the people who write language preprocessors to include this functionality -- roots just provides a very base-bones base.\n\nGlad you were able to work this out though! And as always anything that you need help with or seems confusing feel free to ask\n. Also, if you are making a site that uses templates, it will make life much smoother to use roots' [built in template precompilation](http://roots.cx/docs/#precompile). I don't use angular and probably never will, but if you want to see an example of how precompiled templates can be smoothly integrated into a client-side app, there's a default [template for backbone/marionette here](https://github.com/jenius/roots/pull/232) that you can check out.\n\nAlso if you do have a good flow for angular set up, feel free to pull request your template, because although I hate both bootstrap and angular with a fiery passion, I am aware that many people use them, so having templates available can't hurt.\n. I think this is fine for an initial implementation, but we should also submit a PR to transformers to include this library so we can switch over once it's been merged.\n. Yeah I was thinking errors, commands run, and version number. Timing the compiles is a good idea as well though - I've been starting to think about ways we could start timing things out -- having a very quick compile is definitely high on the to-do list.\n. This might be a nice way to do error reporting - the `patchGlobal` function piqued my interest: https://github.com/mattrobenolt/raven-node\n. Yup, keen has a write key and a read key. I'd be happy to provide the read key for anyone that wants access to the data - we can perhaps add this as a note in the readme whenever we add the info about analytics. The write key is already in the source - I'd rather people do not write stuff to our analytics so we have accurate data, but if someone is being a douche, we can't stop it. Either way I'd rather publicize the read key than the write one, although they will both be available.\n\nThe data is all available through API calls, but comes back completely raw and you need to format the queries, so it might be easier for us to put together some sort of small analytics dashboard with a table or a couple chats that are built from relevant queries for people to check out, just because that makes it easier to actually see the data.\n. That sounds fine to me. If we wanted to make it a little prettier we could just jam some json results into D3 as well.\n. To continue pulling from yeoman's work, they use this little plugin to track analytics:\n\nhttps://github.com/yeoman/insight\n\nI'm not the hugest fan of using google analytics for it, honestly I prefer the way keen approaches it. Using GA seems like jamming the analytics into a web-based container, which isn't quite right to me, plus I don't love GA in general as far as displaying your data in a clear and concise manner, and I like that keen uses read and write keys along with a query interface, which let's us easily open up our data to the public. But if we want to get something in here initially, this might be a good temporary solution.\n. Yeah absolutely agreed - the requests def need to be async, I don't want the logging to slow down roots even in the tiniest way. I'm going to be working on integrating tracking into v3 over the next couple weeks, then probably backport to v2 : )\n. Make sure you have XCode installed through the app store, and that you have also installed command line tools (you need this for the C compiler) - [help getting this done](http://stackoverflow.com/a/9329325/666989)\n\nIf/once you have resolved it, please update this issue with what the solution was and close it out!\n. Sweet, glad that worked out. This is necessary for most things, so if you had issues installing anything else this might resolve it as well. Good luck with roots, and let me know if you need any help!\n. Yeah you're right. Can you add that in? No PR needed really it's not a controversial or code-related change, but you can PR it if you want.\n. This gives no details on how to install and the link brings you to a sign-in page. I think the [way they do it here](http://zespia.tw/hexo/docs/) is a little more clear.\n. pearfect :pear: \n. Done in release branch\n. It looks like one of the dependencies requires python. I'd try installing python then giving it another shot : )\n. hey @eternal-turtles, any progress here?\n. Great call declan, and sorry this has been such an episode @eternal-turtles! If it helps, it's much easier to use roots and many other node packages on linux - you can easily install this on a windows machine and dual boot : )\n. Hey @eternal-turtles - have you been able to resolve the windows issues here with @declandewet's advice? Just a status check.\n. Closing due to inactivity\n. I'd very much like to have the fs patch version you've been working on as the default, but I'd be interested to see what sam can make happen with this. Either way, would really like to have some sort of asset graph ready soon, I might start putting some work into the fs version as an alternate to this, and we can see how each is working out.\n\nDo you have any tips or fragments of code from your initial stab at it that I could pick up, or was it just the basics?\n. Hey @slang800, the more I think about this the more I realize we cannot make the fs extension work. I wrote a prototype that does manage to accurately pull the dependencies, but in order to do so **it requires a full compile**, because without that, the fs functions are not called. This means that in order to attain an accurate asset graph, the entire project needs to be compiled, which defeats the point of the asset graph in the first place.\n\nSo you could say _\"ok jeff but the whole project is compiled every time you start the watcher, why don't we use that pass to generate the asset graph?\"_, and this would be a reasonable question. But what happens then if I add a partial or piece of dynamic content to the project? Suddenly, everything breaks, or I have to restart the watcher. There are a bunch of situations in which the asset graph would need to be re-evaluated mid-watch, and telling the user to restart the watcher if things break is not a good enough answer.\n\nI would very much like to be able to create one language-agnostic asset graph, very badly, but I cannot think of a way at the moment that would allow us to do that and bypass the issue described above :disappointed: \n\nBecause of this, I'd say we should continue with what sam has here, and perhaps build in asset-graph support gradually by language. If we make some sort of \"asset graph orm\", a lot like many of the other components we are beginning to pull out, it would provide a framework for people who wanted an asset graph for a language we don't care as much about to contribute one easily.\n. This does not address what happens when you make changes to a jade partial.\n. How? The compiled html output is not aware of included partials, the source has to be analyzed in order to pick them up\n. Oh so you're saying this is in conjunction with the fs patch method? Sorry I didn't realize you were building on that idea, I thought you were proposing a straight html output read.\n. Could you add a few more details?\n. dood wheres the details are you at the computre?\n. Absolutely. I'm currently pouring quite a bit of work into [ship](https://github.com/carrot/ship), which is going to pull all the deployers out of roots and add a bunch more useful ones. This will also significantly clean up the interface, and allow custom extensions. This should ship with the next large release :smile: \n. I'm going to close this out - ship is under active development and will soon be integrated into the release branch, which will resolve this issue. I'll update you when it's ready @aawilson!\n. This looks good, just throwing in a :+1: and looking forward to getting these into the test suite!\n. Hm, this is an interesting one. So the issue here is that roots looks for the last extension it can find on the file (in this case 'essay', since this is a file extension) and uses the output type of this extension as the final filetype. So for example, if you have `whatever.jade.coil`, it will disregard the `output_type` of coil and only use jade's. In this case, it's disregarding jade's `output_type` (which is html) and looking for `essay`'s, which is not defined.\n\nIt might complicate the logic a bit to have it look ahead to determine if you have extensions for which no compiler is defined, but it certainly seems possible. I'll check it out this week\n. This has been pulled into the release branch and will go out next prerelease :+1: \n. http://roots.cx/docs/#multipass\n. Yup, you can tack on as many extensions as you'd like, as long as the languages are interoperable you should be in the clear.\n. I'm not exactly sure what you are unclear about, could you explain a little more clearly what it is that you are trying to accomplish and how you have tried to do it so far?\n. There is no craziness about it, it's very simple. If you have two extensions, it will try to compile them both, in order, starting from the right and moving towards the left. You must have a compiler for all of them at the moment if you are compiling a file, even if the compiler does nothing.\n\nSo if you have `.jade.erb` the file will first be run through the erb compiler, then the output of that is run through the jade compiler, and the final file format ends up as html, since that's the output defined in the settings for the jade compiler.\n\nPerhaps reading up on how roots' compilers work or taking a look at them in the source (lib/adapters) would make it more clear.\n. You need an xyz compiler for this to work. You make make the xyz compiler do nothing and output the same extension, but at the moment it will need another compiler.\n. Because I have never had a need to do that so far, and neither has anyone else that's used roots, so it has not been implemented. It's a little bit more complicated than you think. Usually, files are detected as either compiled or not compiled (in which case they are copied). Compiled files scan through extensions and attempt to find a compiler for each extension. In this modification were to be added, the flow would have to be modified such that each extension is aware of its left and right and whether it should be compiled or not. Far from impossible, just not currently implemented.\n\nIf you'd like for this to be a feature, feel free to open a feature request issue, and make sure to take the time to describe a variety of situations that could come up and how you would expect them to be handled (for example, 3 extensions, the middle one isn't compiled but the other two are).\n\nAlso I'm not sure if you intended this, but your last comment came off making you sound kind of like a dick. This is open source software, and here I am during vacation responding to this issue almost immediately and trying to help you - please make sure to keep things respectful.\n\nFinally, please stop responding from email and including your signature. If you're going to respond to github issues via email, get rid of the signature so things look clean, or just click through and respond on the site.\n. Closing due to inactivity and because we are aware of the 2 major issues causing perf slowdown and actively trying to think of ways to resolve them\n. This is actually a mistake in [update-notifier](https://github.com/yeoman/update-notifier/pull/20) which I noticed a while ago and just last week my PR to fix this was accepted. I'm sorry this is so annoying though, as soon as the next major release is out (very soon, we're already using prerelease in production at carrot), this bug will no longer bother you.\n\nThat being said, if anyone does want to test the prerelease version which it has accidentally notified you is out, feel free to run `npm install roots@2.1.0-beta1 -g` and you'll be living the dangerous edge release life : )\n. This is awesome, even got a test in there. Good work.\n. One-line `if`s are cool with me. This looks ready for merge, just strip that second commit : )\n. :thumbsup: \n. I'm down with this. It could fit nicely into the dynamic content extension, and shouldn't be too difficult to accomplish.\n. That's what extensions do, they hook directly in with the compiler: https://github.com/jenius/roots/tree/transformers/lib/extensions\n. Ah this is a good idea, I like this. I also think we should support a slightly more hands-off approach for people who just want to auto-generate a feed from a specific folder of dynamic content that will just generate it automatically, ya know?\n. Oh no, I'm thinking an app.coffee thing too, like indicate which folder you'd like an rss feed to be generated for and it would do it.\n. Yeah it would jjust pull the front matter and contents I think. Override would be possible through the method you described\n. I guess we could have field to fill this sort of thing in? Like\n\n``` coffee\nrss: [{ folder: 'posts', title: 'our great blog', description: 'blah blah blah' }]\n```\n. This should go into v3 as a plugin of some sort - still tinkering at the plugin interface, but it would need to have quite a bit of power...\n. Going to close this as it's not an issue with roots so much as a request for an extension. But it is on our list!\n. I agree. I would love to have this feature, I just don't have time\npersonally to implement it right now. If you'd be willing to contribute I'd\nbe happy to work with you! Otherwise I am doing my best to make things\nhappen, promise.\n\nOn Mon, Aug 24, 2015, 12:34 Ibragimov Ruslan notifications@github.com\nwrote:\n\n> @jenius https://github.com/jenius I think RSS should be included by\n> default(like in wordpress for example). Today i found an blog(\n> http://andyshora.com/) and this blog built with roots. I want get latest\n> updates and start searching RSS. And this blog actually doesn't have RSS!\n> It's ridiculous... RSS should be zero-config included by default.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/258#issuecomment-134140262.\n. Hey, sorry a little late on the response. Deployers are by far the most difficult part of roots to deal with. Integrations with third party services is often awkward without a clean API present, there is really no way to cleanly test them, and cross-platform issues come up frequently. I haven't been working on the deployers in the prerelease branch because we plan on entirely replacing them with [ship](https://github.com/carrot/ship), which is under very active development right now, including tests (which has been insanely difficult to accomplish and is taking a while, but will happen).\n\nSo I would say for now if you are looking to push to heroku and are running prerelease and getting errors, I might avoid the roots deployers until we push the upgraded version running on top of ship. I know it's a tad bit less convenient, and I am working hard on getting ship up to speed so we can get this upgrade in. Luckily, it's pretty straightforward to run the heroku commands necessary to make it happen manually - for anyone else having this issue, here's a short guide on how to push a roots app through to heroku if you are having deployer errors:\n- Copy [these files](https://github.com/jenius/roots/tree/master/templates/deploy/heroku) into your project, stage and commit them\n- Run `roots compile`\n- Make sure the `public` folder is _not_ in your `.gitignore` file\n- Commit and push if you have it on remote\n- Run `heroku create`, if you have not already\n- Run `git push heroku master`\n- ???\n- Profit!\n\nThis being said, I don't think heroku is actually a very good host for static sites, and have stopped using them entirely myself. Github pages is also free and handles static sites quite well, and roots does currently have a deployer for (`roots deploy --gh-pages` will do it). We also have a deployer for amazon s3, which in my opinion is the best option for static sites, coming soon with ship. Finally, we are working on a small and very cheap static hosting product that is catered towards roots sites/apps. When this is out it will make life even easier : )\n. This issue should be resolved in the beta4 release, sorry about that!\n. Base any PR's off the transformers branch : )\n. And this is where you can nail the change :smile: \n\nhttps://github.com/jenius/roots/blob/transformers/lib/extensions/dynamic_content.coffee#L66\n. haha sorry, should have come in earlier!\n\n```\ngit checkout --orphan transformers\ngit pull origin transformers\n```\n. Ah ok, forgot about that piece. If you get more into contributing to the code, I'll add you as a collab so you can just work off local branches : )\n. Haha must be the blonde-ness. So when you are a collab, you can just push a branch with your changes directly to the repo, then open a pull request from that branch. So for example if I was in roots:\n\n``` bash\ngit checkout -b derp\n... make some derpy changes ...\ngit commit -am \"derped it up\"\ngit push origin derp\n```\n\nNow you've got a derp branch on the repo, and in github you can switch to that branch and hit the PR button. @samccone also has a command line tool for doing this if you prefer: https://github.com/mojotech/pullr\n. Of course, that's what I'm here for! Pick away :smile: \n. Squash these two commits together and ready for merge\n. Looks good to me\n. I'm going to close this as it's covered by #283, but it will be taken care of!\n. Yup, Declan pretty much got it. Personally, I use [deploy](https://github.com/visionmedia/deploy) paired with an after script that runs `roots compile` in the folder it was deployed to, then set up nginx to serve the files as with any static site. Pretty much all you need to know is in that SO answer : )\n. I'm going to close this issue because it's a question (which we hopefully have answered) and not a problem with the code that needs fixing - just trying to keep organized :smile:\n\nOf course if you have any other questions feel free to ask here and follow up.\n. As a note to anyone watching, I'll be building out this feature this week\n. I'm going to close this one out, the new template customization will be eventually implemented but as a separate lib that will be pulled into rootz\n. Ya you're right, the .gitiginore actually isn't even copied over from the templates right now and I'm not totally sure why. This will be addressed in the templates refactor I'm going to work through over the next couple days. Since we didn't have a lot of people utilizing templates previously, that section has kind of lagged a bit.\n. So there is one issue with this that I feel like is worth bringing up. Some of the deployers (notably heroku, which is by far the most popular) require `public` _not_ to be ignored in order to work correctly. So while I prefer adding public to the ignores and deploying to a VPS that will run the compile for me, if you are deploying to a target that relies on having the public folder in git, having it ignored is not an ideal solution.\n\nWith [ship](https://github.com/carrot/ship), we are aiming to push files directly when you run a deploy in every situation we can so that deploys do not rely on git, but there are some cases where we can't do this (like heroku). Not totally sure how to handle this, but it's something to think about.\n\nMaybe the heroku deployer should switch to another branch, compile, remove public from gitignore if present, make a \"deploy\" commit, push just that branch to heroku, then switch back to where you were before kind of like gh-pages?\n. Hey @samccone did you ever figure this weird issue out?\n. i don't think i've committed public anywhere in ages - it's definitely preferred not to. At carrot we have done lots of projects with an ignored public folder and never run into issues.\n. Yeah, we caught this issue before, it's hard to handled removed files with the watcher sometimes. I'll let you grab this one like we discussed\n. Woah, haven't seen this one before. It looks like a C compiler error. What version of osx are you on, and have you recently installed the latest command line tools for xcode?\n. Ah great, thank god this worked because I'm certainly not a pro at debugging C compiler issues hah. Hope you enjoy roots, and let us know if you have any feedback!\n. Yeah, the underscore convention comes from rails actually, just a way to indicate that a file is ignored. But you don't have to use it, you have total control over what you want to ignore or not through `app.coffee`\n. I don't think this is the right way to handle this issue. New changes to roots should be made on the release branch, we shouldn't be patching master adding in deps that are not part of roots.\n\nJeet is a stylus library, and roots can compile stylus correctly, so if you are planning on running the template using the current stable version of roots, it should be included directly in the template until the release that adds more control over stylus libraries comes out (which will likely be this week).\n\nIf you'd like help getting roots to compile jeet, I'd be happy to help out with that because it shouldn't have any issues doing this. But the only changes that I want to accept to master at the moment are bug fixes.\n. Jeet is a stylus library - the autoprefixer integration you are using, which I built, is a stylus library as well. If you add two stylus libraries together, it equals a stylus library with a dependency on another stylus library.\n\nAlso, the version of axis in the stable version of roots **does not have autoprefixer**, so I think you may have incorrectly diagnosed the problem.\n\nThe current stable version of roots does not include autoprefixer, and also does not include interchangeable stylus plugins. If you would like to have autoprefixer and interchangeable stylus plugins as a part of the template you are using, it should be using the version of roots that has those features, rather than patching master to include them. That version has not been released, but there will be a prerelease soon. I'll update this thread once it's ready with instructions on how to install and use it. If you'd like to build your template into the current stable roots version though, you can't use features it does not have, which means no autoprefixer.\n. Yeah, I'd like to have it shipped within the next month or so, but I also want to make sure it is very well tested and checked through because I know people count on having roots work well with their sites. I have been [dropping preleases](https://github.com/jenius/roots/releases) that are fairly stable and have been in use in production on a few projects, including what we think is the largest current project on roots, [carrot.is](http://carrot.is). The latest prerelease is `2.1.0-beta2`, and can be installed with `npm install roots@2.1.0-beta2 -g` if you'd like to test it. You can roll back at any time to stable with `npm install roots -g`.\n\nThere's a lot of work going into the roots custom template system, and a lot of the ideas coming in are thanks to you pushing the envelope with what you're working on with the jeet template. Today I'll be working on the stylus library pipeline, and there will be a new prerelease out that supports it this week.\n\nFinally, if you want to be more on top of roots dev, prerelases, etc, feel free to watch the project and you will get notifications on activity. You can [find the current release branch here](https://github.com/jenius/roots/pull/181), and as you can see there has been a huge amount of work and discussion here already. We're really excited about the next release, and as you can tell from the huge number of feature tags in the issues section, have tons of great features being planned out and worked on :smile: \n. Hey @srsgores, thank you for putting the time into this pull request - these are all great changes and I would be happy to get these pulled in. We actually have stopped additional work on the master branch other than bug fixes, and all the active development is going on in the [next release branch, found here](https://github.com/jenius/roots/pull/181). There has been a ton of work going into it, and a lot of things have changed around internally as far as the organization of roots.\n\nOne of the changes we made recently was taking the new project templates out of the core and moving them into their own repos. You can find these repos under the [roots-dev organization](https://github.com/roots-dev), where I'm sure you'll recognize all the base templates you are familiar with. Would you be willing to make this pull request on the new template repos instead of to the current master? This way, we can get your work pushed out with the next release :smile: \n. Since you have PRs open in the relevant repos, I'm going to close this one. But these changes will almost certainly be merged in and ship with the next roots version, so thank you for your contributions! :+1: \n. Wow\n. Definitely agreed, I have noticed this as well and fully plan on having ship exit with a non-zero code.`roots compile` should also do this. Do you want to take a stab at a PR to resolve this?\n. Haha awesome, thank you @aawilson! Happy to jump in and help, it should be a one-line change once you find the right spot : )\n. I am not the best at debugging permissions errors in windows, as I haven't used windows in probably 10+ years, so I can try but I think perhaps @declandewet would know better than me...\n. It's likely because the new templates for projects are in the stable version of roots copied out of the roots core, which is probably in an admin directory (on unix it's `/usr/lib`). The next revision of roots stores all new templates at a user-accessible directory so this issue should not come up anymore in the next release : )\n. That is quite strange, not sure why that's happening - tbh it still does seem like a permissions error of some sort on your end, but I don't have any windows machines handy to try to debug on. Either way I'm glad we could figure out how to resolve it! I'm going to close this issue because we did find a fix, but I'll drop another update here once the next roots prerelease is out so you can try and see if that will resolve the base problem (hopefully it will with better `new` template handling)\n. Roots symlinks any non-compiled assets while in development mode so that they are not re-copied each time - it speeds up the process in development. If you are still having this issue, refer to fixes above :smile: \n. Yup - watch just re-compiles whenever you change a file. It makes a few little speed optimizations as well (like symlinking, trying to change only the affected files, etc). Good for development work.\n. Yep, you can drop the error trace into a gist and post it here, or put it in a markdown code block, that would make it much easier for us to find out what's going wrong :smile: \n. This looks like either an error with node or with your C compiler. What exactly was the command that produced this error?\n. Nope, it shouldn't be, it's not necessary to have couchdb to use roots. I'm not really sure what any of that stuff is, I've never seen the `silly` piece before either\n. For real. Is it just me or do we get a particularly high number of absurd windows installation issues that really have little/nothing to do with roots itself?\n. Yeah that seems a bit overkill. It just seems like you need a bit more config on your computer to get node and your c compiler running smoothly. Just googling your error turns up some stuff: http://social.msdn.microsoft.com/Forums/vstudio/en-US/42e33170-96ad-481b-afc9-f3ea176c10df/tools-version?forum=vsdebug\n\nAlternately you can use git-bash like declan does and you will have a more unix-like interface\n. Any update on this @wad2eq?\n. Ok, looks like you've come a good ways with this one, and best of luck with continuing to get things in order! I'm going to close this issue, but if there are any more roots-relevant issues feel free to drop a comment.\n. Closing as the v3 release is now the priority and we're designing new docs for it now :grinning: \n. Sweet, this looks good. Can you add a test for this?\n. Solution for this discussed in #302 \n. This would be a little different if it were merged to master. Really compile project should return an `err, res` signature probably\n. Oh yeah this line and code is long gone, and this fix is not compatible with the release branch. I think making the fix on the transformers branch might make things a little easier : )\n\n\u2014\nJeff Escalante\n\nOn Tue, Nov 12, 2013 at 8:00 PM, Sam Saccone notifications@github.com\nwrote:\n\n> oh man.. that is such a gross line @jenius \n> \n> ## +1 for in the bin \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/pull/290#issuecomment-28351399\n. Sorry @aawilson, I should have made this more clear in the readme/contributing guide! Thanks for taking the time to jump on this one :smile: \n. This is an interesting idea - I feel like it would fit better as an extension of some sort, although I have yet to make an extension interface for the command line. I do the concept of command line extensions would be worth exploring though for sure.\n. Closing as this kind of addition doesn't belong in roots core, but I still like the idea of a template generator!\n. Brutal issue - hopefully you can work this out. Please let us know if you solve it so we can update our windows install instructions/troubleshooting!\n. haha or rather 99% DOS, 1% UNIX\n. Well that's a clear error message with an easy fix - just [install git](http://git-scm.com/) : )\n. This looks like an issue with [jeet-roots](https://github.com/mojotech/jeet-roots) rather than with roots itself. I would file it there instead. Did the roots install complete successfully?\n. Awesome, glad this all worked - good luck getting the rest set up!\n. Definitely agreed that it should be configurable, but i think in general it does need to be ignored because bower (even though I don't use it I know people do)\n. Not everyone uses that folder. It's in all the templates ignored by default, but for those who do not use bower, they might want to use that folder name for something else.\n. /cc @slang800 why are we loading jquery on every page?\n. Oh yeah that is definitely relevant - you can remove the `livereload` function from your views that might help\n. +1\n. This is excellent, I assume tested and working (since we don't yet have watcher tests :grimacing:)?\n. I know i'm on it\n. Test for this?\n. ? there are tests in there for precompiled templates\n. Yeah, we are. It's going to have to be a package.json\n. Yeah, we're working on the gitiginore piece, there's some weird stuff going on there, but it should be working by this week. But yeah we could auto-generate a version-locked copy of the package.json on project generation, the question is like you said how we would automatically add them. Do you think it would be reasonable to just have jade/stylus/coffee in there by default (it is our default stack), then as soon as someone adds a supported extension and it's compiled for the first time, add it to `package.json` and `npm install`? It would be a slight delay, but would only happen once and we would be asking people to manually add things to package.json.\n\nAlso, we might be able to offer some after hooks as a part of [sprout](https://github.com/carrot/sprout) that would let template authors specify dependencies, or maybe only auto-generate the package.json if there isn't one already provided in the template?\n. So my plan for this at the moment is to leave the default jade/stylus/coffee stack as a part of roots core, all pulling the latest version, and remove all other compilers from core. All new templates will come with a `package.json` which the template author will have to keep updated as new compiler versions drop, but the user can always feel free to adjust the versions. All compilers will first be looked for in the local project, if not found they will look in roots core (and only be found for jade/styl/coffee), and past that just copy the file as a compiler has not been provided.\n\nI think we might need to modify transformers a bit to make this happen, but I'd like to get this modification out sooner rather than later because I think it's an important piece of ensuring that projects are stable into the future.\n\nInitially, all compilers will remain in roots core to avoid breaking changes, and they will all be removed in v3.\n. This has been resolved in roots v3, since it is a very breaking change it has to go in the next version. Closing this issue though since it has been solved.\n. This actually shouldn't be happening with v3 since deploy doesn't change any files\n. Interesting idea - i could have the url come out from ship if present and we could hook into this.\n. Wat\n. Can't replicate this\n. Is this still happening?\n. Also, it's `2.1.0` - you should be able to install `2.1.0-beta4` if you want, but as sam said just go for stable right now.\n. Oh yeah I'm sorry, this is an error with axis actually that was introduced in the latest stylus release. I have a fix up for it, but it hasn't been shipped yet. I'm doing a huge refactor on axis right now that fixes and cleans up a lot of stuff, but realistically it's going to be a week or more before that's ready and the docs are updated appropriately. I'll get a patch release that fixes that thing out this afternoon.\n\nAlso if you are thinking about a PR, please make it to the 2.1.0 release branch - this is where active development is going on and we're hoping to have it merged in the next couple weeks.\n. should be fixed as of v0.1.7 of axis, try an npm install and run again : )\n. Indeed you are correct, let me take a look at this. In the meantime, use jade layouts if you are trying to do complex things with layouts. The basic roots layout system is just a patch for languages that have no layout engine. If you check out the `--min` template it's set up to use jade layouts and works quite nicely.\n. Ugh yeah error reporting in coffeescript is really bad right now, this definitely needs to be addressed. I'm not going to go through your project and debug your coffeescript, but we will try to fix the error reporting. For now I would diff between the last commit that worked to find the offending code.\n\nEDIT: Yes, good call, and this is something we need to work on. It's mostly an issue with snockets, but that doesn't mean we still arent responsible.\n. heroku was acting a little weird, but is working now after a small weird patch. Whoo!\n. Quality codez right there. I'd like to see an option for transvestites though.\n. did you just open this #303 \n. what the f you told me that deployer was set\n. ![](http://dogesay.com/sabodoge)\n. nice issue bro\n. oh hold up this is the best thing ever. holy shit. just saved us so so much work\n. wait so does this precompile templates, or is it just the same thing as transformers?\n. ah shit nvm. doesnt seem like its worth replacing tranformers\n. this is a snockets issue, not a roots issue - can you file this in snockets?\n. Make sure your layouts are ignored and the project will compile. They should be ignored anyway, as they are layouts. As long as there is a dependent that isn't supposed to compile to public, it should be ignored. And if it is ignored, it will recompile the project on change.\n. Agreed - we can also merge this to master now :smile:, sorry the branch situation before was whack\n. Was about to type the same thing. I think this should be resolved.\n. Do we want to have tests for the error formatting perhaps?\n. Yup, compiler options. Sorry this wasn't yet documented (still a new feature, was only a patch originally), but you can do this:\n\n```\nmodule.exports = \n  stylus:\n    plugins: [module.require('whatever')]\n```\n. I will :heart: this more if the commits are in present tense rather than past :grinning: \n\nOtherwise looks great!\n. The preference for present imperative tense commit messages [comes from git itself](http://stackoverflow.com/questions/3580013/should-i-use-past-or-present-tense-in-git-commit-messages). I make all commits to this repo in present tense, and Sam does as well if I'm not mistaken. The only reason I mention it is for consistency :grinning: \n. Looks good!\n. Thats why you compile before deploy. Alternately, you can add `livereloadEnabled: false` to `app.coffee` and it should disable the reload stuff.\n. Oh yeah, agreed.\n. :+1: can you rebase this off master before merge?\n. I'm not a huge fan of the separate errback pattern, would rather have this as a node-style callback (single callback with error passed as the first param), but roots doesn't currently expose a public API and you've definitely spent enough time with this PR already, so I'd say this is ok to merge.\n\nAlso, thanks so much for your hard work getting this is - really appreciate it :heart: \n. So the repository default piece is a consequence of upgrading to beta versions before the stable, so sorry about that one. Normal users will never get this error so I'm not super concerned about it. The way to fix it is to remove `~/.config/configstore/roots.yml` or the equivalent on windows.\n\nAs for the rest, I'll have to check it out later today!\n. ![](http://magicunlimited.typepad.com/.a/6a00d83451dfaa69e20120a685d9dc970b-pi)\n. Don't install prereleases, install the 2.1.0 stable\n. I don't get what you mean by 'the old beta-2 code'\n. When you generate a _new_ roots project, it pulls roots' current version number from its package.json and drops it as a comment in app.coffee so you can keep track of what version it was created on. This does not update when you upgrade roots, it only is added once, upon generation of a new project.\n. **That** makes no sense. When you run `roots -v` what do you get?\n. Ah yeah, that's something wrong with npm though, not roots :confused: \n. Yup, so you'll need to clear out that config file one more time and let that reinitialize under 2.1.0 stable and you should be set\n. so what are the contents of the roots file that's created?\n. hah, im sorry! maybe there really is something up with windows and the npm cache...\n. No, you need to install git yourself, npm does not install it.\n. I don't know, I feel like that error was super clear... do you really think it's necessary? If so, could you submit a PR for this? You definitely deserve the credit for this either way since you pointed it out :grinning: \n. You can't install git through a package.json, so I think docs would work better here. And that's an entirely fair point.\n. Ok, I didn't realize this was such an issue - I thought you had it cleaned up. Can you give me specific steps I can use to minimally reproduce the issue? I'll have to find a windows machine to test on. Also it definitely could be the only one that uses configstore, its not a super popular library really.\n. Thank you @snowe2010!\n. Thank god, you are the best sam I had no idea what that was and it said Window NT which was very frightening :two_men_holding_hands: \n. We have like 20 issues with running roots in windows right now, I'd like to consolidate them a bit so closing this one. We'll be working on getting v3 running smoothly in windows over the next couple weeks, just wasn't the first priority during development.\n. Interesting. But once we get into that, we need to be monitoring a bunch of other things. It should also be disabled during a pull, etc. Is this territory we want to jump into, or just say you know what roots watch does, if you open a second tab instead of stopping the watcher when you want to commit, pull, rebase, or interact with git, it will continue compiling?\n. I'm going to close this because I don't really think it's possible. If you can figure out a way to @samccone toss a PR in though!\n. Ok, figured out the best way to do this, and a commit will come in with the fix shortly. Npm actually has `prepublish` and `postpublish` tasks, which I'm leveraging to do the compile. That way before roots is published, it's compiled through to js automatically, which is awesome.\n. So after using pre and post publish I realized that this is actually not the way to go because when you run `npm install` locally, it also runs prepublish (and not postpublish). This is absurd and seems like a bug to me, and I filed an issue but it was closed and they said it was a deliberate decision. I have changed this over to using a makefile, and things are much cleaner this way.\n. Yeah, what bothers me here is that anyone who clones the repo down will run `npm install`, then everything will be converted to js, and they will likely work on that code instead. It's habit when working on node projects to pull down and run npm install, then put in work. In order to avoid this, you'd need specific instructions which many people might skip to run it with extra args or revert.\n\nI also have found myself running `npm install` locally a good amount, whenever I update dependencies and such - it's been really annoying during development to have to continuously revert it. What I ended up doing was using a [makefile like this](https://github.com/carrot/sprout/blob/master/Makefile) (hasn't been committed to roots yet) that eliminates both gulp and npm tasks. It's not like most people cloning down roots will be publishing releases anyway, so they should not have to see or deal with any of that process.\n. Yeah it does suck, I opened an issue in npm to see if it would help, but it just ended up being closed. Ah well :cry: \n. Very strange... I feel like this would be tough for me to debug, is there any way you could look into this one @slang800?\n. Yeah I'm going to be moving hard towards browserify starting when v3 is released. Using commonjs for everything would be huge, and also allow interop between app.coffee and client-side code, which opens up a lot of opportunities. I never really liked bower, had been using require with cdnjs previously.\n. Give me a couple weeks and I'll give you a very compelling reason to try browserify :grinning:\n. Verified as a bug with current version 2. Should be quick to patch if anyone wants to take a stab at it - if not I'll grab it when I get a chance.\n. Closing this out due to inactivity and the fact that we're now working on v3\n. Yeah it just does a git clone. This should work...\n. Oh hah, yeah it's not. I guess we'd have to add an option for this: http://stackoverflow.com/questions/1911109/git-clone-a-specific-branch. Would just add another param which would enable the `-b` flag\n. Opening a ticket in ship for this (reffed above), it will be a feature in roots v3 - thanks @ajkochanowicz!\n. Also I wonder if we could have a simple test or two for this...\n. why not?\n. I think the actual issue here might be that this computer has overridden the slash character between paths to a weird W thing. This is likely not recognized by node, to be honest. I think changing the path separator back to the standard one for windows might help the paths to be found...\n\nAnd as for the issue you pointed to @declandewet - that was an issue with your computer and npm, not roots. I don't think that applies to this one.\n. @Compiztab had you installed a beta version at any point?\n. Yeah I took a browse through this a couple months ago, is some nice work\n. Closing due to inactivity - but wintersmith is great!\n. I've got a comparisons section in progress [here](https://github.com/jenius/roots/blob/v3/docs/features.rst#comparisons). Roots v3 has plugins and is much lighter, but is still in beta. If you are interested in using it, check out the v3 branch! We're moving towards a v3 release that will come with a fresh new identity, massively upgraded tools, and if it makes you feel better, it will probably boost the star count significantly, although in truth the number of stars has nothing to do with the quality of the software.\n. This really is crazy. Looks good though.\n. Done, https://github.com/samccone/infestor\n. This looks like a dependency error of some sort - let me check it out\n. Woah are you sure this isnt just something with your computer?\n. Weird... well either way, closed the issue because it's not roots-related - glad you could find a workaround for it and I hope that gets patched up in node at some point!\n. node-gyp is the way that you link native libraries in with node, so it could potentially arise from different C compiler setups on peoples' computers\n. Thanks for the followup here @svallory - I'm sure anyone else experiencing this issue will find this super useful, and glad you found some good additional info!\n. Yeah, roots doesn't use a preinstall so I'm not shocked, but good to know either way!\n. This is a question about how to use jade which doesn't exactly belong in a roots issue. But to do this, get the array into jade by adding it to your locals, then iterate it with jade - http://jade-lang.com/reference, scroll down to \"iteration\".\n\n**app.coffee**\n\n``` coffee\nlocals:\n  acknowledgements: ['john', 'suzy']\n```\n\n**index.jade**\n\n``` jade\n- each name in acknowledgements\n  p= name\n```\n. That's ok I aint mad, just closing it for relevance sake\n\n![](https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRzb_DSSFTvn3_NYbWb-q-dxHcvGyU3Ecof6MIOTfPxx2t9NS3c)\n. No, you need to restart the watcher when app.coffee changes, much like in rails if you change an initializer, you need to restart your rails server - this is the way that roots is implemented as you mentioned.\n. We could - I'm thinking about having this happen in v3 but it's not a super pressing feature for me at the moment\n. This applies to v3?\n. It doesn't, it initializes a new git project in the repo, no history is conserved...\n. Hey @samccone this is resolved correct?\n. I feel like we figured out what the issue was and it was something super weird\n. Oh right. Ok well that should be a quick fix to remove it really. Do you want to grab it, or I can?\n. If v3, this is an issue for sprout\n. This will be fixed before the v3 release, which is set to go down in the next month or two. I know this is a pain, and I'm sorry! In the meantime, `rm -rf .git` should clear it out for you.\n. This is a sprout issue, opened there\n\nhttps://github.com/carrot/sprout/issues/39\n. Yep, we're in the process of removing a lot of these extra deps, which should make installs much smoother. When this is finished, there will be a big update on roots.cx - sorry about that!\n. Do you know if there's a solid way to do this cross-platform, and if we would be able symlinks to work correctly and no bugs to happen on windows? I agree that this would be nice, as long as there was a symlink in place, because you definitely want to be able to see public whenever you want, and also to be able to deploy that folder.\n. I think he did actually cite his source as the internet if I'm not mistaken. I know for a fact that tmp is cleared on restart, but not totally sure about at regular intervals.\n. Looks like he got you with a flawless citation in that case. Rough. Statement verifies itself.\n. Closing due to inactivity and to stay focused. Sean if you are still keen on this feature feel free to submit a PR and we can revisit the discussion, just make sure it is thoroughly tested cross-platform!\n. :+1: \n. Also sean we're working off the v3 branch these days\n. I dont think this is going to work out. There are a significant number of breaking changes, and every single file has been gutted completely and rewritten. If you are still convinced and can get this branch to a point where the commit log is clean and everything works exactly the same, I'd be impressed.\n. You mean to master? This doesnt include anything breaking?\n\nEDIT: Looked it over, everything looks good. Made a couple comments\n. Yeah I mean like I mentioned earlier I don't totally see the point here since really everything is being entirely rewritten, but if you want to work on this @slang800 I'm ok with that. So far the changes coming through have been pretty useful anyway, mostly additions of stuff that doesnt exist at the moment in v2, or modifications of things that did stay so I'm cool with this.\n. Like for a precompiled template you mean?\n. Quick fix here - wanna grab this one?\n. :+1: \n. No longer necessary due to github analytics\n. I think this issue is a clone of https://github.com/jenius/roots/issues/334\n. I don't think it's possible. Anything could be a roots project. It just compiles files, and you can define custom compilers so there's not even a list we can check against.\n\nI feel like the closest we could get is warn 'this doesn't look like a roots project, are you sure?' if there's no app.coffee, but then we'd need to store their answer somewhere so it doesnt keep asking and annoying them if they just arent using an app.coffee. Seems like way more effort than is worth it.\n. Yeah for a tiny or single-page project there is definitely no need for app.coffee. And we are using custom compilers at carrot : )\n. This seems to be specific to your machine, and I don't think I will be able to debug this remotely, unfortunately.\n. I'm sorry - wish I could help more! It seems like you have some permissions errors with node itself - try checking the permissions on the directories that are listed in the error message to get started.\n. Yeah it's quite similar. OSX is unix-based so you'll be right at home.\n. Actually it is -- it's called Darwin, and it's open source: http://en.wikipedia.org/wiki/Darwin_(operating_system)\n. I think this would be the spot to start :grinning: \n\nhttps://github.com/jenius/roots/blob/v3/lib/local_server.coffee\n. Ping for progress here, this would be still great to have!\n. Cool, thanks for the heads up @devinmooers. We have an idea for integrating wordpress but compiling out as static through roots in the pipeline too so don't tune out entirely :grinning: \n.  It's got to be roots core. It would replace the current watch and reload system.\n. Still would like to make this happen. Eventually will look into it when I have time, promise!\n. So browsersync has it's own server, which would mean dropping charge and causing a number of breaking changes. However, its server [accepts middleware](http://www.browsersync.io/docs/options/#option-server), so it appears as if we could make it behave exactly like charge by just importing charge's middleware.\n\nI think this won't be super difficult. Going to take a stab at it soon!\n. So integration is moving along. The issue though is the same issue we have with our home-made reloading system, the dependency tree and compile pipeline.\n\nLet me explain. When you reload browser-sync, you can pass it the name of a file or multiple files to reload. So for example if you detect that `foo.css` changed, you would pass browsersync something like `bs.reload('foo.css')` and it would do its thing with the injection etc. Now here's the issue. Let's say you make changes to a jade layout file. We would have detected a change to `layout.jade`. However, this needs to be changed in a number of ways. First, it needs to be translated to its output path, which in this case is nothing since the file is ignored. Then it needs to pull in all its dependencies (every other file that uses the layout), which we have no way of attaining, and it needs to reload those files.\n\nSo basically, we cannot use browsersync to its fullest speed until all roots-supported compilers also output dependency trees, or we devise a method to make them all do this behind the scenes, and then after that until we make another set of changes to roots that allows us to track and use these trees for reloads and compiles.\n\nThat being said, there are two things that can be done here. The first is to try to approximate a couple use cases in which we can in fact reload just a single file, and for any cases where we can't be sure, reload everything. This was what we did in the previous version of roots, and while it ensured quicker reloads for a small number of use cases (like a single html view being changed), it also produced a number of bugs for edge cases where dependency reloads were not triggered and the watcher would have to be restarted. In this version, we decided to reduce bugs and simply reload everything each time the site changes.\n\nFor now, I'm going to move ahead with the integration and simply set it to reload everything each time, as it already does. As improvements come down the line and eventually we can perhaps make use of dependency trees, we will be able to take advantage of a little more speed out of browsersync, which will be great. Until then, the functionality will be there waiting for us.\n\nFurther discussion of the \"dependency tree\" issue can be found here for those interested and following along! https://github.com/jenius/roots/issues/586\n. @calebeby currently there isn't an option to configure browsersync, although if you'd like to make a pull request to add one you are welcome to, [the logic is here](https://github.com/jescalan/roots/blob/master/lib/local_server.coffee#L31). I'm not sure I understand the need to do this though, isn't this an issue with rails/turbolinks?\n. @calebeby honestly it would probably be better to just use spike-pushstate. I can fix it to work with the latest version if you want.\n. @calebeby it will definitely not work with roots (sorry, i was confused haha), but [this project](https://github.com/djeglin/cygnus-js) would!\n. Closed in 3.0.0-rc.2 release\n. Great, this looks like exactly what I was planning on adding as a fix when I filed that issue - thanks for the good work @nathanharper! Signed off to merge from me, unless @samccone has any objections\n. Not totally sure I agree there. The printer in v2 at least is the point that all errors flow through, so it makes sense that the handling would be there. Is what you're saying that it should be like a separate module, in a separate file thats required into the printer?\n. All right, lets get this bad boy shipped - thanks @nathanharper for a great contribution - this will be a part of the next release!\n. Have you taken a look at the architecture of v3 projects? It's actually quite similar to what you proposed here, but with a slightly more simple way to require compilers in locally, and without the part with running everything through app.coffee, just because I'd like to keep app.coffee simple and clean for people working on simple projects.\n\nAlso creating a new project runs through [sprout](https://github.com/carrot/sprout) rather than git clone - makes the interface a bit nicer and provides more options for customization of templates.\n\nBUT I have been working on making the public API very strong for v3, so I think something like what you are proposing there would be possible if you just made a template that had app.coffee configured differently...\n. Oh yeah, npm install is required for roots projects using any compilers in v3, so it would work that way : )\n. Just to ping you sean, there are some _major_ architectural changes going in on v3 this week, specifically related to allowing extension the roots core in the most robust way possible. These changes will make it possible for us to strip out **all features of roots** other than compilation. That means dynamic content, precompiled templates, etc. will be outside of core and loaded in as extensions.\n\nWe've spent a while scheming on these changes and verifying the extension API across a range of situations, and I think this will make roots more modular in a way you will be very happy with. Ping me with an email or gchat if you want to talk about it :grinning: \n. Yeah, definitely understand. I want to get the hooks API in place, then I'll make sure it's well documented and we can start building little extension packs. The top ones on my list are dynamic content and precompiled templates just to get v3 to a spot where it's just about feature-complete, but there's a lot of room and ideas for additional expansions beyond that\n. ``` bash\nalias roots-zip=\"zip -r public.zip public\"\n```\n. Export as pdf\n. I don't think \"zip file\" is an appropriate deploy target\n. No it's not. Making a zip file does not deploy a project. It might be one step in the process for deploying some projects, but it's not a deployment. If you have a full deployment process that includes zipping a file, that might be appropriate to add to ship, but I don't think just zipping makes the cut.\n. ahahaha\n\nfine then make an email deployer. but make the whole deployer not just the zip part\n. Why don't we close this thread and open up an issue in [ship](https://github.com/carrot/ship) with a proposal for an email deployer.\n. Closing this, discussion can continue in the ship repo.\n. It certainly isn't an issue with roots itself, if anything it would be an issue with npm. Roots is not even running at this point, npm is running to install the dependencies.\n\nSo let's dig into this. It's failing specifically on the git clone command, you can see the full command printed out there. Try running that command manually outside of npm and seeing if it still runs into the same error. It could be an issue with permissions, something with the git setup, or perhaps with the way the path is being used. Code `128` with git is just a general purpose error code, so really it could mean anything. As long as you are able to get `git clone` working outside npm, it should work inside, since you can see from the error trace that it's simply running that command through bash in a child process.\n. Woah, yeah thats super weird. I'm pretty sure roots is well under 10kb total (this will decrease significantly with v3), you must have a very small amount of space there or some other weird issues going on...\n. Hey could always use digital ocean! I can verify that it is cheap and 100% roots-compatible\n. Good news ladies and gents, we are all set up with readthedocs, and the documentation is looking truly wonderful. It is now desktop and mobile compatible and will also keep track of the exact docs for each tagged release, if I'm not mistaken. Whoo!\n\nhttp://roots-v3.readthedocs.org/en/latest/\n. Any update here?\n. Nah, not really relevant anymore with v3 - i wouldnt worry about it. Thank you though!\n. Only if someone is actually going to fix it, unfortunately I am not able to at the moment and I'd rather not have a stagnant issue sitting around forever.\n. Yeah going to re-close, you can re-open into `2.x` :grinning: \n. Yes, I have been keeping tabs on brunch for a while. It's missing multipass compiles, which is really important to my future goals for roots and would require quite a bit of core modification to add, and precompiled template support, which also would be difficult to add. I like brunch, and it looks really nice, but it's not going to be something that replaces roots in my book.\n. :sparkling_heart: :facepunch: \n. I understand what you are saying entirely. I have also been aware of the existence of both brunch and wintersmith for a long time before you discovered them, and spent time checking both of them out and exploring the options. I have very good reasons for building roots that I have spent quite a long time thinking about and discussing with my employer, carrot, who has invested quite heavily into roots as well and will continue to do so for the foreseeable future.\n\nIf you'd like to talk about those reasons, that's fine. I am also a developer, I also don't like duplicating things when it's not necessary, and I hope you've found in the past that I am quite able to have a reasonable discussion about whatever topic it is that you'd like to bring up. If you'd rather go quietly file issues in other projects saying that they 'seem more mature' and that you'd like to and abandon this project, I can't say that I'll respect that approach, but it's your time and you can do whatever you want.\n\nMeanwhile, I'm going to be focused and spending all my time and energy building roots into the best compiler of all time with the help of all the wonderful contributors and my good friends [doge](http://dogesay.com/wow) and [r kelly](http://www.sickchirpse.com/wp-content/uploads/2013/03/R.Kelly-Ignition.jpg). :v:\n. Haha of course -- I understand. Code is always a work in progress. Always happy to discuss roots' goals and future features in the works if you are interested as well, but it seems like we may have already lost your interest.\n. I am a fan of the way it uses workers to take advantage of multicore if present, was thinking of porting that in eventually\n. @samccone done - good catch\n. Huge step forward for v3. Dynamic content and precompiled template extensions already built on the API here. Still plenty of work to go to ensure that this is well-tested, well-documented, and easy to use, but that will be happening quickly.\n. test of any sort?\n. Fair enough. Did you manually test it I assume? I'm ok with pulling this in as long as nothing breaks of course.\n. This is a v3 issue by the way\n. Fixed on the v3 branch, will be shipped out next release :grinning: \n. Good news -- there is full support for setting any compiler option in the next version of roots (v3) - you can check this out on the v3 branch, there is already a working prerelease out : )\n\nClosing this not because it's not a valid suggestion, but because I entirely agree and it has been implemented.\n. If you want to test it out, try `npm install roots@3.0.0-rc.0 -g` - you'll see that a number of things have changed around. It's not yet a feature complete match of the current master branch (v2), but it should be in the next couple weeks :grinning: \n. Opening this in the right place, closing here\n. Closed by release 3.0.0-rc.2\n. Ah weird. I wish that dropped a better trace... can you figure out what's causing it?\n. Ok this one is ready for review @samccone \n. Agreed, this is definitely something I'd like to support in v3, good suggestion. For the apps that I work on that do this, I've set up nginx and had it proxy_pass to the port which has worked well in the meantime. Either way we'll definitely get this done and I'll let you know when it's ready.\n. This works through [charge](https://github.com/carrot/charge) in v3, our upcoming release. Whoo!\n. This is awesome. Like sam mentioned, these are all things we are working on (except for potentially hash digests, which I hate, but I would welcome work on them anyway for others). As you may or may not know, [Carrot Creative](http://carrot.is/), the company I work at, is sponsoring roots heavily and as an agency have many similar needs, and have already moved a lot of our dev over to static/api builds.\n\nThis is a great reference issue, and as we ship out each of these features, I'll ref back here. Thanks brian!\n. @brian-mann You're right of course, I mean I gettt why they exist... I just have so much hatred for the rails asset pipeline that if this were to be supported by roots I'd want to to be vast amounts easier to manage. Which I think is possible without a doubt, but probably a lot of discussion before we could hit this.\n. I think getting a solid assetgraph integration will be a big piece of roots, but they are not exactly equivalent if I'm not mistaken.\n. Yup, I think this is going to be a huge and very important piece of roots down the line. Looking forward to seeing some more integration!\n. Ok so an update here -- we've got everything checked off this list with the exception of sprite generation, source maps, testing things, and a couple of specific requests for deployment.\n\nFor sprite generation, I don't use sprites anymore for anything, to be honest. It's all svgs over here, and if you need super speed, inline them. So I have no interest at all in working on sprite generation. If someone was interested though, this is something that could definitely happen through either a stylus plugin, or a roots extension, both of which have plenty of documentation on how to make them for those interested. There's already [one here](https://github.com/selaux/node-sprite-generator) that doesn't fit the bill perfectly but could probably be forked into what you need quickly.\n\nFor testing, I feel like @samccone's [pioneer](http://pioneerjs.com/) is the best choice for integration testing, which is what you are probably trying to do on the client side. If you want to set up other tests still like mocha/chai, you can easily do this yourself and ignore the folder so it's not compiled by roots. It's also possible that an existing structure could be added to a sprout starter template like the current [base](https://github.com/roots-dev/base) if people were interested. Really, roots needs no special handling for testing, you just add the test folders, add an `npm test` task, make sure they are ignored from compile, and you're good to go. I think what's really being requested here are starter templates with test folder setups present, which can be contributed by anyone fairly easily using [sprout](https://github.com/carrot/sprout#writing-your-own-templates).\n\nFor source maps, this is something I want to have working before release. I have implemented source maps fully in accord, so now it's just a matter of merging that pull request and getting them integrated in with roots. This should be happening in the next week or two.\n\nFor deployment, I think these requests depend highly on your deploy target. For example, if you are deploying to [netlify](https://www.netlify.com/), which has been our primary target for the past few months, they keep full copies of the deploy history, and gzip your assets, send them to a CDN, etc, so it would be silly and redundant to do this also from the roots end. If there are other targets that would benefit from this (like if you are deploying to your own VPS), these optimizations would be included in that target's deployer in [ship](https://github.com/carrot/ship). As for executing arbitrary commands before/after deploy, I think npm scripts are the best place for this. For example, you could include an extra ignored folder called `deploy_hooks` and drop your scripts in there, then make this npm scripts:\n\n``` json\n\"scripts\": {\n  \"deploy\": \"node deploy_hooks/before.js && roots deploy public -to s3 && node deploy_hooks/after.js\"\n}\n```\n\n...then just run `npm run deploy` whenever you need to deploy the site. The VPS deployer, which is currently in progress, will also have before and after hooks built in the the ship configuration which will allow you to run a script either locally or on the remote machine you are connected to.\n\nSo overall, I'd say we've got everything we want in place other than source maps, and some extensions that could easily be contributed by those interested but that I wouldn't use and therefore don't have much interest in building. Which is great. That being said, as long as nobody has any objections, I feel like once source maps are merged, we are safe to close this out :grinning: \n. Wrong place to post this @slang800 but thanks that sounds good! Make sure to submit a PR for this.\n. Ok, let's keep that discussion in accord rather than here.\n. Ok so sourcemaps have been implemented and are fully functional in the sourcemaps branch. This will be merged and shipped out tomorrow. Pending a bit more polish on the docs site and some small adjustments to the deployment script, we will be merging v3 and going public with it. All that being said, I'm going to close out this issue for now. Thanks so much for bringing all these things up!\n\nIf there are any other issues here you'd like to see that I missed for some reason, we should open a single issue to discuss that feature :grinning: \n. Test?\n. Good idea. I'd definitely like to have this as a part of roots.cx as well. For me, the ones I can remember (I'm sure there are more)\n- http://carrot.is\n- http://markup.im\n- http://www.rainbows.io\n- http://everythinglulu.com\n- http://roots.cx\n\nWe also have a boatload of client work that we do with it at carrot, but a lot of them are short-lived campaigns that don't end up being up forever. We don't usually maintain things for long periods of time here, just build.\n. Awesome! I'm going to start working on one with the v3 prerelease (and I know sam is too) very soon as well, so we can start adding those to the list too, which should be exciting. It's still a little ways off from mainstream release, but once it gets there it will be a big dealio.\n. Closing because it's not an active issue with roots, but glad this thread is around! This will be used in the new roots site we're creating for the release of v3.\n. We'll figure that out once the site has even begin building but I assume yes : )\n. Is this still relevant?\n. yup\n. Closing this as project structure has changed a lot since, and it has been ignored forever. I'm still ok with this change if someone wants to reopen and pull it back in though!\n. Well done on the preview, and thanks for logging this. What is it writing to the image files? Do they open in preview at all? Are they zero bytes?\n. Weird. Ok we'll have this patched up soon, sorry about that! Sort of a critical issue haha\n. What do you think it is @samccone?\n. Yup! Sorry, v3 is far from ready for public use and not totally documented yet, but all external functionality has been moved out from core. To use precompiled templates, you can use the [roots-client-templates](https://github.com/carrot/roots-client-templates) extension, which has been tested and is working with v3 : )\n. Ok so the logic we need here to resolve this is as such:\n\n```\nif there are any extensions that are compiled, use the last extension\nelse use all extensions merged with a '.'\n```\n\nRight now it simply uses the last extension without any of that logic. Should be able to get this patched fairly quickly tomorrow along with a test case :+1: \n. Fixed on the v3 branch, will be shipped out next release :grinning: \n. Closed on the v3 branch, will be shipped out with the next release :grinning: \n. Ah that's weird - thanks for logging this. Will take a look!\n. Could you clarify that last comment a little bit?\n. Ohh hahah wow that is wild\n. Hey @dapetcu21 is there any way you could provide a minimal sample project that consistently produces this error, zip it up, and drop it here? That would be immensely helpful :sparkling_heart: \n. Yeah I did see it a couple times in the last test I wrote. I'll figure out what the deal is. Just closed out a bunch of filename issues, going to tackle this next - I'll try using your project. Thanks!\n. Since fixing up your project (the PR I just put in) I have not been able to reproduce this at all...\n. Let me know if you are still able to reproduce this after the fixes!\n. Haha ok, we'll close it for now. If it comes back up, we can re-open :grinning: \n. Hey I would love it it were fixed, but I just personally do not have the time or interest at the current moment to do so...\n. Ok @samccone et. al - ready for review here. Tryna merge this bad boy and close out a boatload of issues.\n. More details about your computer/os etc?\n. `node_modules` are ignored automatically on v3. Perhaps you are using bower as well? If you have a giant file tree being watched that doesn't need to be, it needs to be added to the ignores. You can define `watcher_ignores` in your `app.coffee` file to do this.\n. You may have installed the wrong version of roots if that's the case, since v3 does auto-ignore node_modules. If you run `roots -v` and its `2.x`, you are on the wrong version.\n. Ohhh man it looks like a refactor somewhere along the line dropped `node_modules` from the default watcher ignores! woah, pretty big mistake there, thanks for pointing this out.\n\nhttps://github.com/jenius/roots/blob/v3/lib/config.coffee#L58\n\nDo you want to submit a PR to fix this and claim the glory and credit?\n. Yup, I'm going to be taking a look at this today and early next week, I've noticed it as well :cactus: \n. Ok this should be resolved on the v3 branch, in my testing, watch has never consumed more than 2% of the CPU now. Fix will go out next release.\n. Yeah you're definitely right, we were talking about this issue this morning and are aiming to patch in a fix to both today. Thanks for pointing this out guys, this is super helpful!\n. Ok looks like this was some sort of weird fluke because I can't replicate it. Closing for now.\n. Just replicated it never mind\n. Ok now I can't replicate it anymore\n. The current stable version of roots uses whatever directory you run `roots compile` in as the base directory to be compiled. v3, which is in progress and has had several prereleases but is not yet stable, accepts an root argument on the command line to `roots compile`, so you could run `roots compile /Users/doge/projects/foo-project` from any directory and it could compile that one.\n\nIf you are asking if you can set which directory a web server will use to resolve the root domain, that can also be done but has nothing to do with roots.\n. Good call, will make this happen.\n. So just thinking about this, wouldn't it even be better to just stop the first compile and move to the second? Who cares if public is a little out of whack, it's going to be recompiled in a moment anyway. This would have to not be the case if we were to re-implement selective compilation (try to compile one file if possible rather than the whole project), but for now we are recompiling all...\n. This is something we want to fix before release. It just means a bit of queueing in watch mode. If anyone wants to jump in and help with implementation it would be awesome, I have my hands full at the moment but will get to this eventually if not.\n. Yeah, the root is that if you compile twice, it runs twice. There is no mechanism in place to queue compiles right now. It's not really that it's a bug with a solution, it's more of a feature that hasn't been implemented yet.\n. Yup, that's why we have an open issue for it...\n. Yep, this isn't so much a bug as a design decision. You shouldn't be using dynamic content variables in other pieces of dynamic content. In every use case we have found where someone is trying to use one piece of dynamic content from another piece, there has been a way to avoid this by refactoring the architecture of the site.\n. It does indeed appear to be running tests. Have you tried changing the \"package\" variable name as well, since that seems to be a legit error?\n. Ah yeah it's in eco. Honestly not sure what's going on and there is no way for me to fix it without seeing the source/environment. It appears to be trying to run roots watch on the `node_modules` folder based on the output.\n. I could check it out briefly, but this isn't something I can dedicate a ton of time to, unfortunately.\n. Let's move this outside of github issues, since this is really more of an individual support request than an actual issue with roots :grinning: You should have my email I think.\n. Hmmm I don't know about that. Pretty much any template will come with an `app.coffee` anyway, so if someone got rid of that or is building from scratch I have to assume they don't want it, nor would they want a warning every compile...\n. Well it was working - roots will compile whatever folder you are in. If you don't know what folder you are in, I feel like that is definitely not roots' responsibility to tell you. Roots is targeted towards professional developers who understand how to use the command line. I feel like incessantly warning people who do not use `app.coffee` would be way more annoying.\n. Yup, I think both string and regex should be supported. They would both be run against `match` anyway. This is a good feature add for a contributor to pick up - anyone up for it?\n. This is now part of roots util: https://github.com/carrot/roots-util#with_extensionf-ext\n. Same as the other issue, upgrade your node version to v0.10 or above\n. v3 is not compatible with node v0.8, upgrade your node version and it will work.\n. :wheelchair: :facepunch: \n. This is actually a very purposeful modification - roots url encodes all filenames before output. I _think_ that this should actually work fine though, as browsers handle symbols and their url encoded counterparts equally, as far as I'm aware. Have you tested to see if this still works?\n. Ugh yep it maps url encode to utf8 one way but not the other. What a pain. Will have this fixed next release, good catch!\n. Closed by rc5 release, whoo!\n. Please add more detail?\n. Yeah this would be nice to have eventually, pretty low priority though. I am making a gulp plugin for accord right now if that helps to ease the pain in the meantime though! I'll link it here when finished.\n. https://github.com/carrot/gulp-accord -- this will do the trick for people using gulp. Have used it in a couple places, it works pretty well. It's also running the `gulp-stylus` plugin right now, and potentially more in the future if I were to push for it more actively.\n. Whoo! Thanks @HHSnopek \n. [Node-gyp](https://github.com/TooTallNate/node-gyp) is a super common dependency required to install any native bridges, used by many libraries. As noted in this issue, it does not yet support python 3.x. It's recommended that you have a python 2.x install available to deal with this.\n\nIf you could offer more information on which dependency is is exactly that is causing your issue here, it would be helpful.\n. I understand that, but it's one of roots' dependencies that needs this actually - just trying to find out which one it is.\n. I suppose, but it does also tell you right in the error message, which is why i was asking!\n. This is for roots v3, which you can install with `npm install roots@pre -g`\n. If so, we [actually do have instructions to make sure python is installed](https://github.com/jenius/roots#windows-installs). Either way it seems like this guy has not been paying attention here, and if we are unable to replicate I'm going to close this unless we can get another update.\n. Ok guys it's time for merge. Any final objections? If not this will be merged in the next half hour and we will be live!\n. @ccsouthard 4 videos already up, check it out! http://roots.netlify.com\n. Try running `roots tpl reset`? I'm sorry, we're not very good at testing with windows, but we'll be working on steadily!\n. Honestly I am not sure. That kind of issue seems to be outside the scope of roots and more related to your computer's setup... what declan said there makes sense though. Not sure why you are using a secondary drive rather than the main for code projects, but I assume symlinks would be ok since code projects are usually quite small in filesize. At the same time, do symlinks even work on windows?\n. You mean you can give more information?\n. Yeah I know what the error is based on the message you pasted above -- it is the same error happening right?\n. Yeah, thats an error with [sprout](https://github.com/carrot/sprout) and it has something to do with the location of the config directory where roots templates are stored. It's such a massive edge case right now though and so difficult to test that I'm afraid it will be a bit before we get around to it, especially since we still are focusing on getting major features implemented and it's a beta.\n. I'm going to close this for now, will revisit later if we still see it as an issue!\n. Oh yeah clean hasn't been implemented yet in the v3 beta, sorry about that! Shouldn't be too tough to do so though if you want to take a crack at a pull request?\n. :+1: \n. Yeah it seems like it's probably an issue with the browserify plugin, which needs some updates.\n. Can you still reproduce this with the latest release?\n. Still able to replicate this with the most recent release?\n. Yup not yet implemented!\n. Implemented in the latest release!\n. Yep - roots 3 doesn't control compression by default anymore, that depends on options you pass to the compiler. For jade, the default html output is compressed. If you pass `pretty: true` it will make it uncompressed. You can do this through `app.coffee`.\n\nWe will however have extensions that do production-level compression and minification eventually. Right now we have javascript and css pipelines, and there will be one for html and images coming in the future.\n. Oh yeah it will be merged probably tomorrow. If you want to use it in the meantime you can close the `v3` branch and npm link to for testing (which is what I'm doing for roots-browserify)\n. If you are interested in adding this through a pull request, here's a good example of how it could be implemented!\n\nhttps://github.com/carrot/roots-util/blob/master/lib/index.coffee#L23\n. Implemented in fa187100180cb75c6c01f5bd856ec33b4fc39d2b\n. ahah fail. thanks for fixing\n. Awesome! We will only make it better over time :grinning: \n. Oh yeah I must not have been paying attention. Yeah I'll merge this shortly.\n. Hey @monkeez would you mind rebasing this on the latest of the `v3` branch?\n. There have been an absurd number of changes to things since this was submitted, if you can't and/or are busy let me know and I can do it. I just want you to get credit for the commit :grinning: \n. Pull request this in?\n. :cherries: \n. Ok so a couple things that I'd rather not merge in:\n- I like having variables aligned up top for cleanliness and readability.\n- I like having spaces between paragraphs of text. It makes them easier to read.\n- I like having spaces between my doc blocks and methods, both because it makes it a little easier to read for me, and it works nicer with the fold comments plugin, which is essential to me being able to work on this library with such a massive amount of inline docs.\n\nI'm happy to accept all the changes other than those!\n. Ok so rather than letting this sit around forever with these comments on it and the code not changing, let's just lay down the law now -- not all the changes in this PR are approved to merge. If no changes are made here by the end of the week, I'm going to cherry-pick the ones that are, merge them, and close the PR. Discussion still welcome of course, just trying to move things forward.\n. End of week has arrived, I'm going to pull what changes are approved and close this PR in a few moments.\n. What happens if you run it without the browserify plugin?\n. Weird. I feel like there are a few things that need to be revised in the roots browserify plugin. I'm going to close this out, could you re-open in roots-browserify since, while it does without a doubt involve roots, the issue is with that plugin specifically?\n. Great catch here. The behavior now is that the browser doesn't open until a successful compile goes off. If it fails the first time, it will show the error in the console but continue watching. Once it's fixed, the browser opens with the correctly compiled page.\n. The roots server is soon going to be a decorated instance of superstatic, perhaps would merit moving it out to its own module as well.\n. Implemented by charge, whoo!\n. I have seen this, it's super annoying. It seems to be an issue with the way node installs manpages. You can resolve it by manually removing the old manpage first as such:\n\n```\n$ rm /usr/local/share/npm/share/man/man1/roots.1\n```\n. Ah great, glad this was resolved, and sorry for the weirdness!\n. @slang800 \n- Call them what you want, but they are not just arguments, because they can only be strings. If someone told me \"you can pass any arguments through to this process\", that would be very misleading as opposed to \"you can pass any string through to this process\". This is why I specified them as strings.\n- It's not only poor SoC (whatever that is), it is simply not reliable enough for use. You can but should never stringify functions. If the function is bound to anything, it fails. If there are variables that are referenced outside of the function's scope, it fails. I'm not going to tell users they can pass a function, but only one written in this very particular manner.\n- Thanks for adding this info, but I am aware!\n- We can also use cluster, which does the same thing and is built in to node. I actually used compute-cluster in my test implementation and it worked fine after a couple mods to the source which I PR'd back to the library.\n. Closed by #501\n. Sinon isn't a dep in roots v2 though...\n. Yeah I wouldnt' worry about it. Can you squash all your commit together though?\n. Nope, looks good!\n. Thanks for filing this! I'll check it out soon and get back to you. I want to make sure that everything is working nicely for windows users, but don't have many windows machines around so it's hard to test.\n. For sure. I know @declandewet is also working with windows, and has been very helpful with testing things out. I'm afraid I must admit that often times during development windows issues are not a top priority, but I'll do my best to make sure things are working!\n. Hey @declandewet, is there any chance you could test this one on windows and see if you can reproduce? If not that's ok, just figure you have quicker access to windows than I do.\n. Ah lame. Not sure. Ok I'll bust out a windows computer from somewhere and test this as soon as I have a chance!\n. This should be closed by #482 \n. What version of roots are you using? You can find this out by running `roots -v` from your command line. If it's version 2, it shouldn't have a `package.json`. If you are here after watching the jeet screencast, the roots version used in this screencase was v3, as mentioned. You can install v3 using the command `npm install roots@pre -g`, since v3 has not been fully released yet.\n. Hey @s1efan - I think perhaps what you meant to say in your comment was that you are having trouble installing roots v3? Could you please paste the entire error log, and escape it as a code block in markdown?\n. Try running `npm cache clear` then installing again\n. So this is an issue with npm, it has nothing to do with roots. You can see the error source at these lines:\n\n```\nerror ReferenceError: resp is not defined\nerror at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n```\n\nI would try reinstalling node, updating npm, and/or bringing this issue up in the npm repository. Sorry I couldn't be of more help! To be sure, I just tested it on my own machine and it worked perfectly well...\n. Hey, have you tried out the prerelease of roots v3? Try running `npm install roots@pre -g`, you might run into fewer errors that way, as there are less bundles dependencies.\n. Indeed you are, but not for long. The current docs on roots.cx do not entirely apply, as a lot has changed. It's also missing the deployment options, but we're working hard on that [over here](https://github.com/carrot/ship) and will be bundling it in as soon as we can. All the basics are in place though, and there are a number of spots where there have been big improvements.\n\nIf you need any help or assistance with things, the core devs are available via chat to talk about v3, and we've been working on docs that are coming along nicely. By the time public release comes around (next couple months), these will be much cleaner and prettier.\n\nhttps://github.com/jenius/roots/tree/v3#roots-v3-beta\n. https://gitter.im/jenius/roots\n. Closing due to inactivity\n. Could you squash these into one commit?\n. I think it would be better to open this as an issue with [the plugin you made](https://github.com/dapetcu21/roots-cache-manifest) than with roots and ping me or some of us there for help? Judging by the error message, it seems like the plugin is doing some crazy things to the request object? I took a look at the source briefly, but it was very confusing...\n\nThe issue almost certainly comes from you modifying the roots core object through the plugin. As mentioned in the docs, you are allowed to do this in a plugin and it can break roots. This is purposeful though, we want plugins to have a lot of power, but as we all know with great power comes great responsibility.\n\nI'm going to venture a guess that it's almost certainly [this](https://github.com/dapetcu21/roots-cache-manifest/blob/master/lib/index.coffee#L30)\n. Huh, yeah would be great to have any more info here. The error is indicating that something is trying to write headers to the server after a response has already been served and strangely is traced back to infestor, which is working fine for all other projects. It might have something to do with modifying content length, not totally sure.\n\nPerhaps not overriding roots' after hook and using the `after_category` hook might help?\n. Hi @DiegoAz - like we suggested I would try `roots@pre`, as it has fewer deps and might be easier to install on windows. You might also want to get an ubuntu installation going on if you can because windows is really a disaster as far as software goes in general haha.\n\nBut thank you for the note here, and hopefully it will help other windows users!\n. Oh yeah I'm sorry, still working on that piece. Promise it will be resolved before the actual launch!\n. Hahah yeah... it's going to be just like the old days, busting out the crappy dell laptop to test ie7. But this time it will be command line instead :grinning: \n. Closing to consolidate windows install issues. We are working on getting things running smoothly on windows, this will be happening over the next couple weeks. Thank you for sticking with us through these frustrating bugs, I promise it will pay off in the end :heart: \n. Ah awesome, looks great\n. Thanks @olivier-g!\n. Woah, thanks for the great answers guys, +1 to all! @tomByrer, we're not totally finished with v3 yet, but when we are we'll have much nicer documentation, marketing materials, and demos/tutorials, promise. Thanks for hanging with us at the early stages :grinning: \n. Closing this for now, as examples have been provided in this thread. Feel free to let us know if you are looking for more!\n. Yeah this is not the intended behavior, but I haven't seen this happen much. Could you drop a quick reproduction case here?\n. Caught this little buggy. Resolved in 0c0a6369f3e20e7de9ba63a50db2eeb6df5da8a0, will go out next release!\n. Need lots more information here. For example:\n- What version of roots are you on?\n- If you're on v3, have you installed the dynamic content extension?\n. Yeah, if you are on v3, you're going to be dealing with a not entirely finished or documented framework that is vastly different from v2, so just be prepared for that if you're going to jump in!\n\nhttps://github.com/carrot/roots-dynamic-content\n. Awesome, would love to have you on board as a tester! We've used it for client projects and it has gone quite well, even in prerelease it's fairly stable as long as you can figure out how to use it. All the info we have is here: https://github.com/jenius/roots/tree/v3#roots-v3-beta and we're available to try to debug and answer questions whenever, since a huge goal for us is to make this easy to use and stable for anyone.\n. I bet you can spot the error if you take a minute, it's very clear and is in the `app.coffee` file if you read carefully\n. This is awesome - great work @samccone!\n. Yeah, unfortunately I think this piece needs to be in mocha, but that doesn't take away from the awesomeness!\n. For consistency. Mocha works great for all our other tests, why do we randomly need cucumber for one piece of it? We can use the webdriver in mocha, achieve the same results, and have consistency in travis and in our coverage reports.\n. Hmm ok if that works with travis that helps, although it still doesn't with coverage. I mean I understand, but cucumber is not used for any part of the test suite already, I'm sure you know what I mean with consistency. Also while I appreciate and enjoy cucumber, it's not really as useful for a dev-built and dev-specific project. We don't need business-readability here because it's not used by businesses. The test case names in mocha I think should be enough, and more familiar to the user base who will be working on contributing to this project...\n. Hey @samccone - do you still think it would be a good idea to merge this? There have been a couple changes to the api so it would need to be revised\n. Hmm yeah what do you think? I have some in here that do this, but they arent working super well honestly...\n. ?\n. Hi, since this is an issue you're having with dynamic content, could you re-open it in the dynamic content extension rather than in roots itself?\n\nMake sure to take a close look at those error messages, they are telling you what the issues is. You can log out objects in your jade views using `JSON.stringify`. Push a little further with your debugging here, and see if you can narrow down what the issue is!\n. What are your thoughts on this @samccone by the way?\n. :cactus: \n. Ohh weird, @tmilewski was having this same issue (images fine, but served as corrupted to the browser) with the previous release of roots, but nobody else was able to replicate it or figure out why. @MikaelX, are you on the roots `rc.7` release?\n. We just pushed a new release candidate yesterday evening that upgrades the server. Could you try with this newer release? It might resolve the issue. Just run `npm i roots@pre -g` again to upgrade\n. Ah awesome! I'll close this out then unless there are further issues :grinning: \n. Hi @jedifrog! Thanks and so glad you are taking some time to tinker around with roots. I tried to replicate this issue just a moment ago, but unfortunately I wasn't able to do so. Requirejs needs you to leave the `.js` off from the end of its paths as it auto-adds it later, actually adding `.js` should break the jquery load.\n\nI'm not sure how I can really debug this further although I wish I could. It might have something to do with it being linux? I am testing on osx now. That seems unlikely though...\n. Ok I can verify that it's not compiling this project correctly, although it is still correctly compiling projects that I create with `roots new`. Looking into it now.\n. Ah yeah, dots in filenames are a relatively tough area for roots, because it tries very hard to pick up on which extensions you are using them and compile properly, so it might be getting false positives. I will look into this still and try to make sure this doesn't happen, you should be able to name your project whatever you want!\n. Ok so I'm changing the name of this ticket and assigning it as a bug, although it's not a critical one. Will try to have this resolved for the next release!\n. This should be closed by #502 and will be out next prerelease!\n. @samccone how come?\n. I'm fine with having it work, but not specifically documenting it or anything. @slang800 could you add a test for this then we can merge?\n. Ready for merge here as soon as it's tested and rebased on latest v3 branch :grinning: \n. Beautiful - thanks @slang800!\n. Hmm I wouldn't call this a version problem, this is how [versioning is intended to work](http://semver.org/) - a major version bump means that there are breaking changes.\n. Yeah so v3 are all prereleases, which means running `npm install roots` will not install them, and will install the stable version instead. You need to run `npm install roots@pre` to get the v3 versions, and if you run that you have to assume you are getting a prerelease rather than the current stable.\n. This must be a bug in npm, or the intended behavior of the update command. You can [see here](http://registry.npmjs.org/roots) that the `latest` version is `2.1.3`.\n. I'm not sure really, that piece is on npm :confused: \n\nWhat it comes down to is really check your install version. v3 will be moved to stable in the next couple months so this issue will not apply anyway.\n. Yeah, it seems like this is npm's intended behavior for some reason. I'm going to close this, but if it's still bothering you I would open up an issue in [the npm repo](https://github.com/npm/npm) seeing if there's a way npm update can prevent the installation of prereleases\n. You're on v3 here, these templates are in the v2 docs. Run `roots tpl -h` for usage. Sorry I know this is confusing, we're working on adding better docs for this stuff. Will have them out before public launch!\n\nBasically,\n\n```\nroots tpl add foobar https://github.com/your/template\nroots new whatever -t foobar\n```\n. You can run `-h` on any command at any level as well. So if you saw that `roots tpl add` was a command but were not sure of usage, you can run `roots tpl add -h` and get usage docs :grinning: \n. haha waat is with that spinner?! Also the monitor for better stack traces is good but only for debugging, that shouldnt be in production roots, that that commit should probably be removed before merge. And what do you mean about slow, you mean the compiles?\n. @declandewet I'm not sure where you're talking about in sprout, could you link to the line and/or open an issue in sprout so we can discuss it there? :grinning: \n. Hi @weslien - is there any chance you could link me to the line that's using the `git://` protocol? This seems like it's definitely something we can manage though\n. Ah, this is super weird, looks like it's getting hung up on a dep that was removed a while ago, 3 levels down from roots. Could you try `npm cache clear` then installing again?\n. Ok, could you help find more specifically where that dependency is coming from? `st` is not a roots dependency, it was once a dep of roots -> charge -> alchemist-middleware, but it isn't anymore so im confused as to why its being loaded\n. It should show in the error log I think? I'll try looking through as well to see if I can find it. Thanks for pointing this out!\n. Hmm I don't think so, one overwrites the other. The cache clear should have cleaned up any old dependencies...\n. I don't see `st` coming in as a dependency when I install. Here's what the dep tree looks like for me:\n\n```\nroots@3.0.0-rc.7 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 graceful-fs@2.0.3\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 vinyl@0.2.3 (clone-stats@0.0.1)\n\u251c\u2500\u2500 configstore@0.3.0 (object-assign@0.2.2, osenv@0.0.3, mkdirp@0.3.5, uuid@1.4.1)\n\u251c\u2500\u2500 minimatch@0.3.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 when@3.2.2\n\u251c\u2500\u2500 readdirp@1.0.1 (minimatch@0.2.14, readable-stream@1.0.27-1)\n\u251c\u2500\u2500 serve-static@1.2.1 (parseurl@1.0.1, escape-html@1.0.1, send@0.4.1)\n\u251c\u2500\u2500 coffee-script@1.7.1 (mkdirp@0.3.5)\n\u251c\u2500\u2500 argparse@0.1.15 (underscore@1.4.4, underscore.string@2.3.3)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 update-notifier@0.1.8 (chalk@0.4.0, semver@2.1.0, configstore@0.2.3, request@2.27.0)\n\u251c\u2500\u2500 js-yaml@3.0.2 (esprima@1.0.4)\n\u251c\u2500\u2500 sprout@0.1.0 (indx@0.1.2, which@1.0.5, osenv@0.0.3, ncp@0.5.1, mkdirp@0.3.5, string@1.8.1, ejs@1.0.0, inquirer@0.4.1)\n\u251c\u2500\u2500 charge@0.0.3 (hygienist-middleware@0.0.3, infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.1, morgan@1.0.1, connect@3.0.0, faye-websocket@0.7.2, escapist-middleware@0.0.2, alchemist-middleware@0.0.4, pathologist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.0.3, publicist-middleware@0.0.1, lodash.remove@2.4.1, archivist-middleware@0.0.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 accord@0.10.0 (indx@0.1.2, glob@3.2.11, uglify-js@2.4.13)\n\u251c\u2500\u2500 chokidar@0.8.2 (recursive-readdir@0.0.2, fsevents@0.2.0)\n\u2514\u2500\u2500 npm@1.4.13\n```\n\nDid I miss it somewhere in there?\n. Ah that's strange, I see where you're talking about, but it's a development dependency, so it shouldn't be installed that way. Hm. Either way, will fix that up and release soon - when I do I'll close this issue and post a update!\n. Wow, thanks for this detailed writeup! Hope this helps anyone else who is running into this issue.\n. It doesn't currently reload on focus, there must be a watched file being changed when you re-focus? Perhaps it's something like a vim swapfile?\n. Yup, there is one. Add `watcher_ignores` to your `app.coffee` file. It's an array that takes minimatch strings. This should be documented [here](http://roots.readthedocs.org/en/latest/configuration.html#options), I'm sorry, I'll add it!\n. Hmm... any idea what could be causing this @samccone \n. Which refactor? I haven't been messing with the stable branch in quite a while...\n. Ah ok - yeah if you can get a test case up I'll def look into it\n. The issue referenced was for v3, so not related. I'm honestly not sure how to solve this, it doesn't really make any sense to me and I'm afraid I won't have time to debug this in v2.x because I'm working hard on v3. It is resolved in the latest v3 prerelease, but I do understand if you're trying to use v2 it might be frustrating.\n. :tada: :tada: :tada: :tada: \n. Thanks for resolving this - impressive that you were able to get through the code and find the fix :grinning: \n. Looks good, could you just rebase this on the latest then will merge?\n. Oh yeah so each adapter actually already does take the filename in the options, this happens [up here](https://github.com/jenius/roots/blob/v3/lib/compiler.coffee#L68). Perhaps this functionality is not working as intended, or jade changed the name of the option or something?\n\nWould you be willing to investigate this a bit?\n. Is this still an issue with the most recent release?\n. Closing due to inactivity\n. Perfect, thanks!\n. Hey, so I clearly was not thinking straight when i reviewed this -- this PR eliminates the ability to use anything asynchronous in either of these hooks, which is not good. I'm going to swap this back to using nodefn.call, but also pass `@roots` as the first parameter - this should be a good compromise :grinning: \n. Hmm true enough. Either way, fix was necessary, as this broke the before/after hook tests. But I will consider switching it back and asking for a returned promise instead of using a callback. Just need to comb through the API and make sure everything is consistent in that manner.\n. Hmm haven't seen this yet - let me know if anyone can find out more about this. It seems like this should easily be able to be modified using [this function](http://nodejs.org/api/events.html#events_emitter_setmaxlisteners_n) though, and that it does not represent a serious issue.\n. I have to assume this is happening with a bunch of parallel windows open, since the error is coming up on serve-static as well, just wanted to drop that note here.\n. Yeah, it's not actually a memory leak, it's just a warning node throws when you have more than 10 listeners to an event.\n. Hahah excellent response here https://github.com/jenius/roots/issues/495#issuecomment-45563755 - thanks guys for helping out and taking care of this!\n. Yup, good find @spectrecode -- this is how it's done. This will be included in the docs once they have been released. We're working hard on this now!\n. Thanks so much @spectrecode - we will, promise :grinning: \n. Closing due to inactivity\n. Is this closed now?\n. Oh ok, so you're just saying you want a command line flag for port rather than using an environment variable. You can run roots like `PORT=1234 roots watch` and it works fine.\n. Also, I think @kylemac is talking about the prerelase version, which can be installed with `npm i roots@pre -g`\n. @mhartington I made that video and can confirm that it's using the v3 prerelease :grinning: \n. If I'm not mistaken, this is a dupe of #485. Could you try `npm link`ing master and see if that resolves it?\n. :ship:'d\n. Updated :grinning: \n. So this branch is looking good, but is still failing on travis, because travis has a memory limit of 3gb, but also reports to have 32 cores on their test machines, and 32 roots workers chokes out the memory and kills the test process, sadly.\n\nThere are almost certainly a couple small leaks somewhere in the tests as well. I've spent quite a bit of time working out ones I could find, if anyone can spot more that would be wonderful.\n\nI'm not entirely sure how to work out the travis issue. Really I don't want travis using more than 4 cores, but if you have a machine with more than that (and presumably a scaled amount of memory), I don't want to cut you off. I think I'm probably going to take a stab at mocking the `os` require in the tests and capping it out at 4.\n. Spawning a worker is costly and takes a lot of time. I'd rather have them spawn at the same time upfront and pay that toll, then have everything run quickly afterwards, rather than waiting and/or doing extra measurement when you almost certainly want all cores running. And considering the average number of cores these days is ~4, even the tiniest and most basic project would instantly max it.\n\nBtw, tests passing! :tada: \n. Couldn't have done it without the support of carrot :sparkles: :sparkling_heart: :sparkles: \n. Awesome, thanks for the fix here. I think you could probably test it with its own fixture that has a dot in the name, then just have the test ensure that the fixture's name stays the same and all the files compile within it.\n. Wow such `/`\n. Closing as this hasn't been touched in months. Re-open if work is continuing here.\n. Already a PR in to fix this one: https://github.com/jenius/roots/pull/502\n. Also this: https://github.com/jenius/roots/issues/477\n. We'll have a fix in for this by the next release :grinning: \n. Yeah if there's a way we can have a test I would feel better about it for sure - any suggestions or patches to add one would be greatly appreciated.\n. I suppose I have been corrected. This was greatly appreciated, yet was neither suggestion nor patch.\n. Haha glad it was worked out, sorry I've been busy this weekend and catching up on stuff late :grinning: \n. At the moment there is not -- the best way to do this currently is to use a \"snippet\" or \"intro\" front matter variable as you suggested.\n\nHowever, a new version of roots is coming soon that will include the ability to add on extensions, and we're thinking about ways this can be done!\n. So I don't really want to have all front matter fields auto parsed for markdown (in case someone doesnt want it, if we did have that feature it would have to be optional), and in jade at the moment there is no way to apply filters to variables. You could however take the slightly more verbose way of requiring in something like `marked` as a local to jade, and passing your text to that function...\n. This also might be a great addition to https://github.com/carrot/roots-dynamic-content\n. You can add any library to the [locals in your app.coffee file](http://roots.readthedocs.org/en/latest/configuration.html#options) by just requiring it and adding it in there. Functions work as well. So if you get a function that converts markdown to html (like [marked](https://github.com/chjj/marked)), you could require that, add it as a local, and use it in your templates.\n. Oh yeah this also needs tests as well. I'm not sure why I merged this so quick, I wasn't thinking. I might revert this, then you guys can work in another PR that's more thorough with tests?\n. Hmm do you think we should have this be `_path`? I'm honestly not sure, 50/50 right now.\n. Ok cool, let me know when that's added and we'll get this merged up\n. Beautiful - thank you! :airhorn:\n. Yuup - jeet site compile time in watch mode with roots workers is ~2-3sec, which is a pretty vast improvement. It's only bounded by the stylus compiler, actually.\n. The issue is that the user can also configure the plugins. So they require them, which we could pull paths from, but then they can call the function with parameters that modify the behavior in `app.coffee`, which returns another function. This is even more so the case with extensions. I don't think there's any way around having to require `app.coffee` into the workers :confused: \n. Yup, luckily I've already taken the time to write out all the extra logic for those gains, which in my opinion are not minimal. For example, your results show that, disregarding the weird apparent memory leak issue, you'll get a 1s increase in compile time by having workers handle functions while watching, on a medium-sized project. When you are developing a site, making changes, saving, and quickly checking back, you can easily rack up many minutes of saved time when adding up those seconds. Over the lifetime of a medium to large site, it could easily be hours. And as your site gets bigger and uses more complex functionality, the difference between the two implementations increases further, so rather than a 1 second difference, it could quickly become a 3 second difference or more as the main thread gets more and more overloaded by the use of view helpers and css plugins etc.\n\nIf I hadn't already written the extra logic required to fully optimize, I would say yes absolutely, let's just merge accord-parallel for now and optimize further later. But _we have all the logic we need to make this as optimized as possible already written and working_. I spent weeks on working on this, literally - it just needs a bit of extra time to fix a memory leak somewhere. I didn't spend this time because I'm a huge idiot and just said \"fuck it, let me just throw away weeks of work on something that doesn't matter\", this optimization is _really important_ for the viability of using roots on large complex sites. Think of carrot's website for example -- we pass functions to all views and all stylesheets. This makes for an extraordinarily slow compile on your proposed architecture, pushing every view and stylesheet into a single thread. It could easily be orders of magnitude slower than the existing implementation -- we have _a lot of views and stylesheets_. The workers would crank through the coffeescript, then sit around idling while a single thread tried to get through the majority of the site. I wouldn't be surprised if many complex sites want to include a variety of stylus plugins and view helpers. These are good things to include, and make developers more efficient. They should not be punished for this. I think potentially every roots site will have stylus plugins, which means all stylus will automatically be pushed to a single thread straight up, even smaller sites.\n\nI understand the desire for a simpler implementation. I like the work you have done with accord-parallel. But I spent a lot of time thinking about and testing various implementations. When it comes down to it, **we need maximum performance** in order for larger sites to be viable in development. And we **have the code written already** that will get us there. Rather than spending time here arguing for an implementation that is slower, I would much rather see you dig in and try to help out with fixing the leak in the current implementation.\n. Closing as we are going with a different route with accord parallel for doing the optimization here. What a difficult issue.\n. This is on the workers branch?\n. yeah, its an issue with the error being passed correctly between a worker and the main thread that emits it for sure...\n. You've got a weird weird error going on then. I have never seen that before.\n. Any minimal use cases I can get here to reproduce this error would help a lot!\n. Awesome - new prerelease coming shortly as well that will fix a few more bugs too.\n. I think a better solution would be to fix the issue with roots workers, would rather see time dedicated towards that.\n. Thats not really how I like to work with code, saying \"eh well this seems hard to fix so lets just put in a suboptimal solution instead\". v3 is still unreleased, there are not hundreds of people banking on it in production, and we have the time and talent needed to make this fix. I would love to have your help, but if not that's ok it will still be tackled.\n. It's not ever going to be as fast, since it pushes any compiler that takes a function back to the main thread rather than balancing all compile jobs between all threads. You know this already though, not sure why I had to explain it.\n. The additional load of app.coffee etc is only a cost that's paid once, on the first compile. We are optimizing hard for `watch` performance here. I don't mind at all if we take a bigger hit upfront if that shaves time off each compile afterwards. If you can find some way to beat the perf here on a function-heavy project, or to serialize functions without setting limitations, which in my knowledge is not possible, I will accept. Otherwise I want this as fast as is physically possible for watch performance, because that's where it's most important, during development.\n\nIf you honestly think that you will be able to do either of the above, I would love to hear about it. Otherwise I really hope that you will be able to accept that this has to be a little less clean for the sake of optimization and help out with the existing implementation rather than continuing to argue.\n. Ok @slang800 so, while I am unhappy with the fact that you continue to endlessly argue here without any substantial backup instead of accepting what I'm saying and helping out, which appears to be a trend with any issue that you don't agree with me on, after thinking about this for a while, I have changed my mind and, at least for now, will likely end up pulling workers back into a branch. Let me explain.\n\nThere is no question that the workers implementation will be vastly faster in almost any complex site than the accord parallel implementation. As I have mentioned _numerous times_ above, the fact is that in a sufficiently large site, there will most likely be functions passed to all stylus and all jade templates. That leaves only the coffeescript to be compiled on other threads, and after looking at benchmarks, coffeescript compiles only take a fraction of the time that even simple jade or stylus files do anyway. It's simply _not feasible to pass functions through processes_, and there's no question that the ability to pass helper libraries and functions through to jade and stylus is incredibly useful. This means that _workers will always be faster_, and that the more you take advantage of roots' capabilities, and the larger the site becomes, the slower using accord-parallel becomes in comparison. This would would be the case because all jade and stylus files would stay on the main thread as soon as you are using css and view helpers, and the larger the site is, the more jade and stylus files you have, and the slower the compile becomes as the worker processes finish up the coffeescript in milliseconds then idle while the main thread tries to grind its way through hundreds of files. There is simply no arguing with this, it's a fact.\n\nHonestly, I'm not sure how you have continued arguing with it up till now, since you obviously are a brilliant guy and I'm sure you understand what's going on behind the scenes here. There is a _zero percent chance_ that accord-parallel will be able to work faster than the workers implementation, if we're talking about the theory behind them (discounting the unfinished implementation at the moment). Zero. Getting it close might be possible conditionally, like if a there's a project that doesn't use helper libraries or functions. But that's not what I'm interested in - I want maximum speed in watch mode, unconditionally, and _especially_ for larger and more complex projects. Roots workers gives you that, and accord parallel _does not, and will never_ give you that. That's why I stated that would rather have you dedicate your time and effort towards helping with getting roots workers running smoothly, rather than arguing with me, as I have mentioned time after time. Because it is the ideal solution, I've dedicated weeks of hard work towards getting it working, and we have something in place that works fairly well, and just needs a bit more work to finish it up.\n\nThat all being said, after having thought about some of the issues that are appearing, I'm starting to realize that the main issue with roots workers is _the extensions_. Some of the extension hooks execute inside child processes, and some do not. And within extensions, it was previously expected that you would be able to make changes that would affect other files, which would not work for hooks that execute inside worker processes. For example, in the dynamic content extension, logic is executed within the worker processes that pulls the front matter, and makes the front matter data and some helper functions available to all other files by adding them to the locals. But since the worker processes carry their own copies of the settings, compilers, variables etc, adding something to the locals from within a process does not make it echo to all other processes, and therefore other files. My first thought was ok, let's just make the locals shared across processes. But then you have to require that no functions be added to the locals, since functions cannot be shared between processes. And we've run into another difficult function-passing issue once again.\n\nExtensions are super important for roots, and having to restrict them is not what I want. And since I've already poured weeks of time into this and am sort of burned out on it, since you are unwilling to help me as you favor another solution (which I think is a huge problem which I have brought up a bunch of times with you, but unrelated), and finally since I am spread very thin across a lot of projects right now and need to continue making progress, this week I'm going to try to roll back the workers piece into a branch and implement this instead.\n\n:bow: \n. Hey @slang800 when you have a minute can you rebase this on top of the v3 branch?\n. I just manually reverted what was needed. It was much less work that way.\n. A huge number of tests failing on this branch, any chance you could check this out?\n. Closing as this hasn't seen work in months and still has failing tests. Re-open if work has resumed here!\n. Test for this?\n. Not looking for really in depth ones, just one that runs a compile with that option really to ensure it doesn't crash :grinning: \n. Yup, it was removed from roots. You can import it yourself into stylus or sass or whatever you are using if you need!\n. This is in progress in #533 - just with keen instead of google analytics\n. Ah actually the global path is now `_path`. `filename` also works, but is provided by jade, not roots itself, so it will only work in jade files.\n. I'm writing this up right now as an article for the docs site, so going to close this issue. Wrote up all the things that were suggested here though, so thank you guys!\n. Hey Tyler! Could you check out the public folder and let me know if the correct files are in there?\n. Ok cool - what is the name of your project folder? Also, is the latest release of v3 working ok on windows @declandewet? I have been working super hard on developing the features but not on testing them on windows yet.\n. Could you try a project name with no underscore? Long shot, but there have in the past been issues with this and who knows whether windows handles them in a crazy way...\n. Hmm, ok - is there any way you could help out a little looking into what might be the cause of this? I'm working on a bunch of features now and it will take me a little bit before I get to windows testing :grinning: \n. Wow, thanks for looking into this so deeply @philbarr! We are looking to get things fixed up on windows for v3 -- since you did the hard work to dig up these bugs are you interested in sending a pull request in to fix them? This way I can push the fixes in the next release and you won't have to deal with all these hacks to get it working.\n\nWould also like to pull @joshrowley into this and see if there's another way we might be able to fix the EMFILE error without breaking roots for windows -- I'm sure we can figure out some workaround :grinning: \n. Sounds good. Even if it's a manual alternative to changing emfile limits that we can put in the readme as an aside for when you have a large enough site, I think that's better than having roots broken on windows.\n. Closing due to inactivity, although getting things working on windows is still on our todo list, promise!\n. Did you try taking out the `layout*` in the app.coffee ignores?\n. Hey @laurosantos - this is not an issue with roots, it's an issue with a very old version of [axis](https://github.com/jenius/axis) - you should open the issue there :grin: \n. Closing due to inactivity\n. Yup, I agree. It's not being worked on at the moment though, so I want to keep the issues section clean and focused.\n. Closing this as we're gearing up for a release of v3, which doesnt not have this issue\n. So while I would like to do this, the current stable roots has something of an issue with dependencies. Technically, this upgrade would be a breaking change and therefore require a major version bump. In the next version of roots, we don't lock dependencies into core like this, and jade is at the most recent version. If you are looking to use upgraded dependencies, I would try out the `v3` branch for now.\n. :+1: -- don't see much difference since the next upgrade will be to v3, which has different tests, but happy to merge in if you guys want since it does no harm either\n. Thanks @tuvistavie!\n. Ah ok, could you check the version of axis that's installed in the package? I thought I had stylus and axis versions locked for the current stable roots, but perhaps a bug slipped through somehow. Roots stable is not in active development anymore (we're working on v3 now), and the version of axis used in roots stable is also well in the past, so it must have been something with stylus I assume?\n. Hm, stylus is locked up at `0.38.x` right now, and it appears as if the last release on that version slot was last september. Honestly I'm not sure what could be causing this, since all the libraries in question don't seem to have been touched for quite a while :confused: \n. Ah good catch, I have seen issues with this before. So it must be a bug of some sort in the css minifier... weird\n. Closing for now, will reopen in axis if it continues to be an issue in v3\n. Good catch, thanks. Fixed.\n. Anyone have thoughts on this? I feel like perhaps @samccone or @slang800 might\n. Yeah so there is a notification message, but honestly I'd rather have it on by default if possible. I doubt many people will turn it on explicitly if not, and the info we're collecting is anonymous and only used to make the tool better.\n\nThis is the message that appears after installing roots -- think this is ok?\n\nhttps://github.com/jenius/roots/commit/01d51634f2d78450063c9f89cc9af07c2c73d3cc#diff-b66d5bed1398a93cb033836fd2c458bbR3\n. So I think the posix stuff crashes both windows and linux. @slang800 noticed this and has a fix [here](https://github.com/slang800/roots/commit/3daf1dd1cf48a9617e694b760fd45292d246ea34). Would perhaps using graceful-fs be able to fix this instead? If not we need to scope this to just osx I think...\n. ok has this been rebased on top of v3?\n. Axis actually depends on and extends nib: https://github.com/jenius/axis/blob/master/index.js\n. Closing since this isn't an issue but feel free to reference!\n. Hey @weslien,\n\nI'm so sorry about that! I hope we can get this resolved soon. I need a much better error report than this though. Rather than asking if I have any ideas of what might be broken with your site (which I certainly don't, I wouldn't have pushed rc8 if there were known defects), it would be more helpful to me if you told me what was broken with your site so I could reproduce and/or look into it. For example, what's the error message you're getting? What part of the site is broken? What is actually broken about it? Take some time to dig in and try to give me details. The more details I can get, the more likely I can help.\n\nAlso, there isn't a single dependency in roots v3 that uses `latest`, this would be a really stupid decision, and I promise you I am not that bad of a programmer. You can see the dependencies are [all version locked according to semver](https://github.com/jenius/roots/blob/v3/package.json#L21). It's possible that one of the dependencies has pushed a breaking change or a bug that breaks the semver conventions -- sometimes this happens. The easiest way to fix this is to locate which package it is, and lock it down further until issues are resolved.\n\nIf you want to roll back to an earlier version, you can't use the `roots@pre` tag, since this only matches the latest prerelease, you need to use the full tag. For example, to go back to rc7, you'd use:\n\n```\n$ npm i roots@3.0.0-rc.7 -g\n```\n\n...at least for a global install. You can find all of the tags that are possible to install with through npm in the [dist-tags key, here](http://registry.npmjs.org/roots).\n. Ah yeah that's no fun. Breaking changes shouldn't be happening in minor versions, so this is not really acceptable on jeet's part. Glad you figured it out though! And thanks for the tip on charge -- I'll definitely get those cleaned up and bumped for the next release :grinning: \n. Closing due to inactivity\n. :+1: \n. Hey @Janomat!\n\nThanks for coming by and trying out roots! What you have linked to here is actually a project that has nothing to do with roots itself. Roots is just a static site builder, so it does not include any sort of css tools or libraries. Perhaps you are after [axis](https://github.com/jenius/axis), which is a library of css helpers?\n\nEither way, the good news is that you can easily include this file yourself, and it should work just great. All you have to do is copy that gist into a file and drop it into your project in order to use it. I'm going to close this issue because it's not something that will be changed or a problem in roots, but happy to continue discussing here still if there's anything I can help out with or clear up :grinning: \n. Roots and axis are heavily sponsored by [carrot](http://carrot.is), where I work, and we make quite heavy use of these things, so I can assure you they are not missing.\n\nAxis has support for rem in the typography module: https://github.com/jenius/axis/blob/master/axis/typography.styl and rems are supported fully in IE9+ wherever else you want to use them.\n\nThere's no need for extra svg support in axis. SVGs work great by default as long as you are IE9+, anything under that requires conversion to pngs and selective replacement, which is outside the scope of css in general.\n\nAnd high res images are up to you exporting them from photoshop, not up to css.\n\nI think you'll find that all the tools you'll need are there. If you have any ideas for additional utilities that you'd like to add, please [file an issue in axis](https://github.com/jenius/axis/issues) and propose it! Generally happy to add any other useful utilities.\n. Going to merge this for now, but it doesn't really make any sense that it would work. Will revisit if the problem arises again.\n. Cool yeah I'm going to check that out and try to patch it up this afternoon\n. Hmm, I'm unable to replicate the error locally. Perhaps it's a unix only sort of deal? Pretty nasty.\n. You should be able to run `roots deploy gh-pages`, but this is a new feature so there might be some bugs. If you find any log em!\n. Hey sorry, yeah I just pushed from the wrong branch. Shouldn't affect the code though, and is fixed now :grinning: \n\nAs far as the cli stuff, I want to make sure the cli interface is not running actual compiles. There are already tests in place for the API, so I don't want to test it twice. I think we can figure out a way to cover this still...\n. For example if we're testing the environment piece, we can mock out roots, then ensure that the correct `env` is being passed in to the mock. This would provide coverage without adding the double coverage on basic compiles and wasted time for the the actual compile. There is actually already a test for environments in the API section (bottom of the compile test file), we just don't have one in the CLI yet.\n\nLet me know if that doesn't make sense I feel like maybe it doesn't after reading it over again, I might be able to explain it better in person.\n. But yeah let's get some coverage in for this then merge and patch :palm_tree: \n. Huh, it looks like the tests are failing, but they look good to me! Are they passing locally?\n. Ping, would love to get this merged in!\n. Closed by #564\n. Ah so you actually have to add templates manually at the moment -- roots is not preloaded with templates in v3 at the moment. There also isn't a v3 blog template yet. `roots template` provides more help with adding, listing, and managing templates.\n. Not at the moment, working on a variety of other things. Would you be interested in helping out? For a blog, you can use https://github.com/carrot/roots-dynamic-content\n. Cool, thanks for the heads up! Feel free to reach out directly with any suggestions or requests for help :grinning: \n. Yes, this will definitely be included in the new docs site. The setup is similar, but not exactly the same. It uses [ship](https://github.com/carrot/ship) behind the scenes for convenience, but ship can also be used standalone. The heroku, s3, and github pages deployers are relatively stable, and we're working on more. I'll make sure to get these documented soon!\n. Yeah in this case the repo is supposed to be `user/name`, as in `jenius/roots` -- although there is a definite lack of docs on this that I should fix.\n. Haha yeah me too, I'm sorry. I'll patch this as soon as I have a block of time that I can work on ship/OSS\n. Or happy to accept help as well!\n. Closing this as it's not an issue with the code and we are working on documentation now!\n. Seems fine to me! Have you tried upgrading to roots v3? It has much better support for stylus and other compiler plugins\n. Is this still\n. Hey @dietlev! What command are you running to try to create a new roots project, and what does the output look like -- or is there no output at all? Also, no need to use `sudo`\n. Hey @dietlev -- I just installed roots `2.1.4` fresh from npm and ran the command `roots new example`, and the command created a new project and logged that it did to the console perfectly fine. I think there might be something up with your machine specifically that's causing this? There have been no changes to roots 2 for quite a long time as v3 is in active development, and I haven't heard this error from anyone else either :confused: \n\nI have just about the same setup as you though, latest osx and node versions. I'm not sure by those stats alone what may be going wrong. I guess if I were to take a stab at it I'd say run `npm cache clear` then try re-installing roots and making sure there were no install errors?\n. Hi @dietlev -- just checking in here, are you still getting this issue?\n. Closing due to inactivity\n. Which version of roots are you using?\n. Hmm this is strange, and seems like a windows specific error. We're gearing up to release the next version of roots right now so this might not be looked at for a bit, but definitely seems like a bug and will try to get to it eventually!\n. Hey guys,\n\nGood investigation here, and thanks for looking into it. Unfortunately, at the moment all efforts are going towards getting v3 of roots out the door, which is due for a stable release in the next couple weeks, so I'm not going to have time personally to go back and fix deployment on windows for v2 right now.\n\nFor the next version, we moved deployment out to an external library. While this is still not entirely stable (deployment is incredibly difficult), we have used it to deploy a number of roots sites to various destinations with solid success. If you want to try out using ship, I'd be able to get to those issues more quickly, as we need to have this working well for the v3 release.\n\nhttps://github.com/carrot/ship\n. Closing due to inactivity\n. Run `npm install` in the project rather than installing express globally\n. Ok, looks like it's an issue with [roots-express](https://github.com/jenius/roots-express), perhaps with a newer version of express. Roots-express hasn't seen work in a while, but it might be a good time to update it. Are you interested in helping out?\n. Sorry, I guess what I was trying to say here is are you interested in helping to fix the issue, not send me log files haha. I currently don't have the bandwidth to fix the roots-express stuff on windows, and on top of that roots-express will almost certainly be deprecated over the next month or two. If you still are interested in maintaining it, that would be awesome, otherwise I'm afraid I won't be able to get to this immediately.\n. Closing here, as this is an issue for https://github.com/jenius/roots-express\n. So this does belong in roots dynamic content, we can discuss it there:\n\nhttps://github.com/carrot/roots-dynamic-content/issues/13\n. You certainly can: https://toolbelt.heroku.com/\n. Also, we will be working on getting all deploy errors fixed up in the next couple weeks -- this is not being ignored.\n\nRoots deployment is still a new feature with a number of bugs (cross-platform deployment is _really_ hard), but we will make sure all deployers work well before public release. Thanks for being early adopters and sticking with us through these frustrating bugs, we love you guys :sparkling_heart: \n. This should be resolved now, ship is much more stable at this point :grinning: \n. Exactly the same error that was posted here, and you are on `3.0.0` stable?\n. :+1: \n. Yeah, getting v3 working on windows is important to us, and we would very much like this to happen before the release, which is happening hopefully within the next month. I think this is another issue with the posix module, which we really need to remove. If you pull it down locally, remove posix from the `node_modules`, and run `npm i` does it install cleanly?\n. Ah man, this is not the first time I've seen people have issue with the npm cache on windows.\n\nDid you clone the project down then just run `npm install`? You can also use `npm link` to have it install and create a global symlink.\n. Hmm roots-util only has it has a peer dependency -- does that try to install? I didn't think that peer dependencies also install, they just check the host to make sure it fits that version spec...\n. Ok, so peerDependencies actually does install the core. That's pretty strange...\n\nYeah I'll try to get rid of this next week and will let you know. Thanks so much for all your hard work helping out here, and I'm sorry it's such a pain!\n. @samccone found this great replacement for posix that allegedly works on windows, we are looking into this now!\n\nhttps://github.com/prantlf/node-posix-ext\n. Send in a PR?\n. Closing due to inactivity\n. Yeah, unfortunately it does not look like we can do anything about this. I used the smaller lodash modules because charge can be used by itself without full lodash, so didn't want to add unnecessary dependencies. But apparently even the regular lodash package causes this issue, along with a number of other libraries that use deeply nested dependencies. This is unfortunate, but there isn't really much we can do about it until either windows or npm fixes it up.\n\nI really would like roots to work with windows, but this seems like a very difficult issue to work around, since it really is very far outside of roots itself. If the compromise we have to take in order to get it working on windows is to include unnecessary dependencies, I wonder if that's actually worth it...\n. Ah ok. While this is unfortunate, because it's an issue with node and windows rather than with roots, I'm going to close this out so we can stay focused. If anyone have a potential solution that does not involve making the project less efficient, I would be happy to discuss and merge this in!\n. Could you provide more details here?\n. Roots uses your default browser at the moment, have you tried switching your default to chrome canary?\n. I think potentially @artelse is asking if it would be possible to add the browser to the app.coffee file so it always used it. This is actually pretty feasible -- we use [node-open](https://github.com/pwnall/node-open) to open the browser, which takes an optional second argument specifying the program you want to use. We could just add a config setting that would set this option if specified...\n\n@artelse especially since this is a pretty easy fix, would you be interested in jumping in with a pull request to implement it?\n. Sounds good! Just as a push in the right direction, this is probably where you want to be looking: https://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L43\n. Hey @artelse any update here?\n. Hey just checking in here again\n. Sounds good! I think for now I'm going to close this issue since it's very old, to keep our issues section focused. Looking at a major release shortly. But if you do have time to check this out, definitely ping and re-open :grinning: \n. hahaha\n. Still a bunch of failing tests here...\n. You guys are the best :sparkles: :sparkling_heart: :sparkles: \n. Awesome, tests passing on travis now is a great step. This should be set for merge then, although it certainly doesn't mean we're done with windoge, unfortunately.\n\nThanks so much again for working on this, really appreciate it!\n. Still some work to go, but we're getting there!\n. Hey @davidmoshal!\n\nSo this is an interesting question. There is a way to do this, but it's not going to be as simple as you are looking for here. The public directory is where roots puts compiled files from the source. It gets all it's information from the source, so piping the files directly into public is essentially just going around roots. If you want the information to be available to roots, it needs to go through the pipeline.\n\nI'm not sure if you are on the current stable release or v3 (you should be on v3 if not, it's very close to release, we're just finishing up docs and such now), but either way in order to get the listings in the way you want, you need to define the pdf/html docs as dynamic content. This means getting them into a folder in the source (like `/documents`) and making sure that they are prefixed with any front matter. To keep the html formatting you can just use ejs.\n\nSo here's what I'm imagining. Your script converts the pdfs to html, then adds a front matter block with a title followed by the html from the document to a file, adds that file to a `documents` folder in the source. Then you run `roots compile`, and the docs will be available via `site.documents`. Does that all make sense?\n. Yeah, so what you are describing now is in the general range of capabilities for roots v3 extensions. I'd like to have functionality like this available through plugins rather than bloating the core out with it, but it's possible for sure. I also want to stay away from any sort of dynamic stuff, as the output is intended to be served as flat html files rather than requiring a server. If you are interested in helping out with working on this kind of stuff you should chat with us though!\n\nhttps://gitter.im/jenius/roots\n\nAnd thank you, so glad you are liking it!\n. Yeah, v3 is more reliable here and uses chokidar, give it a shot and it should solve that issue.\n\nAs far as your interests, I think you'd be surprised to find that our targets are not all that different. Roots is heavily sponsored by the company I work at, Carrot. Carrot is an agency, which means we do a large amount of work across a large variety of companies and requirements, and roll most of it out as static. The way we introduce real-time and/or dynamic features is through javascript, which is in heavy use, and which at least I am very comfortable with -- check out the v3 source and you will see this.\n\nFor us, most builds are static for front-end and javascript, then have a server that exposes an API that can interact with the page. In v3, you can even pull some pieces in from the API and render them as static if you need. For example, if you had a blog, you could pull the first 5 blog posts from the API and render them static, then if the user hits \"next page\", hit the same API with javascript, offset by 5, and render the next 5 posts into the same template, which has been precompiled for use with javascript. It's quite a nice flow.\n\nStatic is extremely powerful, decouples your front end and back end entirely, speeds up site load time significantly, and reduces hosting costs a ton. Give it a shot for one of your apps and you'll never come back :grinning: \n. Yeah hexo looks like a nice library for sure, but it's built only for blogs, where roots is more for general purpose static sites. You can see an early preview of some of the plugins we have in place [here](http://roots-web.bitballoon.com/extensions).\n\nTo get v3, install with `npm i roots@pre -g` :grinning: \n. For hexo, interested to see how it turns out, but the tagline is that it's for blogs, which means this is the developers' obvious intent, so I wouldn't try to stretch it too far, unless of course you're making a blog in which case it sounds solid.\n\nAs for the prerelease tag, it's honestly more because we haven't finished polishing up the docs and marketing site for public consumption rather than a lack of stability. There are actually a number of roots v3 website out in the wild already for paid client work and it's quite stable.\n. I think you might be missing quite a bit when it comes to the roots extensions. The docs for this might help, they have quite a large bit of reach:\n\nhttp://roots.readthedocs.org/en/latest/extensions.html\n\nThere are plugins for roots to do a lot, anywhere from pulling json from an external API into your templates, to transforming css or javascript on the way out, to generating dynamic content. There are examples for each of these use cases and more on the page linked above.\n. As for the entry point, roots.cx is currently for roots 2 which does not really have strong plugins. In the next month or two as we roll out v3, this will change. The site I linked is for v3, which has much expanded capabilities and is the one under active development right now. The pipeline is entirely open. You can do anything you want with a v3 extension, all the way down to reconfiguring how roots works entirely, changing the core. This makes it quite powerful, but also challenging to use, a sacrifice that comes with the power. \n\nYes, roots is entirely static, no server-side coupling of any sort, and that is entirely on purpose and will not change. You can still [write within extensions](https://github.com/carrot/roots-util#writepath-contents) to create custom content to any file path you want. If what you are looking for is server-based routing though, this is the wrong place.\n\nI think what I'm trying to say here is that in my opibion there is no time you will ever need server-side routing, unless you are building an API. All you need is a static front-end, an API, and javascript.\n. Definitely. Of course I would recommend pairing a static client with an API, but in the end it depends on what you are comfortable with and/or if you have the time to learn a new flow. Personally, I'd recommend [marionette](http://marionettejs.com/) as the glue between client and server if you do take this route.\n\nClosing this issue but happy to keep discussing if you want!\n. Webix is a different kind of tool, not in the same category. But either way, whatever you prefer I'm sure will work great! :grinning: \n. Woah it looks like you've got some issues with your node install. I haven't seen this error before. It's either an error with node-gyp, or an error with your permissions, or both, certainly not with roots. We are removing the posix module next release because of issues with windows, but it's likely that you'll have issues with other C-linked packages in the future, so it might be worth opening this up in the posix or node-gyp repos and seeing if maybe one of these guys can help you?\n. Oh yeah installing node with homebrew is no good. I think it's an old node version as well? If you use node's official installer you'll be in much better shape. If you are having permissions issues, just chown `/usr/local/lib` and you should be set.\n. I'd say likely because the old version doesn't have C-linked libraries?\n\n> chowning didn't work for my build script for some reason\n\nI don't totally understand this sentence\n. Hey @davidmoshal any update on this?\n. Ok cool, I'm going to close this for now then as it seems to be specific to your machine/setup.\n. It's not the node.js update. If you are having an issue like this, the problem is with your machine and is related to the way you have installed node and/or set up your permissions. If you are having a specific issue, please open up a new issue and detail exactly what it is that's going wrong and we can do our best to help!\n. Hi @mjrev!\n- There might be issues on windows, when v3 is released we should be set but at the moment we're working on finishing up some features still and windows is really a pain. I see from your edit that you have picked up on this -- sorry about that!\n- Using the port env variable should work fine. This has been tested multiple times and has been working. It's possible that there's a different way of setting environment variables in windows, but I don't know what that is because I don't use windows. Perhaps google \"setting environment variables from the command line windows\" or something? There's no magic to this syntax, it's just setting an env variable.\n- If you are using v3 for a v2 site there will be issues. v3 is a breaking upgrade, so there are things that need to be changed before it can work.\n\nSorry for all the problems you've been running into! I'm going to close this issue as we have a number of other ones describing windows problems more specifically, but happy to continue discussing here. Your best bet at this point is to go with v3 from the start, and we will be polishing this up to work better with windows over time. But right now, both v2 and v3 work perfectly well on both osx and linux.\n. We have this in the readme for v3, which is almost ready for release (probably will happen in the next month or so). Currently the stable version on master is now being actively developed or supported. I'll merge this anyway though, why not!\n. You mean dynamic content, right? I think this is a reasonable ask, and would be a good candidate for an [extension](http://roots-web.bitballoon.com/docs/extensions), or an addition to the existing [dynamic content extension](https://github.com/carrot/roots-dynamic-content). Are you interested in helping out with adding something like this?\n. Awesome! Yeah we haven't quite taken all the roots docs live yet, we're still working on a couple pieces :grinning: \n. Going to close this issue as it's not a required fix for roots core, but feel free to keep discussing here if there's anything we can help with!\n. Whoo! So glad :grinning: Also feel free to hit up https://gitter.im/jenius/roots if you want to chat with any of the core team members.\n. Do you have `extract` set to true in your settings? This is false by default, and allows the file to be parsed by other extensions as well as yours (roots core has a default write extension that will parse the file as usual). You can find the discussion on extract [here in the docs](http://roots-web.bitballoon.com/docs/extensions#file-sorting). Try setting it to `true` and see if this does the trick :grinning: \n. Gotchya, this makes sense, and sounds like a very useful plugin. I think there are 2 ways to handle this:\n1. Add it as an option directly to the dynamic content plugin, since it already relies on dynamic content and would need to duplicate a lot of the logic.\n2. Make it a separate plugin that has to be very carefully managed in order to work correctly.\n\nI think I'd swing towards adding this functionality directly to dynamic content personally. This plugin already has most of the logic you need, it detects front matter and parses it, it conditionally prevents writes, and it [uses special properties in the front matter to change behavior](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md). This seems like it's just a matter of adding an additional special property to the front matter :grinning: \n\nMaybe adding a property like `_api: true` or `_json: true` would do the trick? You wouldn't even have to deal the conditional of whether it should also be written as html, since the user already can control this with `_render` as they wish.\n. This all makes sense! Are you willing to take a stab at implementing it into the dynamic content extension? This would be awesome :grinning: \n. Awesome! :tada: As always let me know if there's any way I can help out :grinning: \n. So are you upgrading a v2 site to v3 here?\n. This is not really an issue with roots, it's an issue with your particular project and development environment, so I'm going to close this out. That doesn't mean we can't continue discussing or try to solve your problem by any means though! Maybe asking @slang800 for help, since he was the one who broke it, would be the right move?\n. I would start out by not upgrading to the new version without having an upgrade guide available or fully understanding the changes to the code such that you feel confident with making the upgrade. Once we release v3, we will have an upgrade guide, but since it's still beta right now we don't yet.\n. I think that's probably the way to go for now. However, if you are starting a new app, I think starting fresh with v3 is a good choice. But upgrading can be tough unless you have a solid understanding of what's changed.\n. Sounds like a problem with your `app.coffee` file. But yeah I could probably set up a time this weekend to look through it if you'd like as freelance!\n. Yeah, you'll want to require it as a node package then import it as a stylus plugin in your `app.coffee` file, like the other stylus plugins are :grinning: \n. Looks like the dependencies here are incorrect. You have coffeescript, connect, express, and jquery installed. You need jade to be installed in order for roots to compile jade.\n\nI'm curious particularly about why after running roots new, that would be the dependency list though, especially because none of those dependencies and a lot of different ones are in the base template for roots new, [seen here](https://github.com/roots-dev/base/blob/master/root/package.json). Did you perhaps override the `package.json` at some point?\n\nEither way, the solution to this problem is running `npm install jade -S`, but I'm curious why it happened in the first place...\n\n@samccone -- were you seeing anything like this when you tested windows?\n. Ah ok, if jade is there either roots is completely broken on windows, or there's something really weird going on with your machine. While supporting windows is on our todo list before v3 is released, there hasn't been super heavy work going into it yet. I know @samccone and @declandewet have done a little bit of testing, so they might be able to help here, but I have been working on documentation and such and haven't been able to jump into windows yet.\n\nWe'll definitely take a look at this and make sure it's fixed as quick as we can!\n. Hi @couchcrew-thomas -- if you are planning on using v3 with windows, I would probably hold off for now. I still haven't had a chance to fully test windows, and there might be issues. If you are using linux or mac, everything will work great though.\n. Closing due to inactivity\n. Yeah I also have yosemite and have been using roots with it for a while and not seen this behavior\n. Yosemite's architecture does not change the way roots works at all. Are you sure these aren't just issues that you were having anyway?\n. wow, very strange... well glad you worked it out!\n. Ah that would make sense. God I hate `.DS_Store`, that thing is so stupid.\n. Yeah we could add it to the watcher ignores. Could hard code it too potentially. https://github.com/jenius/roots/blob/v3/lib/config.coffee#L71\n. wat\n. eh, that's fine. i can deal with it\n. Yeah I think maybe we should just have a section of the new docs site that shows example sites built with roots so people can check them out. If they are open source, we can link to the source and if not perhaps we can link to a way to contact the author of the site.\n\nAs for carrot.is, that's not something we can discuss here, so you can bring that up in the carrot.is repo. It would be nice to have that open, but it also would need a good bit of cleanup before we could get there.\n. We're working hard on it and will put it live as soon as it's done. You can see the in-progress version here if you want: http://roots-web.bitballoon.com/\n. This will now live here: http://roots.cx/articles/built-with-roots :tada: \n. Yeah v3 is the way to go. v2 is no longer in active development, and a stable release of v3 is coming very soon\n. And for your last question no, but we are very responsive with reviewing and accepting additional adapters into accord, so it will be available more or less immediately after your PR is accepted. It's more of a quality control thing.\n. :+1: thanks!\n. Looks good, could you add this to the configuration docs as well?\n. Hey should we still try to get this in or close it out?\n. Closing due to inactivity... re-open if we can make this happen!\n. Hey @motleydev -- this is definitely not the right place to post this issue, you're probably looking for [the axis repo](https://github.com/jenius/axis). [Here are the docs for the most recent version of axis](http://axis.bitballoon.com/), in which we removed vertical rhythm (which might be the cause of your issue). This section was out of date and better handled by other stylus libraries (try searching stylus vertical rhythm on github). Personally, I never have used or plan on using vertical rhythm for anything, so I'm not actively invested in working on another vertical rhythm solution from the roots team, although a couple of our members who do use it have expressed a mild interest.\n\nHope this helps!\n. Yeah I know, I'm sorry! We're in between releases right now actually so things are a little wonky. I'd reference 3.0 for everything more or less at this point. It is quite stable, we're just polishing up a couple edge cases and publicity things before launch.\n\nAlso, here's our incomplete docs site for v3. I hope this satisfies the designer in you :wink: http://roots-web.bitballoon.com/\n. Sadly, this is actually a breaking change and would require a major release, so I'm not 100% sold. This is entirely my fault for bundling the deps into core, and has been resolved in v3 though.\n. Yeah, we are using v3 in production for a number of sites. Honestly I'd say it's more stable than v2 right now, we just haven't quite finished out the marketing site and documentation yet. As soon as that stuff is done we'll push it as a stable release.\n. Whoo! We use it for carrot's site and it's working well. We have a variety of extensions now that can help to distribute the content and selectively ignore sections during the compile to speed things up a bit if the site starts getting bigger. @joshrowley has been working a lot on this stuff if you are curious.\n. Ah yeah this is a challenge that a couple of people have run into. Right now I don't have a super smooth way to solve it. The problem is that in order for this to work, all other posts would need to be compiled before any single post was compiled. Unfortunately, this is not possible logically. The other option is that everything can be compiled twice, the first time normally, and the second time with the information from the first compile run backported into the `site.posts` object, which is wildly inefficient and not in sync with how the compile pipeline works at all.\n\nDoing what you're describing here seems like it would work ok. I think actually just writing out the raw posts object to a json file, then loading that file up with ajax from the individual blog posts would work fine. It would give you all the information you need, and it wouldn't really slow down the site, since you can run that ajax in the background while the page loads and in all likelihood it will be done by the time the user has finished reading and is ready to hit the \"next\" button.\n\nYou should be able to access the locals from the after function. After takes a single argument which is an instance of roots' base class. So you can grab the config info on `roots.config` and dig in from there. Let me know if you're having trouble with anything, or if it works out nicely. If it does we could probably turn this functionality into an extension so you could just plug and play and everything would work smoothly.\n. Yeah, I'm not sold on using cached content from previous compiles though. If you make any changes, you can't guarantee that they will be seen, and as you mentioned yourself you can't even guarantee that the cache will be there so it would introduce a whole range of new confusions and errors for roots users. Really the only reliable way to make it happen is to do more than one compile pass per run, which I'm not super excited about implementing.\n\nI think the first step here would be to have an option in which the dynamic content extension generate a json dump of the contents to a location you specify. That way you can grab the file with ajax if you want, which solves the problem in a reasonable way. After this maybe we could revisit static availability of the post content.\n\nDoes this seem like a reasonable route to solving the issue?\n. Ok so this has been resolved by adding capabilities to the dynamic content extension and shipped out. You can see docs for it [here](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md#exporting-dynamic-content-as-json). Whoo!\n. :+1: \n. You can also find this here: http://roots-web.bitballoon.com/docs/environments\n. So update after sourcemap support has been added. It's a requirement for source maps to output a dependency tree, which means that we do have trees for coffee and stylus. If you are saying that jade also gives a dep tree, this is pretty good stuff, and seems like we might be a little closer to the dream!\n. @kevin-smets yes it is. the issue is that roots supports many more languages than just jade. but it's in our plans to slim down the number and force jade by default in order to take advantage of this. Next major step for us is force jade, postcss, babel as the stack, and fully support dep trees.\n\nI'd love to see what you guys have done with your project! That's a really nice optimization.\n. You don't actually need to install sprout, but yeah actually this looks to me like a bug introduced into sprout by a recent addition. @kylemac could you check this out possibly?\n. Hey sorry @ccsouthard, this was a bug on our part and was just resolved. Just run `sprout rm roots-base`, then you should be set for the future with `roots new`. I just tested this to be sure and it worked for me.\n. I would actually not use brew, and would just run `sudo chown -R $USER /usr/local/lib` (as long as you are on a mac) and that will fix the problem :grinning: \n\nHere you also want to chown `/Users/chaz/.node-gyp/`\n. You already ran `sudo chown -R $USER /usr/local/lib/`?\n. So you have chowned both directories recursively that it's telling you there's a permissions error on. This error makes no sense. I would just remove everything and start fresh. Take the paths on both sides of the symlink error and delete them. That means `/usr/local/bin/roots` and `/usr/local/lib/node_modules/roots/` - completely remove both of them. If you have done this, and you then chown `/usr/local/bin` and `/usr/local/lib` recursively, and still get this installation error, there's either something very wrong with your computer, or your node install.\n\nSo here are the steps if you want to be really thorough\n- Remove the affected folders\n- Reinstall node on the latest version\n- Repair permissions on your disk using disk utility\n- Chown `/usr/local/bin` and `/usr/local/lib` recursively\n- Now try again\n. Did you follow all the steps I put in my last comment exactly? You need to make sure all traces of roots are removed, since if you installed it once with the wrong permissions, they will still be permissioned that way when you try again\n. Make sure to use `tab` to complete folder paths. This is the number 1 trick for navigating the filesystem through the terminal. Any time you type in a portion of a path, you should complete it with tab. If it completes, it exists. If not, delete back to the last folder you completed and slam tab a couple more times and it will display your options.\n. Seems about right to me! Glad it worked out! We can talk about the next issue tomorrow :grinning: \n. Huh, really weird. No idea, but that helps since I at least know where it's failing in general, seems like an issue with sprout...\n. Ah that seems like an older version (it's a symlink), but that has been\nremoved. Run `roots tpl reset` and try again that should clear the error\n\nOn Tue, Apr 7, 2015 at 5:34 AM Mitchell Coote notifications@github.com\nwrote:\n\n> How does that package.json file it's erroring on get created? It's\n> located in the roots-base folder, but this file doesn't exist in the\n> roots-base repository on GitHub. Also the only text in this file is one\n> line: root/package.json, which isn't a valid JSON file.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90462425.\n. Ok so this is the error that I've seen happening on windows in the past.\nThe reason this is happening is because the jade file is not being\ncompiled. This occurs on osx and linux when the jade node module has not\nbeen installed, but you have a node modules folder here, check quickly\nwhether jade has been installed or not. If it has, this is a windows bug.\nIf not, it's a sprout bug and `npm install` is not being run.\n\nOn Tue, Apr 7, 2015 at 8:24 PM Mitchell Coote notifications@github.com\nwrote:\n\n> Great thanks, so that fixed that problem but now I'm encountering another\n> with roots watch. When I run roots watch the cmd prompt doesn't throw any\n> errors and it says the compiling is complete, but then it opens up to this:\n> \n> [image: roots_watch_error]\n> https://cloud.githubusercontent.com/assets/5214414/7035859/abdac240-ddd0-11e4-9aae-52a2cfb3a22e.PNG\n> \n> And this is what the directory structure looks after the compile:\n> \n> |   .gitignore\n> |   app.coffee\n> |   app.production.coffee\n> |   package.json\n> |   readme.md\n> |\n> +---assets\n> |   +---css\n> |   |       master.styl\n> |   |       _settings.styl\n> |   |\n> |   +---img\n> |   |       .keep\n> |   |\n> |   ---js\n> |           main.coffee\n> |\n> +---node_modules\n> |\n> +---public\n> |   |   index.jade\n> |   |\n> |   +---css\n> |   |       master.styl\n> |   |       master.styl.map\n> |   |\n> |   +---img\n> |   |       .keep\n> |   |\n> |   ---js\n> |           main.coffee\n> |           main.coffee.map\n> |\n> ---views\n>         index.jade\n>         layout.jade\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90758624.\n. Ah ok, maybe this is an easier issue to fix than I thought. The renaming\nlogic is here in roots:\nhttps://github.com/jenius/roots/blob/master/lib/config.coffee#L138 -- any\nthoughts? Could someone test this out?\n\nOn Wed, Apr 8, 2015 at 12:40 PM Mitchell Coote notifications@github.com\nwrote:\n\n> Yeah I'm getting the same as sourcehunter, the files in the public folder\n> look like they've compiled but they haven't been renamed.\n> \n> On Thu, 9 Apr 2015 1:23 am sourcehunter notifications@github.com wrote:\n> \n> > We are getting the red X, too. Our Jade, Coffee and Stylus files are\n> > compiled correctly, but not renamed.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/588#issuecomment-90949466.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90955027.\n. Woah, not the kind of bug I suspected! Thanks for the fix and breakdown. So\nthat you get the well-deserved credit for this fix, would you mind\nsubmitting a PR for this fix?\n\nOn Wed, Apr 8, 2015 at 4:40 PM sourcehunter notifications@github.com\nwrote:\n\n> Thanks for the hint. This seems to be an error in the CoffeeScript\n> compiler. Your RegExp compiles to:\n> \n> res = res.replace(/.[^#{path.sep}]*$/, \".\" + ext));\n> \n> It seems to parse # as character class resulting in the interpolation\n> beeing ignored.\n> \n> There are two possible fixes:\n> \n>    1.\n> \n>    Put the backslash after the interpolation:\n> \n>    res = res.replace(///.[^#{path.sep}]*$///, \".#{ext}\")\n> \n> ```\n> 2.\n> ```\n> \n>    Introduce a seperate variable for the path seperator RegExp:\n> \n>    if ext\n>      pathSepRegExp = path.sep.replace '\\', '\\\\'\n>      res = res.replace(///.[^#{pathSepRegExp}]*$///, \".#{ext}\")\n> \n> I prefer the second solution, which also covers a few more (theoretical)\n> cases.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-91014506.\n. Hi @Gioni06 -- I need a few more details than this to be able to diagnose what's going on for you. Are you sure this is not an issue with your internet connection?\n. Cool, thanks for the update and glad it's working now!\n. Hey @haxsu, looks like the issue is that your windows username has spaces in it that are not being escaped. Do you happen to know how spaces in paths are escaped in windows? On unix, they are prefixed by a backslash. If this is the same in windows, would be an easy fix here. Also for the future, it's a super bad idea to put spaces in your computer's username :grinning: \n. Of course it would be that -_____________-\n\nWelp, we know how to fix it now. I'm not going to have time to personally write the fix for this any time soon, but if anyone wants to take a crack at it I'd gladly review a PR!\n. Can't you just put that in the locals?\n. I don't really understand. If you want to make something available in your views, you put it in `locals` or the `jade` options. That doesn't seem super unintuitive or confusing to me...\n. Ok good news, this is ready to roll, and sourcemaps are fully functional. Whoo!\n\nWill merge and ship out tomorrow morning :tada: \n. How about adding this to the base template rather than hard coding into roots' internals?\n. Hey @WADaniel -- glad you worked this out! Let us know if anything else comes up, and hope you are enjoying roots :grinning: \n. This is not currently supported by roots. I played around with css injection in an earlier version of roots and it was inconsistent, often things would bug out and I'd have to manually refresh. For this reason I just kept it as a full refresh. Perhaps the tech has improved since then and it's more reliable. We're taking a look at [integrating browser-sync](https://github.com/jenius/roots/issues/367), which would solve this issue. If you're interesting in helping with this, that would be great.\n\nFor now I'm going to close this out as we can continue discussion in the browser-sync issue, but thanks for bringing it up!\n. Awesome, I'm glad you're liking everything else haha. There are a few things we're working on and thinking about in the issues section that would improve roots anywhere from being marginally faster to orders of magnitude faster. Most of them are difficult issues, but we'll tackle them in time :grinning: \n. Yup! We will also be adding this once we release the new roots marketing site, which is in the works.\n. That's fine with me, documenting it is a good idea. Yeah an explicitly passed flag trumps an env var, because I figured if you have gone to the trouble of running the command with that flag, it's probably your intent. Want to open this up on the roots docs repo instead?\n. You're right, this is a known bug in roots v2, I'm really sorry. The current version on master is very out of date, we have been working for more than a year on the next version of roots, which can be found [here](https://github.com/jenius/roots/tree/v3). This version is significantly more stable and powerful, and is looking at a public release this or next week, so we have not been fixing up v2 bugs as frequently.\n\nIf you want to fix this bug, I would definitely accept a pull request for it, but we have been focusing all our energy on getting v3 released and haven't had time to patch up things like this recently.\n. v3 has been released as stable, going to close this one out. Still would accept a PR to backfix it, but we're not focused on developing v2 anymore unfortunately\n. Haha we've been doing some work transitioning people from grunt to roots v3 recently. Cut down a 100+ line config file to three lines, no joke :grinning: \n. Perfect. Thank you!\n. Yup, is is deprecated. The main install of roots is also severely out of date, and we are releasing a new version of roots this week.You can check it out for now on the `v3` branch. Sorry for the awkward transition period!\n. `npm i roots@pre -g`\n\nIf you are new to node and roots I would recommend just waiting until we release the new version stable, which will happen before the end of this week. it will come with clear instructions, documentation, tutorials, and videos.\n. Run `roots tpl reset` and you'll be fine\n. Hey @sperand-io -- thanks for the heads up! It seems like actually this is an issue with npm and your local node install, I don't see any of those npm warnings, and they are not normal. Usually the postinstall is the final message that appears after installation.\n\nThanks for the notice though, and the kind words about roots! I'm going to close this out as it's not an issue with our code, and not one that we can fix, but will keep an eye on it for the future :grinning: Of course let us know if there are any other things we can help with or things you notice.\n. Since this makes no sense and is not reproducible I think we can close it for now. If anyone else reports it and has a way that we can reproduce, we'll reopen and look into it again. \n. You need to make sure you also have `extract` set to true in the options so that the extension handles the file and removes it from roots' compile pipeline. Otherwise this should work fine. Here's an example of a tiny test extension that does a custom path and content rewrite which is part of roots' test suite:\n\nhttps://github.com/jenius/roots/blob/master/test/fixtures/extensions/write_hook/app.coffee#L21-L30\n\nHope this helps! Feel free to drop by our [gitter chat](http://gitter.im/jenius/roots) if you have any quick questions about extension building. It definitely is complicated.\n. The code is tested in the link I just sent you and the test is passing, both on my local machine and on travis -- there is nothing broken on the roots side. You must have some error somewhere in your script. Are you sure the extension is running? Are you sure it's matching the correct files? Are you sure the output path is being generated correctly?\n\nSpend a little time debugging this. Use `console.log` to figure out how your code is being run, and what is going where. Dig a little deeper :grinning: \n. Duplicate of #588\n. Ok so two ways I can see this being worked out:\n1. We're thinking of adding to dynamic content such that you can pass a globstar to it if you want and it will just run that directory. This will probably be added next week and would enable this behavior.\n2. If we added [placeholders](https://docs.netlify.com/redirects/#placeholders) to charge, it would enable you to rewrite correctly. You can do this with netlify already as shown above, if you want.\n. You don't have to close if you don't want. I'll update here when there's a good way to solve this either way!\n. Cool, feel free to open one up there then if you want!\n. Yup this sounds good. Would love to have it merged before next week!\n. I think we actually have this supported now, right @joshrowley?\n. Hey @dustinrjo -- thanks for the well-reported issue. This is weird, never seen an error like this before. In order to figure out the cause I'd need to be able to replicate it on my end and investigate. Is there any way you can zip up the project (sans node modules) and send it to me, or drop it here?\n. Huh, very strange. If you can find anything else or a way to reproduce, let me know for sure, happy to try to help out!\n. Thanks guys, sorry about that. Breaking change in the latest node-sass api. I'll get this merged and shipped out first thing tomorrow.\n. Is anyone working on a fix for this, or have a reliable set of steps to reproduce it?\n. I don't understand your reply, it didn't answer either of the questions I asked, and asked another entirely unrelated question that I am unable to answer since I don't 'get them'...\n. As is the case with any and every issue that you file in any repo, you need to include reproduction steps if you plan on filing the issue and not submitting a fix yourself. This makes it much easier for me to debug rather than having to try to create an error from something unknown.\n\nThe issue itself didn't indicate to me that all errors thrown by roots have no stack trace. The title is vague, and the body is just a screenshot of one specific error you had. I know that you know how to file a good clear issue, could you just take another crack at this one? I need:\n1. A clear and concise description of the overall issue\n2. A set of steps I can take to reproduce the issue\n. You are missing a `html` element in your layout. If you add this it will inject correctly. It looks for that element in order to anchor onto, as it's necessary for any valid html page.\n\nThank you for the thorough and well written issue!\n. As for where to put your pages, you can put them wherever you want, and roots will compile them just fine :grinning: \n. Haha I entirely understand where you are coming from there. It happens. I really appreciate the amount of time you put into trying to debug this and writing up such a clear issue. Let us know if there's any other issues you're running into, happy to help!\n. Cool, thank you! I'll check it out. Apologies that this was not prioritized, I just personally dislike bower and don't ever use it, so it hasn't been a priority to implement so far. I will eventually though, promise!\n. Thanks @hhsnopek! I'm really sorry I just don't have time to work on this now, but I'm sure someone will be able to pull an extension together. It shouldn't be too tough, hopefully!\n. @FranzSkuffka usually npm. if not on npm, then direct or through a cdn. there are many options :grinning: \n. Yup should be working exactly as @declandewet described. Thanks for handling this issue Declan :grinning: \n. Oh you can just add this line to your `app.coffee` file:\n\n``` coffee\nmodule.exports =\n\n  scss:\n    indentendSyntax: true\n```\n\nBasically any options you want to pass to a language you can do exactly like this in roots, just pass it right through `app.coffee`. Now that this works though we should probably ass `sass` as an extension on accord too :grinning: \n. Yeah definitely, I'll look into enabling the sass syntax as well. This\nparticular compiler is unique in the fact that you use the same compiler\nfor two different languages with different extensions, so I'll have to\ntinker around a bit to make sure it's smooth.\n\nOn Sat, Mar 7, 2015 at 9:46 PM Perry Kibler notifications@github.com\nwrote:\n\n> Hmm, kind of works. So, you still have to name your file with a .scss\n> extension, which confuses your syntax highlighting. There are workarounds\n> to that issue, but it's not ideal. I have something mocked up here if\n> someone wants to play with it. This was my first crack at a roots project,\n> it includes some things like contentful integration and yaml front matter\n> too. https://github.com/javaporter/roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/621#issuecomment-77729438.\n. This is a very strange issue. I honestly have no idea why it's happening. Is there anyone that can dig a little deeper? I don't really have the capacity to at the moment...\n. Yeah very strange. Thanks for handling this one @hhsnopek!\n. Hi guys! Sorry for this oversight, everything should be cleaned up and working now so I'm going to close this out :grinning: \n. Looks good to me. I'll push a release with this shortly. Sorry this was unresolved for so long!\n. This was also shipped as `roots@2.1.5`\n. Sorry for the delay, going to take a look at this tomorrow :grinning: \n. This is looking good! Just a couple small things, and also is there any reason tests aren't passing on travis?\n. Hmm ok, perhaps we should enforce a name then and add a test for this before merging, just to be thorough? Does this seem reasonable? I feel like there are many reasons why a name should be required anyway.\n. Ping!\n. Ok maybe we should just merge this up?\n. Closing as this is way to far out of date and doesn't seem like it will be brought up to date.\n\nFor now to work around, just `require('./app')` from your main config, customize and export it. The next version of roots will have automatic merge like this.\n. Yup exactly what I would have said. If you have files you do not want to be\ncompiled you should ignore them to avoid issues. Roots uses extensions in a\nparticular way to make compilation simple for files that are actually\ncompiled. Uncompiled files should either be ignored or deleted and you can\nuse git to keep track of versioning.\n\nOn Sat, Mar 28, 2015, 3:57 PM Henry Snopek notifications@github.com wrote:\n\n> A quick fix to to create an ignore rule\n> http://roots.cx/docs/configuration within your app.coffee, as well we\n> have support for multi-pass http://roots.cx/docs/multipass because if\n> can be useful to use.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/626#issuecomment-87292370.\n. Nope, this logic is quite sound for all normal use cases. I don't think you got bitten by this logic really, it was just that you were using a strange convention for un-compiled or backup files and this was one of the side effects. We spent a bunch of time thinking about each part of the extension compilation logic and making sure that it matches any applicable use case in which you intend to use the compiled file as output.\n\nYou can read more about the logic and why we made the choices we did [here, in the docs](http://roots.cx/docs/multipass). If you do have a use case in which you are trying to compile a file in a particular manner for use in the compiled site and this logic isn't allowing you to do so, detail it here and we can re-open and take another look!\n. Huh. We have a bunch of people who use roots with vim and haven't run into major issues like this. Maybe @samccone or @joshrowley would be able to advise?\n. Perfect, thanks @andyshora!\n. Haha of course, just add this line:\n\n```\njade:\n  pretty: true\n```\n\nand your comments will live on with vibrant life :sparkles: \n. Hahah oh I'm sorry! Totally blew it. This is a question about [the js pipeline](https://github.com/carrot/roots-js-pipeline) then? How are you minifying js?\n. I'll get this added to js pipeline as long as uglify's JS API supports this option. One moment...\n. K, just published, it should now preserve comments. Whoo! :tada: Just update to the latest version of js pipeline and you should be set.\n. Yeah I figured having it on by default was fine. I don't see many situations where someone would write `@preserve` and expect the comment to be gone haha.\n\nThe change was super simple, right here: https://github.com/carrot/roots-js-pipeline/commit/99f2be5be0097a9243aea7974e2e36fd4d605307\n\nI added a test as well and verified that it was working, although perhaps something wasn't quite right? Feel free to take a look at the js pipeline code and open an issue there if you are still having trouble. It's pretty simple code, if you are feeling ambitious you could pull it down and try to open a PR to fix it too!\n. Hmm, that first error looks like an issue with the rimraf package, weird. Let me look into that. In the meantime, thank you for this fix!\n. Hey Paul,\n\nThanks, appreciate it. For some reason, last time I tried to update chokidar it failed the tests and I made #603 to remind me to try to fix them later, but looks like they are passing now :tada: \n. Ok so failing tests and a couple hound comments here, any chance you could patch those up then I'll take another look?\n\nAlso we need to talk about how exactly this will break things. Have we done any tests on machines that have the previous version installed? Do all templates break? What is your plan for smoothly upgrading here without messing up people's stuff?\n. Sorry for the delay, will take a look at this in the next couple days for sure :+1: \n. Closing bc of #644 \n. I feel like if you need to get that specific, this is what extensions are for...\n. Hmm ok. When I have had a use case like this in the past I ended up making a small API wrapper that would do the syncing to other APIs and combining logic etc to make it more straightforward, but if you want to do it all in roots it should be feasible I suppose.\n\nSo you are basically looking for a roots-native hook in order to hack an extension's functionality. Is there any reason you don't want to have the hook added to roots-records itself?\n. I still don't see this happening. You can just drop a tiny extension directly into your `app.coffee` file and use the extension hooks, or write an extension that's just a couple lines and load it. `app.coffee` is only for the basics, not intended to be a massive and complex config file. A lot of the draw of roots for us in fact is that `app.coffee` is usually simple and clean, rather than the gigantic config files that typically are seen with grunt/gulp. Starting to add in complex hooks like this needed for more advanced hacking I feel is a step in the wrong direction.\n\nI'd still recommend making a tiny extension and loading it in here, as it gives you the hook control you need without as much of an extra mess.\n. Yeah Declan covered it quite well. This question is essentially the same as asking \"how does using snapchat differ from texting a picture then deleting it?\". At it's core the two products aim after the same problem, building static sites, but they handle it in very different ways. You could ask the same thing about middleman, grunt, brunch, or any of the other large numbers of static site builders. What it comes down to is that you should watch some of the tutorial videos on the site and try it out yourself. While you might come out with a static site from any of these tools, it's simply a different experience building it. Roots focuses on less and simpler configuration to get you up and running faster.\n\nClosing this issue as it's not an actual issue under active management, but feel free to continue discussion here!\n. Hey @jtwebman,\n\nWow what a post. Appreciate you taking the time to write this out and your point of view. Unfortunately, I just can't totally agree with you. You started out saying that they are the same and we are rebuilding docpad. You then followed this up by pointing out that there are a bunch of things that are different between docpad and roots, but that you like docpad better. I could make a very similar comment to this for brunch, middleman, grunt, and gulp quite easily. It would say that some things were the same, some things were different, but I preferred X or Y. On top of that, roots is not like a new thing we just started. We started building roots more than three years ago, when docpad was in its infancy and not even similar to what it is now.\n\nLet me respond to the concerns you brought up here:\n1. We considered adding a javascript config option, but never followed through because there wasn't enough demand for it. Coffeescript is just cleaner for simple things like config files. You aren't doing any heavy lifting with the code, just config. It would be a very easy feature to add if someone was interested and sent in a PR.\n2. Are there any languages you plan on using that are not supported by accord? I see where you are coming from in theory, but you'll find that in reality accord provides a much simpler and more trustworthy way to deal with compiled languages. You don't need to sort through and find one of potentially a few third party extensions, figure out which one is still maintained, then load it in with any of its dependencies. You just install the compiler direct, add the extension, and that's it. You can trust that accord is actively maintained and thoroughly tested. The team behind this project is quite active and you'll find that getting another language accepted to accord takes no time at all if you have written a thorough implementation and tests. And if you haven't, we'll work with you to get it up to speed.\n3. The employees update the data themselves through an API. It could easily be static if we wanted. In fact, we could easily convert it back to static using roots-records, we just haven't got around to it yet. Most of carrot.is is controlled by a CMS.\n4. You seem to be worried about accord, but I don't get why. Have you had problems with it? Client templates work perfectly fine, give them a shot. We already have full support for jsx in accord and [a template for a working react app](https://github.com/carrot/roots-template-react) in roots and have had this for a while. I'm interested in using react with jade instead of jsx as well and it is feasible, just have not implemented all the adapters for it yet, personally. I'm traveling this year and have less working time than usual. But if anyone is interested in speeding up this process would be happy to work with them. Honestly it shouldn't take more than a day or two to get the tools in place for this.\n5. We could and would add any of these services if we had a need for them. It generally takes us about one work day from a single employee to add a vendor-specific extension. Wordpress extension took me about a day. We build things as we need them. If there's something you need, we would be happy to work with you and make it happen.\n6. We have an entirely separate and very robust library for this called [sprout](https://github.com/carrot/sprout). In fact, as you have seen with accord, much of roots is actually split out into other independent libraries. Anyone is welcome to use these libraries independent of roots. Roots is just the glue.\n7. Wouldn't be hard, just hasn't been a high value feature for us. If anyone wants this it shouldn't be tough to add.\n\nIf you like docpad better, that's entirely ok, you are welcome to use it, and not use roots. If you have a docpad feature that you like and wish roots had, we can discuss that particular feature and I'd be happy to break down why we made the decision that we did. But if you think that roots is \"rebuilding docpad\", it simply could not be further from the truth. They are two entirely different products that handle building static sites in different ways. The only thing that's similar between them is that they produce a static site in the end.\n. @christiansakai did you load the file on to your page in the html?\n. @christiansakai yes it is. You can check the `public` folder if you want to see the compiled files. Probably there was an issue with the path. Have you checked the console?\n. Hey there @Gioni06! Glad you are looking to get involved. Here are the docs for building extensions: http://roots.cx/docs/extensions\n\nIt's not the easiest thing ever, but they can be quite powerful, you can basically mod any part of roots in any way. To get started with this, I would probably create a pass through extension that takes stock of all the pages being processed, then passes them on to the processing without messing with them. When finished, it could do it's thing and generate the sitemap. Shouldn't be too tough once you get it going :grinning: \n. @ngarland79 you should work on an extension that does this! happy to help if you need it \ud83d\udc4d \n. It could in theory, but would make things a little more complex. It would need to come after contentful in the plugin order, and would need to take in a shared object containing some contentful data.\n. You'd need to use the `ordered` property on the extensions you need to run in a specific order to accomplish this. More details here on this: http://roots.cx/docs/extensions!\n. Could you leave a little more detail about what filepaths this has been happening at? Dig a little deeper, look for patterns, and give us all the info you can. I still can't diagnose the issue from this yet.\n. The issue referenced above is definitely the cause. I'm looking into a fix for this today. Closing this issue to prefer #662 unless the original author can provide more detail!\n. Should be set now with the latest release\n. We just need to update accord and push a new roots release. I'll do this tomorrow, sorry -- have been off the grid for the last 2 weeks traveling.\n. Roots `3.1.0`, released today, will work with postcss. Sorry about the delay!\n. @hhsnopek anything breaking in the api between the two versions that would need to be fixed here?\n. @kylemac @hhsnopek ok upgraded and tests are still passing\n. So I did some good looking over everything, and the function that says it's not covered is without a doubt being run. I'm not sure why it's claiming that it's not covered, but honestly I'm not super worried about it, since it is covered, and it seems like it would be incredibly difficult to fix something like this. So I'm just going to merge this up.\n\nOnly change I added here is swapping the default template back to what it should be after the test.\n. So this is a little dangerous as it appears as if you need to patch jade's source, which is definitely not something we can or want to get involved with.\n\nHowever, if there is a way to make this modification through an option passed in to jade (which is preferred, potentially a pull request could make this happen, or it is already possible through more tinkering), we could add an option to accord to include plugins like this, then it would automatically become available in roots.\n\nHere's my suggestion. Make a little example project with pure jade and stylus used via js to compile, and see if you can make this happen without patching either of the sources. If you can, open up an issue in accord to add this as an option. If not, figure out the cleanest way to expose it by modifying jade's source and submit a pull request. Once that is accepted, we can move forward with implementing it through accord.\n. Honestly, not sold on \"hound\" at all. I always am just deleting it's messages -_____-\n. Alternately I could NOT USE IT AT ALL!\n\n![](http://domi.oneradicalsite.com/images/baleeted.jpg)\n. Hey there! Yes, it is. Roots does not support `app.js`, the fact that it works under any condition was unknown to me. If there's enough demand for it, we could add support for this, but `app.coffee` is really just a very simple configuration file, not one in which a lot of coding needs to be done, so coffee just makes it less to write and cleaner.\n. :+1: \n. Sorry, I thought this has been resolved but apparently it has not. If you just go to your `package.json` file and update `autoprefixer-stylus` to `0.7.0`, this will solve the problem.\n. Didn't we update the roots-base template with this set of changes as well?\n. Yes, `dump_dirs` does not support nested directories at the moment. It's possible to add support for this -- are you interested in contributing? It shouldn't be a super tough fix, you can find the place where it's used [here](https://github.com/jenius/roots/blob/master/lib/config.coffee#L145)\n. This should be filed in https://github.com/carrot/roots-records\n\nAt the moment, roots-records caches your data when it starts watching for better performance, and does not constantly scan it for changes. Integrating this type of behavior would be possible but fairly challenging -- maybe someone could help with it though!\n. Hi @Leeds-eBooks -- which version of roots are you using right now? If you are on `3.2.x`, try downgrading to `3.1.0` (`npm i roots@3.1.0 -g`), there have been some strange issues with the latest version. If this does not fix the problem, could you drop a little more detail on which lines, or a minimal sample project that can be used to reproduce the problem?\n\nThanks so much for the thorough report, and looking forward to helping you figure this one out!\n. Great, glad this worked. Yeah the bug in `3.2.x` is with the server. As you probably saw here, it's a very confusing bug, I don't entirely understand why or how it's happening. I'm not on a full-time schedule at the moment so I have much less time to work on this, but I will be taking a look today and tomorrow and trying to work this out.\n\nSorry for the issues, and I'll let you know as soon as we have rolled out a fix to the latest version!\n. should be fixed in v4\n. Hey guys, really sorry this is happening. We have isolated the bug, it's something very strange in charge, roots' web server. It somehow made it through all the tests for 2-3 levels deep of modules, even through 95% coverage on all of them. Crazy. Either way, this bug will be patched up within the next week, for now you can stay on `3.1.x`. Really sorry that this happened, and will update here personally as soon as it's fixed and a patch release is out!\n\n:bow: \n. Ah thanks for digging this up. This is strange, as the version of infestor is the same as `3.1.x` in `3.2.2`, so I'm having trouble seeing why it would act differently. I'll dig into it a little further though when I have a minute!\n. Hey there everyone!\n\nSo I think I have this issue worked out. I've applied a fix and tested it on one project that I was having issues with and it worked. However, I'd like to make sure that I really have this right before publishing this next patch.\n\nFor anyone that has an example project showing the issue, could you link me up to this project and/or share it with me so I can test it and make sure everything is resolved?\n. Still working on fixing this guys. Sorry for the delays!\n. I'm not sure I understand. Do you mean comparing the version you are using globally to produce the actual site, and if you have installed roots locally also by chance, comparing it against that?\n\nThe issue I see here is that you don't actually need to install it locally... we only do this because of netlify's pipeline. I suppose we could add a check at some point, like perhaps before deploy, if it is present as a local install though.\n. I'm ok with having it, but not at the expensive of speed at any time, or with any possibility that it could be annoying. Integration would need to be designed carefully.\n. @Arshad3 I think you might be in the wrong place...\n. I am interested in the concept, but don't have the time to tackle this kind of issue at the moment. I'm really sorry!\n. I'm not sure I understand... could you clarify a little here?\n. Sure, works for me. Very simple change too. Want to PR it in, or I can do it?\n. So the issue with swapping out roots' server is that [charge](http://github.com/carrot/charge) includes websocket functionality that is used for the page refresh. And its API for handling the websocket piece would not work with any other random server, unless it purposefully exactly mimicked charge. This means errors would be thrown left and right in watch mode as nonexistant functions were called.\n\nI assume that whatever server you are trying to replace charge with does not ship with websocket functionality for the purpose of using livereload, and even if it does it probably does not exactly match charge's API. If this is indeed the case, you must give up live reload through roots during development. If this is ok with you, you can simply run your server and set it to use `/your_roots_project/public` as its static root, and manually reload after changes have been compiled. Charge will still run in the background, but takes minimal CPU and you simply can ignore it. If you don't want the page to open automatically on watch, just include `server: { no_open: true }` in your `app.coffee` and nothing will open in the browser on watch, you can open it yourself to whatever port your custom server is running on.\n\nHope this helps!\n. Hm, weird. Segmentation faults are outside of roots' domain, this is a severe memory issue with the machine. We're not really able to catch errors like this or handle them with node... is there anything in particular you can do to replicate errors like this? Could you watch your memory and see if it's maxing out?\n. Agreed, thanks Declan!\n. Hm, this is interesting. I can see why this has never been files before, usually hash is used only in `app.production.coffee` for `roots compile` commands, which are 1 shot and start fresh each time. Are you running `hash: true` while in development?\n. Ok, I'll dig into this a little further today!\n. Not at the moment, I haven't had a chance to fix it yet. I'll take a look as soon as I can.\n\nDoes this still happen if you just run `roots compile` once?\n. I might cross-post this to roots-i18n? I didn't build this extension so I can't say I really am super familiar with its internals...\n. Thanks for the analysis here -- you definitely might be right. I don't really have the time to resolve this myself, but if you are willing to jump in and work on a patch I'd be happy to advise!\n. @davidmarquis sounds good! I don't think it's really a significant issue, to be honest. The thing is, it's extremely rare that roots users actually use the hashing, since deployment services like netlify, which are entirely free and interop very fluidly with roots, handle this for you. Roots has been stable for years, and used to build thousands of sites, and while a small number of people have run into this hashing issue, they all typically solve it by flipping off hashing and using netlify for hosting.\n\nThat being said, roots at the moment is on a feature freeze in favor of [spike](https://github.com/static-dev/spike), which we are using and actively developing going forward. So if you have been able to work out this issue, I think it's ok going forward.\n\nThat being said, really appreciate the super thorough bug report and subsequent investigation -- not many people are willing to go that far and typically just ask me to solve the problem for them, so I really appreciate your taking the initiative!\n. @davidmarquis ah yeah we haven't really pushed any publicity on it yet, but we will sometime soon! it's still production ready and widely in use \ud83d\ude09 \n. Great catch. I've seen this problem come up a few times and been confused by why it's happening, but this makes perfect sense. I'm afraid while it might pass roots' tests, this fix will likely cause issues with a bunch of extensions. I'll take a deeper look into this today and test with a few existing projects to make sure there's no breakage.\n. Yeah, another tough question is how to test for cross-compatibility issues like this. Really, it's going to be a challenge, but at the same time can't be eliminated since it forms an important part of how roots operates. Either way, a discussion for later :grinning: \n. I'm really sorry I haven't got to this. I just have not had the time to work on it recently. The best way to help would be to run a bunch of large roots projects that use different extensions on a patched version of roots with this PR included, and see if any issues can be found.\n\nI do think a better way to fix it would be to have a way of resolving conflicts between globals, than nixing the global override, which is important for some extensions. This is a large core-level fix that would greatly impact the way a lot of extensions work. Another fix I would more readily accept would be a change to the way roots-records injects this option.\n. There must be a `filename` local overwrite somewhere in roots-contentful!\n. Hey guys, I'm sorry for misreading this initially. I never really had time to sit down with it and hash it through, as was probably indicated from my comments. But now that I did, it looks like the original code is a bug, and this fix should be applied.\n\nPending a couple tests with large projects to make sure there are no unintended consequences, this will be merged. Again I'm really sorry for the delay and thank you to everyone who took the time to check this out, especially @knupska for catching the error and making the fix.\n. In `app.coffee`, `module.exports` is an object. Therefore, you must use the key/value syntax as in other objects, not assigning of a variable.\n\nChanging this to `output: '../../www/ia` will work. I just tested this with a fresh project :grinning: \n\nExample:\n\n``` coffee\nmodule.exports =\n  output: '../../www/ia`\n  # all other stuff\n```\n. No problem! Would you be willing to contribute these changes to the documentation? I'm not sure I understand exactly what clarifications you are after, so I'm sure you'd do a better job than me!\n\nhttps://github.com/carrot/roots-www\n. Hi @edravis -- I'm currently working on a very limited basis and have little time to get to support requests. I'm really sorry, I feel bad and have a lot of people to get back to. I am doing my absolute best right now, and as soon as I have a moment I will take a look at this.\n\nIn the meantime, try http://gitter.im/jenius/roots -- you might be able to find some help there!\n. Hey there @edravis! I have a bit of time right now so let me try to address your questions here.\n\nFor browserify, that's fine! I usually use browserify in exactly this way and it works great.\n\nAs far as stylus goes, loading using `@import` works perfectly as far as I know. This is the primary way I load in stylus pieces, and I use it in all projects. In fact, just used it like 30 minutes ago. It might be an error in your stylus syntax. If you can create an isolated example of this I might be able to take a look!\n\nFor the last question, I'm afraid I don't understand exactly what you're asking. If you are using browserify, it will auto-ignore your starting point file. For css, you should prefix any files you are `@import` ing with an underscore to ensure they are ignored by the compiler.\n\nQuestions like this are much better asked in the gitter room though, since it's more of a request for help than an issue with roots! In addition, there are more people than just me there and willing to help so you'd get a quicker answer, whereas not everyone is on top of handling issues in the repo as much. I'm going to close out this issue, but happy to continue discussion here when I am able.\n. Hey @edravis -- this is a question you might want to ask in the gitter chatroom. I don't have the capacity to debug personal roots projects at the moment. It would be amazing if you'd ask in the chatroom and if you think you have run into a bug, come back here with a very specific issue, rather than one that requires that I replicate your project and try to debug myself.\n\nI'm sorry for having to give a response like this -- if I had more time I would definitely be able to spend more helping. But unfortunately for the next couple of months my time is capped pretty strongly so I have to be very careful splitting it up between things I need to work on!\n. Hey there, really sorry about this. @samccone might be able to help point me in the right direction for a fix here\n. We have a branch in the works that will fix this issue. Tested and functional. I'm going to get it released as soon as I can. Just wanted to let you guys know! It will work with all environments as well :grinning: \n. Yes indeed it is! And you are welcome to check out this branch and use it locally if you'd like until release. It's fairly stable just needs a little polish.\n. Fixed in v4\n. Sorry for the late followup, but yeah that should do this trick! Thanks Josh :grinning: \n. Closing this in favor of the accord issue you filed!\n. Glad this worked out, and thanks for the amazing detailed instructions @michaelkornblum!\n. Hey there Ramin!\n\nReally sorry about this, it's my fault and is the result of me not keeping the roots default template as up-to-date as it should be. You can resolve this immediately by upgrading the version of `css-pipeline` to `0.3.x` in your `package.json` file. I will update it to the correct version in the roots default template right now to prevent this issue from happening again.\n\nThanks for the thorough report, and sorry about this issue!\n. This seems like a valid issue to me. At least you should be able to pass the environment flag to the deploy command. If someone could take a crack at a PR for this, would be incredible. If not I will get to this eventually, but I'm afraid it might be a while as I'm pretty strapped for time at the moment!\n. This looks good to me. The failing test is a weird coverage thing. Thanks for diving in!\n. Hey there! Thanks for catching this. It's actually an upgrade to be made to [accord](https://github.com/jenius/accord) -- is there any way you could file an issue there? We'll get it fixed up as soon as we can :grinning: \n. Ok so all the tests here are passing. This is good. The only thing that needs to be ironed out is whether the weird image clipping issue is occurring still.\n. Can confirm that the image issue is present. This really needs to be worked out in order for roots to move forward at all. I am going to start hacking on this with any free time I have.\n. Unfortunately I have very little free time, but I'll do my best!\n. Just did a small test and this should fix #659 :tada: \n. yeah i had one project that would consistently throw it, after this upgrade it no longer is\n. Ok, can confirm that the broken image issue is coming from the livereload system, specifically from infestor, ironically. If this is disabled, images work correctly. Will have a fix ready for this soon, then we can push out the release!\n. Browsersync merge takes care of this :tada: \n. 1. Clone roots and checkout this branch\n2. Run `npm link`\n3. Test away!\n4. When you are done and want to switch back to `3.1.x` (if you do), just `npm i roots -g` and you'll be back to normal\n. Nope, just check out this branch and you're set!\n. Ah great that kind of bug is just what I was after. Nice catch. Fixed in the latest commit, pull down and try again!\n. Dope. Thanks for the help here. I'm going to try to smooth out a couple things and run some tests on a couple larger carrot projects. When these are ready, I'll ship this guy and we can get back to making real progress with this codebase, finally.\n. 1. The problem here is just the dependency tree, not chokidar. Unfortunately browsersync has no solution to the dependency tree issue.\n2. Possible but a janky as hell solution. Would need a mess of language-specific rules and overrides and it's just not something I want to maintain.\n3. The problem again is the dependency tree. If you update a layout file, what does it build? If you update a partial, how does it determine what uses that partial? It doesn't so selective compile actually leads to more errors.\n. @FaizShah nope, there will not be one until a new major version of roots comes out. getting a consistent dependency graph with a large number of flexible compiled languages is immensely difficult. Next version is in the works though and will guaranteed have incremental builds with full dependency trees, and slightly restricted available languages. More info on this as things stabilize, which they are not even close to now.\n. Ok finally this looks ready to go imho. All dependencies up to date, browsersync working nicely :grinning: \n. I think that would be great! Would you be willing to submit a PR for this @FranzSkuffka?\n. A quick google search found some good answers for me!\n\nhttp://stackoverflow.com/questions/23463679/s3-static-pages-without-html-extension\n. I think the current version of roots may be having some issues with the latest version of node. If you clone roots down, check out the `browsersync` branch, and `npm link`, it should work ok. Or downgrade node for now :grinning: \n. Never seen this one before. Definitely not an issue with roots through haha, it's an internet thing.\n. Hey @nomaanp -- this is not a roots issue, you're asking a question about how to use express and nodemailer. I think you might find better results asking in more relevant repos!\n. Yeah I can't replicate this issue. Need a lot more detail here.\n. Sorry we are not going to include a check for the current directory. That's the developer's responsibility to know which directory they are in, not roots'. As far as the second issue, is this the same issue or a different one? If it's a different one, could you open a different issue and please add a bit more detail so we can replicate this?\n. I like having merges when a branch was merged. It shows a concrete piece of work being done then merged back in. Rebase can keep the timeline and the merge bubbles clean, and each branch should be rebased before being merged, but I do not think just making everything totally flat is a good way to keep track of history.\n. Nailed it, thanks @declandewet :grinning: \n. Nothing built in that will do this. The thing is, we can't automatically know what you want to have as your page title, so I'm afraid it's not possible. One thing you could do is use a little local function that would do a string transform though! You could use some regex replacement and perhaps [underscore.string](https://github.com/epeli/underscore.string) to help out.\n\nYou can inject a function into your jade templates through the `locals` key in `app.coffee`. For example:\n\n``` coffee\nlocals:\n  title: (p) -> p.match(/\\/(\\w+)\\.html$/)[1]\n```\n\nThen in your jade template you would call it like this:\n\n``` jade\nh1 Example | #{title(_path)}\n```\n\nOr the way you did it with string concat. But jade can do interpolation like this as well. Hope this helps, I'm going to close out this issue but happy to continue discussion if there's anything else I can help with!\n. You basically have it. There are a ton of ways you can manage to do this. You can use the result of the `source` function in your jade layout to select a key in the `records.data` object like `records.data[source(_page)].title`. You could load the json file with this data into your `app.coffee` file then contain the whole process within the local. You could just drop the raw function into your jade layout and skip the local altogether...\n\nYou got this -- there's no magic going on in roots its just javascript!\n. Of course, happy to help! Nice work getting it in place, and hope roots continues to treat you well :grinning: You are always welcome to join us at http://gitter.im/jenius/roots for the community chat as well if you are looking for some quick help!\n. Thanks! :+1: \n. Ah this is nice, so now that ghost has an API, we could make a roots extension that is able to pull in ghost posts and mirror them into a static site in much the way we have done with the [wordpress plugin](https://github.com/carrot/roots-wordpress). \n\nAt the moment, I don't have the time on my hands to crank this out, are you at all interested in tinkering with an extension? You can see the wordpress one linked above as an example. It's actually quite simple :grinning: \n. If you don't have the code skills, it's going to be pretty difficult to use roots. Are you sure?\n. Only one way to learn, and I'm here to help :grin: \n\nNo way to make it a higher priority, maybe I'd drop in the gitter chatroom and ask. This is open source software though, using and contributing go hand in hand!\n. Need a lot more info here to be able to figure out what your issue is and how we can help with solving it...\n. I'm sorry, I don't really know what webstorm or iron-node are, and unfortunately I can't develop roots around these specific tools. Roots exposes a command line interface and a javascript API, and that's all I plan on having it expose.\n\nHowever, if you'd like to debug an extension, you can quite easily get inside of one of them. Just go into your `node_modules` folder then navigate to the folder for that extension. From there, you can check out the code and add `console.log`s wherever you want and figure out this issue. Another good approach is to file an issue in the extension's repo and ask the author about the issue you are having. You can find roots-collections' repo [here](https://github.com/netlify/roots-collections).\n\nHope you can figure this out, and happy to help if you have any further questions!\n. Sorry that you feel that way @orenmizr! I'm afraid it's hard for me to imagine how directly interacting with the code that's being executed can be interpreted as \"half blind\", but alas I may simply be ignorant to the nature of your apparently superior tooling.\n\nKeep in mind that this is an open source project, and as is the case with all interaction with any open source projects, the most important thing is to make sure you are here with a spirit of openness, politeness, and willingness to learn and contribute.\n\nIf there's other questions I can answer or anything else I can help with I will be here, using my free time to try to make your life easier :grinning: \n. Hey also I had a moment to take a look at iron-node. It says you can just point it to a node.js file and it will do its thing. Roots is written in node.js entirely, so it seems feasible that you'd be able to get it to work.\n\nWhen you run `roots watch`, this is simply a command line abbreviation for a script execution, in this case it's a [node script](https://github.com/jenius/roots/blob/master/bin/roots). So in theory if you can find out where that script is, you can run `iron-node` on that script and it will work the way you intend.\n\nIn unix, you can use `which roots` to reveal the location of the bin's alias. Typically it will be in `/usr/local/bin/roots`. On windows, I don't know because I never use windows, but I'm sure you could figure this out. Have you given this a try?\n\nPlease note that this issue has nothing to do with roots at all, and is just trying to get around a personal issue for you with your setup, which is why I closed it originally. But in the spirit of trying to be helpful, perhaps this will get you moving in the right direction.\n. Where were the files you were looking for? It should be just one file. Did you `cat` the file and see if it actually was the correct bin file? Is there a way to pass a standard command line argument along with `iron-node`? You'd need to call the file and also pass in the `watch` argument. I feel like you could figure this one out, you must be pretty close already.\n\nOn my machine, I can run `$ roots` or `$ node /usr/local/bin/roots` and get the same result. It is a node file. You can also clone down the project locally if you are having trouble finding the files, and execute from there. There is also a [javascript API](http://roots.cx/docs/js_api) which you can load into a simple js file and execute that. There are a lot of ways you could make this work. I just have not tried this personally because I have had no need to.\n\nTruth is that you get the same snapshot effect of stopping execution by just logging out the relevant values and letting execution complete, and/or thoroughly reading the error trace. If I am unable to figure out the issue through the error trace and maybe a console log or two, for me this usually means that there's something about the architecture or the language that I don't understand, which I would need to figure out regardless of my debug tools. You'll find that most javascript developers do not use IDEs or complex debugging tools, (usually just a text editor and browser) but still manage to be productive and write good code. And there's the additional benefit of not needing as many tools or depending on as many things in order to work, which is really nice, hashtag minimalism :wink: \n. This is the best solution we have at the moment!\n\nhttps://github.com/Leeds-eBooks/roots-i18n\n. It definitely should not. Can you control-c out of it and everything works ok?\n. Hmm... this is strange, but I don't honestly have the capacity to debug further at this time. Hopefully another contributor can take a look, or if you dig a little deeper and can find out any more details I might be able to fix it!\n. add `map: true` to your postcss options to enable the sourcemaps for postcss\n. Hey, sorry about this! It seems like ship may have fallen behind with the github api recently, perhaps. I'll look into this soon.\n. Thanks for the update @newswim - good info. I think what you are saying about only pushing changed assets is probably the best solution. But this would be a pretty difficult implementation, and unfortunately I don't see my company allocating time towards working on this, since we just use netlify. I'd be happy to work with someone on a PR to implement this type of thing though!\n. @eliwilliamson Netlify works with roots out of the box as well. Do you have roots as a dependency in your `package.json` file? You'll need it there for netlify to know which version you're after and to have it installed for the compile.\n. I would love to remove this, but I don't know how! Looked around in the settings and didn't find a way to turn it off. You'd have to open an issue in browser sync asking if they could add a setting to disable this feature.\n. Ah nice find. Not sure how I missed that. I'll put this in tomorrow and see if it works!\n. Works! Published as `roots@4.0.1` and live now.\n. Nope! But would be happy to review a pull request if you'd like to try to add support :grinning: \n. Hey there's only one way to improve! For now I'm going to close the issue since nobody is working on this, but happy to re-open as soon as someone is :grinning: \n. Nice catch! Seems like that is the issue. Must have been a typo! Want to submit a PR with a fix to claim the glory?\n. Looks good! Thanks for jumping in and making this happen :tada: \n. How big are the node modules you are loading? Browserify would only take that long if you are loading an absolutely massive amount of code. Take a look at your output file perhaps?\n. You could always just go with [a lighter framework](https://vuejs.org) :grin: \n. Yes and yes. Use it with `vue-resource` and `vuex` for best results.\n. As far as I've seen, thats how things tend to be with angular\n. @EnMod I'm not doing anything special with it, just using it the recommended way with jade. I use `vue-resource` for connection with the server.\n. @EnMod yes, already working there \ud83d\ude01 \n. Better to ask in http://gitter.im/jenius/roots. If that's happening something is likely severely misconfigured. Did you generate a new template to start? I'd start with that!\n. I'm entirely ok with adding this to the gitignore on [the default template](https://github.com/roots-dev/base), if you want to send in a PR!\n. Even making the compiler ignore it I'd suggest adding through the template, with `ignore` in `app.coffee`, rather than adding to core...\n. We're going to have to deal with this for now, because `pug` has only released an alpha breaking version on npm, so the only stable option right now is still jade.\n\nhttp://registry.npmjs.org/pug\n\nClosing this for now, but we will update the dependency once there's a stable version of pug out!\n. Hey, thanks @bosgood! This looks great :+1: \n. Hey @axelboc!\n\nThanks for writing such a clear and straightforward issue. I hope I'll be able to help with this one.\n\n`ignores`, as the docs mention, are only ignored from the compile process, not the watcher. You can use `watcher_ignores` to update which files the watcher doesn't keep track of. These do have to be separate for a good reason, and much thought was put into this particular design pattern. Out of the box, partials are ignored from the compiler but not the watcher.\n\n`dump_dirs` doesn't mean just copy the asset without processing, it basically means un-nest these assets from the folder listed in the array when putting them in the output. Sorry, I can totally see how the description is confusing, maybe you would be able to help suggest a more clear way? So basically, if you have `assets` in the `dump_dirs` array, then you have `assets/favicon.ico` and `assets.css/index.css` in the `assets` folder, in the output, they will be un-nested from the `assets` folder and just left at root, as `public/favicon.ico` and `public/css/index.css`. It doesn't have anything to do with compilation, it just deals with un-nesting nested folders from assets when going to the output.\n\nAs far as static files being copied, basically roots takes any non-ignored and non-compiled files and copies them over to the output. So if there's any file in your source that you do not want to be in the output, you must explicitly add it to the `ignores`.\n\nHope this helps, and let me know if I didn't do a good job explaining any of this and I can take another crack at it!\n. Would love any help with the docs, [they are open source](https://github.com/carrot/roots-www) as is every part of roots!\n\nFirst question, roots never reads any `node_modules` or `.git` folders, you can see [where it skips em here](https://github.com/jenius/roots/blob/d4c08230b5f6f723ab2bef3197caf83aae198d7b/lib/fs_parser.coffee#L71).\n\nSecond question, no, the default is in the base template. We purposely give users control over whether they want to use the partial pattern or not by not putting this in core.\n\nFor the third question about flipping things, from our experience the answer is no. This way of doing things is very frustrating, and results in really huge config files. Gulp/grunt etc work like this and you have seen how huge their configs get. If there's a file in your source, chances are you want it to be compiled somehow.\n\nAs for the debugging, it's tough on windows. Nobody that works on this has windows, so it is just not a priority for us at the moment. As for the verbose option, it should work, if not that is a bug that should be fixed! You can always pull roots down, `npm link`, and log the filename out from the compiler.\n. No problem, glad I could help! Happy to answer any other questions if you've got em \ud83d\ude00 \n. Ah so great, really glad you found a fix for this!\n. Yeah I'm sorry about this! I'm not going to have the time to get it back online though unfortunately. If you still have a roots v2 project I'd recommend upgrading to a more recent version. If you have specific questions, I can try to help.\n. You can provide any help that you can! I just do not have any extra bandwidth that I can dedicate to this, unfortunately.\n. Yup! https://github.com/jescalan/roots-www-old\n. You need to add a `CNAME` file to the repo for the domain to work when I point it there, see the docs here: https://help.github.com/articles/using-a-custom-domain-with-github-pages/\n. @ganar the domain redirect is set up. `CNAME` for `v1.roots.cx` points to `ganar.github.io`\n. Note to self, when this is merged turn on greenkeeper\n. Unfortunately it is not, because of dependencies - see #586 for a full explanation.\n\nHowever, we are working on a next-generation version of roots called [spike](https://github.com/static-dev/spike) that holds on to a full dependency graph and solves this problem. It's in early stages so I wouldn't yet build any important production apps on top of it unless you want to be in close contact with us about bugs and breaking changes. Either way, in our experience so far it's been significantly faster in watch mode, so if you want feel free to keep an eye on it!\n. The plan at the moment is once spike is fully stable and released to put Roots on \"LTS\", basically in maintenance mode. No new features will be added, but bugs will be fixed, dependencies will stay up to date, and everything will continue working as is. Down the road we will decide how long of a period this will be, but it will be at least a year.\n\nEssentially, we have done what we can with Roots, it works well for us and many others, and we use it at my company in production for a large number of sites. But in order to keep pushing forward we need to get past limitations that require significant restructures to resolve, and therefore are moving towards a different project in order to not push another roots release that will be so different that migrating to it from an existing roots project would be an obscene amount of work.\n\n**tl;dr** Roots will stay entirely stable and well maintained into the future, but if you want bleeding edge features, we can make that happen with spike.\n\nEdit: Also, roots will be moved to the `static-dev` organization sometime in the future. We are completely committed to keeping roots sites in good working order, and only will start winding it down once spike has completely outdone it on every feature.\n. So multipass compilation is a fairly complex process with very specific rules. You can see a breakdown of these rules [here](http://roots.cx/docs/multipass). Based on what you have here, I'd guess that you are using a compiler that processes `.js` files, which is why you are getting this result. If we change the rules around for multipass it would break many other situations, so I'm afraid we can't change this.\n\nWhat I would recommend is changing the filename to `compiled-min.js`. Since you have roots set to process `.js` files, it's going to take any `js` file you have in your project and run it through. Most people use roots with `coffee` or without processing `js` at all, so this problem hasn't come up in the past.\n\nWhat we could do from our end is to add an option to pass in a glob matcher that forces files to be copied instead of compiled regardless of the extension. So you could pass an option to `app.coffee` like `forceCopy: 'assets/vendor/**'`. If there is enough demand for this or if someone wants to submit a PR, we could definitely make it happen!\n. Any interest in taking a stab at contributing `forceCopy`? It might be a good spot to jump in to the codebase, and I'd be happy to help. Otherwise I can make it happen eventually, but it might be a bit since I have a lot on my plate at the moment, and it's not an issue affecting my company at the moment, so it's hard to get these things to the top of the priorities list.\n. Hey there @Hoenoe! A better place to ask questions might be [our gitter chatroom](https://gitter.im/jescalan/roots), this is more a place for things that might be an error with roots.\n\nIn this case, your issue is entirely outside the scope of roots. Roots' use of handlebars is to compile templates into static html files, which is is doing exactly as intended. You are trying to use handlebars through javascript on the client side, so you should _not_ be using handlebars through roots, as the two might conflict, and this is probably the source of your issue.\n\nTry changing the file extension to `.html` and running it that way.\n. Great! If you want to precompile the templates, you could always try the [client-templates extension](https://github.com/carrot/roots-client-templates) as well\n. Hey there @reubano,\n\nUnfortunately, if that was the case hardly anyone would opt in for the analytics. This is not because people are objected to analytics (we have thousands and thousands of users, less than 1% opt out, and this is the first time anyone has ever opened an issue about it), it's because it offers them no benefit, so they would not put extra work into enabling it.\n\nHowever, the analytics on roots are quite important for us. As you know, roots is free open source software. I take my free time to make it for the benefit of others, and my employer also sponsors a decent chunk of my efforts, since we use it for our work. Having some relative numbers as to how many people are using roots is an important way to validate the extra work that goes in to making this publicly available and offering free support to all users. With rough numbers (which, by the way, are also entirely open source, anonymous, and available at http://roots.cx/analytics, including the API key which anyone is welcome to use), I can say \"there are X people using roots\" to my employer, and they can present this to other companies wondering about our credentials, and whether the products we build will be stable.\n\nOn top of that, it helps us to understand how people are using roots. Which features are being used, and which ones aren't. This makes roots a better product for our users, since we don't need to pour extra time into unused or rarely used portions, and are encouraged to put more time into features that do matter to people are are getting heavy usage.\n\nTo be honest, even offering users the ability to opt out and notifying them is a huge step beyond what pretty much any other project offers. Every single website you visit, including github, tracks you at a much more granular level than roots analytics does. It knows your IP, location, some basic user demographics (thanks to google), and every little action you take on the site is tracked. You are not notified, and there is no way to opt out. Same with every single app you use on your phone.\n\nI feel like it's fairly generous in the first place to not only pour hundreds of hours of my personal time into this project and provide it completely free for you, but also give out the analytics API keys freely to the public, purposefully make the tracking very anonymous to collect the minimal information we need, and offer users a way to easily opt out upfront. That being said, I'm not going to make this change. However, as this is MIT licensed, you are more than welcome to fork it and make the change yourself!\n. > Isn't it also possible that people do object to analytics and just aren't aware they are being tracked?\n\nIt is possible, but this would be their own fault for not reading the very clear and obvious message about it after installing, so I feel like it's unlikely, and even if it is the case there's nothing I can do about it.\n\n> A page which isn't linked to anywhere (that I could see) from the roots site.\n\nIt's linked in the message about analytics that appears on install. You know, the one that brought you here. It's not relevant to the roots site, where people are going to find out about how to use roots. However if it would make you feel better, I am more than happy to add a link from the roots site. In fact, you can add it yourself -- [roots' website is also open source](https://github.com/carrot/roots-www).\n\n> Roots is modular, so wouldn't you get the same information from the npm stats of the respective plugins?\n\nNope. Npm only reports number of installs. If someone installs roots, they also install all the dependencies with it (they are dependencies after all), so it gives us zero information.\n\n> But open source projects, unlike websites, are installed onto your machine.\n\nYes, _but it's open source_. You can look at the source before you install it. In fact, you should do so. This is not the case with a website or app. Any open source project (or closed source project for that matter) that you decide to install on your machine without reviewing the code could install malware on your machine. This argument has nothing to do with analytics at all. If you are installing a program on your machine, you should ensure that it doesn't contain malware in any circumstance. In this circumstance, it's particularly easy, given that the code is open to the public, clearly written, and thoroughly documented. It is each user's responsibility to check what they install on their machines, not mine.\n\n> I would hope you hold roots to higher standards than mobile apps, many of which are so full of ads...\n\nThis has nothing to do with the argument at all. There are good mobile apps and there are bad mobile apps. There are good open source projects and bad open source projects. This has nothing to do with analytics.\n\n>  I'm all for creative funding for OSS, but this just seems sneaky\n\nThere is no way for us to get usage stats on the project and be less \"sneaky\". The code is open for anyone to read fully and fork if they want. We display a prominent message to each user on install notifying them about it. The data is 100% anonymous, and we even provide all of the raw data openly for anyone to look at and analyze. Calling this \"sneaky\" is nothing less than disingenuous, I'm sorry.\n. http://roots.cx/docs/error#eacces-permission-denied\n. @cassianomon haha it's totally fine! you don't need to delete it, someone else might have the same problem in the future and find this, never know!\n. @drbe4t You can check the `package.json` file under `dependencies` to find out!\n. Yep #725 has the answer!\n. There isn't nearly enough information for me to be able to tell what happened here, but I'd give it a 99% chance that it's something a little messed up with your machine rather than an issue with roots. This type of issue is better to take to https://gitter.im/jescalan/roots, since it's a support request rather than a bug, come meet me there!\n. Hi @calebeby! Sorry for the delay, I've been tied up with some projects recently. This looks good, could you add a simple test to verify that it's working, potentially?\n. @calebeby this is probably the closest match. this is a pretty tough test to start on - let me know if it's too confusing!\n\nhttps://github.com/jescalan/roots/blob/master/test/watcher.coffee\n. @calebeby so really the only thing you need to test is that the options are being passed through to browsersync correctly. they have tests for their own features, we just need to be sure the configuration is being passed to it!\n. @calebeby So it will use whatever fixture you pass in when initializing the watcher class [seen here](https://github.com/jescalan/roots/blob/master/test/watcher.coffee#L42), which for the existing test is basic.\n\nIf you need a new app.coffee, you're welcome to make a new fixture and pass that in, or you can pass your config options to the roots class when you initialize it, [see js api docs](http://roots.cx/docs/js_api)\n\nTo check the variables passed through the internals, you can use the [mockery](https://github.com/mfncooper/mockery) package, you can see it at work in [the CLI tests here](https://github.com/jescalan/roots/blob/master/test/cli.coffee#L2). I think the approach here would be to replace browserify with a mock, then check the config coming into it through the mock\n\nHope this helps, and fire away with any more questions! This is definitely on the more complex end of tests that could be written, so big props for jumping in and going for it \ud83d\ude01 \n. So if you are running as root, it doesn't really make much sense that you'd get a permissions error, as the root account should have permission to access anything, especially its own home directory.\n\nI have not had much experience with docker, so I can't really give a lot of info about how docker works with respect to root accounts and permissions, but I can assure you that what's happening here is exactly what roots intends to happen. It's finding the user's home directory and placing a configuration file there.\n\nIt's likely that a lot of other node libraries don't use this functionality because they do not store global persistent configuration information. Roots does however. It keeps track of whether the user wants to disable analytics, their default template preferences, and stores any roots templates they have installed. Generally the active user's own home directory is pretty much a sure bet to be something that user will have access to (although apparently its not the case in this instance, confusingly).\n\nThere is no question that this is an issue with the container. The fact that the `root` user cannot access its own home dir is not normal, nor does it make any sense. This part of roots' installation is indeed not extremely common with other node libraries (although there are a number that do have it, and would encounter the same issue). But that doesn't change the fact that this is an issue with the docker container, and not with roots, which, judging by the error you posted here, is doing exactly what it was intended to do.\n\nLet me lay out the issue as clearly as I can so it might help you with reporting it.\n\nIn node, you can run the following code to get a user's home directory, which that user should _always_ have permission to view and modify or there are serious issues with the machine's configuration:\n\n``` js\nvar os = require('os')\nos.homedir()\n```\n\nFrom the command line, you can get the home directory as such:\n\n``` sh\necho $HOME\n```\n\nWhat roots does on installation is run [exactly this code](https://github.com/jescalan/roots/blob/master/lib/global_config.coffee#L18), then [creates any nested folders](https://github.com/jescalan/roots/blob/master/post_install.js#L19) that might be necessary inside the home dir. Generally, it will create `$HOME/.config/roots`, in order to store the global config information.\n\nThe issue here is that the user does not have permission to modify their own home directory. Now, if this is some type of strange docker limitation, you can always change the home directory by setting the `$HOME` variable in bash to somewhere that the user does have access to before running the roots install. Otherwise, I'd call this a bug with the container.\n. It's not possible at the moment, although roots' cousin [spike](https://github.com/static-dev/spike) does have this capability!. Shipped as `roots@5.1.0`, sorry for the delay!. Hey @Reinkaos! Thanks for pointing this out. It appears as if this is a bug. I'll have it patched up and a new release out to resolve it shortly \ud83d\udc6c. Hey actually, anyone interested in trying to submit them patch themselves? This is a fairly straightforward change if you understand how promises work \ud83d\ude01\r\n\r\nThis is the method that needs to be slightly retooled: https://github.com/jescalan/roots/blob/master/lib/api/compile.coffee#L106\r\n\r\nBasically, `W.resolve` should be used here instead of `lift`. So axis is a transparent library, meaning that you need to use its functions for it to show itself. It's not bootstrap, and will not automatically style your page for you -- you choose when to use it, and what elements to use it on. It is there and ready for you to use in your stylesheets when you need it though.\r\n\r\nCheck out [the docs](http://axis.netlify.com/) and use one of its functions, watch it shine \u2728\r\n\r\nClosing as this is not a bug and is a support question, but please feel free to continue commenting here if you have more questions, or take it to gitter!. Hi there @inferi0n -- this is an issue with sprout-static-cms and not roots, so I'd report it over there. Chances are this repo is unmaintained though, I must warn you!. Check here! https://github.com/jescalan/roots/issues/726. The error message gives you the solution!\r\n\r\n`Error: Use CoffeeScript.register() or require the coffee-script/register module to require .coffee files.`\r\n\r\nIf you need to require a coffee file, just run `require('coffee-script/register')` at the top of the file you are requiring into. Or use a regular js file.. @jonschlinkert Thanks for your great work on micromatch! Really appreciate it \ud83d\ude47 . Yep, there are tests in place to ensure this behavior, and they are passing to my knowledge. If you can make a small project that reproduces this issue it would help!. I just pulled that project down and compiled it, and it did not use the production config. This can be verified by adding a `console.log` to the production config file, and running `roots compile`. If the console log doesn't appear, it's not using that config.\r\n\r\nAre you 100% sure the production config is being used in your case? What steps have you taken to verify that this is the case? And what operating system are you on?. So I am unable to reproduce this issue, I'm sorry! That being said, I ran this on a mac, not windows, so that might be related to the issue. Unfortunately I do own a windows machine, and also not have the time to look into this any further for you right now. However, if you want to look into it that would be great!\r\n\r\nThe point where the config pull happens in the source code [is right here](https://github.com/jescalan/roots/blob/master/lib/config.coffee#L78). It's written to be as clear as possible, and is heavily commented.. Nice, glad you got it! \ud83d\ude4c Good detective work.. All core compilers have error handling, although I'm sure some of them need debugging\n. I'm not totally sure on this one. I definitely wanted to ship this with my version of compass (roots), which in my experience has been a lot cleaner and easier to deal with and also includes highly customizable and modular UI mixins. The only thing it doesn't have is the spriting functionality, which I don't use anyway but would be easy to build in if needed (or build as an extension to the command line too - `roots sprite folder-name`).\n\nAlso a big thing for me is to not have this depend on ruby. It's notoriously difficult to install ruby for those who don't have it already, and I'd want to be able to use this for getting people hooked on and/or teaching preprocessors. Installing node is super straightforward and I've never had anyone have trouble with it.\n\nI spent a while looking for a decent port of sass to javascript earlier this week and couldn't really find one that worked. I'm starting to think that just including stylus would be enough - it works with or without brackets and semis so both preferences there are satisfied, and it's definitely cleaner than both sass and scss, and is made for javascript and node.\n\nAt the same time, I wouldn't want to isolate people who were super hooked on sass and compass, but I think maybe a sass and compass module should be built as a plugin that can be included with this guy if you want - this way we'd avoid the ruby install problems unless the person almost definitely already had ruby.\n. I've been mulling this over and am thinking we should only ship it with the core set we have defined now: jade, stylus, coffee, ejs, and any type of static file - just to keep it light. I want to define a nice interface for adapters though so that people can easily write extra compilers and pull them into the app when needed.\n\nThe nice thing is that it's not too difficult to execute anything from the command line directly, so even if there isn't a good native compiler for say, haml or sass (which honestly there isn't - the ones TJ made are long abandoned and now broken), it should be fairly trivial to implement the compilation of this type of thing directly from the command line.\n\nI think haml and sass (compass if you want but I don't really mess with that stuff) should definitely ship as plugins, and would be a good way to serve as an example plugin template for other people to check out. I'm writing up the plugin spec now, it should be super easy to add in to the existing workflow.\n. I think this has been more or less resolved - the default stack is set as the quickest, cleanest, and most reliable ones we have in javascript - jade, stylus, and coffee. Any extra languages can be easily added to the compile stack through plugins.\n. I would say tests have improved significantly enough that I can close this issue. Of course, going after better test coverage is and will always be a goal, but it's no longer an absolute disaster\n. good call\n. Not sure if this is actually any cleaner - I'll look it over more thoroughly and either merge or implement promises probably tomorrow\n. I'm going to look into sequence as a way to handle this and throw it up here, then we can decide which one is cleaner\n. Sorry I'm so late on this - this looks good, but it still has the count in there which sort of bothers me. I'm trying to implement this with promises right now (which are confusing the shit out of me, but good opportunity to learn), and if it looks cleaner that way I'll merge that in. Otherwise I'll merge this guy.\n\nAlso what you have here with abstracting the compiler names out to a list is a fantastic idea which I definitely should have in there. The compile section in general could def use some drying\n. Ok, just pushed a refactor which is similar to this, but a little more cleaned up - check it out and let me know if it doesn't make any sense or if you think we should create some hybrid of the two\n. No longer relevant due to extensive refactors - closing this. Was a good pull request though : )\n. This is excellent - has it been tested with subdirectories? You might want to use readdirp rather than reddir here to make sure the structure is maintained. Also, the watcher library I had in there could detect whether a file was added, removed, or changed, which is something we could use in the future to make the compilation faster by only compiling/adding files that changed. This is just on first look though...\n\nBut the video was amazing though.\n. Changing this from bug to enhancement. The livereload code now works through a local function and only appears when watching the files, but we can still do better. Buffering streams ftw!\n. What say you of this? https://github.com/flatiron/union\n. Ok I'm going to close this seeing as we haven't been able to get close for 7 months. Perhaps in the distant future...\n. I think this is brilliant. Will definitely make this happen - should be a fairly straightforward implementation as well\n. This does work now, implemented in 78d3b8581a\n. closed as duplicate of #1\n. Well, layouts and partials are implemented, so I'm going to close this. I would like to have multiple languages allowed at once, will likely implement this later this week or next week.\n. So I've been tinkering with this and it turns out you can't copy a folder recursively in FTP because you can't create a file at a nested path. Each file or folder must be created directly in the current working directory. That means in order to effectively copy the files over, I'd need to write a script that would jump back and forth from directory to directory automatically making files and other directories until everything was copied over.\n\nThis is a brutal task and I really don't want to do it right now, so I'm back burner-ing this issue. If anyone knows of possibly a library that's already written to do this, that would be awesome. Otherwise, I'll work on it once the demand/my free time gets high enough.\n. Good news, the fantastic author of node-ftp has added an options to make directiories with nested paths as of this commit: https://github.com/mscdex/node-ftp/commit/1f32e8ec1cf4d8818a90371e733f530d199dad09 -- this means it should be a bit easier to implement this functionality and it should definitely be done soon.\n. I've been trying to figure this out, but I'm really not sure why it's happening... @samccone - any idea?\n. Plugin interface is functional, although not yet 100% smoothed out, especially installation. First commit with working plugin interface was 7271fabe76\n. you're killing it with this file watcher\n. This could be a plugin, but no need for it in core. Would be a good example of a plugin that requires a library, once I can figure that out. Either way, closing this for now.\n. closing - images will be in assets/img and I'm thinking a vendor folder will contain client side JS assets installed via bower as well as a plugins folder.\n. Closing this from lack of interest\n. Closed by 58ba4ce24c46fb1d5ed286802ec91054939aba10\n. bower was integrated in commit 4b740c89bc\n. I'm going to close this - compass is not going to compile very quickly, and it's not built to run for javascript. If people want to use compass, there are plenty of other frameworks (middleman, yeoman) that pull it in, and it would be fairly easy for someone who understands the project to build a plugin for roots if they wanted. But it's not worth spending extra time on it for me.\n. Sure, i just want to make it available as a mixin, for convenience, if they want. It could just grab the parent background property, add @2x to the url, then get the width and height and set those as background-size. Ya know?\n. That's definitely true, although I'd classify the @2x more as a convention at the point than a practice that some people use. I know you've been working a lot of responsive stuff lately though - how have you been doing it? Is there any kind of mixin functionality you'd put on your wishlist?\n. solid point. you've used this more than me, can you think of any shortcuts that would make this easier/automatic?\n. This has been added to root-css as `bg-retina()`. I'd still like to build out a mechanism to incorporate your svg method, but that will happen down the road.\n. Update: it's require.js that's causing the issue. What the eff?\n. Resolved, it was a bug in uglify.js that was fixed in a more recent release. Updated the dependency and it works great - whoo!\n. No, it's not. This issue was closed more than a year ago, these updates are present in 2.0.6 stable. If your watcher is not catching file changes, feel free to open a new issue.\n\nBut yes you should use the edge version unless you are dependent on deployers, which is the only piece that's not yet stable in the edge version.\n. have you checked out this beast? https://github.com/bestiejs/lodash\n. For sure, I wouldn't have thought of this either. Next on my list after a small docs site is mocha tests :smile: \n\nEasy change though, just add a filter to readdirp for `\"!components\"`\n. yea i can grab it\n. Got most of this done in about an hour. Nice way to test roots though, I found a couple bugs in the process. The repo is here: https://github.com/jenius/roots.cx\n. took a look at this, doesnt seem like it's the compile logic - ping @samccone \n. pull down the roots.cx project and run it there - it tends to happen as you add more files (not that the roots.cs project has a ton of files, but its more than the really minimal example)\n. I'm starting to see this more often, especially as projects have more files and content in the files. I feel like at this point this bug is my biggest hang-up before shipping. Have you had a chance to check this out @samccone ? I'll dig into it as well :smile: \n. Yeah I'll push one up in a few :sake: \n\nAlso, just changed the name of the repo so you might want to rm and re-clone, or just change the origin\n. Here's a solid example. Just tested and I'm seeing double reloads every time over here:\n\nhttps://github.com/jenius/roots/tree/reload_bug\n. you da bes :shipit: \n. This has been added - just set `exports.coffeescript_bare` to true in the `app.coffee` file\n. closed by 2d3d813f56\n. closed by 44e8b41b0f8f414182434d76599d87f3992ada19\n. I like this, about to merge that shit in. The only thing that makes me sad is the delay before reload - is there no way we can get around that 500ms wait? It might be worth poking around in here to see how they handle the reload thing - yeoman does a pretty good job with it:\n\nhttps://github.com/yeoman/yeoman/blob/master/cli/tasks/server.js\nhttps://github.com/gruntjs/grunt/blob/master/tasks/watch.js -> this one is better\n\nI'll poke around too.\n. Ah boo, that's no good. Did you check out the watcher module in grunt? It looks like the only possible delay they have in there is a 200ms thing, and they are checking the stats on a file. It seems like their reload is a bit quicker - think it would be worth digging in to that and experimenting?\n. Yep, looks great. Thanks @idpro - this will go out the next time roots ships.\n. Either way is fine. I've just been working off master, so thats fine for now. If I need I can always pull it down into a different branch anyway locally : )\n. Hi @dunphyben -- this is not the place for questions like this, although I do appreciate that you searched the issues. Roots does not deal with javascript at all, it's a static site generator. You just load in jquery using a script tag as you would on any static site and it will work.\n. you can use the `round()` mixin for this. `round: none` will reset and `round: 5px` would set all to 5 pixels.\n\nThis is in the documentation - if you just have a question like that feel free to email me instead rather than filing an issue!\n. 1. This should be filed in the [roots.cx repo](http://github.com/jenius/roots.cx)\n2. This needs to have more specific detail, screenshots, etc. The site doesn't have white text on a white background - are you sure this is not just your computer?\n. On it. Good catch.\n. Fixed in ba9cb8377dd401022a6f596e7448ab1a42602535 - thanks for catching this. run roots update to get a fresh patch for this fix.\n. You can run `roots new whatever` from your command line to have roots generate a starting template for you. Whatever being whatever the name you want your project to be.\n\nWas this what you were after, or did I miss the point? Just to add a little to this, roots is not similar to bootstrap in any way. It's intended for professionals to build high-quality custom sites - not as a tool you can use to generate a generic-looking stylesheet to slap on your site so that you can not hire a designer, or because you don't really know how to write css.\n\nThat being said, [semantic.gs](http://semantic.gs) is built into roots, and you can use it to quickly mock out grid structures if this is your style. There are a few examples on their site of basic grids, and the documentation on how to use it within roots [can be found here](http://roots.cx/css/#grid).\n. I think that would be a great compromise - thanks @samccone. I'll try to get a video up that walks through the process of building a simple site this weekend : )\n\nOr do you want to do it and get your smooth voice on the roots radio-waves?\n. Ping @samccone - up for this still? If not I can crank it through, I do have a fancy new mic...\n. good deal. and maybe fix the part of the watcher that pulls in new files? :wink: \n. These are done and up on the website at http://roots.cx - a bunch more tutorials, clearer video and audio. Hope this helps!\n. Into it. Could you check out how I'm doing the browser rewrite for errors (it's pretty janky) and let me know what you think of doing it that way? Should be fairly straightforward to implement though.\n. For reference, here's the file that handles the compile error messages: https://github.com/jenius/roots/blob/master/lib/utils/errors.js\n. Hey Matt,\n\nThis is some good work, but I don't think I want to have this included by default. Everyone has their own project preferences, and the entypo icons notably require attribution, which I'm sure many people would forget (and in fact you already did in this pull request) - I don't want to have a bunch of people violating the license of entypo because of roots.\n\nOn the other hand, the next feature I've got in the pipeline is an ability to add custom starting templates that can be defined by users. For example, if someone likes working with straight javascript and having the html5 boilerplate and entypo, they would be able to define this. I think this would be great to add as a custom template for sure. Let me get back to you on this one. Any other thoughts are welcome.\n\nAlso, roots ships with a font-face definition mixin - feel free to tinker with that as well. It's in the docs under utilities: http://roots.cx/css/#utilities\n. Did you really see the icons as blurry? If so, this might have been a massive glitch in either your phone's rendering engine or with entypo itself. The icons on the main site are font icons, as [you can see here](https://github.com/jenius/roots.cx/blob/master/assets/css/main.styl#L9), so there's no reason why it shouldn't be clear.\n\nThat being said, it would be great if the author of entypo would allow the icons to be packaged by default into the framework. I'll contact him and ask about this, although I do understand why he wants attribution and am not convinced that he would allow this.\n. Right. I only want a very basic template as the default - if people want to add entypo, it's simple to do. But I don't think I should push it on them by default - ya know?\n\nAs for the play buttons, totally forgot about making those retina. The videos were a last minute addition before ship. But that's a great call, could you [open up an issue in the roots.cx repo](https://github.com/jenius/roots.cx/issues) about the fact that these should be retina? Good catch!\n. Thanks so much Matt. I'm going to close this pull request -- not because it's a bad idea by any means, just because I think offering custom templates would be an even better way of implementing it. Could you open an issue instead about putting in custom user-defined templates? This would be a really big feature that I hope a lot of people would enjoy. I only ask you to open it because I want to make sure you know when I ship it, and that it was helped a lot by your input : )\n. I suppose, but really you'd have to be insane to type that and expect a good result. What's happening here, as you know, is that you are creating a new roots project called the name of the current folder. So it makes sense that it would overwrite the current folder with the new roots project. I can manually prevent the user from entering `.` or `..` as the name, would that help?\n. Uglifyjs is already in there for javascript dawg. Do yo research. But this is an excellent suggestion and I'll definitely merge this : )\n. Makes a ton of sense - I wrote the deploy script for mac and linux. I'll add in alternate syntax for windows as soon as I can - for now you might just have to run heroku deploy to get the job done : )\n. Blame it on the :bird: goose\n. Just an update - have not forgot about this. Roots core is getting a fairly large refactor in the next week or two, and I think I'm going to transition all the command line interaction to run on top of [shelljs](https://github.com/arturadib/shelljs) -- this will solve any differences between windows and unix : )\n. crazy - good call @randallagordon. other good news -- this fix has been pushed to master and will be deployed soon : )\n. shipped - let me know if you are still running into issues!\n. The compile helper keeps track of each file's target (html,css, js) - let me poke around and see if there's a way to do this without a significant slowdown. It would be super helpful if you could poke around with the watcher and see if you can get it to emit the file type.\n\nActually I'm wondering if making the watcher extend eventemitter would be a good idea in general. Just speculating though\n. This is the next big feature I'm working on, and should be set to ship in version 1.1\n. Also, the next big step after this would be to have the watcher return what operation happened on the file. Really it would just need to know the difference between modified/new and deleted, so that instead of trying to recompile a deleted file it would just remove it.\n. Added and resolved in the master branch\n. Yeah wow same thoughts in general - this is crazy. Great work on this project first of all, clearly you guys have poured a ton of thought and effort into this. I think that rather than trying to squash the entire project into roots, perhaps it might be better to steal small parts of it and include them in the pipeline. What I especially liked and what roots does not yet have I'll go over below:\n- The image optimization. still worried about the external dependencies, but I like how you guys did it and the tailored npm packages you have made to integrate optipng, pngcrush, jpegtran etc. This should definitely be something that happens on compile IF you have the binaries installed, but I definitely don't want it to raise a fuss if you don't because relying on entirely external dependencies that must be separately installed for me is a little whack.\n- Your use of require.js - I think we can definitely do better with this. I've been thinking about the best way to roll JS dependencies together and I think roots' philosophy is currently a bit undecided. I have the asset pipeline in there thanks to snockets, so if you want you can define a single `application.js` (or `.coffee`) and require all your others there. But I also have require.js included by default so you can dictate which sections of your code depend on which libraries and make it work efficiently there. The whole coffeescript issue is a separate thing - with coffee's automatic closures, it makes sharing code between included separate files super difficult. Having a system where you could export and require like commonjs on the client side I think would be ideal.\n- The options for putting your assets out to a CDN. For a static site, yeah, probably not crucial. But nice to have the option there anyway.\n- Assetgraph itself. I love this: \"if you change the url of an asset, all relations pointing at it are automatically updated\" - brilliant. Getting that integrated would definitely be something I'm interested in, although how feasible it is without increasing the project complexity is a major consideration - keeping things clean and simple is a big concern for us.\n- Inlining small images. This should definitely be done. I know stylus has support for this within the css - I should work on including that. Having it happen within `<img>` tags would be an added benefit.\n\nOverall I feel like pulling in [AssetGraph itself](https://github.com/One-com/assetgraph) and working with that directly rather than trying to pull assetgraph-build might be a better approach.\n\nIt seems like we have pretty similar goals in general with these two projects though, and clearly you guys have done some great work. I would definitely welcome you jumping in and contributing to roots, if that's something you're interested in!\n. So I keep coming back to look at this and thinking about it throughout the refactor process, and I think it would be incredibly awesome to build some pieces of this idea into the project.\n\nOne instance where it recently came up was with selectively compiling on save. Right now, roots compiles the entire project when you run `roots watch`, pops up the site in your browser, then watches the files and compiles individually changed files to save time. But the problem arises when a dependency that is not specifically compiled (such as a layout file or partial) is changed. Since this file isn't compiled, passing the filename through roots throws an error. And since I don't have an \"AST\" that knows what depends on what, I can't selectively compile only the files that change as a result of the original file changing. My temporary solution is that when an ignored file is compiled, the whole project gets recompiled, but obviously this isn't ideal.\n\nI feel like having an assetgraph would help with situations like this and a bunch of others. The only question I have here for you @Munter is whether assetgraph only works with vanilla html, css, and javascript. I feel like the real benefits would be to have assetgraph chew through the jade, stylus, and coffeescript files in order to figure out the relations there, before they are compiled. If not, would it be a monumental task to build adapters for other languages?\n. This is excellent - just a couple questions:\n- Does it have jade support? This is fairly important : )\n- Like you said, this is not set up really well for pre-processing. While this module would be easy to build in to the `roots watch` server, the end goal is for roots to spit out nice, compressed, and organized html, css, and js to a public folder - your app is then run as a static site from this folder. Would it be extremely difficult to pull this module out so that it could be used in node manually rather than only as middleware? If not, I'll start tinkering with it!\n. I'm going to close this just because I don't think it's viable at the moment. It would require a major rewrite of the core of roots, which I'm not prepared to do at the moment, and it would require quite a bit of external support to get everything wired up correctly.\n\nI do like this idea and would very much like to have it integrated at some point in the future. I'll keep it in the back of my mind, but I don't want to have this stagnant issue sitting around as open just because I want to get the issues section focused down to things we're working on right now.\n\nThanks so much @Munter for all your answers and support here, and don't doubt that someday we will be back here probably asking more questions :smile: \n. Definitely agreed, and I'll make sure to check out node-task. Thanks again @Munter!\n. Sorry for continuing to open and close this, but since this issue has been stagnant for months and I'm trying to really focus down on the next couple releases, I'm going to close this again. As soon as @slang800 is back to working on this actively, we can re-open : )\n. Yeah you're right. Can I assign this one to you? I feel like having worked with the watcher more you could handle this more easily than I can.\n. Awesome fix for this, resolved in the refactor branch. Will close this issue when the merge happens.\n. Resolved in master branch, will ship soon\n. Closed by b344c18\n. Ok this is a good one. The issue is that nodejitsu is paid where heroku is free (at least to start), so people would need a paid account to do it.\n. I'm not sure I agree with this, and here's why:\n1. It already relies on npm. The curl script is just a shortcut that checks if you have node, and if you do runs `npm install roots -g`.\n2. The `roots update` command just runs `npm update roots` in the background anyway.\n\nSo the project does rely entirely on npm, the commands you specified are just syntactic sugar to make things cleaner. If you want to use npm to manage it, you can. In fact on the site I specify how to install it using npm, and I assume those familiar will do this. I don't think removing the wrapper commands would help anyone. Life would be the exact same for those who are familiar with node and npm, and slightly more difficult for those who are not.\n. Fair enough, I can agree with this. I think to start I'll just switch the priority - I'll keep the other scripts in there but emphasize the npm ones rather than my custom ones. If I see usage for the custom ones going down I'll gradually phase them out. Thank you for this suggestion -- I'm going to close this issue and the roots website will be updated with this revision tonight!\n. Wtf? I'm closing this - re-open it if you have any more details or plans for what you think the starting framework should be.\n. I still don't understand what you mean...\n. Are you talking about the default contents of the index page? The readme? What it says on the command line after running the command?\n. Was this one resolved in your last round of PRs?\n. Ok I'm closing this, trying to organize the issues here.\n. Looks good :thumbsup: \n. Absolutely agreed. We need a bad ass port though, which one should we use? 20075 kind of looks like roots if you squint really hard haha\n. Actually I think we should stick with a bit lower of a number. How about 1400? It's not reserved for anything specifically and is easy to pronounce and remember. We could also use 1111, this doesn't seem to be taken by anything standard.\n\nHere's the list of registered ports: http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers\n. done and done. really like this little addition\n. Could you leave in the process.env.PORT line and push?\n. Yeah the point was that you could override it if you want to when you run roots watch. `PORT=321309 roots watch` would do a manual override if for some odd reason they are running another dev app on that port. Don't think it would be necessary, but it can't hurt to offer the option.\n\nIf you recall, that's what https://github.com/jenius/roots/pull/36 added\n. You have an error in your css, as it told you. It's telling you where the error is - run roots watch, go into the public folder, and go to line 58 of your css file. Go back into your stylus file, make the correction, and you should be set.\n\nIf you are really struggling, I can help you find it, just post a link to the github repo with your project in it.\n. The library that's throwing this error is [csso](https://github.com/css/csso), and I'm quite sure that it works right. I definitely think it should be throwing the file name with the error (i'll see if I can submit this to them), but there is without a doubt some invalid css in there somewhere.\n\nEither way glad you could figure this out! If you're having a lot of trouble with the minification step you will be able to run it with the `--no-compress` option as of the next time roots ships, which should be in a day or two : )\n. Oh sweet jesus you're using bootstrap with roots? Although I wish I could say \"I built a kill switch if you try to install bootstrap\", I didn't actually think anyone that knew how to write jade, stylus, and coffee would go there, so I didn't. Maybe it will be there in the next release.\n\nEither way, it looks like this is an error with bower, and it looks like [you're not the only one that's run into it](https://github.com/yeoman/yeoman/issues/search?q=127%20git). Perhaps checking out some of the answers on the bower repo would help?\n\nI'd say it's likely due to some sort of weird setup with git - are you sure your git is the latest version and everything is set up right?\n. Did you manage to resolve this? Since this is not an issue with roots and rather with bower, I'm going to close this issue.\n. Yeah great call I noticed this before. I'll fix that, it's just making the position fixed rather than absolute\n. Can you do a little more investigation here and make sure? I haven't seen this happening with any of my code. Also wait are you sure running a nested import like that is legit? If it turns out this is happening, it might be a stylus bug rather than us\n. Hey I'm going to close this just to keep it clean - by all means re-open this if you have more details or a fix etc.\n. Not sure I want to do this just because it's not the standard with express. I wanted to keep this close to the express default template. But then again I did add connect-assets... that was mostly just for getting back roots' familiar languages tho\n. Same thing on this one - I don't want to vary from express' defaults unless we have a solid reason for it. And come on moving the commas to the end of lines is not an improvement, thats the opposite!\n. Fine, I'll merge this one. Still not on board with commas at the end being better, but I'll take it.\n. Just started playing with this, and it's actually super brilliant. I'm incorporating this into the refactored build, and honestly, this is going to take the compile speed up a huge huge amount. We really only have to compile a single file each save (rather than all of them), and my goal is to ship this next version with that happening.\n\nThat said, I'm starting to realize that the mark of great engineering on this project is going to be when I can either feed a single file or a giant nested directory through roots and it will handle them both nicely, while still having a dry and readable codebase.\n\nThis is the next big thing I'll be working on : )\n. Manually merged this into the refactor branch - whoo!\n. I'm using underscores rather than camel case through the app - I feel like changing it only in this location makes things more confusing...\n. I'm going to close this one and pick out some pieces from the debounce pull request\n. Is there any way you could separate these two? This PR also includes the contents of another PR :/\n. Also, just curious - why did you add this? Isn't this just going to slow the reload time down without any other tangible benefit?\n. Ah ok, let me check this out. Sounds like a good call : )\n. Manually merged into refactor branch - whoo!\n. I like this idea. If you fire up a new roots project, it will scaffold out a basic boilerplate, but I'd be happy to put up a couple examples of sites built on roots if that would make life easier for people...\n. #40 appears to be an exact duplicate - going to close this one, although it is still very much on my to-do list\n. What you are asking here is not an issue with roots, it's a design question about the specific site you're working on. Things like this don't exactly belong in the issues section, perhaps emailing me would be an easier way to get help : )\n\nIf you want variables in your views, there are locals available, as you mentioned. If you want to store state on a dom element, you can use javascript (data attributes). If you are looking to do some sort of other wizardry in the views, look through the documentation for jade, as this is the view engine.\n. Ok sorry, it wasn't clear that this was what you were after from the original question. So would it help if I added an variable that just contains the template name to each view automatically?\n. I see no reason we shouldn't be able to do this. I'll put this on the list for the next release, which should be later this week or early next : )\n. shipped - variable is called path - available in all views\n. Hey Sebastian,\n\nAll you need to do here is reference require.js with an absolute path or use a new layout in your subdirectory that references it relatively - this is just about paths - there's no roots magic involved whatsoever. Thanks for bringing this up though, I might change the default to reference it absolutely : )\n. Awesome - closing this one. I'll ping it from commit when I push the absolute reference in the default template\n. Change the extension on the file to `.css`\n. If it helps, I originally wrote the library in sass but ported it over because stylus fits the task better. I would recommend giving stylus a shot and seeing how you like it. It's extremely similar to sass anyway, should be an easy experiment.\n. Not sure exactly what the issue is here, sorry for being slow - could you explain it one more time Sam? Are you sure this is not an issue that can be solved using `ignore_files` in app.coffee?\n\nEither way, I'll try to replicate this according to the original issue @jsncbt and update on the status today\n. Ok, so I took a look at this, and it's not an issue with roots, it's just the way that stylus works. It seems like you are having two distinct problems here:\n- use of `@import`\n- use of `ignored_files`\n\nAs for the `@import` issue, this is stylus working the way it was intended. When you import a file, it makes it's contents available to the file you just imported it into. It does not make its contents available to every other file that is imported into that file. So in this way, the behavior you have experienced is normal, and is exactly how stylus is supposed to work.\n\nThe second issue, it seems, is that you are using a number of \"mixin templates\" -- that is, files that are only intended to be imported into another file, and not compiled themselves. In this case, you must make sure you have manually ignored these files from the compile process. It's impossible for roots to make the call automatically as to which files you want to ignore or not, so there is no other solution than indicating it yourself.\n\nIn order to do this, you can either add all the file names individually to the `ignore_files` array in the `app.coffee` file, or you can make use of the convention that I applied throughout roots -- that files beginning with an underscore will be ignored by the compile process. You can actually see this rule is already in the `ignore_files` array (in [minimatch](https://github.com/isaacs/minimatch) syntax) -- if you would like to follow a different convention it can quite easily be changed.\n\nYou might have noticed that I did a similar thing while building [roots-css](https://github.com/jenius/roots-css). One additional concept I took advantage of was stylus' use of [index files](http://learnboost.github.com/stylus/docs/import.html). You can see how I implemented the \"base\" file for roots-css [here](https://github.com/jenius/roots-css/blob/master/roots-css/index.styl).\n\nHope this makes some sense - let me know if any part of it is unclear or if I missed the issue. If you'd like, I can upload a copy of the sample project in which I solved your issue. If this makes sense and takes care of the problem, feel free to close the issue!\n\n@samccone -- was this something you brought up in a previous issue that I didn't quite get what you were after, and does this solve your problem as well?\n. Here's the test project - I'm going to close this issue, but let me know if you are still running into troubles!\n\nhttp://cl.ly/LybU\n. Thanks @ChristianBundy - this is a great start! Thanks _so_ much for helping us out, we really appreciate it. My only concern is that the colors and style don't fit too well with the current aesthetic on http://roots.cx...\n. ping @karolinaszczur on this one : )\n. There's also a [$10 reward](https://www.bountysource.com/#repos/jenius/roots/issues/75) for whoever does this :+1: \n. Hey brooss, thanks for helping out! This is a good start, but I'd like to see a little more work here to make sure it fits with roots' aesthetic. This just looks a little like clip art to me because of the style and coloring. Thanks again for pitching in though!\n. Yeah probably. Just simple, clean, bold line vector is what i was thinking - your thoughts?\n. Love both of these : )\n. @brooss we definitely appreciate the hard work you're putting in - don't get me wrong. I just don't think that plant graphic isn't quite making the cut for us. It's hard to critique a design because I know design can be very subjective, but what you're posting is just not the style we're after.\n\nI'll try to be more specific - the only change you made to the second version was putting it inside a grey circle and changing the color. For the rocket image, it's not the fact that it's inside a circle that we like, it's more the overall style: bold, clean, geometric lines and subtle shading.\n\nIn addition, there's something about the plant drawing that looks a lot like clip art to me - I think it's probably the cartoon-y style on the curves of the leaves. I think maybe revising that base image would be a good place to start. In addition, the roots have some strange aliasing going on, and 2 of them are not connected to the plant at all.\n\nSorry that I'm so picky about this, the only reason I am is because I'm a designer myself, and I've been pouring my heart into both the design and code behind this project - I want to make sure that if we do choose to add a logo, it's something we really love :smile: \n. Wow, really like this direction @PatrikLythell - very simple and nicely done abstraction\n. Wow, that's crazy with the colors idea, never would have thought of that. Looking forward to seeing your tinkerings. Also pinging @noahatkinson on this one ; )\n. Yeah this does look nice, really fresh. I think the only thing left that's still putting me off a little is the color scheme...\n\nThanks _so_ much @PatrikLythell for the continued awesome work!\n. Oh I do like the pastels, it's just this particular combo I think - grey, light grey, pink, and purple - doesn't seem like it totally fits. Especially because the current theme is a greyish blue and orange. Far from bad though, just being a perfectionist :smile: \n\nMaybe something like this palette would fit better? http://www.colourlovers.com/palette/694737/Thought_Provoking\nOr this one? http://www.colourlovers.com/palette/443995/i_demand_a_pancake\n. Ah, like this a lot more. Thought anyone else?\n. Awesome. I'm going to call this closed, and I'll get this into the roots website as soon as I can, and as soon as I get a svg file from @PatrikLythell. Whoo! I'll also add you to the credits under the FAQ, if that's ok with you Patrik. Thanks so much for this great work :smile: \n. Awesome, thanks so much! Looks great. Is there any chance you could send a circle version and convert the font to outlines as well? Much :heart: \n. Thanks so much @PatrikLythell - you should claim the reward for this one :stuck_out_tongue: https://www.bountysource.com/#issues/98485-a-roots-vector-logo\n\nAnd yeah that is a good idea @samccone  - perhaps I shall :wink: \n. just shows up as a blank space for me...\n. ![wat](http://cl.ly/M2M1/Screen%20Shot%202013-01-08%20at%201.23.29%20PM.png)\n. didn't do it :cry: \n. Oh yeah I got it to work on my laptop. Aiite want me to throw it in, or are you gunna PR that shit?\n. Yeah this is a big thing in Rails, and I don't disagree at all. This is what I was sort of after in the default new project template, especially with establishing the `views` and `assets/css`, `assets/js` and `assets/img` folders. Although it's possible to change them if you dig into the source I don't encourage it.\n\nAre there any other places you see establishing conventions being useful?\n. Yeah, it bothers me a good amount that component is not requirejs compatible. I think I'd rather side with requirejs if we had to pick one, honestly.\n\nThis is an interesting concept though, I know you were writing some crazy stuff in the other issue about bower related to that. Are you still thinking of integrating package managers more tightly with require or something else? I've started on the asset graph as well so I can see a remote possibility of a tie-in there too.\n. Good news, this has just been tested and implemented! A short note has been added to all new projects' app.coffee file about how it works, docs coming soon on http://roots.cx!\n. Status: Refactored the deploy process to more elegantly handle multiple deploy recipes, ran into a bug with jitsu being called from a child process which prevents that one from being totally smooth, and ran into a bug with the ftp adapter which is causing file uploads to hang. Filed issues in both projects, hopefully will be resolved soon so these two can be pushed through!\n. Yep, nobody is - code looks good, thanks for taking an initiative here randall :thumbsup: \n. Also, feel free to not reference via absolute path - you can add this to the PR :thumbsup: \n. Update - just removed the absolute path css reference and pushed to master. Also fixed the ftp deploy adapter, which is nearly ready to ship - it just has to remove the current remote directory contents before pushing new files, which means I need to write a stupid recursive ftp method which I'm going to do today.\n. Ok, so the ftp and nodejitsu deployers have been shipped, so I'm going to close this up. They haven't been super thoroughly tested or documented, but this will be part of the large release coming up in about a month.\n. Absolutely! You can do this, it's just not documented (wanna submit a PR and add it?)\n\nJust run `PORT=3000 roots watch`, with 3000 being whatever port you want : )\n. Thanks for the contribution jonki! Looks great : )\n. This is resolved in master, should be shipped soon. I've been tinkering with super minimal apps in the tests and noticed the bombing, just set the defaults to nothing.\n. I'd also like to add to this that it bombs if there's no app.coffee file, which I also intend to fix. I mean, you don't really need one if you don't want.\n. Ah bitches. Well at least it gave clear instructions haha! If you run `npm install roots -g`, does it return an error for you? If so, could you paste it here?\n\nGood call on the copy as well, I updated that and it will go out with the next release : )\n. Weird - that's all roots update does. It only returns that message if there's an error. Can you still reproduce this error?\n. You can just create a variable in the view and print it in the layout. Example:\n\n``` jade\n//- in view file\n- title = \"blah blah\"\n\n//- in layout\nhead\n  title= title\n```\n\nIf this takes care of your issue, feel free to close : )\n. Seems like this was introduced in an updated version of jade. I'll get a workaround up here in a moment.\n. Ok, so it turns out you need to use jade's layout system to get around this, as after some updates, this functionality is currently out of scope for roots' basic layout system (I'll explain more later). Here's how to use jade layouts to accomplish it:\n\n**layout.jade**\n\n``` jade\n!!!\n  html\n    head\n      title\n        block title\n    body\n      block content\n```\n\n**index.jade**\n\n``` jade\nextends layout\n\nblock title\n  | testing title\n\nblock content\n  p hello world\n```\n\nNow, the reasons why I'm currently unable to patch this block/yield functionality into the layout engine. In order to do this in a language-agnostic manner (which is how nearly everything in roots operates, in order to give you the flexibility to choose which language you like best), it would either require a second parse of the content to somehow pull out language-native variable tokens or a modification of the first parse, neither of which are good.\n\nOn top of that, it would require a custom mod for each language to (if even possible) go grab the token representing certain variables or keywords, which would be a lot of extra work to create and maintain as languages change. The only alternative is adding another compile pass on top of the files for custom roots syntax, which I'd also rather not do. Any other ways this could be implemented smoothly are welcome though!\n. OH GOD I'M SORRY GUYS I DON'T KNOW HOW THIS HAPPENED.\n\nWill be fixed in one moment!\n. manually patched - thank you for the quick fix tho!\n. Thanks for the heads up - let me check this out and I'll get back to you in an hour or two : )\n. Was definitely a lurking scope bug - thanks for catching this, it's fixed and I patched and shipped it. Roots upgrade should restore the functionality :thumbsup: \n. haha good work, took the words right out of my mouth. hope you enjoy roots :smile: \n. Can you try running `npm install roots -g` and paste the output here if it was an error?\n. Super weird, not sure what's going on there. Roots update just runs that exact command, and only spits out the line you got if there was an error. Since it runs fine, I'm not sure how that's happening... :weary: \n\nEither way, I guess use `npm install roots -g` in the future until I can replicate that issue and figure out what's causing it. Any additional info about what OS, node version you are on etc?\n. Ah, great call. Want to put in a pull request for it? Open source contribution FTW!\n. Closed by 0016b8ed35086f7aa23295ca14501c4d48932c7b\n. Please update the issue with your code as well - I need that to see the error. Most likely you are missing a unit (percent, em, pixel) on some of your variables, based on what the error is telling you.\n. The indentation is wrong here. Look it over quickly and you'll see the issue :smile: \n\nAlso, you don't need to import nib or nib gradients, both of these are included (and extended) in the roots css library\n. Awesome, thanks for finding this out, makes a lot of sense. Docs updated to fix this issue in https://github.com/jenius/roots.cx/commit/0422f3751e8fc80281b814b7c1e437082e76db0d\n. Thanks for filing this one - I had noticed it personally a few times, but it was really getting out of hand. This is an issue with the way csso (the css compressor I'm using) throws errors. I looked into it for a while and it looks like their error handling process is just crappy, and the library isn't super well maintained although it is a really neat project. I'm going to switch to [clean-css](https://github.com/GoalSmashers/clean-css) for css minification until this is resolved.\n\nThis fix will go out next release :smile: \n. Excellent - thanks! If you can't find it right away feel free to drop a zipped up copy of the project that produced the error in here and I'll hunt it down. Jade should report filenames, I am passing them in the jade compiler.\n. Second comment closed by 0016b8ed35086f7aa23295ca14501c4d48932c7b\n. Any update on this? I'd consider this issue closed except for the comment you had about the jade error. If this can't be reproduced, I'll close this up : )\n. Sweet, thanks Sean!\n. Could you add some reproduction instructions so it's easier for me to track it down?\n. Hey, so I tried doing this and I'm getting like 5 errors, but they are all very clear and include a full stack trace. Perhaps this will resolved in a recent update? I have put some fixes in for error handling recently so that might be it.\n\nIf you can confirm this isn't happening anymore, could you close?\n. I know! I can't figure out why - I'm pretty sure I have it in the right spot in the package.json file, but npm just isn't installing it for me. Any thoughts on this?\n. First of all, thanks so much for looking through the code and for this fantastic pull request. It makes me so happy to have people pulling apart my code and checking out roots. Most of these changes are fantastic, and I'm definitely going to merge at least most parts of this PR. A couple things I noticed you did here that I don't totally agree with:\n1. Commas after rather than before lines: for lists that frequently change or are added to, having a comma before rather than after each line makes for fewer mistakes. If you can make an argument that convinces me otherwise, I'll gladly concede - this is just a practice I've picked up through a bunch of coding and it's been very helpful so far.\n2. Semicolons everywhere: although I know it's often touted as a good practice to always use semis in javascript, it can also be useful to understand how automatic semicolon insertion works in the javascript parser in order to avoid unnecessary extra characters. Don't get me wrong, my semicolon usage is sporadic and could definitely use work, but some of your additions here are not necessary and are just adding extra characters. This article is a great related read: http://jamesallardice.com/understanding-automatic-semi-colon-insertion-in-javascript/\n3. Double vs triple equals: again, it's often stated that it's a best practice to always use triple equals, but if you understand the difference between double and triple equals, you'll find that there are mant situations where the double equals can be used safely, and in fact often to your advantage. This is a great explanation of the two: http://stackoverflow.com/questions/359494/javascript-vs-does-it-matter-which-equal-operator-i-use\n\nAs for your request for changing to coffeescript, I'm a little conflicted. I do thoroughly enjoy coffeescript, and always use it when coding for the front-end, but in this case, I'm actually happy that I didn't use coffeescript for the following reasons:\n- The roots codebase is almost like a work of art for me (albeit a work of art that has plenty of work still to go), and having total control over how everything operates is a very appealing concept in this respect. It's easy to write clean coffeescript that compiles into something that really doesn't look that nice, and this bothers me knowing that what's under the hood is a little messy.\n- Not everyone who writes javascript is familiar with coffeescript, but everyone who writes coffeescript does know javascript. By having this project written in vanilla javascript, it makes it more accessible to contributions.\n- If I wrote this in coffeescript, it would need to be compiled before running each time. This just adds one extra annoying step for me when working on the project and for anyone else when trying to set it up.\n- Writing this large of a codebase in vanilla javascript has helped me understand a lot of the finer and subtler points of javascript and how to make vanilla javascript look and work well, and I never would have had those benefits with coffeescript.\n. Checking for undefined is the one place that I do use the triple equals, for this exact reason. You have two options here:\n\n`typeof variable === 'undefined'` and `variable == undefined` -- the section option looks a lot cleaner to me.\n. And your point on ASI is definitely great, I agree. I'm going to pull this in and try to merge it with a couple small edits today. Just wanted to thank you again for taking the time to look over the code and for making so many fantastic points and suggestions : )\n. Wrap-up: I merged most of these changes. The semis are a good call - there's no reason not to have them consistently. I also like the newlines at end of file. The `typeof` fix you put in was almost right - it seems like the best option after doing a bit of research is `typeof whatever === 'undefined'`, where you had a double equals rather than triple. I moved the commas to the end as you suggested, although I'm still not totally sold on this. And finally, I re-compressed some of the one-liners that you expanded, as I think there is readability value to one-lining very short expressons.\n\nOverall great work - thanks so much for making these contributions, and the many others I've seen coming in from you Sean. I can't express how happy it makes me to see people using and looking over code that I wrote. Your time spent on this means a lot, even if only just to me : )\n. Awesome - you are totally right. Great pull request\n. Again, great suggestion. I would definitely be down with using jsdoc. This wouldn't be _super_ high on my priorities list just because most people won't see it, but definitely worth keeping as a open issue to bother me until I get it done. Would more than welcome any pull requests contributing help with this for any file : )\n. I really like the look of transformers. Being used to tilt in ruby, I actually was looking for something like this when I started working on roots, but didn't find a stable one. It worries me a tiny bit that this one is so young and not super heavily used or watched, but definitely looks like it might be worth a shot.\n\nI really like the idea of handling compilation externally, and this would in addition add a ton of extra potential languages to roots' capabilities. Thanks for the suggestion!\n. Totally right, I just noticed this the other day. This is a bug for sure. We did have it working in a previous version though, which is strange. Ping @samccone on this - we'll make sure to have it resolved soon. Pushing out a release with a number of other fixes this week, hopefully I'll ship a fix for this with it :thumbsup:  \n. This still doesn't work...\n. Ok, I pulled it down and the 'file added' test is indeed failing. I also refactored the tests file to be a little more dry for future work, and changed the args to accept an object instead of individual params, because that shit was driving me crazy -- I'll throw up a PR for that in a couple minutes.\n\nWhat's happening is that the test fails the first time you run it and creates the \"creation\" file. The second time you run it, as soon as the \"creation\" file is there, the test passes. So every other time I run it, the file added test fails, which probably means something is broken...\n. v0.8.18\n. Fixed by 90f0f6fc63127a525d4860b199ae69d27921159d - thanks to @samccone for amazing work on the updated watcher, and i found a little bug in my code that was also messing this up a bit.\n. This should be fixed in the latest release - the shell script now requires sudo to run : )\n. Thanks for confirming this one - that regex specifically was where I thought it would be. You did some great work tracking this down, and if you want to take a shot at sending in a pull request for a fix, you should definitely do that - you deserve some credit : )\n. Could you rebase these two commits together? It's good form for pull requests in general and will be good practice : )\n\nhttp://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\n. I'm deviously plotting out a huge cms piece that will ship separately but connect seamlessly. More info about that later ;)\n. It definitely will be. All it requires from the core is handling for static and dynamic content, and it reads through the folder and spins up a CMS based on that. Got plenty of work to go there, but it will be out in the next month or two for sure.\n. Definitely agreed, good idea. Some major refactors are going to come along with this, starting this week. We might want some sort of roots organization at some point to keep track of the repos too...\n\nMy end goal is to have roots be able to handle any sort of static compile workflow with any tools in the back end, and have it be opinionated based on the settings we implement for the initial generator. This way the code will be super flexible if you want to go there, but the defaults will remain the same as they are now. A lot of under-the-surface changes for great good.\n. Update: this is very close to finished. It's functional, but the code isn't quite as clean as I'd like it, and tests aren't finished for this piece yet. I slimmed down the spec even further - any template with front matter is automatically treated as dynamic content, no specification in app.coffee needed. I'm pretty excited about this update though, really sweet.\n. Pushed to master and deployed to npm. Whoo!\n. background-image isn't a mixin, which is why this doesn't work. if you declare it as a css property (use a colon rather than parens), it will work. and this should be filed in roots-css, not roots core\n. ![sheeeeeeeyit](http://www.lolz.se/fun/clay_sheeeit.gif)\n. commit that shit\n. This should be resolved on master, saw the same error though in testing.\n. Fair. Where would you suggest we put bower installs? I feel like making another components folder at root is pretty awkward. Maybe a vendor folder?\n. I'm good with that. Do you want to make that change and pull request it? I can do it if not, but you've been making some great contributions so far :smile: \n. Closed by #105\n. Good call on the requirejs thing. I'm sure there's a way around this, let me play around with it a bit before merge.\n. Nice new profile picture\n. can you reopen the one in the roots-css repo?\n. Really weird. Upgrade to the latest version, I just shipped a new one this afternoon with a number of fixes for things. But there should have been no breaking changes with any of the updates, and these errors don't appear to be related.\n\nThe first error makes no sense that it would appear on roots watch - the express project template is not accessed in this process. Either you are doing something really strange or the code is seriously whacked out. I could still take a look at it, but you'd have to bundle up your project and drop it here in a zip file so I can pull it down and take a look - it has to be a serious issue with the project or with your system setup.\n\nThe second error tells you exactly what the issue is - your project is too big, and you computer can't handle watching all those files at once. Googling this would show [an answer](http://stackoverflow.com/questions/8965606/node-and-error-emfile-too-many-open-files) pretty quickly. But it's more than likely that something weird is going on with this project as well, so if you want drop that here too and I can debug it further. This should only happen if you are dealing with 10,000+ files, which seems unlikely.\n. No worries - but yeah having `node_modules` in there could definitely mess some things up. No worries, things like this happen, and we are always happy to help. Sometimes you just need [a rubber duck](http://en.wikipedia.org/wiki/Rubber_duck_debugging) anyway. So good to hear that you are enjoying roots! :thumbsup: \n. I'm into this. Can you add this to the \"add additional deploy adapters\" ticket? The whole deploy adapters deal is still not 100% polished yet\n. Closed and added to https://github.com/jenius/roots/issues/79\n. Definitely agreed here. Was thinking about this a while ago but never got around to it\n. Anyone have thoughts on the best way to do this? Should I be pinging the npm repository directly? Any examples of npm scripts that do this already? If there's a convention, would be easier than rolling me own :smile: \n. Awesome, I'll pull that down this week and see if I can finish out a couple pieces\n. I get what you're saying but I still don't exactly agree. I might be mistaken, but it seems to me like not too many people have `npm update` on a cron job, and it would be super easy to install roots and never update it because you just don't know when an update is out. A small notification when creating a new project that there is a new updated version doesn't seem to be super invasive to me, and the only request it makes is to npm. Additionally, it doesn't auto update everything (like `npm update -g` would), it just notifies you that there is a new version and you can choose to update if you want.\n\nIf people did find it invasive though, I probably should have a way to turn the feature off - does that sound like a reasonable way to handle it?\n. Really great and insightful comment. A few points as a response:\n- I do agree that it should be a separate piece, which is why I built it as a separate package outside of roots. Very easy to take out if npm adds this functionality, but npm doesn't have this functionality, and in my humble opinion it is  very useful for staying up to date with new versions of your software.\n- Great find with update_notifier, I was looking for existing solutions like this but didn't come across this one. Definitely going to check it out, possibly use it instead.\n- Is this something you are really interested in making? Theoretically it wouldn't be too difficult. Would it only check global packages? Would it be a tool you could run, or was automatically run inside a node project for its dependencies?\n. @Hoverbear Read through the issue - it's not for updating it, it's for notifying you that there's an update available\n. If you can replicate it consistently, could you zip up the app and post it here so I can take a crack at is as well? I've never seen this...\n. Yep, you right. Great find. I'll take a crack at it - feel free to give it a shot too if you want.\n. Fixed on master by 4d9e534672ead2fb9e206552378935ac78f7793e\n. Could you upload a sample project so I can tinker with this? This actually appears to be a pretty rough issue by the error message...\n. No idea... this seems like a massive edge case, but if you can figure it out you will achieve the edge case bug squasher sword of invulnerability +100. I'll assign it to you.\n. Can't replicate. Post an example?\n. The only reproducible instance I have found of this is when you have the layout in a folder that's ignored, but the layout itself is not ignored. Is this what you have going on by any chance?\n. Have you made sure that the layout is ignored?\n. Yes, you need to ignore it in app.coffee, since layouts are not supposed to be compiled. Just add `layout.jade` to the `ignore_files` array and your problem will be resolved.\n. Yeah try spraying miracle gro on it, that usually does the trick\n\n![](http://static2.wikia.nocookie.net/__cb20121109193118/itsalwayssunny/images/4/43/Charlie's_Mom_Has_Cancer.jpg)\n. Closed by 596e49a38afbf9bf5e7ced0593d7b7dfde73fb12\n. Hey so a couple comments here:\n1. I really like the use of prompt. I should probably be using that in some of the other deploy recipes, honestly.\n2. I don't like asking for a password in here, seems to invasive. I think we should assume that they are able to create a github repo on their own and add it as the origin. We could check for the presence of an origin branch and if not, tell them to add one, linking to github help. This would eliminate a bunch of extra logic too.\n3. Otherwise this looks great. Have you tested it? Is it working?\n. Ok, no worries. Just checking up on this, would love to get it merged in! I'll be on the lookout for updates : )\n. great PR - thanks @jpsull - I'll test this and merge soon!\n. Dude I am seeing this as well, it's absurd. Good catch, and I'll be looking out for this. I see it happening almost totally randomly, but it _definitely_ is happening.\n\nAlso seeing the server sometimes crash like that. So bad. This is a high priority one for me\n. Yeah but what is weirder for me is that these files are being watched at all after having been ignored. I'd love to figure out why it's going down rather than just try/catching it, ya know?\n. You know what, we're not ignoring anything. That could be the reason. During the switch to monocle, the injection of manual ignores must have been dropped. :ghost: \n\nhttps://github.com/jenius/roots/blob/master/lib/watcher.js\n\nI am ignoring the files out of the compile process though here: https://github.com/jenius/roots/blob/master/lib/roots.js#L75\n\nLet me put in a fix for this right now and ship a patch. We're due for a ship soon anyway :shipit: \n. Ok, this should be fixed now. I restructured the way files are watched and ignored, it's a lot cleaner and nicer now. I also added an `ignore_folders` property to the app.coffee file, and added `.git` to that instead for all new templates. Old templates can solve the git copy problem by adding `exports.ignore_folders = ['.git']` to app.coffee :smile: \n. :tada:\n. Hm, interesting. Wanna send a PR for this? If not I'll put it on a branch and give it a try.\n. Ah weird, I haven't seen that before. Thoughts @samccone?\n\nCould you try to isolate the issue and give us specific instructions on how to reproduce it? This would help us patch up the bug quicker :smile: \n. Ok hold the phone, we're in disaster control at the moment. Fix will be up shortly.\n. Ok, we are back up and running, sorry for the delays. Thanks for bringing this up @dingyi! Update roots and everything should be running fine.\n. Just kidding, we still are having a few issues with the watcher. But it's not bombing!\n. Ok, just shipped a fresh version and we're clear :smile: \n. Doesn't run correctly - check the travis build\n. Ok, so I think the way to handle this in general is to make the directory name configurable, which I know is a lot of what you were working on in here. I don't think I'm ready to set it to `.public` yet just because of a few conventions around serving from the public directory, but I think making it a configurable value is definitely the best first step. Going to get this merged in soon for sure.\n. @slang800 refer to my comment above. im not 100% sold on it, but im not totally against it either\n. :tada: glad this was worked out! thanks so much @slang800 for helping out here\n. I'm into that. I was prevented from being able to do it before now because of the way layouts were handled, but now that the compiler interface has been simplified at version >= 1.3 we should be able to do something like this.\n\nThe only thing I'd want to keep in mind is the plugin interface, which is crucial for me at the moment. If we move out compilers, we can't lose the plugin interface : )\n. Ok, so I've spent some time thinking about this and I'm about ready to start this process. I see a couple pieces that I feel are low-hanging fruit:\n1. **Deployers** - These should be broken out to their own node deployment library and required into roots. Like almost everything else that's flexible in roots, this would be a simple adapter pattern implementation.\n2. **Template precompilation** -- although right now only jade templates are precompiled, I'd like to make roots available for use in a variety of languages, which means precompiling templates in those languages as well. This would fit the same type of adapter pattern as everything else, and would essentially be a [transformers](https://github.com/ForbesLindesay/transformers) specifically for precompiling templates.\n3. **Client-side package managers** - like the other two, this is another situation in which there are a variety of options different people prefer, and there needs to be a unified interface that could be managed with the adapter pattern. Right now it supports bower and cdnjs, but there are a variety of other client-side package manager that people may want to use like [component for example](https://github.com/jenius/roots/issues/171) that we'd like to be able to easily support. The only requirement here would be the ability to customize the download directory so they all push installed scripts to the same place.\n\nEssentially what we'd be doing here was providing a sort of ORM (not really but you know what I mean) for these three needs - deployment, template precompilation, and client-side package managers. Each of these libraries would provide a consistent interface to a variety of different libraries, and make it easy to pull request in or add additional libraries as they emerge.\n\nI'd like to get started with this process soon - if anyone is interested in tackling one of these let me know and the project lead is all yours. If nobody steps up, I'll slowly crank through them all myself. I have tentative names planned out for each one : )\n. Closing this issue as the process has already begun and I think feedback has been offered.\n. @samccone could you take this one down whenever you have a moment?\n. Can we close this one?\n. Any progress on this one? I think we have well under 10 roots users on windows, but it would be nice if it did work : )\n. Thanks for checking this out @declandewet -- @Daiz- are you still seeing this? @samccone have you checked this out?\n. This is great - thanks for the insights @L8D - this kind of stuff really helps when diagnosing these problems :moneybag: \n. I'd love to know if this is happening still in v2.0 and up - I feel like it shouldn't be. Any updates @Daiz- or @declandewet ?\n. Ok, I'm going to close this specific issue out then. If anything else comes up definitely open a new issue though!\n. Definitely would not want to scope them directly to window, probably under some namespace to minimize the possibility of overwriting variables. Perhaps something like `locals` or `config` would work for the namespace.\n\nThis can be done manually for now, by doing something like this in any jade file:\n\n``` jade\nscript!= \"var example = \" + example\n```\n\nThis will bind a variable called \"example\" in your app.coffee file to window.example in any javascript. I feel like doing this manually when you need to might be an easier way to handle the situation - the only other solution I can think of is to have roots automatically compile a statement like this into your html, or to automatically write extra variables to all your js files, which seems pretty dirty to me all around.\n\nAny thoughts anyone else - @samccone @slang800 ?\n. I feel like it would be easier to set it as `window.api_url` actually in the main.coffee file, then you could access it from anywhere, rather that setting it as a view helper and pulling it from there...\n. ping @samccone @slang800 \n. What do you mean out of scope?\n. Great to hear this @slang800, I'll keep bower around then. I've already built out most of the cdnjs wrapper I want here this morning:\n\nhttps://github.com/jenius/cli-js\n\nWill probably have some sort of integration, not sure how to balance this one and bower though...\n. The only issue I have with this is the vast amount of manual effort it would take to write this and keep it updated. Are you saying have some sort of tool that generates this stuff?\n. Yes, it's a different package manager option. And you can use `roots pkg copy jquery` to grab the link and include it yourself. I essentially was just making the package manager you choose configurable. I personally prefer cdnjs to bower, and I assume other people might like other ones (maybe ender, volo, jam, etc) - so turning package managers into adapters I think is something that would be useful rather than having only one possible option.\n. Great work, never would have found this because I stay away from spaces in filenames like the plague, hah. Thanks for taking the time to tinker with our tests and for sending in a fantastic PR, and your username and avatar are also of very high quality.\n. Well that's strange. Travis told me it was all set, and as soon as I merged this, it broke all the tests....\n. Never mind, it was something else. Fixed.\n. Hey hey, good to see you again here! A couple things:\n1. I don't want to hit coffee by default, maybe this should be a separate option?\n2. Let's go over the git-fu required to get these commits cleaned up. Want me to write out the steps here or go over it through chat somewhere else?\n. 1. Because I don't want to mess with the express defaults unless people specifically want that.\n2. Yeah, you're going to be after an interactive rebase. [This article](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) might help : )\n. Hey @Hoverbear - are you planning on making adjustments to this PR? Just a quick status check\n. I am definitely interested in having it as an option, just perhaps not the default (don't want to force cs on people if they don't want it). I'll close it for now, but if you want to take another crack at it it would be awesome!\n. This is in the works on the `multipass-compile` branch - currently looking solid and tests are passing.\n. This has been shipped in the latest release\n. I don't think it's quite there yet. I'm not totally happy with tmpl-precompile and would like to have our own wrapper, but for now jade's abilities to do this are not enough.\n\nhttps://github.com/visionmedia/jade#browser-support\n\nIt requires a runtime file to be included, and I need to loop through the folder creating a global variable and namespaces for each file. Currently, this is what tmpl-precompile does, so it still is pretty useful as far as not reinventing the wheel.\n. That's exactly what I meant, it still needs a wrapper to do this. This is exactly what tmpl-precompile does - it adds the necessary functions from the runtime file, then reads through a folder, pulls out the templates, compiles them with jade, and organizes them into namespaces under a `window`-bound main object.\n\nI feel like it's possible that jade could in the future have an option to automatically add the runtime file, as you mentioned this is a fairly small piece of the process. It's not really a very long or complicated process, but it still does need to happen.\n\nI think that we could write a little wrapper to do this that would be more concise than tmpl-precompile, but I'm working on a lot of things at the moment, so since tmpl-precompile works fine and doesn't significantly slow anything down, I figure sticking with that for now can't hurt.\n\nWould you be interested in writing a tool to replace it?\n. Sure - you can add it to `lib/precompile.js` :smile: \n. Oh yeah I wasn't planning on removing the project structure, I just want to remove the _requirement to have one_. Everything will appear to be the same after this change, but you will be able to also run roots on a single jade file sitting in a directory and have it compile without throwing all sorts of errors about how it needs layouts and app.coffee files etc. Hope that makes a little more sense\n. This has been shipped in the latest release\n. This was resolved and a fix was shipped a few days ago. Just cleaning up.\n. A few small bugs with the handling for dynamic content, and a large bug in error handling that was suppressing errors\n. yes, there are some strange issues after the recent upgrade - i'm working hard to iron them out. what's strange is that all my tests are passing and it seems to work on smaller projects but not large ones. I'll have a patch shipped soon :heart: \n. It was not, but thats interesting - what issues were you seeing?\n. This should be resolved in the latest version. Thanks for the heads up!\n. Awesome, this is so fantastic. Huge contribution here. I'll look over this as soon as github is back up and I have a second. Thanks so much for this great work @slang800 \n. Looks like it might be easier to review with a little rebasing - are you all set with interactive rebase? It's a weird thing that took me a while to pick up is the only reason I ask, we can help if ya need :smile: \n. excellent, tests passing locally? i know travis got effed by github being down for a bit\n. No worries, I'm going to pull this down locally, run it through a couple more tests, make sure it's passing on my machine as well, then merge\n. Yep, looks great. Thanks Declan!\n. The test suite fail is on me not this PR. Not exactly sure what went wrong but something randomly crapped out. Looking into it now, will have a fix up shortly\n. Got it - it was a jade upgrade that broke it. Downgrading the jade version and filing a bug in a few moments\n. haha this is specifically for marking the place where the page content is injected into the layout, trying to make it most intuitive :rabbit: \n. Because that would bind it too hard to jade. You _can_ use jade's built-in layout system (the --min template has it as a default), but I don't want to make it less extensible\n. haha how about `!= content`\n. isn't that a good thing? this is code for layouts that we're talking about...\n. :money_with_wings: \n. no reason for the colons, this isn't ruby so there are no symbols. I do like the idea of being able to yield different blocks too, but that requires an expansion of the layout system\n. I agree, but it's only necessary if you aren't using jade so it's not that high on my priorities list at the moment because I've gotta assume a very large percentage of people using roots are also using jade\n. Yeah, you are definitely correct. This only happens when you add new files that you have to restart. It's on my radar for sure but I'm in the middle of a few refactors. Will get to it as soon as I can!\n. Hey @tokki - you are right, if you're recompiling a large number of big files it will take longer. When you are using `roots watch`, as long as the file is not ignored, it should only compile that single changed file which will speed it up. But I am acutely aware that if you have a gigantic project, roots does not perform at optimum possible levels.\n\nThe reason I can't have it just compile the single file that you changed every time is because many times files have dependencies. For example, you might have a partial that's included on your index page - if you change the partial, the index page would have to be recompiled. Being able to detect what depends on what like this requires a sort of **asset graph**, which is something I will be working on and integrating into roots in the future. This is a large and difficult project though, so it will take a bit.\n\nFor now, I would assume that if you have an absolutely gigantic project that has to compile often, roots might not be the best option _yet_.\n\nThe other possibility is that you have a lot of files that never change - in this case it's easy to ignore them and drop them back in later. Just use the ignores in app.coffee to make this happen.\n\nRef #149 \n. Hey @bendangelo, good catch, seeing this as well. I'll have this patched in a minute\n. Resolved by b999abef0f35d6b7042852838a0c2bdd83bc7ccd - sorry about that. Update roots for a fix or just change the \"layout\" variable in the front matter to actually reflect the path to the `_single` layout, as such:\n\nold:\n\n``` jade\n---\ntitle: hello world\ndate: 1/1/1970\nlayout: _single.jade\n---\n```\n\nnew:\n\n``` jade\n---\ntitle: hello world\ndate: 1/1/1970\nlayout: ../layouts/_single.jade\n---\n```\n. So I'm entirely winging it here, but I started messing around with some of this stuff this weekend and came to the conclusion that actually parsing each language to generate an AST wouldn't actually be that helpful. For example, in stylus the biggest pull is the `@import` statements, in jade I need to get layouts and partials. Almost all of the things I need most are not built directly into the language and are actually features of the preprocessor, which is why [asset-graph](https://github.com/One-com/assetgraph), although brilliant, is of little use to us.\n\nThe way I started doing it was with regexes. I'm fully planning on putting up the code I have early early so I can get you guys' input and help with it, but I barely have anything at all now. It's essentially a structure where each language has a folder, and in it, files. The files are named by the asset they detect, and export a regex source which can be used to scan the source code for that particular asset, and the match will be the asset path.\n\nI know it's quite basic, and it makes me a tad bit nervous not to be running a full parse, but I just don't feel like it's necessary to tokenize the entire language just to pull out a very small number of things we're relying on.\n\nI also definitely want to make it super extensible, so that adding languages is just a matter of creating a new folder with matchers and writing tests.\n. Woah missed a lot here. So I guess my last comment didn't really ring true to anyone, but the following discussion is _exactly_ why I though it would be easiest to build it that way.\n\nI don't want to have to subclass node core modules or fork a compiler and figure out its inner workings every time we need to add support for language to the asset graph. I want a single interface we can use to parse any language, and what that boils down to is regexes (unless we want to build a custom parser for each, which seems like ridiculous overkill).\n\nIt's important _not_ to think about solving this problem for one particular language, but rather for any language we might encounter or that might be used with roots.\n. As for the structure of the AST output, I'm not 100% on this, but good to see you guys' suggestions. If I had to take a stab at it, this is what I'd go for:\n\n``` js\n\n{\n  root: \"/Users/jeff/Desktop/whatever\",\n  files: {\n    'views/index.jade': {\n      deps: ['views/_partial.jade' ]\n    }\n  }\n}\n\n```\n\nPretty similar to what you guys have proposed, but added a couple more properties just to make what's being accessed clear and to make it a little more extensible if we need. Also added a root path and reference everything relative by default, because it would be easy to build the full path if needed this way. Thoughts?\n. Both of the things you commented on I added for clarity. I think it's a great idea to know, for any given AST which references all its files with relative paths, what root it was generated from. I do understand that in roots' particular situation, you almost always just read `process.cwd()` and get the same result, but I feel like it's good practice to make sure everything in the data structure is clear.\n\nThe reason I had deps in there was about the same. It makes it extensible if we ever do need to add anything else, without breaking everything, and makes both the data structure and the calls to it clear on what you are getting.\n. In my mind, including the root once is far better than repeating it for every single file path. Keeping things DRY : )\n\nFor the `deps` piece, I could be convinced otherwise, but I feel like the extra clarity and potential extensibility of using an object there holds merit. I don't have an answer at the moment for what else we might add or I would have said it earlier, but this project is still in very early stages, so I can't say I'd be shocked if we didn't 100% on the requirements.\n. I'm still on the regex train over here. I'll post my take on it soon once I get a chance to clean up my initial implementation. What you started with there is sweet though for sure\n. @slang800 agreed with point 2 that you made -- that's exactly why I think regexes are the way to go. Regex works with every compiler - we just parse the file contents. Also, I feel like the detection for jade and stylus will be _super_ easy. `@import` and `\\ninclude` are pretty simple to pull out with a simple regex.\n\nFor point 1, if we are going to parse the _compiled_ html and css, we might be able to use https://github.com/One-com/assetgraph for this...\n. For your point @slang800 it would detect the language of the file, and parse it for that language's specific grammar, defined by a regex for each construct. So if you had the text `@import` in your jade, it would do nothing.\n. Then we would need a real good regex. That's a super edge case though...\n. Hey @slang800 - I know it's been a while on this, but do you still think we could do through by patching fs? If it was possible, it would be a nice way to do it. Have you worked on this prototype anymore?\n. Ah you're right. That is not a feasible way to do it then, is it. I really want to return to working on the asset graph, but am in the middle of some large refactors to the core at the moment. But will be more active on this soon!\n. Hm, if sean's solution does give us dependents per file, it is a valid point that _not_ having to write an additional static analysis tool for every language we support would be a large benefit.\n. Woah, this is great. And yeah that sounds perfect - thanks @slang800 for the hard work and excited to see this starting to come together!\n. Closing in favor of #586 for now\n. Hahah I love the last paragraph. This is a really interesting idea though, I'll have to think about it. Breaking windows is somewhat of a concern, but it's true that hardly anyone using roots is on windows.\n. http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback - kind of funny that node's symlink util only works on windows O_o\n. does anyone know of a linux/mac node symlink library, or do we have to resort to `exec`?\n. So I assume you meant that this would only happen on `watch` since assets would definitely have to be copied on `compile` -- no?\n. Yeah I want to jump on this soon. I'm not really sure how to mitigate the bower thing. I don't really think it's super appropriate to namespace it under roots at all, but I do like being able to drop the packages into `assets/components` rather than just `components` at root.\n\nI also would like to be able to expand this so that people can use other package managers if they want. I would _love_ to get a possible integration with cdnjs like I mentioned in #132, and I know there are a couple other package managers that people might like to use - if I could make that interface extensible, I feel like it would be a much nicer time for everyone.\n\nI like the idea of roots pkg - this is general enough that it can apply to any package manager, and it's short. If everyone is good with that, happy to make that change!\n. That being said, I'm not seeing the issue with it not exiting properly, just tested it. Could you add some reproduction instructions?\n. Glad you worked this out! You can wrap the values of front matter in quotes to make weird things like this less likely to pop up - I usually end up doing this. Even though it may just add extra characters sometimes, it will often save you from whack issues like this one :sheep: \n. Haha my first response was good, if anyone is using bootstrap with roots, I will cry. But that aside, it's probably valid that I should add the ability to not use axis if you really dont want it for some reason\n. I am happy to sincerely answer your question: it is because I don't like bootstrap. For more details, see this answer I made to someone asking a similar question: https://github.com/jenius/axis/issues/17\n\nAxis is open source, and you are welcome to fork it and make anything you want. But if you do, and you turn it into something terrible, all I would ask is that you do not purposely associate me with it.\n\nIf you care about good design and craftsmanship when building websites, I think your energies would be much better spend expanding on axis and building stylus-based, modular, and opinion-free css patterns than porting bootstrap. I'm happy to discuss any suggestions anyone may have for it, but if we are going to continue this, let's please do it in the correct repository.\n. Clean html was a huge motivation behind axis, like you mentioned here @declandewet. The other big piece for me is flexibility. While it's fairly difficult to strip down bootstrap and change options to make it your own, axis was built with the sole purpose of being transparent and flexible. It came from my work at an agency, where every site we build is vastly different. I wanted to have some way to encapsulate css patterns that kept the source clean and was customizable enough to fit anywhere between brands like CMT to Target.\n\nPoint well taken though @slang800 - I do understand that it's possible to use it well, but I see it used poorly so often that it doesn't strike me as something I would encourage people to get after.\n\nFor @L8D, javascript plugins _should_ have nothing to do with the css underneath, and bootstrap is no exception. You should be able to bring in the JS plugins without having to also import all of bootstrap's css : )\n. I'm going to close this specific issue just because the actual goal is axis-specific rather than roots-specific. I'll open up an issue in https://github.com/jenius/axis and make sure that this change is made for the v2 release of roots. I think the way to get it done is to have options for both in the API - if you want roots to be automatically imported, you'd call something like `axis.implicit()` and if you want to be able to import it yourself where you want, `axis.explicit()`, rather than the single default implicit function call that it has now.\n\nThere was some interesting unrelated discussion in here though, if anyone wants to open a new issue to talk about any of it, you are more than welcome to do this : )\n. A version warning appears whenever you run `roots new` - that should be enough I think. When you manually upgrade you should be checking the version number and making sure your stuff is up to date. That being said, I should probably have a changelog.\n. Got it, and definitely agreed. Perhaps adding a comment block to the top of the `app.coffee` file with the roots version would do the trick here (and of course reading/detecting it on roots command)? I'll definitely start maintaining a changelog/upgrade guide for new versions from now on either way.\n. Yeah reloading just css is a weird thing - not as easy as it seems. Livereload attempts to do this, but in my experience with livereload, it was fairly faulty and I found myself having to frequently manually reload the page which for me was way more of a pain than just having it auto-reload for me.\n\nReloading just css means that current styles on the page need to be stripped and new styles need to be injected. Like sam mentioned, this means roots would need a thorough knowledge of where any and all style definitions on a page are so it can strip them and load in the new ones.\n\nI would definitely like to make this happen eventually, but I'd say this issue is low priority for me, just because of the large amount of effort required to implement and the fairly small payoff\n. Already in there. You can add `exports.no_livereload = true` to your `app.coffee` file and it will turn the live reload functionality off.\n. I'm going to close this one - we'll use #170 to track the development of this one :smile: \n. Love this, thanks for opening it up and starting the conversation here @slang800 - this was definitely on my to-do list and helps a ton that you've taken the initiative to jump on it. I'll review this stuff sometime today :moneybag: \n. I'd be ok with it if we could figure out a way to incorporate `r.js` - i feel like concatenating your files still holds a decent amount of value\n. This is also another spot where we would want to differentiate between dev and production. In development, I like having all my scripts in their own places - it's only when I run `roots compile` that I'd want to squash them all together.\n\nThis particular optimization might also be dependent on the asset-graph though - not super familiar with how r.js works, but I feel like we might need to make some changes to how require is referenced in the html?\n. I don't know much about using source maps to point back to original files. Is this something that will work in major browsers? The good thing about not having them concatenated in my mind is debugging purposes, but if debugging is the same this way I have no issues.\n\nRead through the article and conversation and I can't say I'm 100% with the program (did only spend a couple minutes), but would love to see more. If we were to drop AMD for CJS, we would still need a module loader of some sort - which one would you recommend?\n. Looked quickly through builder and it looks very component-specific. Are you proposing that we straight up build component into roots, or just that we have the default module loading happen differently?\n. Just dropping this in, as I think it might be relevant to discussion here: http://jspm.io/\n. Absolutely correct, and I should have logged this before in roots, I was aware of it. But since it's actually an issue with readdirp, [I logged the issue there](https://github.com/thlorenz/readdirp/issues/4) - have been meaning to try to jump in and add a pull request to fix it, but haven't had a ton of time recently.\n. Resolved in roots v3\n. Why all the way down to patch?\n. If you put `*.swp` in the `ignore_files` array it should be ignored. Not sure how you were adding it before. What happens right now is that if a file that's ignored is changed, it recompiles the entire project. Like you mentioned, this is where the dependency graph comes in, which is definitely in the works, see #149.\n\nThere is however a solution to this you can use while we work on the asset graph. There's a secret list that you can add to called `watcher_ignore_files` - if you add a file to this list it will not be watched or compiled ever :)\n. The way I'm implementing this, conflicts are no more likely than before. And yeah, let me see if I can make sure that the exports syntax stays valid too : )\n. Nope, they come in the exact same way and are locally namespaced to that file. I just pushed another commit through to the v2 branch that makes using the exports syntax also work if you prefer that (so you don't need to switch over), but it makes no sense to me to type \"exports\" before everything for no apparent reason when I can locally namespace everything and pull it that way.\n\nThe way I did it was by changing equals signs to colons, effectively making the entire app.coffee file one giant object. Then I compile it with coffee using the `--bare` flag and save it directly to a variable, which keeps everything namespaced locally but also gets rid of the necessity to use `exports` in a config file.\n. I think that's a pretty severe misuse of app.coffee, which is supposed to be for roots app settings. You could easily have another file called server.coffee to cover that functionality. I know that it's not technically illegal, but I also don't think that's in any way clean code (should be separated into different files) , and I wouldn't want to encourage it.\n\nI did add a fallback though, so it's not 100% necessary to convert if you don't want to.\n. I meant for app.coffee to be a config file. The reason I made it coffeescript was mostly so that you can write functions as locals - this is a pretty important option in my mind. If I made it something like json or yaml, that wouldn't really be an option.\n. The problem is certainly not with how roots compiles templates, its with the fact that you are asking roots to compile a file of the wrong format into a template, and as it should be, roots is throwing you an error because that file can't be properly precompiled.\n\nIf there is an issue here with anything, it's with the way roots ignores files particularly in the templates folder. Let me check that out and make sure everything is working ok.\n. Perhaps this commit will help: 0fd9904efbc998f91d3c88b23fffd2f0db0ed215\n. Yeah, you can just use a regular js file and it will work fine. Happy to add the extra template, I'll probably have it live as a separate repo that can be included as an [custom template](bfafbaa4322258fdc2b90f80c2f807c2e2c4aa06) once v2 is released :smile: \n\nClosing this for now - @ganarajpr could you open an issue or pull request to make this more clear in the docs in the [roots.cx repo](https://github.com/jenius/rootx.cx)?\n. hahah yeah this is definitely a ridiculous fake PR\n. So I actually purposely don't have a default for layouts, because I don't want to require you to use layouts if you don't want. If you remove the layouts config from `app.coffee` it won't use layouts, assuming that since you deleted it, you don't want to use them.\n. Ah gotchya, sorry I didn't totally pick that up before. Ok let me take another look at that patch, will most likely be merged : )\n. Haha I only ask because I don't want to create an issue in order to get in contact with you for anything haha - but sounds good. I opened the changes as a pull request so it will be easier to review, going to close this issue : )\n. Ok @samccone @slang800 what do you guys think - should have resolved the issues you guys brought up earlier\n. I feel like this is probably ready to merge. Tests are passing, everything is working, and we can still definitely discuss some of the features, but like you guys are saying this is a huge pull request.\n\nFor now, I'm going to cherry pick out some of the smaller commits and merge them into master. But unless there are any major issues you guys see, it seems like this is ready to be merged in :dart: \n. I'm going to merge this guys - further discussion on features still welcome though!\n. I'm definitely good with merging this, but I did a bunch more work on the v2 branch throughout today - could you rebase and make sure it's up to date?\n. I considered this when I was just starting out, but when I had used livereload in the past I had a lot of issues with the partial page reloads and it ended up frequently messing up my css so I had to go manually reload it which really defeats the point. I'm not sure if it's improved a lot since then (actually seems like it hasn't been in very active development at all), but I'd be worried if just for that reason.\n. So I'm wondering if we could take an even easier approach. If the watcher detects that a stylus file changed, as soon as the compile is done, it just reloads all stylesheets on the page...\n. We can't do that unless the asset graph is in place, which is on our list but is a gigantic project...\n. Closing due to inactivity, but we are still thinking about this\n. This would fit nicely as a package manager, which is now flexible (https://github.com/jenius/roots/commit/87934005774c463502f638e4848dde3eb529b8e6) - you can just make a new file in `lib/package_managers` and work it out from there\n. I'm going to close this for now as I don't know if anyone else uses component and @slang800 is not actively working on this. As soon as this becomes active again by all means re-open! At the moment I'm thinking there are two ways of implementing this:\n1. A new package manager plugin that can be used\n2. A custom template set up for component projects\n\nI'm not super invested in this since I don't use component, so it's not going to be a priority at least for me over the bunches of other features we have planned, but I would be more than happy to help if anyone else wants to try to take this on.\n. This would probably fit well as an after plugin for v3 - see browserify example: https://github.com/jenius/roots-browserify\n. Only question I have here is can nopt handle args without flags? I don't want to require using flags for all the default arguments. I don't see it immediately in the readme anywhere. If it does, happy to make this conversion : )\n. Oh yeah definitely agreed on the debug flag\n. Yeah, but when would that possibly happen? If someone is installing fresh, it will pull the latest version. Is there any situation where someone would get an older version after we push out this upgrade?\n. Ah, good to know!\n. If you could force push this into v1.5 and close this one, would be awesome.\n. I just cherry picked the commit into the v2 branch - if you want I can move it into the v1.5 one as well. Closing this for now though.\n. You can also just use css files, they get copied right through. Is that totally not what you're after?\n\n@slang800 I've also been thinking about exposing the core compilers' interfaces somehow through app.coffee...\n. That sounds fine, if you can work it in there it would be great\n. This is possible with the expanded compiler options API in roots v3 - whoo!\n. Hi, sorry for not responding quicker, I have had limited internet. Thanks for posting this solution and sorry you had to figure this out!\n. `echo \"alias server='python -m SimpleHTTPServer'\" >> ~/.profile`\n\nAlso, is this not exactly what roots watch does?\n. So I don't exactly think this fits with roots' functionality or should be included in the docs etc. but since roots already has a server and like you mentioned it would only be like 10 lines of code, if you want to add this in just to have it on hand I'm cool with that.\n. What would be the benefit of an independent npm module? It would just be a very thin wrapper over an existing git npm module, with a little bit of missing functionality hacked in by going to the command line.\n. Ok I see what you're getting at. Pretty similar concept to #125 - maybe we should start doing this for a few different components. Have been contemplating a roots organization to hold the components and related projects - thoughts on this?\n. Ok, someone is squatting on the roots github account right now, but it's been inactive since 2008, so we should be able to pick it up, according to [github's name squatting policy](https://help.github.com/articles/name-squatting-policy) - I already sent in a request, hoping for the best!\n. Oh thats awesome - good to know. I'll have to check that out for sprout, which is the main user of git functionality now\n. Looked at faceleg/git-basic -- looks significantly worse than what has been implemented here. There are only a couple functions, it doesn't include everything we need, and it's just a wrapper for `child-process.exec`.\n\nIn addition, having the sync options is pretty valuable to me, since almost every git command in roots would gain no advantage other than cluttering the code if it were to run as async, and shell does an incredible job of providing that option if we're going to have to go to the command line to implement this anyway.\n\nI agree that this shouldn't be part of roots, hence my comment in the pull request that this will be separated from roots in the near future.\n\nFinally, judging by the discussion on the issue you posted @slang800 it wouldn't be trivial to add the clone feature through native bindings, a assumption reinforced by the fact that there isn't a node git wrapper out there that includes clone functionality. If we could accomplish this, I agree that this would be the way to go down the line, but in the interest of moving this project forward, I think going to the command line is a fair replacement for now.\n\nEDIT: Quick check of the source for sentinentwaffle/gift shows that it actually is just wrapping a child process executing these things on the command line as well, no native bindings present. So a pull request might be in range, although it would not result in any speed or efficiency increases.\n. If either of you can figure out how to use node-gitteh or any of the other node-git native binding libraries out there (they all have the same API) to do what we need to do for roots, which is mainly cloning and syncing with remote branches, I would welcome a pull request.\n\nBut after looking through the (very confusing) docs for a couple of these native libraries, all I learned was that 1) the docs were really hard to decipher and usually documented the C functions rather than javascript and 2) none of them have the functionality we need built in, as far as I can tell.\n\nIf anyone has a suggestion that they have researched and found to have the functionality we need it would be awesome, but for now just tossing git various wrapper libraries out there and \"+1\"ing them without researching them at all isn't getting us anywhere.\n\nI'm not going to put the additional work into making this it's own library though until we have decided that we actually need a separate library and can't rely on something that's already out there.\n. So as I go through this I'm starting to realize more and more that there isn't actually a library out there that comprehensively wraps all of git's functionality. I mean, git has a staggering number of commands and options, and it seems like people have just taken a shot at random subsets of command that they need at the time, which of course is how this is starting out as well.\n\nI think it would be sort of a cool project, albeit slightly tedious, to craft up a git wrapper library that covers most of the features you could possibly need out of git and offers both a sync and async interface. This could be done in a fairly straightforward manner just by using shelljs and child-process -- the sync and async methods would almost entirely mirror each other, but both variations can be immensely useful in various situations. For example, if you look through the github pages deployer, it would quickly become a ridiculous nest of callbacks or promises if all of the tasks were async, and there's no reason for them to be - they all depend on each other. But at other times, it can be valuable to do other work while a longer process like a clone runs.\n\nI'm definitely going to move this out to it's own repo shortly -- it needs a lot of tests too. I think it could definitely be a very useful project, especially if it's very active in accepting contributions from people who need slightly more obscure functionality. Theoretically over time it would become very comprehensive that way.\n\nI don't however think this should be a blocker to the next release. It will be a really nice code readability and modularity helper, but it won't actually speed anything up or change any of the functionality.\n. Looks like we're getting pretty close with this, but the commit log needs some cleanup. Just browsed through your transformers pull request - crazy conversation. It's awesome that you're still working through all that though :fried_shrimp: \n. Arrite sounds good. Let's merge this branch separately from the asset graph though. I wish they would get back to me about https://github.com/roots because it would be really nice to have that one so we could start putting our repos there...\n. Ehh... I would still wait. We don't really know how the asset graph is going to work, exactly. We can add that later once the asset graph is further along.\n. Yeah I don't use snockets either just because I use require, but theoretically it's a great feature and I should use it. I guess this goes back to our conversation on concatenating...\n. I don't think we can remove snockets yet because that would be a breaking change, and I'm not comfortable making another one so soon after a major version release. In addition, I think it is important that we offer a way to concatenate javascript files as part of the pipeline like we have discussed at various points -- we offer this for html and css, and snockets provides this functionality for js.\n. Ok let me pull this down today and give it a run-through real quick\n. Awesome, looks much better. The only thing I'm concerned with now is the breaking change for plugins. I think we need a fallback so that all plugins don't break as soon as this is merged...\n. I've used them a number of times, and their use will continue to increase at least for me as I build out ways to use roots in a variety of different environments. But whether or not we think people are using them is not really something we can use to justify what's technically a breaking change (and you know that)\n. Sure, we can just make options an optional param. If options is a function, set it as callback, if it's an object, use it as options.\n. Ok I think I see what you're saying. I mean the immediate solution I see is to swap the order of the callback and options params. The negative of this is that it breaks conventions which is not great, but the plus side is we avoid a large breaking change. We could always slate a switch back for the next major release? I feel like there isn't a great solution to this, so we have to work with what we can get...\n. :thumbsdown: @samccone \n. That would be a major version bump, just for this small change, and weeks after we released another major version. That's not a good idea. :thumbsdown: again.\n. Excellent. So everything is good in this branch other than the breaking change to plugins?\n. Ok, I'll pull the branch down this weekend and give it a solid run-through.\n. So there were a number of conflicts that I just worked out and merged with master. Two newer tests are failing, but these were fixed by a change to master that wasn't yet reflected here. I'm going to try to port that fix in so tests are passing, then do a little more thorough testing before this gets merged. Overall looks solid though!\n. As I go through this I'm finding more and more bugs. I guess it's a good opportunity to add extra test coverage, but also means I want to be extra careful merging it. I'll probably need a couple more days to ensure that everything is coming out right. For reference, here's what I'm chasing at the moment:\n1. compile project callback being called before assets are copied (and therefore before the compile is done)\n2. html is being compresses even when `--no-compress` option is used with the compile command\n3. views and assets directories manually set rather than adhering to the config values at various points\n4. dynamic content not resolving correctly in all instances\n5. a lot of the added documentation is without descriptions\n\n... this is only on initial pass. I think in general this needs a bit more love. It's a major rewrite of many of the core pieces of roots, so it affects everything.\n\nAlso, the fact that this is a single pull request is a little crazy. This is way more than just changing roots to support transformers, I think it would be appropriate to split into what the changes actually represent, although I'm not sure if that's possible anymore with the way the commits are organized.\n. Ok all tests are passing. Will still be working on this a good bit though...\n. Ok, so I'd like to get this branch merged sooner rather than later so that we can move ahead with new features. There are two issues in particular though that are preventing me from doing so -- the two breaking changes that were made in this branch.\n\nThe first is the axis upgrade -- although it is long overdue, it does mean that the grid systems on all roots project will immediately break on release. This is a huge change, and if we introduce this, I would like for it to be with plenty of preparatory materials to guide users through the transition. Right now, jeet on it's own is not well-maintained, and it needs a major redesign of the documentation, [as has been previously noted](https://github.com/jenius/axis/pull/49). The axis core team has volunteered to help make this change, but it has not happened yet. I'm not comfortable shipping this update without also having excellent docs for the new grid system and a clear transition guide ready in the changelog when it happens. Because of this, I'm going to cherry pick the commits that do this into their own branch and pull request to be merged later.\n\nThe second is the change to the plugin interface. While I'm less worried about this because I think I might be the only one using plugins, it still is a breaking change unfortunately, and in all honesty I should be bumping to the next major version. However, in the interest of getting this shipped soon, I'd like to just bump the minor version, include specific instructions on how to make the changes required to plugins in the changelog, and hope for the best.\n\nOther than that, this branch is quite stable at the moment. All tests are passing, and a number of new tests have been added. It is doing well at compiling anything I throw at it, and @slang800's new livereload implementation is working nicely. I'm planning on merging this to master soon, building [nested dynamic folders](https://github.com/jenius/roots/issues/230) on top of it, and dropping a rather significant minor version upgrade. From here, I'd love to pursue some of our more advanced features (like assetgraph) more aggressively, and if we can get them completed soon push them along with v3.\n. Ok @samccone all the merges you pointed out have been made and the branch has been rebased off master : ) If anyone else wants to take a final look at this before merge now's the time!\n. Just pushed a patch release to master and rebased this branch off master to include the changes. This is getting merged soon, promise.\n\nAlso, i finally figured out how to use the releases page correctly, check this out! https://github.com/jenius/roots/releases\n. Ok, so I finally figured out how to ship prereleases through npm, and shipped out this branch for testing. You can pull it down using `npm install roots@2.1.0 -g`.\n\nI've been using this to make changes to http://carrot.is, which is the largest site running on roots that I know of, and which takes advantage of more or less every feature of roots that's available, and I've noticed a number of bugs I didn't catch before:\n- The compile speed seems to be significantly slower. Like at least 2 times as slow. I'm not sure why this is, but clearly I need to be benchmarking these things.\n- There are a number of errors with dynamic content specifically. The way that the project reloads when dynamic content is present is questionable: it duplicates content, doesn't update some versions, and a variety of other shenanigans.\n\nDefinitely want to make sure these are patched up before merge.\n. Yeah so let me think about what tests we still want...\n1. Dynamic content is duplicating on reload, which probably means some of the locals context isn't being cleared out. This has to be fixed before merge. I think I have a good handle on how to start tackling this.\n2. I want to know if this is slower compiling than master right now, and if so, why. I'm not great at benchmarking, but we should have something in place. There are a lot of coffeescript requires going on, that miiight have something to do with it. Might.\n3. I would love to have any tests at all in place for the watcher. I've really struggled to figure out how to test file watching. I know you have something of a handle on this, so this would be a good first place for you to take a stab at it Sam if you want.\n\nAlso the test suite is growing, which is great. We might want to break this down a little and make sure conventions between different describe blocks are set and that our utility functions are nicely separated. I'd be ok with this being broken into a couple files as long as it's still easy to run them all.\n. ``` coffee\nit 'should reload the page when a change is made to a file'\nit 'should display an error on reload when there is one'\n```\n\netc.\n. Ok these most recent commits should make the test suite a lot more reliable and easier to work with. I also added a few more compilers because it's so easy. We now support all the popular css preprocessors along with a huge range of html template engines -- more out of the box than any other static compiler I'm aware of. Whoo! :tada: \n\nStill on the to-do list before merge is benchmarking compile times and fixing up the issue with double-loaded dynamic content. Taking care of these soon : )\n\nI'd also love to get the analytics in there before we ship this update, but that is a bit ambitious since it's a pretty significant integration.\n. Ok so this is getting very close. We're running the carrot site in production on the prerelease and it's been stable so far. There are a couple weird edge bugs that I'd like to work out, and I also would like to have roots store custom templates in a separate user config rather than in the project like it does now (eek). We're slowly filling out the test suite, over 50 tests now (whoo!). I've been using edge for all my projects though and it's looking good, so I'm anticipating a merge and release soon. Any other thoughts?\n. Ok still to-do before gearing up to merge this guy (it really needs to be merged soon we're coming up on 100 commits on this release branch):\n- `post.content` and `post.contents` need to be set equal, although `content` is being deprecated\n- replace Q.js with when.js (simple change, working on it now)\n- #267\n- really thorough testing through for any bugs or breakage on any roots app any of us have made, ever.\n\nThere are still boatloads of features I'd love to have in here, but these will have to happen in the next release, because this one is overdue to be shipped.\n. Ok I'm ready to merge this today and push it out as 2.1.0. Any objections?\n. Approved on all of this, except I use underscores rather than camelCase just because it's a huge amount easier to read for me. According to [scientific studies](http://ieeexplore.ieee.org/xpl/login.jsp?reload=true&tp=&arnumber=5521745&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5521745), camelCase takes on average 20% longer to read than underscores. You'll find underscores rather than camelCase in many places throughout the codebase because of this bias I have :rabbit: \n. Haha yeah it's definitely some ruby influence, but I think ruby influence means a lot. There's a ton of emphasis in the ruby community on making code clean, clear, and readable, and I see no reason that shouldn't carry over to everything else :smile: \n. Ok there's one more thing that **really** bothers me about coffeescript that I'm going to have a very hard time getting over unless there's some way to solve it -- named functions.\n\nFor me, it makes a world of difference to have your implementation code at the top of your file, and any private functions at the bottom. Way cleaner, easier to read, and a more logical progression. As far as I'm aware, since coffeescript does not have named functions and all functions are assigned to a variable, you can't organize your code this way, so all functions are at the top, and the implementation is at the bottom.\n\nIf there were a way around this, I'd be much more likely to fold, but for me this is a massive block.\n. Eh, don't think that's relevant. In node, thankfully we don't care about IE, so I'm not sure what the excuse is for coffee not at least having an option somewhere to be able to use named functions. But is what you're saying in general that things need to be refactored into classes if we were to switch to coffeescript in order to keep them clean?\n. That seems like a ridiculous way to do it, but I do appreciate the examples of workarounds, this is really good to know. I think if we were to go coffeescript, we'd also have to make this project very object oriented as well in order to keep it clean.\n. No I don't see this as an issue, it just adds to the premise of this issue - it's not just a conversion to coffeescript, it's a conversion to coffee _and_ refactor to make roots more object-oriented and class based. Which I think I wouldn't be opposed to as long as they go hand-in-hand.\n. Since we are doing this, going to close out this issue\n. Excellent pull request - thank you @slang800 \n. I think it would be an awful idea to merge ignore files and ignore folders. I'm ok with having a single `ignore_patterns` that you can use if you want which would simply delegate to ignore files and folders, but I also think you should be able to _not_ use that and just go with ignore files and folders if you need, since that how roots actually works under the hood, and since there are situations where you might want to ignore all folders that start with something but not all files.\n\nAlso, I used to have roots structured to put the globals in a config object which I had to require when I needed them, but ended up changing to globals because it was just a ton easier and made the code a lot cleaner, since the config object had to be required pretty much in every file. If you do the Project object refactor and find that it's not simply more of a pain that works, but just warning you that this might be the case.\n. No no, thats _exactly_ what I disagree with. I'm ok with the external representation (read: what you set in the `app.coffee` file) being `ignore_patterns` (or just `ignore`), but the internal representation has to be folders and files. Doing it another way would limit flexibility, which is something I'm not ok with.\n\nUnless I just didn't get what you meant by internal representation hah\n. Situation: I have a folder called \"tools\" that I put some tools I use to build stuff or some derpy images or whatever. Don't need to compiled, add it to ignore patterns. Now any file that has the word tools in it is also ignored.\n\nIf I want to ignore a folder but not a file or vice versa, couldn't do it with a single pattern. Roots actually used to use a single pattern, and I took it out and replaced with the file and folder specific ignores because that's a much better way to do it. I wouldn't accept a merge that reverted this back, but I would be a proponent of having the default be a single property that just maps to both file and folder ignores internally.\n. Nope, not unless https://github.com/jenius/roots/issues/157 is closed\n. It will be very difficult to get me to agree with using a single array of patterns for folders and files internally. That's taking a step backwards. Currently you can be specific between the ignored files and folders, that change would take away the ability for you to be specific like this. Like I said before, I'm totally fine with presenting a single pattern array _externally_ as the default but I see no reason we should strip functionality.\n. People not having to research minimatch and experiment continually to figure out how to ignore a folder and not same-named files also is one use case...\n. Woah, crazy. I'm on vacation for the next 2 weeks so I might not have time to check it out in depth, but I'll try if I get a chance!\n. Really liking the work happening here :thumbsup: \n. Sounds good. I'm really stoked about the potential of having an asset graph. I think if we could really pull it off, it would make roots stand a very significant distance above other static compilers -- in another league, so to speak. I'm sorry I haven't been able to focus more of my efforts into making this happen recently - I have been spending a lot of time working on another roots-related project that I think will make a huge difference, and that I'm also very exited to tell you guys more about soon.\n\nI really appreciate your leadership and hard work pushing roots forward and trying to make it the best we can. I know we'll get there soon : )\n. I'll send you an email about it :cactus: \n. You could easily get a job right now, it's true. If you wanted to come work with us full time on roots, open source, and roots-related client projects, we are hiring, straight up. We've interviewed people that are probably 10 years older than you and significantly less qualified. At the same time, I don't think college is without value. Although usually they bill themselves as academics only, college is really a lot more than that. I haven't applied a single thing that I learned in college to my professional work (never took a single comp sci or design class), but I don't regret going either.\n\nIf anything, I would suggest not studying computer science, since you clearly are well in control of that already - try something different. And if that doesn't interest you because you're looking for free time to continue the awesome work you do already, no use going to college, you could just get paid to do it full time, hah.\n. I think your comment about not being able to get work without a degree in the future is off-base for sure. It's what colleges want you to believe, absolutely, but the logic is backwards. A degree is there to prove that you are capable of doing a certain type of work, and to serve as a notice to companies that you have studied X concepts and now theoretically should be able to work with them.\n\nActually doing work on the other hand is already doing what a degree is supposed to tell companies that you are able to do. So if you are already clearly able to do it, you have examples of how you can do it, and on top of that people are willing to pay you for doing it, I can't imagine someone saying: \"Hey listen, I looked through all the samples of good work that you've already done in programming, it's clear that you are good at programming, and I'm impressed by your abilities, but since you never actually went to college to learn how to program, I have to assume you don't know how to do it.\" That just makes no sense, and if anybody was that idiotic, I wouldn't want to work for them anyway. The certification means nothing, _especially_ a field where you can show your work. Value always has been, and always will be attached directly to _good work_, and never has and never will be associated with certifications and bullshit like that.\n\nOn the other hand, I think the \"trying college out\" point is a solid one. College is a unique experience in life, and in my opinion an experience worth having, even if it doesn't end up being for the full 4 years. But for god's sake don't go just for the meaningless piece of paper. Kanye West had [some nice thoughts on the topic](http://rapgenius.com/Kanye-west-school-spirit-skit-2-lyrics).\n. hahaha we need to have everyone jot down their college experience as an emoji sequence. The fact that there's no mario kart emoji is going to be a blow to mine though... but let's give it a shot:\n\n:flushed: :snowflake: :page_facing_up: :pizza: :sushi: :microscope: :saxophone: :woman: :beers: :computer: \n. O_o - ok let me know if this is coming up again!\n. Sweet - yeah I've run into that same mistake more than once with not properly ignoring layouts. It kind of bothers me that the layouts can't be auto-ignored like they are for normal view layouts, but I think it would be a bit too computationally expensive to have them auto-ignored because it would take another separate pass and read through all the dynamic content.\n\nSomething interesting to think about though. Either way glad to see you are using and possibly enjoying roots!\n. Any thoughts on how we'd get started on this?\n. Or at very least a tiny interface that prompts you to set a language if you don't have one in `process.env` already\n. Oh yeah definitely agreed. I wonder if there is one already and/or how we could find it...\n. Just a note that this will be possible though the roots extension API in v3, and will be built out as an external extension. Going to close this issue since it's very solidly on our radar and will happen, but will not be in roots core and it might take a bit to get to this so trying to keep the issues section clean.\n. Nope, not yet. I may be missing an easier way to do it, but in my estimation an extension like this requires a very complex mod to the central roots compile pipeline. By all means feel free to take a crack at it though!\n. Yeah absolutely. Could you send it to me before publish? Would love to review!\n. @Leeds-eBooks wow, this is a really impressive piece of work. nice job! That being said, the code is honestly boggling my mind. I'm having a really hard time understanding what you're doing here. Is there any way you could try to clarify the code a little? Or even a chance we could jump on a call or something and you could walk me through it?\n. No problem, and thank you for making it! Let me know when you have updated.\n. Hey @Leeds-eBooks -- yeah, I'm really sorry for the holdup. I've been working part time and had only very little time for this kind of stuff. I just read through the plugin and it looks legit. There's certainly some Babel stuff in there that could be cleaned up, and having tests in place would make a **huge** difference, but if it's working and people are using it by all means you are welcome to put it up on npm!\n. If I have some time on my hands I will certainly contribute some of these changes too :grinning: \n. Oh wow drama time! But yeah @roots unless you are going to use the account, you are squatting, which is against github's terms. But we don't want to resort to that -- we have been working super hard on the open source roots framework for more than a year now, and it would be incredible if you would be willing to donate the account to an open source project. All we are trying to do is make life easier for developers, and we are putting so much work into it. It would really mean a lot to us :heart: \n. Good lord, this is ridiculous, slightly embarrassing, and a little sad. I guess I missed a lot while I was out...\n. Oh yeah wow really ambitious project, but I like this. I don't think it should be a part of roots by any means, but it would be great as a separate project that was built to cooperate with roots _if_ you wanted it. I'm currently working on one large project that is going to sit alongside roots much like this -- something that would be a huge enhancement to roots if you wanted it, and built specifically for roots projects, but also fairly easy to couple and decouple if you want or don't want to use it.\n\nAgain, a lot like you said above. But in general, very interested -- I think this is a great idea, and would be a great fit especially once we can get the asset graph going on : )\n. I'm going to close this as it's not slated to be part of core, and @slang800 has been busy with college over the last couple months - feel free to re-open if this becomes an active area or you would like more feedback!\n. Oh ok, so I see what you're saying but there's another way that I've been using to accomplish this. For dynamic content, you can set a `layout` in the front matter to ensure that you always have a specific piece of front matter set, like the title, then use `post.title` to set it per-page. You could do this for menu options as well.\n\nHere's an example of how I make this work: https://github.com/jenius/roots/blob/master/templates/new/blog/views/_single_post.jade\n\nThat being said, I assume you tested this, and front matter variables do not override app.coffee globals? Honestly I would think that they should, but I'd have to take a stab at testing this a bit myself.\n. Ok awesome, going to close this issue then - let me know if there's any other problems you're running into or suggestions for feature requests!\n. Yeah, don't care about IE8 at all for the roots homepage, really. If you want to build a site that works in IE8, it is very easy to accomplish with roots, and I have done it quite a number of times at work for clients that require that level of support, testing through perfectly. But that being said, I would like to propose two things:\n1. Like Sam said, @cspotcode if you want to open a PR on https://github.com/jenius/roots.cx (where this issue should have been filed) to fix, that would be much appreciated. If not, I'd understand because IE8 is the worst, and to answer Sean's question 0.2% of our traffic from the last ~5 months has been from IE8, which doesn't justify the effort for me.\n2. We should add a notice that appears in old browsers noting that the roots homepage does not support them, but you can use roots to build sites that support any browser since it's just a framework. Because I do think this is important. And the fact that people are even comparing roots with bootstrap makes no sense to me since they are in no way similar, but if they are I don't want to lose any potential converts in the interest of making the web a better place ; )\n. Totally agree with you on the IE8 front, I unfortunately need to support that piece of junk for all my client projects. For me, what's important is that things are not obviously broken. If I can get to that point with IE8, that's totally good enough for me.\n\nThat being said, this is not a client project, and nobody considering using roots would be using IE8 as noted previously, which is why it wasn't resolved earlier. But in general I think we're on the same page, and I don't disagree that this should be resolved.\n\nI'm going to close this issue, and open one up in the roots.cx repo. Looking forward to a pull request if you've got time, in the meantime this will be in my backlog which I'm trying to clear out as soon as I can!\n. Would love for this to be merged soon - if I have a few minutes this week I'll add the test, if someone else can beat me to it please do :smile: \n. Hi @DAddYE - I was on vacation for the past 2 weeks, just got back and catching up on issues. I assure you we did see this and I'm going to read it over and give you a more detailed response as soon as I get my life together!\n. Ok let me give this a shot:\n\n#### Front Matter\n\nWhile I don't disagree that using the `:yaml` filter would make it more jade-like, I feel like we should stick with vanilla front matter for two reasons:\n1. Anyone coming in from jekyll, the other other decent solution for static publishing, will be comfortable with it\n2. We can use front matter in any language, but can only use `:yaml` in jade. Eventually I would like to expand dynamic content such that it can work for other languages if people prefer, so a universal solution is much more attractive to me.\n\n#### SEO\n\nWhile in theory I agree with this, we have to keep in mind that roots is a static site compiler, so this request doesn't exactly make sense. What roots outputs is files - requests don't get passed through a router that we could map short to long names in. So the best solution for this will be to just give your files long names, or to simply make genuinely good and focused content instead of keyword spamming in your URLs for popularity.\n\n#### Paths\n\nTotally agreed. This is actually quite high on my list for features to add. I would call this nested dynamic content directories, and you will be seeing this feature rolled out soon.\n\n#### File Paths\n\nI don't totally understand what you mean here, but I'm going to tentatively say this is not a good idea. There has to be a difference between dynamic and static files (dynamic files are handled very differently), and what you seem to be proposing is making every file automatically dynamic. If you need dynamic files, I see not reason not to just add in a tiny front matter block, even if it just has a title in it in order to achieve this effect.\n\nLet me know if I didn't get you on this last one and was totally off-base though.\n. Hey @DAddYE - any comments here? This has been open for a month now...\n. ### Front Matter\n\nSo I have two major issues with this. First, we need a universal solution like I mentioned before. Not every language has a yaml filter, and I'm not pledging to build one into any and every language that works with roots. Second, front matter is parsed separately from the rest of the file, and not handled as jade. In fact, it's removed from the file before the jade is parsed, and doesn't show up in the compiled result since it's just _metadata_, not actually jade content. Because of these two reasons, I have to say no to this one.\n\n### File Paths\n\nOk, I see what you're saying here. I actually just ran into a similar problem and what I did was write a small script to rename all the images so that they follow a logical order, then generate a front matter file for each one. Definitely was not part of roots with the outside scripting, but I would have needed to do that anyway because I'm hosting the images on s3 since that's a much better idea when you're dealing with a boatload of images.\n\nI think it's feasible that we could build in support for mapping all content into variables though. Would love to get @slang800's opinion on this too.\n. I'm going to close this because it's been inactive for a while, there are ways to solve any of these issues, and we aren't going to get a chance to look at this for a while. But someday we might be back here working through this feature so don't give up hope!\n. Wow, glad this was resolved and thank you for the detailed resolution report @HHSnopek \n. I'm not sure that I'm totally down with the roots-dev team name... something about it doesn't seem right. Any other thoughts on a good organization name we could use to house roots projects?\n. Yeah that was the same reason I was thinking - it would just be easier to manage as a team.\n. Would be interested to hear @kylemac's thoughts here as well\n. Closing due to inactivity. If this is moved, it will probably be to carrot\n. We need a few more details and some sample code we can use to reproduce in order to close this out @aesnyder :sheep: \n. The way with the least code that you can reproduce the issue with and the full text of the error being thrown would be great. This is the case for any and all bugs reported in open source projects -- in order to fix, we need instructions to be able to reproduce the issue :thumbsup: \n. Hey @aesnyder still waiting on any details at all that we could use to help you fix this issue. The content of the error message even would be something -- currently we have nothing. Otherwise if you figured this out and resolved it, could you post what you fixed and close the issue?\n. Ugh if this really is the case that will be the 3rd breaking change bug that we'll have filed. The latest jade versions screwed a lot of things up, but I thought I had caught them all at this point. Let me test this out tomorrow and get a fix in - really sorry about this. I won't downgrade jade in the main project though, I'd rather just patch up the holes and move forward.\n. Just tested a precompiled template with the following code:\n\n``` jade\n- foos = [1,2,3]\n\n- for foo in foos\n  li= foo\n```\n\n...everything was working fine. I need someone to provide me with a way to reproduce this issue before it can be resolved por favor :frog: \n. I'm closing this issue. We can re-open this if someone can provide me any details at all on what the problem is.\n. Ok @HHSnopek sorry I've been out on this one for a bit but I'm fairly sure I know fixes to each of your problems. All of the problems are a result of upgrading roots to the next major version (including breaking changes as any major version does) and not consulting the changelog to see what needed to be modified. Let's go over these in order:\n\n**First Error**\nYou were already running a roots app on port 1111, you can't run two apps on the same port at once. It appears that you figured this out by the later errors though, so I'll presume this is resolved.\n\n**Second Error**\nMake sure to check `app.coffee` and ensure that `title_with_markup` is defined in the locals. If not, just remove it from the view. This function is defined initially in the default template roots ships with, but you may have removed it by accident or something. Seems like this has been resolved as well.\n\n**Third Error**\nAs of version 2.0, `yield` is no longer the correct keyword for templates - this is a big breaking change and was the major reason why we bumped roots to 2.0. It can be noted [here in the changelog](https://github.com/jenius/roots/blob/master/changelog.md). To fix this, just change all instances of `yield` to `content` and it should be fixed up.\n\nHope this helps, and I'm sorry you've been having trouble migrating! Taking a look over the changelog to see if there was anything else you may have missed could be helpful. Also I know node errors looks really frightening and spit out loads of junk, but I always try to remind myself to stay calm, read the error message, and try to understand what it's telling me. Usually this will get me far enough in the right direction to fix things : )\n\nFinal note, you might want to check out the [new default app.coffee](https://github.com/jenius/roots/blob/master/templates/new/default/app.coffee) and use that instead - this will also clean up your debug output a lot.\n. Make sure you ran `npm install` in your project directory\n. The docs and video tutorials are for version 2 of roots, which is the current stable release, not the prerelease version 3 which it seems like you are using.\n\nWe aren't quite done with the public docs and such for v3, which is why it's still in prerelease, sorry about that. We're working to get these pieces ready for you guys as soon as possible!\n. Sorry, were you talking about the video on the jeet site, or the roots site?\n. Ah ok, sorry I was in v3 mode for some reason. Glad all is working well now!\n. I'm terrible at testing so take this with a grain of salt, but the reason it's this way is because I usually go for integration tests first because they cover areas that are most prone to breakage. But I don't disagree that it would be good to also add unit tests.\n. Trying to think of how we should break this down. Think a good way to start would be by command? I feel like there are a number of components that are split across multiple commands, but this might be a good place to start at least. So we have the commands:\n\n[ ] watch\n[ ] compile\n[ ] deploy\n[ ] template\n[ ] new\n[ ] pkg\n[ ] plugin\n\nThen we have other misc stuff:\n\n[ ] error handling\n[ ] precompiled templates\n[ ] configuration stuff\n\n... ugh there's so much\n. Honestly I think it will take a solid time investment, at least for me. Definitely accepting help though if you can :neckbeard: \n. This is generally in progress, I'm going to close out this issue :thumbsup: \n. I've actually been gearing up to make a tumblr extension for roots for a while. The multipass compile ability that was added for version 2.0 is going to be the major piece that enables this. In theory, if we had a tumblr parser, we could add this as a custom compiler and write tumblr tags on top of jade, which would be huge. We've already done some experiments with having roots handle shopify theming using multipass and custom compilers, and it has worked.\n\nOne of the biggest things left in the way of being able to do full tumblr dev with roots right now is having someone write a javascript \"tumblrscript\" parser. If anyone knows of a solid one that's already well-maintained, that would be a huge step forward. This is the 'difficult task' declan was referring to, and is definitely difficult, but far from impssible.\n\nIn short, we are definitely going to make this happen, and have been planning to for a while. Would love any and all help with this.\n. Not enough - tumblr-like won't make the cut. We need a _javascript tumblr parser_. I'm just not good at writing compilers, although I did get started a while ago using peg.js. If anyone wants to take a stab at this, would love that, pull down [peg.js](http://pegjs.majda.cz/), get a solid tumblr language sample and the small spec, and start tokenizing! If we can get a functional tested parser in place, the rest would be easy : )\n\nAnd yes, we'd populate it by default with dummy content, with the possibility of authenticating to bring in your own blog's content. But dummy should be good enough really for development.\n. Except it uses [a python parsing module](http://pyparsing.wikispaces.com/) and we need a js one, like peg as suggested above, so really we need to just rewrite it, unless you also want to port pyparsing to js, which seems like a questionable decision.\n. @mikedidthis we're more or less waiting for someone who has more experience writing parsers, or for one of us to have some time and/or the need to figure it out. Once we can implement a javascript parser for tumblr script, the world of possibilities will immediately open to us.\n. At long last this has been taken care of! https://github.com/nporteschaikin/sneak\n. Done in release branch\n. Hey @slang800, could you submit a patch for this to the master branch as well?\n. it's possible, but i also have a release planned before the end of this week, and we do still have a breaking change in the transformers branch which has yet to be resolved, so it would help if we could get it patched up quicker. It's not a big fix, right?\n. I'm going to close this since it's done in the release branch\n. Yeah, this is part of the issues I'm seeing specifically with the gh-pages deployer, which I brought up here: https://github.com/jenius/roots/issues/205\n\nDefinitely looking into getting these fixed up soon. Sorry! The github pages deployer is nasty and difficult to test : /\n. I haven't been able to reproduce this, so I'm closing it.\n. Ok tags are up to speed. This will continue in the future. The next release will be soon and will add more test coverage and a fix for dynamic content in addition to more fixes to the github pages deployer, which really has been a difficult one.\n. Good call. Any other guidelines you guys have in mind for contributing? I feel like it will be easier to say \"you need a test for this\" after we expand our own tests a little more, hah\n. Done in release branch\n. Oh, that's because `_*` is an ignore pattern set in `app.coffee` - it's just a convention that files with leading underscores are ignored. If this isn't your thing, you can always jump into `app.coffee` and remove that pattern : )\n. Oh yeah, that's a custom addition made via [snockets](https://github.com/pthrasher/snockets) - it doesn't come with regular coffeescript : )\n\nSorry, I thought you were trying to use requirejs there rather than the concat require. Makes sense though. If everything has been worked out feel free to close this issue :sheep: \n. Well actually either one is an option, and each has advantages and disadvantages. I find myself almost exclusively using require these days.\n. If you're looking to concat, i'd go with snockets. You can use use [r.js](http://requirejs.org/docs/optimization.html) though if you want to do this through require, although I don't have it deeply integrated into roots.\n\nGenerally what I do with require is break my scripts into logical sections and only bring them in on pages where I need them. You can do this intelligently by reading a body class or data attribute : )\n. I haven't seen this issue and have been working heavily with the most recent version of roots and a lot of media queries. Is there any way you could put together reproduction steps so we can isolate the issue?\n. I'm not sure I totally understand what you said in the last message...\n. The prefix is no mysterious roots feature, it's right in `app.coffee`, a part of the ignores. I have the pattern in `ignore_files` by default, if you want it to be the case for folders as well, just add the underscore pattern to the `ignore_folders` array as well : )\n. Excellent - thank you @L8D \n. Hey @courcelan - so actually deployers are already extensible, although at the moment not on a per-project basis. I figure if someone has made a deployer for a new environment, why not share it with everyone? [Here's the folder](https://github.com/jenius/roots/tree/master/lib/deploy_recipes) that deploy recipes are in - they are built on a simple adapter pattern. I'm more than willing to accept pull requests for new deployers -- actually that's where the github pages deployer originated.\n\nWhat you're saying about different environments is interesting as well, and I don't disagree. However, I think that building in that capacity would be tough. For example, you can only deploy one environment to github pages, there's no way to get multiple sites up there. `roots deploy` is really a convenience tool - I figure if you want a more complex deploy process you can easily manage it yourself.\n\nPersonally, I get around this issue by using [this small deploy script](https://github.com/visionmedia/deploy), and sending them to my little digital ocean box, on which I have set up a post-deploy hook for roots that compiles the project. This works really nicely and is super cheap. In addition, I'm working on a more complete system that would support simple and cheap roots hosting (and a lot more) at work, so when that comes out, deploys will be easier.\n. That's a good idea. It actually wouldn't be too tough to implement either - would anyone like to open a new issue for this? There would only be one boolean option: watching. We could call this whatever we want really - I feel like `env == 'dev'` would be good?\n\nWe wouldn't even need something like args, we could pass variables directly in when app.coffee is evaluated.\n. Ah awesome, that's great. I feel like we could make the interface a bit cleaner though...\n. I feel like you're moving towards a middleware-like concept, which generally I'm in favor of. What I meant in this issue was attaching to (before or after) the `roots compile` command specifically, rather than hooking into the internals of the command itself, which I think might be overly complicated. I think that's what you were thinking as well though, judging by your response.\n. So just to touch this again, the most recent compiler refactor opens up the possibility of this being able to happen, although I don't yet have a public interface to compiler extensions. But there are three hooks which extensions can jump into and work magic.\n. This is being added through the roots extension API and before/after hooks in v3\n. Ok so I recently learned that almond cannot be used to load scripts from CDNs or any sort of external URLs, they must be loaded locally. For me that puts it entirely out of the range of usefulness, and I'd be ready to close this issue. If anyone else would like to fight for almond feel free to step up, but judging by the crickets so far I'm guessing not...\n. No this is how it's supposed to happen (symlinks are in development for extra speed), but I don't doubt that it is somehow related to the problem. I'll get this worked out shortly :cactus: \n. `roots compile` will do a full compile and compress, copying files over. if you want to compile without compressing, add the option `--no-compress` - this is all in the docs :heart: \n. Yes. When you are watching, it would be silly to re-copy assets any time they are changed, since changes are happening quickly, so we have them symlinked, because it's a super fast operation and works exactly the same. When you're ready to go to production, you compile and everything gets copied.\n. Don't agree at all. I would argue that the solution to this is removing support for the old syntax rather than switching back to it. The problem here is not with the new syntax, it's with the patched in fix to still support the old syntax. I think support for the old syntax should be removed in the next release, since it's been deprecated in this one. I also think we should add a console message that the old syntax is deprecated when 'exports' is detected, which isn't in there now.\n\nRoots is not made for people familiar with node.js. It's made for people that want to make websites. There's zero node knowledge required to use with roots, and I'd like to keep it that way. `app.coffee` is a config file -- the simpler, the better.\n. First argument I don't think is remotely valid unless you can actually find any actual down side to doing it this way.\n\nSecond argument is ok, but it's also useless extra syntax that's unnecessary. There's no reason to have the word \"exports\" before every variable -- this is a config file. If there's an option to not have it or to have it, and there's no other arguments either way, I'm going to choose the simpler and more straightforward one.\n. We don't need standardization. This is not a node library or module, it's a **configuration file**.\n. That's exactly why I'm doing it like this - the way we have it now is exactly the same as cson - the entire file is treated as a json object when it's imported. It just also can have functions in there. It is a config file in that it provides configuration settings for the app : )\n\nI know that since it has the capacity for script in there, you can do other things with the file, but I don't think we should encourage that since it's not the intended use.\n. I'm going to close this one, as it's been quiet for three months. Feel free to re-open if anyone has any new opinions\n. So I ended up coming up with something today that will resolve this is a much more straightforward manner -- rather than looking for `exports.`, it just requires the file upfront. If there are no exports, it's assumed that it's a default config file with no scripting. If there are exports detected, it's loaded directly.\n\nI think this should satisfy both sides of the issue. For those looking to incorporate more advanced scripting functionality, you can use exports in the file without issue. And for those looking for a basic uncluttered setup, there's no need to use it in order to get the config to work.\n\nYay for making everyone happy!\n. Great call here, and good solution. I'm into it\n. This issue has been closed on the transformers branch, where new features are being added, so I'm going to close it up : )\n. Yep, sounds good to me. Super easy implementation. If someone wants to send in a PR, you can claim credit and close, otherwise I'll drop this in sometime this week : )\n. This pull request seems to be built on top of the refactors in the transformers branch, which is not ready to be merged yet. Let's do it the opposite way -- build the PR off master, then once it's merged make the translation in the transformers branch.\n. I'm not convinced that transformers will be merged soon. I'm not trying to hold anyone back or say that there isn't some really great work going on in the transformers branch (because there definitely is) -- all I'm saying is that roots is large, very complex, and doesn't have as much test coverage as we want it to yet. So rewriting most of the core is not something you can just push through without having tested it _very_ extensively. I know @slang800 has indicated on multiple occasions that he thinks it's ready to merge, but I checked it through last weekend, found a large number of bugs, and even with the latest code in that branch, it's still not ready to merge.\n\nA lot of people depend on roots for their projects and I'm not going to push a release that breaks things, which means we need to be careful. In the meantime, I see no reason to halt forward progress until that branch is merged. While rewriting things is fantastic, this particular rewrite is based on style, and not on lack of functionality or capability to add functionality for the current codebase. So while I think it's totally ok to submit pull requests to the transformers branch, I also see no reason not to also push them to master.\n. Ok, that's fine with me. We can stick with merging to transformers\n. Would love to see a cleaner commit log for this -- this is a small feature and shouldn't be more than a couple commits at most. Could you rebase this a little bit before merge?\n. Yeah you have to remove any commits in here that you didn't make. When your doing an interactive rebase, you can just delete the lines showing the commits and they will be removed.\n. Ok let me see if I can do the rebase for you\n. Unless there's a way I'm not aware of, I need access to your fork in order to modify your pull request - if you give me push access i can clean it up\n. Ok so I made a couple changes here. The test was not correct (passing does not mean correct) - pointed out where it went wrong above. Also, all the commands are currently js, not coffee, so I converted the command back to js. With the most recent commit, it's fixed -- the command and test are both running correctly.\n\nIf this is all good from everyone, I'd propose merging the two commits to a single one, then I think we're ready to merge this PR : )\n. Excellent - now just squash those last 3 commits together and we should be good\n. It seems like you don't have a ton of rebase experience - would it help to go over rebase a little? It is very confusing and takes a bit to pick up. Shoot me an email (http://jenius.me/#!/contact) and we can go over it\n. Haha so you actually removed my commit that fixed all the mistakes and now we're back to the original state. What you needed to do was merge together your original commit and mine that made the fixes : /\n. Haha ok, so this is super close, but now you have a borked implementation in the first commit and the fix in the second. I would say you should pull the second commit apart to the completion of readme and man and merge the fix with the original broken commit, but I've tortured you enough here already. I'll merge this if you squash the two commits together into one final glorious commit :smile: \n. That, my friend, is a solid commit. Good work. No worries, what's more important is that you learned something :+1: Now your next pull request will be super boss.\n. Is this pull request dependent on another one? I know you're working on a lot at once, but I think each PR should address one issue, and be actually merge-able. The transformers PR is still far from stable and needs a good bit more work before it's ready to merge, so if this one depends on transformers, that means we can't merge one until the other etc.\n\nAlso, the two things this PR changes should be separated into two PR's.\n. We could easily make this non-breaking by setting the livereload variable to be empty, then adding a deprecation notice. I think this might be a better idea than breaking everything immediately...\n. By the way this is an awesome PR, and a fantastic idea. Love this : )\n. Agreed on that front, I think keeping them in their own area is a good idea. And don't get me wrong, I'm very much used to pushing code ahead as fast as I can with wide refactors that can possibly break things, because usually it's just me using it and I can fix it. This whole \"you make a mistake and it affects a lot of people\" thing is a totally new concept to me too. Deprecation notices are something I really have never thought of for any of my other projects. But we can all learn together on this one, hah\n. How is this one looking - possible to merge into transformers yet?\n. Yeah if everything is ok you can go ahead and merge this in whenever and we'll work out the rest in the transformers branch, which by the way as of today's changes passes my test for release so we're getting there : )\n. Actually I'm going to take a shot at merging this now. There are a huge number of conflicts but it's ok\n. Ok so I got this merged with the latest on transformers, fixed up a couple things and it looks like everything is working nicely. I only have one bug left that I can see - sometimes the script write is not coming out correctly, and it's leaving the close tags for body and html before the roots injector script is loaded. I'm going to try to work this out, then I'd like to merge these two branches together. I think the best way at this point would just to be to force push this branch's contents over transformers and close this one.\n. Ok never mind fixed that one, you were just missing a close tag. Everything working quite smoothly here, tests passing and the ultimate test, that it correctly compiles http://carrot.is, works :tongue: \n. Ok this has been merged into the transformers branch, I'm going to close this.\n. Could you expand on this a bit? I would love to separate the dynamic content parsing (and layout parsing) from the compilation, but they are very closely tied together at a number of different points so I haven't seen a reasonable way we could do that yet. If you have a proposal for one, would be very interested in hearing it.\n. I'm not convinced that would work straight up. The file helper's cooperation with the compile process is without a doubt the most complex part of roots -- it scrambled my brain writing it, and does every time I need to make changes to the process. Although I know it might look like it would be easy to drop out (it already has been dropped to a pair of functions within the file helper), there are a lot of nasty bugs and edge situations that arise if there's even the tiniest oversight.\n\nWhat's especially important to consider is how the dynamic content parser varies it's behavior across situations. For example, when there are multiple extensions on a file and it's compiled multiple times, the front matter doesn't get parsed out until the final pass. In addition, when dynamic content files are parsed into layouts, the dynamic locals need to be present there. Here alone, the dynamic content is already twisted up in the multi compile process and the layout parsing. We can't drop the interfaces between these sections, although we could possibly change them and/or make them cleaner.\n\nI almost feel like tackling that section might be easier pair programming (although not sure how we'd do that remotely). A lot of the core is complex and not heavily covered by tests (my greatest weakness for sure - testing). On first look, it is tempting to tear it apart and reorganize, but there are many ways to introduce a multitude of subtle bugs, like we've seen in the transformers branch.\n\nI definitely think this should be attacked, just carefully : )\n. I agree, which is why I'm in favor of giving this a shot. And if you ever do end up here in NYC, you're always welcome at the office : )\n\nSo I suppose the question is how should we get started on this one?\n. Separation of layouts and dynamic contents is in place in the release branch. Still needs a bit of work, but going to close out this issue\n. Ah, a devious bug indeed. Ok, let me check this out and see if I can patch it.\n. Ok I see how you did it there. My implementation was a little on the safer side but I don't mind doing it like this for a temp patch that won't be documented.\n\nAlso, you should test before you submit... [come on!](http://www.youtube.com/watch?v=SP_9zH9Q44o)\n. Hah, I guess thats one way to do it... let's get this shipped out.\n. Transformers branch is stable and ready to be merged within the next few days -- does anyone want to take a shot at implementing this before the next release?\n. Would be awesome - try to work this into [accord](https://github.com/jenius/accord) though rather than the current roots version - this is where the compile process has been pulled out to for the next version.\n. Would be awesome. You could accept source maps as a special option to the compiler, or maybe expose another function just to generate the source map - I'll let you look over it and decide. The code for just accord is a lot easier to wrangle\n. Ok so I took a stab at integrating this with transformers this morning and really it's a terrible language. There's honestly no reason to use it over something like ejs or mustache, so I'd rather not add it really. I'm going to close this out -- if anyone is interested in adding kit support, feel free to give it a shot, but it should be a PR to https://github.com/ForbesLindesay/transformers\n. Hey Josh,\n\nJust checking in on progress with this one : )\n. Awesome. Just so you know, [this is where it will eventually end up](https://github.com/jenius/ship), and should be a big piece of a number of projects other than roots as well. Thanks for your hard work here!\n. Yep, this looks great. Unfortunately still don't have a good way to test deployer, just want to confirm that this has been tested through (errors and all) and is working?\n. Yeah I'm really coming up blank on rendering data into json. Might have to make some little homebrew solution for this. The good news is it's easy to parse json, all we'd need to add is some sort of dynamic tag like ERB that it took an extra step through and ran replacements.\n\n**Tiny example in coffeescript:**\n\n``` coffee\n# JSON Templating\n\nmini_tmpl = (json, tmpl) ->\n  str = JSON.stringify(json)\n  src = \"<%= (.*?) %>\"\n  for m in str.match(new RegExp(src, \"g\"))\n    str = str.replace(m, tmpl[m.match(new RegExp(src))[1]])\n  return JSON.parse(str)\n\n\ntest_json = {\n  foo: \"<%= bar %>\"\n  \"<%= baz %>\": \"quux\"\n}\n\ntemplate = { bar: 'snargle', baz: 'snargle2' }\n\nconsole.log mini_tmpl(test_json, template)\n\n```\n\nJust tested this and it works. I feel like someone must have done this already somewhere but honestly can not find one...\n. I'm going to close this - it has been pulled in to [ship](https://github.com/carrot/ship) and is currently [working nicely](https://github.com/carrot/ship/commit/80f4f8f42a4efd0df356f8cd9882b7bb58b285c7). This is huge @joshrowley, thanks so much for the contribution and looking forward to seeing your code in the next release!\n. Ugh I'm not sure how to handle this. Does a breaking change in a dependency mean we need a major version bump? If anyone was using the grid system previously, this update will without a doubt break their app : /\n. Yeah, I'm ok with that. Really, I'd like better docs for jeet's grid system before I push it on all roots users anyway. I'll merge this to the transformers branch then.\n. Merged to transformers, tested and fixed a couple issues in the new version of axis, looking good now : )\n. Ok well for one, the warnings you are getting there are not requirejs, they are uglifyjs, and it's totally fine. It's just optimizing and compressing your script and letting you know what it did. This happens every time `roots compile` is run. Also I think I see the problem already -- it looks like there's some mistake with path joining - you can see the slash is the wrong way (for windows, ugh) at `public/js`.\n. Yes it does, but not automatically, only if you use the [right tools](http://nodejs.org/api/path.html) . Thats why I was saying there's probably a path normalization mistake somewhere.\n. [Found the issue](https://github.com/jenius/roots/blob/master/lib/deploy_recipes/heroku.js#L29). I'm going to try to have this fixed by next release (soon). Can windows handle globstars like this?\n. Hm - is there any way you could find out how I'd execute a command like this in windows? All I need to accomplish here is moving the contents of a folder to a specified destination...\n. hahah nailed it\n. So it's no secret that roots deployers are being extracted into [their own library](https://github.com/carrot/ship) which will be more thoroughly tested, and this should resolve the issue :smile: - I'm going to close this for now because I'm trying to narrow down issues that we're focusing on and come back with an update once the integration of ship is complete\n. Alright so it turns out that I really wasn't thinking ahead when I wrote this spec because this is not possible, since the contents of each category under `site` is an array. So this means that there would have to be some sort of awkward syntax accessor like `blog.announcements.all` in order to get content from each folder so that the nesting would work right, or the code would have to become more complex by checking to see if there is a nested folder, and only if not removing the accessor.\n\nNot totally sure what to do about this at the moment, any suggestions welcome!\n. Kidding, it turns out arrays are objects. The things you learn after thinking you understood javascript. Implementation for this coming shortly to the transformers branch.\n. Done in release branch, closing\n. Ok so we have decided to merge jeet's stylus util library with axis, which is awesome.\n\nAs for the docs, I'd be happy to go either way. I think it makes axis to be scoped under the roots site because they are bound together somewhat in that roots is by far the easiest way to put axis to use. Like we discussed before though, I'd love to give axis it's own look and brand. So maybe it would be something like axis.roots.cx and have it's own thing going on, but still fall under the same general umbrella because the two projects fit together and are overseen by a lot of the same people.\n\nFor jeet, I'd say it's up to @CorySimmons. We could subdomain it out with it's own look and brand much like axis, or we could keep it on it's own domain if that's what he wants. In the end, I'd like for each of them to have its own colors and logo though just for differentiation. They all are quite valid alone and can be used on their own, they just work really nicely together and using them together is often the best context anyway. This is somewhat similar to [yeoman/grunt/bower](http://yeoman.io/) except the tools are quite different, rather than templating, build tool, and package management, we'd have build tool, css library, and grid. Iderknow. This is all a work in progress, totally open to suggestions.\n. Haha yep, thats what I was thinking - have them all work perfectly as standalone components, but also package together particularly nicely. I'm cool with having them at their own domains if that's what you want. And definitely would be happy to have you take a shot at the branding. I think it would be awesome to have the three with somewhat similar logos - the jeet one is already on the same general level - a nice clean vector that fits in a circle.\n. It's going to be a long time before this is merged unfortunately, as this is a massively breaking update which targets v3.0.0, so I'm going to close this out for now. BUT the good news is that there is a way to include the latest version of axis in the most recent prerelease - instructions below:\n- in your app.coffee file, make an array called `view_helpers`\n- install the latest version of axis locally in your roots project\n- ignore it from the compile process\n- use `module.require` to add it into the `view_helpers` array\n- ???\n- profit!\n. Just came across this library, which I think would be a greats staring point for the view helpers: https://github.com/HubSpot/humanize\n. Here's another great one for dates. Would be killer if moment was built in: http://momentjs.com/\n. Woah, underscore.string looks great. I'll look into that a little further, but looks incredible.\n. This feature has landed on the release branch. Roots ships with underscore, underscore.string, and moment by default, and you can also include your own view helper bundles through app.coffee. Whoo!\n. @airtonix You can do it this way with roots v3, which is currently what's being actively developed. You can test out the latest v3 prerelease with `npm i roots@pre -g`.\n\nIn v3, you can run this in your `app.coffee` file and it will work:\n\n``` coffee\nmodule.exports =\n  ignore: ['view_helpers/*']\n  locals:\n    foo: require('./view_helpers/foo')\n```\n. Yeah, I was chatting with @kylemac about this today and we are thinking it might be a good approach to introduce the ability to control number of posts per page somewhere, then only render the first N to locals, and split the rest by N to .json files in a folder called `/pages`. So you could handle it how you want -- likely making an ajax request to `/blog/pages/N` then piping the content through a template of some sort, then you can handle the render however you want - maybe we can have some prebuilt functions that will do a couple different ways for you (paging, infinite scroll, etc)\n\nI think this idea has some refinement to go, but I do think it's the right direction in general...\n. Ok, I see what you're getting at. I think the possibility to extend roots in this way will become more feasible as roots itself becomes more modular. For example, javascript pagination could be rolled into a view helper of some sort, like I mention in #233. Either way I think this is a good place to discuss it blogs and blog features for now.\n\nI don't agree with the wordpress piece. Blogs do not need to be hosted on a server, and should be static - there's no reason for them to be dynamic. This was a huge motivation behind dynamic content. I hooked up wordpress with a json api to roots a number of months ago for my company's blog and hated it. The extra load time was painful, and dealing with wordpress was painful. Making a blog should be simple, super fast, and super cheap to host. I'm totally fine with extracting out the blog pieces (and even the dynamic content piece if we can figure out how to do that), but I am not planning on stopping development on either because I don't think any existing solution solves this problem right, including wordpress.\n. I agree. In order for it to work nicely with everything else it will need a lot of hooks into the process though. This is definitely something I'll be spending some time thinking about...\n. We already have a blog template - `roots new project_name --blog`. The issue is that it's not possible to create a full-featured blog just using the current feature-set of axis and roots - it needs bit of extra functionality to be built in, and we're discussing here how that extra functionality should be architected.\n\nAnd yes, my aim with roots is to be able to entirely replace wordpress with a cheaper, faster, and easier alternative. We are attacking every piece of it, some of it public and open source, and some of it private. It will be done, but it's a big mission and takes a while : )\n. Nope, asset-graph would make no difference in regard to these features actually. The asset graph is mostly for faster and more efficient compilation.\n\nSam already expressed that it should be an extension and I agreed, so we are clear on that. I'm working on restructuring the compiler so it can be more easily extended.\n\nAs far as using wordpress and dropping roots dynamic content, I don't think you guys will ever get me to agree to that, although attempts of course are welcome. I can list reasons on reasons on reasons why wordpress is a horrible platform for basic blogging, and why publishing in general would be tons more efficient as static sites. Anyone is more than welcome to use roots with wordpress if they want to, and as we have seen above it works fine. But I am not going to strip features and functionality from roots and suggest that people go this route, because I personally do not agree with it at all.\n\nA couple reasons why I think blogs and publishing should always be static:\n- Wordpress is written in PHP. It requires a server and a database. As traffic and content increase, this becomes increasingly expensive. Roots is written in html, requires no server and no database, and a high traffic blog could easily be hosted for under $5 a month, even from S3 if you wanted.\n- Roots is much faster than wordpress. Like, orders of magnitude. Compiled html is the \"C\" of the internet - it's as fast as you can possibly get. It's probably not critical that your blog is updated the moment you hit publish, and that a 10 second delay to compile before it goes live wouldn't be so much as noticed. This tradeoff buys you instant loads on all your pages, since your html is pre-compiled. And since your blog is probably not updated super frequently, these savings compound quickly.\n- So overall, a blog on roots is easier to set up, faster to load, and cheaper to host. It's a huge win on all counts.\n\nJust saw your comment @slang800, and I know you are super concerned with separation of content. Personally, I'm not concerned as much as you are about this, but I also think thats a separate issue. A system could be devised to separate the content and compile it in, but I absolutely do not want to add an extra ajax load to every single page in order to get the content. If it's separated in development, it has to be compiled in. And wordpress does not do that, so the price you pay for separation of content is a delayed page load, a gigantic ugly backend, and an extra http request. If roots users want separation of content, they shouldn't have to pay any price.\n. That's still not good enough for me. There should absolutely not be an extra ajax load just to get your content. We could easily build a way that you could put your content in a json file and have it compiled into templates, and I think that's what we should do if more content separation is something people are interested in.\n\nNever lower your standards! :point_up: \n. As I mentioned above, any of these (including pagination) can be done right now, but it's not _convenient_ to do so, and it takes a little manual js and jade work. My goal was to make these easy for people to implement by wrapping up the implementations in simple functions, and to make them as efficient as possible.\n\nSearch is actually the most difficult one. I think it would involve an addon that would push your json to an external database, which you could ping in your search field to return results. But that's for the far future, I'd rather focus on categories and pagination at the moment.\n. Yeah I'm not in favor of tighly coupling anything, I just am strongly against having to use javascript in any way to achieve separation of content. I think the best solution would be the extension that compiled is content from json. I'm working on a restructure of the compiler that would allow easier extensions which is almost ready -- this would make it easy to add an extension like that in. This would also allow us to solve the i18n problem : )\n. Ok so I think we've come to a point where we have a pretty decent understanding of the landscape when it comes to static sites and blogs, and I want to write it up here briefly, then close this issue and have an article published on the roots site about this when we launch. Here goes.\n\nIf you are a programmer looking to make a small simple personal blog that will never go over a couple hundred posts, you can get away with using the dynamic content extension and using jade files with metadata. If you want pagination for your posts, you can do this with jade by capping out the number rendered on the page, then dumping the rest as json objects into a script tag and loading them onto the page when a button is clicked via javascript. This is not the cleanest or most full featured solution, and requires manually editing the source files to update, which is why it should be used only for programmer after a small simple personal blog. A good example of this is http://carrot.is/coding, which only has a few high quality posts, probably will never have pagination, and is very simple and straightforward with no categories, tags, search, comments, etc.\n\nHowever, as soon as you are looking to get more of the features typically expected of a blog, you will want to graduate from the dynamic content approach to something more robust. Simply put, is is not possible to efficiently manage hundreds of blog posts, or have tagging or search functionality with a static site. You need a database for this -- this is what databases were invented for. On the other hand, that does not mean you still need to hit the database every time a user loads the page, as you are almost always fetching the same 5 or so blog posts rendered initially.\n\nWe have been chasing a particular combination of static and dynamic sites in which the site loads as quickly as possible, is hosted as static, but has a CMS and still can handle typically dynamic features like user login or search, for a while, and roots v3 was built around this concept. This is what we recommend for larger or more feature-rich blogs.\n\nA good example of this kind of flow uses [roots-contentful](https://github.com/carrot/roots-contentful). Contentful is a CMS that exposes data though a JSON API rather than integrating with a front-end. This roots extension integrates with Contetntful and pulls in data to be rendered as part of a static site. So you can pull your blog posts, which can be editied via CMS, and render the first 5 on a static page, then if the user hits a \"more posts\" button, use Contentful's JSON API with javascript to pull in the next 5 and render them into the same template you used for the static ones (if you are using [client-templates](https://github.com/carrot/roots-client-templates)). This is the most efficient flow you can get. If you prefer another CMS, it's certainly possible for that to happen using a roots extension, but the only one we have made at the moment is for Contentful, since it's such a good fit with it's strong JSON API.\n\nAs a proof of this concept, we have [our own company's blog](http://carrot.is/blogging) running on this exact framework. This blog has hundreds of posts, all managed remotely by non-developers through a CMS, and yet it still loads instantly and all of carrot.is is a static site made on top of roots v3, can handle 50k+ requests per second, and is hosted for $5/month.\n\nThere's plenty of room for growth and improvement to the ease with which static blogs can be managed here, and if this is something you are interested in, please reach out because we would love to get some help making it better.\n. Yessir, it's documented [right in app.coffee](https://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9). If you want to change the default layout, you can do so by changing the string after `default` to point to the layout you want to use (or if you are making a template, just change the contents of `layout.jade`).\n\nYou can also bypass the roots layout engine and use jade's instead if you'd like -- running `roots new example --min` will give you a template that does this.\n. Yes, you can do that. That's the exact piece that's documented in `app.coffee`. Let me try to break this down a little:\n\n``` yaml\n# Layout file config\n# `default` applies to all views. Override for specific\n# views as seen below.\nlayouts:\n  default: 'layout.jade'\n  # 'special_view.jade': 'special_layout.jade'\n```\n\n`default` is unsurprisingly what's used as a default layout for all pages. You can see that below, commented out, is a **example** of a view-specific override. The key is a pointer to the view that you want to have a different layout (you can change this), and the value is a pointer to the layout you want it to have (you can change this as well). You can also add more of these lines if you want -- one for each view-layout pair.\n\nSo for example, if you had a view called `special_view.jade` in your views folder, and you'd like that specific view to use `special_layout.jade` rather than the default layout, uncommenting that last line would do exactly this. However, if you have different names for the view and layout that you want to do a custom override for, you can go ahead and change \"special_view\" to whatever your view's name is. Does that make a little more sense?\n. No problem, as always let me know if there's anything else that could be clarified!\n. You can do this with front matter. Just specify the layout in the front matter, relative to the post. For example\n\n```\n---\ntitle: 'whatever your post is called'\nlayout: '_custom-layout.jade'\n---\n\n:markdown\n  Here's the contents of my post!\n```\n\nThen then layout would be a file in the posts folder called `_custom-layout.jade`\n. An underscore before the file name causes it to be ignored from the compile process. This can be changed in app.coffee. @monkeez I'm not sure why you have your blog set up this way, but there certainly is an easier and more straightforward way to do it. If you run `roots new example_project --blog`, it has a folder structure that does what you need in a more straightforward fashion.\n\nTo solve the specific problem you're having, it's just about adjusting paths. When you set a layout through app.coffee, it starts looking in the views folder to find it, since this is where most layouts are (this could be changed if you think it's confusing). If you want to jump back up a level from the views folder and then go into the posts folder, you can do it with the path. So in this case, you'd need it to be `../posts/index.jade` as the key in order to find it correctly.\n\nFor reference, here's the line where it builds the path to the layout: https://github.com/jenius/roots/blob/compiler-restructure/lib/extensions/layouts.coffee#L61\n. So this is another case where you might want to use jade layouts if you are trying to do more complicated stuff, since roots' built-in layout system is very minimal -- handling partials and layouts is really up to the templating language creator, roots just covers the most basic case for languages that haven't done this. Jade however has great templating, so there's no need to use roots' templating if you have that. I showed an example of how you could modify the title in the other issue.\n\nHere, you can solve this in exactly the way I mentioned in my reply though if you want to stick with roots' layouts. Since what I said didn't seem to sink in, I made an example that does what you're after and uploaded it here. Hope this helps!\n\nhttp://cl.ly/RnK2\n\nTo be fair, jade is going through a restructuring of their docs right now and the docs for layouts are pretty much nonexistant. Here's what I could find: https://github.com/visionmedia/jade/blob/master/examples/extend-layout.jade\n\nIf you run `roots new whatever --min` it provides a good example of how to use jade's layout engine as well.\n. It's ok! This is good to hear, and it helps me to know where I should be making things more clear. Please feel free to ask if anything comes up that confuses you at all - I made this so it's hard for me to know what parts aren't as clear to people who aren't as familiar. Any bit of light that can be shed on this helps to make roots better for people just coming on : )\n. Yeah, I think jade layouts is the way to go if you're trying to do anything complex with layouts. We would have spent more time making the roots layout engine more robust if it were possible, but it unfortunately is not without writing custom extensions for each language that roots supports then keeping them maintained as the languages evolve, which is too much work for me at least. The way I see it, it's up to the people who write language preprocessors to include this functionality -- roots just provides a very base-bones base.\n\nGlad you were able to work this out though! And as always anything that you need help with or seems confusing feel free to ask\n. Also, if you are making a site that uses templates, it will make life much smoother to use roots' [built in template precompilation](http://roots.cx/docs/#precompile). I don't use angular and probably never will, but if you want to see an example of how precompiled templates can be smoothly integrated into a client-side app, there's a default [template for backbone/marionette here](https://github.com/jenius/roots/pull/232) that you can check out.\n\nAlso if you do have a good flow for angular set up, feel free to pull request your template, because although I hate both bootstrap and angular with a fiery passion, I am aware that many people use them, so having templates available can't hurt.\n. I think this is fine for an initial implementation, but we should also submit a PR to transformers to include this library so we can switch over once it's been merged.\n. Yeah I was thinking errors, commands run, and version number. Timing the compiles is a good idea as well though - I've been starting to think about ways we could start timing things out -- having a very quick compile is definitely high on the to-do list.\n. This might be a nice way to do error reporting - the `patchGlobal` function piqued my interest: https://github.com/mattrobenolt/raven-node\n. Yup, keen has a write key and a read key. I'd be happy to provide the read key for anyone that wants access to the data - we can perhaps add this as a note in the readme whenever we add the info about analytics. The write key is already in the source - I'd rather people do not write stuff to our analytics so we have accurate data, but if someone is being a douche, we can't stop it. Either way I'd rather publicize the read key than the write one, although they will both be available.\n\nThe data is all available through API calls, but comes back completely raw and you need to format the queries, so it might be easier for us to put together some sort of small analytics dashboard with a table or a couple chats that are built from relevant queries for people to check out, just because that makes it easier to actually see the data.\n. That sounds fine to me. If we wanted to make it a little prettier we could just jam some json results into D3 as well.\n. To continue pulling from yeoman's work, they use this little plugin to track analytics:\n\nhttps://github.com/yeoman/insight\n\nI'm not the hugest fan of using google analytics for it, honestly I prefer the way keen approaches it. Using GA seems like jamming the analytics into a web-based container, which isn't quite right to me, plus I don't love GA in general as far as displaying your data in a clear and concise manner, and I like that keen uses read and write keys along with a query interface, which let's us easily open up our data to the public. But if we want to get something in here initially, this might be a good temporary solution.\n. Yeah absolutely agreed - the requests def need to be async, I don't want the logging to slow down roots even in the tiniest way. I'm going to be working on integrating tracking into v3 over the next couple weeks, then probably backport to v2 : )\n. Make sure you have XCode installed through the app store, and that you have also installed command line tools (you need this for the C compiler) - [help getting this done](http://stackoverflow.com/a/9329325/666989)\n\nIf/once you have resolved it, please update this issue with what the solution was and close it out!\n. Sweet, glad that worked out. This is necessary for most things, so if you had issues installing anything else this might resolve it as well. Good luck with roots, and let me know if you need any help!\n. Yeah you're right. Can you add that in? No PR needed really it's not a controversial or code-related change, but you can PR it if you want.\n. This gives no details on how to install and the link brings you to a sign-in page. I think the [way they do it here](http://zespia.tw/hexo/docs/) is a little more clear.\n. pearfect :pear: \n. Done in release branch\n. It looks like one of the dependencies requires python. I'd try installing python then giving it another shot : )\n. hey @eternal-turtles, any progress here?\n. Great call declan, and sorry this has been such an episode @eternal-turtles! If it helps, it's much easier to use roots and many other node packages on linux - you can easily install this on a windows machine and dual boot : )\n. Hey @eternal-turtles - have you been able to resolve the windows issues here with @declandewet's advice? Just a status check.\n. Closing due to inactivity\n. I'd very much like to have the fs patch version you've been working on as the default, but I'd be interested to see what sam can make happen with this. Either way, would really like to have some sort of asset graph ready soon, I might start putting some work into the fs version as an alternate to this, and we can see how each is working out.\n\nDo you have any tips or fragments of code from your initial stab at it that I could pick up, or was it just the basics?\n. Hey @slang800, the more I think about this the more I realize we cannot make the fs extension work. I wrote a prototype that does manage to accurately pull the dependencies, but in order to do so **it requires a full compile**, because without that, the fs functions are not called. This means that in order to attain an accurate asset graph, the entire project needs to be compiled, which defeats the point of the asset graph in the first place.\n\nSo you could say _\"ok jeff but the whole project is compiled every time you start the watcher, why don't we use that pass to generate the asset graph?\"_, and this would be a reasonable question. But what happens then if I add a partial or piece of dynamic content to the project? Suddenly, everything breaks, or I have to restart the watcher. There are a bunch of situations in which the asset graph would need to be re-evaluated mid-watch, and telling the user to restart the watcher if things break is not a good enough answer.\n\nI would very much like to be able to create one language-agnostic asset graph, very badly, but I cannot think of a way at the moment that would allow us to do that and bypass the issue described above :disappointed: \n\nBecause of this, I'd say we should continue with what sam has here, and perhaps build in asset-graph support gradually by language. If we make some sort of \"asset graph orm\", a lot like many of the other components we are beginning to pull out, it would provide a framework for people who wanted an asset graph for a language we don't care as much about to contribute one easily.\n. This does not address what happens when you make changes to a jade partial.\n. How? The compiled html output is not aware of included partials, the source has to be analyzed in order to pick them up\n. Oh so you're saying this is in conjunction with the fs patch method? Sorry I didn't realize you were building on that idea, I thought you were proposing a straight html output read.\n. Could you add a few more details?\n. dood wheres the details are you at the computre?\n. Absolutely. I'm currently pouring quite a bit of work into [ship](https://github.com/carrot/ship), which is going to pull all the deployers out of roots and add a bunch more useful ones. This will also significantly clean up the interface, and allow custom extensions. This should ship with the next large release :smile: \n. I'm going to close this out - ship is under active development and will soon be integrated into the release branch, which will resolve this issue. I'll update you when it's ready @aawilson!\n. This looks good, just throwing in a :+1: and looking forward to getting these into the test suite!\n. Hm, this is an interesting one. So the issue here is that roots looks for the last extension it can find on the file (in this case 'essay', since this is a file extension) and uses the output type of this extension as the final filetype. So for example, if you have `whatever.jade.coil`, it will disregard the `output_type` of coil and only use jade's. In this case, it's disregarding jade's `output_type` (which is html) and looking for `essay`'s, which is not defined.\n\nIt might complicate the logic a bit to have it look ahead to determine if you have extensions for which no compiler is defined, but it certainly seems possible. I'll check it out this week\n. This has been pulled into the release branch and will go out next prerelease :+1: \n. http://roots.cx/docs/#multipass\n. Yup, you can tack on as many extensions as you'd like, as long as the languages are interoperable you should be in the clear.\n. I'm not exactly sure what you are unclear about, could you explain a little more clearly what it is that you are trying to accomplish and how you have tried to do it so far?\n. There is no craziness about it, it's very simple. If you have two extensions, it will try to compile them both, in order, starting from the right and moving towards the left. You must have a compiler for all of them at the moment if you are compiling a file, even if the compiler does nothing.\n\nSo if you have `.jade.erb` the file will first be run through the erb compiler, then the output of that is run through the jade compiler, and the final file format ends up as html, since that's the output defined in the settings for the jade compiler.\n\nPerhaps reading up on how roots' compilers work or taking a look at them in the source (lib/adapters) would make it more clear.\n. You need an xyz compiler for this to work. You make make the xyz compiler do nothing and output the same extension, but at the moment it will need another compiler.\n. Because I have never had a need to do that so far, and neither has anyone else that's used roots, so it has not been implemented. It's a little bit more complicated than you think. Usually, files are detected as either compiled or not compiled (in which case they are copied). Compiled files scan through extensions and attempt to find a compiler for each extension. In this modification were to be added, the flow would have to be modified such that each extension is aware of its left and right and whether it should be compiled or not. Far from impossible, just not currently implemented.\n\nIf you'd like for this to be a feature, feel free to open a feature request issue, and make sure to take the time to describe a variety of situations that could come up and how you would expect them to be handled (for example, 3 extensions, the middle one isn't compiled but the other two are).\n\nAlso I'm not sure if you intended this, but your last comment came off making you sound kind of like a dick. This is open source software, and here I am during vacation responding to this issue almost immediately and trying to help you - please make sure to keep things respectful.\n\nFinally, please stop responding from email and including your signature. If you're going to respond to github issues via email, get rid of the signature so things look clean, or just click through and respond on the site.\n. Closing due to inactivity and because we are aware of the 2 major issues causing perf slowdown and actively trying to think of ways to resolve them\n. This is actually a mistake in [update-notifier](https://github.com/yeoman/update-notifier/pull/20) which I noticed a while ago and just last week my PR to fix this was accepted. I'm sorry this is so annoying though, as soon as the next major release is out (very soon, we're already using prerelease in production at carrot), this bug will no longer bother you.\n\nThat being said, if anyone does want to test the prerelease version which it has accidentally notified you is out, feel free to run `npm install roots@2.1.0-beta1 -g` and you'll be living the dangerous edge release life : )\n. This is awesome, even got a test in there. Good work.\n. One-line `if`s are cool with me. This looks ready for merge, just strip that second commit : )\n. :thumbsup: \n. I'm down with this. It could fit nicely into the dynamic content extension, and shouldn't be too difficult to accomplish.\n. That's what extensions do, they hook directly in with the compiler: https://github.com/jenius/roots/tree/transformers/lib/extensions\n. Ah this is a good idea, I like this. I also think we should support a slightly more hands-off approach for people who just want to auto-generate a feed from a specific folder of dynamic content that will just generate it automatically, ya know?\n. Oh no, I'm thinking an app.coffee thing too, like indicate which folder you'd like an rss feed to be generated for and it would do it.\n. Yeah it would jjust pull the front matter and contents I think. Override would be possible through the method you described\n. I guess we could have field to fill this sort of thing in? Like\n\n``` coffee\nrss: [{ folder: 'posts', title: 'our great blog', description: 'blah blah blah' }]\n```\n. This should go into v3 as a plugin of some sort - still tinkering at the plugin interface, but it would need to have quite a bit of power...\n. Going to close this as it's not an issue with roots so much as a request for an extension. But it is on our list!\n. I agree. I would love to have this feature, I just don't have time\npersonally to implement it right now. If you'd be willing to contribute I'd\nbe happy to work with you! Otherwise I am doing my best to make things\nhappen, promise.\n\nOn Mon, Aug 24, 2015, 12:34 Ibragimov Ruslan notifications@github.com\nwrote:\n\n> @jenius https://github.com/jenius I think RSS should be included by\n> default(like in wordpress for example). Today i found an blog(\n> http://andyshora.com/) and this blog built with roots. I want get latest\n> updates and start searching RSS. And this blog actually doesn't have RSS!\n> It's ridiculous... RSS should be zero-config included by default.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/258#issuecomment-134140262.\n. Hey, sorry a little late on the response. Deployers are by far the most difficult part of roots to deal with. Integrations with third party services is often awkward without a clean API present, there is really no way to cleanly test them, and cross-platform issues come up frequently. I haven't been working on the deployers in the prerelease branch because we plan on entirely replacing them with [ship](https://github.com/carrot/ship), which is under very active development right now, including tests (which has been insanely difficult to accomplish and is taking a while, but will happen).\n\nSo I would say for now if you are looking to push to heroku and are running prerelease and getting errors, I might avoid the roots deployers until we push the upgraded version running on top of ship. I know it's a tad bit less convenient, and I am working hard on getting ship up to speed so we can get this upgrade in. Luckily, it's pretty straightforward to run the heroku commands necessary to make it happen manually - for anyone else having this issue, here's a short guide on how to push a roots app through to heroku if you are having deployer errors:\n- Copy [these files](https://github.com/jenius/roots/tree/master/templates/deploy/heroku) into your project, stage and commit them\n- Run `roots compile`\n- Make sure the `public` folder is _not_ in your `.gitignore` file\n- Commit and push if you have it on remote\n- Run `heroku create`, if you have not already\n- Run `git push heroku master`\n- ???\n- Profit!\n\nThis being said, I don't think heroku is actually a very good host for static sites, and have stopped using them entirely myself. Github pages is also free and handles static sites quite well, and roots does currently have a deployer for (`roots deploy --gh-pages` will do it). We also have a deployer for amazon s3, which in my opinion is the best option for static sites, coming soon with ship. Finally, we are working on a small and very cheap static hosting product that is catered towards roots sites/apps. When this is out it will make life even easier : )\n. This issue should be resolved in the beta4 release, sorry about that!\n. Base any PR's off the transformers branch : )\n. And this is where you can nail the change :smile: \n\nhttps://github.com/jenius/roots/blob/transformers/lib/extensions/dynamic_content.coffee#L66\n. haha sorry, should have come in earlier!\n\n```\ngit checkout --orphan transformers\ngit pull origin transformers\n```\n. Ah ok, forgot about that piece. If you get more into contributing to the code, I'll add you as a collab so you can just work off local branches : )\n. Haha must be the blonde-ness. So when you are a collab, you can just push a branch with your changes directly to the repo, then open a pull request from that branch. So for example if I was in roots:\n\n``` bash\ngit checkout -b derp\n... make some derpy changes ...\ngit commit -am \"derped it up\"\ngit push origin derp\n```\n\nNow you've got a derp branch on the repo, and in github you can switch to that branch and hit the PR button. @samccone also has a command line tool for doing this if you prefer: https://github.com/mojotech/pullr\n. Of course, that's what I'm here for! Pick away :smile: \n. Squash these two commits together and ready for merge\n. Looks good to me\n. I'm going to close this as it's covered by #283, but it will be taken care of!\n. Yup, Declan pretty much got it. Personally, I use [deploy](https://github.com/visionmedia/deploy) paired with an after script that runs `roots compile` in the folder it was deployed to, then set up nginx to serve the files as with any static site. Pretty much all you need to know is in that SO answer : )\n. I'm going to close this issue because it's a question (which we hopefully have answered) and not a problem with the code that needs fixing - just trying to keep organized :smile:\n\nOf course if you have any other questions feel free to ask here and follow up.\n. As a note to anyone watching, I'll be building out this feature this week\n. I'm going to close this one out, the new template customization will be eventually implemented but as a separate lib that will be pulled into rootz\n. Ya you're right, the .gitiginore actually isn't even copied over from the templates right now and I'm not totally sure why. This will be addressed in the templates refactor I'm going to work through over the next couple days. Since we didn't have a lot of people utilizing templates previously, that section has kind of lagged a bit.\n. So there is one issue with this that I feel like is worth bringing up. Some of the deployers (notably heroku, which is by far the most popular) require `public` _not_ to be ignored in order to work correctly. So while I prefer adding public to the ignores and deploying to a VPS that will run the compile for me, if you are deploying to a target that relies on having the public folder in git, having it ignored is not an ideal solution.\n\nWith [ship](https://github.com/carrot/ship), we are aiming to push files directly when you run a deploy in every situation we can so that deploys do not rely on git, but there are some cases where we can't do this (like heroku). Not totally sure how to handle this, but it's something to think about.\n\nMaybe the heroku deployer should switch to another branch, compile, remove public from gitignore if present, make a \"deploy\" commit, push just that branch to heroku, then switch back to where you were before kind of like gh-pages?\n. Hey @samccone did you ever figure this weird issue out?\n. i don't think i've committed public anywhere in ages - it's definitely preferred not to. At carrot we have done lots of projects with an ignored public folder and never run into issues.\n. Yeah, we caught this issue before, it's hard to handled removed files with the watcher sometimes. I'll let you grab this one like we discussed\n. Woah, haven't seen this one before. It looks like a C compiler error. What version of osx are you on, and have you recently installed the latest command line tools for xcode?\n. Ah great, thank god this worked because I'm certainly not a pro at debugging C compiler issues hah. Hope you enjoy roots, and let us know if you have any feedback!\n. Yeah, the underscore convention comes from rails actually, just a way to indicate that a file is ignored. But you don't have to use it, you have total control over what you want to ignore or not through `app.coffee`\n. I don't think this is the right way to handle this issue. New changes to roots should be made on the release branch, we shouldn't be patching master adding in deps that are not part of roots.\n\nJeet is a stylus library, and roots can compile stylus correctly, so if you are planning on running the template using the current stable version of roots, it should be included directly in the template until the release that adds more control over stylus libraries comes out (which will likely be this week).\n\nIf you'd like help getting roots to compile jeet, I'd be happy to help out with that because it shouldn't have any issues doing this. But the only changes that I want to accept to master at the moment are bug fixes.\n. Jeet is a stylus library - the autoprefixer integration you are using, which I built, is a stylus library as well. If you add two stylus libraries together, it equals a stylus library with a dependency on another stylus library.\n\nAlso, the version of axis in the stable version of roots **does not have autoprefixer**, so I think you may have incorrectly diagnosed the problem.\n\nThe current stable version of roots does not include autoprefixer, and also does not include interchangeable stylus plugins. If you would like to have autoprefixer and interchangeable stylus plugins as a part of the template you are using, it should be using the version of roots that has those features, rather than patching master to include them. That version has not been released, but there will be a prerelease soon. I'll update this thread once it's ready with instructions on how to install and use it. If you'd like to build your template into the current stable roots version though, you can't use features it does not have, which means no autoprefixer.\n. Yeah, I'd like to have it shipped within the next month or so, but I also want to make sure it is very well tested and checked through because I know people count on having roots work well with their sites. I have been [dropping preleases](https://github.com/jenius/roots/releases) that are fairly stable and have been in use in production on a few projects, including what we think is the largest current project on roots, [carrot.is](http://carrot.is). The latest prerelease is `2.1.0-beta2`, and can be installed with `npm install roots@2.1.0-beta2 -g` if you'd like to test it. You can roll back at any time to stable with `npm install roots -g`.\n\nThere's a lot of work going into the roots custom template system, and a lot of the ideas coming in are thanks to you pushing the envelope with what you're working on with the jeet template. Today I'll be working on the stylus library pipeline, and there will be a new prerelease out that supports it this week.\n\nFinally, if you want to be more on top of roots dev, prerelases, etc, feel free to watch the project and you will get notifications on activity. You can [find the current release branch here](https://github.com/jenius/roots/pull/181), and as you can see there has been a huge amount of work and discussion here already. We're really excited about the next release, and as you can tell from the huge number of feature tags in the issues section, have tons of great features being planned out and worked on :smile: \n. Hey @srsgores, thank you for putting the time into this pull request - these are all great changes and I would be happy to get these pulled in. We actually have stopped additional work on the master branch other than bug fixes, and all the active development is going on in the [next release branch, found here](https://github.com/jenius/roots/pull/181). There has been a ton of work going into it, and a lot of things have changed around internally as far as the organization of roots.\n\nOne of the changes we made recently was taking the new project templates out of the core and moving them into their own repos. You can find these repos under the [roots-dev organization](https://github.com/roots-dev), where I'm sure you'll recognize all the base templates you are familiar with. Would you be willing to make this pull request on the new template repos instead of to the current master? This way, we can get your work pushed out with the next release :smile: \n. Since you have PRs open in the relevant repos, I'm going to close this one. But these changes will almost certainly be merged in and ship with the next roots version, so thank you for your contributions! :+1: \n. Wow\n. Definitely agreed, I have noticed this as well and fully plan on having ship exit with a non-zero code.`roots compile` should also do this. Do you want to take a stab at a PR to resolve this?\n. Haha awesome, thank you @aawilson! Happy to jump in and help, it should be a one-line change once you find the right spot : )\n. I am not the best at debugging permissions errors in windows, as I haven't used windows in probably 10+ years, so I can try but I think perhaps @declandewet would know better than me...\n. It's likely because the new templates for projects are in the stable version of roots copied out of the roots core, which is probably in an admin directory (on unix it's `/usr/lib`). The next revision of roots stores all new templates at a user-accessible directory so this issue should not come up anymore in the next release : )\n. That is quite strange, not sure why that's happening - tbh it still does seem like a permissions error of some sort on your end, but I don't have any windows machines handy to try to debug on. Either way I'm glad we could figure out how to resolve it! I'm going to close this issue because we did find a fix, but I'll drop another update here once the next roots prerelease is out so you can try and see if that will resolve the base problem (hopefully it will with better `new` template handling)\n. Roots symlinks any non-compiled assets while in development mode so that they are not re-copied each time - it speeds up the process in development. If you are still having this issue, refer to fixes above :smile: \n. Yup - watch just re-compiles whenever you change a file. It makes a few little speed optimizations as well (like symlinking, trying to change only the affected files, etc). Good for development work.\n. Yep, you can drop the error trace into a gist and post it here, or put it in a markdown code block, that would make it much easier for us to find out what's going wrong :smile: \n. This looks like either an error with node or with your C compiler. What exactly was the command that produced this error?\n. Nope, it shouldn't be, it's not necessary to have couchdb to use roots. I'm not really sure what any of that stuff is, I've never seen the `silly` piece before either\n. For real. Is it just me or do we get a particularly high number of absurd windows installation issues that really have little/nothing to do with roots itself?\n. Yeah that seems a bit overkill. It just seems like you need a bit more config on your computer to get node and your c compiler running smoothly. Just googling your error turns up some stuff: http://social.msdn.microsoft.com/Forums/vstudio/en-US/42e33170-96ad-481b-afc9-f3ea176c10df/tools-version?forum=vsdebug\n\nAlternately you can use git-bash like declan does and you will have a more unix-like interface\n. Any update on this @wad2eq?\n. Ok, looks like you've come a good ways with this one, and best of luck with continuing to get things in order! I'm going to close this issue, but if there are any more roots-relevant issues feel free to drop a comment.\n. Closing as the v3 release is now the priority and we're designing new docs for it now :grinning: \n. Sweet, this looks good. Can you add a test for this?\n. Solution for this discussed in #302 \n. This would be a little different if it were merged to master. Really compile project should return an `err, res` signature probably\n. Oh yeah this line and code is long gone, and this fix is not compatible with the release branch. I think making the fix on the transformers branch might make things a little easier : )\n\n\u2014\nJeff Escalante\n\nOn Tue, Nov 12, 2013 at 8:00 PM, Sam Saccone notifications@github.com\nwrote:\n\n> oh man.. that is such a gross line @jenius \n> \n> ## +1 for in the bin \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/pull/290#issuecomment-28351399\n. Sorry @aawilson, I should have made this more clear in the readme/contributing guide! Thanks for taking the time to jump on this one :smile: \n. This is an interesting idea - I feel like it would fit better as an extension of some sort, although I have yet to make an extension interface for the command line. I do the concept of command line extensions would be worth exploring though for sure.\n. Closing as this kind of addition doesn't belong in roots core, but I still like the idea of a template generator!\n. Brutal issue - hopefully you can work this out. Please let us know if you solve it so we can update our windows install instructions/troubleshooting!\n. haha or rather 99% DOS, 1% UNIX\n. Well that's a clear error message with an easy fix - just [install git](http://git-scm.com/) : )\n. This looks like an issue with [jeet-roots](https://github.com/mojotech/jeet-roots) rather than with roots itself. I would file it there instead. Did the roots install complete successfully?\n. Awesome, glad this all worked - good luck getting the rest set up!\n. Definitely agreed that it should be configurable, but i think in general it does need to be ignored because bower (even though I don't use it I know people do)\n. Not everyone uses that folder. It's in all the templates ignored by default, but for those who do not use bower, they might want to use that folder name for something else.\n. /cc @slang800 why are we loading jquery on every page?\n. Oh yeah that is definitely relevant - you can remove the `livereload` function from your views that might help\n. +1\n. This is excellent, I assume tested and working (since we don't yet have watcher tests :grimacing:)?\n. I know i'm on it\n. Test for this?\n. ? there are tests in there for precompiled templates\n. Yeah, we are. It's going to have to be a package.json\n. Yeah, we're working on the gitiginore piece, there's some weird stuff going on there, but it should be working by this week. But yeah we could auto-generate a version-locked copy of the package.json on project generation, the question is like you said how we would automatically add them. Do you think it would be reasonable to just have jade/stylus/coffee in there by default (it is our default stack), then as soon as someone adds a supported extension and it's compiled for the first time, add it to `package.json` and `npm install`? It would be a slight delay, but would only happen once and we would be asking people to manually add things to package.json.\n\nAlso, we might be able to offer some after hooks as a part of [sprout](https://github.com/carrot/sprout) that would let template authors specify dependencies, or maybe only auto-generate the package.json if there isn't one already provided in the template?\n. So my plan for this at the moment is to leave the default jade/stylus/coffee stack as a part of roots core, all pulling the latest version, and remove all other compilers from core. All new templates will come with a `package.json` which the template author will have to keep updated as new compiler versions drop, but the user can always feel free to adjust the versions. All compilers will first be looked for in the local project, if not found they will look in roots core (and only be found for jade/styl/coffee), and past that just copy the file as a compiler has not been provided.\n\nI think we might need to modify transformers a bit to make this happen, but I'd like to get this modification out sooner rather than later because I think it's an important piece of ensuring that projects are stable into the future.\n\nInitially, all compilers will remain in roots core to avoid breaking changes, and they will all be removed in v3.\n. This has been resolved in roots v3, since it is a very breaking change it has to go in the next version. Closing this issue though since it has been solved.\n. This actually shouldn't be happening with v3 since deploy doesn't change any files\n. Interesting idea - i could have the url come out from ship if present and we could hook into this.\n. Wat\n. Can't replicate this\n. Is this still happening?\n. Also, it's `2.1.0` - you should be able to install `2.1.0-beta4` if you want, but as sam said just go for stable right now.\n. Oh yeah I'm sorry, this is an error with axis actually that was introduced in the latest stylus release. I have a fix up for it, but it hasn't been shipped yet. I'm doing a huge refactor on axis right now that fixes and cleans up a lot of stuff, but realistically it's going to be a week or more before that's ready and the docs are updated appropriately. I'll get a patch release that fixes that thing out this afternoon.\n\nAlso if you are thinking about a PR, please make it to the 2.1.0 release branch - this is where active development is going on and we're hoping to have it merged in the next couple weeks.\n. should be fixed as of v0.1.7 of axis, try an npm install and run again : )\n. Indeed you are correct, let me take a look at this. In the meantime, use jade layouts if you are trying to do complex things with layouts. The basic roots layout system is just a patch for languages that have no layout engine. If you check out the `--min` template it's set up to use jade layouts and works quite nicely.\n. Ugh yeah error reporting in coffeescript is really bad right now, this definitely needs to be addressed. I'm not going to go through your project and debug your coffeescript, but we will try to fix the error reporting. For now I would diff between the last commit that worked to find the offending code.\n\nEDIT: Yes, good call, and this is something we need to work on. It's mostly an issue with snockets, but that doesn't mean we still arent responsible.\n. heroku was acting a little weird, but is working now after a small weird patch. Whoo!\n. Quality codez right there. I'd like to see an option for transvestites though.\n. did you just open this #303 \n. what the f you told me that deployer was set\n. ![](http://dogesay.com/sabodoge)\n. nice issue bro\n. oh hold up this is the best thing ever. holy shit. just saved us so so much work\n. wait so does this precompile templates, or is it just the same thing as transformers?\n. ah shit nvm. doesnt seem like its worth replacing tranformers\n. this is a snockets issue, not a roots issue - can you file this in snockets?\n. Make sure your layouts are ignored and the project will compile. They should be ignored anyway, as they are layouts. As long as there is a dependent that isn't supposed to compile to public, it should be ignored. And if it is ignored, it will recompile the project on change.\n. Agreed - we can also merge this to master now :smile:, sorry the branch situation before was whack\n. Was about to type the same thing. I think this should be resolved.\n. Do we want to have tests for the error formatting perhaps?\n. Yup, compiler options. Sorry this wasn't yet documented (still a new feature, was only a patch originally), but you can do this:\n\n```\nmodule.exports = \n  stylus:\n    plugins: [module.require('whatever')]\n```\n. I will :heart: this more if the commits are in present tense rather than past :grinning: \n\nOtherwise looks great!\n. The preference for present imperative tense commit messages [comes from git itself](http://stackoverflow.com/questions/3580013/should-i-use-past-or-present-tense-in-git-commit-messages). I make all commits to this repo in present tense, and Sam does as well if I'm not mistaken. The only reason I mention it is for consistency :grinning: \n. Looks good!\n. Thats why you compile before deploy. Alternately, you can add `livereloadEnabled: false` to `app.coffee` and it should disable the reload stuff.\n. Oh yeah, agreed.\n. :+1: can you rebase this off master before merge?\n. I'm not a huge fan of the separate errback pattern, would rather have this as a node-style callback (single callback with error passed as the first param), but roots doesn't currently expose a public API and you've definitely spent enough time with this PR already, so I'd say this is ok to merge.\n\nAlso, thanks so much for your hard work getting this is - really appreciate it :heart: \n. So the repository default piece is a consequence of upgrading to beta versions before the stable, so sorry about that one. Normal users will never get this error so I'm not super concerned about it. The way to fix it is to remove `~/.config/configstore/roots.yml` or the equivalent on windows.\n\nAs for the rest, I'll have to check it out later today!\n. ![](http://magicunlimited.typepad.com/.a/6a00d83451dfaa69e20120a685d9dc970b-pi)\n. Don't install prereleases, install the 2.1.0 stable\n. I don't get what you mean by 'the old beta-2 code'\n. When you generate a _new_ roots project, it pulls roots' current version number from its package.json and drops it as a comment in app.coffee so you can keep track of what version it was created on. This does not update when you upgrade roots, it only is added once, upon generation of a new project.\n. **That** makes no sense. When you run `roots -v` what do you get?\n. Ah yeah, that's something wrong with npm though, not roots :confused: \n. Yup, so you'll need to clear out that config file one more time and let that reinitialize under 2.1.0 stable and you should be set\n. so what are the contents of the roots file that's created?\n. hah, im sorry! maybe there really is something up with windows and the npm cache...\n. No, you need to install git yourself, npm does not install it.\n. I don't know, I feel like that error was super clear... do you really think it's necessary? If so, could you submit a PR for this? You definitely deserve the credit for this either way since you pointed it out :grinning: \n. You can't install git through a package.json, so I think docs would work better here. And that's an entirely fair point.\n. Ok, I didn't realize this was such an issue - I thought you had it cleaned up. Can you give me specific steps I can use to minimally reproduce the issue? I'll have to find a windows machine to test on. Also it definitely could be the only one that uses configstore, its not a super popular library really.\n. Thank you @snowe2010!\n. Thank god, you are the best sam I had no idea what that was and it said Window NT which was very frightening :two_men_holding_hands: \n. We have like 20 issues with running roots in windows right now, I'd like to consolidate them a bit so closing this one. We'll be working on getting v3 running smoothly in windows over the next couple weeks, just wasn't the first priority during development.\n. Interesting. But once we get into that, we need to be monitoring a bunch of other things. It should also be disabled during a pull, etc. Is this territory we want to jump into, or just say you know what roots watch does, if you open a second tab instead of stopping the watcher when you want to commit, pull, rebase, or interact with git, it will continue compiling?\n. I'm going to close this because I don't really think it's possible. If you can figure out a way to @samccone toss a PR in though!\n. Ok, figured out the best way to do this, and a commit will come in with the fix shortly. Npm actually has `prepublish` and `postpublish` tasks, which I'm leveraging to do the compile. That way before roots is published, it's compiled through to js automatically, which is awesome.\n. So after using pre and post publish I realized that this is actually not the way to go because when you run `npm install` locally, it also runs prepublish (and not postpublish). This is absurd and seems like a bug to me, and I filed an issue but it was closed and they said it was a deliberate decision. I have changed this over to using a makefile, and things are much cleaner this way.\n. Yeah, what bothers me here is that anyone who clones the repo down will run `npm install`, then everything will be converted to js, and they will likely work on that code instead. It's habit when working on node projects to pull down and run npm install, then put in work. In order to avoid this, you'd need specific instructions which many people might skip to run it with extra args or revert.\n\nI also have found myself running `npm install` locally a good amount, whenever I update dependencies and such - it's been really annoying during development to have to continuously revert it. What I ended up doing was using a [makefile like this](https://github.com/carrot/sprout/blob/master/Makefile) (hasn't been committed to roots yet) that eliminates both gulp and npm tasks. It's not like most people cloning down roots will be publishing releases anyway, so they should not have to see or deal with any of that process.\n. Yeah it does suck, I opened an issue in npm to see if it would help, but it just ended up being closed. Ah well :cry: \n. Very strange... I feel like this would be tough for me to debug, is there any way you could look into this one @slang800?\n. Yeah I'm going to be moving hard towards browserify starting when v3 is released. Using commonjs for everything would be huge, and also allow interop between app.coffee and client-side code, which opens up a lot of opportunities. I never really liked bower, had been using require with cdnjs previously.\n. Give me a couple weeks and I'll give you a very compelling reason to try browserify :grinning:\n. Verified as a bug with current version 2. Should be quick to patch if anyone wants to take a stab at it - if not I'll grab it when I get a chance.\n. Closing this out due to inactivity and the fact that we're now working on v3\n. Yeah it just does a git clone. This should work...\n. Oh hah, yeah it's not. I guess we'd have to add an option for this: http://stackoverflow.com/questions/1911109/git-clone-a-specific-branch. Would just add another param which would enable the `-b` flag\n. Opening a ticket in ship for this (reffed above), it will be a feature in roots v3 - thanks @ajkochanowicz!\n. Also I wonder if we could have a simple test or two for this...\n. why not?\n. I think the actual issue here might be that this computer has overridden the slash character between paths to a weird W thing. This is likely not recognized by node, to be honest. I think changing the path separator back to the standard one for windows might help the paths to be found...\n\nAnd as for the issue you pointed to @declandewet - that was an issue with your computer and npm, not roots. I don't think that applies to this one.\n. @Compiztab had you installed a beta version at any point?\n. Yeah I took a browse through this a couple months ago, is some nice work\n. Closing due to inactivity - but wintersmith is great!\n. I've got a comparisons section in progress [here](https://github.com/jenius/roots/blob/v3/docs/features.rst#comparisons). Roots v3 has plugins and is much lighter, but is still in beta. If you are interested in using it, check out the v3 branch! We're moving towards a v3 release that will come with a fresh new identity, massively upgraded tools, and if it makes you feel better, it will probably boost the star count significantly, although in truth the number of stars has nothing to do with the quality of the software.\n. This really is crazy. Looks good though.\n. Done, https://github.com/samccone/infestor\n. This looks like a dependency error of some sort - let me check it out\n. Woah are you sure this isnt just something with your computer?\n. Weird... well either way, closed the issue because it's not roots-related - glad you could find a workaround for it and I hope that gets patched up in node at some point!\n. node-gyp is the way that you link native libraries in with node, so it could potentially arise from different C compiler setups on peoples' computers\n. Thanks for the followup here @svallory - I'm sure anyone else experiencing this issue will find this super useful, and glad you found some good additional info!\n. Yeah, roots doesn't use a preinstall so I'm not shocked, but good to know either way!\n. This is a question about how to use jade which doesn't exactly belong in a roots issue. But to do this, get the array into jade by adding it to your locals, then iterate it with jade - http://jade-lang.com/reference, scroll down to \"iteration\".\n\n**app.coffee**\n\n``` coffee\nlocals:\n  acknowledgements: ['john', 'suzy']\n```\n\n**index.jade**\n\n``` jade\n- each name in acknowledgements\n  p= name\n```\n. That's ok I aint mad, just closing it for relevance sake\n\n![](https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRzb_DSSFTvn3_NYbWb-q-dxHcvGyU3Ecof6MIOTfPxx2t9NS3c)\n. No, you need to restart the watcher when app.coffee changes, much like in rails if you change an initializer, you need to restart your rails server - this is the way that roots is implemented as you mentioned.\n. We could - I'm thinking about having this happen in v3 but it's not a super pressing feature for me at the moment\n. This applies to v3?\n. It doesn't, it initializes a new git project in the repo, no history is conserved...\n. Hey @samccone this is resolved correct?\n. I feel like we figured out what the issue was and it was something super weird\n. Oh right. Ok well that should be a quick fix to remove it really. Do you want to grab it, or I can?\n. If v3, this is an issue for sprout\n. This will be fixed before the v3 release, which is set to go down in the next month or two. I know this is a pain, and I'm sorry! In the meantime, `rm -rf .git` should clear it out for you.\n. This is a sprout issue, opened there\n\nhttps://github.com/carrot/sprout/issues/39\n. Yep, we're in the process of removing a lot of these extra deps, which should make installs much smoother. When this is finished, there will be a big update on roots.cx - sorry about that!\n. Do you know if there's a solid way to do this cross-platform, and if we would be able symlinks to work correctly and no bugs to happen on windows? I agree that this would be nice, as long as there was a symlink in place, because you definitely want to be able to see public whenever you want, and also to be able to deploy that folder.\n. I think he did actually cite his source as the internet if I'm not mistaken. I know for a fact that tmp is cleared on restart, but not totally sure about at regular intervals.\n. Looks like he got you with a flawless citation in that case. Rough. Statement verifies itself.\n. Closing due to inactivity and to stay focused. Sean if you are still keen on this feature feel free to submit a PR and we can revisit the discussion, just make sure it is thoroughly tested cross-platform!\n. :+1: \n. Also sean we're working off the v3 branch these days\n. I dont think this is going to work out. There are a significant number of breaking changes, and every single file has been gutted completely and rewritten. If you are still convinced and can get this branch to a point where the commit log is clean and everything works exactly the same, I'd be impressed.\n. You mean to master? This doesnt include anything breaking?\n\nEDIT: Looked it over, everything looks good. Made a couple comments\n. Yeah I mean like I mentioned earlier I don't totally see the point here since really everything is being entirely rewritten, but if you want to work on this @slang800 I'm ok with that. So far the changes coming through have been pretty useful anyway, mostly additions of stuff that doesnt exist at the moment in v2, or modifications of things that did stay so I'm cool with this.\n. Like for a precompiled template you mean?\n. Quick fix here - wanna grab this one?\n. :+1: \n. No longer necessary due to github analytics\n. I think this issue is a clone of https://github.com/jenius/roots/issues/334\n. I don't think it's possible. Anything could be a roots project. It just compiles files, and you can define custom compilers so there's not even a list we can check against.\n\nI feel like the closest we could get is warn 'this doesn't look like a roots project, are you sure?' if there's no app.coffee, but then we'd need to store their answer somewhere so it doesnt keep asking and annoying them if they just arent using an app.coffee. Seems like way more effort than is worth it.\n. Yeah for a tiny or single-page project there is definitely no need for app.coffee. And we are using custom compilers at carrot : )\n. This seems to be specific to your machine, and I don't think I will be able to debug this remotely, unfortunately.\n. I'm sorry - wish I could help more! It seems like you have some permissions errors with node itself - try checking the permissions on the directories that are listed in the error message to get started.\n. Yeah it's quite similar. OSX is unix-based so you'll be right at home.\n. Actually it is -- it's called Darwin, and it's open source: http://en.wikipedia.org/wiki/Darwin_(operating_system)\n. I think this would be the spot to start :grinning: \n\nhttps://github.com/jenius/roots/blob/v3/lib/local_server.coffee\n. Ping for progress here, this would be still great to have!\n. Cool, thanks for the heads up @devinmooers. We have an idea for integrating wordpress but compiling out as static through roots in the pipeline too so don't tune out entirely :grinning: \n.  It's got to be roots core. It would replace the current watch and reload system.\n. Still would like to make this happen. Eventually will look into it when I have time, promise!\n. So browsersync has it's own server, which would mean dropping charge and causing a number of breaking changes. However, its server [accepts middleware](http://www.browsersync.io/docs/options/#option-server), so it appears as if we could make it behave exactly like charge by just importing charge's middleware.\n\nI think this won't be super difficult. Going to take a stab at it soon!\n. So integration is moving along. The issue though is the same issue we have with our home-made reloading system, the dependency tree and compile pipeline.\n\nLet me explain. When you reload browser-sync, you can pass it the name of a file or multiple files to reload. So for example if you detect that `foo.css` changed, you would pass browsersync something like `bs.reload('foo.css')` and it would do its thing with the injection etc. Now here's the issue. Let's say you make changes to a jade layout file. We would have detected a change to `layout.jade`. However, this needs to be changed in a number of ways. First, it needs to be translated to its output path, which in this case is nothing since the file is ignored. Then it needs to pull in all its dependencies (every other file that uses the layout), which we have no way of attaining, and it needs to reload those files.\n\nSo basically, we cannot use browsersync to its fullest speed until all roots-supported compilers also output dependency trees, or we devise a method to make them all do this behind the scenes, and then after that until we make another set of changes to roots that allows us to track and use these trees for reloads and compiles.\n\nThat being said, there are two things that can be done here. The first is to try to approximate a couple use cases in which we can in fact reload just a single file, and for any cases where we can't be sure, reload everything. This was what we did in the previous version of roots, and while it ensured quicker reloads for a small number of use cases (like a single html view being changed), it also produced a number of bugs for edge cases where dependency reloads were not triggered and the watcher would have to be restarted. In this version, we decided to reduce bugs and simply reload everything each time the site changes.\n\nFor now, I'm going to move ahead with the integration and simply set it to reload everything each time, as it already does. As improvements come down the line and eventually we can perhaps make use of dependency trees, we will be able to take advantage of a little more speed out of browsersync, which will be great. Until then, the functionality will be there waiting for us.\n\nFurther discussion of the \"dependency tree\" issue can be found here for those interested and following along! https://github.com/jenius/roots/issues/586\n. @calebeby currently there isn't an option to configure browsersync, although if you'd like to make a pull request to add one you are welcome to, [the logic is here](https://github.com/jescalan/roots/blob/master/lib/local_server.coffee#L31). I'm not sure I understand the need to do this though, isn't this an issue with rails/turbolinks?\n. @calebeby honestly it would probably be better to just use spike-pushstate. I can fix it to work with the latest version if you want.\n. @calebeby it will definitely not work with roots (sorry, i was confused haha), but [this project](https://github.com/djeglin/cygnus-js) would!\n. Closed in 3.0.0-rc.2 release\n. Great, this looks like exactly what I was planning on adding as a fix when I filed that issue - thanks for the good work @nathanharper! Signed off to merge from me, unless @samccone has any objections\n. Not totally sure I agree there. The printer in v2 at least is the point that all errors flow through, so it makes sense that the handling would be there. Is what you're saying that it should be like a separate module, in a separate file thats required into the printer?\n. All right, lets get this bad boy shipped - thanks @nathanharper for a great contribution - this will be a part of the next release!\n. Have you taken a look at the architecture of v3 projects? It's actually quite similar to what you proposed here, but with a slightly more simple way to require compilers in locally, and without the part with running everything through app.coffee, just because I'd like to keep app.coffee simple and clean for people working on simple projects.\n\nAlso creating a new project runs through [sprout](https://github.com/carrot/sprout) rather than git clone - makes the interface a bit nicer and provides more options for customization of templates.\n\nBUT I have been working on making the public API very strong for v3, so I think something like what you are proposing there would be possible if you just made a template that had app.coffee configured differently...\n. Oh yeah, npm install is required for roots projects using any compilers in v3, so it would work that way : )\n. Just to ping you sean, there are some _major_ architectural changes going in on v3 this week, specifically related to allowing extension the roots core in the most robust way possible. These changes will make it possible for us to strip out **all features of roots** other than compilation. That means dynamic content, precompiled templates, etc. will be outside of core and loaded in as extensions.\n\nWe've spent a while scheming on these changes and verifying the extension API across a range of situations, and I think this will make roots more modular in a way you will be very happy with. Ping me with an email or gchat if you want to talk about it :grinning: \n. Yeah, definitely understand. I want to get the hooks API in place, then I'll make sure it's well documented and we can start building little extension packs. The top ones on my list are dynamic content and precompiled templates just to get v3 to a spot where it's just about feature-complete, but there's a lot of room and ideas for additional expansions beyond that\n. ``` bash\nalias roots-zip=\"zip -r public.zip public\"\n```\n. Export as pdf\n. I don't think \"zip file\" is an appropriate deploy target\n. No it's not. Making a zip file does not deploy a project. It might be one step in the process for deploying some projects, but it's not a deployment. If you have a full deployment process that includes zipping a file, that might be appropriate to add to ship, but I don't think just zipping makes the cut.\n. ahahaha\n\nfine then make an email deployer. but make the whole deployer not just the zip part\n. Why don't we close this thread and open up an issue in [ship](https://github.com/carrot/ship) with a proposal for an email deployer.\n. Closing this, discussion can continue in the ship repo.\n. It certainly isn't an issue with roots itself, if anything it would be an issue with npm. Roots is not even running at this point, npm is running to install the dependencies.\n\nSo let's dig into this. It's failing specifically on the git clone command, you can see the full command printed out there. Try running that command manually outside of npm and seeing if it still runs into the same error. It could be an issue with permissions, something with the git setup, or perhaps with the way the path is being used. Code `128` with git is just a general purpose error code, so really it could mean anything. As long as you are able to get `git clone` working outside npm, it should work inside, since you can see from the error trace that it's simply running that command through bash in a child process.\n. Woah, yeah thats super weird. I'm pretty sure roots is well under 10kb total (this will decrease significantly with v3), you must have a very small amount of space there or some other weird issues going on...\n. Hey could always use digital ocean! I can verify that it is cheap and 100% roots-compatible\n. Good news ladies and gents, we are all set up with readthedocs, and the documentation is looking truly wonderful. It is now desktop and mobile compatible and will also keep track of the exact docs for each tagged release, if I'm not mistaken. Whoo!\n\nhttp://roots-v3.readthedocs.org/en/latest/\n. Any update here?\n. Nah, not really relevant anymore with v3 - i wouldnt worry about it. Thank you though!\n. Only if someone is actually going to fix it, unfortunately I am not able to at the moment and I'd rather not have a stagnant issue sitting around forever.\n. Yeah going to re-close, you can re-open into `2.x` :grinning: \n. Yes, I have been keeping tabs on brunch for a while. It's missing multipass compiles, which is really important to my future goals for roots and would require quite a bit of core modification to add, and precompiled template support, which also would be difficult to add. I like brunch, and it looks really nice, but it's not going to be something that replaces roots in my book.\n. :sparkling_heart: :facepunch: \n. I understand what you are saying entirely. I have also been aware of the existence of both brunch and wintersmith for a long time before you discovered them, and spent time checking both of them out and exploring the options. I have very good reasons for building roots that I have spent quite a long time thinking about and discussing with my employer, carrot, who has invested quite heavily into roots as well and will continue to do so for the foreseeable future.\n\nIf you'd like to talk about those reasons, that's fine. I am also a developer, I also don't like duplicating things when it's not necessary, and I hope you've found in the past that I am quite able to have a reasonable discussion about whatever topic it is that you'd like to bring up. If you'd rather go quietly file issues in other projects saying that they 'seem more mature' and that you'd like to and abandon this project, I can't say that I'll respect that approach, but it's your time and you can do whatever you want.\n\nMeanwhile, I'm going to be focused and spending all my time and energy building roots into the best compiler of all time with the help of all the wonderful contributors and my good friends [doge](http://dogesay.com/wow) and [r kelly](http://www.sickchirpse.com/wp-content/uploads/2013/03/R.Kelly-Ignition.jpg). :v:\n. Haha of course -- I understand. Code is always a work in progress. Always happy to discuss roots' goals and future features in the works if you are interested as well, but it seems like we may have already lost your interest.\n. I am a fan of the way it uses workers to take advantage of multicore if present, was thinking of porting that in eventually\n. @samccone done - good catch\n. Huge step forward for v3. Dynamic content and precompiled template extensions already built on the API here. Still plenty of work to go to ensure that this is well-tested, well-documented, and easy to use, but that will be happening quickly.\n. test of any sort?\n. Fair enough. Did you manually test it I assume? I'm ok with pulling this in as long as nothing breaks of course.\n. This is a v3 issue by the way\n. Fixed on the v3 branch, will be shipped out next release :grinning: \n. Good news -- there is full support for setting any compiler option in the next version of roots (v3) - you can check this out on the v3 branch, there is already a working prerelease out : )\n\nClosing this not because it's not a valid suggestion, but because I entirely agree and it has been implemented.\n. If you want to test it out, try `npm install roots@3.0.0-rc.0 -g` - you'll see that a number of things have changed around. It's not yet a feature complete match of the current master branch (v2), but it should be in the next couple weeks :grinning: \n. Opening this in the right place, closing here\n. Closed by release 3.0.0-rc.2\n. Ah weird. I wish that dropped a better trace... can you figure out what's causing it?\n. Ok this one is ready for review @samccone \n. Agreed, this is definitely something I'd like to support in v3, good suggestion. For the apps that I work on that do this, I've set up nginx and had it proxy_pass to the port which has worked well in the meantime. Either way we'll definitely get this done and I'll let you know when it's ready.\n. This works through [charge](https://github.com/carrot/charge) in v3, our upcoming release. Whoo!\n. This is awesome. Like sam mentioned, these are all things we are working on (except for potentially hash digests, which I hate, but I would welcome work on them anyway for others). As you may or may not know, [Carrot Creative](http://carrot.is/), the company I work at, is sponsoring roots heavily and as an agency have many similar needs, and have already moved a lot of our dev over to static/api builds.\n\nThis is a great reference issue, and as we ship out each of these features, I'll ref back here. Thanks brian!\n. @brian-mann You're right of course, I mean I gettt why they exist... I just have so much hatred for the rails asset pipeline that if this were to be supported by roots I'd want to to be vast amounts easier to manage. Which I think is possible without a doubt, but probably a lot of discussion before we could hit this.\n. I think getting a solid assetgraph integration will be a big piece of roots, but they are not exactly equivalent if I'm not mistaken.\n. Yup, I think this is going to be a huge and very important piece of roots down the line. Looking forward to seeing some more integration!\n. Ok so an update here -- we've got everything checked off this list with the exception of sprite generation, source maps, testing things, and a couple of specific requests for deployment.\n\nFor sprite generation, I don't use sprites anymore for anything, to be honest. It's all svgs over here, and if you need super speed, inline them. So I have no interest at all in working on sprite generation. If someone was interested though, this is something that could definitely happen through either a stylus plugin, or a roots extension, both of which have plenty of documentation on how to make them for those interested. There's already [one here](https://github.com/selaux/node-sprite-generator) that doesn't fit the bill perfectly but could probably be forked into what you need quickly.\n\nFor testing, I feel like @samccone's [pioneer](http://pioneerjs.com/) is the best choice for integration testing, which is what you are probably trying to do on the client side. If you want to set up other tests still like mocha/chai, you can easily do this yourself and ignore the folder so it's not compiled by roots. It's also possible that an existing structure could be added to a sprout starter template like the current [base](https://github.com/roots-dev/base) if people were interested. Really, roots needs no special handling for testing, you just add the test folders, add an `npm test` task, make sure they are ignored from compile, and you're good to go. I think what's really being requested here are starter templates with test folder setups present, which can be contributed by anyone fairly easily using [sprout](https://github.com/carrot/sprout#writing-your-own-templates).\n\nFor source maps, this is something I want to have working before release. I have implemented source maps fully in accord, so now it's just a matter of merging that pull request and getting them integrated in with roots. This should be happening in the next week or two.\n\nFor deployment, I think these requests depend highly on your deploy target. For example, if you are deploying to [netlify](https://www.netlify.com/), which has been our primary target for the past few months, they keep full copies of the deploy history, and gzip your assets, send them to a CDN, etc, so it would be silly and redundant to do this also from the roots end. If there are other targets that would benefit from this (like if you are deploying to your own VPS), these optimizations would be included in that target's deployer in [ship](https://github.com/carrot/ship). As for executing arbitrary commands before/after deploy, I think npm scripts are the best place for this. For example, you could include an extra ignored folder called `deploy_hooks` and drop your scripts in there, then make this npm scripts:\n\n``` json\n\"scripts\": {\n  \"deploy\": \"node deploy_hooks/before.js && roots deploy public -to s3 && node deploy_hooks/after.js\"\n}\n```\n\n...then just run `npm run deploy` whenever you need to deploy the site. The VPS deployer, which is currently in progress, will also have before and after hooks built in the the ship configuration which will allow you to run a script either locally or on the remote machine you are connected to.\n\nSo overall, I'd say we've got everything we want in place other than source maps, and some extensions that could easily be contributed by those interested but that I wouldn't use and therefore don't have much interest in building. Which is great. That being said, as long as nobody has any objections, I feel like once source maps are merged, we are safe to close this out :grinning: \n. Wrong place to post this @slang800 but thanks that sounds good! Make sure to submit a PR for this.\n. Ok, let's keep that discussion in accord rather than here.\n. Ok so sourcemaps have been implemented and are fully functional in the sourcemaps branch. This will be merged and shipped out tomorrow. Pending a bit more polish on the docs site and some small adjustments to the deployment script, we will be merging v3 and going public with it. All that being said, I'm going to close out this issue for now. Thanks so much for bringing all these things up!\n\nIf there are any other issues here you'd like to see that I missed for some reason, we should open a single issue to discuss that feature :grinning: \n. Test?\n. Good idea. I'd definitely like to have this as a part of roots.cx as well. For me, the ones I can remember (I'm sure there are more)\n- http://carrot.is\n- http://markup.im\n- http://www.rainbows.io\n- http://everythinglulu.com\n- http://roots.cx\n\nWe also have a boatload of client work that we do with it at carrot, but a lot of them are short-lived campaigns that don't end up being up forever. We don't usually maintain things for long periods of time here, just build.\n. Awesome! I'm going to start working on one with the v3 prerelease (and I know sam is too) very soon as well, so we can start adding those to the list too, which should be exciting. It's still a little ways off from mainstream release, but once it gets there it will be a big dealio.\n. Closing because it's not an active issue with roots, but glad this thread is around! This will be used in the new roots site we're creating for the release of v3.\n. We'll figure that out once the site has even begin building but I assume yes : )\n. Is this still relevant?\n. yup\n. Closing this as project structure has changed a lot since, and it has been ignored forever. I'm still ok with this change if someone wants to reopen and pull it back in though!\n. Well done on the preview, and thanks for logging this. What is it writing to the image files? Do they open in preview at all? Are they zero bytes?\n. Weird. Ok we'll have this patched up soon, sorry about that! Sort of a critical issue haha\n. What do you think it is @samccone?\n. Yup! Sorry, v3 is far from ready for public use and not totally documented yet, but all external functionality has been moved out from core. To use precompiled templates, you can use the [roots-client-templates](https://github.com/carrot/roots-client-templates) extension, which has been tested and is working with v3 : )\n. Ok so the logic we need here to resolve this is as such:\n\n```\nif there are any extensions that are compiled, use the last extension\nelse use all extensions merged with a '.'\n```\n\nRight now it simply uses the last extension without any of that logic. Should be able to get this patched fairly quickly tomorrow along with a test case :+1: \n. Fixed on the v3 branch, will be shipped out next release :grinning: \n. Closed on the v3 branch, will be shipped out with the next release :grinning: \n. Ah that's weird - thanks for logging this. Will take a look!\n. Could you clarify that last comment a little bit?\n. Ohh hahah wow that is wild\n. Hey @dapetcu21 is there any way you could provide a minimal sample project that consistently produces this error, zip it up, and drop it here? That would be immensely helpful :sparkling_heart: \n. Yeah I did see it a couple times in the last test I wrote. I'll figure out what the deal is. Just closed out a bunch of filename issues, going to tackle this next - I'll try using your project. Thanks!\n. Since fixing up your project (the PR I just put in) I have not been able to reproduce this at all...\n. Let me know if you are still able to reproduce this after the fixes!\n. Haha ok, we'll close it for now. If it comes back up, we can re-open :grinning: \n. Hey I would love it it were fixed, but I just personally do not have the time or interest at the current moment to do so...\n. Ok @samccone et. al - ready for review here. Tryna merge this bad boy and close out a boatload of issues.\n. More details about your computer/os etc?\n. `node_modules` are ignored automatically on v3. Perhaps you are using bower as well? If you have a giant file tree being watched that doesn't need to be, it needs to be added to the ignores. You can define `watcher_ignores` in your `app.coffee` file to do this.\n. You may have installed the wrong version of roots if that's the case, since v3 does auto-ignore node_modules. If you run `roots -v` and its `2.x`, you are on the wrong version.\n. Ohhh man it looks like a refactor somewhere along the line dropped `node_modules` from the default watcher ignores! woah, pretty big mistake there, thanks for pointing this out.\n\nhttps://github.com/jenius/roots/blob/v3/lib/config.coffee#L58\n\nDo you want to submit a PR to fix this and claim the glory and credit?\n. Yup, I'm going to be taking a look at this today and early next week, I've noticed it as well :cactus: \n. Ok this should be resolved on the v3 branch, in my testing, watch has never consumed more than 2% of the CPU now. Fix will go out next release.\n. Yeah you're definitely right, we were talking about this issue this morning and are aiming to patch in a fix to both today. Thanks for pointing this out guys, this is super helpful!\n. Ok looks like this was some sort of weird fluke because I can't replicate it. Closing for now.\n. Just replicated it never mind\n. Ok now I can't replicate it anymore\n. The current stable version of roots uses whatever directory you run `roots compile` in as the base directory to be compiled. v3, which is in progress and has had several prereleases but is not yet stable, accepts an root argument on the command line to `roots compile`, so you could run `roots compile /Users/doge/projects/foo-project` from any directory and it could compile that one.\n\nIf you are asking if you can set which directory a web server will use to resolve the root domain, that can also be done but has nothing to do with roots.\n. Good call, will make this happen.\n. So just thinking about this, wouldn't it even be better to just stop the first compile and move to the second? Who cares if public is a little out of whack, it's going to be recompiled in a moment anyway. This would have to not be the case if we were to re-implement selective compilation (try to compile one file if possible rather than the whole project), but for now we are recompiling all...\n. This is something we want to fix before release. It just means a bit of queueing in watch mode. If anyone wants to jump in and help with implementation it would be awesome, I have my hands full at the moment but will get to this eventually if not.\n. Yeah, the root is that if you compile twice, it runs twice. There is no mechanism in place to queue compiles right now. It's not really that it's a bug with a solution, it's more of a feature that hasn't been implemented yet.\n. Yup, that's why we have an open issue for it...\n. Yep, this isn't so much a bug as a design decision. You shouldn't be using dynamic content variables in other pieces of dynamic content. In every use case we have found where someone is trying to use one piece of dynamic content from another piece, there has been a way to avoid this by refactoring the architecture of the site.\n. It does indeed appear to be running tests. Have you tried changing the \"package\" variable name as well, since that seems to be a legit error?\n. Ah yeah it's in eco. Honestly not sure what's going on and there is no way for me to fix it without seeing the source/environment. It appears to be trying to run roots watch on the `node_modules` folder based on the output.\n. I could check it out briefly, but this isn't something I can dedicate a ton of time to, unfortunately.\n. Let's move this outside of github issues, since this is really more of an individual support request than an actual issue with roots :grinning: You should have my email I think.\n. Hmmm I don't know about that. Pretty much any template will come with an `app.coffee` anyway, so if someone got rid of that or is building from scratch I have to assume they don't want it, nor would they want a warning every compile...\n. Well it was working - roots will compile whatever folder you are in. If you don't know what folder you are in, I feel like that is definitely not roots' responsibility to tell you. Roots is targeted towards professional developers who understand how to use the command line. I feel like incessantly warning people who do not use `app.coffee` would be way more annoying.\n. Yup, I think both string and regex should be supported. They would both be run against `match` anyway. This is a good feature add for a contributor to pick up - anyone up for it?\n. This is now part of roots util: https://github.com/carrot/roots-util#with_extensionf-ext\n. Same as the other issue, upgrade your node version to v0.10 or above\n. v3 is not compatible with node v0.8, upgrade your node version and it will work.\n. :wheelchair: :facepunch: \n. This is actually a very purposeful modification - roots url encodes all filenames before output. I _think_ that this should actually work fine though, as browsers handle symbols and their url encoded counterparts equally, as far as I'm aware. Have you tested to see if this still works?\n. Ugh yep it maps url encode to utf8 one way but not the other. What a pain. Will have this fixed next release, good catch!\n. Closed by rc5 release, whoo!\n. Please add more detail?\n. Yeah this would be nice to have eventually, pretty low priority though. I am making a gulp plugin for accord right now if that helps to ease the pain in the meantime though! I'll link it here when finished.\n. https://github.com/carrot/gulp-accord -- this will do the trick for people using gulp. Have used it in a couple places, it works pretty well. It's also running the `gulp-stylus` plugin right now, and potentially more in the future if I were to push for it more actively.\n. Whoo! Thanks @HHSnopek \n. [Node-gyp](https://github.com/TooTallNate/node-gyp) is a super common dependency required to install any native bridges, used by many libraries. As noted in this issue, it does not yet support python 3.x. It's recommended that you have a python 2.x install available to deal with this.\n\nIf you could offer more information on which dependency is is exactly that is causing your issue here, it would be helpful.\n. I understand that, but it's one of roots' dependencies that needs this actually - just trying to find out which one it is.\n. I suppose, but it does also tell you right in the error message, which is why i was asking!\n. This is for roots v3, which you can install with `npm install roots@pre -g`\n. If so, we [actually do have instructions to make sure python is installed](https://github.com/jenius/roots#windows-installs). Either way it seems like this guy has not been paying attention here, and if we are unable to replicate I'm going to close this unless we can get another update.\n. Ok guys it's time for merge. Any final objections? If not this will be merged in the next half hour and we will be live!\n. @ccsouthard 4 videos already up, check it out! http://roots.netlify.com\n. Try running `roots tpl reset`? I'm sorry, we're not very good at testing with windows, but we'll be working on steadily!\n. Honestly I am not sure. That kind of issue seems to be outside the scope of roots and more related to your computer's setup... what declan said there makes sense though. Not sure why you are using a secondary drive rather than the main for code projects, but I assume symlinks would be ok since code projects are usually quite small in filesize. At the same time, do symlinks even work on windows?\n. You mean you can give more information?\n. Yeah I know what the error is based on the message you pasted above -- it is the same error happening right?\n. Yeah, thats an error with [sprout](https://github.com/carrot/sprout) and it has something to do with the location of the config directory where roots templates are stored. It's such a massive edge case right now though and so difficult to test that I'm afraid it will be a bit before we get around to it, especially since we still are focusing on getting major features implemented and it's a beta.\n. I'm going to close this for now, will revisit later if we still see it as an issue!\n. Oh yeah clean hasn't been implemented yet in the v3 beta, sorry about that! Shouldn't be too tough to do so though if you want to take a crack at a pull request?\n. :+1: \n. Yeah it seems like it's probably an issue with the browserify plugin, which needs some updates.\n. Can you still reproduce this with the latest release?\n. Still able to replicate this with the most recent release?\n. Yup not yet implemented!\n. Implemented in the latest release!\n. Yep - roots 3 doesn't control compression by default anymore, that depends on options you pass to the compiler. For jade, the default html output is compressed. If you pass `pretty: true` it will make it uncompressed. You can do this through `app.coffee`.\n\nWe will however have extensions that do production-level compression and minification eventually. Right now we have javascript and css pipelines, and there will be one for html and images coming in the future.\n. Oh yeah it will be merged probably tomorrow. If you want to use it in the meantime you can close the `v3` branch and npm link to for testing (which is what I'm doing for roots-browserify)\n. If you are interested in adding this through a pull request, here's a good example of how it could be implemented!\n\nhttps://github.com/carrot/roots-util/blob/master/lib/index.coffee#L23\n. Implemented in fa187100180cb75c6c01f5bd856ec33b4fc39d2b\n. ahah fail. thanks for fixing\n. Awesome! We will only make it better over time :grinning: \n. Oh yeah I must not have been paying attention. Yeah I'll merge this shortly.\n. Hey @monkeez would you mind rebasing this on the latest of the `v3` branch?\n. There have been an absurd number of changes to things since this was submitted, if you can't and/or are busy let me know and I can do it. I just want you to get credit for the commit :grinning: \n. Pull request this in?\n. :cherries: \n. Ok so a couple things that I'd rather not merge in:\n- I like having variables aligned up top for cleanliness and readability.\n- I like having spaces between paragraphs of text. It makes them easier to read.\n- I like having spaces between my doc blocks and methods, both because it makes it a little easier to read for me, and it works nicer with the fold comments plugin, which is essential to me being able to work on this library with such a massive amount of inline docs.\n\nI'm happy to accept all the changes other than those!\n. Ok so rather than letting this sit around forever with these comments on it and the code not changing, let's just lay down the law now -- not all the changes in this PR are approved to merge. If no changes are made here by the end of the week, I'm going to cherry-pick the ones that are, merge them, and close the PR. Discussion still welcome of course, just trying to move things forward.\n. End of week has arrived, I'm going to pull what changes are approved and close this PR in a few moments.\n. What happens if you run it without the browserify plugin?\n. Weird. I feel like there are a few things that need to be revised in the roots browserify plugin. I'm going to close this out, could you re-open in roots-browserify since, while it does without a doubt involve roots, the issue is with that plugin specifically?\n. Great catch here. The behavior now is that the browser doesn't open until a successful compile goes off. If it fails the first time, it will show the error in the console but continue watching. Once it's fixed, the browser opens with the correctly compiled page.\n. The roots server is soon going to be a decorated instance of superstatic, perhaps would merit moving it out to its own module as well.\n. Implemented by charge, whoo!\n. I have seen this, it's super annoying. It seems to be an issue with the way node installs manpages. You can resolve it by manually removing the old manpage first as such:\n\n```\n$ rm /usr/local/share/npm/share/man/man1/roots.1\n```\n. Ah great, glad this was resolved, and sorry for the weirdness!\n. @slang800 \n- Call them what you want, but they are not just arguments, because they can only be strings. If someone told me \"you can pass any arguments through to this process\", that would be very misleading as opposed to \"you can pass any string through to this process\". This is why I specified them as strings.\n- It's not only poor SoC (whatever that is), it is simply not reliable enough for use. You can but should never stringify functions. If the function is bound to anything, it fails. If there are variables that are referenced outside of the function's scope, it fails. I'm not going to tell users they can pass a function, but only one written in this very particular manner.\n- Thanks for adding this info, but I am aware!\n- We can also use cluster, which does the same thing and is built in to node. I actually used compute-cluster in my test implementation and it worked fine after a couple mods to the source which I PR'd back to the library.\n. Closed by #501\n. Sinon isn't a dep in roots v2 though...\n. Yeah I wouldnt' worry about it. Can you squash all your commit together though?\n. Nope, looks good!\n. Thanks for filing this! I'll check it out soon and get back to you. I want to make sure that everything is working nicely for windows users, but don't have many windows machines around so it's hard to test.\n. For sure. I know @declandewet is also working with windows, and has been very helpful with testing things out. I'm afraid I must admit that often times during development windows issues are not a top priority, but I'll do my best to make sure things are working!\n. Hey @declandewet, is there any chance you could test this one on windows and see if you can reproduce? If not that's ok, just figure you have quicker access to windows than I do.\n. Ah lame. Not sure. Ok I'll bust out a windows computer from somewhere and test this as soon as I have a chance!\n. This should be closed by #482 \n. What version of roots are you using? You can find this out by running `roots -v` from your command line. If it's version 2, it shouldn't have a `package.json`. If you are here after watching the jeet screencast, the roots version used in this screencase was v3, as mentioned. You can install v3 using the command `npm install roots@pre -g`, since v3 has not been fully released yet.\n. Hey @s1efan - I think perhaps what you meant to say in your comment was that you are having trouble installing roots v3? Could you please paste the entire error log, and escape it as a code block in markdown?\n. Try running `npm cache clear` then installing again\n. So this is an issue with npm, it has nothing to do with roots. You can see the error source at these lines:\n\n```\nerror ReferenceError: resp is not defined\nerror at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n```\n\nI would try reinstalling node, updating npm, and/or bringing this issue up in the npm repository. Sorry I couldn't be of more help! To be sure, I just tested it on my own machine and it worked perfectly well...\n. Hey, have you tried out the prerelease of roots v3? Try running `npm install roots@pre -g`, you might run into fewer errors that way, as there are less bundles dependencies.\n. Indeed you are, but not for long. The current docs on roots.cx do not entirely apply, as a lot has changed. It's also missing the deployment options, but we're working hard on that [over here](https://github.com/carrot/ship) and will be bundling it in as soon as we can. All the basics are in place though, and there are a number of spots where there have been big improvements.\n\nIf you need any help or assistance with things, the core devs are available via chat to talk about v3, and we've been working on docs that are coming along nicely. By the time public release comes around (next couple months), these will be much cleaner and prettier.\n\nhttps://github.com/jenius/roots/tree/v3#roots-v3-beta\n. https://gitter.im/jenius/roots\n. Closing due to inactivity\n. Could you squash these into one commit?\n. I think it would be better to open this as an issue with [the plugin you made](https://github.com/dapetcu21/roots-cache-manifest) than with roots and ping me or some of us there for help? Judging by the error message, it seems like the plugin is doing some crazy things to the request object? I took a look at the source briefly, but it was very confusing...\n\nThe issue almost certainly comes from you modifying the roots core object through the plugin. As mentioned in the docs, you are allowed to do this in a plugin and it can break roots. This is purposeful though, we want plugins to have a lot of power, but as we all know with great power comes great responsibility.\n\nI'm going to venture a guess that it's almost certainly [this](https://github.com/dapetcu21/roots-cache-manifest/blob/master/lib/index.coffee#L30)\n. Huh, yeah would be great to have any more info here. The error is indicating that something is trying to write headers to the server after a response has already been served and strangely is traced back to infestor, which is working fine for all other projects. It might have something to do with modifying content length, not totally sure.\n\nPerhaps not overriding roots' after hook and using the `after_category` hook might help?\n. Hi @DiegoAz - like we suggested I would try `roots@pre`, as it has fewer deps and might be easier to install on windows. You might also want to get an ubuntu installation going on if you can because windows is really a disaster as far as software goes in general haha.\n\nBut thank you for the note here, and hopefully it will help other windows users!\n. Oh yeah I'm sorry, still working on that piece. Promise it will be resolved before the actual launch!\n. Hahah yeah... it's going to be just like the old days, busting out the crappy dell laptop to test ie7. But this time it will be command line instead :grinning: \n. Closing to consolidate windows install issues. We are working on getting things running smoothly on windows, this will be happening over the next couple weeks. Thank you for sticking with us through these frustrating bugs, I promise it will pay off in the end :heart: \n. Ah awesome, looks great\n. Thanks @olivier-g!\n. Woah, thanks for the great answers guys, +1 to all! @tomByrer, we're not totally finished with v3 yet, but when we are we'll have much nicer documentation, marketing materials, and demos/tutorials, promise. Thanks for hanging with us at the early stages :grinning: \n. Closing this for now, as examples have been provided in this thread. Feel free to let us know if you are looking for more!\n. Yeah this is not the intended behavior, but I haven't seen this happen much. Could you drop a quick reproduction case here?\n. Caught this little buggy. Resolved in 0c0a6369f3e20e7de9ba63a50db2eeb6df5da8a0, will go out next release!\n. Need lots more information here. For example:\n- What version of roots are you on?\n- If you're on v3, have you installed the dynamic content extension?\n. Yeah, if you are on v3, you're going to be dealing with a not entirely finished or documented framework that is vastly different from v2, so just be prepared for that if you're going to jump in!\n\nhttps://github.com/carrot/roots-dynamic-content\n. Awesome, would love to have you on board as a tester! We've used it for client projects and it has gone quite well, even in prerelease it's fairly stable as long as you can figure out how to use it. All the info we have is here: https://github.com/jenius/roots/tree/v3#roots-v3-beta and we're available to try to debug and answer questions whenever, since a huge goal for us is to make this easy to use and stable for anyone.\n. I bet you can spot the error if you take a minute, it's very clear and is in the `app.coffee` file if you read carefully\n. This is awesome - great work @samccone!\n. Yeah, unfortunately I think this piece needs to be in mocha, but that doesn't take away from the awesomeness!\n. For consistency. Mocha works great for all our other tests, why do we randomly need cucumber for one piece of it? We can use the webdriver in mocha, achieve the same results, and have consistency in travis and in our coverage reports.\n. Hmm ok if that works with travis that helps, although it still doesn't with coverage. I mean I understand, but cucumber is not used for any part of the test suite already, I'm sure you know what I mean with consistency. Also while I appreciate and enjoy cucumber, it's not really as useful for a dev-built and dev-specific project. We don't need business-readability here because it's not used by businesses. The test case names in mocha I think should be enough, and more familiar to the user base who will be working on contributing to this project...\n. Hey @samccone - do you still think it would be a good idea to merge this? There have been a couple changes to the api so it would need to be revised\n. Hmm yeah what do you think? I have some in here that do this, but they arent working super well honestly...\n. ?\n. Hi, since this is an issue you're having with dynamic content, could you re-open it in the dynamic content extension rather than in roots itself?\n\nMake sure to take a close look at those error messages, they are telling you what the issues is. You can log out objects in your jade views using `JSON.stringify`. Push a little further with your debugging here, and see if you can narrow down what the issue is!\n. What are your thoughts on this @samccone by the way?\n. :cactus: \n. Ohh weird, @tmilewski was having this same issue (images fine, but served as corrupted to the browser) with the previous release of roots, but nobody else was able to replicate it or figure out why. @MikaelX, are you on the roots `rc.7` release?\n. We just pushed a new release candidate yesterday evening that upgrades the server. Could you try with this newer release? It might resolve the issue. Just run `npm i roots@pre -g` again to upgrade\n. Ah awesome! I'll close this out then unless there are further issues :grinning: \n. Hi @jedifrog! Thanks and so glad you are taking some time to tinker around with roots. I tried to replicate this issue just a moment ago, but unfortunately I wasn't able to do so. Requirejs needs you to leave the `.js` off from the end of its paths as it auto-adds it later, actually adding `.js` should break the jquery load.\n\nI'm not sure how I can really debug this further although I wish I could. It might have something to do with it being linux? I am testing on osx now. That seems unlikely though...\n. Ok I can verify that it's not compiling this project correctly, although it is still correctly compiling projects that I create with `roots new`. Looking into it now.\n. Ah yeah, dots in filenames are a relatively tough area for roots, because it tries very hard to pick up on which extensions you are using them and compile properly, so it might be getting false positives. I will look into this still and try to make sure this doesn't happen, you should be able to name your project whatever you want!\n. Ok so I'm changing the name of this ticket and assigning it as a bug, although it's not a critical one. Will try to have this resolved for the next release!\n. This should be closed by #502 and will be out next prerelease!\n. @samccone how come?\n. I'm fine with having it work, but not specifically documenting it or anything. @slang800 could you add a test for this then we can merge?\n. Ready for merge here as soon as it's tested and rebased on latest v3 branch :grinning: \n. Beautiful - thanks @slang800!\n. Hmm I wouldn't call this a version problem, this is how [versioning is intended to work](http://semver.org/) - a major version bump means that there are breaking changes.\n. Yeah so v3 are all prereleases, which means running `npm install roots` will not install them, and will install the stable version instead. You need to run `npm install roots@pre` to get the v3 versions, and if you run that you have to assume you are getting a prerelease rather than the current stable.\n. This must be a bug in npm, or the intended behavior of the update command. You can [see here](http://registry.npmjs.org/roots) that the `latest` version is `2.1.3`.\n. I'm not sure really, that piece is on npm :confused: \n\nWhat it comes down to is really check your install version. v3 will be moved to stable in the next couple months so this issue will not apply anyway.\n. Yeah, it seems like this is npm's intended behavior for some reason. I'm going to close this, but if it's still bothering you I would open up an issue in [the npm repo](https://github.com/npm/npm) seeing if there's a way npm update can prevent the installation of prereleases\n. You're on v3 here, these templates are in the v2 docs. Run `roots tpl -h` for usage. Sorry I know this is confusing, we're working on adding better docs for this stuff. Will have them out before public launch!\n\nBasically,\n\n```\nroots tpl add foobar https://github.com/your/template\nroots new whatever -t foobar\n```\n. You can run `-h` on any command at any level as well. So if you saw that `roots tpl add` was a command but were not sure of usage, you can run `roots tpl add -h` and get usage docs :grinning: \n. haha waat is with that spinner?! Also the monitor for better stack traces is good but only for debugging, that shouldnt be in production roots, that that commit should probably be removed before merge. And what do you mean about slow, you mean the compiles?\n. @declandewet I'm not sure where you're talking about in sprout, could you link to the line and/or open an issue in sprout so we can discuss it there? :grinning: \n. Hi @weslien - is there any chance you could link me to the line that's using the `git://` protocol? This seems like it's definitely something we can manage though\n. Ah, this is super weird, looks like it's getting hung up on a dep that was removed a while ago, 3 levels down from roots. Could you try `npm cache clear` then installing again?\n. Ok, could you help find more specifically where that dependency is coming from? `st` is not a roots dependency, it was once a dep of roots -> charge -> alchemist-middleware, but it isn't anymore so im confused as to why its being loaded\n. It should show in the error log I think? I'll try looking through as well to see if I can find it. Thanks for pointing this out!\n. Hmm I don't think so, one overwrites the other. The cache clear should have cleaned up any old dependencies...\n. I don't see `st` coming in as a dependency when I install. Here's what the dep tree looks like for me:\n\n```\nroots@3.0.0-rc.7 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 graceful-fs@2.0.3\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 vinyl@0.2.3 (clone-stats@0.0.1)\n\u251c\u2500\u2500 configstore@0.3.0 (object-assign@0.2.2, osenv@0.0.3, mkdirp@0.3.5, uuid@1.4.1)\n\u251c\u2500\u2500 minimatch@0.3.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 when@3.2.2\n\u251c\u2500\u2500 readdirp@1.0.1 (minimatch@0.2.14, readable-stream@1.0.27-1)\n\u251c\u2500\u2500 serve-static@1.2.1 (parseurl@1.0.1, escape-html@1.0.1, send@0.4.1)\n\u251c\u2500\u2500 coffee-script@1.7.1 (mkdirp@0.3.5)\n\u251c\u2500\u2500 argparse@0.1.15 (underscore@1.4.4, underscore.string@2.3.3)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 update-notifier@0.1.8 (chalk@0.4.0, semver@2.1.0, configstore@0.2.3, request@2.27.0)\n\u251c\u2500\u2500 js-yaml@3.0.2 (esprima@1.0.4)\n\u251c\u2500\u2500 sprout@0.1.0 (indx@0.1.2, which@1.0.5, osenv@0.0.3, ncp@0.5.1, mkdirp@0.3.5, string@1.8.1, ejs@1.0.0, inquirer@0.4.1)\n\u251c\u2500\u2500 charge@0.0.3 (hygienist-middleware@0.0.3, infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.1, morgan@1.0.1, connect@3.0.0, faye-websocket@0.7.2, escapist-middleware@0.0.2, alchemist-middleware@0.0.4, pathologist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.0.3, publicist-middleware@0.0.1, lodash.remove@2.4.1, archivist-middleware@0.0.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 accord@0.10.0 (indx@0.1.2, glob@3.2.11, uglify-js@2.4.13)\n\u251c\u2500\u2500 chokidar@0.8.2 (recursive-readdir@0.0.2, fsevents@0.2.0)\n\u2514\u2500\u2500 npm@1.4.13\n```\n\nDid I miss it somewhere in there?\n. Ah that's strange, I see where you're talking about, but it's a development dependency, so it shouldn't be installed that way. Hm. Either way, will fix that up and release soon - when I do I'll close this issue and post a update!\n. Wow, thanks for this detailed writeup! Hope this helps anyone else who is running into this issue.\n. It doesn't currently reload on focus, there must be a watched file being changed when you re-focus? Perhaps it's something like a vim swapfile?\n. Yup, there is one. Add `watcher_ignores` to your `app.coffee` file. It's an array that takes minimatch strings. This should be documented [here](http://roots.readthedocs.org/en/latest/configuration.html#options), I'm sorry, I'll add it!\n. Hmm... any idea what could be causing this @samccone \n. Which refactor? I haven't been messing with the stable branch in quite a while...\n. Ah ok - yeah if you can get a test case up I'll def look into it\n. The issue referenced was for v3, so not related. I'm honestly not sure how to solve this, it doesn't really make any sense to me and I'm afraid I won't have time to debug this in v2.x because I'm working hard on v3. It is resolved in the latest v3 prerelease, but I do understand if you're trying to use v2 it might be frustrating.\n. :tada: :tada: :tada: :tada: \n. Thanks for resolving this - impressive that you were able to get through the code and find the fix :grinning: \n. Looks good, could you just rebase this on the latest then will merge?\n. Oh yeah so each adapter actually already does take the filename in the options, this happens [up here](https://github.com/jenius/roots/blob/v3/lib/compiler.coffee#L68). Perhaps this functionality is not working as intended, or jade changed the name of the option or something?\n\nWould you be willing to investigate this a bit?\n. Is this still an issue with the most recent release?\n. Closing due to inactivity\n. Perfect, thanks!\n. Hey, so I clearly was not thinking straight when i reviewed this -- this PR eliminates the ability to use anything asynchronous in either of these hooks, which is not good. I'm going to swap this back to using nodefn.call, but also pass `@roots` as the first parameter - this should be a good compromise :grinning: \n. Hmm true enough. Either way, fix was necessary, as this broke the before/after hook tests. But I will consider switching it back and asking for a returned promise instead of using a callback. Just need to comb through the API and make sure everything is consistent in that manner.\n. Hmm haven't seen this yet - let me know if anyone can find out more about this. It seems like this should easily be able to be modified using [this function](http://nodejs.org/api/events.html#events_emitter_setmaxlisteners_n) though, and that it does not represent a serious issue.\n. I have to assume this is happening with a bunch of parallel windows open, since the error is coming up on serve-static as well, just wanted to drop that note here.\n. Yeah, it's not actually a memory leak, it's just a warning node throws when you have more than 10 listeners to an event.\n. Hahah excellent response here https://github.com/jenius/roots/issues/495#issuecomment-45563755 - thanks guys for helping out and taking care of this!\n. Yup, good find @spectrecode -- this is how it's done. This will be included in the docs once they have been released. We're working hard on this now!\n. Thanks so much @spectrecode - we will, promise :grinning: \n. Closing due to inactivity\n. Is this closed now?\n. Oh ok, so you're just saying you want a command line flag for port rather than using an environment variable. You can run roots like `PORT=1234 roots watch` and it works fine.\n. Also, I think @kylemac is talking about the prerelase version, which can be installed with `npm i roots@pre -g`\n. @mhartington I made that video and can confirm that it's using the v3 prerelease :grinning: \n. If I'm not mistaken, this is a dupe of #485. Could you try `npm link`ing master and see if that resolves it?\n. :ship:'d\n. Updated :grinning: \n. So this branch is looking good, but is still failing on travis, because travis has a memory limit of 3gb, but also reports to have 32 cores on their test machines, and 32 roots workers chokes out the memory and kills the test process, sadly.\n\nThere are almost certainly a couple small leaks somewhere in the tests as well. I've spent quite a bit of time working out ones I could find, if anyone can spot more that would be wonderful.\n\nI'm not entirely sure how to work out the travis issue. Really I don't want travis using more than 4 cores, but if you have a machine with more than that (and presumably a scaled amount of memory), I don't want to cut you off. I think I'm probably going to take a stab at mocking the `os` require in the tests and capping it out at 4.\n. Spawning a worker is costly and takes a lot of time. I'd rather have them spawn at the same time upfront and pay that toll, then have everything run quickly afterwards, rather than waiting and/or doing extra measurement when you almost certainly want all cores running. And considering the average number of cores these days is ~4, even the tiniest and most basic project would instantly max it.\n\nBtw, tests passing! :tada: \n. Couldn't have done it without the support of carrot :sparkles: :sparkling_heart: :sparkles: \n. Awesome, thanks for the fix here. I think you could probably test it with its own fixture that has a dot in the name, then just have the test ensure that the fixture's name stays the same and all the files compile within it.\n. Wow such `/`\n. Closing as this hasn't been touched in months. Re-open if work is continuing here.\n. Already a PR in to fix this one: https://github.com/jenius/roots/pull/502\n. Also this: https://github.com/jenius/roots/issues/477\n. We'll have a fix in for this by the next release :grinning: \n. Yeah if there's a way we can have a test I would feel better about it for sure - any suggestions or patches to add one would be greatly appreciated.\n. I suppose I have been corrected. This was greatly appreciated, yet was neither suggestion nor patch.\n. Haha glad it was worked out, sorry I've been busy this weekend and catching up on stuff late :grinning: \n. At the moment there is not -- the best way to do this currently is to use a \"snippet\" or \"intro\" front matter variable as you suggested.\n\nHowever, a new version of roots is coming soon that will include the ability to add on extensions, and we're thinking about ways this can be done!\n. So I don't really want to have all front matter fields auto parsed for markdown (in case someone doesnt want it, if we did have that feature it would have to be optional), and in jade at the moment there is no way to apply filters to variables. You could however take the slightly more verbose way of requiring in something like `marked` as a local to jade, and passing your text to that function...\n. This also might be a great addition to https://github.com/carrot/roots-dynamic-content\n. You can add any library to the [locals in your app.coffee file](http://roots.readthedocs.org/en/latest/configuration.html#options) by just requiring it and adding it in there. Functions work as well. So if you get a function that converts markdown to html (like [marked](https://github.com/chjj/marked)), you could require that, add it as a local, and use it in your templates.\n. Oh yeah this also needs tests as well. I'm not sure why I merged this so quick, I wasn't thinking. I might revert this, then you guys can work in another PR that's more thorough with tests?\n. Hmm do you think we should have this be `_path`? I'm honestly not sure, 50/50 right now.\n. Ok cool, let me know when that's added and we'll get this merged up\n. Beautiful - thank you! :airhorn:\n. Yuup - jeet site compile time in watch mode with roots workers is ~2-3sec, which is a pretty vast improvement. It's only bounded by the stylus compiler, actually.\n. The issue is that the user can also configure the plugins. So they require them, which we could pull paths from, but then they can call the function with parameters that modify the behavior in `app.coffee`, which returns another function. This is even more so the case with extensions. I don't think there's any way around having to require `app.coffee` into the workers :confused: \n. Yup, luckily I've already taken the time to write out all the extra logic for those gains, which in my opinion are not minimal. For example, your results show that, disregarding the weird apparent memory leak issue, you'll get a 1s increase in compile time by having workers handle functions while watching, on a medium-sized project. When you are developing a site, making changes, saving, and quickly checking back, you can easily rack up many minutes of saved time when adding up those seconds. Over the lifetime of a medium to large site, it could easily be hours. And as your site gets bigger and uses more complex functionality, the difference between the two implementations increases further, so rather than a 1 second difference, it could quickly become a 3 second difference or more as the main thread gets more and more overloaded by the use of view helpers and css plugins etc.\n\nIf I hadn't already written the extra logic required to fully optimize, I would say yes absolutely, let's just merge accord-parallel for now and optimize further later. But _we have all the logic we need to make this as optimized as possible already written and working_. I spent weeks on working on this, literally - it just needs a bit of extra time to fix a memory leak somewhere. I didn't spend this time because I'm a huge idiot and just said \"fuck it, let me just throw away weeks of work on something that doesn't matter\", this optimization is _really important_ for the viability of using roots on large complex sites. Think of carrot's website for example -- we pass functions to all views and all stylesheets. This makes for an extraordinarily slow compile on your proposed architecture, pushing every view and stylesheet into a single thread. It could easily be orders of magnitude slower than the existing implementation -- we have _a lot of views and stylesheets_. The workers would crank through the coffeescript, then sit around idling while a single thread tried to get through the majority of the site. I wouldn't be surprised if many complex sites want to include a variety of stylus plugins and view helpers. These are good things to include, and make developers more efficient. They should not be punished for this. I think potentially every roots site will have stylus plugins, which means all stylus will automatically be pushed to a single thread straight up, even smaller sites.\n\nI understand the desire for a simpler implementation. I like the work you have done with accord-parallel. But I spent a lot of time thinking about and testing various implementations. When it comes down to it, **we need maximum performance** in order for larger sites to be viable in development. And we **have the code written already** that will get us there. Rather than spending time here arguing for an implementation that is slower, I would much rather see you dig in and try to help out with fixing the leak in the current implementation.\n. Closing as we are going with a different route with accord parallel for doing the optimization here. What a difficult issue.\n. This is on the workers branch?\n. yeah, its an issue with the error being passed correctly between a worker and the main thread that emits it for sure...\n. You've got a weird weird error going on then. I have never seen that before.\n. Any minimal use cases I can get here to reproduce this error would help a lot!\n. Awesome - new prerelease coming shortly as well that will fix a few more bugs too.\n. I think a better solution would be to fix the issue with roots workers, would rather see time dedicated towards that.\n. Thats not really how I like to work with code, saying \"eh well this seems hard to fix so lets just put in a suboptimal solution instead\". v3 is still unreleased, there are not hundreds of people banking on it in production, and we have the time and talent needed to make this fix. I would love to have your help, but if not that's ok it will still be tackled.\n. It's not ever going to be as fast, since it pushes any compiler that takes a function back to the main thread rather than balancing all compile jobs between all threads. You know this already though, not sure why I had to explain it.\n. The additional load of app.coffee etc is only a cost that's paid once, on the first compile. We are optimizing hard for `watch` performance here. I don't mind at all if we take a bigger hit upfront if that shaves time off each compile afterwards. If you can find some way to beat the perf here on a function-heavy project, or to serialize functions without setting limitations, which in my knowledge is not possible, I will accept. Otherwise I want this as fast as is physically possible for watch performance, because that's where it's most important, during development.\n\nIf you honestly think that you will be able to do either of the above, I would love to hear about it. Otherwise I really hope that you will be able to accept that this has to be a little less clean for the sake of optimization and help out with the existing implementation rather than continuing to argue.\n. Ok @slang800 so, while I am unhappy with the fact that you continue to endlessly argue here without any substantial backup instead of accepting what I'm saying and helping out, which appears to be a trend with any issue that you don't agree with me on, after thinking about this for a while, I have changed my mind and, at least for now, will likely end up pulling workers back into a branch. Let me explain.\n\nThere is no question that the workers implementation will be vastly faster in almost any complex site than the accord parallel implementation. As I have mentioned _numerous times_ above, the fact is that in a sufficiently large site, there will most likely be functions passed to all stylus and all jade templates. That leaves only the coffeescript to be compiled on other threads, and after looking at benchmarks, coffeescript compiles only take a fraction of the time that even simple jade or stylus files do anyway. It's simply _not feasible to pass functions through processes_, and there's no question that the ability to pass helper libraries and functions through to jade and stylus is incredibly useful. This means that _workers will always be faster_, and that the more you take advantage of roots' capabilities, and the larger the site becomes, the slower using accord-parallel becomes in comparison. This would would be the case because all jade and stylus files would stay on the main thread as soon as you are using css and view helpers, and the larger the site is, the more jade and stylus files you have, and the slower the compile becomes as the worker processes finish up the coffeescript in milliseconds then idle while the main thread tries to grind its way through hundreds of files. There is simply no arguing with this, it's a fact.\n\nHonestly, I'm not sure how you have continued arguing with it up till now, since you obviously are a brilliant guy and I'm sure you understand what's going on behind the scenes here. There is a _zero percent chance_ that accord-parallel will be able to work faster than the workers implementation, if we're talking about the theory behind them (discounting the unfinished implementation at the moment). Zero. Getting it close might be possible conditionally, like if a there's a project that doesn't use helper libraries or functions. But that's not what I'm interested in - I want maximum speed in watch mode, unconditionally, and _especially_ for larger and more complex projects. Roots workers gives you that, and accord parallel _does not, and will never_ give you that. That's why I stated that would rather have you dedicate your time and effort towards helping with getting roots workers running smoothly, rather than arguing with me, as I have mentioned time after time. Because it is the ideal solution, I've dedicated weeks of hard work towards getting it working, and we have something in place that works fairly well, and just needs a bit more work to finish it up.\n\nThat all being said, after having thought about some of the issues that are appearing, I'm starting to realize that the main issue with roots workers is _the extensions_. Some of the extension hooks execute inside child processes, and some do not. And within extensions, it was previously expected that you would be able to make changes that would affect other files, which would not work for hooks that execute inside worker processes. For example, in the dynamic content extension, logic is executed within the worker processes that pulls the front matter, and makes the front matter data and some helper functions available to all other files by adding them to the locals. But since the worker processes carry their own copies of the settings, compilers, variables etc, adding something to the locals from within a process does not make it echo to all other processes, and therefore other files. My first thought was ok, let's just make the locals shared across processes. But then you have to require that no functions be added to the locals, since functions cannot be shared between processes. And we've run into another difficult function-passing issue once again.\n\nExtensions are super important for roots, and having to restrict them is not what I want. And since I've already poured weeks of time into this and am sort of burned out on it, since you are unwilling to help me as you favor another solution (which I think is a huge problem which I have brought up a bunch of times with you, but unrelated), and finally since I am spread very thin across a lot of projects right now and need to continue making progress, this week I'm going to try to roll back the workers piece into a branch and implement this instead.\n\n:bow: \n. Hey @slang800 when you have a minute can you rebase this on top of the v3 branch?\n. I just manually reverted what was needed. It was much less work that way.\n. A huge number of tests failing on this branch, any chance you could check this out?\n. Closing as this hasn't seen work in months and still has failing tests. Re-open if work has resumed here!\n. Test for this?\n. Not looking for really in depth ones, just one that runs a compile with that option really to ensure it doesn't crash :grinning: \n. Yup, it was removed from roots. You can import it yourself into stylus or sass or whatever you are using if you need!\n. This is in progress in #533 - just with keen instead of google analytics\n. Ah actually the global path is now `_path`. `filename` also works, but is provided by jade, not roots itself, so it will only work in jade files.\n. I'm writing this up right now as an article for the docs site, so going to close this issue. Wrote up all the things that were suggested here though, so thank you guys!\n. Hey Tyler! Could you check out the public folder and let me know if the correct files are in there?\n. Ok cool - what is the name of your project folder? Also, is the latest release of v3 working ok on windows @declandewet? I have been working super hard on developing the features but not on testing them on windows yet.\n. Could you try a project name with no underscore? Long shot, but there have in the past been issues with this and who knows whether windows handles them in a crazy way...\n. Hmm, ok - is there any way you could help out a little looking into what might be the cause of this? I'm working on a bunch of features now and it will take me a little bit before I get to windows testing :grinning: \n. Wow, thanks for looking into this so deeply @philbarr! We are looking to get things fixed up on windows for v3 -- since you did the hard work to dig up these bugs are you interested in sending a pull request in to fix them? This way I can push the fixes in the next release and you won't have to deal with all these hacks to get it working.\n\nWould also like to pull @joshrowley into this and see if there's another way we might be able to fix the EMFILE error without breaking roots for windows -- I'm sure we can figure out some workaround :grinning: \n. Sounds good. Even if it's a manual alternative to changing emfile limits that we can put in the readme as an aside for when you have a large enough site, I think that's better than having roots broken on windows.\n. Closing due to inactivity, although getting things working on windows is still on our todo list, promise!\n. Did you try taking out the `layout*` in the app.coffee ignores?\n. Hey @laurosantos - this is not an issue with roots, it's an issue with a very old version of [axis](https://github.com/jenius/axis) - you should open the issue there :grin: \n. Closing due to inactivity\n. Yup, I agree. It's not being worked on at the moment though, so I want to keep the issues section clean and focused.\n. Closing this as we're gearing up for a release of v3, which doesnt not have this issue\n. So while I would like to do this, the current stable roots has something of an issue with dependencies. Technically, this upgrade would be a breaking change and therefore require a major version bump. In the next version of roots, we don't lock dependencies into core like this, and jade is at the most recent version. If you are looking to use upgraded dependencies, I would try out the `v3` branch for now.\n. :+1: -- don't see much difference since the next upgrade will be to v3, which has different tests, but happy to merge in if you guys want since it does no harm either\n. Thanks @tuvistavie!\n. Ah ok, could you check the version of axis that's installed in the package? I thought I had stylus and axis versions locked for the current stable roots, but perhaps a bug slipped through somehow. Roots stable is not in active development anymore (we're working on v3 now), and the version of axis used in roots stable is also well in the past, so it must have been something with stylus I assume?\n. Hm, stylus is locked up at `0.38.x` right now, and it appears as if the last release on that version slot was last september. Honestly I'm not sure what could be causing this, since all the libraries in question don't seem to have been touched for quite a while :confused: \n. Ah good catch, I have seen issues with this before. So it must be a bug of some sort in the css minifier... weird\n. Closing for now, will reopen in axis if it continues to be an issue in v3\n. Good catch, thanks. Fixed.\n. Anyone have thoughts on this? I feel like perhaps @samccone or @slang800 might\n. Yeah so there is a notification message, but honestly I'd rather have it on by default if possible. I doubt many people will turn it on explicitly if not, and the info we're collecting is anonymous and only used to make the tool better.\n\nThis is the message that appears after installing roots -- think this is ok?\n\nhttps://github.com/jenius/roots/commit/01d51634f2d78450063c9f89cc9af07c2c73d3cc#diff-b66d5bed1398a93cb033836fd2c458bbR3\n. So I think the posix stuff crashes both windows and linux. @slang800 noticed this and has a fix [here](https://github.com/slang800/roots/commit/3daf1dd1cf48a9617e694b760fd45292d246ea34). Would perhaps using graceful-fs be able to fix this instead? If not we need to scope this to just osx I think...\n. ok has this been rebased on top of v3?\n. Axis actually depends on and extends nib: https://github.com/jenius/axis/blob/master/index.js\n. Closing since this isn't an issue but feel free to reference!\n. Hey @weslien,\n\nI'm so sorry about that! I hope we can get this resolved soon. I need a much better error report than this though. Rather than asking if I have any ideas of what might be broken with your site (which I certainly don't, I wouldn't have pushed rc8 if there were known defects), it would be more helpful to me if you told me what was broken with your site so I could reproduce and/or look into it. For example, what's the error message you're getting? What part of the site is broken? What is actually broken about it? Take some time to dig in and try to give me details. The more details I can get, the more likely I can help.\n\nAlso, there isn't a single dependency in roots v3 that uses `latest`, this would be a really stupid decision, and I promise you I am not that bad of a programmer. You can see the dependencies are [all version locked according to semver](https://github.com/jenius/roots/blob/v3/package.json#L21). It's possible that one of the dependencies has pushed a breaking change or a bug that breaks the semver conventions -- sometimes this happens. The easiest way to fix this is to locate which package it is, and lock it down further until issues are resolved.\n\nIf you want to roll back to an earlier version, you can't use the `roots@pre` tag, since this only matches the latest prerelease, you need to use the full tag. For example, to go back to rc7, you'd use:\n\n```\n$ npm i roots@3.0.0-rc.7 -g\n```\n\n...at least for a global install. You can find all of the tags that are possible to install with through npm in the [dist-tags key, here](http://registry.npmjs.org/roots).\n. Ah yeah that's no fun. Breaking changes shouldn't be happening in minor versions, so this is not really acceptable on jeet's part. Glad you figured it out though! And thanks for the tip on charge -- I'll definitely get those cleaned up and bumped for the next release :grinning: \n. Closing due to inactivity\n. :+1: \n. Hey @Janomat!\n\nThanks for coming by and trying out roots! What you have linked to here is actually a project that has nothing to do with roots itself. Roots is just a static site builder, so it does not include any sort of css tools or libraries. Perhaps you are after [axis](https://github.com/jenius/axis), which is a library of css helpers?\n\nEither way, the good news is that you can easily include this file yourself, and it should work just great. All you have to do is copy that gist into a file and drop it into your project in order to use it. I'm going to close this issue because it's not something that will be changed or a problem in roots, but happy to continue discussing here still if there's anything I can help out with or clear up :grinning: \n. Roots and axis are heavily sponsored by [carrot](http://carrot.is), where I work, and we make quite heavy use of these things, so I can assure you they are not missing.\n\nAxis has support for rem in the typography module: https://github.com/jenius/axis/blob/master/axis/typography.styl and rems are supported fully in IE9+ wherever else you want to use them.\n\nThere's no need for extra svg support in axis. SVGs work great by default as long as you are IE9+, anything under that requires conversion to pngs and selective replacement, which is outside the scope of css in general.\n\nAnd high res images are up to you exporting them from photoshop, not up to css.\n\nI think you'll find that all the tools you'll need are there. If you have any ideas for additional utilities that you'd like to add, please [file an issue in axis](https://github.com/jenius/axis/issues) and propose it! Generally happy to add any other useful utilities.\n. Going to merge this for now, but it doesn't really make any sense that it would work. Will revisit if the problem arises again.\n. Cool yeah I'm going to check that out and try to patch it up this afternoon\n. Hmm, I'm unable to replicate the error locally. Perhaps it's a unix only sort of deal? Pretty nasty.\n. You should be able to run `roots deploy gh-pages`, but this is a new feature so there might be some bugs. If you find any log em!\n. Hey sorry, yeah I just pushed from the wrong branch. Shouldn't affect the code though, and is fixed now :grinning: \n\nAs far as the cli stuff, I want to make sure the cli interface is not running actual compiles. There are already tests in place for the API, so I don't want to test it twice. I think we can figure out a way to cover this still...\n. For example if we're testing the environment piece, we can mock out roots, then ensure that the correct `env` is being passed in to the mock. This would provide coverage without adding the double coverage on basic compiles and wasted time for the the actual compile. There is actually already a test for environments in the API section (bottom of the compile test file), we just don't have one in the CLI yet.\n\nLet me know if that doesn't make sense I feel like maybe it doesn't after reading it over again, I might be able to explain it better in person.\n. But yeah let's get some coverage in for this then merge and patch :palm_tree: \n. Huh, it looks like the tests are failing, but they look good to me! Are they passing locally?\n. Ping, would love to get this merged in!\n. Closed by #564\n. Ah so you actually have to add templates manually at the moment -- roots is not preloaded with templates in v3 at the moment. There also isn't a v3 blog template yet. `roots template` provides more help with adding, listing, and managing templates.\n. Not at the moment, working on a variety of other things. Would you be interested in helping out? For a blog, you can use https://github.com/carrot/roots-dynamic-content\n. Cool, thanks for the heads up! Feel free to reach out directly with any suggestions or requests for help :grinning: \n. Yes, this will definitely be included in the new docs site. The setup is similar, but not exactly the same. It uses [ship](https://github.com/carrot/ship) behind the scenes for convenience, but ship can also be used standalone. The heroku, s3, and github pages deployers are relatively stable, and we're working on more. I'll make sure to get these documented soon!\n. Yeah in this case the repo is supposed to be `user/name`, as in `jenius/roots` -- although there is a definite lack of docs on this that I should fix.\n. Haha yeah me too, I'm sorry. I'll patch this as soon as I have a block of time that I can work on ship/OSS\n. Or happy to accept help as well!\n. Closing this as it's not an issue with the code and we are working on documentation now!\n. Seems fine to me! Have you tried upgrading to roots v3? It has much better support for stylus and other compiler plugins\n. Is this still\n. Hey @dietlev! What command are you running to try to create a new roots project, and what does the output look like -- or is there no output at all? Also, no need to use `sudo`\n. Hey @dietlev -- I just installed roots `2.1.4` fresh from npm and ran the command `roots new example`, and the command created a new project and logged that it did to the console perfectly fine. I think there might be something up with your machine specifically that's causing this? There have been no changes to roots 2 for quite a long time as v3 is in active development, and I haven't heard this error from anyone else either :confused: \n\nI have just about the same setup as you though, latest osx and node versions. I'm not sure by those stats alone what may be going wrong. I guess if I were to take a stab at it I'd say run `npm cache clear` then try re-installing roots and making sure there were no install errors?\n. Hi @dietlev -- just checking in here, are you still getting this issue?\n. Closing due to inactivity\n. Which version of roots are you using?\n. Hmm this is strange, and seems like a windows specific error. We're gearing up to release the next version of roots right now so this might not be looked at for a bit, but definitely seems like a bug and will try to get to it eventually!\n. Hey guys,\n\nGood investigation here, and thanks for looking into it. Unfortunately, at the moment all efforts are going towards getting v3 of roots out the door, which is due for a stable release in the next couple weeks, so I'm not going to have time personally to go back and fix deployment on windows for v2 right now.\n\nFor the next version, we moved deployment out to an external library. While this is still not entirely stable (deployment is incredibly difficult), we have used it to deploy a number of roots sites to various destinations with solid success. If you want to try out using ship, I'd be able to get to those issues more quickly, as we need to have this working well for the v3 release.\n\nhttps://github.com/carrot/ship\n. Closing due to inactivity\n. Run `npm install` in the project rather than installing express globally\n. Ok, looks like it's an issue with [roots-express](https://github.com/jenius/roots-express), perhaps with a newer version of express. Roots-express hasn't seen work in a while, but it might be a good time to update it. Are you interested in helping out?\n. Sorry, I guess what I was trying to say here is are you interested in helping to fix the issue, not send me log files haha. I currently don't have the bandwidth to fix the roots-express stuff on windows, and on top of that roots-express will almost certainly be deprecated over the next month or two. If you still are interested in maintaining it, that would be awesome, otherwise I'm afraid I won't be able to get to this immediately.\n. Closing here, as this is an issue for https://github.com/jenius/roots-express\n. So this does belong in roots dynamic content, we can discuss it there:\n\nhttps://github.com/carrot/roots-dynamic-content/issues/13\n. You certainly can: https://toolbelt.heroku.com/\n. Also, we will be working on getting all deploy errors fixed up in the next couple weeks -- this is not being ignored.\n\nRoots deployment is still a new feature with a number of bugs (cross-platform deployment is _really_ hard), but we will make sure all deployers work well before public release. Thanks for being early adopters and sticking with us through these frustrating bugs, we love you guys :sparkling_heart: \n. This should be resolved now, ship is much more stable at this point :grinning: \n. Exactly the same error that was posted here, and you are on `3.0.0` stable?\n. :+1: \n. Yeah, getting v3 working on windows is important to us, and we would very much like this to happen before the release, which is happening hopefully within the next month. I think this is another issue with the posix module, which we really need to remove. If you pull it down locally, remove posix from the `node_modules`, and run `npm i` does it install cleanly?\n. Ah man, this is not the first time I've seen people have issue with the npm cache on windows.\n\nDid you clone the project down then just run `npm install`? You can also use `npm link` to have it install and create a global symlink.\n. Hmm roots-util only has it has a peer dependency -- does that try to install? I didn't think that peer dependencies also install, they just check the host to make sure it fits that version spec...\n. Ok, so peerDependencies actually does install the core. That's pretty strange...\n\nYeah I'll try to get rid of this next week and will let you know. Thanks so much for all your hard work helping out here, and I'm sorry it's such a pain!\n. @samccone found this great replacement for posix that allegedly works on windows, we are looking into this now!\n\nhttps://github.com/prantlf/node-posix-ext\n. Send in a PR?\n. Closing due to inactivity\n. Yeah, unfortunately it does not look like we can do anything about this. I used the smaller lodash modules because charge can be used by itself without full lodash, so didn't want to add unnecessary dependencies. But apparently even the regular lodash package causes this issue, along with a number of other libraries that use deeply nested dependencies. This is unfortunate, but there isn't really much we can do about it until either windows or npm fixes it up.\n\nI really would like roots to work with windows, but this seems like a very difficult issue to work around, since it really is very far outside of roots itself. If the compromise we have to take in order to get it working on windows is to include unnecessary dependencies, I wonder if that's actually worth it...\n. Ah ok. While this is unfortunate, because it's an issue with node and windows rather than with roots, I'm going to close this out so we can stay focused. If anyone have a potential solution that does not involve making the project less efficient, I would be happy to discuss and merge this in!\n. Could you provide more details here?\n. Roots uses your default browser at the moment, have you tried switching your default to chrome canary?\n. I think potentially @artelse is asking if it would be possible to add the browser to the app.coffee file so it always used it. This is actually pretty feasible -- we use [node-open](https://github.com/pwnall/node-open) to open the browser, which takes an optional second argument specifying the program you want to use. We could just add a config setting that would set this option if specified...\n\n@artelse especially since this is a pretty easy fix, would you be interested in jumping in with a pull request to implement it?\n. Sounds good! Just as a push in the right direction, this is probably where you want to be looking: https://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L43\n. Hey @artelse any update here?\n. Hey just checking in here again\n. Sounds good! I think for now I'm going to close this issue since it's very old, to keep our issues section focused. Looking at a major release shortly. But if you do have time to check this out, definitely ping and re-open :grinning: \n. hahaha\n. Still a bunch of failing tests here...\n. You guys are the best :sparkles: :sparkling_heart: :sparkles: \n. Awesome, tests passing on travis now is a great step. This should be set for merge then, although it certainly doesn't mean we're done with windoge, unfortunately.\n\nThanks so much again for working on this, really appreciate it!\n. Still some work to go, but we're getting there!\n. Hey @davidmoshal!\n\nSo this is an interesting question. There is a way to do this, but it's not going to be as simple as you are looking for here. The public directory is where roots puts compiled files from the source. It gets all it's information from the source, so piping the files directly into public is essentially just going around roots. If you want the information to be available to roots, it needs to go through the pipeline.\n\nI'm not sure if you are on the current stable release or v3 (you should be on v3 if not, it's very close to release, we're just finishing up docs and such now), but either way in order to get the listings in the way you want, you need to define the pdf/html docs as dynamic content. This means getting them into a folder in the source (like `/documents`) and making sure that they are prefixed with any front matter. To keep the html formatting you can just use ejs.\n\nSo here's what I'm imagining. Your script converts the pdfs to html, then adds a front matter block with a title followed by the html from the document to a file, adds that file to a `documents` folder in the source. Then you run `roots compile`, and the docs will be available via `site.documents`. Does that all make sense?\n. Yeah, so what you are describing now is in the general range of capabilities for roots v3 extensions. I'd like to have functionality like this available through plugins rather than bloating the core out with it, but it's possible for sure. I also want to stay away from any sort of dynamic stuff, as the output is intended to be served as flat html files rather than requiring a server. If you are interested in helping out with working on this kind of stuff you should chat with us though!\n\nhttps://gitter.im/jenius/roots\n\nAnd thank you, so glad you are liking it!\n. Yeah, v3 is more reliable here and uses chokidar, give it a shot and it should solve that issue.\n\nAs far as your interests, I think you'd be surprised to find that our targets are not all that different. Roots is heavily sponsored by the company I work at, Carrot. Carrot is an agency, which means we do a large amount of work across a large variety of companies and requirements, and roll most of it out as static. The way we introduce real-time and/or dynamic features is through javascript, which is in heavy use, and which at least I am very comfortable with -- check out the v3 source and you will see this.\n\nFor us, most builds are static for front-end and javascript, then have a server that exposes an API that can interact with the page. In v3, you can even pull some pieces in from the API and render them as static if you need. For example, if you had a blog, you could pull the first 5 blog posts from the API and render them static, then if the user hits \"next page\", hit the same API with javascript, offset by 5, and render the next 5 posts into the same template, which has been precompiled for use with javascript. It's quite a nice flow.\n\nStatic is extremely powerful, decouples your front end and back end entirely, speeds up site load time significantly, and reduces hosting costs a ton. Give it a shot for one of your apps and you'll never come back :grinning: \n. Yeah hexo looks like a nice library for sure, but it's built only for blogs, where roots is more for general purpose static sites. You can see an early preview of some of the plugins we have in place [here](http://roots-web.bitballoon.com/extensions).\n\nTo get v3, install with `npm i roots@pre -g` :grinning: \n. For hexo, interested to see how it turns out, but the tagline is that it's for blogs, which means this is the developers' obvious intent, so I wouldn't try to stretch it too far, unless of course you're making a blog in which case it sounds solid.\n\nAs for the prerelease tag, it's honestly more because we haven't finished polishing up the docs and marketing site for public consumption rather than a lack of stability. There are actually a number of roots v3 website out in the wild already for paid client work and it's quite stable.\n. I think you might be missing quite a bit when it comes to the roots extensions. The docs for this might help, they have quite a large bit of reach:\n\nhttp://roots.readthedocs.org/en/latest/extensions.html\n\nThere are plugins for roots to do a lot, anywhere from pulling json from an external API into your templates, to transforming css or javascript on the way out, to generating dynamic content. There are examples for each of these use cases and more on the page linked above.\n. As for the entry point, roots.cx is currently for roots 2 which does not really have strong plugins. In the next month or two as we roll out v3, this will change. The site I linked is for v3, which has much expanded capabilities and is the one under active development right now. The pipeline is entirely open. You can do anything you want with a v3 extension, all the way down to reconfiguring how roots works entirely, changing the core. This makes it quite powerful, but also challenging to use, a sacrifice that comes with the power. \n\nYes, roots is entirely static, no server-side coupling of any sort, and that is entirely on purpose and will not change. You can still [write within extensions](https://github.com/carrot/roots-util#writepath-contents) to create custom content to any file path you want. If what you are looking for is server-based routing though, this is the wrong place.\n\nI think what I'm trying to say here is that in my opibion there is no time you will ever need server-side routing, unless you are building an API. All you need is a static front-end, an API, and javascript.\n. Definitely. Of course I would recommend pairing a static client with an API, but in the end it depends on what you are comfortable with and/or if you have the time to learn a new flow. Personally, I'd recommend [marionette](http://marionettejs.com/) as the glue between client and server if you do take this route.\n\nClosing this issue but happy to keep discussing if you want!\n. Webix is a different kind of tool, not in the same category. But either way, whatever you prefer I'm sure will work great! :grinning: \n. Woah it looks like you've got some issues with your node install. I haven't seen this error before. It's either an error with node-gyp, or an error with your permissions, or both, certainly not with roots. We are removing the posix module next release because of issues with windows, but it's likely that you'll have issues with other C-linked packages in the future, so it might be worth opening this up in the posix or node-gyp repos and seeing if maybe one of these guys can help you?\n. Oh yeah installing node with homebrew is no good. I think it's an old node version as well? If you use node's official installer you'll be in much better shape. If you are having permissions issues, just chown `/usr/local/lib` and you should be set.\n. I'd say likely because the old version doesn't have C-linked libraries?\n\n> chowning didn't work for my build script for some reason\n\nI don't totally understand this sentence\n. Hey @davidmoshal any update on this?\n. Ok cool, I'm going to close this for now then as it seems to be specific to your machine/setup.\n. It's not the node.js update. If you are having an issue like this, the problem is with your machine and is related to the way you have installed node and/or set up your permissions. If you are having a specific issue, please open up a new issue and detail exactly what it is that's going wrong and we can do our best to help!\n. Hi @mjrev!\n- There might be issues on windows, when v3 is released we should be set but at the moment we're working on finishing up some features still and windows is really a pain. I see from your edit that you have picked up on this -- sorry about that!\n- Using the port env variable should work fine. This has been tested multiple times and has been working. It's possible that there's a different way of setting environment variables in windows, but I don't know what that is because I don't use windows. Perhaps google \"setting environment variables from the command line windows\" or something? There's no magic to this syntax, it's just setting an env variable.\n- If you are using v3 for a v2 site there will be issues. v3 is a breaking upgrade, so there are things that need to be changed before it can work.\n\nSorry for all the problems you've been running into! I'm going to close this issue as we have a number of other ones describing windows problems more specifically, but happy to continue discussing here. Your best bet at this point is to go with v3 from the start, and we will be polishing this up to work better with windows over time. But right now, both v2 and v3 work perfectly well on both osx and linux.\n. We have this in the readme for v3, which is almost ready for release (probably will happen in the next month or so). Currently the stable version on master is now being actively developed or supported. I'll merge this anyway though, why not!\n. You mean dynamic content, right? I think this is a reasonable ask, and would be a good candidate for an [extension](http://roots-web.bitballoon.com/docs/extensions), or an addition to the existing [dynamic content extension](https://github.com/carrot/roots-dynamic-content). Are you interested in helping out with adding something like this?\n. Awesome! Yeah we haven't quite taken all the roots docs live yet, we're still working on a couple pieces :grinning: \n. Going to close this issue as it's not a required fix for roots core, but feel free to keep discussing here if there's anything we can help with!\n. Whoo! So glad :grinning: Also feel free to hit up https://gitter.im/jenius/roots if you want to chat with any of the core team members.\n. Do you have `extract` set to true in your settings? This is false by default, and allows the file to be parsed by other extensions as well as yours (roots core has a default write extension that will parse the file as usual). You can find the discussion on extract [here in the docs](http://roots-web.bitballoon.com/docs/extensions#file-sorting). Try setting it to `true` and see if this does the trick :grinning: \n. Gotchya, this makes sense, and sounds like a very useful plugin. I think there are 2 ways to handle this:\n1. Add it as an option directly to the dynamic content plugin, since it already relies on dynamic content and would need to duplicate a lot of the logic.\n2. Make it a separate plugin that has to be very carefully managed in order to work correctly.\n\nI think I'd swing towards adding this functionality directly to dynamic content personally. This plugin already has most of the logic you need, it detects front matter and parses it, it conditionally prevents writes, and it [uses special properties in the front matter to change behavior](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md). This seems like it's just a matter of adding an additional special property to the front matter :grinning: \n\nMaybe adding a property like `_api: true` or `_json: true` would do the trick? You wouldn't even have to deal the conditional of whether it should also be written as html, since the user already can control this with `_render` as they wish.\n. This all makes sense! Are you willing to take a stab at implementing it into the dynamic content extension? This would be awesome :grinning: \n. Awesome! :tada: As always let me know if there's any way I can help out :grinning: \n. So are you upgrading a v2 site to v3 here?\n. This is not really an issue with roots, it's an issue with your particular project and development environment, so I'm going to close this out. That doesn't mean we can't continue discussing or try to solve your problem by any means though! Maybe asking @slang800 for help, since he was the one who broke it, would be the right move?\n. I would start out by not upgrading to the new version without having an upgrade guide available or fully understanding the changes to the code such that you feel confident with making the upgrade. Once we release v3, we will have an upgrade guide, but since it's still beta right now we don't yet.\n. I think that's probably the way to go for now. However, if you are starting a new app, I think starting fresh with v3 is a good choice. But upgrading can be tough unless you have a solid understanding of what's changed.\n. Sounds like a problem with your `app.coffee` file. But yeah I could probably set up a time this weekend to look through it if you'd like as freelance!\n. Yeah, you'll want to require it as a node package then import it as a stylus plugin in your `app.coffee` file, like the other stylus plugins are :grinning: \n. Looks like the dependencies here are incorrect. You have coffeescript, connect, express, and jquery installed. You need jade to be installed in order for roots to compile jade.\n\nI'm curious particularly about why after running roots new, that would be the dependency list though, especially because none of those dependencies and a lot of different ones are in the base template for roots new, [seen here](https://github.com/roots-dev/base/blob/master/root/package.json). Did you perhaps override the `package.json` at some point?\n\nEither way, the solution to this problem is running `npm install jade -S`, but I'm curious why it happened in the first place...\n\n@samccone -- were you seeing anything like this when you tested windows?\n. Ah ok, if jade is there either roots is completely broken on windows, or there's something really weird going on with your machine. While supporting windows is on our todo list before v3 is released, there hasn't been super heavy work going into it yet. I know @samccone and @declandewet have done a little bit of testing, so they might be able to help here, but I have been working on documentation and such and haven't been able to jump into windows yet.\n\nWe'll definitely take a look at this and make sure it's fixed as quick as we can!\n. Hi @couchcrew-thomas -- if you are planning on using v3 with windows, I would probably hold off for now. I still haven't had a chance to fully test windows, and there might be issues. If you are using linux or mac, everything will work great though.\n. Closing due to inactivity\n. Yeah I also have yosemite and have been using roots with it for a while and not seen this behavior\n. Yosemite's architecture does not change the way roots works at all. Are you sure these aren't just issues that you were having anyway?\n. wow, very strange... well glad you worked it out!\n. Ah that would make sense. God I hate `.DS_Store`, that thing is so stupid.\n. Yeah we could add it to the watcher ignores. Could hard code it too potentially. https://github.com/jenius/roots/blob/v3/lib/config.coffee#L71\n. wat\n. eh, that's fine. i can deal with it\n. Yeah I think maybe we should just have a section of the new docs site that shows example sites built with roots so people can check them out. If they are open source, we can link to the source and if not perhaps we can link to a way to contact the author of the site.\n\nAs for carrot.is, that's not something we can discuss here, so you can bring that up in the carrot.is repo. It would be nice to have that open, but it also would need a good bit of cleanup before we could get there.\n. We're working hard on it and will put it live as soon as it's done. You can see the in-progress version here if you want: http://roots-web.bitballoon.com/\n. This will now live here: http://roots.cx/articles/built-with-roots :tada: \n. Yeah v3 is the way to go. v2 is no longer in active development, and a stable release of v3 is coming very soon\n. And for your last question no, but we are very responsive with reviewing and accepting additional adapters into accord, so it will be available more or less immediately after your PR is accepted. It's more of a quality control thing.\n. :+1: thanks!\n. Looks good, could you add this to the configuration docs as well?\n. Hey should we still try to get this in or close it out?\n. Closing due to inactivity... re-open if we can make this happen!\n. Hey @motleydev -- this is definitely not the right place to post this issue, you're probably looking for [the axis repo](https://github.com/jenius/axis). [Here are the docs for the most recent version of axis](http://axis.bitballoon.com/), in which we removed vertical rhythm (which might be the cause of your issue). This section was out of date and better handled by other stylus libraries (try searching stylus vertical rhythm on github). Personally, I never have used or plan on using vertical rhythm for anything, so I'm not actively invested in working on another vertical rhythm solution from the roots team, although a couple of our members who do use it have expressed a mild interest.\n\nHope this helps!\n. Yeah I know, I'm sorry! We're in between releases right now actually so things are a little wonky. I'd reference 3.0 for everything more or less at this point. It is quite stable, we're just polishing up a couple edge cases and publicity things before launch.\n\nAlso, here's our incomplete docs site for v3. I hope this satisfies the designer in you :wink: http://roots-web.bitballoon.com/\n. Sadly, this is actually a breaking change and would require a major release, so I'm not 100% sold. This is entirely my fault for bundling the deps into core, and has been resolved in v3 though.\n. Yeah, we are using v3 in production for a number of sites. Honestly I'd say it's more stable than v2 right now, we just haven't quite finished out the marketing site and documentation yet. As soon as that stuff is done we'll push it as a stable release.\n. Whoo! We use it for carrot's site and it's working well. We have a variety of extensions now that can help to distribute the content and selectively ignore sections during the compile to speed things up a bit if the site starts getting bigger. @joshrowley has been working a lot on this stuff if you are curious.\n. Ah yeah this is a challenge that a couple of people have run into. Right now I don't have a super smooth way to solve it. The problem is that in order for this to work, all other posts would need to be compiled before any single post was compiled. Unfortunately, this is not possible logically. The other option is that everything can be compiled twice, the first time normally, and the second time with the information from the first compile run backported into the `site.posts` object, which is wildly inefficient and not in sync with how the compile pipeline works at all.\n\nDoing what you're describing here seems like it would work ok. I think actually just writing out the raw posts object to a json file, then loading that file up with ajax from the individual blog posts would work fine. It would give you all the information you need, and it wouldn't really slow down the site, since you can run that ajax in the background while the page loads and in all likelihood it will be done by the time the user has finished reading and is ready to hit the \"next\" button.\n\nYou should be able to access the locals from the after function. After takes a single argument which is an instance of roots' base class. So you can grab the config info on `roots.config` and dig in from there. Let me know if you're having trouble with anything, or if it works out nicely. If it does we could probably turn this functionality into an extension so you could just plug and play and everything would work smoothly.\n. Yeah, I'm not sold on using cached content from previous compiles though. If you make any changes, you can't guarantee that they will be seen, and as you mentioned yourself you can't even guarantee that the cache will be there so it would introduce a whole range of new confusions and errors for roots users. Really the only reliable way to make it happen is to do more than one compile pass per run, which I'm not super excited about implementing.\n\nI think the first step here would be to have an option in which the dynamic content extension generate a json dump of the contents to a location you specify. That way you can grab the file with ajax if you want, which solves the problem in a reasonable way. After this maybe we could revisit static availability of the post content.\n\nDoes this seem like a reasonable route to solving the issue?\n. Ok so this has been resolved by adding capabilities to the dynamic content extension and shipped out. You can see docs for it [here](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md#exporting-dynamic-content-as-json). Whoo!\n. :+1: \n. You can also find this here: http://roots-web.bitballoon.com/docs/environments\n. So update after sourcemap support has been added. It's a requirement for source maps to output a dependency tree, which means that we do have trees for coffee and stylus. If you are saying that jade also gives a dep tree, this is pretty good stuff, and seems like we might be a little closer to the dream!\n. @kevin-smets yes it is. the issue is that roots supports many more languages than just jade. but it's in our plans to slim down the number and force jade by default in order to take advantage of this. Next major step for us is force jade, postcss, babel as the stack, and fully support dep trees.\n\nI'd love to see what you guys have done with your project! That's a really nice optimization.\n. You don't actually need to install sprout, but yeah actually this looks to me like a bug introduced into sprout by a recent addition. @kylemac could you check this out possibly?\n. Hey sorry @ccsouthard, this was a bug on our part and was just resolved. Just run `sprout rm roots-base`, then you should be set for the future with `roots new`. I just tested this to be sure and it worked for me.\n. I would actually not use brew, and would just run `sudo chown -R $USER /usr/local/lib` (as long as you are on a mac) and that will fix the problem :grinning: \n\nHere you also want to chown `/Users/chaz/.node-gyp/`\n. You already ran `sudo chown -R $USER /usr/local/lib/`?\n. So you have chowned both directories recursively that it's telling you there's a permissions error on. This error makes no sense. I would just remove everything and start fresh. Take the paths on both sides of the symlink error and delete them. That means `/usr/local/bin/roots` and `/usr/local/lib/node_modules/roots/` - completely remove both of them. If you have done this, and you then chown `/usr/local/bin` and `/usr/local/lib` recursively, and still get this installation error, there's either something very wrong with your computer, or your node install.\n\nSo here are the steps if you want to be really thorough\n- Remove the affected folders\n- Reinstall node on the latest version\n- Repair permissions on your disk using disk utility\n- Chown `/usr/local/bin` and `/usr/local/lib` recursively\n- Now try again\n. Did you follow all the steps I put in my last comment exactly? You need to make sure all traces of roots are removed, since if you installed it once with the wrong permissions, they will still be permissioned that way when you try again\n. Make sure to use `tab` to complete folder paths. This is the number 1 trick for navigating the filesystem through the terminal. Any time you type in a portion of a path, you should complete it with tab. If it completes, it exists. If not, delete back to the last folder you completed and slam tab a couple more times and it will display your options.\n. Seems about right to me! Glad it worked out! We can talk about the next issue tomorrow :grinning: \n. Huh, really weird. No idea, but that helps since I at least know where it's failing in general, seems like an issue with sprout...\n. Ah that seems like an older version (it's a symlink), but that has been\nremoved. Run `roots tpl reset` and try again that should clear the error\n\nOn Tue, Apr 7, 2015 at 5:34 AM Mitchell Coote notifications@github.com\nwrote:\n\n> How does that package.json file it's erroring on get created? It's\n> located in the roots-base folder, but this file doesn't exist in the\n> roots-base repository on GitHub. Also the only text in this file is one\n> line: root/package.json, which isn't a valid JSON file.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90462425.\n. Ok so this is the error that I've seen happening on windows in the past.\nThe reason this is happening is because the jade file is not being\ncompiled. This occurs on osx and linux when the jade node module has not\nbeen installed, but you have a node modules folder here, check quickly\nwhether jade has been installed or not. If it has, this is a windows bug.\nIf not, it's a sprout bug and `npm install` is not being run.\n\nOn Tue, Apr 7, 2015 at 8:24 PM Mitchell Coote notifications@github.com\nwrote:\n\n> Great thanks, so that fixed that problem but now I'm encountering another\n> with roots watch. When I run roots watch the cmd prompt doesn't throw any\n> errors and it says the compiling is complete, but then it opens up to this:\n> \n> [image: roots_watch_error]\n> https://cloud.githubusercontent.com/assets/5214414/7035859/abdac240-ddd0-11e4-9aae-52a2cfb3a22e.PNG\n> \n> And this is what the directory structure looks after the compile:\n> \n> |   .gitignore\n> |   app.coffee\n> |   app.production.coffee\n> |   package.json\n> |   readme.md\n> |\n> +---assets\n> |   +---css\n> |   |       master.styl\n> |   |       _settings.styl\n> |   |\n> |   +---img\n> |   |       .keep\n> |   |\n> |   ---js\n> |           main.coffee\n> |\n> +---node_modules\n> |\n> +---public\n> |   |   index.jade\n> |   |\n> |   +---css\n> |   |       master.styl\n> |   |       master.styl.map\n> |   |\n> |   +---img\n> |   |       .keep\n> |   |\n> |   ---js\n> |           main.coffee\n> |           main.coffee.map\n> |\n> ---views\n>         index.jade\n>         layout.jade\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90758624.\n. Ah ok, maybe this is an easier issue to fix than I thought. The renaming\nlogic is here in roots:\nhttps://github.com/jenius/roots/blob/master/lib/config.coffee#L138 -- any\nthoughts? Could someone test this out?\n\nOn Wed, Apr 8, 2015 at 12:40 PM Mitchell Coote notifications@github.com\nwrote:\n\n> Yeah I'm getting the same as sourcehunter, the files in the public folder\n> look like they've compiled but they haven't been renamed.\n> \n> On Thu, 9 Apr 2015 1:23 am sourcehunter notifications@github.com wrote:\n> \n> > We are getting the red X, too. Our Jade, Coffee and Stylus files are\n> > compiled correctly, but not renamed.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/588#issuecomment-90949466.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90955027.\n. Woah, not the kind of bug I suspected! Thanks for the fix and breakdown. So\nthat you get the well-deserved credit for this fix, would you mind\nsubmitting a PR for this fix?\n\nOn Wed, Apr 8, 2015 at 4:40 PM sourcehunter notifications@github.com\nwrote:\n\n> Thanks for the hint. This seems to be an error in the CoffeeScript\n> compiler. Your RegExp compiles to:\n> \n> res = res.replace(/.[^#{path.sep}]*$/, \".\" + ext));\n> \n> It seems to parse # as character class resulting in the interpolation\n> beeing ignored.\n> \n> There are two possible fixes:\n> \n>    1.\n> \n>    Put the backslash after the interpolation:\n> \n>    res = res.replace(///.[^#{path.sep}]*$///, \".#{ext}\")\n> \n> ```\n> 2.\n> ```\n> \n>    Introduce a seperate variable for the path seperator RegExp:\n> \n>    if ext\n>      pathSepRegExp = path.sep.replace '\\', '\\\\'\n>      res = res.replace(///.[^#{pathSepRegExp}]*$///, \".#{ext}\")\n> \n> I prefer the second solution, which also covers a few more (theoretical)\n> cases.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-91014506.\n. Hi @Gioni06 -- I need a few more details than this to be able to diagnose what's going on for you. Are you sure this is not an issue with your internet connection?\n. Cool, thanks for the update and glad it's working now!\n. Hey @haxsu, looks like the issue is that your windows username has spaces in it that are not being escaped. Do you happen to know how spaces in paths are escaped in windows? On unix, they are prefixed by a backslash. If this is the same in windows, would be an easy fix here. Also for the future, it's a super bad idea to put spaces in your computer's username :grinning: \n. Of course it would be that -_____________-\n\nWelp, we know how to fix it now. I'm not going to have time to personally write the fix for this any time soon, but if anyone wants to take a crack at it I'd gladly review a PR!\n. Can't you just put that in the locals?\n. I don't really understand. If you want to make something available in your views, you put it in `locals` or the `jade` options. That doesn't seem super unintuitive or confusing to me...\n. Ok good news, this is ready to roll, and sourcemaps are fully functional. Whoo!\n\nWill merge and ship out tomorrow morning :tada: \n. How about adding this to the base template rather than hard coding into roots' internals?\n. Hey @WADaniel -- glad you worked this out! Let us know if anything else comes up, and hope you are enjoying roots :grinning: \n. This is not currently supported by roots. I played around with css injection in an earlier version of roots and it was inconsistent, often things would bug out and I'd have to manually refresh. For this reason I just kept it as a full refresh. Perhaps the tech has improved since then and it's more reliable. We're taking a look at [integrating browser-sync](https://github.com/jenius/roots/issues/367), which would solve this issue. If you're interesting in helping with this, that would be great.\n\nFor now I'm going to close this out as we can continue discussion in the browser-sync issue, but thanks for bringing it up!\n. Awesome, I'm glad you're liking everything else haha. There are a few things we're working on and thinking about in the issues section that would improve roots anywhere from being marginally faster to orders of magnitude faster. Most of them are difficult issues, but we'll tackle them in time :grinning: \n. Yup! We will also be adding this once we release the new roots marketing site, which is in the works.\n. That's fine with me, documenting it is a good idea. Yeah an explicitly passed flag trumps an env var, because I figured if you have gone to the trouble of running the command with that flag, it's probably your intent. Want to open this up on the roots docs repo instead?\n. You're right, this is a known bug in roots v2, I'm really sorry. The current version on master is very out of date, we have been working for more than a year on the next version of roots, which can be found [here](https://github.com/jenius/roots/tree/v3). This version is significantly more stable and powerful, and is looking at a public release this or next week, so we have not been fixing up v2 bugs as frequently.\n\nIf you want to fix this bug, I would definitely accept a pull request for it, but we have been focusing all our energy on getting v3 released and haven't had time to patch up things like this recently.\n. v3 has been released as stable, going to close this one out. Still would accept a PR to backfix it, but we're not focused on developing v2 anymore unfortunately\n. Haha we've been doing some work transitioning people from grunt to roots v3 recently. Cut down a 100+ line config file to three lines, no joke :grinning: \n. Perfect. Thank you!\n. Yup, is is deprecated. The main install of roots is also severely out of date, and we are releasing a new version of roots this week.You can check it out for now on the `v3` branch. Sorry for the awkward transition period!\n. `npm i roots@pre -g`\n\nIf you are new to node and roots I would recommend just waiting until we release the new version stable, which will happen before the end of this week. it will come with clear instructions, documentation, tutorials, and videos.\n. Run `roots tpl reset` and you'll be fine\n. Hey @sperand-io -- thanks for the heads up! It seems like actually this is an issue with npm and your local node install, I don't see any of those npm warnings, and they are not normal. Usually the postinstall is the final message that appears after installation.\n\nThanks for the notice though, and the kind words about roots! I'm going to close this out as it's not an issue with our code, and not one that we can fix, but will keep an eye on it for the future :grinning: Of course let us know if there are any other things we can help with or things you notice.\n. Since this makes no sense and is not reproducible I think we can close it for now. If anyone else reports it and has a way that we can reproduce, we'll reopen and look into it again. \n. You need to make sure you also have `extract` set to true in the options so that the extension handles the file and removes it from roots' compile pipeline. Otherwise this should work fine. Here's an example of a tiny test extension that does a custom path and content rewrite which is part of roots' test suite:\n\nhttps://github.com/jenius/roots/blob/master/test/fixtures/extensions/write_hook/app.coffee#L21-L30\n\nHope this helps! Feel free to drop by our [gitter chat](http://gitter.im/jenius/roots) if you have any quick questions about extension building. It definitely is complicated.\n. The code is tested in the link I just sent you and the test is passing, both on my local machine and on travis -- there is nothing broken on the roots side. You must have some error somewhere in your script. Are you sure the extension is running? Are you sure it's matching the correct files? Are you sure the output path is being generated correctly?\n\nSpend a little time debugging this. Use `console.log` to figure out how your code is being run, and what is going where. Dig a little deeper :grinning: \n. Duplicate of #588\n. Ok so two ways I can see this being worked out:\n1. We're thinking of adding to dynamic content such that you can pass a globstar to it if you want and it will just run that directory. This will probably be added next week and would enable this behavior.\n2. If we added [placeholders](https://docs.netlify.com/redirects/#placeholders) to charge, it would enable you to rewrite correctly. You can do this with netlify already as shown above, if you want.\n. You don't have to close if you don't want. I'll update here when there's a good way to solve this either way!\n. Cool, feel free to open one up there then if you want!\n. Yup this sounds good. Would love to have it merged before next week!\n. I think we actually have this supported now, right @joshrowley?\n. Hey @dustinrjo -- thanks for the well-reported issue. This is weird, never seen an error like this before. In order to figure out the cause I'd need to be able to replicate it on my end and investigate. Is there any way you can zip up the project (sans node modules) and send it to me, or drop it here?\n. Huh, very strange. If you can find anything else or a way to reproduce, let me know for sure, happy to try to help out!\n. Thanks guys, sorry about that. Breaking change in the latest node-sass api. I'll get this merged and shipped out first thing tomorrow.\n. Is anyone working on a fix for this, or have a reliable set of steps to reproduce it?\n. I don't understand your reply, it didn't answer either of the questions I asked, and asked another entirely unrelated question that I am unable to answer since I don't 'get them'...\n. As is the case with any and every issue that you file in any repo, you need to include reproduction steps if you plan on filing the issue and not submitting a fix yourself. This makes it much easier for me to debug rather than having to try to create an error from something unknown.\n\nThe issue itself didn't indicate to me that all errors thrown by roots have no stack trace. The title is vague, and the body is just a screenshot of one specific error you had. I know that you know how to file a good clear issue, could you just take another crack at this one? I need:\n1. A clear and concise description of the overall issue\n2. A set of steps I can take to reproduce the issue\n. You are missing a `html` element in your layout. If you add this it will inject correctly. It looks for that element in order to anchor onto, as it's necessary for any valid html page.\n\nThank you for the thorough and well written issue!\n. As for where to put your pages, you can put them wherever you want, and roots will compile them just fine :grinning: \n. Haha I entirely understand where you are coming from there. It happens. I really appreciate the amount of time you put into trying to debug this and writing up such a clear issue. Let us know if there's any other issues you're running into, happy to help!\n. Cool, thank you! I'll check it out. Apologies that this was not prioritized, I just personally dislike bower and don't ever use it, so it hasn't been a priority to implement so far. I will eventually though, promise!\n. Thanks @hhsnopek! I'm really sorry I just don't have time to work on this now, but I'm sure someone will be able to pull an extension together. It shouldn't be too tough, hopefully!\n. @FranzSkuffka usually npm. if not on npm, then direct or through a cdn. there are many options :grinning: \n. Yup should be working exactly as @declandewet described. Thanks for handling this issue Declan :grinning: \n. Oh you can just add this line to your `app.coffee` file:\n\n``` coffee\nmodule.exports =\n\n  scss:\n    indentendSyntax: true\n```\n\nBasically any options you want to pass to a language you can do exactly like this in roots, just pass it right through `app.coffee`. Now that this works though we should probably ass `sass` as an extension on accord too :grinning: \n. Yeah definitely, I'll look into enabling the sass syntax as well. This\nparticular compiler is unique in the fact that you use the same compiler\nfor two different languages with different extensions, so I'll have to\ntinker around a bit to make sure it's smooth.\n\nOn Sat, Mar 7, 2015 at 9:46 PM Perry Kibler notifications@github.com\nwrote:\n\n> Hmm, kind of works. So, you still have to name your file with a .scss\n> extension, which confuses your syntax highlighting. There are workarounds\n> to that issue, but it's not ideal. I have something mocked up here if\n> someone wants to play with it. This was my first crack at a roots project,\n> it includes some things like contentful integration and yaml front matter\n> too. https://github.com/javaporter/roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/621#issuecomment-77729438.\n. This is a very strange issue. I honestly have no idea why it's happening. Is there anyone that can dig a little deeper? I don't really have the capacity to at the moment...\n. Yeah very strange. Thanks for handling this one @hhsnopek!\n. Hi guys! Sorry for this oversight, everything should be cleaned up and working now so I'm going to close this out :grinning: \n. Looks good to me. I'll push a release with this shortly. Sorry this was unresolved for so long!\n. This was also shipped as `roots@2.1.5`\n. Sorry for the delay, going to take a look at this tomorrow :grinning: \n. This is looking good! Just a couple small things, and also is there any reason tests aren't passing on travis?\n. Hmm ok, perhaps we should enforce a name then and add a test for this before merging, just to be thorough? Does this seem reasonable? I feel like there are many reasons why a name should be required anyway.\n. Ping!\n. Ok maybe we should just merge this up?\n. Closing as this is way to far out of date and doesn't seem like it will be brought up to date.\n\nFor now to work around, just `require('./app')` from your main config, customize and export it. The next version of roots will have automatic merge like this.\n. Yup exactly what I would have said. If you have files you do not want to be\ncompiled you should ignore them to avoid issues. Roots uses extensions in a\nparticular way to make compilation simple for files that are actually\ncompiled. Uncompiled files should either be ignored or deleted and you can\nuse git to keep track of versioning.\n\nOn Sat, Mar 28, 2015, 3:57 PM Henry Snopek notifications@github.com wrote:\n\n> A quick fix to to create an ignore rule\n> http://roots.cx/docs/configuration within your app.coffee, as well we\n> have support for multi-pass http://roots.cx/docs/multipass because if\n> can be useful to use.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/626#issuecomment-87292370.\n. Nope, this logic is quite sound for all normal use cases. I don't think you got bitten by this logic really, it was just that you were using a strange convention for un-compiled or backup files and this was one of the side effects. We spent a bunch of time thinking about each part of the extension compilation logic and making sure that it matches any applicable use case in which you intend to use the compiled file as output.\n\nYou can read more about the logic and why we made the choices we did [here, in the docs](http://roots.cx/docs/multipass). If you do have a use case in which you are trying to compile a file in a particular manner for use in the compiled site and this logic isn't allowing you to do so, detail it here and we can re-open and take another look!\n. Huh. We have a bunch of people who use roots with vim and haven't run into major issues like this. Maybe @samccone or @joshrowley would be able to advise?\n. Perfect, thanks @andyshora!\n. Haha of course, just add this line:\n\n```\njade:\n  pretty: true\n```\n\nand your comments will live on with vibrant life :sparkles: \n. Hahah oh I'm sorry! Totally blew it. This is a question about [the js pipeline](https://github.com/carrot/roots-js-pipeline) then? How are you minifying js?\n. I'll get this added to js pipeline as long as uglify's JS API supports this option. One moment...\n. K, just published, it should now preserve comments. Whoo! :tada: Just update to the latest version of js pipeline and you should be set.\n. Yeah I figured having it on by default was fine. I don't see many situations where someone would write `@preserve` and expect the comment to be gone haha.\n\nThe change was super simple, right here: https://github.com/carrot/roots-js-pipeline/commit/99f2be5be0097a9243aea7974e2e36fd4d605307\n\nI added a test as well and verified that it was working, although perhaps something wasn't quite right? Feel free to take a look at the js pipeline code and open an issue there if you are still having trouble. It's pretty simple code, if you are feeling ambitious you could pull it down and try to open a PR to fix it too!\n. Hmm, that first error looks like an issue with the rimraf package, weird. Let me look into that. In the meantime, thank you for this fix!\n. Hey Paul,\n\nThanks, appreciate it. For some reason, last time I tried to update chokidar it failed the tests and I made #603 to remind me to try to fix them later, but looks like they are passing now :tada: \n. Ok so failing tests and a couple hound comments here, any chance you could patch those up then I'll take another look?\n\nAlso we need to talk about how exactly this will break things. Have we done any tests on machines that have the previous version installed? Do all templates break? What is your plan for smoothly upgrading here without messing up people's stuff?\n. Sorry for the delay, will take a look at this in the next couple days for sure :+1: \n. Closing bc of #644 \n. I feel like if you need to get that specific, this is what extensions are for...\n. Hmm ok. When I have had a use case like this in the past I ended up making a small API wrapper that would do the syncing to other APIs and combining logic etc to make it more straightforward, but if you want to do it all in roots it should be feasible I suppose.\n\nSo you are basically looking for a roots-native hook in order to hack an extension's functionality. Is there any reason you don't want to have the hook added to roots-records itself?\n. I still don't see this happening. You can just drop a tiny extension directly into your `app.coffee` file and use the extension hooks, or write an extension that's just a couple lines and load it. `app.coffee` is only for the basics, not intended to be a massive and complex config file. A lot of the draw of roots for us in fact is that `app.coffee` is usually simple and clean, rather than the gigantic config files that typically are seen with grunt/gulp. Starting to add in complex hooks like this needed for more advanced hacking I feel is a step in the wrong direction.\n\nI'd still recommend making a tiny extension and loading it in here, as it gives you the hook control you need without as much of an extra mess.\n. Yeah Declan covered it quite well. This question is essentially the same as asking \"how does using snapchat differ from texting a picture then deleting it?\". At it's core the two products aim after the same problem, building static sites, but they handle it in very different ways. You could ask the same thing about middleman, grunt, brunch, or any of the other large numbers of static site builders. What it comes down to is that you should watch some of the tutorial videos on the site and try it out yourself. While you might come out with a static site from any of these tools, it's simply a different experience building it. Roots focuses on less and simpler configuration to get you up and running faster.\n\nClosing this issue as it's not an actual issue under active management, but feel free to continue discussion here!\n. Hey @jtwebman,\n\nWow what a post. Appreciate you taking the time to write this out and your point of view. Unfortunately, I just can't totally agree with you. You started out saying that they are the same and we are rebuilding docpad. You then followed this up by pointing out that there are a bunch of things that are different between docpad and roots, but that you like docpad better. I could make a very similar comment to this for brunch, middleman, grunt, and gulp quite easily. It would say that some things were the same, some things were different, but I preferred X or Y. On top of that, roots is not like a new thing we just started. We started building roots more than three years ago, when docpad was in its infancy and not even similar to what it is now.\n\nLet me respond to the concerns you brought up here:\n1. We considered adding a javascript config option, but never followed through because there wasn't enough demand for it. Coffeescript is just cleaner for simple things like config files. You aren't doing any heavy lifting with the code, just config. It would be a very easy feature to add if someone was interested and sent in a PR.\n2. Are there any languages you plan on using that are not supported by accord? I see where you are coming from in theory, but you'll find that in reality accord provides a much simpler and more trustworthy way to deal with compiled languages. You don't need to sort through and find one of potentially a few third party extensions, figure out which one is still maintained, then load it in with any of its dependencies. You just install the compiler direct, add the extension, and that's it. You can trust that accord is actively maintained and thoroughly tested. The team behind this project is quite active and you'll find that getting another language accepted to accord takes no time at all if you have written a thorough implementation and tests. And if you haven't, we'll work with you to get it up to speed.\n3. The employees update the data themselves through an API. It could easily be static if we wanted. In fact, we could easily convert it back to static using roots-records, we just haven't got around to it yet. Most of carrot.is is controlled by a CMS.\n4. You seem to be worried about accord, but I don't get why. Have you had problems with it? Client templates work perfectly fine, give them a shot. We already have full support for jsx in accord and [a template for a working react app](https://github.com/carrot/roots-template-react) in roots and have had this for a while. I'm interested in using react with jade instead of jsx as well and it is feasible, just have not implemented all the adapters for it yet, personally. I'm traveling this year and have less working time than usual. But if anyone is interested in speeding up this process would be happy to work with them. Honestly it shouldn't take more than a day or two to get the tools in place for this.\n5. We could and would add any of these services if we had a need for them. It generally takes us about one work day from a single employee to add a vendor-specific extension. Wordpress extension took me about a day. We build things as we need them. If there's something you need, we would be happy to work with you and make it happen.\n6. We have an entirely separate and very robust library for this called [sprout](https://github.com/carrot/sprout). In fact, as you have seen with accord, much of roots is actually split out into other independent libraries. Anyone is welcome to use these libraries independent of roots. Roots is just the glue.\n7. Wouldn't be hard, just hasn't been a high value feature for us. If anyone wants this it shouldn't be tough to add.\n\nIf you like docpad better, that's entirely ok, you are welcome to use it, and not use roots. If you have a docpad feature that you like and wish roots had, we can discuss that particular feature and I'd be happy to break down why we made the decision that we did. But if you think that roots is \"rebuilding docpad\", it simply could not be further from the truth. They are two entirely different products that handle building static sites in different ways. The only thing that's similar between them is that they produce a static site in the end.\n. @christiansakai did you load the file on to your page in the html?\n. @christiansakai yes it is. You can check the `public` folder if you want to see the compiled files. Probably there was an issue with the path. Have you checked the console?\n. Hey there @Gioni06! Glad you are looking to get involved. Here are the docs for building extensions: http://roots.cx/docs/extensions\n\nIt's not the easiest thing ever, but they can be quite powerful, you can basically mod any part of roots in any way. To get started with this, I would probably create a pass through extension that takes stock of all the pages being processed, then passes them on to the processing without messing with them. When finished, it could do it's thing and generate the sitemap. Shouldn't be too tough once you get it going :grinning: \n. @ngarland79 you should work on an extension that does this! happy to help if you need it \ud83d\udc4d \n. It could in theory, but would make things a little more complex. It would need to come after contentful in the plugin order, and would need to take in a shared object containing some contentful data.\n. You'd need to use the `ordered` property on the extensions you need to run in a specific order to accomplish this. More details here on this: http://roots.cx/docs/extensions!\n. Could you leave a little more detail about what filepaths this has been happening at? Dig a little deeper, look for patterns, and give us all the info you can. I still can't diagnose the issue from this yet.\n. The issue referenced above is definitely the cause. I'm looking into a fix for this today. Closing this issue to prefer #662 unless the original author can provide more detail!\n. Should be set now with the latest release\n. We just need to update accord and push a new roots release. I'll do this tomorrow, sorry -- have been off the grid for the last 2 weeks traveling.\n. Roots `3.1.0`, released today, will work with postcss. Sorry about the delay!\n. @hhsnopek anything breaking in the api between the two versions that would need to be fixed here?\n. @kylemac @hhsnopek ok upgraded and tests are still passing\n. So I did some good looking over everything, and the function that says it's not covered is without a doubt being run. I'm not sure why it's claiming that it's not covered, but honestly I'm not super worried about it, since it is covered, and it seems like it would be incredibly difficult to fix something like this. So I'm just going to merge this up.\n\nOnly change I added here is swapping the default template back to what it should be after the test.\n. So this is a little dangerous as it appears as if you need to patch jade's source, which is definitely not something we can or want to get involved with.\n\nHowever, if there is a way to make this modification through an option passed in to jade (which is preferred, potentially a pull request could make this happen, or it is already possible through more tinkering), we could add an option to accord to include plugins like this, then it would automatically become available in roots.\n\nHere's my suggestion. Make a little example project with pure jade and stylus used via js to compile, and see if you can make this happen without patching either of the sources. If you can, open up an issue in accord to add this as an option. If not, figure out the cleanest way to expose it by modifying jade's source and submit a pull request. Once that is accepted, we can move forward with implementing it through accord.\n. Honestly, not sold on \"hound\" at all. I always am just deleting it's messages -_____-\n. Alternately I could NOT USE IT AT ALL!\n\n![](http://domi.oneradicalsite.com/images/baleeted.jpg)\n. Hey there! Yes, it is. Roots does not support `app.js`, the fact that it works under any condition was unknown to me. If there's enough demand for it, we could add support for this, but `app.coffee` is really just a very simple configuration file, not one in which a lot of coding needs to be done, so coffee just makes it less to write and cleaner.\n. :+1: \n. Sorry, I thought this has been resolved but apparently it has not. If you just go to your `package.json` file and update `autoprefixer-stylus` to `0.7.0`, this will solve the problem.\n. Didn't we update the roots-base template with this set of changes as well?\n. Yes, `dump_dirs` does not support nested directories at the moment. It's possible to add support for this -- are you interested in contributing? It shouldn't be a super tough fix, you can find the place where it's used [here](https://github.com/jenius/roots/blob/master/lib/config.coffee#L145)\n. This should be filed in https://github.com/carrot/roots-records\n\nAt the moment, roots-records caches your data when it starts watching for better performance, and does not constantly scan it for changes. Integrating this type of behavior would be possible but fairly challenging -- maybe someone could help with it though!\n. Hi @Leeds-eBooks -- which version of roots are you using right now? If you are on `3.2.x`, try downgrading to `3.1.0` (`npm i roots@3.1.0 -g`), there have been some strange issues with the latest version. If this does not fix the problem, could you drop a little more detail on which lines, or a minimal sample project that can be used to reproduce the problem?\n\nThanks so much for the thorough report, and looking forward to helping you figure this one out!\n. Great, glad this worked. Yeah the bug in `3.2.x` is with the server. As you probably saw here, it's a very confusing bug, I don't entirely understand why or how it's happening. I'm not on a full-time schedule at the moment so I have much less time to work on this, but I will be taking a look today and tomorrow and trying to work this out.\n\nSorry for the issues, and I'll let you know as soon as we have rolled out a fix to the latest version!\n. should be fixed in v4\n. Hey guys, really sorry this is happening. We have isolated the bug, it's something very strange in charge, roots' web server. It somehow made it through all the tests for 2-3 levels deep of modules, even through 95% coverage on all of them. Crazy. Either way, this bug will be patched up within the next week, for now you can stay on `3.1.x`. Really sorry that this happened, and will update here personally as soon as it's fixed and a patch release is out!\n\n:bow: \n. Ah thanks for digging this up. This is strange, as the version of infestor is the same as `3.1.x` in `3.2.2`, so I'm having trouble seeing why it would act differently. I'll dig into it a little further though when I have a minute!\n. Hey there everyone!\n\nSo I think I have this issue worked out. I've applied a fix and tested it on one project that I was having issues with and it worked. However, I'd like to make sure that I really have this right before publishing this next patch.\n\nFor anyone that has an example project showing the issue, could you link me up to this project and/or share it with me so I can test it and make sure everything is resolved?\n. Still working on fixing this guys. Sorry for the delays!\n. I'm not sure I understand. Do you mean comparing the version you are using globally to produce the actual site, and if you have installed roots locally also by chance, comparing it against that?\n\nThe issue I see here is that you don't actually need to install it locally... we only do this because of netlify's pipeline. I suppose we could add a check at some point, like perhaps before deploy, if it is present as a local install though.\n. I'm ok with having it, but not at the expensive of speed at any time, or with any possibility that it could be annoying. Integration would need to be designed carefully.\n. @Arshad3 I think you might be in the wrong place...\n. I am interested in the concept, but don't have the time to tackle this kind of issue at the moment. I'm really sorry!\n. I'm not sure I understand... could you clarify a little here?\n. Sure, works for me. Very simple change too. Want to PR it in, or I can do it?\n. So the issue with swapping out roots' server is that [charge](http://github.com/carrot/charge) includes websocket functionality that is used for the page refresh. And its API for handling the websocket piece would not work with any other random server, unless it purposefully exactly mimicked charge. This means errors would be thrown left and right in watch mode as nonexistant functions were called.\n\nI assume that whatever server you are trying to replace charge with does not ship with websocket functionality for the purpose of using livereload, and even if it does it probably does not exactly match charge's API. If this is indeed the case, you must give up live reload through roots during development. If this is ok with you, you can simply run your server and set it to use `/your_roots_project/public` as its static root, and manually reload after changes have been compiled. Charge will still run in the background, but takes minimal CPU and you simply can ignore it. If you don't want the page to open automatically on watch, just include `server: { no_open: true }` in your `app.coffee` and nothing will open in the browser on watch, you can open it yourself to whatever port your custom server is running on.\n\nHope this helps!\n. Hm, weird. Segmentation faults are outside of roots' domain, this is a severe memory issue with the machine. We're not really able to catch errors like this or handle them with node... is there anything in particular you can do to replicate errors like this? Could you watch your memory and see if it's maxing out?\n. Agreed, thanks Declan!\n. Hm, this is interesting. I can see why this has never been files before, usually hash is used only in `app.production.coffee` for `roots compile` commands, which are 1 shot and start fresh each time. Are you running `hash: true` while in development?\n. Ok, I'll dig into this a little further today!\n. Not at the moment, I haven't had a chance to fix it yet. I'll take a look as soon as I can.\n\nDoes this still happen if you just run `roots compile` once?\n. I might cross-post this to roots-i18n? I didn't build this extension so I can't say I really am super familiar with its internals...\n. Thanks for the analysis here -- you definitely might be right. I don't really have the time to resolve this myself, but if you are willing to jump in and work on a patch I'd be happy to advise!\n. @davidmarquis sounds good! I don't think it's really a significant issue, to be honest. The thing is, it's extremely rare that roots users actually use the hashing, since deployment services like netlify, which are entirely free and interop very fluidly with roots, handle this for you. Roots has been stable for years, and used to build thousands of sites, and while a small number of people have run into this hashing issue, they all typically solve it by flipping off hashing and using netlify for hosting.\n\nThat being said, roots at the moment is on a feature freeze in favor of [spike](https://github.com/static-dev/spike), which we are using and actively developing going forward. So if you have been able to work out this issue, I think it's ok going forward.\n\nThat being said, really appreciate the super thorough bug report and subsequent investigation -- not many people are willing to go that far and typically just ask me to solve the problem for them, so I really appreciate your taking the initiative!\n. @davidmarquis ah yeah we haven't really pushed any publicity on it yet, but we will sometime soon! it's still production ready and widely in use \ud83d\ude09 \n. Great catch. I've seen this problem come up a few times and been confused by why it's happening, but this makes perfect sense. I'm afraid while it might pass roots' tests, this fix will likely cause issues with a bunch of extensions. I'll take a deeper look into this today and test with a few existing projects to make sure there's no breakage.\n. Yeah, another tough question is how to test for cross-compatibility issues like this. Really, it's going to be a challenge, but at the same time can't be eliminated since it forms an important part of how roots operates. Either way, a discussion for later :grinning: \n. I'm really sorry I haven't got to this. I just have not had the time to work on it recently. The best way to help would be to run a bunch of large roots projects that use different extensions on a patched version of roots with this PR included, and see if any issues can be found.\n\nI do think a better way to fix it would be to have a way of resolving conflicts between globals, than nixing the global override, which is important for some extensions. This is a large core-level fix that would greatly impact the way a lot of extensions work. Another fix I would more readily accept would be a change to the way roots-records injects this option.\n. There must be a `filename` local overwrite somewhere in roots-contentful!\n. Hey guys, I'm sorry for misreading this initially. I never really had time to sit down with it and hash it through, as was probably indicated from my comments. But now that I did, it looks like the original code is a bug, and this fix should be applied.\n\nPending a couple tests with large projects to make sure there are no unintended consequences, this will be merged. Again I'm really sorry for the delay and thank you to everyone who took the time to check this out, especially @knupska for catching the error and making the fix.\n. In `app.coffee`, `module.exports` is an object. Therefore, you must use the key/value syntax as in other objects, not assigning of a variable.\n\nChanging this to `output: '../../www/ia` will work. I just tested this with a fresh project :grinning: \n\nExample:\n\n``` coffee\nmodule.exports =\n  output: '../../www/ia`\n  # all other stuff\n```\n. No problem! Would you be willing to contribute these changes to the documentation? I'm not sure I understand exactly what clarifications you are after, so I'm sure you'd do a better job than me!\n\nhttps://github.com/carrot/roots-www\n. Hi @edravis -- I'm currently working on a very limited basis and have little time to get to support requests. I'm really sorry, I feel bad and have a lot of people to get back to. I am doing my absolute best right now, and as soon as I have a moment I will take a look at this.\n\nIn the meantime, try http://gitter.im/jenius/roots -- you might be able to find some help there!\n. Hey there @edravis! I have a bit of time right now so let me try to address your questions here.\n\nFor browserify, that's fine! I usually use browserify in exactly this way and it works great.\n\nAs far as stylus goes, loading using `@import` works perfectly as far as I know. This is the primary way I load in stylus pieces, and I use it in all projects. In fact, just used it like 30 minutes ago. It might be an error in your stylus syntax. If you can create an isolated example of this I might be able to take a look!\n\nFor the last question, I'm afraid I don't understand exactly what you're asking. If you are using browserify, it will auto-ignore your starting point file. For css, you should prefix any files you are `@import` ing with an underscore to ensure they are ignored by the compiler.\n\nQuestions like this are much better asked in the gitter room though, since it's more of a request for help than an issue with roots! In addition, there are more people than just me there and willing to help so you'd get a quicker answer, whereas not everyone is on top of handling issues in the repo as much. I'm going to close out this issue, but happy to continue discussion here when I am able.\n. Hey @edravis -- this is a question you might want to ask in the gitter chatroom. I don't have the capacity to debug personal roots projects at the moment. It would be amazing if you'd ask in the chatroom and if you think you have run into a bug, come back here with a very specific issue, rather than one that requires that I replicate your project and try to debug myself.\n\nI'm sorry for having to give a response like this -- if I had more time I would definitely be able to spend more helping. But unfortunately for the next couple of months my time is capped pretty strongly so I have to be very careful splitting it up between things I need to work on!\n. Hey there, really sorry about this. @samccone might be able to help point me in the right direction for a fix here\n. We have a branch in the works that will fix this issue. Tested and functional. I'm going to get it released as soon as I can. Just wanted to let you guys know! It will work with all environments as well :grinning: \n. Yes indeed it is! And you are welcome to check out this branch and use it locally if you'd like until release. It's fairly stable just needs a little polish.\n. Fixed in v4\n. Sorry for the late followup, but yeah that should do this trick! Thanks Josh :grinning: \n. Closing this in favor of the accord issue you filed!\n. Glad this worked out, and thanks for the amazing detailed instructions @michaelkornblum!\n. Hey there Ramin!\n\nReally sorry about this, it's my fault and is the result of me not keeping the roots default template as up-to-date as it should be. You can resolve this immediately by upgrading the version of `css-pipeline` to `0.3.x` in your `package.json` file. I will update it to the correct version in the roots default template right now to prevent this issue from happening again.\n\nThanks for the thorough report, and sorry about this issue!\n. This seems like a valid issue to me. At least you should be able to pass the environment flag to the deploy command. If someone could take a crack at a PR for this, would be incredible. If not I will get to this eventually, but I'm afraid it might be a while as I'm pretty strapped for time at the moment!\n. This looks good to me. The failing test is a weird coverage thing. Thanks for diving in!\n. Hey there! Thanks for catching this. It's actually an upgrade to be made to [accord](https://github.com/jenius/accord) -- is there any way you could file an issue there? We'll get it fixed up as soon as we can :grinning: \n. Ok so all the tests here are passing. This is good. The only thing that needs to be ironed out is whether the weird image clipping issue is occurring still.\n. Can confirm that the image issue is present. This really needs to be worked out in order for roots to move forward at all. I am going to start hacking on this with any free time I have.\n. Unfortunately I have very little free time, but I'll do my best!\n. Just did a small test and this should fix #659 :tada: \n. yeah i had one project that would consistently throw it, after this upgrade it no longer is\n. Ok, can confirm that the broken image issue is coming from the livereload system, specifically from infestor, ironically. If this is disabled, images work correctly. Will have a fix ready for this soon, then we can push out the release!\n. Browsersync merge takes care of this :tada: \n. 1. Clone roots and checkout this branch\n2. Run `npm link`\n3. Test away!\n4. When you are done and want to switch back to `3.1.x` (if you do), just `npm i roots -g` and you'll be back to normal\n. Nope, just check out this branch and you're set!\n. Ah great that kind of bug is just what I was after. Nice catch. Fixed in the latest commit, pull down and try again!\n. Dope. Thanks for the help here. I'm going to try to smooth out a couple things and run some tests on a couple larger carrot projects. When these are ready, I'll ship this guy and we can get back to making real progress with this codebase, finally.\n. 1. The problem here is just the dependency tree, not chokidar. Unfortunately browsersync has no solution to the dependency tree issue.\n2. Possible but a janky as hell solution. Would need a mess of language-specific rules and overrides and it's just not something I want to maintain.\n3. The problem again is the dependency tree. If you update a layout file, what does it build? If you update a partial, how does it determine what uses that partial? It doesn't so selective compile actually leads to more errors.\n. @FaizShah nope, there will not be one until a new major version of roots comes out. getting a consistent dependency graph with a large number of flexible compiled languages is immensely difficult. Next version is in the works though and will guaranteed have incremental builds with full dependency trees, and slightly restricted available languages. More info on this as things stabilize, which they are not even close to now.\n. Ok finally this looks ready to go imho. All dependencies up to date, browsersync working nicely :grinning: \n. I think that would be great! Would you be willing to submit a PR for this @FranzSkuffka?\n. A quick google search found some good answers for me!\n\nhttp://stackoverflow.com/questions/23463679/s3-static-pages-without-html-extension\n. I think the current version of roots may be having some issues with the latest version of node. If you clone roots down, check out the `browsersync` branch, and `npm link`, it should work ok. Or downgrade node for now :grinning: \n. Never seen this one before. Definitely not an issue with roots through haha, it's an internet thing.\n. Hey @nomaanp -- this is not a roots issue, you're asking a question about how to use express and nodemailer. I think you might find better results asking in more relevant repos!\n. Yeah I can't replicate this issue. Need a lot more detail here.\n. Sorry we are not going to include a check for the current directory. That's the developer's responsibility to know which directory they are in, not roots'. As far as the second issue, is this the same issue or a different one? If it's a different one, could you open a different issue and please add a bit more detail so we can replicate this?\n. I like having merges when a branch was merged. It shows a concrete piece of work being done then merged back in. Rebase can keep the timeline and the merge bubbles clean, and each branch should be rebased before being merged, but I do not think just making everything totally flat is a good way to keep track of history.\n. Nailed it, thanks @declandewet :grinning: \n. Nothing built in that will do this. The thing is, we can't automatically know what you want to have as your page title, so I'm afraid it's not possible. One thing you could do is use a little local function that would do a string transform though! You could use some regex replacement and perhaps [underscore.string](https://github.com/epeli/underscore.string) to help out.\n\nYou can inject a function into your jade templates through the `locals` key in `app.coffee`. For example:\n\n``` coffee\nlocals:\n  title: (p) -> p.match(/\\/(\\w+)\\.html$/)[1]\n```\n\nThen in your jade template you would call it like this:\n\n``` jade\nh1 Example | #{title(_path)}\n```\n\nOr the way you did it with string concat. But jade can do interpolation like this as well. Hope this helps, I'm going to close out this issue but happy to continue discussion if there's anything else I can help with!\n. You basically have it. There are a ton of ways you can manage to do this. You can use the result of the `source` function in your jade layout to select a key in the `records.data` object like `records.data[source(_page)].title`. You could load the json file with this data into your `app.coffee` file then contain the whole process within the local. You could just drop the raw function into your jade layout and skip the local altogether...\n\nYou got this -- there's no magic going on in roots its just javascript!\n. Of course, happy to help! Nice work getting it in place, and hope roots continues to treat you well :grinning: You are always welcome to join us at http://gitter.im/jenius/roots for the community chat as well if you are looking for some quick help!\n. Thanks! :+1: \n. Ah this is nice, so now that ghost has an API, we could make a roots extension that is able to pull in ghost posts and mirror them into a static site in much the way we have done with the [wordpress plugin](https://github.com/carrot/roots-wordpress). \n\nAt the moment, I don't have the time on my hands to crank this out, are you at all interested in tinkering with an extension? You can see the wordpress one linked above as an example. It's actually quite simple :grinning: \n. If you don't have the code skills, it's going to be pretty difficult to use roots. Are you sure?\n. Only one way to learn, and I'm here to help :grin: \n\nNo way to make it a higher priority, maybe I'd drop in the gitter chatroom and ask. This is open source software though, using and contributing go hand in hand!\n. Need a lot more info here to be able to figure out what your issue is and how we can help with solving it...\n. I'm sorry, I don't really know what webstorm or iron-node are, and unfortunately I can't develop roots around these specific tools. Roots exposes a command line interface and a javascript API, and that's all I plan on having it expose.\n\nHowever, if you'd like to debug an extension, you can quite easily get inside of one of them. Just go into your `node_modules` folder then navigate to the folder for that extension. From there, you can check out the code and add `console.log`s wherever you want and figure out this issue. Another good approach is to file an issue in the extension's repo and ask the author about the issue you are having. You can find roots-collections' repo [here](https://github.com/netlify/roots-collections).\n\nHope you can figure this out, and happy to help if you have any further questions!\n. Sorry that you feel that way @orenmizr! I'm afraid it's hard for me to imagine how directly interacting with the code that's being executed can be interpreted as \"half blind\", but alas I may simply be ignorant to the nature of your apparently superior tooling.\n\nKeep in mind that this is an open source project, and as is the case with all interaction with any open source projects, the most important thing is to make sure you are here with a spirit of openness, politeness, and willingness to learn and contribute.\n\nIf there's other questions I can answer or anything else I can help with I will be here, using my free time to try to make your life easier :grinning: \n. Hey also I had a moment to take a look at iron-node. It says you can just point it to a node.js file and it will do its thing. Roots is written in node.js entirely, so it seems feasible that you'd be able to get it to work.\n\nWhen you run `roots watch`, this is simply a command line abbreviation for a script execution, in this case it's a [node script](https://github.com/jenius/roots/blob/master/bin/roots). So in theory if you can find out where that script is, you can run `iron-node` on that script and it will work the way you intend.\n\nIn unix, you can use `which roots` to reveal the location of the bin's alias. Typically it will be in `/usr/local/bin/roots`. On windows, I don't know because I never use windows, but I'm sure you could figure this out. Have you given this a try?\n\nPlease note that this issue has nothing to do with roots at all, and is just trying to get around a personal issue for you with your setup, which is why I closed it originally. But in the spirit of trying to be helpful, perhaps this will get you moving in the right direction.\n. Where were the files you were looking for? It should be just one file. Did you `cat` the file and see if it actually was the correct bin file? Is there a way to pass a standard command line argument along with `iron-node`? You'd need to call the file and also pass in the `watch` argument. I feel like you could figure this one out, you must be pretty close already.\n\nOn my machine, I can run `$ roots` or `$ node /usr/local/bin/roots` and get the same result. It is a node file. You can also clone down the project locally if you are having trouble finding the files, and execute from there. There is also a [javascript API](http://roots.cx/docs/js_api) which you can load into a simple js file and execute that. There are a lot of ways you could make this work. I just have not tried this personally because I have had no need to.\n\nTruth is that you get the same snapshot effect of stopping execution by just logging out the relevant values and letting execution complete, and/or thoroughly reading the error trace. If I am unable to figure out the issue through the error trace and maybe a console log or two, for me this usually means that there's something about the architecture or the language that I don't understand, which I would need to figure out regardless of my debug tools. You'll find that most javascript developers do not use IDEs or complex debugging tools, (usually just a text editor and browser) but still manage to be productive and write good code. And there's the additional benefit of not needing as many tools or depending on as many things in order to work, which is really nice, hashtag minimalism :wink: \n. This is the best solution we have at the moment!\n\nhttps://github.com/Leeds-eBooks/roots-i18n\n. It definitely should not. Can you control-c out of it and everything works ok?\n. Hmm... this is strange, but I don't honestly have the capacity to debug further at this time. Hopefully another contributor can take a look, or if you dig a little deeper and can find out any more details I might be able to fix it!\n. add `map: true` to your postcss options to enable the sourcemaps for postcss\n. Hey, sorry about this! It seems like ship may have fallen behind with the github api recently, perhaps. I'll look into this soon.\n. Thanks for the update @newswim - good info. I think what you are saying about only pushing changed assets is probably the best solution. But this would be a pretty difficult implementation, and unfortunately I don't see my company allocating time towards working on this, since we just use netlify. I'd be happy to work with someone on a PR to implement this type of thing though!\n. @eliwilliamson Netlify works with roots out of the box as well. Do you have roots as a dependency in your `package.json` file? You'll need it there for netlify to know which version you're after and to have it installed for the compile.\n. I would love to remove this, but I don't know how! Looked around in the settings and didn't find a way to turn it off. You'd have to open an issue in browser sync asking if they could add a setting to disable this feature.\n. Ah nice find. Not sure how I missed that. I'll put this in tomorrow and see if it works!\n. Works! Published as `roots@4.0.1` and live now.\n. Nope! But would be happy to review a pull request if you'd like to try to add support :grinning: \n. Hey there's only one way to improve! For now I'm going to close the issue since nobody is working on this, but happy to re-open as soon as someone is :grinning: \n. Nice catch! Seems like that is the issue. Must have been a typo! Want to submit a PR with a fix to claim the glory?\n. Looks good! Thanks for jumping in and making this happen :tada: \n. How big are the node modules you are loading? Browserify would only take that long if you are loading an absolutely massive amount of code. Take a look at your output file perhaps?\n. You could always just go with [a lighter framework](https://vuejs.org) :grin: \n. Yes and yes. Use it with `vue-resource` and `vuex` for best results.\n. As far as I've seen, thats how things tend to be with angular\n. @EnMod I'm not doing anything special with it, just using it the recommended way with jade. I use `vue-resource` for connection with the server.\n. @EnMod yes, already working there \ud83d\ude01 \n. Better to ask in http://gitter.im/jenius/roots. If that's happening something is likely severely misconfigured. Did you generate a new template to start? I'd start with that!\n. I'm entirely ok with adding this to the gitignore on [the default template](https://github.com/roots-dev/base), if you want to send in a PR!\n. Even making the compiler ignore it I'd suggest adding through the template, with `ignore` in `app.coffee`, rather than adding to core...\n. We're going to have to deal with this for now, because `pug` has only released an alpha breaking version on npm, so the only stable option right now is still jade.\n\nhttp://registry.npmjs.org/pug\n\nClosing this for now, but we will update the dependency once there's a stable version of pug out!\n. Hey, thanks @bosgood! This looks great :+1: \n. Hey @axelboc!\n\nThanks for writing such a clear and straightforward issue. I hope I'll be able to help with this one.\n\n`ignores`, as the docs mention, are only ignored from the compile process, not the watcher. You can use `watcher_ignores` to update which files the watcher doesn't keep track of. These do have to be separate for a good reason, and much thought was put into this particular design pattern. Out of the box, partials are ignored from the compiler but not the watcher.\n\n`dump_dirs` doesn't mean just copy the asset without processing, it basically means un-nest these assets from the folder listed in the array when putting them in the output. Sorry, I can totally see how the description is confusing, maybe you would be able to help suggest a more clear way? So basically, if you have `assets` in the `dump_dirs` array, then you have `assets/favicon.ico` and `assets.css/index.css` in the `assets` folder, in the output, they will be un-nested from the `assets` folder and just left at root, as `public/favicon.ico` and `public/css/index.css`. It doesn't have anything to do with compilation, it just deals with un-nesting nested folders from assets when going to the output.\n\nAs far as static files being copied, basically roots takes any non-ignored and non-compiled files and copies them over to the output. So if there's any file in your source that you do not want to be in the output, you must explicitly add it to the `ignores`.\n\nHope this helps, and let me know if I didn't do a good job explaining any of this and I can take another crack at it!\n. Would love any help with the docs, [they are open source](https://github.com/carrot/roots-www) as is every part of roots!\n\nFirst question, roots never reads any `node_modules` or `.git` folders, you can see [where it skips em here](https://github.com/jenius/roots/blob/d4c08230b5f6f723ab2bef3197caf83aae198d7b/lib/fs_parser.coffee#L71).\n\nSecond question, no, the default is in the base template. We purposely give users control over whether they want to use the partial pattern or not by not putting this in core.\n\nFor the third question about flipping things, from our experience the answer is no. This way of doing things is very frustrating, and results in really huge config files. Gulp/grunt etc work like this and you have seen how huge their configs get. If there's a file in your source, chances are you want it to be compiled somehow.\n\nAs for the debugging, it's tough on windows. Nobody that works on this has windows, so it is just not a priority for us at the moment. As for the verbose option, it should work, if not that is a bug that should be fixed! You can always pull roots down, `npm link`, and log the filename out from the compiler.\n. No problem, glad I could help! Happy to answer any other questions if you've got em \ud83d\ude00 \n. Ah so great, really glad you found a fix for this!\n. Yeah I'm sorry about this! I'm not going to have the time to get it back online though unfortunately. If you still have a roots v2 project I'd recommend upgrading to a more recent version. If you have specific questions, I can try to help.\n. You can provide any help that you can! I just do not have any extra bandwidth that I can dedicate to this, unfortunately.\n. Yup! https://github.com/jescalan/roots-www-old\n. You need to add a `CNAME` file to the repo for the domain to work when I point it there, see the docs here: https://help.github.com/articles/using-a-custom-domain-with-github-pages/\n. @ganar the domain redirect is set up. `CNAME` for `v1.roots.cx` points to `ganar.github.io`\n. Note to self, when this is merged turn on greenkeeper\n. Unfortunately it is not, because of dependencies - see #586 for a full explanation.\n\nHowever, we are working on a next-generation version of roots called [spike](https://github.com/static-dev/spike) that holds on to a full dependency graph and solves this problem. It's in early stages so I wouldn't yet build any important production apps on top of it unless you want to be in close contact with us about bugs and breaking changes. Either way, in our experience so far it's been significantly faster in watch mode, so if you want feel free to keep an eye on it!\n. The plan at the moment is once spike is fully stable and released to put Roots on \"LTS\", basically in maintenance mode. No new features will be added, but bugs will be fixed, dependencies will stay up to date, and everything will continue working as is. Down the road we will decide how long of a period this will be, but it will be at least a year.\n\nEssentially, we have done what we can with Roots, it works well for us and many others, and we use it at my company in production for a large number of sites. But in order to keep pushing forward we need to get past limitations that require significant restructures to resolve, and therefore are moving towards a different project in order to not push another roots release that will be so different that migrating to it from an existing roots project would be an obscene amount of work.\n\n**tl;dr** Roots will stay entirely stable and well maintained into the future, but if you want bleeding edge features, we can make that happen with spike.\n\nEdit: Also, roots will be moved to the `static-dev` organization sometime in the future. We are completely committed to keeping roots sites in good working order, and only will start winding it down once spike has completely outdone it on every feature.\n. So multipass compilation is a fairly complex process with very specific rules. You can see a breakdown of these rules [here](http://roots.cx/docs/multipass). Based on what you have here, I'd guess that you are using a compiler that processes `.js` files, which is why you are getting this result. If we change the rules around for multipass it would break many other situations, so I'm afraid we can't change this.\n\nWhat I would recommend is changing the filename to `compiled-min.js`. Since you have roots set to process `.js` files, it's going to take any `js` file you have in your project and run it through. Most people use roots with `coffee` or without processing `js` at all, so this problem hasn't come up in the past.\n\nWhat we could do from our end is to add an option to pass in a glob matcher that forces files to be copied instead of compiled regardless of the extension. So you could pass an option to `app.coffee` like `forceCopy: 'assets/vendor/**'`. If there is enough demand for this or if someone wants to submit a PR, we could definitely make it happen!\n. Any interest in taking a stab at contributing `forceCopy`? It might be a good spot to jump in to the codebase, and I'd be happy to help. Otherwise I can make it happen eventually, but it might be a bit since I have a lot on my plate at the moment, and it's not an issue affecting my company at the moment, so it's hard to get these things to the top of the priorities list.\n. Hey there @Hoenoe! A better place to ask questions might be [our gitter chatroom](https://gitter.im/jescalan/roots), this is more a place for things that might be an error with roots.\n\nIn this case, your issue is entirely outside the scope of roots. Roots' use of handlebars is to compile templates into static html files, which is is doing exactly as intended. You are trying to use handlebars through javascript on the client side, so you should _not_ be using handlebars through roots, as the two might conflict, and this is probably the source of your issue.\n\nTry changing the file extension to `.html` and running it that way.\n. Great! If you want to precompile the templates, you could always try the [client-templates extension](https://github.com/carrot/roots-client-templates) as well\n. Hey there @reubano,\n\nUnfortunately, if that was the case hardly anyone would opt in for the analytics. This is not because people are objected to analytics (we have thousands and thousands of users, less than 1% opt out, and this is the first time anyone has ever opened an issue about it), it's because it offers them no benefit, so they would not put extra work into enabling it.\n\nHowever, the analytics on roots are quite important for us. As you know, roots is free open source software. I take my free time to make it for the benefit of others, and my employer also sponsors a decent chunk of my efforts, since we use it for our work. Having some relative numbers as to how many people are using roots is an important way to validate the extra work that goes in to making this publicly available and offering free support to all users. With rough numbers (which, by the way, are also entirely open source, anonymous, and available at http://roots.cx/analytics, including the API key which anyone is welcome to use), I can say \"there are X people using roots\" to my employer, and they can present this to other companies wondering about our credentials, and whether the products we build will be stable.\n\nOn top of that, it helps us to understand how people are using roots. Which features are being used, and which ones aren't. This makes roots a better product for our users, since we don't need to pour extra time into unused or rarely used portions, and are encouraged to put more time into features that do matter to people are are getting heavy usage.\n\nTo be honest, even offering users the ability to opt out and notifying them is a huge step beyond what pretty much any other project offers. Every single website you visit, including github, tracks you at a much more granular level than roots analytics does. It knows your IP, location, some basic user demographics (thanks to google), and every little action you take on the site is tracked. You are not notified, and there is no way to opt out. Same with every single app you use on your phone.\n\nI feel like it's fairly generous in the first place to not only pour hundreds of hours of my personal time into this project and provide it completely free for you, but also give out the analytics API keys freely to the public, purposefully make the tracking very anonymous to collect the minimal information we need, and offer users a way to easily opt out upfront. That being said, I'm not going to make this change. However, as this is MIT licensed, you are more than welcome to fork it and make the change yourself!\n. > Isn't it also possible that people do object to analytics and just aren't aware they are being tracked?\n\nIt is possible, but this would be their own fault for not reading the very clear and obvious message about it after installing, so I feel like it's unlikely, and even if it is the case there's nothing I can do about it.\n\n> A page which isn't linked to anywhere (that I could see) from the roots site.\n\nIt's linked in the message about analytics that appears on install. You know, the one that brought you here. It's not relevant to the roots site, where people are going to find out about how to use roots. However if it would make you feel better, I am more than happy to add a link from the roots site. In fact, you can add it yourself -- [roots' website is also open source](https://github.com/carrot/roots-www).\n\n> Roots is modular, so wouldn't you get the same information from the npm stats of the respective plugins?\n\nNope. Npm only reports number of installs. If someone installs roots, they also install all the dependencies with it (they are dependencies after all), so it gives us zero information.\n\n> But open source projects, unlike websites, are installed onto your machine.\n\nYes, _but it's open source_. You can look at the source before you install it. In fact, you should do so. This is not the case with a website or app. Any open source project (or closed source project for that matter) that you decide to install on your machine without reviewing the code could install malware on your machine. This argument has nothing to do with analytics at all. If you are installing a program on your machine, you should ensure that it doesn't contain malware in any circumstance. In this circumstance, it's particularly easy, given that the code is open to the public, clearly written, and thoroughly documented. It is each user's responsibility to check what they install on their machines, not mine.\n\n> I would hope you hold roots to higher standards than mobile apps, many of which are so full of ads...\n\nThis has nothing to do with the argument at all. There are good mobile apps and there are bad mobile apps. There are good open source projects and bad open source projects. This has nothing to do with analytics.\n\n>  I'm all for creative funding for OSS, but this just seems sneaky\n\nThere is no way for us to get usage stats on the project and be less \"sneaky\". The code is open for anyone to read fully and fork if they want. We display a prominent message to each user on install notifying them about it. The data is 100% anonymous, and we even provide all of the raw data openly for anyone to look at and analyze. Calling this \"sneaky\" is nothing less than disingenuous, I'm sorry.\n. http://roots.cx/docs/error#eacces-permission-denied\n. @cassianomon haha it's totally fine! you don't need to delete it, someone else might have the same problem in the future and find this, never know!\n. @drbe4t You can check the `package.json` file under `dependencies` to find out!\n. Yep #725 has the answer!\n. There isn't nearly enough information for me to be able to tell what happened here, but I'd give it a 99% chance that it's something a little messed up with your machine rather than an issue with roots. This type of issue is better to take to https://gitter.im/jescalan/roots, since it's a support request rather than a bug, come meet me there!\n. Hi @calebeby! Sorry for the delay, I've been tied up with some projects recently. This looks good, could you add a simple test to verify that it's working, potentially?\n. @calebeby this is probably the closest match. this is a pretty tough test to start on - let me know if it's too confusing!\n\nhttps://github.com/jescalan/roots/blob/master/test/watcher.coffee\n. @calebeby so really the only thing you need to test is that the options are being passed through to browsersync correctly. they have tests for their own features, we just need to be sure the configuration is being passed to it!\n. @calebeby So it will use whatever fixture you pass in when initializing the watcher class [seen here](https://github.com/jescalan/roots/blob/master/test/watcher.coffee#L42), which for the existing test is basic.\n\nIf you need a new app.coffee, you're welcome to make a new fixture and pass that in, or you can pass your config options to the roots class when you initialize it, [see js api docs](http://roots.cx/docs/js_api)\n\nTo check the variables passed through the internals, you can use the [mockery](https://github.com/mfncooper/mockery) package, you can see it at work in [the CLI tests here](https://github.com/jescalan/roots/blob/master/test/cli.coffee#L2). I think the approach here would be to replace browserify with a mock, then check the config coming into it through the mock\n\nHope this helps, and fire away with any more questions! This is definitely on the more complex end of tests that could be written, so big props for jumping in and going for it \ud83d\ude01 \n. So if you are running as root, it doesn't really make much sense that you'd get a permissions error, as the root account should have permission to access anything, especially its own home directory.\n\nI have not had much experience with docker, so I can't really give a lot of info about how docker works with respect to root accounts and permissions, but I can assure you that what's happening here is exactly what roots intends to happen. It's finding the user's home directory and placing a configuration file there.\n\nIt's likely that a lot of other node libraries don't use this functionality because they do not store global persistent configuration information. Roots does however. It keeps track of whether the user wants to disable analytics, their default template preferences, and stores any roots templates they have installed. Generally the active user's own home directory is pretty much a sure bet to be something that user will have access to (although apparently its not the case in this instance, confusingly).\n\nThere is no question that this is an issue with the container. The fact that the `root` user cannot access its own home dir is not normal, nor does it make any sense. This part of roots' installation is indeed not extremely common with other node libraries (although there are a number that do have it, and would encounter the same issue). But that doesn't change the fact that this is an issue with the docker container, and not with roots, which, judging by the error you posted here, is doing exactly what it was intended to do.\n\nLet me lay out the issue as clearly as I can so it might help you with reporting it.\n\nIn node, you can run the following code to get a user's home directory, which that user should _always_ have permission to view and modify or there are serious issues with the machine's configuration:\n\n``` js\nvar os = require('os')\nos.homedir()\n```\n\nFrom the command line, you can get the home directory as such:\n\n``` sh\necho $HOME\n```\n\nWhat roots does on installation is run [exactly this code](https://github.com/jescalan/roots/blob/master/lib/global_config.coffee#L18), then [creates any nested folders](https://github.com/jescalan/roots/blob/master/post_install.js#L19) that might be necessary inside the home dir. Generally, it will create `$HOME/.config/roots`, in order to store the global config information.\n\nThe issue here is that the user does not have permission to modify their own home directory. Now, if this is some type of strange docker limitation, you can always change the home directory by setting the `$HOME` variable in bash to somewhere that the user does have access to before running the roots install. Otherwise, I'd call this a bug with the container.\n. It's not possible at the moment, although roots' cousin [spike](https://github.com/static-dev/spike) does have this capability!. Shipped as `roots@5.1.0`, sorry for the delay!. Hey @Reinkaos! Thanks for pointing this out. It appears as if this is a bug. I'll have it patched up and a new release out to resolve it shortly \ud83d\udc6c. Hey actually, anyone interested in trying to submit them patch themselves? This is a fairly straightforward change if you understand how promises work \ud83d\ude01\r\n\r\nThis is the method that needs to be slightly retooled: https://github.com/jescalan/roots/blob/master/lib/api/compile.coffee#L106\r\n\r\nBasically, `W.resolve` should be used here instead of `lift`. So axis is a transparent library, meaning that you need to use its functions for it to show itself. It's not bootstrap, and will not automatically style your page for you -- you choose when to use it, and what elements to use it on. It is there and ready for you to use in your stylesheets when you need it though.\r\n\r\nCheck out [the docs](http://axis.netlify.com/) and use one of its functions, watch it shine \u2728\r\n\r\nClosing as this is not a bug and is a support question, but please feel free to continue commenting here if you have more questions, or take it to gitter!. Hi there @inferi0n -- this is an issue with sprout-static-cms and not roots, so I'd report it over there. Chances are this repo is unmaintained though, I must warn you!. Check here! https://github.com/jescalan/roots/issues/726. The error message gives you the solution!\r\n\r\n`Error: Use CoffeeScript.register() or require the coffee-script/register module to require .coffee files.`\r\n\r\nIf you need to require a coffee file, just run `require('coffee-script/register')` at the top of the file you are requiring into. Or use a regular js file.. @jonschlinkert Thanks for your great work on micromatch! Really appreciate it \ud83d\ude47 . Yep, there are tests in place to ensure this behavior, and they are passing to my knowledge. If you can make a small project that reproduces this issue it would help!. I just pulled that project down and compiled it, and it did not use the production config. This can be verified by adding a `console.log` to the production config file, and running `roots compile`. If the console log doesn't appear, it's not using that config.\r\n\r\nAre you 100% sure the production config is being used in your case? What steps have you taken to verify that this is the case? And what operating system are you on?. So I am unable to reproduce this issue, I'm sorry! That being said, I ran this on a mac, not windows, so that might be related to the issue. Unfortunately I do own a windows machine, and also not have the time to look into this any further for you right now. However, if you want to look into it that would be great!\r\n\r\nThe point where the config pull happens in the source code [is right here](https://github.com/jescalan/roots/blob/master/lib/config.coffee#L78). It's written to be as clear as possible, and is heavily commented.. Nice, glad you got it! \ud83d\ude4c Good detective work.. ",
    "samccone": "Scss and compass \n. ha so the idea was to abstract the like hard coded names into a list to iterate over... basically just wanted to remove that while loop.\n. ;(\n. ah so no sub directories on this... i will add that now\n. seems... interesting\n. :thumbsup: \n. I'll look at it today\n. fixed in https://github.com/jenius/roots-cli/pull/15\n. hmmm i would say leave this up to the dev to code their CSS / JS correctly \n. meh... the 2x thing is just a practice that some people use... i think there are better ways to do it .. but that is it .. it is a preference on a case by case basis. \n\nbut if it is a mixin then i see no harm \n. ha, \n\nSVG with modernizer png fallback all the way .. 2X is a broken model because the first 2.5 pixel density screen will completely break 2X sites\n. typically this happens when generating the AST, try the unminifed version of uglify \n. trololololol\n. should be simple.... looks like i know what i am doing tonight :)\n. @ajkochanowicz npm install -g roots@2.1.0-beta3\n\nif you want to live on the edge :+1: \n. yup ha :)\n. :tractor:  ok heh ... as I said to @jenius this was only \"lightly tested\"\n. :watermelon: .. so you got it?\n. :+1: \n. oooook\n. how do i reproduce ... i can't seem to make it happen\n. ah not yet.. can you push an example of a project that does it to a branch for me to debug?\n\n:dancer: \n. ill open a PR tonight :dancer: \n. ha :water_buffalo: \n. prob just wana cherry pick in dcaab05\n. hey @jenius so the 500ms is not really impacting the reload...\n\nthe change was we had to swtich to polling instead of FS events due to OSX -- sass and stylus both do this\n\nonce node fixes their core we can mod this\n. sure sure, i agree, today at lunch i will mess with it and send something upstream\n. :thumbsup: \n\nlooks good to me @jenius \n. :computer: \n. @aemadrid would a video like \"building a simple site with roots\" be helpful?\n. @jenius \n\nI could do it probz\n\n:water_buffalo: \n. blahhh just make them hahahahah someday I will be less busy\n\nmy goal for this weekend is to rip out that watcher \n. hmm we could just throw a warning @jenius like are you sure bro?\n. ok @dz0ny and @Kazy  thanks for the feedback, this should fix it :dancer: \n. closing it now that is has been merged \n. hmm i did look i guess i was expecting it to be in a different spot :\\\n. blame it on the :santa: suit\n. oh man... \n. yeah I can add these things in \n. woah this is crazy but maybe outside the scope of this project\n\nthoughts @jenius \n. can't reproduce ... closing for now\n. yup\n. it is free for 30 days \n\nand it can be optional ... like roots deploy jitsu \n. +1 for less code to maintain \n. ha, no i mean like the starting files ... are a bit hard for newbs to understand\n\nlike we should have a layout.. like you do and an index file\n\nand a main.styl\n\nthen in the index.jade we should say ... edit index. jade located here....\n\nand edit layout.jade located here...\n\nthat is all i mean :)\n. if you start a new rails project.. loook at what it shows you when you start ..\n.\nbasically it says \"edit these files to get going!\"\n\nthat is all I am saying... i think it will just east the pain for \"new\" users \n. the default contents of the index page\n\nalso just remove some of the misc .styl and coffee files in the project\n\nbasically just clean it up a bit\n\n(i am leaving these issues for me basically i will open PR's for you) \n. :thumbsup: \n. yeah ok whatever you want really\n. we dont need it here since it is only for the watch command.  process.env.PORT is typically used for deployment not for what we are using it for...\n\nif anything we would have our own like ... process.env.ROOTS_WATCH_PORT or something\n. i know i know... but i guess calling it PORT is kinda not clear? but hmm i will add it back in\n. typically I separate out the routes because the server gets quite messy when you have more than like 3 routes\n. false! commas at the end is betttterrr!\n\nthe logging is super helpful.. we are not really starting \"express\" more of a webserver that uses express \n\nalso we should tell people how to stop the server no?\n. ha! you shall learn :)\n. :dancer: \n. ah my bad\n. ah opps based it off the wrong branch hehehe\n\nand no it does not slow it down, drop like 10 images in the project now, it will only recompile once\n. you can't stylus mixins and sass mixins do not mix \n. no worries, cheers :)\n. heh @denisfl i <3 sass as well .. blame that one one @jenius \n\nhopefully we will have a sass lib to plug and play with soon \n. Hey @jsncbt  yup this is totally an issue currently we are aware of it :) \n\nthanks!\n. well I know @jenius is mid major rewrite but I would think since the stylus mixin is modular it would be a simple fix\n\n@jenius --\n\nbasically we see if the file has a _ in front of it and if it does .. do not include it in the chain \n. @jenius yeah will expand on it tonight, I think it is the same issue I was seeing before \n. :thumbsup: \n. @jenius we should scrape dribbble and throw up some examples of what we are looking for eh?\n. http://dribbble.s3.amazonaws.com/users/60166/screenshots/975975/the_rocket2.jpg\nhttp://dribbble.s3.amazonaws.com/users/4094/screenshots/975606/drib148.jpg\n\nin this style?\n. :thumbsup: \n. @brooss thanks for the additional work.  Look up at the links I posted for the style we are looking for\n. +10 @ryan2611 \n\nSo I think the idea of integrating the words is critical to this working so props on that\nI wonder if there was a symbol to the right or behing the type if it might set it off even more.\n\nI also think there is room for some color into this to increase the contrast.\n\nThannnkkks for the awesome work :water_buffalo: \n. ah yes this is nice quite nice indeed\n. i dig the square, hmm i think this is like :ship:-able \n\nSo yeah we would just need the svg version of this art and we will be good to go.\n\nthis has my :+1:  \n\nthoughts @jenius \n. ah I have always been a fan of pastels\n. yeah I would be down for all of those\n. :shipit: \n. @jenius we should animate it with your special sauce \n. \\u0007\n. turn on your speakers it should make a \"bell\"\n. it does your computer is borked \n. http://en.wikipedia.org/wiki/Bell_character\n. do not think there is one ATM\n. @randallagordon want to open a PR it makes it way easier to review your code.\n\nThanks for this!\n. yup, sure can, pull requests just make it real easy to review and leave comments on single lines :)\n. :8ball: \n. :rabbit: time\n. typeof is always the way to go\n\ncoffeescript is a preference\nas well as lots of the nits you have made in your PR\n\nit is not good practice to go into an OS project and reformat the code base \n\nin the end style is up to the author.\n. I tested this... \n. hey @jenius can you clone this and run npm test https://github.com/samccone/monocle\n\nand then if that passes tell me where and how you are creating this new file that it is not finding it\n\nhopefully we can debug this and write a test that covers this case\n. weird that this passes on travis CI and on my systen\n. what version of node are you on?\n. fixed on #101 \n. :thumbsup: \n. this is starting to feel CMS'ey eh?\n. yeah...\nso it should be separate and very decoupled from the core IMHO \n. on this same thought process, I am going to tip the watcher out of this project and just make an NPM for it \n\nwe should do the same for all the big pieces of the project, \n\nlots of little pieces that do something well \n. no no i mean it did not even prompt the error in the browser.. silent bomb\n. +100\n. try catch will fix it\n. :gb: :ok_hand: \n. :+1: \n. woah... this is weird eh @jenius \n\n@wismer run npm install -g roots and try one more time\n. :water_buffalo: \n. :underage: \n. good idea @tvararu :monkey: \n. https://github.com/samccone/updater\n\n:)\n\nI started writing it, then i got caught up in just \"how\" much it should do\n. ok i got it\n\nso write bad stylus\n\nfix it\n\nthe error html is still there because it is only recompiling the CSS file!!!\n\nHUZAHHHH\n. basically we need a flag to know if it is an error state and if it is ... then recompile the entire project .. :pray: \n. oh frick it donned on me.. so save a file from chrome into the directory \n\ni think chrome saves a tmp files and that is bombing it \n. :kimono: \n. fixed in https://github.com/jenius/roots/pull/115\n. weird.. can not reproduce now... closing for now\n. ![](http://dogesay.com/wow////such/burn)\n. :cow: \n. via https://github.com/jenius/roots/issues/112\n. closing this for now. we can reopen when @randallagordon starts work on it again.\n. :shipit: \n. woah... this is weiiirrd\n\nthoughts @jenius ?\n. So I think we can fix this by wraping the copy sync in a try catch\n\nI had a similar problem with chrome tmp save files.... \n. are we ignoring the .git directory .. it looks like we are just doing it for the .git file\n\npublic/.git/SMARTGIT_PENDING_MESSAGE\n. :thumbsup: \n. Ah this is a solid idea actually\n. moving this discussion here https://github.com/jenius/roots/pull/123\n. ah i know what it is... crap crap crap fixing now.....\n. https://github.com/jenius/roots/pull/122\n\nugh we were not locking the V of monocle and i updated it a bunch yesterday\n\ni recommend force publishing this to npm\n\ncc @jenius \n. looks like it is actually an issue with roots :wink: \n\n  function watchDirectory(args) {\n    readdirp({ root: args.root, fileFilter: args.fileFilter, directoryFilter: args.directoryFilter }, function(err, res) {\n      console.log(arguments);\n\n{ '0':\n   [ [Error: Cannot mix negated with non negated glob filters: !.git,!public,!plugins,components\n     https://github.com/thlorenz/readdirp#filters] ],\n  '1': null }\n. just fixed it :+1: \n. so tests pass on this, but i think there are going to be some issues with the deploy stuff, like we will need to rename the folder back to public\n\nbut this should give you an idea... also this dries up the sh%$ out of stuff so that is good\n. gotcha that makes sense\n. watch out for suspicious :package: 's\n. yup\n. fixed and fixed\n. yup\n. Boom.  Still not sure how we ever got in this case tho.... \n. Will look into this @Daiz- \n. yeah i have a windows box here at work so i will use it to dev on\n. i have seen mixed results on the few windows machines I have tried \n. yeah it would be cool,  is this out of scope tho?\n. it does but you need to tell it how to sort\n. ?\n. ah what was it?\n. ok @slang800 left you comments , by splitting this up into logical commits it makes it easier to review and also leaves a better git log for people to follow\n\nby doing several unrelated things in a commit it is very hard to understand the intent of any given commit \n. :thumbsup: \n. = yield :footer\n= yield :content\n= yield :head \n. i think different regions is a big +\n. So i have been giving this tons of thought lately. \n\nI think I want to start out with a CSS asset graph. I think whati will do is take some CSS generate a AST https://github.com/NV/CSSOM\n\nthen spit back an array of files that this file includes / uses.\n\nI think we can do this all in chunks... thoughts?\n. hmmm however i see what jeff is saying \n\nin a main styl file you could do @import foo\n\nthus main now depends on foo so when foo is updated we now have to update main \n\nand so on and so on\n\nI think AST's are the way to go, \n\nso for stylus ... round 1 i think just knowing about imports would be HUGE\nhttps://github.com/samccone/stylus/blob/master/lib/visitor/evaluator.js#L651\n\nso picture this\n\n`connectedNodes = graph(filepath)`\n\nwould return something like\n\n``` js\n[{\n   \"myfile.styl\": [\n     { \"mysubfile.styl\": [] }\n   ]\n}, ...]\n\n```\n\nthat would could then map the relationship from\n. ha.. that is one way... except we would have to fork the compiler or duck punch it :goat: \n. yeah that is what i mean :) http://en.wikipedia.org/wiki/Monkey_patch\n. alllllright\n\nso a very very simple pass at an import only asset graph for stylus \n\nafter messing with a few ways to do it I have decided that monkey patching a function in stylus and ripping what i want out of it is going to be the cleanest way. the other way being to path the FS or have a ton of ugly regexes.\n\nSo lets talk about why I think this way is idea;\n\nFirst I am actually not even compiling the stylus. I am only generating the tree and evaluating it. not compiling. So that means this is really fast. I just think this is going to be the way to go for each type language we are going to support. \n\nthoughts are welcome. \n\nhttps://github.com/samccone/stylus-graph\n. hmmmmmmmm maybe maybe maybe I will try both :)\n. @slang800 fs will work for imports only, it will not work for images / fonts / ect ect \n. let me say again that this will only give us a graph of the entire project, not a per file graph \n. https://github.com/samccone/stylus-graph\nhttps://github.com/samccone/jade-graph\n\nI still think this direction is really the best way\n. indeed but your solution would require a true compile on each file, where mine acts as more of a static analysis tool.\n. maybe an option? or we can detect windows? process.arch i think\n. :facepunch: \n. see https://github.com/jenius/roots/issues/149\n\nbut in the meantime I think.. maybe this could be something that we could add \n\neh @jenius ?\n. I guess we could only watch the style folder if someone passes a flag like `--only-style` or something similar \n. +1 for concating  files \n\ni think using require from within roots is kinda a mute point since we are already compiling the project... why not just combine it all into one file?\n. fair\n. resolved :chicken: \n. @jenius maybe I should just add this to monocle by default to ignore ?\n. this is the best fake PR ever :kissing_cat: \n. posting the patch vs an actual PR \n. @jenius lets split this PR up into pieces. that way we can be more granular. I think @slang800 recommended doing a v1.5 branch or something \n. maybe commit still has a bunch of random non \"code\" commits\n\n1034da2\nda090fc\n7cb7852\n. @slang800 you can edit it, just force push over the branch the PR is based off of\n. yeah i think that making roots-git an independant npm module would be the 'best' way to do it\n. Well by making it its own module we can test it independently from the complexity of roots. It also allows for separate development cycles and releases.\n\nLike if we find a bug in git stuff we can just deploy a patch fix, as compared to re-releasing all of roots \n. yeah that is a good idea\n. +1 @slang800 \n. https://github.com/libgit2/node-gitteh\n. @slang800 i will review if you do not mind squashing down the commits into logical and semantic groupings\n. well I think that what you just said is symptomatic of the issue (unorganized code). So an approach you could use is to squash it and then split that large commit into multiple groupings of atomic changes.\n\nLet me know if this makes sense. \n. alright cool @slang800 so I think it would be valuable to have tests for this all in one commit maybe at the top of the tree.\n\nThink of the tests as a way to document the intent of this code. What you want to accomplish. \n\nAlso it acts as a really nice way for someone reviewing (me) to get a sense of what the goal of this code is. \n\nplus tests are good, and we need more of them because we have very little coverage at the moment in this repo.\n. sure but adding tests is always good. We have minimal to no testing on transformers as it stands. So basically it is hard to verify from a high level if functionally has been maintained. \n. oh (facepalm) nm nm i was thinking of something else ha! \n. oh @slang800 i only had reviewed the first commit, a few more to go through\n. heh not trying to be a punk but the first line is supposed to be under 50 chars\n\nlike this\n\nCapitalized, short (50 chars or less) summary\n\nMore detailed explanatory text, if necessary.  Wrap it to about 72\ncharacters or so.  In some contexts, the first line is treated as the\nsubject of an email and the rest of the text as the body.  The blank\nline separating the summary from the body is critical (unless you omit\nthe body entirely); tools like rebase can get confused if you run the\ntwo together.\n. ``` coffeescript\nif typeof options is 'function'\n\nelse\n```\n. :frowning: just bump the version... \n. f1b5f5928cb41ab26a1bec9cd69f76861f05b6fb introduced 50bc6680688dbab176698830e4a26709a1dad8e2\n\nneed to be combined \n. 32f066c322b1d94799726dc80107242cbf436434 introduced 892d6443bf97ceb3299698fdba41b6082994a775\n\nneed to be combined\n. da33711075bdda5f03480951298a16253d6d48b0 fixes 32f066c322b1d94799726dc80107242cbf436434\n\nneed to be combined\n. ok @jenius @slang800  I ran through the last 12 commits or so and it looks like you fix bugs you introduced in the branch a bunch, let's go ahead and squash these commits together so this branch is a bit easier to follow\n\nWhile you are at it lets rebase this sucker off of master \n. going to do another pass tonight\n. @jenius can you add test cases for these failures and then people can fix them?\n\nseems like 4 out of the 6 PR's are all black listed by this branch :[\n. @jenius what kind of initial watcher test would be ideal for you?\n. ok perfect\n. :beers: \n. again duck punching the FS requires a compile for each file... my patches only require a parse tree (much faster)\n\nalso the FS check will not be able to detect font includes and images, while mine is.\n\nhttps://github.com/samccone/stylus-graph\nhttps://github.com/samccone/jade-graph\n. @slang800 when you are generating your tree you are compiling the files. Mine does not compile at all. \n\nAlso my point still stands about detecting fonts and images via the AST. \n. @slang800 \nFrom my own experience Don't go to college it is a waste of time and money. As you are right now you could get a very well paying job as a medium level junior dev with ease. \n\nas I am sure @jenius would agree.\n. +1 for electrical engineering \n. @jenius college experience was as follows\n\n:girl: :cake: :gift_heart: :cry: :kimono: :8ball: \n. detecting locale is a mess better to use the env flag like you said or let the user pass something \n. wow amazing stuff @Leeds-eBooks \n. we can just harass them on twitter\n. hahahaha :-1:  @roots \n. hahaha this is awesome so many :trollface: 's but all i have is :heart: 's\n. jquery 2.0 does not support ie8\n\nbut really i think this is not even worth the time. hahahah unless @cspotcode wants to open a PR\n. fixes #150 \n. @slang800 this is the node way to do it, I have to do a similar thing in monocle due to a related issue\n. @cspotcode been 2 months any word :)\n. closing, we can reopen whenever\n. ah I was trying this out, it is kinda awesome http://waffle.io/\n. can we name it a emojicon? if so I vote for :haircut: \n. :christmas_tree: \n. :thumbsup: \n. ###### this issue relates only to front end templates\n\n@jenius i think this is an issue in jade, or at least the version of jade that we shipped with.\n\nA reduced test case is as follows\n\n``` jade\n- for foo in foos\n %li= foo\n```\n. yeah @jenius seems like a bunch of new featured without enough test coverage in jade alas, with new features come new bugs\n. +1 for a description \n. boom thanks @HHSnopek :)\n. @HHSnopek looks like you have something running on port 1111 already,\n\n`lsof -i :1111` to see what is running, and then quit it. \n. according to your error title_with_markup() is undefined, are you passing this to the view?\n. +1 for integration tests\n\nthat being said, I think that for each \"feature\" we add we need to have test coverage, to prevent regressions.\n. yeah I think this is solid, It does not really take that long :)\n. well, roots is for rapid front end dev. The reality is that tons and tons of people use tumblr and customize tumblr, roots seems to solve a bunch of these problems and if you could dev tumblr themes outside of tumblrs eco system this would be HUGE.\n. time to port the python lib to js :)\n. :rainbow: :earth_americas: \n. seems like a stylus version issue perhaps \n. yeah post the file and I am sure it will be obvious :tada: \n. ^ squash into where you added it\n. :[\n. ![](http://nooooooooooooooo.com/vader.jpg)\n. from the one person at my office that uses windows \"you just drag and drop it\"\n. cc @paultyng\n. just hiking through cape town NBD \n. yeep\n. +1000 momentjs\n. This seems out of scope of roots core. I think a roots-blog repo that extends roots would make the most sense.\n\nIn my mind the focus of roots to help build static sites with higher level languages.\n\nThat being said I think that we can extend this ability that roots has into publishing into multiple formats \u2013 a blog being one.\n. yes i think it is a good idea, I just think roots core should focus on the compilation / watching / reloading \n. clearly this needs the compile options and whatnot but wanted to put this out here\n. @slang800 transformers supports sass from visionmedia however this is for scss which binds to the native C scss lib\n\nthus no transformers\n. ok i am happy with this\n. yeah and sentry, I have actually been integrating with this on another one of my projects. It is quite nice\n. @jenius we should put this in the home page readme as a note\n\nlike \n\n``` md\n#### Mac Installs\n* required xcode command line tools (link here)\n```\n. :kiss: \n. :beers: \n. :thumbsup: I am going to work more on jade graph, since @jenius pointed out a breaking case to me :0\n. Will do when I get back to my computre\n. computre Ci Senior \n. Alright so, we can do this and it will be amazing\n\nhttp://blog.codepen.io/documentation/features/can-i-pre-fill-codepen-editors-with-code-i-send/\n. yeah just need some :clock1: \n. @ajkochanowicz what you really want is .coffee.djs.sass\n. It was a joke @ajkochanowicz   nevermind :) \n. good call @kylemac \n. thanks @declandewet \n. :sun_with_face: :cactus: :meat_on_bone: \n. fixed in https://github.com/jenius/roots/pull/284\n. It has been fixed\n. I think this is \"ok\" however this is a really bad practice for templates to have to add to the core deps of roots\nIdeally we could have some solution for dynamically required npms\n. Going to wait on Jeff for this one.\n. hi @srsgores , thanks for the PR\n\nwould you mind splitting up your commit into stand alone functional chunks\n\nEach piece of this PR is super valid, it is just that there is far to much intermixing of intent within this single commit\n\nSee here for more info\nhttp://en.wikipedia.org/wiki/Single_responsibility_principle\n. Exactly @srsgores !\n\nthanks\n. What i would do is\ngit reset --soft origin/master\n\nThen stage the lines of the commit that you want make a commit\nthen stage the next group and commit \n\nect ect\n. :coffee: is the best\n. if we encode the template key as the path then it would be simple\n\n``` js\ntemplates[\"foo/bar\"]\ntemplates[\"zap\"]\n```\n. :inbox_tray: \n. tests!\n. k @jenius \n. Hey @aawilson can you point out where `global.options.error` is set\n\nI must be missing it.\n. oh man.. that is such a gross line @jenius \n\n+1 for in the bin \n. roots readme\n\n### howto install\n- 99%: windows\n- 1%: mac\n. Install beta 4. I removed jQuery :)\n. no prob @slang800 \nyou should just quit school :+1: \n. yeah I tested\n. Need to merge the templates for this to work\n. B Please\n. hey look tests!\n. :+1: \n. I think we are going to need node_modules in each project dir, to act as a _gemfile.lock_\n\nthen we can do the lookup for the compilers like <path_to_project_root/node_modules/foo> \n\nI think this is a good way to do it.\n. yeeeah! :star2: \n. indeed\n. git clone the repo and npm install\n. npm install roots -g will work just fine now :)\n. fixed like a doge in \n\n![](http://s3.amazonaws.com/i.jpg.to/l/6967)\nhttps://github.com/jenius/roots/pull/312\n. github works\n. cc @ajkochanowicz \n. ![](http://dogesay.com/////i///such/single/tear.png)\n. currently if you have\ntemplates: 'views/templates' defined but you do not have the directory it hard crashes roots\n. f hahahah\n. it is just a common layer between all the languages, it normalizes the input of params and outputs the desired format.\n\nsort of like what we are going in the adapters\n. but I do like how they are doing this, the approach and what not\n. looks like the template you might have been using was janked. What template was it\n. hey @aawilson this is cool, maybe just one test would make me happy :+1: \n. see https://github.com/jenius/roots#windows-installs\n. Yup Jeff is correct\n. no, I am saying i am deving locally, this is a bug in the reload code that needs to be fixed\n. we should not assume that the port you are viewing the page on is the port that the websocket is also on, thus we should pass the socket to the front end\n. :shipit: \n. step 1 \u2013 take out hard drive\nstep 2 \u2013 take out magnifying glass\n. ![](http://dogesay.com/wow/////lol)\n. https://npmjs.org/doc/cli/npm-cache.html\n. hmm seems like a busted cache issue :\\\n. @declandewet for now you can clone the repo and alias roots to the bin/roots file in the repo\n. i hate windows \u2122_\u2122\n. :+1: @snowe2010 \n. @snowe2010 just type `npm install mkdirp --save` ... but I think we already have it as a dep so we should be good to go.\n. yep, hit this while fixing https://github.com/mojotech/pioneer/issues/234\n\nso this is a well known bug in npm and is pretty silly \nhttps://github.com/npm/npm/issues/5816#issuecomment-55007455\nhttps://github.com/npm/npm/issues/6106\nhttps://github.com/npm/npmconf/pull/47\n\nThe fix is basically to make this dir \n\n`C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm`\n\nand then run npm install\n. +1\n. no tests\n. :thumbsup: \n. Wat!\n. 2.1\n. yep this is for sure is still happening - ran into it last night\n. i think you might be remembering the fix we added to copy `.` prefixed files (.gitignore) .. and due to that fix this one got is.\n. i would rather just v3..... :dancer: \n. but then you will lose @jenius and my commits in your repo :cactus: \n. -1 for tmp \ntmp is cleared at regular intervals on some systems. (1)\n\n(1) the internet \n. http://askubuntu.com/questions/20783/how-is-the-tmp-directory-cleaned-up\n. depending on OS...\n\nhttp://serverfault.com/questions/377348/when-does-tmp-get-cleared\n\nI think this is a bad idea and it has really no benefit for most users. \n. just a note... @jenius this all could be fixed if on the V3 branch you just had a commit that removed all the files...\n\nthis seems like a bit of a waste of effort for you @slang800 \n. bingo\n\n```\n at Precompiler.compileTemplate (/usr/local/lib/node_modules/roots/lib/precompiler.coffee:108:19)\n   at Precompiler.compile (/usr/local/lib/node_modules/roots/lib/precompiler.coffee:88:23)\n   at /usr/local/lib/node_modules/roots/lib/precompiler.coffee:44:25\n```\n. ehhh I think we can shortcut roots watch if the directory is not a roots project. As to how we determine that will be tricky. \n. is anyone even using roots this way?\n. ship\n. Well I think it would be easier to unit test if it was a standalone method \n. a new method on terminal printer would be great.\n\nAgain, functionally this is great! I just think we should separate out display (logging) logic from the data normalization logic.\n. I just think it is another \"ship\" method\n. .........\n. I would +1 it\n. but it is a \"shipment\" target\n\nit is a multistep process for delivery and or presentation that includes compiling \n. compile => zip => email\n. :|\n. bam told ya @jenius \n\n![](http://www.wrestlescoop.com/animated_gifs/big_show_suck_it.gif)\n. - [ ] support multiple email addresses \n. npm is currently down / flakey try again\n\nhttp://status.npmjs.org/\n. try npm cache clean\n. try this\nhttp://stackoverflow.com/questions/9626990/receiving-error-error-ssl-error-self-signed-cert-in-chain-while-using-npm\n. \u00ba_______\u2013\n\nlooks like npm is still skrewing you\n. ![](http://dogesay.com/wow/such////bug)\n. welp for people on 2.x we still need this :|\n. @jenius would you be ok with reopening this?\n. ok I will reopen then :D we can close if it dies again\n. oh i see this needs to be opened into the 2.x release branch because obviously this can not go into master heh \n. :statue_of_liberty: :flags: \n. squash d49958a  32dbf75\n. :cat: :dog2: :neckbeard: :necktie: :mahjong: \n. @jenius tests for the watcher are non existent ATM. I started on an initial test for the watcher last night.\n\nI can roll that into the branch, just it might take a bit :chicken: \n. I sure did manually test it :+1: \n. nice catch @andrewglassett \n. :nail_care: \n. watching is not working either\\*  but it does do an initial compile\n. got this one on compile\n\n``` error\n../roots/bin/roots compile\n[TypeError: Cannot read property 'output' of undefined]\n```\n\nno stack trace at all\n. http://psdgrade.com/\nhttp://www.mojotech.com/social-builder/\nhttp://edit.sx/\n. Yeah at mojotech we have used it on a few client projects, however those have been internal apps.\n. yes I really need to make it better tho eh\n. ![](http://dogesay.com/wow/such/resolution)\n. hey @dapetcu21 ah I think I know what is happening. Will get this taken care of.\n. this\n. this line https://github.com/jenius/roots/blob/v3/lib/compiler.coffee#L196\n. Nice catch.  Thanks so much for filing these bugs !!\n. this is v2, however is sounds like this is something we are not concerned with.\n. i had this happen on v2 also... So it makes me think this is happening upstream in an npm\n. :ship: \n. wow such async\n. I am running into this exact issue still on v3... I think this is prob blocking right?\n. was there ever any thoughts on the root of this problem?\n. sometimes this can end poorly\n![screen shot 2015-01-09 at 11 04 23 am](https://cloud.githubusercontent.com/assets/883126/5682625/63fb64d8-97ef-11e4-963a-d2fa38607be9.png)\n. yep :) ha just leaving another note for me\n. yeah but I just watched someone cd into a folder and type roots watch and it looked like it was working.\n\nremember the level of people we are targeting.\n. how many people do you think are going to use this tool without `app.coffee` ?\n. :+1: to this\n. :carousel_horse: \n. ``` js\nvar roots_compile  = require('gulp-roots');\n\ngulp.task('default', function() {\n  gulp.roots_compile(\"path\", {options:?})\n});\n```\n. I was not even using browserify :(\n. will attempt tonight!\n. I pushed to your branch\n. :snake: \n. :ship: \n. :leaves: \n. :thumbsup: \n. @jenius this is good to go... we should merge eh?\n. :mahjong: \n. looks good :tada: \n. :+1: :+1: \n. can you paste your layout and view files. This does not seem like a roots issue, more of a config problem.\n. can you type `roots -v`\n. in index.jade\n\nadd this\n\n`extends layout`\n. http://jorshasaur.us/jade-blocks-using-extend-prepend-and-append/\n. https://www.youtube.com/watch?v=yysnM407rjE\n. :dog2: \n. can you paste application.coffee\n. can you also post this\n`npm list --depth=0`\n\nI have a feeling it is a coffeescript version problem \n. this is such a win @jenius \n. :v: \n. can it be uber static .. or just super?\n. hmm never seen this before really\n\nthoughts @jenius \n. @slang800 Sounds like you have a fair amount of experience in this field, I would be interested to see a solution on your front.\n. sinon@'^1.9.1'\n\nthe `^` operator is not supported in node 0.8.x\n. somewhere down the chain tho could be depending on it thus borking it all\n\n@snowe2010 this is nothing you really need to be worries about\n. +1 @dapetcu21 for great debugging\n. @dapetcu21 can you post the dump from the crash using the above repo?\n. hmm crazy I want to understand this... I can fix it in infestor in a snap\n. @dapetcu21 just published v0.2.1 a simple rm -rf node_modules && npm install should fix this for you!\n\nhttps://github.com/jenius/roots/blob/v3/package.json#L37\n. todo:\n- [ ] windows_install_guide.md.bat.dll\n. `]`\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0bw.png)\n. I think maybe we want to not && in the package.json test script since it is going to eat all the failures of the first npm test task.\n. Why does it need to be in mocha?\n. See what I just did for the tests I think this is a pretty solid approach.\n\nAs to why cucumber\n\n> Cucumber lets software development teams describe how software should behave in plain text. The text is written in a business-readable domain-specific language and serves as documentation, automated tests and development-aid - all rolled into one format.\n. Well I can add more for the error reporting if you would like.\n\nYour call if you want them. Let me know and I will update\n. ok updated going to work on the error test\n. wip\n. :u5408: \n. :dog2: \n. -1 dev deps\n. devDeps are really different and typically reserved for testing ect ect... In this case I think it is kinda weird to install from dev deps.\n\nJust my 1 cent.\n. best spinner ever\n+1000 @declandewet \n. +1 for this we have run into this also\n. Just to further clarify this is only happening on the HTTP request to the asset.\nIt compiles fine.\n. something in your refactor I think.... Will need to create a test case\n. of infestor\n. @jedifrog can try installing infestor@0.3.0 and see if it persists\n. ![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n. Looks like roots pre has a lib that uses an old version of hawk defined\n\nThis is fixed in hawk which is great, I will open a PR to bump the dep.\nhttps://github.com/hueniverse/hawk/commit/a523a412afbda2eca1fb1d253b8e3511fdbd371d\n\nGreat catch @nanotime \n. https://github.com/mikeal/request/pull/927\n. @ztrdoo7 this means that something else on your computer is listening on port 1111\n\ntry running roots watch --port=1234\n. Hey Zach, ah you are on v3 which may have not implemented this CLI flag just yet.\n\nThe other solution is to look at what is running on port 1111 and kill it.\n\n`lsof -i :1111`\nyou can run this command to find out ^\n\nhttp://www.cyberciti.biz/faq/what-process-has-open-linux-port/\nread more here^\n. @ztrdoo7 Looks like port should actually work...\n\nhttps://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n\n~~so roots watch --port=1234~~\n\n~~should work...~~\n\nlol but it looks like the logging is looking for all caps\nhttps://github.com/jenius/roots/blob/3fc75793963dc78ea2cb1153b450176df5dc5280/lib/server.coffee#L9\n\nhahaha try this\n\nroots watch --port=1234  --PORT=1234\n. This guy might know\n\n![](http://www.itnewsafrica.com/wp-content/uploads/2013/01/Eugene-Kaspersky-Kaspesky-Founder11.jpg)\n. ha no but really I am not sure :|\n. @HHSnopek it looks like he is on windows 8\n. :+1: @ztrdoo7 \n. nopeee\n. https://github.com/jenius/roots/blob/3fc75793963dc78ea2cb1153b450176df5dc5280/lib/server.coffee#L9\n\nhttps://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n. herp derp read it wrong :+1: \n. yep we want to lock infestor to 2.0 for now\n. Or just have a --max-cores flag :)\n. no test makes this change scary to me :|\n. yeah, perhaps you can throw a synthetic EMFILE Event\n\nI have worked on this exact bug in several pieces of software and yes it is quite quite tricky\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0d4.png)\n. @slang800 would love to see this on https://github.com/mojotech/jeet/tree/gh-pages\n. this is on v3#master raw (so yes?)\n. just reproduced on non workers \n. :+1: :)\n. +1 to fixing the root issue\n. I have done this before and it did not fix my problems at all. The posix limit on SSDs is actually reported as `unlimited` lolwat but if this fixes it for you then :thumbsup: \n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0d-.png)\n. ![out](https://cloud.githubusercontent.com/assets/883126/3389206/10f4aa9a-fc92-11e3-953a-ca383027c31b.gif)\n. :dancer: \n. Hey @philbarr seeing as you have gotten much further than I in windows land.. have you ever seen this error?\n\n```\n\"C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\binding.sln\" (default target) (1) ->\n\"C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\posix-ext.vcxproj\" (default target) (2) ->\n(InvalidPlatformError target) ->\n  C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\Microsoft.Cpp.InvalidPlatform.Targets(23,7): error MSB8007: The Pla\ntform for project 'posix-ext.vcxproj' is invalid.  Platform='x64'. You may be seeing this message because you are tryin\ng to build a project without a solution file, and have specified a non-default Platform that doesn't exist for this pro\nject. [C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\posix-ext.vcxproj]\n```\n. yeah I am just trying a few things, that is cygwin btw.. are you on windows 7 or 8?\n. thanks @philbarr sorry been spending most of the day gettings windows and node working... total nightmare \n. a more general error is the root\nhttps://github.com/jenius/roots/issues/550\n. @mhartington this is actually an \"error\" in ship, or rather a lack of documentation about what repo should be.\n\nYou should file an issue here.\nhttps://github.com/carrot/ship\n. yeah i had to look at the source because i defaulted to typing the repo url!\n. :a: :+1: \n. it does not work :( still trying to figure it out\n. ok I got it working!\n\nI think we should use node-posix-ext if possible \n. **by**\n\n> ok I got it working!\n\nI mean I got node-posix-ext to compile on windows hahaha\n\nso just need to update roots to use it then we are a step closer :)\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0jj.png)\n. roots compile... with something that errors\n\nroots exits with a 0 exit code and should exit with 1\n. thanks @philbarr i have moved over to #563\n. @philbarr I am also working on this :)\n. ok @jenius this is a solid first step ihmo it gets us a bunch closer\n\nhere is a list of the remaining issues when you run npm test\n\nhttps://gist.github.com/samccone/0bdb7b2d226715f29587\n. https://github.com/jenius/roots/commit/0a6a076cdc30e075eb339663d80338f952d2238c#diff-4686cd02b4515f89676790b7797d14f4R155\n\nWas the fix \n. Thinking back I actually do recall this exact thing happening on windows. So.. at least it is consistent in not working \n. :+1: :+1: \n\nsweet I will test this tomorrow on my windows computer at work and PR it\n. yep @couchcrew-thomas this is still an outstanding issue on windows, it is basically getting to the point of compiling the jade files and barfing, if you are interesting in pitching in on the windows work it would be very much appreciated!\n. And we are actually using v3 to build the new mojotech site :sparkles: \n. not an issue and works fine\n. @jenius \n. updated @jenius \n. very nice\n. i actually ended up putting it my app.coffee\n\n`jade:`\n\noptions, and got it from there, it was just... non obvious I suppose, and is a useful thing to have and do for multiple env based deployments \n. yep\n. im dumb... carry on\n. For sure \ud83d\ude05\n. :dancer: \n. should roots 3 pre-install do this?\n. :+1: working just dandy on our project @jenius but wanted to just get your eyes on it, and maybe get a nice lil 2.15 release out :)\n. :boom: thanks @jenius \n. Scss and compass \n. ha so the idea was to abstract the like hard coded names into a list to iterate over... basically just wanted to remove that while loop.\n. ;(\n. ah so no sub directories on this... i will add that now\n. seems... interesting\n. :thumbsup: \n. I'll look at it today\n. fixed in https://github.com/jenius/roots-cli/pull/15\n. hmmm i would say leave this up to the dev to code their CSS / JS correctly \n. meh... the 2x thing is just a practice that some people use... i think there are better ways to do it .. but that is it .. it is a preference on a case by case basis. \n\nbut if it is a mixin then i see no harm \n. ha, \n\nSVG with modernizer png fallback all the way .. 2X is a broken model because the first 2.5 pixel density screen will completely break 2X sites\n. typically this happens when generating the AST, try the unminifed version of uglify \n. trololololol\n. should be simple.... looks like i know what i am doing tonight :)\n. @ajkochanowicz npm install -g roots@2.1.0-beta3\n\nif you want to live on the edge :+1: \n. yup ha :)\n. :tractor:  ok heh ... as I said to @jenius this was only \"lightly tested\"\n. :watermelon: .. so you got it?\n. :+1: \n. oooook\n. how do i reproduce ... i can't seem to make it happen\n. ah not yet.. can you push an example of a project that does it to a branch for me to debug?\n\n:dancer: \n. ill open a PR tonight :dancer: \n. ha :water_buffalo: \n. prob just wana cherry pick in dcaab05\n. hey @jenius so the 500ms is not really impacting the reload...\n\nthe change was we had to swtich to polling instead of FS events due to OSX -- sass and stylus both do this\n\nonce node fixes their core we can mod this\n. sure sure, i agree, today at lunch i will mess with it and send something upstream\n. :thumbsup: \n\nlooks good to me @jenius \n. :computer: \n. @aemadrid would a video like \"building a simple site with roots\" be helpful?\n. @jenius \n\nI could do it probz\n\n:water_buffalo: \n. blahhh just make them hahahahah someday I will be less busy\n\nmy goal for this weekend is to rip out that watcher \n. hmm we could just throw a warning @jenius like are you sure bro?\n. ok @dz0ny and @Kazy  thanks for the feedback, this should fix it :dancer: \n. closing it now that is has been merged \n. hmm i did look i guess i was expecting it to be in a different spot :\\\n. blame it on the :santa: suit\n. oh man... \n. yeah I can add these things in \n. woah this is crazy but maybe outside the scope of this project\n\nthoughts @jenius \n. can't reproduce ... closing for now\n. yup\n. it is free for 30 days \n\nand it can be optional ... like roots deploy jitsu \n. +1 for less code to maintain \n. ha, no i mean like the starting files ... are a bit hard for newbs to understand\n\nlike we should have a layout.. like you do and an index file\n\nand a main.styl\n\nthen in the index.jade we should say ... edit index. jade located here....\n\nand edit layout.jade located here...\n\nthat is all i mean :)\n. if you start a new rails project.. loook at what it shows you when you start ..\n.\nbasically it says \"edit these files to get going!\"\n\nthat is all I am saying... i think it will just east the pain for \"new\" users \n. the default contents of the index page\n\nalso just remove some of the misc .styl and coffee files in the project\n\nbasically just clean it up a bit\n\n(i am leaving these issues for me basically i will open PR's for you) \n. :thumbsup: \n. yeah ok whatever you want really\n. we dont need it here since it is only for the watch command.  process.env.PORT is typically used for deployment not for what we are using it for...\n\nif anything we would have our own like ... process.env.ROOTS_WATCH_PORT or something\n. i know i know... but i guess calling it PORT is kinda not clear? but hmm i will add it back in\n. typically I separate out the routes because the server gets quite messy when you have more than like 3 routes\n. false! commas at the end is betttterrr!\n\nthe logging is super helpful.. we are not really starting \"express\" more of a webserver that uses express \n\nalso we should tell people how to stop the server no?\n. ha! you shall learn :)\n. :dancer: \n. ah my bad\n. ah opps based it off the wrong branch hehehe\n\nand no it does not slow it down, drop like 10 images in the project now, it will only recompile once\n. you can't stylus mixins and sass mixins do not mix \n. no worries, cheers :)\n. heh @denisfl i <3 sass as well .. blame that one one @jenius \n\nhopefully we will have a sass lib to plug and play with soon \n. Hey @jsncbt  yup this is totally an issue currently we are aware of it :) \n\nthanks!\n. well I know @jenius is mid major rewrite but I would think since the stylus mixin is modular it would be a simple fix\n\n@jenius --\n\nbasically we see if the file has a _ in front of it and if it does .. do not include it in the chain \n. @jenius yeah will expand on it tonight, I think it is the same issue I was seeing before \n. :thumbsup: \n. @jenius we should scrape dribbble and throw up some examples of what we are looking for eh?\n. http://dribbble.s3.amazonaws.com/users/60166/screenshots/975975/the_rocket2.jpg\nhttp://dribbble.s3.amazonaws.com/users/4094/screenshots/975606/drib148.jpg\n\nin this style?\n. :thumbsup: \n. @brooss thanks for the additional work.  Look up at the links I posted for the style we are looking for\n. +10 @ryan2611 \n\nSo I think the idea of integrating the words is critical to this working so props on that\nI wonder if there was a symbol to the right or behing the type if it might set it off even more.\n\nI also think there is room for some color into this to increase the contrast.\n\nThannnkkks for the awesome work :water_buffalo: \n. ah yes this is nice quite nice indeed\n. i dig the square, hmm i think this is like :ship:-able \n\nSo yeah we would just need the svg version of this art and we will be good to go.\n\nthis has my :+1:  \n\nthoughts @jenius \n. ah I have always been a fan of pastels\n. yeah I would be down for all of those\n. :shipit: \n. @jenius we should animate it with your special sauce \n. \\u0007\n. turn on your speakers it should make a \"bell\"\n. it does your computer is borked \n. http://en.wikipedia.org/wiki/Bell_character\n. do not think there is one ATM\n. @randallagordon want to open a PR it makes it way easier to review your code.\n\nThanks for this!\n. yup, sure can, pull requests just make it real easy to review and leave comments on single lines :)\n. :8ball: \n. :rabbit: time\n. typeof is always the way to go\n\ncoffeescript is a preference\nas well as lots of the nits you have made in your PR\n\nit is not good practice to go into an OS project and reformat the code base \n\nin the end style is up to the author.\n. I tested this... \n. hey @jenius can you clone this and run npm test https://github.com/samccone/monocle\n\nand then if that passes tell me where and how you are creating this new file that it is not finding it\n\nhopefully we can debug this and write a test that covers this case\n. weird that this passes on travis CI and on my systen\n. what version of node are you on?\n. fixed on #101 \n. :thumbsup: \n. this is starting to feel CMS'ey eh?\n. yeah...\nso it should be separate and very decoupled from the core IMHO \n. on this same thought process, I am going to tip the watcher out of this project and just make an NPM for it \n\nwe should do the same for all the big pieces of the project, \n\nlots of little pieces that do something well \n. no no i mean it did not even prompt the error in the browser.. silent bomb\n. +100\n. try catch will fix it\n. :gb: :ok_hand: \n. :+1: \n. woah... this is weird eh @jenius \n\n@wismer run npm install -g roots and try one more time\n. :water_buffalo: \n. :underage: \n. good idea @tvararu :monkey: \n. https://github.com/samccone/updater\n\n:)\n\nI started writing it, then i got caught up in just \"how\" much it should do\n. ok i got it\n\nso write bad stylus\n\nfix it\n\nthe error html is still there because it is only recompiling the CSS file!!!\n\nHUZAHHHH\n. basically we need a flag to know if it is an error state and if it is ... then recompile the entire project .. :pray: \n. oh frick it donned on me.. so save a file from chrome into the directory \n\ni think chrome saves a tmp files and that is bombing it \n. :kimono: \n. fixed in https://github.com/jenius/roots/pull/115\n. weird.. can not reproduce now... closing for now\n. ![](http://dogesay.com/wow////such/burn)\n. :cow: \n. via https://github.com/jenius/roots/issues/112\n. closing this for now. we can reopen when @randallagordon starts work on it again.\n. :shipit: \n. woah... this is weiiirrd\n\nthoughts @jenius ?\n. So I think we can fix this by wraping the copy sync in a try catch\n\nI had a similar problem with chrome tmp save files.... \n. are we ignoring the .git directory .. it looks like we are just doing it for the .git file\n\npublic/.git/SMARTGIT_PENDING_MESSAGE\n. :thumbsup: \n. Ah this is a solid idea actually\n. moving this discussion here https://github.com/jenius/roots/pull/123\n. ah i know what it is... crap crap crap fixing now.....\n. https://github.com/jenius/roots/pull/122\n\nugh we were not locking the V of monocle and i updated it a bunch yesterday\n\ni recommend force publishing this to npm\n\ncc @jenius \n. looks like it is actually an issue with roots :wink: \n\n  function watchDirectory(args) {\n    readdirp({ root: args.root, fileFilter: args.fileFilter, directoryFilter: args.directoryFilter }, function(err, res) {\n      console.log(arguments);\n\n{ '0':\n   [ [Error: Cannot mix negated with non negated glob filters: !.git,!public,!plugins,components\n     https://github.com/thlorenz/readdirp#filters] ],\n  '1': null }\n. just fixed it :+1: \n. so tests pass on this, but i think there are going to be some issues with the deploy stuff, like we will need to rename the folder back to public\n\nbut this should give you an idea... also this dries up the sh%$ out of stuff so that is good\n. gotcha that makes sense\n. watch out for suspicious :package: 's\n. yup\n. fixed and fixed\n. yup\n. Boom.  Still not sure how we ever got in this case tho.... \n. Will look into this @Daiz- \n. yeah i have a windows box here at work so i will use it to dev on\n. i have seen mixed results on the few windows machines I have tried \n. yeah it would be cool,  is this out of scope tho?\n. it does but you need to tell it how to sort\n. ?\n. ah what was it?\n. ok @slang800 left you comments , by splitting this up into logical commits it makes it easier to review and also leaves a better git log for people to follow\n\nby doing several unrelated things in a commit it is very hard to understand the intent of any given commit \n. :thumbsup: \n. = yield :footer\n= yield :content\n= yield :head \n. i think different regions is a big +\n. So i have been giving this tons of thought lately. \n\nI think I want to start out with a CSS asset graph. I think whati will do is take some CSS generate a AST https://github.com/NV/CSSOM\n\nthen spit back an array of files that this file includes / uses.\n\nI think we can do this all in chunks... thoughts?\n. hmmm however i see what jeff is saying \n\nin a main styl file you could do @import foo\n\nthus main now depends on foo so when foo is updated we now have to update main \n\nand so on and so on\n\nI think AST's are the way to go, \n\nso for stylus ... round 1 i think just knowing about imports would be HUGE\nhttps://github.com/samccone/stylus/blob/master/lib/visitor/evaluator.js#L651\n\nso picture this\n\n`connectedNodes = graph(filepath)`\n\nwould return something like\n\n``` js\n[{\n   \"myfile.styl\": [\n     { \"mysubfile.styl\": [] }\n   ]\n}, ...]\n\n```\n\nthat would could then map the relationship from\n. ha.. that is one way... except we would have to fork the compiler or duck punch it :goat: \n. yeah that is what i mean :) http://en.wikipedia.org/wiki/Monkey_patch\n. alllllright\n\nso a very very simple pass at an import only asset graph for stylus \n\nafter messing with a few ways to do it I have decided that monkey patching a function in stylus and ripping what i want out of it is going to be the cleanest way. the other way being to path the FS or have a ton of ugly regexes.\n\nSo lets talk about why I think this way is idea;\n\nFirst I am actually not even compiling the stylus. I am only generating the tree and evaluating it. not compiling. So that means this is really fast. I just think this is going to be the way to go for each type language we are going to support. \n\nthoughts are welcome. \n\nhttps://github.com/samccone/stylus-graph\n. hmmmmmmmm maybe maybe maybe I will try both :)\n. @slang800 fs will work for imports only, it will not work for images / fonts / ect ect \n. let me say again that this will only give us a graph of the entire project, not a per file graph \n. https://github.com/samccone/stylus-graph\nhttps://github.com/samccone/jade-graph\n\nI still think this direction is really the best way\n. indeed but your solution would require a true compile on each file, where mine acts as more of a static analysis tool.\n. maybe an option? or we can detect windows? process.arch i think\n. :facepunch: \n. see https://github.com/jenius/roots/issues/149\n\nbut in the meantime I think.. maybe this could be something that we could add \n\neh @jenius ?\n. I guess we could only watch the style folder if someone passes a flag like `--only-style` or something similar \n. +1 for concating  files \n\ni think using require from within roots is kinda a mute point since we are already compiling the project... why not just combine it all into one file?\n. fair\n. resolved :chicken: \n. @jenius maybe I should just add this to monocle by default to ignore ?\n. this is the best fake PR ever :kissing_cat: \n. posting the patch vs an actual PR \n. @jenius lets split this PR up into pieces. that way we can be more granular. I think @slang800 recommended doing a v1.5 branch or something \n. maybe commit still has a bunch of random non \"code\" commits\n\n1034da2\nda090fc\n7cb7852\n. @slang800 you can edit it, just force push over the branch the PR is based off of\n. yeah i think that making roots-git an independant npm module would be the 'best' way to do it\n. Well by making it its own module we can test it independently from the complexity of roots. It also allows for separate development cycles and releases.\n\nLike if we find a bug in git stuff we can just deploy a patch fix, as compared to re-releasing all of roots \n. yeah that is a good idea\n. +1 @slang800 \n. https://github.com/libgit2/node-gitteh\n. @slang800 i will review if you do not mind squashing down the commits into logical and semantic groupings\n. well I think that what you just said is symptomatic of the issue (unorganized code). So an approach you could use is to squash it and then split that large commit into multiple groupings of atomic changes.\n\nLet me know if this makes sense. \n. alright cool @slang800 so I think it would be valuable to have tests for this all in one commit maybe at the top of the tree.\n\nThink of the tests as a way to document the intent of this code. What you want to accomplish. \n\nAlso it acts as a really nice way for someone reviewing (me) to get a sense of what the goal of this code is. \n\nplus tests are good, and we need more of them because we have very little coverage at the moment in this repo.\n. sure but adding tests is always good. We have minimal to no testing on transformers as it stands. So basically it is hard to verify from a high level if functionally has been maintained. \n. oh (facepalm) nm nm i was thinking of something else ha! \n. oh @slang800 i only had reviewed the first commit, a few more to go through\n. heh not trying to be a punk but the first line is supposed to be under 50 chars\n\nlike this\n\nCapitalized, short (50 chars or less) summary\n\nMore detailed explanatory text, if necessary.  Wrap it to about 72\ncharacters or so.  In some contexts, the first line is treated as the\nsubject of an email and the rest of the text as the body.  The blank\nline separating the summary from the body is critical (unless you omit\nthe body entirely); tools like rebase can get confused if you run the\ntwo together.\n. ``` coffeescript\nif typeof options is 'function'\n\nelse\n```\n. :frowning: just bump the version... \n. f1b5f5928cb41ab26a1bec9cd69f76861f05b6fb introduced 50bc6680688dbab176698830e4a26709a1dad8e2\n\nneed to be combined \n. 32f066c322b1d94799726dc80107242cbf436434 introduced 892d6443bf97ceb3299698fdba41b6082994a775\n\nneed to be combined\n. da33711075bdda5f03480951298a16253d6d48b0 fixes 32f066c322b1d94799726dc80107242cbf436434\n\nneed to be combined\n. ok @jenius @slang800  I ran through the last 12 commits or so and it looks like you fix bugs you introduced in the branch a bunch, let's go ahead and squash these commits together so this branch is a bit easier to follow\n\nWhile you are at it lets rebase this sucker off of master \n. going to do another pass tonight\n. @jenius can you add test cases for these failures and then people can fix them?\n\nseems like 4 out of the 6 PR's are all black listed by this branch :[\n. @jenius what kind of initial watcher test would be ideal for you?\n. ok perfect\n. :beers: \n. again duck punching the FS requires a compile for each file... my patches only require a parse tree (much faster)\n\nalso the FS check will not be able to detect font includes and images, while mine is.\n\nhttps://github.com/samccone/stylus-graph\nhttps://github.com/samccone/jade-graph\n. @slang800 when you are generating your tree you are compiling the files. Mine does not compile at all. \n\nAlso my point still stands about detecting fonts and images via the AST. \n. @slang800 \nFrom my own experience Don't go to college it is a waste of time and money. As you are right now you could get a very well paying job as a medium level junior dev with ease. \n\nas I am sure @jenius would agree.\n. +1 for electrical engineering \n. @jenius college experience was as follows\n\n:girl: :cake: :gift_heart: :cry: :kimono: :8ball: \n. detecting locale is a mess better to use the env flag like you said or let the user pass something \n. wow amazing stuff @Leeds-eBooks \n. we can just harass them on twitter\n. hahahaha :-1:  @roots \n. hahaha this is awesome so many :trollface: 's but all i have is :heart: 's\n. jquery 2.0 does not support ie8\n\nbut really i think this is not even worth the time. hahahah unless @cspotcode wants to open a PR\n. fixes #150 \n. @slang800 this is the node way to do it, I have to do a similar thing in monocle due to a related issue\n. @cspotcode been 2 months any word :)\n. closing, we can reopen whenever\n. ah I was trying this out, it is kinda awesome http://waffle.io/\n. can we name it a emojicon? if so I vote for :haircut: \n. :christmas_tree: \n. :thumbsup: \n. ###### this issue relates only to front end templates\n\n@jenius i think this is an issue in jade, or at least the version of jade that we shipped with.\n\nA reduced test case is as follows\n\n``` jade\n- for foo in foos\n %li= foo\n```\n. yeah @jenius seems like a bunch of new featured without enough test coverage in jade alas, with new features come new bugs\n. +1 for a description \n. boom thanks @HHSnopek :)\n. @HHSnopek looks like you have something running on port 1111 already,\n\n`lsof -i :1111` to see what is running, and then quit it. \n. according to your error title_with_markup() is undefined, are you passing this to the view?\n. +1 for integration tests\n\nthat being said, I think that for each \"feature\" we add we need to have test coverage, to prevent regressions.\n. yeah I think this is solid, It does not really take that long :)\n. well, roots is for rapid front end dev. The reality is that tons and tons of people use tumblr and customize tumblr, roots seems to solve a bunch of these problems and if you could dev tumblr themes outside of tumblrs eco system this would be HUGE.\n. time to port the python lib to js :)\n. :rainbow: :earth_americas: \n. seems like a stylus version issue perhaps \n. yeah post the file and I am sure it will be obvious :tada: \n. ^ squash into where you added it\n. :[\n. ![](http://nooooooooooooooo.com/vader.jpg)\n. from the one person at my office that uses windows \"you just drag and drop it\"\n. cc @paultyng\n. just hiking through cape town NBD \n. yeep\n. +1000 momentjs\n. This seems out of scope of roots core. I think a roots-blog repo that extends roots would make the most sense.\n\nIn my mind the focus of roots to help build static sites with higher level languages.\n\nThat being said I think that we can extend this ability that roots has into publishing into multiple formats \u2013 a blog being one.\n. yes i think it is a good idea, I just think roots core should focus on the compilation / watching / reloading \n. clearly this needs the compile options and whatnot but wanted to put this out here\n. @slang800 transformers supports sass from visionmedia however this is for scss which binds to the native C scss lib\n\nthus no transformers\n. ok i am happy with this\n. yeah and sentry, I have actually been integrating with this on another one of my projects. It is quite nice\n. @jenius we should put this in the home page readme as a note\n\nlike \n\n``` md\n#### Mac Installs\n* required xcode command line tools (link here)\n```\n. :kiss: \n. :beers: \n. :thumbsup: I am going to work more on jade graph, since @jenius pointed out a breaking case to me :0\n. Will do when I get back to my computre\n. computre Ci Senior \n. Alright so, we can do this and it will be amazing\n\nhttp://blog.codepen.io/documentation/features/can-i-pre-fill-codepen-editors-with-code-i-send/\n. yeah just need some :clock1: \n. @ajkochanowicz what you really want is .coffee.djs.sass\n. It was a joke @ajkochanowicz   nevermind :) \n. good call @kylemac \n. thanks @declandewet \n. :sun_with_face: :cactus: :meat_on_bone: \n. fixed in https://github.com/jenius/roots/pull/284\n. It has been fixed\n. I think this is \"ok\" however this is a really bad practice for templates to have to add to the core deps of roots\nIdeally we could have some solution for dynamically required npms\n. Going to wait on Jeff for this one.\n. hi @srsgores , thanks for the PR\n\nwould you mind splitting up your commit into stand alone functional chunks\n\nEach piece of this PR is super valid, it is just that there is far to much intermixing of intent within this single commit\n\nSee here for more info\nhttp://en.wikipedia.org/wiki/Single_responsibility_principle\n. Exactly @srsgores !\n\nthanks\n. What i would do is\ngit reset --soft origin/master\n\nThen stage the lines of the commit that you want make a commit\nthen stage the next group and commit \n\nect ect\n. :coffee: is the best\n. if we encode the template key as the path then it would be simple\n\n``` js\ntemplates[\"foo/bar\"]\ntemplates[\"zap\"]\n```\n. :inbox_tray: \n. tests!\n. k @jenius \n. Hey @aawilson can you point out where `global.options.error` is set\n\nI must be missing it.\n. oh man.. that is such a gross line @jenius \n\n+1 for in the bin \n. roots readme\n\n### howto install\n- 99%: windows\n- 1%: mac\n. Install beta 4. I removed jQuery :)\n. no prob @slang800 \nyou should just quit school :+1: \n. yeah I tested\n. Need to merge the templates for this to work\n. B Please\n. hey look tests!\n. :+1: \n. I think we are going to need node_modules in each project dir, to act as a _gemfile.lock_\n\nthen we can do the lookup for the compilers like <path_to_project_root/node_modules/foo> \n\nI think this is a good way to do it.\n. yeeeah! :star2: \n. indeed\n. git clone the repo and npm install\n. npm install roots -g will work just fine now :)\n. fixed like a doge in \n\n![](http://s3.amazonaws.com/i.jpg.to/l/6967)\nhttps://github.com/jenius/roots/pull/312\n. github works\n. cc @ajkochanowicz \n. ![](http://dogesay.com/////i///such/single/tear.png)\n. currently if you have\ntemplates: 'views/templates' defined but you do not have the directory it hard crashes roots\n. f hahahah\n. it is just a common layer between all the languages, it normalizes the input of params and outputs the desired format.\n\nsort of like what we are going in the adapters\n. but I do like how they are doing this, the approach and what not\n. looks like the template you might have been using was janked. What template was it\n. hey @aawilson this is cool, maybe just one test would make me happy :+1: \n. see https://github.com/jenius/roots#windows-installs\n. Yup Jeff is correct\n. no, I am saying i am deving locally, this is a bug in the reload code that needs to be fixed\n. we should not assume that the port you are viewing the page on is the port that the websocket is also on, thus we should pass the socket to the front end\n. :shipit: \n. step 1 \u2013 take out hard drive\nstep 2 \u2013 take out magnifying glass\n. ![](http://dogesay.com/wow/////lol)\n. https://npmjs.org/doc/cli/npm-cache.html\n. hmm seems like a busted cache issue :\\\n. @declandewet for now you can clone the repo and alias roots to the bin/roots file in the repo\n. i hate windows \u2122_\u2122\n. :+1: @snowe2010 \n. @snowe2010 just type `npm install mkdirp --save` ... but I think we already have it as a dep so we should be good to go.\n. yep, hit this while fixing https://github.com/mojotech/pioneer/issues/234\n\nso this is a well known bug in npm and is pretty silly \nhttps://github.com/npm/npm/issues/5816#issuecomment-55007455\nhttps://github.com/npm/npm/issues/6106\nhttps://github.com/npm/npmconf/pull/47\n\nThe fix is basically to make this dir \n\n`C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm`\n\nand then run npm install\n. +1\n. no tests\n. :thumbsup: \n. Wat!\n. 2.1\n. yep this is for sure is still happening - ran into it last night\n. i think you might be remembering the fix we added to copy `.` prefixed files (.gitignore) .. and due to that fix this one got is.\n. i would rather just v3..... :dancer: \n. but then you will lose @jenius and my commits in your repo :cactus: \n. -1 for tmp \ntmp is cleared at regular intervals on some systems. (1)\n\n(1) the internet \n. http://askubuntu.com/questions/20783/how-is-the-tmp-directory-cleaned-up\n. depending on OS...\n\nhttp://serverfault.com/questions/377348/when-does-tmp-get-cleared\n\nI think this is a bad idea and it has really no benefit for most users. \n. just a note... @jenius this all could be fixed if on the V3 branch you just had a commit that removed all the files...\n\nthis seems like a bit of a waste of effort for you @slang800 \n. bingo\n\n```\n at Precompiler.compileTemplate (/usr/local/lib/node_modules/roots/lib/precompiler.coffee:108:19)\n   at Precompiler.compile (/usr/local/lib/node_modules/roots/lib/precompiler.coffee:88:23)\n   at /usr/local/lib/node_modules/roots/lib/precompiler.coffee:44:25\n```\n. ehhh I think we can shortcut roots watch if the directory is not a roots project. As to how we determine that will be tricky. \n. is anyone even using roots this way?\n. ship\n. Well I think it would be easier to unit test if it was a standalone method \n. a new method on terminal printer would be great.\n\nAgain, functionally this is great! I just think we should separate out display (logging) logic from the data normalization logic.\n. I just think it is another \"ship\" method\n. .........\n. I would +1 it\n. but it is a \"shipment\" target\n\nit is a multistep process for delivery and or presentation that includes compiling \n. compile => zip => email\n. :|\n. bam told ya @jenius \n\n![](http://www.wrestlescoop.com/animated_gifs/big_show_suck_it.gif)\n. - [ ] support multiple email addresses \n. npm is currently down / flakey try again\n\nhttp://status.npmjs.org/\n. try npm cache clean\n. try this\nhttp://stackoverflow.com/questions/9626990/receiving-error-error-ssl-error-self-signed-cert-in-chain-while-using-npm\n. \u00ba_______\u2013\n\nlooks like npm is still skrewing you\n. ![](http://dogesay.com/wow/such////bug)\n. welp for people on 2.x we still need this :|\n. @jenius would you be ok with reopening this?\n. ok I will reopen then :D we can close if it dies again\n. oh i see this needs to be opened into the 2.x release branch because obviously this can not go into master heh \n. :statue_of_liberty: :flags: \n. squash d49958a  32dbf75\n. :cat: :dog2: :neckbeard: :necktie: :mahjong: \n. @jenius tests for the watcher are non existent ATM. I started on an initial test for the watcher last night.\n\nI can roll that into the branch, just it might take a bit :chicken: \n. I sure did manually test it :+1: \n. nice catch @andrewglassett \n. :nail_care: \n. watching is not working either\\*  but it does do an initial compile\n. got this one on compile\n\n``` error\n../roots/bin/roots compile\n[TypeError: Cannot read property 'output' of undefined]\n```\n\nno stack trace at all\n. http://psdgrade.com/\nhttp://www.mojotech.com/social-builder/\nhttp://edit.sx/\n. Yeah at mojotech we have used it on a few client projects, however those have been internal apps.\n. yes I really need to make it better tho eh\n. ![](http://dogesay.com/wow/such/resolution)\n. hey @dapetcu21 ah I think I know what is happening. Will get this taken care of.\n. this\n. this line https://github.com/jenius/roots/blob/v3/lib/compiler.coffee#L196\n. Nice catch.  Thanks so much for filing these bugs !!\n. this is v2, however is sounds like this is something we are not concerned with.\n. i had this happen on v2 also... So it makes me think this is happening upstream in an npm\n. :ship: \n. wow such async\n. I am running into this exact issue still on v3... I think this is prob blocking right?\n. was there ever any thoughts on the root of this problem?\n. sometimes this can end poorly\n![screen shot 2015-01-09 at 11 04 23 am](https://cloud.githubusercontent.com/assets/883126/5682625/63fb64d8-97ef-11e4-963a-d2fa38607be9.png)\n. yep :) ha just leaving another note for me\n. yeah but I just watched someone cd into a folder and type roots watch and it looked like it was working.\n\nremember the level of people we are targeting.\n. how many people do you think are going to use this tool without `app.coffee` ?\n. :+1: to this\n. :carousel_horse: \n. ``` js\nvar roots_compile  = require('gulp-roots');\n\ngulp.task('default', function() {\n  gulp.roots_compile(\"path\", {options:?})\n});\n```\n. I was not even using browserify :(\n. will attempt tonight!\n. I pushed to your branch\n. :snake: \n. :ship: \n. :leaves: \n. :thumbsup: \n. @jenius this is good to go... we should merge eh?\n. :mahjong: \n. looks good :tada: \n. :+1: :+1: \n. can you paste your layout and view files. This does not seem like a roots issue, more of a config problem.\n. can you type `roots -v`\n. in index.jade\n\nadd this\n\n`extends layout`\n. http://jorshasaur.us/jade-blocks-using-extend-prepend-and-append/\n. https://www.youtube.com/watch?v=yysnM407rjE\n. :dog2: \n. can you paste application.coffee\n. can you also post this\n`npm list --depth=0`\n\nI have a feeling it is a coffeescript version problem \n. this is such a win @jenius \n. :v: \n. can it be uber static .. or just super?\n. hmm never seen this before really\n\nthoughts @jenius \n. @slang800 Sounds like you have a fair amount of experience in this field, I would be interested to see a solution on your front.\n. sinon@'^1.9.1'\n\nthe `^` operator is not supported in node 0.8.x\n. somewhere down the chain tho could be depending on it thus borking it all\n\n@snowe2010 this is nothing you really need to be worries about\n. +1 @dapetcu21 for great debugging\n. @dapetcu21 can you post the dump from the crash using the above repo?\n. hmm crazy I want to understand this... I can fix it in infestor in a snap\n. @dapetcu21 just published v0.2.1 a simple rm -rf node_modules && npm install should fix this for you!\n\nhttps://github.com/jenius/roots/blob/v3/package.json#L37\n. todo:\n- [ ] windows_install_guide.md.bat.dll\n. `]`\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0bw.png)\n. I think maybe we want to not && in the package.json test script since it is going to eat all the failures of the first npm test task.\n. Why does it need to be in mocha?\n. See what I just did for the tests I think this is a pretty solid approach.\n\nAs to why cucumber\n\n> Cucumber lets software development teams describe how software should behave in plain text. The text is written in a business-readable domain-specific language and serves as documentation, automated tests and development-aid - all rolled into one format.\n. Well I can add more for the error reporting if you would like.\n\nYour call if you want them. Let me know and I will update\n. ok updated going to work on the error test\n. wip\n. :u5408: \n. :dog2: \n. -1 dev deps\n. devDeps are really different and typically reserved for testing ect ect... In this case I think it is kinda weird to install from dev deps.\n\nJust my 1 cent.\n. best spinner ever\n+1000 @declandewet \n. +1 for this we have run into this also\n. Just to further clarify this is only happening on the HTTP request to the asset.\nIt compiles fine.\n. something in your refactor I think.... Will need to create a test case\n. of infestor\n. @jedifrog can try installing infestor@0.3.0 and see if it persists\n. ![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)![](https://camo.githubusercontent.com/65012a0f618b9be8fd71309cb4a1c0159123f9b3/687474703a2f2f6f6935392e74696e797069632e636f6d2f3235746b6c37622e6a7067)\n. Looks like roots pre has a lib that uses an old version of hawk defined\n\nThis is fixed in hawk which is great, I will open a PR to bump the dep.\nhttps://github.com/hueniverse/hawk/commit/a523a412afbda2eca1fb1d253b8e3511fdbd371d\n\nGreat catch @nanotime \n. https://github.com/mikeal/request/pull/927\n. @ztrdoo7 this means that something else on your computer is listening on port 1111\n\ntry running roots watch --port=1234\n. Hey Zach, ah you are on v3 which may have not implemented this CLI flag just yet.\n\nThe other solution is to look at what is running on port 1111 and kill it.\n\n`lsof -i :1111`\nyou can run this command to find out ^\n\nhttp://www.cyberciti.biz/faq/what-process-has-open-linux-port/\nread more here^\n. @ztrdoo7 Looks like port should actually work...\n\nhttps://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n\n~~so roots watch --port=1234~~\n\n~~should work...~~\n\nlol but it looks like the logging is looking for all caps\nhttps://github.com/jenius/roots/blob/3fc75793963dc78ea2cb1153b450176df5dc5280/lib/server.coffee#L9\n\nhahaha try this\n\nroots watch --port=1234  --PORT=1234\n. This guy might know\n\n![](http://www.itnewsafrica.com/wp-content/uploads/2013/01/Eugene-Kaspersky-Kaspesky-Founder11.jpg)\n. ha no but really I am not sure :|\n. @HHSnopek it looks like he is on windows 8\n. :+1: @ztrdoo7 \n. nopeee\n. https://github.com/jenius/roots/blob/3fc75793963dc78ea2cb1153b450176df5dc5280/lib/server.coffee#L9\n\nhttps://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n. herp derp read it wrong :+1: \n. yep we want to lock infestor to 2.0 for now\n. Or just have a --max-cores flag :)\n. no test makes this change scary to me :|\n. yeah, perhaps you can throw a synthetic EMFILE Event\n\nI have worked on this exact bug in several pieces of software and yes it is quite quite tricky\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0d4.png)\n. @slang800 would love to see this on https://github.com/mojotech/jeet/tree/gh-pages\n. this is on v3#master raw (so yes?)\n. just reproduced on non workers \n. :+1: :)\n. +1 to fixing the root issue\n. I have done this before and it did not fix my problems at all. The posix limit on SSDs is actually reported as `unlimited` lolwat but if this fixes it for you then :thumbsup: \n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0d-.png)\n. ![out](https://cloud.githubusercontent.com/assets/883126/3389206/10f4aa9a-fc92-11e3-953a-ca383027c31b.gif)\n. :dancer: \n. Hey @philbarr seeing as you have gotten much further than I in windows land.. have you ever seen this error?\n\n```\n\"C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\binding.sln\" (default target) (1) ->\n\"C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\posix-ext.vcxproj\" (default target) (2) ->\n(InvalidPlatformError target) ->\n  C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\Microsoft.Cpp.InvalidPlatform.Targets(23,7): error MSB8007: The Pla\ntform for project 'posix-ext.vcxproj' is invalid.  Platform='x64'. You may be seeing this message because you are tryin\ng to build a project without a solution file, and have specified a non-default Platform that doesn't exist for this pro\nject. [C:\\cygwin64\\home\\IEguy\\repos\\node-posix-ext\\build\\posix-ext.vcxproj]\n```\n. yeah I am just trying a few things, that is cygwin btw.. are you on windows 7 or 8?\n. thanks @philbarr sorry been spending most of the day gettings windows and node working... total nightmare \n. a more general error is the root\nhttps://github.com/jenius/roots/issues/550\n. @mhartington this is actually an \"error\" in ship, or rather a lack of documentation about what repo should be.\n\nYou should file an issue here.\nhttps://github.com/carrot/ship\n. yeah i had to look at the source because i defaulted to typing the repo url!\n. :a: :+1: \n. it does not work :( still trying to figure it out\n. ok I got it working!\n\nI think we should use node-posix-ext if possible \n. **by**\n\n> ok I got it working!\n\nI mean I got node-posix-ext to compile on windows hahaha\n\nso just need to update roots to use it then we are a step closer :)\n. ![](http://dl.dropbox.com/u/36928599/Screenshots/0jj.png)\n. roots compile... with something that errors\n\nroots exits with a 0 exit code and should exit with 1\n. thanks @philbarr i have moved over to #563\n. @philbarr I am also working on this :)\n. ok @jenius this is a solid first step ihmo it gets us a bunch closer\n\nhere is a list of the remaining issues when you run npm test\n\nhttps://gist.github.com/samccone/0bdb7b2d226715f29587\n. https://github.com/jenius/roots/commit/0a6a076cdc30e075eb339663d80338f952d2238c#diff-4686cd02b4515f89676790b7797d14f4R155\n\nWas the fix \n. Thinking back I actually do recall this exact thing happening on windows. So.. at least it is consistent in not working \n. :+1: :+1: \n\nsweet I will test this tomorrow on my windows computer at work and PR it\n. yep @couchcrew-thomas this is still an outstanding issue on windows, it is basically getting to the point of compiling the jade files and barfing, if you are interesting in pitching in on the windows work it would be very much appreciated!\n. And we are actually using v3 to build the new mojotech site :sparkles: \n. not an issue and works fine\n. @jenius \n. updated @jenius \n. very nice\n. i actually ended up putting it my app.coffee\n\n`jade:`\n\noptions, and got it from there, it was just... non obvious I suppose, and is a useful thing to have and do for multiple env based deployments \n. yep\n. im dumb... carry on\n. For sure \ud83d\ude05\n. :dancer: \n. should roots 3 pre-install do this?\n. :+1: working just dandy on our project @jenius but wanted to just get your eyes on it, and maybe get a nice lil 2.15 release out :)\n. :boom: thanks @jenius \n. ",
    "adamjgrant": "I'm running 2.0.6, is this supposed to be implemented?\n. Okay, I'll update when I'm not on a proxy. As for the original question, has this been implemented? I understand there is a new beta but the fix for this went in a year ago. Is 2.0.6 that old?\n. Changing layout.jade triggers a reload for me but it does not show changes. I always have to stop roots watch and restart it.\n. No, I have it in the default location for a new roots proj.\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> The only reproducible instance I have found of this is when you have the\n> layout in a folder that's ignored, but the layout itself is not ignored. Is\n> this what you have going on by any chance?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598541\n> .\n. What do you mean ignored?\n\nAlso, I just realized, my layout.jade file is being used differently. I'm\nnot declaring it in app.coffee as a layout. Instead, I have pages that\nextend it with Jade's \"extend\" syntax\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> Have you made sure that the layout is ignored?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598570\n> .\n. All my problems are solved!\n\nNext, I've got this rash. Can you take a look at it?\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> Yes, you need to ignore it in app.coffee, since layouts are not supposed\n> to be compiled. Just add layout.jade to the ignore_files array and your\n> problem will be resolved.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598622\n> .\n. I also noticed the files copied into public are symlinks and not actual files. Is this a related issue?\n. Not to interrupt your work, but is there a tidy way to override that, and\nhave it actually just copy over the files?\n\nFor my Kickstrap download, in order to make two versions--one with roots and one with just plain html, css, js (no compilation)--I was going to have the contents of public copied over to a second directory. If public files merely refer to files in assets, that wouldn't work. Is there anything I could do to customize (plugin?) on my end to have it not do this?\n. I read that in the docs. Are you saying this is a different version of the\ncompiling that happens when I run `roots watch` (wherein assets aren't\nsymlinked)?\n. Okay, good point.\n\nI see what you did there.\n. Thanks Jeff. You say \"it's documented right in app.coffee.\" How do you\nfigure? All I see is an instruction on how to write in \"special_view.jade\"\nbut I don't see documentation on how to tell Roots that \"this\" jade file\nwill use \"special_view.jade\"\n\nAdam Kochanowicz\n\n2013/10/1 Jeff Escalante notifications@github.com\n\n> Yessir, it's documented right in app.coffeehttps://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9.\n> If you want to change the default layout, you can do so by changing the\n> string after default to point to the layout you want to use (or if you\n> are making a template, just change the contents of layout.jade).\n> \n> You can also bypass the roots layout engine and use jade's instead if\n> you'd like -- running roots new example --min will give you a template\n> that does this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25450933\n> .\n. Or maybe this isn't the solution I'm looking for. I want to use layout.jade\nfor all my pages, but I want to use custom.jade for just one of them. Can I\ndo that with app.coffee?\n\nAdam Kochanowicz\n\n2013/10/1 Adam Kochanowicz ajkochanowicz@gmail.com\n\n> Thanks Jeff. You say \"it's documented right in app.coffee.\" How do you\n> figure? All I see is an instruction on how to write in \"special_view.jade\"\n> but I don't see documentation on how to tell Roots that \"this\" jade file\n> will use \"special_view.jade\"\n> \n> Adam Kochanowicz\n> \n> 2013/10/1 Jeff Escalante notifications@github.com\n> \n> > Yessir, it's documented right in app.coffeehttps://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9.\n> > If you want to change the default layout, you can do so by changing the\n> > string after default to point to the layout you want to use (or if you\n> > are making a template, just change the contents of layout.jade).\n> > \n> > You can also bypass the roots layout engine and use jade's instead if\n> > you'd like -- running roots new example --min will give you a template\n> > that does this.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25450933\n> > .\n. Ohhhh. Okay. Indeed, it does say \"special_view.jade\". I was seeing this\nvery differently. Thank you.\n\nAdam Kochanowicz\n\n2013/10/1 Jeff Escalante notifications@github.com\n\n> Yes, you can do that. That's the exact piece that's documented in\n> app.coffee. Let me try to break this down a little:\n> \n> # Layout file config# `default` applies to all views. Override for specific# views as seen below.layouts:\n> \n>   default: 'layout.jade'\n>   # 'special_view.jade': 'special_layout.jade'\n> \n> default is unsurprisingly what's used as a default layout for all pages.\n> You can see that below, commented out, is a *_example *_ of a view-specific\n> override. The key is a pointer to the view that you want to have a\n> different layout (you can change this), and the value is a pointer to the\n> layout you want it to have (you can change this as well).\n> \n> So for example, if you had a view called special_view.jade in your views\n> folder, and you'd like that specific view to use special_layout.jaderather than the default layout, uncommenting that last line would do\n> exactly this. However, if you have different names for the view and layout\n> that you want to do a custom override for, you can go ahead and change\n> \"special_view\" to whatever your view's name is. Does that make a little\n> more sense?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25457253\n> .\n. I think you would just do \"posts/index.jade\":\"custom-layout.jade\"\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Thu, Oct 3, 2013 at 8:58 PM, Mitchell Coote notifications@github.com\nwrote:\n\n> Is it possible to have a custom layout for jade files outside of the views folder?\n> For instance I have a \"posts\" folder in the root directory with an `index.jade` inside of it. So when I go to `http://localhost:1111/posts/` this page is displayed. Is there a way to target this page for a custom layout? I tried this but it didn't work:\n> \n> ```\n> layouts:\n>   default: 'layout.jade'\n>   'posts/index.jade': '_posts_layout.jade'\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/236#issuecomment-25670337\n. That's odd. Jeff/Mitchell, do you think the underscores could be causing\nproblems?\n\nAdam Kochanowicz\n\n2013/10/3 Mitchell Coote notifications@github.com\n\n> I have been doing that for my posts. Here's a simple version of what my\n> folder structure looks like.\n> \n> posts\n>     index.jade\n>     post1.jade\n>     post2.jade\n> views\n>     _single_post.jade\n>     _posts_layout.jade\n>     index.jade\n>     layout.jade\n> \n> I want to use _posts_layout.jade on posts/index.jade. The reason I'm\n> doing this is I want example.com/posts/ to be an archive of all the posts\n> and example.com/posts/post1 to be an actual post.\n> \n> It works fine currently except for being able to apply a custom layout to\n> posts/index.jade, if I add front matter won't it think it's a post?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25673728\n> .\n. Edit: This was resolved by stopping roots watch and restarting.\n\nI was hoping to create some html files that AngularJS could use as\ntemplates. I'm finding that\n1. Naming them name.tpl.jade does not compile to name.tpl.html\n2. I have to fill up app.coffee with every one of these listed on an\n   individual line to get them to not use the default layout\n3. \"blank.jade\" is being compiled as a page and also acting as a layout\n   file for login.jade. So I get a blank.html and login.html file.\n   \n   default: 'layout.jade'\n   '1.0a/docs.jade': 'bootstrap.jade'\n   '1.0a/panel.jade': 'bootstrap.jade'\n   'a/index.jade' : 'bootstrap.jade'\n   'm/index.jade' : 'mobile.jade'\n   'm/login.jade' : 'blank.jade'\n\nAm I doing something wrong here?\n\nAdam Kochanowicz\n\n2013/10/8 Jeff Escalante notifications@github.com\n\n> Yeah, I think jade layouts is the way to go if you're trying to do\n> anything complex with layouts. We would have spent more time making the\n> roots layout engine more robust if it were possible, but it unfortunately\n> is not without writing custom extensions for each language that roots\n> supports then keeping them maintained as the languages evolve, which is too\n> much work for me at least. The way I see it, it's up to the people who\n> write language preprocessors to include this functionality -- roots just\n> provides a very base-bones base.\n> \n> Glad you were able to work this out though! And as always anything that\n> you need help with or seems confusing feel free to ask\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25939854\n> .\n. That's a good idea. Basically I can have my blank be my default.\n\nAdam Kochanowicz\n\n2013/10/10 Cobey Potter notifications@github.com\n\n> Here's what I do.\n> \n> in layout.jade, remove everything except for:\n> \n> != content\n> \n> //- this must be included for live reload to work in developement\n> //- it will be automatically ignored when deployed\n> != livereload\n> \n> this will always output everything through a blank file.\n> \n> Then for those pages where I want the whole wrapper of <html><head>, etc\n> etc, I create a base.jade file. I put in all the wrapper code and then\n> create a block:\n> \n> block primary\n> \n> then in my children pages, just use basic jade layout:\n> \n> extends base\n> \n> block primary\n> //- all my primary block jade code.\n> \n> pretty simple and keeps it clean for Angular and other template partials.\n> \n> Hope this helps!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-26111193\n> .\n. So how does this work, exactly? I was interested in letting my roots users compile in .php, or .erb, etc. Would I need to create a custom solution to do this?\n. Saw this in the docs, didn't know it applied to changing the file extension.\n\nAdam Kochanowicz\n\n2013/11/20 Jeff Escalante notifications@github.com\n\n> http://roots.cx/docs/#multipass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28907808\n> .\n. Thanks, Jeff.\n\nAdam Kochanowicz\n\n2013/11/20 Jeff Escalante notifications@github.com\n\n> Yup, you can tack on as many extensions as you'd like, as long as the\n> languages are interoperable you should be in the clear.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28909777\n> .\n. I don't understand.\n\nAdam Kochanowicz\n\n2013/11/20 Sam Saccone notifications@github.com\n\n> @ajkochanowicz https://github.com/ajkochanowicz what you really want is\n> .coffee.djs.sass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28912850\n> .\n. I see that this is possible in the docs, but I think I need a little more hand-holding. What API should I be referencing to manipulate the file--in my case, the extension it recognizes and outputs?\n. I ultimately want to let users define their files as .php.jade or .asp.jade\netc. The documentation shows that this is possible, but I can't tell from\nwhat's given how to apply it to my case. If I wanted to do specifically\nwhat's in the example, I'm good...\n\nIf there's something I need to Google I don't know what it is. Does the\nexample syntax come from node or?\n. I see from multipass compilation how to convert a file to uppercase, but this gets me no closer to understanding how to allow a .jade.erb or .erb.jade file to compile to .erb\n. This is not what I intend to do at all.\u00a0\n\nThere is a file called file.xyz.jade\n\nI want the name of the file to be file.xyz when compiled. There is no xyz compiler. \u00a0Literally just not call it an html file.\u00a0\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 1:53 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> There is no craziness about it, it's very simple. If you have two extensions, it will try to compile them both, in order starting from the right and moving towards the left. You must have a compiler for all of them at the moment if you are compiling a file, even if the compiler does nothing.\n> So if you have `.jade.erb` the file will first be run through the erb compiler, then the output of that is run through the jade compiler, and the final file format ends up as html, since that's the output defined in the settings for the jade compiler.\n> \n> ## Perhaps reading up on how roots' compilers work or taking a look at them in the source (lib/adapters) would make it more clear.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31181974\n. Thanks.\u00a0\n\nInstead of requiring the user to build something that does nothing, why not recognize a simple pattern such as the way I described?\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 2:01 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## You need an xyz compiler for this to work. You make make the xyz compiler do nothing and output the same extension, but at the moment it will need another compiler.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31182189\n. Fair enough. Thanks.\u00a0\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 2:09 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Because I have never had a need to do that so far, and neither has anyone else that's used roots, so it has not been implemented. It's a little bit more complicated than you think. Usually, files are detected as either compiled or not compiled (in which case they are copied). Compiled files scan through extensions and attempt to find a compiler for each extension. In this modification were to be added, the flow would have to be modified such that each extension is aware of its left and right and whether it should be compiled or not. Far from impossible, just not currently implemented.\n> \n> ## If you'd like for this to be a feature, feel free to open a feature request issue, and make sure to take the time to describe a variety of situations that could come up and how you would expect them to be handled (for example, 3 extensions, the middle one isn't compiled but the other two are).\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31182388\n. @jenius makes mistakes?\n. Cool, thanks, @jenius \n. I should also add that this is a project created in 2.0.6 but being watched in 2.1.0 b3 (if relevant)\n. Thanks, I've removed this line, but I'm getting the same results.\n\n![grab 2013-11-17 a 2 39 53 am](https://f.cloud.github.com/assets/320494/1558014/9f83c410-4f5b-11e3-98f8-8391ee7f6df7.PNG)\n\nThen I realized Roots is forcing me to load jQuery.min in my html. I'm already loading jQuery via a require.js-based library (http://jspm.io).\n\nDo you intend on using jQuery noConflict for this injection? That may fix this issue.\n. Perfect. Thanks.\u00a0\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Nov 17, 2013 at 9:29 AM, Sam Saccone notifications@github.com\nwrote:\n\n> ## Install beta 4. I removed jQuery :)\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/294#issuecomment-28649423\n. I can't install it. \n\nThen again, what am I supposed to type?\n\nI've tried npm roots install roots@1.2.0-beta4, 1.2.0beta4 1.2.0beta-4 1.2beta4 1.2beta-4 1.2-beta4\n. Thx\n\nAdam Kochanowicz\n\n2013/12/2 Jeff Escalante notifications@github.com\n\n> Also, it's 2.1.0 - you should be able to install 2.1.0-beta4 if you want,\n> but as sam said just go for stable right now.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/306#issuecomment-29595082\n> .\n. Sorry, I //did// find the error, but still wondering if there's a way for better debugging?\n. Cool, thx.\n\nAdam Kochanowicz\n\n2013/11/21 Jeff Escalante notifications@github.com\n\n> Ugh yeah error reporting in coffeescript is really bad right now, this\n> definitely needs to be addressed. I'm not going to go through your project\n> and debug your coffeescript, but we will try to fix the error reporting.\n> For now I would diff between the last commit that worked to find the\n> offending code.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/309#issuecomment-29028793\n> .\n. You guys are fast. Thanks.\n\nAdam Kochanowicz\n\n2013/11/21 Sam Saccone notifications@github.com\n\n> Closed #309 https://github.com/jenius/roots/issues/309.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/309\n> .\n. ```\nshout_out = (name, gender) ->\n  # gender = 0 or 1\n  title = if gender then \"brotha\" else \"sista\"\n  parent = if gender then \"motha\" else \"mista\"\n  msg = \"I wanna send a shoutout to my homie, #{name}. My #{title} from anotha #{parent}\"\n```\n\nSorry if my use of the gender binary is sexist.\n. Thanks, I've added a link to that in the Kickstrap docs.\n\nAdam Kochanowicz\n\n2013/11/27 Jeff Escalante notifications@github.com\n\n> Was about to type the same thing. I think this should be resolved.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/322#issuecomment-29402885\n> .\n. I started a fresh VM with Windows 8.1 and tried to install roots. I got an error message that git is missing, this should be installed automatically through npm, no?\n\n![grab 2013-12-27 a 3 31 45 pm](https://f.cloud.github.com/assets/320494/1816255/f2f1515e-6f35-11e3-8029-b6a27cf4ace5.PNG)\n. Me too, m'friend.\n. Okay thanks. Should this be in the documentation, maybe?\n\n\"Installation is super straightforward and relies only on\nnode.jshttp://nodejs.org/\n\"\n\nAdam Kochanowicz\n\n2013/12/27 Jeff Escalante notifications@github.com\n\n> No, you need to install git yourself, npm does not install it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31289686\n> .\n. Well, yes. The error was super duper quadruple clear. But when I saw on the\ndocs that I only need node.js, I had assumed there was something wrong on\nyour end instead of mine--like Roots was supposed to install Git but\ndidn't.\n\nIt's not a show stopper by any means, but if you want a 1-2-3 install\nprocess for Windows users, it might be worth pointing out.\n\nBy PR, do you mean for the docs or package.json for Roots?\n\nAdam Kochanowicz\n\n2013/12/27 Jeff Escalante notifications@github.com\n\n> I don't know, I feel like that error was super clear... do you really\n> think it's necessary? If so, could you submit a PR for this? You definitely\n> deserve the credit for this either way since you pointed it out [image:\n> :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31289980\n> .\n. To be clear, it's less about the clarity and more about the workflow. I'm\nassuming you'd want users to go to step 1, then step 2 instead of going to\nstep 2 and finding out about step 1 via an error.\n\nAdam Kochanowicz\n\n2013/12/28 HHSnopek notifications@github.com\n\n> I'd just add it to the docs, otherwise I think it's fairly obvious for any\n> user(windows, mac os x, or linux) to use git ^-^\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31290565\n> .\n. In any case, adding it to the docs is apparently what we'll do.\n. But is this the right syntax? I kind of made it up--and I don't think it\nworks.\n\nAdam Kochanowicz\n\n2013/12/9 Jeff Escalante notifications@github.com\n\n> Yeah it just does a git clone. This should work...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/338#issuecomment-30178533\n> .\n. I'm no hero.\n\nAdam Kochanowicz\n\n2013/12/14 Jeff Escalante notifications@github.com\n\n> Closed #338 https://github.com/jenius/roots/issues/338.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/338\n> .\n. I sincerely didn't know this was purely a Jade issue. Probably because I\ndefer my understanding of Roots to magic.\n\nThanks.\n\nAdam Kochanowicz\n\n2013/12/16 Jeff Escalante notifications@github.com\n\n> Closed #349 https://github.com/jenius/roots/issues/349.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/349\n> .\n. I'm running 2.0.6, is this supposed to be implemented?\n. Okay, I'll update when I'm not on a proxy. As for the original question, has this been implemented? I understand there is a new beta but the fix for this went in a year ago. Is 2.0.6 that old?\n. Changing layout.jade triggers a reload for me but it does not show changes. I always have to stop roots watch and restart it.\n. No, I have it in the default location for a new roots proj.\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> The only reproducible instance I have found of this is when you have the\n> layout in a folder that's ignored, but the layout itself is not ignored. Is\n> this what you have going on by any chance?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598541\n> .\n. What do you mean ignored?\n\nAlso, I just realized, my layout.jade file is being used differently. I'm\nnot declaring it in app.coffee as a layout. Instead, I have pages that\nextend it with Jade's \"extend\" syntax\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> Have you made sure that the layout is ignored?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598570\n> .\n. All my problems are solved!\n\nNext, I've got this rash. Can you take a look at it?\n\nAdam Kochanowicz\n\n2013/12/15 Jeff Escalante notifications@github.com\n\n> Yes, you need to ignore it in app.coffee, since layouts are not supposed\n> to be compiled. Just add layout.jade to the ignore_files array and your\n> problem will be resolved.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/113#issuecomment-30598622\n> .\n. I also noticed the files copied into public are symlinks and not actual files. Is this a related issue?\n. Not to interrupt your work, but is there a tidy way to override that, and\nhave it actually just copy over the files?\n\nFor my Kickstrap download, in order to make two versions--one with roots and one with just plain html, css, js (no compilation)--I was going to have the contents of public copied over to a second directory. If public files merely refer to files in assets, that wouldn't work. Is there anything I could do to customize (plugin?) on my end to have it not do this?\n. I read that in the docs. Are you saying this is a different version of the\ncompiling that happens when I run `roots watch` (wherein assets aren't\nsymlinked)?\n. Okay, good point.\n\nI see what you did there.\n. Thanks Jeff. You say \"it's documented right in app.coffee.\" How do you\nfigure? All I see is an instruction on how to write in \"special_view.jade\"\nbut I don't see documentation on how to tell Roots that \"this\" jade file\nwill use \"special_view.jade\"\n\nAdam Kochanowicz\n\n2013/10/1 Jeff Escalante notifications@github.com\n\n> Yessir, it's documented right in app.coffeehttps://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9.\n> If you want to change the default layout, you can do so by changing the\n> string after default to point to the layout you want to use (or if you\n> are making a template, just change the contents of layout.jade).\n> \n> You can also bypass the roots layout engine and use jade's instead if\n> you'd like -- running roots new example --min will give you a template\n> that does this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25450933\n> .\n. Or maybe this isn't the solution I'm looking for. I want to use layout.jade\nfor all my pages, but I want to use custom.jade for just one of them. Can I\ndo that with app.coffee?\n\nAdam Kochanowicz\n\n2013/10/1 Adam Kochanowicz ajkochanowicz@gmail.com\n\n> Thanks Jeff. You say \"it's documented right in app.coffee.\" How do you\n> figure? All I see is an instruction on how to write in \"special_view.jade\"\n> but I don't see documentation on how to tell Roots that \"this\" jade file\n> will use \"special_view.jade\"\n> \n> Adam Kochanowicz\n> \n> 2013/10/1 Jeff Escalante notifications@github.com\n> \n> > Yessir, it's documented right in app.coffeehttps://github.com/jenius/roots/blob/master/templates/new/default/app.coffee#L9.\n> > If you want to change the default layout, you can do so by changing the\n> > string after default to point to the layout you want to use (or if you\n> > are making a template, just change the contents of layout.jade).\n> > \n> > You can also bypass the roots layout engine and use jade's instead if\n> > you'd like -- running roots new example --min will give you a template\n> > that does this.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25450933\n> > .\n. Ohhhh. Okay. Indeed, it does say \"special_view.jade\". I was seeing this\nvery differently. Thank you.\n\nAdam Kochanowicz\n\n2013/10/1 Jeff Escalante notifications@github.com\n\n> Yes, you can do that. That's the exact piece that's documented in\n> app.coffee. Let me try to break this down a little:\n> \n> # Layout file config# `default` applies to all views. Override for specific# views as seen below.layouts:\n> \n>   default: 'layout.jade'\n>   # 'special_view.jade': 'special_layout.jade'\n> \n> default is unsurprisingly what's used as a default layout for all pages.\n> You can see that below, commented out, is a *_example *_ of a view-specific\n> override. The key is a pointer to the view that you want to have a\n> different layout (you can change this), and the value is a pointer to the\n> layout you want it to have (you can change this as well).\n> \n> So for example, if you had a view called special_view.jade in your views\n> folder, and you'd like that specific view to use special_layout.jaderather than the default layout, uncommenting that last line would do\n> exactly this. However, if you have different names for the view and layout\n> that you want to do a custom override for, you can go ahead and change\n> \"special_view\" to whatever your view's name is. Does that make a little\n> more sense?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25457253\n> .\n. I think you would just do \"posts/index.jade\":\"custom-layout.jade\"\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Thu, Oct 3, 2013 at 8:58 PM, Mitchell Coote notifications@github.com\nwrote:\n\n> Is it possible to have a custom layout for jade files outside of the views folder?\n> For instance I have a \"posts\" folder in the root directory with an `index.jade` inside of it. So when I go to `http://localhost:1111/posts/` this page is displayed. Is there a way to target this page for a custom layout? I tried this but it didn't work:\n> \n> ```\n> layouts:\n>   default: 'layout.jade'\n>   'posts/index.jade': '_posts_layout.jade'\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/236#issuecomment-25670337\n. That's odd. Jeff/Mitchell, do you think the underscores could be causing\nproblems?\n\nAdam Kochanowicz\n\n2013/10/3 Mitchell Coote notifications@github.com\n\n> I have been doing that for my posts. Here's a simple version of what my\n> folder structure looks like.\n> \n> posts\n>     index.jade\n>     post1.jade\n>     post2.jade\n> views\n>     _single_post.jade\n>     _posts_layout.jade\n>     index.jade\n>     layout.jade\n> \n> I want to use _posts_layout.jade on posts/index.jade. The reason I'm\n> doing this is I want example.com/posts/ to be an archive of all the posts\n> and example.com/posts/post1 to be an actual post.\n> \n> It works fine currently except for being able to apply a custom layout to\n> posts/index.jade, if I add front matter won't it think it's a post?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25673728\n> .\n. Edit: This was resolved by stopping roots watch and restarting.\n\nI was hoping to create some html files that AngularJS could use as\ntemplates. I'm finding that\n1. Naming them name.tpl.jade does not compile to name.tpl.html\n2. I have to fill up app.coffee with every one of these listed on an\n   individual line to get them to not use the default layout\n3. \"blank.jade\" is being compiled as a page and also acting as a layout\n   file for login.jade. So I get a blank.html and login.html file.\n   \n   default: 'layout.jade'\n   '1.0a/docs.jade': 'bootstrap.jade'\n   '1.0a/panel.jade': 'bootstrap.jade'\n   'a/index.jade' : 'bootstrap.jade'\n   'm/index.jade' : 'mobile.jade'\n   'm/login.jade' : 'blank.jade'\n\nAm I doing something wrong here?\n\nAdam Kochanowicz\n\n2013/10/8 Jeff Escalante notifications@github.com\n\n> Yeah, I think jade layouts is the way to go if you're trying to do\n> anything complex with layouts. We would have spent more time making the\n> roots layout engine more robust if it were possible, but it unfortunately\n> is not without writing custom extensions for each language that roots\n> supports then keeping them maintained as the languages evolve, which is too\n> much work for me at least. The way I see it, it's up to the people who\n> write language preprocessors to include this functionality -- roots just\n> provides a very base-bones base.\n> \n> Glad you were able to work this out though! And as always anything that\n> you need help with or seems confusing feel free to ask\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-25939854\n> .\n. That's a good idea. Basically I can have my blank be my default.\n\nAdam Kochanowicz\n\n2013/10/10 Cobey Potter notifications@github.com\n\n> Here's what I do.\n> \n> in layout.jade, remove everything except for:\n> \n> != content\n> \n> //- this must be included for live reload to work in developement\n> //- it will be automatically ignored when deployed\n> != livereload\n> \n> this will always output everything through a blank file.\n> \n> Then for those pages where I want the whole wrapper of <html><head>, etc\n> etc, I create a base.jade file. I put in all the wrapper code and then\n> create a block:\n> \n> block primary\n> \n> then in my children pages, just use basic jade layout:\n> \n> extends base\n> \n> block primary\n> //- all my primary block jade code.\n> \n> pretty simple and keeps it clean for Angular and other template partials.\n> \n> Hope this helps!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/236#issuecomment-26111193\n> .\n. So how does this work, exactly? I was interested in letting my roots users compile in .php, or .erb, etc. Would I need to create a custom solution to do this?\n. Saw this in the docs, didn't know it applied to changing the file extension.\n\nAdam Kochanowicz\n\n2013/11/20 Jeff Escalante notifications@github.com\n\n> http://roots.cx/docs/#multipass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28907808\n> .\n. Thanks, Jeff.\n\nAdam Kochanowicz\n\n2013/11/20 Jeff Escalante notifications@github.com\n\n> Yup, you can tack on as many extensions as you'd like, as long as the\n> languages are interoperable you should be in the clear.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28909777\n> .\n. I don't understand.\n\nAdam Kochanowicz\n\n2013/11/20 Sam Saccone notifications@github.com\n\n> @ajkochanowicz https://github.com/ajkochanowicz what you really want is\n> .coffee.djs.sass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/252#issuecomment-28912850\n> .\n. I see that this is possible in the docs, but I think I need a little more hand-holding. What API should I be referencing to manipulate the file--in my case, the extension it recognizes and outputs?\n. I ultimately want to let users define their files as .php.jade or .asp.jade\netc. The documentation shows that this is possible, but I can't tell from\nwhat's given how to apply it to my case. If I wanted to do specifically\nwhat's in the example, I'm good...\n\nIf there's something I need to Google I don't know what it is. Does the\nexample syntax come from node or?\n. I see from multipass compilation how to convert a file to uppercase, but this gets me no closer to understanding how to allow a .jade.erb or .erb.jade file to compile to .erb\n. This is not what I intend to do at all.\u00a0\n\nThere is a file called file.xyz.jade\n\nI want the name of the file to be file.xyz when compiled. There is no xyz compiler. \u00a0Literally just not call it an html file.\u00a0\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 1:53 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> There is no craziness about it, it's very simple. If you have two extensions, it will try to compile them both, in order starting from the right and moving towards the left. You must have a compiler for all of them at the moment if you are compiling a file, even if the compiler does nothing.\n> So if you have `.jade.erb` the file will first be run through the erb compiler, then the output of that is run through the jade compiler, and the final file format ends up as html, since that's the output defined in the settings for the jade compiler.\n> \n> ## Perhaps reading up on how roots' compilers work or taking a look at them in the source (lib/adapters) would make it more clear.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31181974\n. Thanks.\u00a0\n\nInstead of requiring the user to build something that does nothing, why not recognize a simple pattern such as the way I described?\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 2:01 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## You need an xyz compiler for this to work. You make make the xyz compiler do nothing and output the same extension, but at the moment it will need another compiler.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31182189\n. Fair enough. Thanks.\u00a0\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Dec 24, 2013 at 2:09 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Because I have never had a need to do that so far, and neither has anyone else that's used roots, so it has not been implemented. It's a little bit more complicated than you think. Usually, files are detected as either compiled or not compiled (in which case they are copied). Compiled files scan through extensions and attempt to find a compiler for each extension. In this modification were to be added, the flow would have to be modified such that each extension is aware of its left and right and whether it should be compiled or not. Far from impossible, just not currently implemented.\n> \n> ## If you'd like for this to be a feature, feel free to open a feature request issue, and make sure to take the time to describe a variety of situations that could come up and how you would expect them to be handled (for example, 3 extensions, the middle one isn't compiled but the other two are).\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/252#issuecomment-31182388\n. @jenius makes mistakes?\n. Cool, thanks, @jenius \n. I should also add that this is a project created in 2.0.6 but being watched in 2.1.0 b3 (if relevant)\n. Thanks, I've removed this line, but I'm getting the same results.\n\n![grab 2013-11-17 a 2 39 53 am](https://f.cloud.github.com/assets/320494/1558014/9f83c410-4f5b-11e3-98f8-8391ee7f6df7.PNG)\n\nThen I realized Roots is forcing me to load jQuery.min in my html. I'm already loading jQuery via a require.js-based library (http://jspm.io).\n\nDo you intend on using jQuery noConflict for this injection? That may fix this issue.\n. Perfect. Thanks.\u00a0\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Nov 17, 2013 at 9:29 AM, Sam Saccone notifications@github.com\nwrote:\n\n> ## Install beta 4. I removed jQuery :)\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/294#issuecomment-28649423\n. I can't install it. \n\nThen again, what am I supposed to type?\n\nI've tried npm roots install roots@1.2.0-beta4, 1.2.0beta4 1.2.0beta-4 1.2beta4 1.2beta-4 1.2-beta4\n. Thx\n\nAdam Kochanowicz\n\n2013/12/2 Jeff Escalante notifications@github.com\n\n> Also, it's 2.1.0 - you should be able to install 2.1.0-beta4 if you want,\n> but as sam said just go for stable right now.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/306#issuecomment-29595082\n> .\n. Sorry, I //did// find the error, but still wondering if there's a way for better debugging?\n. Cool, thx.\n\nAdam Kochanowicz\n\n2013/11/21 Jeff Escalante notifications@github.com\n\n> Ugh yeah error reporting in coffeescript is really bad right now, this\n> definitely needs to be addressed. I'm not going to go through your project\n> and debug your coffeescript, but we will try to fix the error reporting.\n> For now I would diff between the last commit that worked to find the\n> offending code.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/309#issuecomment-29028793\n> .\n. You guys are fast. Thanks.\n\nAdam Kochanowicz\n\n2013/11/21 Sam Saccone notifications@github.com\n\n> Closed #309 https://github.com/jenius/roots/issues/309.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/309\n> .\n. ```\nshout_out = (name, gender) ->\n  # gender = 0 or 1\n  title = if gender then \"brotha\" else \"sista\"\n  parent = if gender then \"motha\" else \"mista\"\n  msg = \"I wanna send a shoutout to my homie, #{name}. My #{title} from anotha #{parent}\"\n```\n\nSorry if my use of the gender binary is sexist.\n. Thanks, I've added a link to that in the Kickstrap docs.\n\nAdam Kochanowicz\n\n2013/11/27 Jeff Escalante notifications@github.com\n\n> Was about to type the same thing. I think this should be resolved.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/322#issuecomment-29402885\n> .\n. I started a fresh VM with Windows 8.1 and tried to install roots. I got an error message that git is missing, this should be installed automatically through npm, no?\n\n![grab 2013-12-27 a 3 31 45 pm](https://f.cloud.github.com/assets/320494/1816255/f2f1515e-6f35-11e3-8029-b6a27cf4ace5.PNG)\n. Me too, m'friend.\n. Okay thanks. Should this be in the documentation, maybe?\n\n\"Installation is super straightforward and relies only on\nnode.jshttp://nodejs.org/\n\"\n\nAdam Kochanowicz\n\n2013/12/27 Jeff Escalante notifications@github.com\n\n> No, you need to install git yourself, npm does not install it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31289686\n> .\n. Well, yes. The error was super duper quadruple clear. But when I saw on the\ndocs that I only need node.js, I had assumed there was something wrong on\nyour end instead of mine--like Roots was supposed to install Git but\ndidn't.\n\nIt's not a show stopper by any means, but if you want a 1-2-3 install\nprocess for Windows users, it might be worth pointing out.\n\nBy PR, do you mean for the docs or package.json for Roots?\n\nAdam Kochanowicz\n\n2013/12/27 Jeff Escalante notifications@github.com\n\n> I don't know, I feel like that error was super clear... do you really\n> think it's necessary? If so, could you submit a PR for this? You definitely\n> deserve the credit for this either way since you pointed it out [image:\n> :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31289980\n> .\n. To be clear, it's less about the clarity and more about the workflow. I'm\nassuming you'd want users to go to step 1, then step 2 instead of going to\nstep 2 and finding out about step 1 via an error.\n\nAdam Kochanowicz\n\n2013/12/28 HHSnopek notifications@github.com\n\n> I'd just add it to the docs, otherwise I think it's fairly obvious for any\n> user(windows, mac os x, or linux) to use git ^-^\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/332#issuecomment-31290565\n> .\n. In any case, adding it to the docs is apparently what we'll do.\n. But is this the right syntax? I kind of made it up--and I don't think it\nworks.\n\nAdam Kochanowicz\n\n2013/12/9 Jeff Escalante notifications@github.com\n\n> Yeah it just does a git clone. This should work...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/338#issuecomment-30178533\n> .\n. I'm no hero.\n\nAdam Kochanowicz\n\n2013/12/14 Jeff Escalante notifications@github.com\n\n> Closed #338 https://github.com/jenius/roots/issues/338.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/338\n> .\n. I sincerely didn't know this was purely a Jade issue. Probably because I\ndefer my understanding of Roots to magic.\n\nThanks.\n\nAdam Kochanowicz\n\n2013/12/16 Jeff Escalante notifications@github.com\n\n> Closed #349 https://github.com/jenius/roots/issues/349.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/349\n> .\n. ",
    "pruett": "really enjoying using roots so far...well done gentlemen. i'll keep throwing up errors that i run into.  many thanks!\n. my man :point_up: \n. is there any interest in having **aliases** for `app.coffee`? \n\ni was going to submit a PR sort of in line with this one where the parser looks for not only `app.coffee`, but also `roots.coffee` or `config.coffee` for example. (whatever aliases we deem appropriate)\n\ni already have an app.coffee file (albeit nested; but it ultimately occurred to me that the naming of `app.coffee` is a bit misleading)\n\ncurious as to everyone's thoughts before going any further...\n. good sleuthing gentlemen! :microscope:\n. :thumbsup: \n. just got the same error when booting up for the first time\n\nin my case removing the `extensions` object map for browserify in `app.coffee` got rid of the error...not sure if its a core issue or a plugin reaction, looking into the latter\n. application.coffee\n\n``` coffee\n$             = require 'jquery'\nBackbone      = require 'backbone'\nBackbone.$    = $\nMarionette    = require 'backbone.marionette'\nMarionette.$  = $\n\nApp = new Marionette.Application()\n\nApp.on 'initialize:before', (opts) ->\n  @current_user = App.request \"set:current_user\", opts.current_user\n  @current_org = App.request \"set:current_org\", opts.current_org\n\nApp.reqres.setHandler \"get:current_user\", ->\n  App.current_user\n\nApp.reqres.setHandler \"get:current_org\", ->\n  App.current_org\n\nApp.addRegions\n  header_region : '#header-region'\n  main_region   : '#main-region'\n  footer_region : '#footer-region'\n\nApp.on 'initialize:after', (opts) ->\n  if Backbone.history then Backbone.history.start()\n\nmodule.exports = App\n```\n. ``` bash\n\u203a npm list --depth=0\ncrosscourt-ui@ /Users/kevin/Code/crosscourt-ui\n\u251c\u2500\u2500 autoprefixer-stylus@0.0.4\n\u251c\u2500\u2500 backbone@1.1.2\n\u251c\u2500\u2500 backbone.marionette@1.8.1\n\u251c\u2500\u2500 browserify@3.39.0\n\u251c\u2500\u2500 browserify-shim@3.4.1\n\u251c\u2500\u2500 client-templates@0.0.6\n\u251c\u2500\u2500 coffee-script@1.7.1\n\u251c\u2500\u2500 glob@3.2.9\n\u251c\u2500\u2500 jade@1.3.1\n\u251c\u2500\u2500 jquery@2.1.0\n\u251c\u2500\u2500 marked@0.3.2\n\u251c\u2500\u2500 roots@3.0.0-rc.5\n\u251c\u2500\u2500 roots-browserify@0.0.3\n\u251c\u2500\u2500 stylus@0.42.3\n\u251c\u2500\u2500 underscore@1.6.0\n\u2514\u2500\u2500 when@3.1.0\n```\n. just wanted to follow up on this...\n\nthis does indeed look to be an issue with the watcher and `roots-browserify`; `.coffee` files in particular i believe. running without browserify compiled with no problem.\n\njust to reiterate, this works fine in `v 3.0.0-rc.5`\n. it looks like `browserify` made it to my `package.json` and conflicted with `roots-browserify`\n. very cool, thanks brother\n. i just didn't want to clutter up core roots with this issue. a cross reference a dynamic content issue of the same name makes more sense to me.\n. really enjoying using roots so far...well done gentlemen. i'll keep throwing up errors that i run into.  many thanks!\n. my man :point_up: \n. is there any interest in having **aliases** for `app.coffee`? \n\ni was going to submit a PR sort of in line with this one where the parser looks for not only `app.coffee`, but also `roots.coffee` or `config.coffee` for example. (whatever aliases we deem appropriate)\n\ni already have an app.coffee file (albeit nested; but it ultimately occurred to me that the naming of `app.coffee` is a bit misleading)\n\ncurious as to everyone's thoughts before going any further...\n. good sleuthing gentlemen! :microscope:\n. :thumbsup: \n. just got the same error when booting up for the first time\n\nin my case removing the `extensions` object map for browserify in `app.coffee` got rid of the error...not sure if its a core issue or a plugin reaction, looking into the latter\n. application.coffee\n\n``` coffee\n$             = require 'jquery'\nBackbone      = require 'backbone'\nBackbone.$    = $\nMarionette    = require 'backbone.marionette'\nMarionette.$  = $\n\nApp = new Marionette.Application()\n\nApp.on 'initialize:before', (opts) ->\n  @current_user = App.request \"set:current_user\", opts.current_user\n  @current_org = App.request \"set:current_org\", opts.current_org\n\nApp.reqres.setHandler \"get:current_user\", ->\n  App.current_user\n\nApp.reqres.setHandler \"get:current_org\", ->\n  App.current_org\n\nApp.addRegions\n  header_region : '#header-region'\n  main_region   : '#main-region'\n  footer_region : '#footer-region'\n\nApp.on 'initialize:after', (opts) ->\n  if Backbone.history then Backbone.history.start()\n\nmodule.exports = App\n```\n. ``` bash\n\u203a npm list --depth=0\ncrosscourt-ui@ /Users/kevin/Code/crosscourt-ui\n\u251c\u2500\u2500 autoprefixer-stylus@0.0.4\n\u251c\u2500\u2500 backbone@1.1.2\n\u251c\u2500\u2500 backbone.marionette@1.8.1\n\u251c\u2500\u2500 browserify@3.39.0\n\u251c\u2500\u2500 browserify-shim@3.4.1\n\u251c\u2500\u2500 client-templates@0.0.6\n\u251c\u2500\u2500 coffee-script@1.7.1\n\u251c\u2500\u2500 glob@3.2.9\n\u251c\u2500\u2500 jade@1.3.1\n\u251c\u2500\u2500 jquery@2.1.0\n\u251c\u2500\u2500 marked@0.3.2\n\u251c\u2500\u2500 roots@3.0.0-rc.5\n\u251c\u2500\u2500 roots-browserify@0.0.3\n\u251c\u2500\u2500 stylus@0.42.3\n\u251c\u2500\u2500 underscore@1.6.0\n\u2514\u2500\u2500 when@3.1.0\n```\n. just wanted to follow up on this...\n\nthis does indeed look to be an issue with the watcher and `roots-browserify`; `.coffee` files in particular i believe. running without browserify compiled with no problem.\n\njust to reiterate, this works fine in `v 3.0.0-rc.5`\n. it looks like `browserify` made it to my `package.json` and conflicted with `roots-browserify`\n. very cool, thanks brother\n. i just didn't want to clutter up core roots with this issue. a cross reference a dynamic content issue of the same name makes more sense to me.\n. ",
    "kyleknighted": "Would you prefer PRs be against a different branch, other than master, in the future?\n. Would you prefer PRs be against a different branch, other than master, in the future?\n. ",
    "dunphyben": "can anyone recommend instructions for getting jquery to work with roots? i can't get it to work with roots 3.0.2\n. hi @jenius thanks for the quick reply. i figured it out...in migrating from my express project i kept the `$ = require 'jquery'` which was unnecessary. \n. can anyone recommend instructions for getting jquery to work with roots? i can't get it to work with roots 3.0.2\n. hi @jenius thanks for the quick reply. i figured it out...in migrating from my express project i kept the `$ = require 'jquery'` which was unnecessary. \n. ",
    "aemadrid": "What I mean was starting from such a basic template doesn't help the less advanced developers. Maybe having more example starting templates would people get moving quicker. Maybe some templates like Bootstrap does to showcase what roots can do? I updated the original issue to be more clear (the link text was not clear enough).\n. Sure, that will definitely help.\n. Thanks!\n. What I mean was starting from such a basic template doesn't help the less advanced developers. Maybe having more example starting templates would people get moving quicker. Maybe some templates like Bootstrap does to showcase what roots can do? I updated the original issue to be more clear (the link text was not clear enough).\n. Sure, that will definitely help.\n. Thanks!\n. ",
    "ccverg": "@jenius you should claim this bounty (even if you posted the bounty yourself...) here: https://www.bountysource.com/issues/97877/claims. You'll get the money in your account and can re-allocate onto other issues\n. @jenius you should claim this bounty (even if you posted the bounty yourself...) here: https://www.bountysource.com/issues/97877/claims. You'll get the money in your account and can re-allocate onto other issues\n. ",
    "mattwoodnyc": "Thanks for getting back. The first place I read about Roots was on my phone, and I loved the concept, but seeing blurry, pixelated icons didn't seem right. Since the project had gone to great lengths to create a large palette of visual options via CSS, without any images, it only made sense update the icons as well.\n\nI'm sure the entypo crew would be open to discussion to include the icons as fonts, similar to what Font Awesome has done.\n\nMoving forward, it would be awesome to see something similar to Initializr.\n\nGreat work! I'm excited to watch the progress.\n\nMatt Wood\n\nOn Dec 15, 2012, at 10:27 AM, Jeff Escalante notifications@github.com wrote:\n\nHey Matt,\n\nThis is some good work, but I don't think I want to have this included by default. Everyone has their own project preferences, and the entypo icons notably require attribution, which I'm sure many people would forget (and in fact you already did in this pull request) - I don't want to have a bunch of people violating the license of entypo because of roots.\n\nOn the other hand, the next feature I've got in the pipeline is an ability to add custom starting templates that can be defined by users. For example, if someone likes working with straight javascript and having the html5 boilerplate and entypo, they would be able to define this. I think this would be great to add as a custom template for sure. Let me get back to you on this one. Any other thoughts are welcome.\n\nAlso, roots ships with a font-face definition mixin - feel free to tinker with that as well. It's in the docs under utilities: http://roots.cx/css/#utilities\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah... I was looking at the \"play\" button on the video thumbnails which, now looking closer, were images for that purpose \u2014 something I had assumed would have been from the entypo library since it was mentioned previously.\n\nSo the main site has entypo icon fonts, but the framework build does not?\n\nOn Dec 15, 2012, at 6:31 PM, Jeff Escalante notifications@github.com wrote:\n\nDid you really see the icons as blurry? If so, this might have been a massive glitch in either your phone's rendering engine or with entypo itself. The icons on the main site are font icons, as you can see here, so there's no reason why it shouldn't be clear.\n\nThat being said, it would be great if the author of entypo would allow the icons to be packaged by default into the framework. I'll contact him and ask about this, although I do understand why he wants attribution and am not convinced that he would allow this.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, will do.\n\nFunny thing was that I had been working on a node e-commerce app, (I'm new to anything more than simple jquery), and I had picked out the entypo collection after browsing the list on Chris Coyier's site (http://css-tricks.com/flat-icons-icon-fonts/). The very next day, after converting the fonts and added to our collection, I saw your HN post. So naturally I was excited.\n\nAs you suggested, it would be great to have a custom build site available to roll your own. The videos are great, by the way.\n\nStoked to see more.\n\nOn Dec 15, 2012, at 6:57 PM, Jeff Escalante notifications@github.com wrote:\n\nRight. I only want a very basic template as the default - if people want to add entypo, it's simple to do. But I don't think I should push it on them by default - ya know?\n\nAs for the play buttons, totally forgot about making those retina. The videos were a last minute addition before ship. But that's a great call, could you open up an issue in the roots.cx repo about the fact that these should be retina? Good catch : )\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks for getting back. The first place I read about Roots was on my phone, and I loved the concept, but seeing blurry, pixelated icons didn't seem right. Since the project had gone to great lengths to create a large palette of visual options via CSS, without any images, it only made sense update the icons as well.\n\nI'm sure the entypo crew would be open to discussion to include the icons as fonts, similar to what Font Awesome has done.\n\nMoving forward, it would be awesome to see something similar to Initializr.\n\nGreat work! I'm excited to watch the progress.\n\nMatt Wood\n\nOn Dec 15, 2012, at 10:27 AM, Jeff Escalante notifications@github.com wrote:\n\nHey Matt,\n\nThis is some good work, but I don't think I want to have this included by default. Everyone has their own project preferences, and the entypo icons notably require attribution, which I'm sure many people would forget (and in fact you already did in this pull request) - I don't want to have a bunch of people violating the license of entypo because of roots.\n\nOn the other hand, the next feature I've got in the pipeline is an ability to add custom starting templates that can be defined by users. For example, if someone likes working with straight javascript and having the html5 boilerplate and entypo, they would be able to define this. I think this would be great to add as a custom template for sure. Let me get back to you on this one. Any other thoughts are welcome.\n\nAlso, roots ships with a font-face definition mixin - feel free to tinker with that as well. It's in the docs under utilities: http://roots.cx/css/#utilities\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah... I was looking at the \"play\" button on the video thumbnails which, now looking closer, were images for that purpose \u2014 something I had assumed would have been from the entypo library since it was mentioned previously.\n\nSo the main site has entypo icon fonts, but the framework build does not?\n\nOn Dec 15, 2012, at 6:31 PM, Jeff Escalante notifications@github.com wrote:\n\nDid you really see the icons as blurry? If so, this might have been a massive glitch in either your phone's rendering engine or with entypo itself. The icons on the main site are font icons, as you can see here, so there's no reason why it shouldn't be clear.\n\nThat being said, it would be great if the author of entypo would allow the icons to be packaged by default into the framework. I'll contact him and ask about this, although I do understand why he wants attribution and am not convinced that he would allow this.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, will do.\n\nFunny thing was that I had been working on a node e-commerce app, (I'm new to anything more than simple jquery), and I had picked out the entypo collection after browsing the list on Chris Coyier's site (http://css-tricks.com/flat-icons-icon-fonts/). The very next day, after converting the fonts and added to our collection, I saw your HN post. So naturally I was excited.\n\nAs you suggested, it would be great to have a custom build site available to roll your own. The videos are great, by the way.\n\nStoked to see more.\n\nOn Dec 15, 2012, at 6:57 PM, Jeff Escalante notifications@github.com wrote:\n\nRight. I only want a very basic template as the default - if people want to add entypo, it's simple to do. But I don't think I should push it on them by default - ya know?\n\nAs for the play buttons, totally forgot about making those retina. The videos were a last minute addition before ship. But that's a great call, could you open up an issue in the roots.cx repo about the fact that these should be retina? Good catch : )\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "dz0ny": "@jenius Overwriting is fine, but not deleting everything in that folder, same goes for (roots new ./project). Root should only delete its own files. Here is user-case:\n\nI was experimenting with deployd. Created new project with `dpd init`, then noticed I have empty public folder. Great let's try roots, `roots new .` puff. Everything gone (package.json,.git...) you get the point, how bad it is to delete everything. Also because command deletes folder and creates new, bash complained it lost pwd handle o.O.\n. @jenius Overwriting is fine, but not deleting everything in that folder, same goes for (roots new ./project). Root should only delete its own files. Here is user-case:\n\nI was experimenting with deployd. Created new project with `dpd init`, then noticed I have empty public folder. Great let's try roots, `roots new .` puff. Everything gone (package.json,.git...) you get the point, how bad it is to delete everything. Also because command deletes folder and creates new, bash complained it lost pwd handle o.O.\n. ",
    "Kazy": "I also expect `roots new app` to write its files, overwriting them if they already exist, but not delete the whole directory. As @samccone said, it should at least warn the user.\n. I also expect `roots new app` to write its files, overwriting them if they already exist, but not delete the whole directory. As @samccone said, it should at least warn the user.\n. ",
    "randallagordon": "Installing [Which for Windows](http://gnuwin32.sourceforge.net/packages/which.htm) and splitting the run call on line 31 of deploy.js into two run calls is a workaround if someone is really dedicated to Windows in the meantime. ;)\n. I really dig The Rocket logo. Its aesthetic would lend itself well to providing depth to the roots.\n. :+1: \n. If no one else has started tackling the ghpages deployer, I'll dive in on it. I got a bit started this evening just to make sure I understand the deployment code well enough to pull it off. Just creates a new repo via the GitHub API so far, but it's a start:\n\nhttps://github.com/randallagordon/roots/tree/ghpages\n\nUnless there's already a working ghpages deployer hiding in a branch of someone's fork, I'll keep running with it.\n. It's rude, it's crude and it's probably ready to give ya lots of attitude...but [it is deploying](https://github.com/randallagordon/rootsghpages)...just barely.\n\nhttps://github.com/randallagordon/roots/tree/ghpages\n\nI note that the master.css file is currently being sourced with an absolute path rather than relative and that isn't playing nice with gh-pages (or any deployment in a sub-directory for that matter). Is there any particular reason for that being the case, or can it be safely changed to relative?\n. I certainly can in the interest of getting feedback, although I was planning on cleaning it up a bit more tomorrow. 'suppose I can just add extra commits to it, eh?\n. prompt usage is entirely thanks to the suggestion from @samccone above to check out pullr. It's a slick little module, I'll definitely be remembering it for future usage!\n\nDropping the password entry would certainly simplify things a good bit. It does work, although I haven't tested it extensively with existing projects, just a freshly created roots project. This fell by the wayside as I'm in the middle of moving, I just haven't had time to get back to it yet.\n. Installing [Which for Windows](http://gnuwin32.sourceforge.net/packages/which.htm) and splitting the run call on line 31 of deploy.js into two run calls is a workaround if someone is really dedicated to Windows in the meantime. ;)\n. I really dig The Rocket logo. Its aesthetic would lend itself well to providing depth to the roots.\n. :+1: \n. If no one else has started tackling the ghpages deployer, I'll dive in on it. I got a bit started this evening just to make sure I understand the deployment code well enough to pull it off. Just creates a new repo via the GitHub API so far, but it's a start:\n\nhttps://github.com/randallagordon/roots/tree/ghpages\n\nUnless there's already a working ghpages deployer hiding in a branch of someone's fork, I'll keep running with it.\n. It's rude, it's crude and it's probably ready to give ya lots of attitude...but [it is deploying](https://github.com/randallagordon/rootsghpages)...just barely.\n\nhttps://github.com/randallagordon/roots/tree/ghpages\n\nI note that the master.css file is currently being sourced with an absolute path rather than relative and that isn't playing nice with gh-pages (or any deployment in a sub-directory for that matter). Is there any particular reason for that being the case, or can it be safely changed to relative?\n. I certainly can in the interest of getting feedback, although I was planning on cleaning it up a bit more tomorrow. 'suppose I can just add extra commits to it, eh?\n. prompt usage is entirely thanks to the suggestion from @samccone above to check out pullr. It's a slick little module, I'll definitely be remembering it for future usage!\n\nDropping the password entry would certainly simplify things a good bit. It does work, although I haven't tested it extensively with existing projects, just a freshly created roots project. This fell by the wayside as I'm in the middle of moving, I just haven't had time to get back to it yet.\n. ",
    "Munter": "Thanks for all the positive feedback. I'll see if I can address some of the points you raised.\n- Image optimization. The ideal goal here is to be completely independent of external binaries of the operating system. We are depending on optipng-bin and jpegtran-bin, that try to put the binaries in npm, thus making the dependency chain better. Also it should just ignore a missing binary and skip the optimization if the tools isn't available. Optional was the word I was looking for :)\n- require.js. Assetgraph doesn't depend on it. It just understands it, since it seems to be a pretty widespread dependency manager. And of course the authors use it, so it was the first thing to get in there. Other dependency managers might find their way into assetgraph as well. Bundling strategy is as of yet also an undetermined strategy for assetgraph-builder. For now it squashes everything together if the `require` is at the root level.\n- Coffeescript. There is some support for it in there. I haven't used it as I am not a big fan. Assetgraph mainly concerns itself with postprocessing of pure browser readable inputs. But that usually fits pretty well into most workflows as long as you set up preprocessors yourselt. Or in this case, roots does that.\n- Closures, scoping and exports. Sound like you want to take a look at substacks browserify and yarnify. Also a preprocessing step\n- Adding assetgraph and complexity. Ideally assetgraph could at some point replace some of the existing build flows on roots, thus balancing out the complexity or even simplifying. However assetgraph is mainly developed towards static pages or web apps, so if roots has a lot of users that use on the fly generated html from a dynamic back end, then it's probably not the best fit.\n\nI very much like your idea of using Assetgraph more low level. The whole point of it is to be a optimization tookit. And since you are building an optimization/workflow framework it fits quite well. The low level version has quite a steep learning curve and is very much geared towards tool builders, not end users, so that's why we're not trying to sell it as much :)\n\nI have also tried getting assetgraph into Yeoman. They like grunt a lot and just want plugins for it that they can preconfigure instead of them writing their own thing. So I created the grunt-reduce wrapper for assetgraph-builder for them.\n\nI'd like to help implement assetgraph, and I would of course also handle all support that may come in from end users if you point them at the assetgraph issues when they have problems with it. I don't think I'll be a regular contributer to roots just yet though. For now my primary goal is to evangelize assetgraph. So it's mostly out of self interest to get peopel to use our awesome idea. But of course that doesn't have to be all bad :) \n. We've had thoughts along the same lines. @papandreou created [assetgraph-middleware](https://github.com/papandreou/assetgraph-middleware) with exactly this purpose.\n\nAssetgraph already has stylus and coffeescript support, mostly because those where pretty easy to integrate since they are node modules.\n\nThere is no doubt that the main purpose of assetgraph has primarily been post processing, not preprocessing. One you get into the realm of preprocessing you have to configure dependencies and workflows manually with manifests, configuration etc. We're not really big fans of expanding assetgraph in that direction.\n\nThat said though, assetgraph integrates well with other preprocessors, as long as the output is supported and saved to disk in the location your web application is including it from. This seems to be the typical use case.\n. There is no jade support. I guess there might be some day. We haven't had any requests yet.\n\nI don't think there is an easy way to do dependency based continuous updates like you describe. But if I understand you correctly you want to do an actual production build with full optimizations based on file updates on disk? If so I disagree with the idea. A properly minified web application doesn't have the same assets in the output as in the input, so you can map 1:1 and just do a partial build on the assets that changed.\n\nA live updated directory like that should only serve for development, and then it should not be minified at all so development is easier.\n. Ask away :)\n\nThanks for considering this. I completely understand your decision.\n\nYou also might be interested in following tkellens node-task project. It's an attempt at formalizing some of the concepts that experience has shown to be needed in grunt. I feel that roots, assetgraph, grunt and node-task are all basicly working on the same problems from different angles, so there might be potential for collaboration, or at least some good architectural discussions.\n. > processing the compiled HTML files to determine their dependencies (to optimize compiling)\n\nAs long as the html is valid this will work out of the box.\n\n> using it to rewrite dependencies in such a way that the paths to `.coffee` and `.stylus` files could be used directly in Jade, meaning that the user wouldn't need to even think about the location of compiled assets in the `./public` folder.\n\nThis one might be a bit more tricky. The way Assetgraph works best is by having a programmatic api, like the DOM or an AST, to match patterns that represent relations. I'm not sure how much access you have to that with Jade. Of course you could just do like we do with Less assets, don't try and model relations, but just compile it and then use the output as an asset to model relations on. We haven't focused that much on the preprocessing stage yet, since there is very little work done in defining standards for setting up relations of things that need to be preprocessed. Maybe @papandreou has some input here.\n\n> Also, if assetgraph is capable (or nearly capable) of optimizing multipage sites, it could be used for general post-compile optimizations like image optimizations & inlining, css/js compression and in-lining, HTML compression\n\nMulti page sites are supported by Assetgraph. In the command line tool you can add paths to multiple html-pages or use a minimatch pattern to glob all html-files. The default setup is to bundle static assets per page, meaning you might have to redownload bundles if there are minor differences across pages. An alternative bundling strategy is available, which tries to [bundle based on identical assets across pages](https://github.com/One-com/assetgraph/blob/master/lib/transforms/bundleRelations.js#L208-L314). However there is the caveat that the assets need to be included in the same order on the pages. That caveat is of course mitigated if these pages are all using the same basic template to include css and javascript assets.\n\nOf course you wouldn't be using the command line tool if this goes into tighter integration with the core. But the [principle is simple](https://github.com/One-com/assetgraph-builder/blob/master/bin/buildProduction#L271). Assetgraph also gives special meaning to files that are a part of this initial collection f files that the graph starts out with. They keep their name intact after static assets have been minified, bundles and renamed for far future cache expiry. So on multi page sites you really want all your public facing html-pages to be part of the graph seeding.\n. Yeah, the API documentation has not been prioritized yet. Primarily because there were some rewrites coming up that would change it. I'm pretty sure those changes are made now though and that the API is stable. There is a beginning documentation effort here: http://gofish.dk/assetgraph/api/\n\nAssetgraph was originally thought up as a build system, but we ended up finding an abstraction that has the model where assetgraph itself is just  a platform that could potentially be used as a build system. The build system itself is in assetgraph-builder.\n\nHowever an assetgraph instance can still be passed around, manipulated on the fly, queried on demand etc. So from what you've said so far I would think it covers your use case. It's true that there are some optimization things in there as well, but they're not really adding any weight or extra requirements, so I don't see your point of it being in the way.\n\nI'm pretty sure @papandreou would be very happy to hear your thoughts about what is missing or needs to be changed for assetgraph to become a candidate for inclusion into roots\n. Thanks for all the positive feedback. I'll see if I can address some of the points you raised.\n- Image optimization. The ideal goal here is to be completely independent of external binaries of the operating system. We are depending on optipng-bin and jpegtran-bin, that try to put the binaries in npm, thus making the dependency chain better. Also it should just ignore a missing binary and skip the optimization if the tools isn't available. Optional was the word I was looking for :)\n- require.js. Assetgraph doesn't depend on it. It just understands it, since it seems to be a pretty widespread dependency manager. And of course the authors use it, so it was the first thing to get in there. Other dependency managers might find their way into assetgraph as well. Bundling strategy is as of yet also an undetermined strategy for assetgraph-builder. For now it squashes everything together if the `require` is at the root level.\n- Coffeescript. There is some support for it in there. I haven't used it as I am not a big fan. Assetgraph mainly concerns itself with postprocessing of pure browser readable inputs. But that usually fits pretty well into most workflows as long as you set up preprocessors yourselt. Or in this case, roots does that.\n- Closures, scoping and exports. Sound like you want to take a look at substacks browserify and yarnify. Also a preprocessing step\n- Adding assetgraph and complexity. Ideally assetgraph could at some point replace some of the existing build flows on roots, thus balancing out the complexity or even simplifying. However assetgraph is mainly developed towards static pages or web apps, so if roots has a lot of users that use on the fly generated html from a dynamic back end, then it's probably not the best fit.\n\nI very much like your idea of using Assetgraph more low level. The whole point of it is to be a optimization tookit. And since you are building an optimization/workflow framework it fits quite well. The low level version has quite a steep learning curve and is very much geared towards tool builders, not end users, so that's why we're not trying to sell it as much :)\n\nI have also tried getting assetgraph into Yeoman. They like grunt a lot and just want plugins for it that they can preconfigure instead of them writing their own thing. So I created the grunt-reduce wrapper for assetgraph-builder for them.\n\nI'd like to help implement assetgraph, and I would of course also handle all support that may come in from end users if you point them at the assetgraph issues when they have problems with it. I don't think I'll be a regular contributer to roots just yet though. For now my primary goal is to evangelize assetgraph. So it's mostly out of self interest to get peopel to use our awesome idea. But of course that doesn't have to be all bad :) \n. We've had thoughts along the same lines. @papandreou created [assetgraph-middleware](https://github.com/papandreou/assetgraph-middleware) with exactly this purpose.\n\nAssetgraph already has stylus and coffeescript support, mostly because those where pretty easy to integrate since they are node modules.\n\nThere is no doubt that the main purpose of assetgraph has primarily been post processing, not preprocessing. One you get into the realm of preprocessing you have to configure dependencies and workflows manually with manifests, configuration etc. We're not really big fans of expanding assetgraph in that direction.\n\nThat said though, assetgraph integrates well with other preprocessors, as long as the output is supported and saved to disk in the location your web application is including it from. This seems to be the typical use case.\n. There is no jade support. I guess there might be some day. We haven't had any requests yet.\n\nI don't think there is an easy way to do dependency based continuous updates like you describe. But if I understand you correctly you want to do an actual production build with full optimizations based on file updates on disk? If so I disagree with the idea. A properly minified web application doesn't have the same assets in the output as in the input, so you can map 1:1 and just do a partial build on the assets that changed.\n\nA live updated directory like that should only serve for development, and then it should not be minified at all so development is easier.\n. Ask away :)\n\nThanks for considering this. I completely understand your decision.\n\nYou also might be interested in following tkellens node-task project. It's an attempt at formalizing some of the concepts that experience has shown to be needed in grunt. I feel that roots, assetgraph, grunt and node-task are all basicly working on the same problems from different angles, so there might be potential for collaboration, or at least some good architectural discussions.\n. > processing the compiled HTML files to determine their dependencies (to optimize compiling)\n\nAs long as the html is valid this will work out of the box.\n\n> using it to rewrite dependencies in such a way that the paths to `.coffee` and `.stylus` files could be used directly in Jade, meaning that the user wouldn't need to even think about the location of compiled assets in the `./public` folder.\n\nThis one might be a bit more tricky. The way Assetgraph works best is by having a programmatic api, like the DOM or an AST, to match patterns that represent relations. I'm not sure how much access you have to that with Jade. Of course you could just do like we do with Less assets, don't try and model relations, but just compile it and then use the output as an asset to model relations on. We haven't focused that much on the preprocessing stage yet, since there is very little work done in defining standards for setting up relations of things that need to be preprocessed. Maybe @papandreou has some input here.\n\n> Also, if assetgraph is capable (or nearly capable) of optimizing multipage sites, it could be used for general post-compile optimizations like image optimizations & inlining, css/js compression and in-lining, HTML compression\n\nMulti page sites are supported by Assetgraph. In the command line tool you can add paths to multiple html-pages or use a minimatch pattern to glob all html-files. The default setup is to bundle static assets per page, meaning you might have to redownload bundles if there are minor differences across pages. An alternative bundling strategy is available, which tries to [bundle based on identical assets across pages](https://github.com/One-com/assetgraph/blob/master/lib/transforms/bundleRelations.js#L208-L314). However there is the caveat that the assets need to be included in the same order on the pages. That caveat is of course mitigated if these pages are all using the same basic template to include css and javascript assets.\n\nOf course you wouldn't be using the command line tool if this goes into tighter integration with the core. But the [principle is simple](https://github.com/One-com/assetgraph-builder/blob/master/bin/buildProduction#L271). Assetgraph also gives special meaning to files that are a part of this initial collection f files that the graph starts out with. They keep their name intact after static assets have been minified, bundles and renamed for far future cache expiry. So on multi page sites you really want all your public facing html-pages to be part of the graph seeding.\n. Yeah, the API documentation has not been prioritized yet. Primarily because there were some rewrites coming up that would change it. I'm pretty sure those changes are made now though and that the API is stable. There is a beginning documentation effort here: http://gofish.dk/assetgraph/api/\n\nAssetgraph was originally thought up as a build system, but we ended up finding an abstraction that has the model where assetgraph itself is just  a platform that could potentially be used as a build system. The build system itself is in assetgraph-builder.\n\nHowever an assetgraph instance can still be passed around, manipulated on the fly, queried on demand etc. So from what you've said so far I would think it covers your use case. It's true that there are some optimization things in there as well, but they're not really adding any weight or extra requirements, so I don't see your point of it being in the way.\n\nI'm pretty sure @papandreou would be very happy to hear your thoughts about what is missing or needs to be changed for assetgraph to become a candidate for inclusion into roots\n. ",
    "slang800": "I'm going to reopen this because I am doing a major rewrite of the roots core and like @jenius said, assetgraph looks very useful. I think at the bare minimum, we can use it for:\n- processing the compiled HTML files to determine their dependencies (to optimize compiling)\n- or, using it to rewrite dependencies in such a way that the paths to `.coffee` and `.stylus` files could be used directly in Jade, meaning that the user wouldn't need to even think about the location of compiled assets in the `./public` folder.\n\nAlso, if assetgraph is capable (or nearly capable) of optimizing multipage sites, it could be used for general post-compile optimizations like image optimizations & inlining, css/js compression and in-lining, HTML compression... ect. Perhaps we could even use it to pretty-print HTML and other stuff if it provides a easy to work with representation of the HTML page and its assets. Then we can disable those in-language features like image-inlining that stylus has, or the compression that coffeescript offers, and just use asset-graph for all of that. We could even fork the compilers of some of the more popular languages and gut those features out.\n\nI am not interested in having asset-graph itself do any sort of compilation because I think that is way outside of the scope of that project. Instead, I think that roots should provide a more usable interface for assetgraph, and a way to manage all the compilation, that comes before assetgraph.\n. thanks for the explanation... and wow... just wow. I finished reading your [presentation](http://gofish.dk/assetgraph.pdf) ... it's just so beautiful - exactly the kind of abstraction that roots needs\n. Well, I've been looking at assetgraph for a bit, though the documentation in the readme appears to be outdated and the documentation everywhere else is very sparse.\n\nAny chance you could work on fixing that up?\n. Ok, the more I look at this API, the more I think I should just rewrite it. It seems like AssetGraph is meant for a sequence of optimization-related tasks to be performed. Whereas roots needs an AssetGraph that can be passed around and hold everything... also there are a lot of features that we don't need.\n\n**So: the plan going forward -**\nI'm just going to start rewriting it, and if it turns out that I just totally misunderstood the AG API, then I'll happily ditch that project and use the main AG repo. It is not without some remorse that I make this decision, because I really hate it when I can't use an existing solution, or at least just build on top of it. However, I really don't think that it's feasible to reorganize the existing API. At least I _will_ be able to use a lot of the code from the original repo... just a lot of the underlying structure will need to be changed\n. Yeah, I've been reading that one for a while but it's far from complete. It is starting to make more sense, and I'm leaning away from writing my own as I learn more. And yeah, if @papandreou is willing to listen to my complaints then that'd be great!\n\nThe issue I was having before is if I initialize an instance of asset graph and run something it doesn't run on its own... I think I'm supposed to be calling `.run()`, but here's what I'd expect to be able to do:\n\n``` javascript\nassetGraph = new AssetGraph();\nassetGraph.loadAssets('*.html');\nassetGraph.findAssets().length !== 0; // but this fails because it's empty :(\n```\n\nNow I think I know how I'm really supposed to do it, but calling `run()` every time is still kinda awkward. \n. Sorry, I assumed that these were separate install scripts rather than aliases to their npm equilivants.\n\nNevertheless, wouldn't it be just as easy for users that are not familiar with npm to learn how to use those npm commands? Remembering your commands would be just as difficult as remembering those npm commands. Also, by learning those npm commands, they will know how to install/update every other node package (which is a lot more useful than just learning the commands for one program). And for users of npm, having those other commands is likely to cause the same confusion about their purpose that I originally had.\n\nBy removing those aliases, you will also have less code to maintain (even if it is a small amount less), and fewer questions related to installation (because users will know to consult the npm documentation if npm doesn't work, rather than ask roots why it isn't working). Finally, it is not semantically correct to use a roots command to perform updates because roots is not a package management tool... updates is just not roots's job.\n. Rather than making our own roots template registry, I wonder if we could piggy-back off of bower or something.\n. Also, I would be interested in \"highly encouraging\" but not totally requiring the use of a standard project structure. I found that loosing this freedom when I started using roots was actually really nice... now all my front-end design projects share the same structure... I don't even need to think about where to look for stuff because it's all in standard locations.\n\nOn a larger scale, having standard locations for files can help developers work with projects that they have never even touched before... this is one of the very few things I like about WordPress: I can go to any WordPress theme and immediately know where to go to change what I want... I think that there is a similar standard project structure for Rails too, but I've never been a Ruby fan.\n\nTo quote \"Getting Real\" by 37signals:\n\n```\nSome people argue software should be agnostic. They say it\u2019s ar-\nrogant for developers to limit features or ignore feature requests.\nThey say software should always be as flexible as possible.\n\nWe think that\u2019s bullshit. The best software has a vision. The\nbest software takes sides. When someone uses software, they\u2019re\nnot just looking for features, they\u2019re looking for an approach.\nThey\u2019re looking for a vision. Decide what your vision is and run\nwith it.\n\nAnd remember, if they don\u2019t like your vision there are plenty\nof other visions out there for people. Don\u2019t go chasing people\nyou\u2019ll never make happy.\n```\n. Yes... I would really like to establish similar conventions around require.js that would allow us to automatically generate require.js configs. However, component(1) is being built on common.js, so I'm not really sure if we should go with common.js or work to get it removed from component(1).\n. Oh! wait... I read the version of npm... I actually don't have the latest version of node (despite having just updated all my packages 2 minutes ago).\n. also, I get this error:\n\n``` bash\n$ roots compile\ncompiling project... \nminifying & compressing...\ncompile error\nSyntaxError: Unexpected token :\nPlease check the validity of the CSS block starting from the line #76\n```\n\n...but it doesn't tell me the file that the error occurred in, just the line\n. I actually found that the error mentioned in the first post came from a jade file... next I'm checking if the bad error came from the jade compiler or was cut down to one line by roots\n. well, I found the file where the error was happening and fixed it, but now I can't reproduce the bad error messages it was giving me... all the errors I am getting now tell the line number, file, and explanation. So I'll close this until I can find it again...\n. I'm still getting errors without filename & line number\n\n```\n$ roots watch\ncompiling... \n\n\n------------ ERROR ------------\n\nSyntaxError: Unexpected identifier\n\ndone!\nserver started on port 1111\n\n```\n. hmm... you could installing bootstrap-stylus into a project... that should do it (bower install bootstrap-stylus)\n. I've still been seeing it in roots `1.3.6-4`, but I'll close this because it's a really vague issue and it'll probably be closed once we switch to transformers.\n. For omitting `;`'s, I am highly opposed to this. ASI is useful because it makes a lot of poorly written code function (so webpages don't break). However, for a serious JS project, I dislike the idea of relying on it. For the extra carefulness that it requires (both by you and other developers who may not have studied JS's ASI), it does not seem to be worth the 50-100 characters that are saved.\n\nEven more importantly, community projects need to have an agreement on some basic coding style and since the vast majority of JS programmers prefer using `;`'s excessively, it is probably better to side with the majority unless there is a truly huge drawback from doing so.\n. For the switch to `===` from `==`, it is not that \"the double equals can be used safely\" in those instances... `===` should be used by default because it is faster (doesn't require type conversion) and because it has fewer special rules which can cause bugs.\n\n`==` should only be used when type conversion is required.\n. thanks for pulling this in!\nbtw, I did some tests on using `===` for checking for `undefined`:\n\n``` js\nfoo = undefined;\nconsole.log(foo === undefined); // true\n\nbar = null;\nconsole.log(bar === undefined); // false\nconsole.log(bar == undefined); // true\n```\n\nHowever, there is an argument against using `foo === undefined` since undefined could be redefined which would cause it to fail. For that reason, `typeof foo == \"undefined\"` seems to be the standard. So overall, it shouldn't break anything, but it looks like the `typeof` method would be better since that's what most people are used to using.\n\nIMO, `foo?` is much easier :)\n. This is now moved to #181 ... discussion should be continued there.\n. I was thinking `assets/components`\n. Sure, I'll PR it in & thanks :)\n\nAlso, do you think the command should be changed too for the same reason? ... maybe to something like `roots dep <bower command>` (\"dep\" being short for \"dependency\", which would be awful to type all the time). Using `roots component <bower command>` would make sense too, but it's a little long.\n. actually, this could cause an issue with RequireJS since it assumes you keep all your JavaScript files in a single directory in the project... not sure how to deal with this.\n\nA symlink would be a really nice way around this, but if I remember correctly, windows chokes on those.\n. Eh, we're probably better off just checking for updates when the user wants to check for updates. I'd be kinda suspicious if any tool I'm using starts sending network requests without me asking it to.\n\nAlso, this looks like feature creep because npm is supposed to be managing updates, not the packages themselves (because npm is actually good at it). If the user wants to check for updates more often, they can just run `npm -g update` on a cron job.\n. It's not just that it's invasive, it's a functionality that roots shouldn't have, aka: [feature creep](http://www.codinghorror.com/blog/2007/10/are-features-the-enemy.html).\n\nAlso, solving the issue of npm not automatically checking for updates is outside the scope of this project. Roots is a development tool, not a package manager. If you want to check for updates to packages, that should be npm's job because npm _is_ a package manager... Mixing in package management features into a development tool will just add unneeded complexity.\n\nFurthermore, unexpected functionality like this may interfere with npm in the future. Imagine if npm decides to add a feature that automatically checks for updates on a daily basis. Now, not only is root's home-brew-update-checker useless, but it is sending unneeded requests. This is a fairly small annoyance, but demonstrates why unexpected features can be bad.\n\nWhat we _should_ do is make a tool that automatically checks for npm package updates, like software center does for packages on Ubuntu, or Google Play does on Android (basically `npm update` on a cron job)... Or at _least_ use an existing solution like [update_notifier](https://npmjs.org/package/update-notifier).\n. huzza! thanks for fixing that! :D\n. And then after it's configurable we can make the default project template use `.public` as the name?\n. Ah, I wasn't sure if you meant that you're not ready to change it because it's not configurable yet and there are still some things that are hard-coded with the `public` directory convention, or if you meant you're not certain about the overall idea.\n\n... Anyway, I don't think that changing the name of the directory would conflict with existing projects in any way that switching to a configurable directory structure wouldn't ... so if we time those 2 changes at the same major release, people would need to modify their existing projects anyway to add the configurable project structure, and could just specify their public directory as `public` rather than `.public` ... it would just mean that all new projects would use `.public` as their default directory\n. Moment.js is probably not in `http://localhost:1111/components/moment.js` ... it would probably be in `http://localhost:1111/components/moment/moment.js` or something like that.\n.  switch `\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"` to `\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min\"` ... require.js adds the `.js` part for you.\n. heck yes! +100\n\nperhaps we could start with something like #97\n. I've never seen a need for this... I just keep any config that I need on the client side in `assets/js/main.coffee`. @kylemac - Could you provide a use-case for writing server-side variables to the client that isn't satisfied by the manual approach jenius gave (or perhaps a modification of it that just uses json encoding to sanitize the variables)?\n. That could be useful. It's far from critical (especially since you can do it manually like jenius said), but it's a \"nice to have\" and I can think of a few places I would use that.\n. I actually use bower a lot, and cdnjs has a pretty different purpose. Perhaps if we created a separate api for managing an array of dependency urls and then outputting them into jade, require.js, or whatever else people are using to load their scripts.\n\n... Or we could build functionality like that into bower, like this issue asks for: bower/bower/issues/19\n\nOh! ... related to that, it would be really cool if templates could access a list of the packages that are installed via bower, and their locations.\n. Maybe you could combine them by exposing a variable in the templating that holds all the dependencies that are installed, and their paths.\n\nsomething like this:\n\n``` json\n{\n    \"jquery\": {\n        \"url\": \"//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js\",\n        \"requirejs_path\": \"//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min\"\n    },\n    \"underscore\": {\n        \"url\": \"/assets/components/underscore/underscore.js\",\n        \"requirejs_url\": \"../components/underscore/underscore\",\n        \"requirejs_shim\": {\n            \"exports\": '_'\n        }\n    },\n    \"backbone\": {\n        \"url\": \"/assets/components/backbone/backbone.js\",\n        \"requirejs_url\": \"../components/backbone/backbone\",\n        \"requirejs_shim\": {\n            \"deps\": ['underscore', 'jquery'],\n            \"exports\": 'Backbone'\n        }\n    }   \n}\n```\n\n`url` could be either a cdn url or a url to point to the lib on the same server. It could even be switched between using cdn versions and local versions depending on whether you're doing development offline, or if you have an internet connection.\n`requirejs_url` would be the url format that requirejs uses\n'requirejs_shim' would be an object holding the shim if the original library isn't built on requirejs.\n\nThis could be used to either output script tags, or output the requirejs config, all depending on the packages that you installed.\n\nMore advanced stuff like version numbers and whatnot could also be made available by parsing component.json.\n. It would all be parsed from component.json in the repos of the libraries you install... or nearly all of it, some would be based on environment variables (like if preference is given to CDNs or local copies)\n. oh, wait... you're just talking about using cdnjs to download libraries into the local development environment? not providing cdnjs links so the compiled webpage can use the CDN?\n\nisn't this just replicating what bower already does?\n. doesn't underscore have anything that can deal with this?\n. I kinda thought that GH _was_ that community... I just watch this repo to see when updates or issues are posted. Maybe a mailing list for updates would be good, but for general discussion, keeping it on GH is probably best, so problems & solutions are more clearly documented (which is not very easy to do with a chat room or even a mailing list).\n. I've been working with Jade (rewriting it in coffee), so I can say for certain that Jade can compile `.jade` files into JS functions on its own... there is no need for `tmpl-precompile` because `parse()` from [jade/lib/jade.js](https://github.com/visionmedia/jade/blob/master/lib/jade.js) does exactly that\n. What exactly do you mean by \"jade's abilities to do this are not enough\"? ... what exactly is it missing?\n\nThat runtime file is just a couple of functions... it's like less than 200 lines, if I remember correctly.\n\nAlso, you can specify not to add the runtime file, and just add it manually to `templates.js` after all the files in the templates folder have been processed.\n. Ok, do you want me to just PR this into the main roots repo? ... it hardly sounds like it would be worth writing a separate tool to do this.\n. I actually really love the project structure that roots gives me, so I don't think that should be removed entirely, but moving the project structure out of the core of roots into something that is specified in the default `app.coffee` file would be great... That way you can change it if you want, but the default is still very nice.\n. rebased... all tests still pass on my machine despite it failing on travis\n. ready to merge\n. yep\n. ugh, I rebased again, but travis is still failing to get the deps... it does pass all 25 tests on my machine, though.\n. wait... these failed the test suite! why was this merged?\n. actually, the test suite passes for this... the test on Travis shouldn't have failed\n. +1 for `content`\n. I'm pretty sure that's an issue on all platforms... it is for me on Ubuntu 13.04\n. Why do we need to find the Stylus's @imports or Jade's partials? Those would get inlined into the CSS/HTML and we wouldn't need to compile them anyway. All we need to do is find out what files the compiled HTML/CSS/JS needs. So this is what we do:\n1. Compile the views that aren't partials (everything in `./views` that doesn't start with a `_`)\n2. Search the HTML that comes out for the URLs of any CSS stylesheets that it relies on.\n3. Use those URLs to find the files that are supposed to compile into said CSS stylesheets.\n\nexample:\nif we find `/css/main.css`, we then see if `/assets/css/main.css` exists\nif it does, we copy it over to `./public/`\nif not search for `/css/main.styl`, if that exists then we compile it into `./public/`\nif a `.styl` file isn't there, we search for `.less` and so on for everything else that can compile to css\nif we just can't find anything, we throw a `Can't Find Ur Dang Source` exception\n\n...\n\nif we find something like `www.mycdn.com/script.js` then that's not our problem. But, if we wanna be _really fancy_, we could download this file to a tmp folder, then rewrite the URL to point to it to speed up downloads in development.\n1. take those compiled CSS style sheets and search through them for anything that the CSS expects to `@import`.\n2. everything we found in step 4 gets sent to step 3\n3. go back to step 2 and repeat for JS\n\n...what this doesn't work for: _dynamically generated requirements_ ... like if a JS lib adds a style tag after the page load. personally I think that's stupid, but to support it, we could either have people explicitly declare extra files that need to get compiled, or switch to a different way of searching for dependencies...\n\n\"like what\" you ask? well, what if we connect to the HTTP server and when a request is about to turn into a 404, we take the URL that's requested and check if there's a file we could compile to make it not 404. this has some disadvantages... like:\n- you need to open up your webapp and do everything you need to make all the dependencies get requested... maybe we could automate this with PhantomJS or something, but it sounds like a pain.\n- it would prolly be pretty slow, but maybe we could setup a cache of compiled files\n- it just sounds complicated\n- we can't do cool URL rewriting like i mentioned above\n\nPS: if we do the 1st approach, we could prolly jack some of the functionality from a webbrowser, cause, if you think about it, that's exactly what browsers do when they get a html page (minus the compiling part)\n. Ugh... :facepalm: _now_ I remember why we needed that.\n\nHere's a rather random idea: what if we subclassed the instance of `fs` that the <insert language here> compiler uses, so that we could record all the files that the compiler reads from. Then we take that list, remove everything that isn't in the project folder, and just watch those files... not sure how to do this off the top of my head, but it seems like a pretty simple solution, right?\n. nah, we wouldn't fork the compiler... that would be horrible if we want to support all the crazy preprocessors people use. we could just make sure that when the compiler does `require('fs')` that resolves to our version of fs, that has a tiny logging function added into the read functions.... maybe that's what you mean by \"duck punch\"? ... idk\n. ah... btw, i think i found a module that does what i described: https://npmjs.org/package/inj\n. oh, and as for the data-structure, we might want something like this to make searching easier:\n\n```\nasset_tree = {\n    \"./assets/css/_partial.styl\": [\n        \"./assets/css/main.styl\",\n        \"./assets/css/home.styl\"\n    ],\n    \"./assets/js/derp.js\": [\n        \"./assets/js/main.coffee\"\n    ],\n    \"./assets/js/herp.coffee\": [\n        \"./assets/js/main.coffee\"\n    ],\n}\n```\n\nso that means that when `./assets/js/main.coffee` was compiled, it needed to read `./assets/js/herp.coffee` & `./assets/js/derp.js`. So whenever a file is modified, we just get `asset_tree[\"name of the file we modified\"]` and iterate over all the files that rely on it, compiling each one.\n. No, if we are going with CJS then `./assets/js/derp.js` being read while compiling `main.coffee` would have happened because `main.coffee` did `require(\"derp.js\")`... and since we'd be concatenating all the deps, we'd need to recompile `main.coffee` so the updated `derp.js` is in it.\n. We should be able to get the root by just reading the `cd`, so I don't think that needs to be in it. And why does `'views/index.jade'` need to be an object? If the only key is `deps` then it's kinda pointless to add another level to the object. \n. It is good to know the root that it was generated from, but does that really belong in the same object? Or better yet, could we just make all the file paths explicit?\n\nAs for making it more extensible - since this is just a mapping between files and dependents, whatever else we might add to it probably belongs in a different object... generally, keeping objects flat is better than making them deeply nested.\n\n...but I'm probably getting too specific on how this should be implemented... I'll try to build this into the transformers branch and see what it looks like.\n. I think there are 2 components to the asset graph.\n1. parsing the compiled HTML & CSS to find the files that they rely on (this we should use regex or a AST for)\n2. finding what files the files written in higher-level languages rely on... for this one, we cannot just monkey patch every compiler (there are way too many languages for that)... we need some way that works with every compiler (or pretty close to that).\n. err... no for point 2 we can't use regexes either because we would need to make a new regex for every single language. Also, parsing a templating language that may contain ANY content with a regex is a horrible idea... imagine if index.jade has a stylus code example in it... it would be far too easy to break. That's why I suggested extending `fs`. \n. no, that stuff would show up in the compiled CSS/HTML (point 1)\n. if `@import` was in a `:stylus` block in your jade it would _need_ to detect that.\n. proof of concept for duck punching the compilers... all of them (in like 50 SLOC, tops :smile:):\n![image](https://f.cloud.github.com/assets/1049204/700854/aa3766dc-dd5f-11e2-8c23-111340605e1f.png)\n\nSome of these show incorrect filehelpers for dep... like the line that says: `/usrdata/web/roots/test/basic/assets/css/example.styl /usrdata/web/roots/test/basic/views/index.jade`. This doesn't mean that index.jade depends on example.style... it's just because \"fh\" didn't get cleared out after index.jade was finished compiling... after I reorganize the way we keep track of files, this will be fixed.\n\nAlso, at the bottom you'll see that main.js is written 3 times... this is a related issue, since I kinda just pulled `fh` into the outermost scope for the demo.\n\nBut it does show that we can use `fs` to see what files get read by the compilers, without knowing anything about the compilers! ... making it pretty much language agnostic.\n. no... this will still show us all the dependents of each file... just like running the file through those language specific parsers would. And no, I haven't worked on it beyond a functional prototype because adding it with the way roots is currently organized would make a mess, so I'm working on restructuring that first.\n. Yeah... that's the point: it uses compilation which is not only something that we already do (meaning we wouldn't need to run a separate static analysis tool) but it is something that is already written for every language we use (and many we don't, but could)... So we also don't need to write static analysis tools for each and every language we want  to support\n. An update on the progress of this:\n\nI started poking around the AssetGraph codebase again and I pretty much understand it. The way it's organized is really nice, but since it's written in JS the extensive use of classes and extenders really clutters up the code. So, after making some fixes and PRing them to the main project, I started converting the major components in coffeescript so we can use a normal class syntax (@HHSnopek is helping too). Right now, that is over here: https://github.com/slang800/assetgraph/tree/coffee-convert-assets\n\nOnce that conversion is finished, I'll start integrating AssetGraph into roots. I think I'll be building this on the current master, since v3 is far from finished and still has a broken history.\n. The `type` option of `fs.symlink` is only used on windows, the function works on all platforms, it just ignores the `type` option on mac/linux.\n\nAlso, I'm not saying that it would break windows, it would just not be as optimized on windows since it doesn't know how to make symlinks properly.\n. You can't get linux?! Oh god... that's so sad! Usually the ISOs are only 700-800M, but if that's too much I'll gladly send you a Ubuntu DVD. What's your postal address and CPU architecture?\n\nAs for the linux/mac only optimization, roots would still be \"accessible\" to windows users, it just would be at the same speed that it is right now because the platform can't do proper symlinks. And I think that we're also trying to do the caching idea, but we need #149 to be implemented first... But both of those optimizations can work together, so one is not a replacement for the other.\n. exactly\n\nOn Tue, Jun 11, 2013 at 4:41 PM, Jeff Escalante notifications@github.comwrote:\n\n> So I assume you meant that this would only happen on watch since assets\n> would definitely have to be copied on compile -- no?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/150#issuecomment-19294377\n> .\n. hmm... this issue came up when I used any `roots js` command. I'm running roots 1.3.6-4 and bower 0.9.2 is installed under that... not really sure what else... the commands fail to exit even on a new roots project\n. hmm... actually, now i can't reproduce it either... maybe I updated roots or something... odd\n. Lol, sorry... axis doesn't have drop-up menus. Actually, most of the style sheets for this project will be using axis, but I need to get some of the basic components from bootstrap.\n. I think you've seen too many \"default bootstrap\" sites. Great designers don't leave that vanilla bootstrap look on finished sites, it's just [meant to be] used as a platform to build on - especially since it provides \"components\" (which are very useful since web-components/x-tags are still very beta). Also, because it is modular and open source all the extra crap that comes with it can be left out.\n\nBootstrap has gotten a bad image because people misuse it, but it is still a powerful platform that designers can use... the idiots that use it are just much more obvious.\n\nOh, and lastly, Bootstrap is not a replacement for axis... they serve different purposes. Bootstrap provides high-level components while Axis provides low-level helpers/functions for writing Stylus.\n. Hmm... true. Perhaps we should provide an alternative... like integration with [x-tags](http://ui.x-tags.org/) to make installation easier with something similar to bower.\n\nPS: we should probably move this conversation over to a new issue since we've digressed pretty far from the original topic.\n. I don't think that L8D is talking about #110 ... I think `(?:s)?he's` saying \"If a project was not created using the same  version of roots that is running, there should be a warning to tell them that the project might be broken... and give them the steps they might need to do to upgrade their project\" ... that way we don't have to worry about project breaking changes, which is why I hereby +1 this.\n\nAlso, by knowing the version of roots that it was made with, we could even provide exact instructions to upgrade projects, and specify which upgrades don't have any project breaking changes (for which we could automatically change the comment in `app.coffee` to the latest version).\n\nThat being said, I'm not really sure why L8D closed this.\n\nPS: Almost nobody checks the version of roots that they're using for a project... I have like 30 roots based projects, if one of them was made with an old version of roots, I have long since forgotten, and I'll probably end up sinking 30 minutes in debugging when I go back to one that broke due to a roots upgrade.\n. This would also address your comment about making a mailing list in #145\n. Actually, we could probably just make one of the exports be `roots_version`, that way we wouldn't even need to search the file itself for that comment.\n\nAlso, we should only show the warning if it is a major version bump... like if the project was made with roots `1.0.10` but you're running `1.0.9` there shouldn't be a warning because there aren't any breaking changes between those versions. But if that project was instead made for roots `2.0.0`, there should be a warning because there are major feature changes.\n. now that I think about it, might we want to just nix snockets entirely? it is pretty much replaced by requirejs & building with modules is much cleaner than just concatenating files anyways. \n. +1 for \"combine it all into one file\"\n\nActually, what if we just use source maps to map the concat'ed file back to the original files. Then `watch` could just do the same thing that `compile` does (and we could deprecate `compile`). In fact, we could ditch RJS entirely in favor of CJS (since we're already using a build tool). Then we wouldn't have to write those ugly RJS wrappers.\n\n...After reading http://tomdale.net/2012/01/amd-is-not-the-answer/ and talking with the guys from component (https://github.com/component/builder.js/issues/103) I've totally changed my mind about RJS.\n. Source maps work in Chrome and prolly in Firefox... not sure about other browsers, but FF & Chrome are the only browsers with decent dev tools anyway (Firebug and Chrome's fork of Firebug).\n\nAnd not sure about the module-loader / combiner tool, but https://github.com/component/builder.js has something to do it.\n. Builder is a builder for building components... so yeah, it's pretty specific to components. What I would like to do is add a template for components and use something like https://npmjs.org/package/webmake to do all the CJS stuff... then if that turns out to be better than RJS, we would just switch the default template to use CJS.\n. rebasing this on v2 would be pretty hard, so i started over with a new branch\n. eh... but that makes conflicts more likely. also, for anyone who is familiar with node, `exports` just makes sense\n. How would this not make conflicts more likely? It makes all the names that used to be used in `exports` special in the local namespace, rather than just having `exports` be special (which people are used to). right?\n. but what about when exports is not the only variable in app.coffee? like here: https://github.com/slang800/editor/blob/master/app.coffee\n\n...in that, app.coffee is also used for starting up a http server on port 3000 to provide the project with an RCP\n. Hmm... didn't actually know about that `server.coffee` thing, thanks! Anyway, if we're not supposed to put other functions in app.coffee, then why not just nix it entirely and use a config file instead? Afterall, config files are made to hold configurations while modules are made to hold functions.\n. Yep, JS is supported out of the box... maybe we should make that more obvious in the docs, and add a [project template](https://github.com/jenius/roots/tree/master/templates) for a js/stylus/jade default stack.\n. Yeah, I'll take a look at it, thanks. As for twitter - I do, but only for playing with their API. The best way to contact me is via email or chat (slang800@gmail.com). Also, I am subscribed to all notifications for this repo.\n. perhaps, we should take some of the smaller, more polished changes out of this PR and ship them as roots v1.5 first, then come back to the larger changes after a rebase.... this PR is pretty huge right now.\n. Already made & merged the v1.5 branch... that took care of most of the small changes that this made, wanna split another chunk of this into a v1.75 branch?\n. that's strange... i expected this to be a really small PR... all I did is rebase v2 on the latest head... must've rewritten all the hashes because of the rebase :(\n. i'll close this and just push the rebase to v2 manually\n. any feedback on this?\n. sure! that should be pretty easy once this is merged in... it'll cut the number of commits in the v2 branch in half\n. Good point... I'll try testing it out later today to see if I get the same issues. However, given it's popularity, I would assume that those issues have been fixed.\n. as a temporary fix, I got component to compile automatically after roots finishes here: https://github.com/slang800/chazsouthard.com/commit/aa921e09b7316609aa2ef95b8b69f635c1dbedc2\n\n...decided to use it when building http://chazsouthard.com\n. oh, yeah... I don't think it can do that. maybe we should use https://github.com/substack/node-optimist instead \n. as part of this, we should make the `--debug` flag work, so it sets `opts.debug` in `config_parser`\n. nice refactor, but this issue isn't totally closed... the `--debug` flag doesn't work. also, since I don't really feel like opening up a new issue just for this: in `roots -h` the `js` commands need to be renamed to `pkg`\n. Great! the idea is that you don't want to allow versions older than the one you tested with (like `0.1.x` would), but you do want to allow small patches.\n. Yeah, if they already have an older version already installed globally or from another package that we depend on (see: https://npmjs.org/doc/install.html#ALGORITHM)... I don't think this would happen often, but it's better to be safe than to risk it.\n. dammit... this was supposed to be a PR for v1.5 ... since GH won't let me edit the PR, I guess I'll just rebase it after v1.5 gets pulled into master... then it won't have the extra commits. please delay pulling this one till it gets rebased\n. Yeah, I know I can edit it... I just didn't want to leave a messed up PR hanging around (since github doesn't let you delete them)\n. true... it isn't... that's why they have that `@css {}` syntax... but that doesn't really solve your problem. What we really need is a clear way to pass configuration settings to the compilers... i'll try to look at this for the add-transformers branch\n. No, I think he wants to have the CSS files concat'ed\n\nAnd, yes: that's exactly what I was talking about... I was just planning on doing it in add-translators because each compiler seems to offer a slightly different way to pass options, so translators sorta normalizes those differences.\n. it's pretty close, but `roots watch` serves from the public directory and compiles everything\n. whoo! thanks @jenius!\n. maybe we could just PR a `git clone` cli wrapper into https://github.com/sentientwaffle/gift, rather than redoing all that work, and making yet another git cli wrapper.\n. it looks like gift now has a clone method, btw\n. ehhh... this really shouldn't be part of roots. maybe we could just PR a `git clone` cli wrapper into https://github.com/sentientwaffle/gift and then use that\n. actually, according to https://github.com/nodegit/nodegit/issues/50, we could use https://github.com/faceleg/git-basic ... that could be worth looking at\n. +1 for node-gitteh\n\nyeah... now after looking through faceleg/git-basic that looks like crap. sorry for posting that w/out more review.\n\nand I don't mean that it shouldn't be a part of roots in the future, I mean this PR should be changed to remove it and put in in a separate lib now.\n. or just one link saying all the docs are on roots.cx\n. Yeah... I've just got a few errors left & then I'm gonna take a stab at part of the asset graph idea\n. Oh, yeah... the asset graph would be a few PRs... I'm just talking about a part of the compiler that would help with asset-graph\n. Ok, the only error that's left is snockets not working. So, I can just remove that from the tests, and we can drop support for it entirely, or I can write a transformer for it... the latter is probably more work.\n\nPersonally, I don't use snockets at all, so I'm not sure how useful it is.\n. Yeah, I think that CJS will replace this (and more), but since that's not ready, I'm not sure if we should get rid of snockets... If nobody is using it (like if people are just using RJS) then we can just get rid of it, but if have no data on roots UX... so I'll leave that call up to you.\n. Fixed a nasty little bug in transformers (which is now moved over to the roots-dev group). Now the thing with snockets really is the only test that's failing...\n\nAny decision on whether or not we should remove snockets?\n. snockets is added back & this seems stable\n. hmm... reorganizing the history sounds pretty hard... want me to just squash it all down into one commit?\n. whoo... history is rewritten\n. This code doesn't change any functionality, so it shouldn't add any tests. I do agree that we need more test cases, but this PR is just about refactoring and using transformers rather than our own ways of interfacing with compilers.\n. actually, transformers is well tested... it has a couple hundred test cases, which is part of why i choose it. what we are missing is integration testing, which i'm working on in asset-graph\n. so... ready to merge?\n. rebased this so it's ready to go\n. commit messages are fixed!\n. ugh... I noticed the title thing by the way that github displays it, but never realized that was a universal sort of thing. thanks for the explanation. i'll go fix them again\n. fixed the commit messages again, and added another part to this PR to close #204\n. Has anyone actually made plugins? ... I know that the feature has existed, but I've never actually seen it used.\n. ugh... yeah, I guess. Any idea on how we can avoid a breaking change without making the plugin api into a total mess?\n. That would be a great idea if the function was the part of the API that we are changing... the function that takes the parameters is the part that the user can define, it's the _caller_ that we are changing. If we want to maintain backwards compatibility, we would need the caller to call the compile function differently if it doesn't have an `options` param... and I don't know a good way to do that\n. hmm... or we could just make this part of the next release\n. @samccone \n\n> That would be a great idea if the function was the part of the API that we are changing... the function that takes the parameters is the part that the user can define, it's the caller that we are changing. If we want to maintain backwards compatibility, we would need the caller to call the compile function differently if it doesn't have an options param... and I don't know a good way to do that\n\nSo that bit of code would have to go inside of the plugins that we are trying to maintain backwards compatibility with.\n. hmm... well if we want a bigger change to bump the version for, I was playing around with a way to reorganize the adapters over in asset-graph: https://github.com/jenius/roots/commit/2981bce91af095565df7fa8a93a22acbd135193f :wink: \n. I added a few more commits that bring this a little closer to the organization in asset-graph (without breaking it)\n. yep... though i think i gotta rebase it\n. @jenius - I'm having a hell of a time re-basing this on top of the most recent commits because several of the files were totally rewritten as classes... could we just merge this and then re-implement those commits on this PR?\n. excellent! thanks!\n\nOn Fri, Aug 9, 2013 at 11:26 PM, Jeff Escalante notifications@github.comwrote:\n\n> Ok, I'll pull the branch down this weekend and give it a solid run-through.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/pull/181#issuecomment-22433878\n> .\n. I'll take a look at those issues. As for it being a single PR, we could just merge the first chunk of commits and then work on the next batch in another PR\n. Great! ... I kinda prefer underscores too, mostly from working with python... though since _all_ the native js functions are named with camelCase, I try to remember to use that.\n. Yeah, I've seen that same idea that it will reduce contributions. However, I think that:\n- Since this project is aimed at users of CoffeeScript, the vast majority of contributors will be (and currently are) users of CoffeeScript.\n- CoffeeScript is hardly a different language from JS, and thus requires very little learning to be able to program with it... So little that it will not be a barrier to contributing. To quote raganwald's essay, [CoffeeScript is not a language worth learning](https://github.com/raganwald/homoiconic/blob/master/2011/12/jargon.md):\n  \n  > If JavaScript was English, CoffeeScript wouldn't be another language like French, it wouldn't be a dialect like Jamaican Patois, it would be technical jargon like the conversation one programmer might have with another.\n\nAnd thank you for pointing that out, it is something worth considering.\n. I was actually hoping to make use of classes more anyway... though if we're using modules, where each file exports its functions, wouldn't this not matter anyway? ... I don't think I've seen anywhere where this would be an issue, unless I'm totally misunderstanding you.\n. great :D\n. No, it won't require a compile for each file. In fact, we won't even touch files that are not used in the HTML/CSS once asset graph is finished. It just watches while files that are needed are compiled, which is much faster than having a separate parse step.\n. But those files would need to be compiled anyway, so there is **~0** added computation time. Whereas yours needs to parse over all the files and then go back and compile them.\n\nAnd for detecting fonts & images, any static assets not used by the compiler will be detected in the HTML/CSS output. This way we only need to be able to search 2 very well supported languages, rather than making and maintaining parsers for atpl, coffeecup, dot, dust, eco, ect, ejs, haml, haml-coffee, handlebars, hogan, jade, jazz, jqtpl, JUST, liquor, mustache, QEJS, swig, templayed, toffee, underscore, walrus, whiskers, less, stylus and sass (to name a few).\n. true, but the _internal representation_ would be an array of `ignore_patterns`, generated from `ignore_files` & `ignore_folders`\n. how would that limit flexibility? we'd just be matching the patterns against filepaths \n. if we were just ignoring a tools folder, the internal representation would be a pattern like `/tools/**`, right?\n. That's odd... that is one of the first unit tests I added to this branch & it worked perfectly. Maybe it's because I didn't use readdirp for it... just minimatch... or because I went with your suggestion to represent files as being relative to the working dir... idk.\n\nAnyway, now that that's resolved, using an array of patterns should be fine, for the internal representation, eh?\n. I don't think that there is any way that this could strip functionality, since it matches against file paths. Can you come up with a use-case that this doesn't satisfy?\n. But people wouldn't need to learn minimatch because the patterns are only an _internal_ representation... the config would still let them ignore by files and folders.\n\nMatching folders with the same name could be an issue, but since we'll be deprecating this when we have asset-graph working, it shouldn't be a big one.\n. Well, I ended up doing a ton of reorganizing of roots into 3 main classes\n- Asset: represents a single file and deals with file watching, and compiling\n- Project: this represents the current roots project, and holds a bunch of configuration stuff\n- Print: a small class that handles printing to the console\n\nSo far, I am really liking this way of organizing, but it includes so many changes that I'm probably going to have to go back to the transformers branch and slowly apply the project structure used here, without breaking roots, like it is in this branch.\n\n...any feedback on how this is organized?\n. Sounds good, have fun on vacation :)\n. The discussion and code here has influenced the transformers branch a lot, but the transformers branch has surpassed this one, and a lot of this was just experimental restructuring. So imma close this PR and start a new asset-graph branch that will hopefully actually get around to implementing asset-graph.\n\nOh, btw, I have a copy of the code here saved locally in case there was something useful in this, but I deleted the branch to reduce the clutter\n. So am I! & Thanks!\n\nBtw, what's your other project?\n. Cool\n\nOh, also I should probably mention that I'm going to college in like a week or so. So I have no idea how it will influence my level of contribution to roots. It could either vastly reduce the amount of time I can spend on it, or actually having a schedule that aligns with the movement of the sun (rather than 40-hour days and 4.2 day weeks) could totally help me focus... idk.\n\nThough, since I've spent the last 4-ish years working with professional software developers like you, I don't think that introductory programming classes for my Software Engineering degree are going to be very time consuming or challenging. So after the inital shock of college wears off, I think I'll have plenty of time.\n. Wow, that's actually incredibly tempting... Carrot looks like a fantastic company and is certainly somewhere I'd like to work. But, while I know that I can get a job right now without a degree, I am worried that that might not be the case 10 or 20 years from now (which is actually the exact problem that my dad is having). Perhaps I'm biased by the  availability heuristic, but I think I should at least try college out. Also, the debt thing isn't a huge issue (I'm getting around 42k in scholarships) it's just the amount of time that I need to put into it.\n\nAs for my degree, it would actually be pretty fun to get a degree like Cognitive Science or EE, but since I am ultimately going to be going into some software-related field, I'd like a degree that says I'm good at software... I am more interested in college for the certification than the experience*, which is why I chose a college that focuses on engineering, not general education.\n\nAnd I actually might start looking for a job, but it would need to be part-time. Currently I just do simple freelancing, but working with a company would be much more consistent and would certainly pay better. Heck, if Carrot allows telecommuting I might even be able to work for them.\n\n\\* MIT, if you're reading this, I am talking about my current college, not you... if you accept/transfer me, it's totally for the experience ^.^\n. Crap... I don't even know how to detect the language that the terminal is set to. Well, this is going to be interesting to learn.\n\nAs for the actual strings, https://npmjs.org/package/i18n-2 looks like a promising library\n. Ah ha... the locale is in `process.env.LANG`! ... So now that we know we can actually determine the locale, we just need to start abstracting the messages from roots itself.\n. Hmm... maybe we could make some polyfill for it because that does seem like the place it _should_ be\n. yeah, but separate from roots (like update-notifier)... that doesn't seem like the job of roots\n. made @roots-dev to hold stuff till we get that username\n. come on @roots... you don't even use your account. it would be really nice if you could just give us the username so we have a good place to host our project.\n\nand yeah github has a [name squatting policy](https://help.github.com/articles/name-squatting-policy), but if you just _gave_ us the username it would save us the trouble of going through @github's support team\n. It's possible that he has a bunch of private repos, but it's very unlikely, considering that the best defense that @roots came up with was \"i'm not obligated to give it up\" rather than \"i'm a paying customer\"... also, you'd think that he would have at least some public activity other than responding to accidental uses of the @roots mention.\n\nAnd yeah, this repo is smaller in terms of stars, but the scope of the project is much larger and encompasses several repos, which is why we want a team to put them all in.\n. @retlehs - Yeah, I've used the roots WordPress starter theme, and I do freelance developing for WordPress themes. Thus, I know exactly what the scope of your project is. And not having activity on a username (unless Rick actually has private repos) is exactly what squatting is.\n\n@roots - you can change your email notification settings so that you don't get \"spammed\"... but I suppose you don't come to GH often enough to notice that setting.\n. well, the roots wordpress theme ended up getting the username, so lets just stick with `roots-dev`\n. note to self: https://github.com/mrmrs/rprtr/ would be really cool to integrate with roots metrics\n. Considering the fact that our audience is mostly web-developers and other computer-literate people, do we really care if IE8 breaks? @jenius, what is distribution of browsers visiting [roots.cx](http://roots.cx)?\n\nAlso, what are the elements that break? ... anything critical to viewing the page?\n. isn't there a better way to determine if we can symlink... maybe it's just the web-designer in me talking, but platform-sniffing seems bad... is there any way we could do feature detection?\n\n... otherwise, if platform-sniffing is the only good option, then I `+1` this\n. hmm... that's really weird... try `npm cache clean` (http://codebetter.com/glennblock/2012/02/27/my-tale-of-npm-woe-when-all-else-fails-clear-you-cache/)\n. hmm... i kinda feel like we do that already with open/closed issues and any further categorization can be done with tags (without requiring contributors to use an external app)... interesting idea though.\n. eh... not really sure what's wrong with it, but I'd be happy to rename it to whatever you want.\n. @yoshuawuyts - it's the ccTLD for the Christmas Islands ... not much meaning for our project. Also, it's not really the name that matters (jenus would actually be a fine team name), it's just easier to manage projects with the GitHub team setup.\n. hmm... maybe we could just move the repos into a team and then deal with thinking of a better name later?\n. Yeah, the \"googleability\" of roots is pretty poor, but changing the name now would be a huge pain... I guess we're just gonna have to become more popular than that wordpress theme.\n\nAs for the idea of using another language: very creative! The Yiddish translation looks pretty cool too: `\u05d5\u05d5\u05d0\u05b8\u05e8\u05e6\u05dc`. I don't have a clue how to type it, or pronounce it, and I'm not sure if we can use unicode in GH usernames, but :+1: for uniqueness! :D\n. Now that we've split roots up into like 5 different projects, and a ton of helper utils, it might be worth revisiting this. Also, in the time since this issue was last updated, GitHub added repo redirects, which will make this sooo much easier: https://github.com/blog/1508-repository-redirects-are-here. \n\nThe name \"roots-dev\" still kinda sucks... Moving into the carrot org would sorta make sense since they're funding most of the development of the project, but then it would be harder to add people who aren't a part of carrot because we'd need to deal with GitHub teams and we'd need to be very careful not to project a sense of exclusion that might prevent people outside of carrot from contributing (idk if company-name orgs actually do that, it's just something to be careful of). Also, there might be a little difficulty with keeping client-work separated from roots repos (because they're conceptually different, so it seems a little odd to put them in the same org).\n\nMaybe we could make an org with a name like \"carrot-labs\"? It would still maintain that nod to carrot, without mixing roots together with client-projects.\n\nThoughts?\n. could you post the contents of `app.coffee`?\n. yes: unit tests... right now we have really complicated tests that just do the full compile operation... what we could really use is unit tests that just test small components of roots.\n. aren't we gonna be merging the transformers branch soon anyway?\n. yeah... we could move the coding style section of the readme in there \n. what if we just let app.coffee have access to the args that are passed to `roots watch`? then we could have something like this in app.coffee:\n\n``` coffee\nif args['mode'] is 'staging'\n  exports['locals'] =\n    autoplay: true\nelse\n  exports['locals'] =\n    autoplay: false\n```\n. Actually, we can do this already in the transformers branch... I just added\n\n``` coffee\nroots = require('roots')\nconsole.log roots.project.mode\n```\n\nto `app.coffee` and called `roots watch`, and got this output:\n\n``` bash\n$ roots watch\nbuild\ncompiling... \ndone!\n```\n\nSo... we can put whatever config stuff we want in `roots.project` and we're set!\n. On the topic of making compilation more flexible, what kind of system should we give to let people attach on to the compiling process? ... I'm quite fond of an event-based system, but that doesn't totally fit in a linear compilation process... hmm.\n\nMaybe we could have adapters attach themselves to other adapters (in either the \"post\" or \"pre\" positions) forming chains and sub-chains. The first chain would start with a no-op adapter called \"compile\". Then we would attach adapters to the post-\"compile\" hook based on the file extension (like what we have right now in get_adapters_by extension).\n\nThis would allow use to say things like \"do X after the file is put through jade\" or \"do Y before 'compile' begins\"\n\nAnyone else got an idea?\n. yeah, we could start with just hooking to the before and after of compile, but then we get into the issue of \"what if we need to run multiple adapters after compile finishes?\" their order may not matter, but they do need to be run in a linear fashion. And then, if we already have an object that can be hooked onto in that way, why not make all the adapters have that feature by extending from a main \"adapter\" class?\n. hmm... I didn't think you would.\n\nI prefer the old syntax because it uses an existing mechanism to pass variables to roots, rather than us creating our own by `eval`ing app.coffee.\n\nAlso, I don't think that the old syntax \"required [node knowledge] to work with roots\". It only added familiarity for those who do work with node (which I think is a fair number of the people who use roots).\n. The downside is a lack of standardization. Node, as a platform, is built to use CJS style modules. The way that we are `eval`ing app.coffee _does_ work, but it's not the way variables are _supposed_ to be passed between modules. \n\nAlso, it creates more \"special\" variables. With the CJS syntax only `exports` is special. With the `eval`ing method the following are special:\n- ignore_files\n- ignore_folders\n- layouts\n- locals\n- templates\n- folder_config\n- output_folder\n- by\n- order\n- compiled_extensions\n- watcher_ignore_folders\n- watcher_ignore_files\n- debug\n- ...and anything else we add to the config in the future\n\nI think that making what we export more explicit is better because it reduces the chance of conflicts.\n\nAlso, we don't need to put `exports` before every variable. We could write it like this if you want it to be shorter:\n\n``` coffee\nmodule.exports =\n    # Files in this list will not be compiled - minimatch supported\n    ignore_files: ['_*', 'readme*', '.gitignore', '.DS_Store']\n    ignore_folders: ['.git']\n\n    # Layout file config\n    # `default` applies to all views. Override for specific\n    # views as seen below.\n    layouts:\n      default: 'layout.jade'\n\n    # Locals will be made available on every page. They can be\n    # variables or (coffeescript) functions.\n    locals:\n      title: 'Welcome to Roots!'\n      title_with_markup: ->\n        \"<h1 class='title'>Welcome to Roots!</h1>\"\n\n    # Precompiled template path, see http://roots.cx/docs/#precompile\n    # templates: 'views/templates'\n```\n. But it's not a configuration file, it has functions and gets executed: it's a script. If it were merely a configuration file we would write it in JSON or YAML, but it's not... we've given it more power than that.\n. OH! here's an idea for fixing this in a really clean way:\n\nEarlier this year I read an [article](http://arstechnica.com/tech-policy/2013/04/how-a-banner-ad-for-hs-ok/) (well actually like 10 articles) about how ISPs were able to inject advertising into webpages as they travel from a server to the browser. They did this by appending a little script tag to the page as it passed by... which is totally not OK, but nevertheless, it gives me an idea.\n\nWhat if we added a similar piece of server middleware to `lib/server.js` which would append a script tag to all outgoing HTML files? Then when that script tag loads, it displays our roots messages & loading icon like it normally does. This would mean we don't need to go though all the files in `./public` and write our error message (reducing I/O) and we wouldn't need to recompile everything when the error goes away (also reducing I/O)!\n\nThoughts?\n. currently working on modifying https://github.com/intesso/connect-livereload to serve this purpose\n. We could totally use this to avoid needing that \"livereload\" variable in `layout.jade` too... it can just be injected the same way!\n\nPS: well, it's working partially... proof of concept looks good\n. Yeah, I don't plan on _releasing_ it until it has the unit tests setup. However, I don't think that means we can't merge it into master and focus on fixing the bugs it has. Or even keep it in its current branch and just focus on it there.\n\nAlso, I think that duplicating PRs for both branches would really be a pain and prolly even mess up the history.\n\nAnd one more thing: transformers isn't purely stylistic changes, it reorganizes a lot of the structure of roots to be easier to deal with.\n\nAnyway, this _does_ have the drawback of halting releases of the 2.0 series for everything except bug-fixes... but I think that it's worth it because transformers is much easier to develop on, and we really do need to go through this rewrite before assetgraph is feasible.\n. hmm... those earlier commits are gonna need to be taken out or it's going to mess up the history because the hashes have been changed. also it's pretty hard to review with those in there\n. the 1st commit message is a bit redundant, but other than that, it's look'n good!\n. yep, I'll do that before I merge... but all at once so I don't have to go back if we find more changes to be made\n. This is a PR that is aimed at the transformers branch and is very dependent on re-factors that have been done in there. Also, I'm building all future work off of that branch because I don't want another big rebase and because it's much easier to work with the way that transformers is structured.\n\nAnd yeah, it should probably be 2 PRs, but since they aren't reflected in the history anyway and the other change is very small, it hardly seems worth it.\n. OH! I almost forgot to mention, this PR means we don't need that `livereload` variable in locals anymore... so this is gonna be a breaking, or at least a \"pretty big\" change, which is why I labeled it for `3.0`\n. Hmm.... ok, but I think I'll do that later. I think it would be easier to put all the pre-deprecation fixes in their own little area, as removed from the rest of the code as possible... at least that's something i'd like to try and see if it looks good. Or, if 3.0 has a huge number of changes, it might not even be worth giving it a deprecation period.\n\nAnd thanks! that actually means a lot. :smile: \n. Yeah, I haven't looked at this in a while, but if i remember correctly, it's ready. I'm not sure why it can't be merged automatically, but I'll look at that later tonight.\n. hmm... actually `parse_dynamic_content` is closer to what I want to abstract out... though doing the layout parsing in an adapter would be great too.\n\nThe parse_dynamic_content adapter would just take in the file, cut out the front_matter and put that data in the locals, then return the file-content with the front_matter cut out\n. The fact that it is the most complex part of roots is exactly why I want to cut it apart and put it in a nice self-organizing structure. Programming only feels complicated when you're organizing it wrong, and I think this is the case here... I would equate it to moving a webapp from \"jQuery callback hell\" to a nice MVC/Backbone layout... except we need to decide how to make our \"MVC\" part... and it's not quite as clean as MVC either.\n\nAnd I agree on pair programming... I can do a lot of collaboration remotely, but actually being in NY would be easier. If I weren't about to go through \"Welcome Week\" at MSOE I'd totally fly down to code with you, but I don't think I can get vacation time on like, day 1 of college.\n. +1 ... just found this issue myself\n. Also, as a side note: the gh-pages deployer (and the syntax for using it) is not mentioned in the output of the `--help` command. Different issue, but I wanted to write it down before I forgot\n. This issue seems to be fixed in https://github.com/carrot/ship/tree/master/lib/deployers/gh-pages. So once that is integrated into roots this issue can be closed.\n. It's `roots deploy --gh-pages` in roots v2. In roots v3 deploying has been moved into https://github.com/carrot/ship\n. oh, and now ship checks for uncommitted changes, so this can prolly be closed\n. This'll be a great temporary patch until we can get a more flexible compilation process, and thank you for making this so quickly. However, I would do the implementation I little bit different... I'll show you in a sec.\n. There, that'll do it! And nope, I was just going to watch the Travis build.\n. Lol, of course... darn, it's always those tiny changes that you think _\"couldn't possibly do anything\"_... well, at least we didn't actually merge it without testing :open_mouth: - _that_ would be bad\n. I think this is really 2 issues:\n- When/If we should switch to the better compiler... or if it will simply become the default compiler, which will remove that decision.\n\nFor this, you're right... we should probably just wait.\n- Using source maps.\n\nHeck yeah! We should start generating these when we're in \"dev\" mode. I don't even think we need to use assetgraph to do that. We should also add\n\n> keep all your scripts (even jquery) unminified and non-compiled because we minify them for you and make source maps\n\nto the docs because having to step through compressed/compiled code really sucks. Oh, also: we should serve the source maps from `/__roots__/sourceMaps/`, or something else under `/__roots__` ... that's the convention that I used in the script-injector thing so we might as well continue it.\n. > save ourselves from, \"There is an unexpected...\". This would of course be viewed in the console, which leads to another issue...\n\nWhat is the issue with it being viewed in the console? We can totally show errors in the browser with script-injector... it could even render it in mono-spaced terminal font.\n. > I believe this would only work with Chrome which I personally love and think everyone should use for developing in the web.\n\nYeah, I don't think that source maps are supported much in other browsers, but eh... whatever. they probably will be soon. Since there's no alternative to source maps there isn't much decision here, so support doesn't really matter.\n. Terminal !== console?\n\nI'm a bit confused on what you're saying...\n. Oh! Yeah, script injector fixes this... So we could add support for showing all sorts of errors in the browser using the `BrowserPrinter`.\n. Yeah, we can print the errors to the browser when the scripts don't compile... but source maps won't help with that at all\n. Actually... in regard to replacing WordPress with roots, I've found a pattern that I quite like and used for this WordPress site that I built with roots. Some of it needs to be a bit more polished, but the general idea works and makes for a very snappy site: http://slang800.github.io/chazsouthard.com and https://github.com/slang800/chazsouthard.com\n\nThis site pulls content from a WordPress backend using the [JSON API](http://wordpress.org/plugins/json-api/). But the site itself is static (and can therefore be cached). Only the content that the backend provides is dynamic. This means that roots can still act as purely a static site generator, with no need for blog features. Also, we get a very elegant [SoC](http://en.wikipedia.org/wiki/Separation_of_concerns) by keeping all content out of the site's repo.\n\nUnless there is a flaw in this pattern, I'd recommend that roots promote this sort of blog design, and move blog generation features out of the roots core. Instead we could just have a small app that parses the flat files for a blog and serves up JSON.\n. @jenius - I'm not saying that you need to use WordPress as the backend... you could just as easily write static JSON files for each post, or even generate them from another language, like markdown with the \"frontmatter\" we currently use.\n\nIt doesn't matter what the backend is that spits out this JSON; whether it is static or dynamic, ugly or properly written... the important part is the design pattern of moving content out of the roots project itself, to maintain SoC and to avoid needing to recompile your project every time you update your content. And since JSON is kinda the \"standard interface\" it makes sense to transfer the content using that.\n\n@HHSnopek I don't think assetgraph has anything to do with managing blog content... assetgraph deals with much more generic lower-level concepts, and doesn't really care about your project structure\n. @jenius actually, it doesn't even need to an extra JSON call: you could load it with the rest of your page by using JSONP and just adding a script tag to load it.\n\nThough, I suppose if you really want to render it server-side, we could make a roots extension that pulls JSON from whatever content-source you want, and then puts it in the local variables when the page is being compiled... That way all content sources would be able to be used for both client-side and server-side rendering.\n\nThe thing i just really want to avoid is tightly coupling a CMS or static file generator to roots... that would be a mess.\n. Why not use transformers for this?\n. I'd love to see that data too, and if it is very clear that the data is reported (and can be shut off) then I wouldn't be bothered by it. Also, I'd like for the data that is reported to be made publicly available.\n\nAny idea on what specific stats you want to gather? ... to start I'd say:\n- error reports (line, stack trace, exception)\n- version number of roots\n- maybe some stats on compilation time and size of projects (to see what we should optimize for)\n. Is there any good way to make Keen IO data open-source? ... so all contributors (and potential contributors) to this repo have access to the stats?\n. Sounds good... maybe we could make something with graphite... or actually, if we're gonna be making our own dashboard anyway, maybe we could go with an existing open source solution like https://github.com/paperlesspost/graphiti\n. Ehh... I feel like setting up GA is hardly worth it as a temporary solution, since reporting systems like graphiti already are built... the majority of the work lies in gathering the data when roots is running.\n. could we send tracking requests async, in a way that allows the command to return before the tracker finishes? After-all, we don't really need to do anything if the request fails.\n\noh, and this issue is linked to: #239\n. Good idea! ... that'd be a bit nicer\n. Didn't we already establish why we aren't going to be writing parsers for every language we want to support back in like #149?\n. I did make a working proof of concept, but it was based on the roots master from like 4 months ago, so I doubt that it would be useful now. But more importantly, if we implement the component to track the dependencies of each file right now (without a solid model for representing the files in projects), I feel that it is going to become unmanageable. \n\nThus, I think we should work on integrating https://github.com/One-com/assetgraph before we work on our dependency tracking component... that way we will have a nice, solid way to interact with projects and represent the relationships inside of them - rather than directly writing to files, like we do right now. \n. We don't need to do a full compile, we only need a starting point from which we find assets, which is the views which compile into html. Like what I said earlier:\n\n> All we need to do is find out what files the compiled HTML/CSS/JS needs. So this is what we do:\n> 1. Compile the views that aren't partials (everything in ./views that doesn't start with a _)\n> 2. Search the HTML that comes out for the URLs of any CSS stylesheets that it relies on.\n> 3. Use those URLs to find the files that are supposed to compile into said CSS stylesheets.\n>    example:\n>    if we find /css/main.css, we then see if /assets/css/main.css exists\n>    if it does, we copy it over to ./public/\n>    if not search for /css/main.styl, if that exists then we compile it into ./public/\n>    if a .styl file isn't there, we search for .less and so on for everything else that can compile to css\n>    if we just can't find anything, we throw a `Can't Find Ur Dang Source` exception\n> \n> if we find something like www.mycdn.com/script.js then that's not our problem. But, if we wanna be really fancy, we could download this file to a tmp folder, then rewrite the URL to point to it to speed up downloads in development.\n> 1. take those compiled CSS style sheets and search through them for anything that the CSS expects to @import.\n> 2. everything we found in step 4 gets sent to step 3\n> 3. go back to step 2 and repeat for JS\n. If you add a partial to the project, nothing happens until you reference it in another file. When you do referance it, it just gets added to the watcher as a dependant of whatever file references it.\n\nWhen you make changes to it, it just causes whatever files depend on it to be recompiled.\n\nWhy would anything break?\n. When the Jade is being compiled, the partials will need to be read - so we would see them at that point.\n. yeah, because there are 2 ways to include a file:\n- at compile time (which we can see by the files being read)\n- after compile time (which is in the outputted HTML, CSS, and JS)\n\nSo we need to check both.\n. Hmm... I actually never thought about _not_ committing the compiled project, but now that you bring it up - that could be really nice. I wouldn't have to run compile before every commit and it would clean up the changelog.\n\nI am kinda worried about not having a record of what changed in the compiled files, but since they're compressed and whatnot it would be pretty hard to look through them for changes anyway. And the whole idea of higher-level languages is to abstract from the lower-level representation. hmm...\n\n@samccone - do you ever run into issues caused by not having a record of the changes of the compiled files? like an increased difficulty in tracking down where bugs occurred in the git history?\n. I just noticed that the public folder was removed from roots.cx like 5 months ago... wonderful, I totally gotta try this.\n\nOh, btw - we should probably open a separate issue for `.gitiginore` not being copied over, if that's still happening.\n. how come we're not ignoring the components folder by default?\n\nI agree that having it configurable is good, but you really shouldn't be editing the stuff in there too much... it's like dependencies, if you start changing stuff then you'll have issues updating and you'll need to maintain a separate branch.\n\nImma reopen this for now, with the task of changing back the default and making it configurable... unless I'm totally wrong about this.\n. Eh... I suppose since assetgraph will be removing the need for ignoring folders like that anyway, it's worth it. Thanks for the explanation.\n. Much better - I used jQuery in that just because it was easier, and didn't really think about the possibility of conflicts. Thanks for rewriting it @samccone!\n. `package.json` definitely sounds like the way to go. It's nice because you can keep separate versions of compilers for all your projects (if you need to), and we can just use `npm install` to setup everything. I don't like the idea of having like 50 installations of stylus scattered across my projects folder, but I suppose I can just globally install the compilers that I use a lot, to prevent that. Also, we'll need to include a `.gitignore` in the default roots project to prevent `node_modules` from getting committed.\n\nAlso, we should add a way to automatically add compilers to the `package.json` & install them as needed (and perhaps remove them if they aren't needed).\n. Wouldn't it make more sense to launch the browser _before_, to make sure that the site you're about to deploy works?\n\nUsually i just do `cd public` and then `roots serve` before I deploy, so I know i'm not launching something that's broken.\n\nAlso, I generally don't bother opening up the pushed site directly after pushing to gh-pages since the changes can take up to 10 minutes to actually show up. What could be useful is if roots outputted the url of the site I deployed to the terminal, so I can `ctrl` + click and open it that way, but opening automatically seems annoying.\n. can this be closed?\n. ok, adding `layout.jade` to the list of ignored files fixed it, and you're right about the fact that it _should_ be ignored. However, I find it strange that it didn't work without ignoring that file. Why is that?\n. it's this: https://github.com/slang800/packwi.com\n. wait a minute... forgot this was already opened here: #223\n. present tense? but that would only have been true 6 hours ago... for the rest of _time_ it will have occurred in the past.\n. updated to present tense\n. ok, install command is fixed\n. squashed it all\n. closed by fd8ebd472a04017064fe63bf3f45e242871038c4\n. did this get fixed when #455 got merged or is there still something to keep this open for?\n. we could rename `lib` to `src` and then add pre-publish/publish scripts in `package.json`:\n\n``` json\n\"scripts\": {\n    \"test\": \"mocha\",\n    \"prepublish\": \"cp -rt ./lib ./src/*; find ./lib -name \\\"*.coffee\\\" -exec rm \\\"{}\\\" \\\\;; coffee -o lib -c src\",\n    \"publish\": \"rm -r ./lib\"\n}\n```\n\noh, and we'd need something like this in `/bin/roots`:\n\n``` js\ntry {\n  var commands = require('../src/commands');\n  var configure_options = require('../src/config_parser');\n} catch (err) {\n  var commands = require('../lib/commands');\n  var configure_options = require('../lib/config_parser');\n}\n```\n\nI wrote this in an old experimental branch but never got around to making a PR for it.\n. Or we could do the renaming in the pre-publish/publish scripts to avoid needing to change `/bin/roots` and rename a huge part of the repo. But I think you get the idea.\n. lol, that's exactly what I explained like 2 comments ago.\n. Yeah, I noticed that weird behavior and found this issue https://github.com/isaacs/npm/issues/3059. However, it _is_ deliberate and supports this usecase:\n\n> Far and away, the most common use case for prepublish is to compile coffeescript into javascript (or minify javascript into ugly javascript, which is essentially the same sort of task). Since this is deterministic, and not platform-dependent, it makes no sense to do it multiple times, on each install target in the preinstall event. It should be done, instead, right before publishing the package, so that it can be bundled in the arball. However, the objection to moving it there is that it no longer compiles CoffeeScript to JavaScript in `npm install <noargs>`. So, now it does.\n\n(from https://github.com/isaacs/npm/issues/3059#issuecomment-12282746)\n\nAnd if you happen to have run `npm install` in development all you need to get it back to its original state is `npm run postpublish` or maybe just git reset. But you shouldn't need to do `npm install` frequently anyway, because you can just use `npm link`.\n\nSo, a Makefile and gulp certainly aren't needed when this can be accomplished in a couple bash commands.\n. ugh, crap - you're right. needing to use the makefile for publishing kinda sucks, but I suppose it's better than the situation you described. I'll commit it to this branch.\n. I thought it might be a bower problem too, but this issue wasn't happening before, so I think it's something that changed in roots.\n\nAnd yep - I'll try to figure out what's going on.\n. Whoops... forgot about this issue, but I actually had a point that I was going to get to:\n\n@jnordberg, since we have incredibly similar projects, would you be interested in working with roots? We could really use your skills over here (especially considering the plugin system you designed), and I think that we've solved some of the issues you've been having with wintersmith.\n\nIn short; we're both interested in build systems so we should totally collaborate somehow.\n. Cool! Good luck w/ your new job :)\n\n...ok, now this can be closed\n. We started some comparisons over here: http://roots.readthedocs.org/en/latest/features.html#comparisons, but they're not quite complete. As for the plugin system: we've addressed this in roots-v3, which is in beta, but you can still feel free to use.\n\nOverall, I'd say roots v2 is only a little better than wintersmith - it adds some important things that we needed for our sites, but isn't a significant departure from the concepts in wintersmith. Roots v3, on the other hand, has evolved into a suite of loosely coupled development tools ([ship](https://github.com/carrot/ship), [charge](https://github.com/carrot/charge), roots, and [axis](https://github.com/jenius/axis)) as well as a few separate components taken out of roots, like [accord](https://github.com/jenius/accord). During the rewrite we've cut roots into a set of separate projects, which has allowed us to grow each part of roots independently into far more mature tools. For example, I've been able to add features like parallel compilation to accord (which would have been near-impossible in roots v2), and in ship we've made an extensive set of depolyers for sending static sites to s3, heroku, github pages, VPSes, and any other hosting server you could want.\n\nRoots v3 and wintersmith are not even comparable, and once v3 is released, the star count will reflect that.\n. Or we could automatically restart the watcher when app.coffee is modified, right?\n. Umm... Cite your source? The only regular clearing that would make any sense is deleting files older than _n_ hours... Otherwise it could delete files being used by active processes.\n. Lol, the internet is a bit of a vague source... Especially since the statement itself would then qualify as a source.\n. @declandewet that's actually a pretty cool idea. We would still need some way to dump everything to disk to inspect the compiled files and support tools that can't use streams. But it would be nice to manipulate the project that way.\n. `/etc/init/mounted-tmp.conf` deletes anything older than `$TMPTIME` days, which is `0` by default. Thus it deletes everything in `/tmp` when it is run. However, this only gets run at startup (before someone could start `roots watch`) so it isn't a problem. It doesn't just delete stuff at regular intervals.\n. +1 looks good\n. actually, this batch of commits can prolly be merged now - I'll do this in chunks. \n. Nope, this shouldn't have anything breaking. I removed the docs since they don't apply yet, and the \"compile to js\" commits are squashed.\n. The point is that there _is_ a commit on the v3 branch that removes all the files. What I'm trying to do is take the stuff from the v3 branch and make a reasonable commit log for it so it doesn't rewrite everything.\n. @ccsouthard - once you have ssh setup, I'll try debugging this directly. I've gotta learn how to use terminal on a mac, but I'm sure I can pick that up fairly quickly.\n. Wow, I never realized quite how similar it is... 0.o  I've always known that it was unix-based, but OSX actually _feels_ like another Linux flavor.\n. Oh, and plugins would just be initialized by passing the instance of roots to them:\n\n``` coffeescript\nmyplugin = require 'myplugin'\nmyplugin(roots)\n```\n\n...allowing them to define compilers, transformations... ect\n. Actually, no - haven't seen v3 but I'll be sure to take a look later.\n\nAnd I'm talking about cloning down an existing project, not making a new one - that part wouldn't change with this architecture... it would just be a regular command-line tool without the need for an API that you access in app.coffee.\n\nSprout looks cool - nice job.\n. Wow, that sounds great. I'd love to see any notes or docs you've written up so I can start working with v3. During those first few months of school I totally lost track of where roots is going and that break in the history has made it hard to catch up.\n\nAnd sure, I'd love to chat about it. Feel free to message me anytime I'm on Hangouts.\n. I finally got around to working with v3, and the way it is organized is pretty to what I was going for & all the major concerns are addressed. Making `app.coffee` the entry point for roots would have added a bit more flexibility than just having it export an object, but it probably would have added some complexity too.\n\nOverall, I really like the new organization!\n. I feel like adding support for precompiled templates and multipass compilation to brunch would be a lot easier than maintaining roots as an entirely separate tool.\n\nI understand some degree of NIH Syndrome on this, but I'm a _really_ big fan of code-reuse. So finding another project that does pretty much the same thing as roots would be hugely helpful because that means we don't need to build our own plugin interface, support for component, source maps generator, plethora of templates, and whatever other things brunch has already made. We can just build on top of theirs.\n. I'm not trying to \"quietly file issues in other projects\", I'm trying to see if we can reuse a huge codebase that's already been written. As for \"seeming more mature\", that's exactly what I said in the first post of this issue:\n\n> ...but more contributors, a full plugin system and seems to be more mature\n\nI'm sorry if I hurt your feelings - it's definitely nothing personal. I just want to make sure that I'm not spending time working on something that has already been created.\n. OH! btw: when I say \"maturity\" I'm talking about the code and its overall stability, not the use of doge and r kelly memes in issue discussions... those are cool by me.\n. nah, I'm still interested. I'm not settled on switching to brunch, it's just an option to think about. I might just end up cutting out some of the features I like in brunch and merge them into roots... idk, whatever ends up being the easiest solution I guess.\n. Yeah, AssetGraph is quite different from pretty much every existing compilation solution. Rather than just concatenating files, it parses relevant parts and builds a \"graph\" of all the relations between the files. Using this we can move/rename/inline/combine files, while still preserving all the links to those files. Also, since the relations are built by starting at an HTML file and scanning everything that it (or other files) link to, we only get assets that are actually referenced somewhere. Finally, because it's an _asset_ graph, rather than a _file_ graph we can apply transformations to stuff like in-line scripts - any type of asset, not just files\n\nThe only type of relation that it is missing is compile-time dependencies, but those will inevitably be read at some time during compilation, so we can duck-punch `fs` to get a list of every file that's read and assign those files as dependencies of the file being compiled.\n\nI haven't had time to implement that last part because of school (in the middle of the last week before finals right now), but if I'm moving to NYC, then I'm sure I'll have time to do it then.\n. I finished up sourcemaps in my accord fork: https://github.com/slang800/accord ... while keeping them composable, implementing logic to determine when an operation doesn't have a sourcemap and therefore cannot pass a map on to the next operation, and even including an adapter to inline them.\n. What I'm saying is that the only thing remaining is updating roots to use the new accord interface, rather than needing to finish anything in accord - sorry if the connection wasn't clear.\n\nAnd I'm actually waiting on https://github.com/jenius/accord/pull/55.\n. and then we'll just keep a request for people to PR new sites into the roots.cx repo?\n. It would be nice to have the ability to use aliases, but it should be highly discouraged in the interest of standardization.\n\nAs for changing the name of `app.coffee` to something else like `roots.coffee`... that could be nice. It would be a pretty big change, but it _would_ make more sense.\n. I can confirm this on linux too. I saw it a few times, but I think it was an error within npm\n. nice writeup - couple corrections though:\n- those strings that you pass back and forth are normally called args. they're the same ones that you would pass if you started the process in the terminal, and you can reuse the same arg parsing system that you would use for the CLI. in this case we already have one built: https://github.com/carrot/accord-cli\n- functions can be sterilized quite easily because they have a `toString` method. though I wouldn't recommend actually using that to pass functions around - even though it _can_ be done, it's very poor SoC.\n- async is not parallel and the difference between them is _huge_ in terms of performance. here's a good explanation: http://stackoverflow.com/questions/6133574/how-to-articulate-the-difference-between-asynchronous-and-parallel-programming (though I'm sure that a google search will turn up a couple hundred other articles)\n- using work queues is a really common pattern, so there's no need to roll our own when we can utilize an existing one like [compute-cluster](https://www.npmjs.org/package/compute-cluster)\n. - They get passed into `process.argv` and even the [docs](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) call them args:\n  \n  > `args` `Array` List of string arguments\n  \n  I'm not just making this up - that's really what they're called. And arguments don't need to have support for types - that's just a feature of most programming languages. But the OS doesn't use types when running a process: it uses [text streams](http://en.wikipedia.org/wiki/Standard_streams)\n- SoC is [separation of concerns](http://en.wikipedia.org/wiki/Separation_of_concerns). And what you're thinking of is the function's scope, not the function itself. The function itself can be stringified as long as it's written in JS (not a binding to native code). The function's scope can also be stringified, but it's pretty complex and even less worth pursuing. And if you want proof of this: look at https://github.com/slang800/visual-stack - both stringifying functions and recording the execution context were ~~used~~ abused horribly in that project.\n- That's nice, but I wonder if you have part of it mixed up, because:\n  - \"Add _true async_ compilation\" should say \"parallel\" because we already have async compilation\n  - \"sync-locking\" should be removed. theres no such thing as \"sync-locking\", that's just how async works. What you're trying to say is that the compilation tasks can be parallelized.\n  - \"cost for each file but have them _async_\" should say \"parallel\" because they would have been async even if they were in a single thread.\n- It doesn't do the same thing, compute-cluster has a task-queue for automatically distributing jobs to workers, cluster does not. And reinventing that task-queue is what I'm saying we should avoid.\n. did we ever look into using web-workers for this? like http://adambom.github.io/parallel.js/\n. also I'm doing this in accord-watcher, so no need for it here\n. That sucks that they're unmaintained. Though, doing `npm install phantomjs` _does_ allow the roots tests to find phantomjs properly.\n. My usecase for dev-deps is I'm writing something that uses roots as a build-step. When it's distributed on npm everything will be compiled into the public folder and jade/coffee/stylus don't need to be installed. But when I'm developing I need them to be installed.\n. yeah, like we don't have to encourage it or anything - it just needs to work properly. And sure, I'll add a test.\n. should be ready!\n. rebased!\n. recompiling once every 5 seconds for 300 seconds gives me this graph of ram usage:\n![image](https://cloud.githubusercontent.com/assets/1049204/3361868/497aa102-fb03-11e3-8670-914a7fc898a3.png). (related to #512)\n. aww... I was hoping that this was the issue :(\n. Or just spawn workers as needed... for example if you only have 3 files in a project, but you have an 8 core CPU, you don't want 8 workers running. But, if you add another 10 files during the course of `roots watch`, it should spawn more workers.\n. `/\\.([^.]*)$/` should be `/\\.[^.]*$/` because group 1 in the first one does nothing.\n\nAlso, are we sure that this works with files that have multiple extensions in their name? I would think that the solution is to insure there are no path separators in (what we assume to be) the file extension.\n. I think this will work: `res.replace(///\\.[^#{path.sep}]*$///, \".#{ext}\")`\n. @jenius yup: block regular expressions (with interpolation)!\n@nporteschaikin lol, noooo :P\n. Oh, sorry - I thought that was meant as a joke aimed at the how my regex looks incredibly over-complicated. The reason why that wouldn't work is because extensions could have periods (for multi-pass compiles), numbers, unicode chars, whatever. Limiting it to upper & lower case latin letters would break with any abnormal filenames\n. whoops, should've looked through the old issues\n. duplicate of #502, #477, and #504. Thanks for taking the time to report though! :D\n. as a side-note, unicode chars are totally valid in commit messages! how cool is that!?\n. [ship](https://github.com/carrot/ship) already does this... needs to be deployed to npm tho\n. on small sites (http://slang.cx is being compiled here) both solutions end up being about the same:\n![image](https://cloud.githubusercontent.com/assets/1049204/3362101/319058fe-fb06-11e3-8032-c30dc6f69fb2.png)\n. the jeet site is actually what I used for the tests in the first post - didn't realize where that was from until now. I just asked @jenius for a large site to test it on and I got a zip of yours :D\n. hmm... I bet if we passed as many `use` functions as possible, as strings (represented by something like the paths to require nib and axis-css), we could sterilize the args properly, pass them to a worker, and accord-parallel would be faster than roots-workers... removing the one thing that's holding us back from removing that extra worker logic from roots \n. True, the user _can_ require functions, but that's what the fallback to the main thread is for. With optimizations, we don't need to cover every single use-case (because that would result in a ton of extra logic for minimal gains). We just need to deal with the \"low hanging fruit\"... the simple optimizations that help most use-cases.\n. Yeah, I would love to have the roots workers fixed, but I have no idea what is wrong with them. If you think it's like a 1-day fix, then that's great, but the code is pretty complex so I feel like it's gonna be awhile before they're working properly. Since accord-parallel _is_ working properly, we should use that until roots-workers works.\n. how is this a suboptimal solution?\n. > I think that since the workers don't need to load the entire app.coffee and related config, we might be able to get better performance than roots/v3#workers (and certainly better SoC). It doesn't compile everything in worker process (it falls back to compiling in the main process when the args can't be sterilized), but I think that it will still offer better performance because of the reduced deps that the workers need to load. And if it doesn't - then it will just be another accord-based module that someone else can hopefully make use of.\n> _(from TeamSnippets on Jun 20th)_\n\nJust because you move more work into a parallel process, doesn't mean it will be faster - you have to take into account how much overhead is added to each worker process. Also, the issue with passing functions isn't a hard limit on the speed of accord-parallel - some functions can be sterilized and there even ways around passing functions in the first place. In fact, I think it's easier to address the performance concern in accord-parallel than it is to fix the performance degradation in roots. Especially given the simpler architecture of accord-parallel.\n\nAnd for the record, any compilation job that is given a function as an arg never leaves the main thread. It doesn't get pushed back from a worker thread, and it's not done on a per-compiler basis (it's a per-job basis).\n. > I really hope that you will be able to accept that this has to be a little less clean for the sake of optimization.\n\nIf the optimization was giving us 10-20x faster execution, I could understand sacrificing a little simplicity. But that's not the type of optimization I'm seeing (I would back this up with more than just the minimal testing I did in #512, but I can't even get roots with workers to compile the carrot.is site because of how much that PR broke). The issue is: engineers are vastly more expensive than CPUs. So unless you have an extremely effective optimization, an optimization that adds ~0 complexity, or are operating at such a scale that fractions of a second add up to major costs, it's not worth it. It's much more cost-effective to just throw more computing power at the problem.\n\n> If you honestly think that you will be able to do either of the above, I would love to hear about it.\n\nI think I can get pretty close to the same speed (maybe even better - not sure) with some clever tricks in accord, and a few changes to roots that allow more jobs to be delegated to worker threads - like not trying to pass helper functions and locals to languages like coffeescript and markdown (that don't accept them anyway). I want to focus these optimizations away from the roots core, which is already quite complex, and do them in a separate lib like accord and accord-parallel.\n\nOh, and if we could revisit what I mentioned above:\n\n> The code is pretty complex so I feel like it's gonna be awhile before they're working properly. Since accord-parallel is working properly, we should use that until roots-workers works.\n\nRoots-workers still isn't fixed, and can't compile the carrot site, so I need to have people install my fork every time someone needs to compile the site, which is pretty annoying. Could we please revert the workers PR - at least until it's working properly? I'm not saying that you should stop trying to get workers to work - if you can implement them in a way that outperforms accord-parallel and doesn't introduce a disproportionate amount of complexity (relative to the speedup it gives), then that's great and clearly we should add it in when that happens.\n. Thanks for understanding.\n\nOh, and I almost forgot: I've started focusing on tracking dependencies of files during compilation. After thinking about it, I probably should have worked on optimizing that before I even looked at running parallel processes. Just using the new `isolated` property, we can cut a whole bunch of files out of each compilation pass (isolated files never need to be recompiled unless they themselves are modified). After that's working, we can begin expanding into tracking Jade deps, and implementing some sort of generic dep checking. And then I'll go back to looking at passing jobs to workers if we still have a significant performance issue.\n\nOH! and one last update: last weekend I managed to get Jade to compile in a worker by moving the functions out of \"locals\" and into a Jade mixin. There was still an issue with the `site` variable (https://github.com/carrot/roots-dynamic-content/issues/9), but it's very close to working... just took a bit of restructuring for performance.\n. I thought we were just gonna revert & cherrypick the changes we want to\nkeep, right?\n\nOn Fri, Jul 25, 2014 at 11:30 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> Hey @slang800 https://github.com/slang800 when you have a minute can\n> you rebase this on top of the v3 branch?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/514#issuecomment-50165307.\n. ooh, I didn't realize that you already reverted it - yeah, I'll rebase\n. rebased & cleaned up!\n. Dynamic content works in the accord-parallel branch (#514) - you can use that till it works in main v3.\n. I think this is still a pretty important issue...\n. +1\n. @tuvistavie - we could still include the updates to the test files, though.\n. cool, now just squash the 2 commits together and it should be all set to merge :smile: \n. So long as the data that we gather is publicly available, anonymized, and the collection is optional - I'm good with it.\n\nOh, also: some people might be angry if this is enabled by default and/or not obvious... I remember ungit had some major pushback from users when it didn't mention that it had analytics https://github.com/FredrikNoren/ungit/pull/91\n. There's probably still calls to the regular fs module somewhere... did you commit your modified version of jade anywhere? Oh, and jade isn't the only module that makes calls to fs - some of the other accord adapters call fs directly.\n. Most of the compilers can be fed strings (meaning we can do the file reading in accord), it's just a couple of the more complex compilers like Jade that need to be patched... though I've started that in http://github.com/slang800/yade (along with getting rid of a TON of synchronous fs calls). Eventually, I plan to get those changes merged into jade itself, but in the meantime I've made it easy to support alternative compilers in accord (see: https://github.com/jenius/accord/pull/50).\n\nAlso, that file-limit changing code is still in roots, the try just lets it fail silently on linux - so it should still allow Mac to compile until we can patch the compilers that make calls to fs.\n. If you have your site on github, I'd be willing to take a look through it and see if I can pick out the problem & file a proper bug report for it.\n. oh, if you look at the latest travis build (https://travis-ci.org/jenius/roots/builds/32655556) that's the exact same error that I'm getting on my machine... something (that we didn't have the version locked down on) must've updated within the last 24 hours\n. here's what I'm getting from diffing the travis logs:\n- serve-static@1.5.1 -> serve-static@1.5.2\n- chokidar@0.8.3 -> chokidar@0.8.4\n- fsevents@0.2.0 -> fsevents@0.2.1\n\n...but the npm install logs aren't sorted normally (it's by the order that they installed in), so I might be missing some other changes in the diff\n. oh, and:\n- coffeelint@1.5.5 -> coffeelint@1.5.6\n- send@0.8.1 -> send@0.8.2 (dep of serve-static)\n\n... some sort of a service to query recent updates based on the packages listed in a given package.json would be incredibly useful right now... probably not even that hard to build\n. This isn't a problem in roots and it's not _exactly_ npm's fault either - they use UNC paths for everything, which is how they are able to make that structure in the first place (see: https://github.com/npm/npm/issues/3697). It's really a problem with Windows APIs (including Windows Explorer) not being able to utilize the real maximum NTFS filepath length of 32,000 characters. But npm _is_ working to make a better way to deal with this limitation (see: https://github.com/joyent/node/issues/6960#issuecomment-46704998)\n\nAs a workaround, if you want to remove a folder, you can do `npm install -g rimraf` and then use the rimraf bin to do `rimraf path\\to\\folder`.\n. This shouldn't cause roots to totally \"break\", you're just not able to use Windows Explorer or other software that relies on poorly written Windows APIs to manipulate the directory structure that roots is installed in. You should still be able to run and use roots.\n. Maybe you could just use `roots watch --no-open` and then open chrome canary manually? That's what I do when I'm developing in my non-default browser.\n\nIt would probably be more of a pain than it's worth to specify what browser you want opened, especially since you could just do something like `google-chrome http://localhost:1111 && roots watch --no-open` to get the same effect.\n. @ccsouthard - the code is updated to work with v3 & compiles on my machine... I'll try to work with you to debug your error later, but right now I'm super busy with intermedia & have 0 freetime\n. It would be pretty hard to get roots to run in a web-browser, but there are plenty of projects that demonstrate roots:\n- https://github.com/slang800/slang.cx\n- https://github.com/jenius/roots.cx\n- https://github.com/slang800/chazsouthard.com\n- https://github.com/jenius/axis-www\n\nNot sure if we could open-source carrot.is... _maybe_ a stripped down version of the repo with issues, authentication stuff, and private pages removed. That would make a great example project for showing off dynamic content and how to build a medium-sized site with roots. However, we'd need to have a discussion about it. Thoughts @jenius?\n. This is what I'm focusing on in accord-watcher and accord-parallel, btw.\n\nOh, and jade does return a dep tree (except for when you compile into a function). Oh, and not exactly all of our operations are async... inside the Jade compiler there are actually some synchronous file reads. I started looking at that in yade, but it's gonna take some time to fix.\n. see: #396\n. Oh, and this was on the first run after updating from roots rc10 to roots 3.0.0\n. [accord](https://github.com/jenius/accord) supports sass, so you just need to do `npm install node-sass --save`, restart roots, & you'll be gtg.\n\n*edit: it's \"node-sass\", not \"lib-sass\"\n. Nope, you shouldn't need to do anything to your app.coffee... accord will just see that node-sass is installed and it'll use it on all the sass files it finds. All that config is handled for you in accord: https://github.com/jenius/accord/blob/master/lib/adapters/scss.coffee\n. Turns out the error pictured above originated from `cli/watch.coffee` (in the `on_error` function). And is something with WordPress/Jetpack\n![screenshot from 2015-02-23 17 28 50](https://cloud.githubusercontent.com/assets/1049204/6339092/8ac9cf18-bb81-11e4-92d1-3a10b3d02263.png)\n. do the error messages come with a stacktrace when you get them?\n. Surely you have gotten some error message from roots before, right? Because, almost every time I get an error message from roots it comes with no stack trace, and a unicode X symbol.\n\nAs for your questions:\n1. not really\n2. is it not reproducible for you?\n. I'm going to reopen this because I am doing a major rewrite of the roots core and like @jenius said, assetgraph looks very useful. I think at the bare minimum, we can use it for:\n- processing the compiled HTML files to determine their dependencies (to optimize compiling)\n- or, using it to rewrite dependencies in such a way that the paths to `.coffee` and `.stylus` files could be used directly in Jade, meaning that the user wouldn't need to even think about the location of compiled assets in the `./public` folder.\n\nAlso, if assetgraph is capable (or nearly capable) of optimizing multipage sites, it could be used for general post-compile optimizations like image optimizations & inlining, css/js compression and in-lining, HTML compression... ect. Perhaps we could even use it to pretty-print HTML and other stuff if it provides a easy to work with representation of the HTML page and its assets. Then we can disable those in-language features like image-inlining that stylus has, or the compression that coffeescript offers, and just use asset-graph for all of that. We could even fork the compilers of some of the more popular languages and gut those features out.\n\nI am not interested in having asset-graph itself do any sort of compilation because I think that is way outside of the scope of that project. Instead, I think that roots should provide a more usable interface for assetgraph, and a way to manage all the compilation, that comes before assetgraph.\n. thanks for the explanation... and wow... just wow. I finished reading your [presentation](http://gofish.dk/assetgraph.pdf) ... it's just so beautiful - exactly the kind of abstraction that roots needs\n. Well, I've been looking at assetgraph for a bit, though the documentation in the readme appears to be outdated and the documentation everywhere else is very sparse.\n\nAny chance you could work on fixing that up?\n. Ok, the more I look at this API, the more I think I should just rewrite it. It seems like AssetGraph is meant for a sequence of optimization-related tasks to be performed. Whereas roots needs an AssetGraph that can be passed around and hold everything... also there are a lot of features that we don't need.\n\n**So: the plan going forward -**\nI'm just going to start rewriting it, and if it turns out that I just totally misunderstood the AG API, then I'll happily ditch that project and use the main AG repo. It is not without some remorse that I make this decision, because I really hate it when I can't use an existing solution, or at least just build on top of it. However, I really don't think that it's feasible to reorganize the existing API. At least I _will_ be able to use a lot of the code from the original repo... just a lot of the underlying structure will need to be changed\n. Yeah, I've been reading that one for a while but it's far from complete. It is starting to make more sense, and I'm leaning away from writing my own as I learn more. And yeah, if @papandreou is willing to listen to my complaints then that'd be great!\n\nThe issue I was having before is if I initialize an instance of asset graph and run something it doesn't run on its own... I think I'm supposed to be calling `.run()`, but here's what I'd expect to be able to do:\n\n``` javascript\nassetGraph = new AssetGraph();\nassetGraph.loadAssets('*.html');\nassetGraph.findAssets().length !== 0; // but this fails because it's empty :(\n```\n\nNow I think I know how I'm really supposed to do it, but calling `run()` every time is still kinda awkward. \n. Sorry, I assumed that these were separate install scripts rather than aliases to their npm equilivants.\n\nNevertheless, wouldn't it be just as easy for users that are not familiar with npm to learn how to use those npm commands? Remembering your commands would be just as difficult as remembering those npm commands. Also, by learning those npm commands, they will know how to install/update every other node package (which is a lot more useful than just learning the commands for one program). And for users of npm, having those other commands is likely to cause the same confusion about their purpose that I originally had.\n\nBy removing those aliases, you will also have less code to maintain (even if it is a small amount less), and fewer questions related to installation (because users will know to consult the npm documentation if npm doesn't work, rather than ask roots why it isn't working). Finally, it is not semantically correct to use a roots command to perform updates because roots is not a package management tool... updates is just not roots's job.\n. Rather than making our own roots template registry, I wonder if we could piggy-back off of bower or something.\n. Also, I would be interested in \"highly encouraging\" but not totally requiring the use of a standard project structure. I found that loosing this freedom when I started using roots was actually really nice... now all my front-end design projects share the same structure... I don't even need to think about where to look for stuff because it's all in standard locations.\n\nOn a larger scale, having standard locations for files can help developers work with projects that they have never even touched before... this is one of the very few things I like about WordPress: I can go to any WordPress theme and immediately know where to go to change what I want... I think that there is a similar standard project structure for Rails too, but I've never been a Ruby fan.\n\nTo quote \"Getting Real\" by 37signals:\n\n```\nSome people argue software should be agnostic. They say it\u2019s ar-\nrogant for developers to limit features or ignore feature requests.\nThey say software should always be as flexible as possible.\n\nWe think that\u2019s bullshit. The best software has a vision. The\nbest software takes sides. When someone uses software, they\u2019re\nnot just looking for features, they\u2019re looking for an approach.\nThey\u2019re looking for a vision. Decide what your vision is and run\nwith it.\n\nAnd remember, if they don\u2019t like your vision there are plenty\nof other visions out there for people. Don\u2019t go chasing people\nyou\u2019ll never make happy.\n```\n. Yes... I would really like to establish similar conventions around require.js that would allow us to automatically generate require.js configs. However, component(1) is being built on common.js, so I'm not really sure if we should go with common.js or work to get it removed from component(1).\n. Oh! wait... I read the version of npm... I actually don't have the latest version of node (despite having just updated all my packages 2 minutes ago).\n. also, I get this error:\n\n``` bash\n$ roots compile\ncompiling project... \nminifying & compressing...\ncompile error\nSyntaxError: Unexpected token :\nPlease check the validity of the CSS block starting from the line #76\n```\n\n...but it doesn't tell me the file that the error occurred in, just the line\n. I actually found that the error mentioned in the first post came from a jade file... next I'm checking if the bad error came from the jade compiler or was cut down to one line by roots\n. well, I found the file where the error was happening and fixed it, but now I can't reproduce the bad error messages it was giving me... all the errors I am getting now tell the line number, file, and explanation. So I'll close this until I can find it again...\n. I'm still getting errors without filename & line number\n\n```\n$ roots watch\ncompiling... \n\n\n------------ ERROR ------------\n\nSyntaxError: Unexpected identifier\n\ndone!\nserver started on port 1111\n\n```\n. hmm... you could installing bootstrap-stylus into a project... that should do it (bower install bootstrap-stylus)\n. I've still been seeing it in roots `1.3.6-4`, but I'll close this because it's a really vague issue and it'll probably be closed once we switch to transformers.\n. For omitting `;`'s, I am highly opposed to this. ASI is useful because it makes a lot of poorly written code function (so webpages don't break). However, for a serious JS project, I dislike the idea of relying on it. For the extra carefulness that it requires (both by you and other developers who may not have studied JS's ASI), it does not seem to be worth the 50-100 characters that are saved.\n\nEven more importantly, community projects need to have an agreement on some basic coding style and since the vast majority of JS programmers prefer using `;`'s excessively, it is probably better to side with the majority unless there is a truly huge drawback from doing so.\n. For the switch to `===` from `==`, it is not that \"the double equals can be used safely\" in those instances... `===` should be used by default because it is faster (doesn't require type conversion) and because it has fewer special rules which can cause bugs.\n\n`==` should only be used when type conversion is required.\n. thanks for pulling this in!\nbtw, I did some tests on using `===` for checking for `undefined`:\n\n``` js\nfoo = undefined;\nconsole.log(foo === undefined); // true\n\nbar = null;\nconsole.log(bar === undefined); // false\nconsole.log(bar == undefined); // true\n```\n\nHowever, there is an argument against using `foo === undefined` since undefined could be redefined which would cause it to fail. For that reason, `typeof foo == \"undefined\"` seems to be the standard. So overall, it shouldn't break anything, but it looks like the `typeof` method would be better since that's what most people are used to using.\n\nIMO, `foo?` is much easier :)\n. This is now moved to #181 ... discussion should be continued there.\n. I was thinking `assets/components`\n. Sure, I'll PR it in & thanks :)\n\nAlso, do you think the command should be changed too for the same reason? ... maybe to something like `roots dep <bower command>` (\"dep\" being short for \"dependency\", which would be awful to type all the time). Using `roots component <bower command>` would make sense too, but it's a little long.\n. actually, this could cause an issue with RequireJS since it assumes you keep all your JavaScript files in a single directory in the project... not sure how to deal with this.\n\nA symlink would be a really nice way around this, but if I remember correctly, windows chokes on those.\n. Eh, we're probably better off just checking for updates when the user wants to check for updates. I'd be kinda suspicious if any tool I'm using starts sending network requests without me asking it to.\n\nAlso, this looks like feature creep because npm is supposed to be managing updates, not the packages themselves (because npm is actually good at it). If the user wants to check for updates more often, they can just run `npm -g update` on a cron job.\n. It's not just that it's invasive, it's a functionality that roots shouldn't have, aka: [feature creep](http://www.codinghorror.com/blog/2007/10/are-features-the-enemy.html).\n\nAlso, solving the issue of npm not automatically checking for updates is outside the scope of this project. Roots is a development tool, not a package manager. If you want to check for updates to packages, that should be npm's job because npm _is_ a package manager... Mixing in package management features into a development tool will just add unneeded complexity.\n\nFurthermore, unexpected functionality like this may interfere with npm in the future. Imagine if npm decides to add a feature that automatically checks for updates on a daily basis. Now, not only is root's home-brew-update-checker useless, but it is sending unneeded requests. This is a fairly small annoyance, but demonstrates why unexpected features can be bad.\n\nWhat we _should_ do is make a tool that automatically checks for npm package updates, like software center does for packages on Ubuntu, or Google Play does on Android (basically `npm update` on a cron job)... Or at _least_ use an existing solution like [update_notifier](https://npmjs.org/package/update-notifier).\n. huzza! thanks for fixing that! :D\n. And then after it's configurable we can make the default project template use `.public` as the name?\n. Ah, I wasn't sure if you meant that you're not ready to change it because it's not configurable yet and there are still some things that are hard-coded with the `public` directory convention, or if you meant you're not certain about the overall idea.\n\n... Anyway, I don't think that changing the name of the directory would conflict with existing projects in any way that switching to a configurable directory structure wouldn't ... so if we time those 2 changes at the same major release, people would need to modify their existing projects anyway to add the configurable project structure, and could just specify their public directory as `public` rather than `.public` ... it would just mean that all new projects would use `.public` as their default directory\n. Moment.js is probably not in `http://localhost:1111/components/moment.js` ... it would probably be in `http://localhost:1111/components/moment/moment.js` or something like that.\n.  switch `\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"` to `\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min\"` ... require.js adds the `.js` part for you.\n. heck yes! +100\n\nperhaps we could start with something like #97\n. I've never seen a need for this... I just keep any config that I need on the client side in `assets/js/main.coffee`. @kylemac - Could you provide a use-case for writing server-side variables to the client that isn't satisfied by the manual approach jenius gave (or perhaps a modification of it that just uses json encoding to sanitize the variables)?\n. That could be useful. It's far from critical (especially since you can do it manually like jenius said), but it's a \"nice to have\" and I can think of a few places I would use that.\n. I actually use bower a lot, and cdnjs has a pretty different purpose. Perhaps if we created a separate api for managing an array of dependency urls and then outputting them into jade, require.js, or whatever else people are using to load their scripts.\n\n... Or we could build functionality like that into bower, like this issue asks for: bower/bower/issues/19\n\nOh! ... related to that, it would be really cool if templates could access a list of the packages that are installed via bower, and their locations.\n. Maybe you could combine them by exposing a variable in the templating that holds all the dependencies that are installed, and their paths.\n\nsomething like this:\n\n``` json\n{\n    \"jquery\": {\n        \"url\": \"//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js\",\n        \"requirejs_path\": \"//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min\"\n    },\n    \"underscore\": {\n        \"url\": \"/assets/components/underscore/underscore.js\",\n        \"requirejs_url\": \"../components/underscore/underscore\",\n        \"requirejs_shim\": {\n            \"exports\": '_'\n        }\n    },\n    \"backbone\": {\n        \"url\": \"/assets/components/backbone/backbone.js\",\n        \"requirejs_url\": \"../components/backbone/backbone\",\n        \"requirejs_shim\": {\n            \"deps\": ['underscore', 'jquery'],\n            \"exports\": 'Backbone'\n        }\n    }   \n}\n```\n\n`url` could be either a cdn url or a url to point to the lib on the same server. It could even be switched between using cdn versions and local versions depending on whether you're doing development offline, or if you have an internet connection.\n`requirejs_url` would be the url format that requirejs uses\n'requirejs_shim' would be an object holding the shim if the original library isn't built on requirejs.\n\nThis could be used to either output script tags, or output the requirejs config, all depending on the packages that you installed.\n\nMore advanced stuff like version numbers and whatnot could also be made available by parsing component.json.\n. It would all be parsed from component.json in the repos of the libraries you install... or nearly all of it, some would be based on environment variables (like if preference is given to CDNs or local copies)\n. oh, wait... you're just talking about using cdnjs to download libraries into the local development environment? not providing cdnjs links so the compiled webpage can use the CDN?\n\nisn't this just replicating what bower already does?\n. doesn't underscore have anything that can deal with this?\n. I kinda thought that GH _was_ that community... I just watch this repo to see when updates or issues are posted. Maybe a mailing list for updates would be good, but for general discussion, keeping it on GH is probably best, so problems & solutions are more clearly documented (which is not very easy to do with a chat room or even a mailing list).\n. I've been working with Jade (rewriting it in coffee), so I can say for certain that Jade can compile `.jade` files into JS functions on its own... there is no need for `tmpl-precompile` because `parse()` from [jade/lib/jade.js](https://github.com/visionmedia/jade/blob/master/lib/jade.js) does exactly that\n. What exactly do you mean by \"jade's abilities to do this are not enough\"? ... what exactly is it missing?\n\nThat runtime file is just a couple of functions... it's like less than 200 lines, if I remember correctly.\n\nAlso, you can specify not to add the runtime file, and just add it manually to `templates.js` after all the files in the templates folder have been processed.\n. Ok, do you want me to just PR this into the main roots repo? ... it hardly sounds like it would be worth writing a separate tool to do this.\n. I actually really love the project structure that roots gives me, so I don't think that should be removed entirely, but moving the project structure out of the core of roots into something that is specified in the default `app.coffee` file would be great... That way you can change it if you want, but the default is still very nice.\n. rebased... all tests still pass on my machine despite it failing on travis\n. ready to merge\n. yep\n. ugh, I rebased again, but travis is still failing to get the deps... it does pass all 25 tests on my machine, though.\n. wait... these failed the test suite! why was this merged?\n. actually, the test suite passes for this... the test on Travis shouldn't have failed\n. +1 for `content`\n. I'm pretty sure that's an issue on all platforms... it is for me on Ubuntu 13.04\n. Why do we need to find the Stylus's @imports or Jade's partials? Those would get inlined into the CSS/HTML and we wouldn't need to compile them anyway. All we need to do is find out what files the compiled HTML/CSS/JS needs. So this is what we do:\n1. Compile the views that aren't partials (everything in `./views` that doesn't start with a `_`)\n2. Search the HTML that comes out for the URLs of any CSS stylesheets that it relies on.\n3. Use those URLs to find the files that are supposed to compile into said CSS stylesheets.\n\nexample:\nif we find `/css/main.css`, we then see if `/assets/css/main.css` exists\nif it does, we copy it over to `./public/`\nif not search for `/css/main.styl`, if that exists then we compile it into `./public/`\nif a `.styl` file isn't there, we search for `.less` and so on for everything else that can compile to css\nif we just can't find anything, we throw a `Can't Find Ur Dang Source` exception\n\n...\n\nif we find something like `www.mycdn.com/script.js` then that's not our problem. But, if we wanna be _really fancy_, we could download this file to a tmp folder, then rewrite the URL to point to it to speed up downloads in development.\n1. take those compiled CSS style sheets and search through them for anything that the CSS expects to `@import`.\n2. everything we found in step 4 gets sent to step 3\n3. go back to step 2 and repeat for JS\n\n...what this doesn't work for: _dynamically generated requirements_ ... like if a JS lib adds a style tag after the page load. personally I think that's stupid, but to support it, we could either have people explicitly declare extra files that need to get compiled, or switch to a different way of searching for dependencies...\n\n\"like what\" you ask? well, what if we connect to the HTTP server and when a request is about to turn into a 404, we take the URL that's requested and check if there's a file we could compile to make it not 404. this has some disadvantages... like:\n- you need to open up your webapp and do everything you need to make all the dependencies get requested... maybe we could automate this with PhantomJS or something, but it sounds like a pain.\n- it would prolly be pretty slow, but maybe we could setup a cache of compiled files\n- it just sounds complicated\n- we can't do cool URL rewriting like i mentioned above\n\nPS: if we do the 1st approach, we could prolly jack some of the functionality from a webbrowser, cause, if you think about it, that's exactly what browsers do when they get a html page (minus the compiling part)\n. Ugh... :facepalm: _now_ I remember why we needed that.\n\nHere's a rather random idea: what if we subclassed the instance of `fs` that the <insert language here> compiler uses, so that we could record all the files that the compiler reads from. Then we take that list, remove everything that isn't in the project folder, and just watch those files... not sure how to do this off the top of my head, but it seems like a pretty simple solution, right?\n. nah, we wouldn't fork the compiler... that would be horrible if we want to support all the crazy preprocessors people use. we could just make sure that when the compiler does `require('fs')` that resolves to our version of fs, that has a tiny logging function added into the read functions.... maybe that's what you mean by \"duck punch\"? ... idk\n. ah... btw, i think i found a module that does what i described: https://npmjs.org/package/inj\n. oh, and as for the data-structure, we might want something like this to make searching easier:\n\n```\nasset_tree = {\n    \"./assets/css/_partial.styl\": [\n        \"./assets/css/main.styl\",\n        \"./assets/css/home.styl\"\n    ],\n    \"./assets/js/derp.js\": [\n        \"./assets/js/main.coffee\"\n    ],\n    \"./assets/js/herp.coffee\": [\n        \"./assets/js/main.coffee\"\n    ],\n}\n```\n\nso that means that when `./assets/js/main.coffee` was compiled, it needed to read `./assets/js/herp.coffee` & `./assets/js/derp.js`. So whenever a file is modified, we just get `asset_tree[\"name of the file we modified\"]` and iterate over all the files that rely on it, compiling each one.\n. No, if we are going with CJS then `./assets/js/derp.js` being read while compiling `main.coffee` would have happened because `main.coffee` did `require(\"derp.js\")`... and since we'd be concatenating all the deps, we'd need to recompile `main.coffee` so the updated `derp.js` is in it.\n. We should be able to get the root by just reading the `cd`, so I don't think that needs to be in it. And why does `'views/index.jade'` need to be an object? If the only key is `deps` then it's kinda pointless to add another level to the object. \n. It is good to know the root that it was generated from, but does that really belong in the same object? Or better yet, could we just make all the file paths explicit?\n\nAs for making it more extensible - since this is just a mapping between files and dependents, whatever else we might add to it probably belongs in a different object... generally, keeping objects flat is better than making them deeply nested.\n\n...but I'm probably getting too specific on how this should be implemented... I'll try to build this into the transformers branch and see what it looks like.\n. I think there are 2 components to the asset graph.\n1. parsing the compiled HTML & CSS to find the files that they rely on (this we should use regex or a AST for)\n2. finding what files the files written in higher-level languages rely on... for this one, we cannot just monkey patch every compiler (there are way too many languages for that)... we need some way that works with every compiler (or pretty close to that).\n. err... no for point 2 we can't use regexes either because we would need to make a new regex for every single language. Also, parsing a templating language that may contain ANY content with a regex is a horrible idea... imagine if index.jade has a stylus code example in it... it would be far too easy to break. That's why I suggested extending `fs`. \n. no, that stuff would show up in the compiled CSS/HTML (point 1)\n. if `@import` was in a `:stylus` block in your jade it would _need_ to detect that.\n. proof of concept for duck punching the compilers... all of them (in like 50 SLOC, tops :smile:):\n![image](https://f.cloud.github.com/assets/1049204/700854/aa3766dc-dd5f-11e2-8c23-111340605e1f.png)\n\nSome of these show incorrect filehelpers for dep... like the line that says: `/usrdata/web/roots/test/basic/assets/css/example.styl /usrdata/web/roots/test/basic/views/index.jade`. This doesn't mean that index.jade depends on example.style... it's just because \"fh\" didn't get cleared out after index.jade was finished compiling... after I reorganize the way we keep track of files, this will be fixed.\n\nAlso, at the bottom you'll see that main.js is written 3 times... this is a related issue, since I kinda just pulled `fh` into the outermost scope for the demo.\n\nBut it does show that we can use `fs` to see what files get read by the compilers, without knowing anything about the compilers! ... making it pretty much language agnostic.\n. no... this will still show us all the dependents of each file... just like running the file through those language specific parsers would. And no, I haven't worked on it beyond a functional prototype because adding it with the way roots is currently organized would make a mess, so I'm working on restructuring that first.\n. Yeah... that's the point: it uses compilation which is not only something that we already do (meaning we wouldn't need to run a separate static analysis tool) but it is something that is already written for every language we use (and many we don't, but could)... So we also don't need to write static analysis tools for each and every language we want  to support\n. An update on the progress of this:\n\nI started poking around the AssetGraph codebase again and I pretty much understand it. The way it's organized is really nice, but since it's written in JS the extensive use of classes and extenders really clutters up the code. So, after making some fixes and PRing them to the main project, I started converting the major components in coffeescript so we can use a normal class syntax (@HHSnopek is helping too). Right now, that is over here: https://github.com/slang800/assetgraph/tree/coffee-convert-assets\n\nOnce that conversion is finished, I'll start integrating AssetGraph into roots. I think I'll be building this on the current master, since v3 is far from finished and still has a broken history.\n. The `type` option of `fs.symlink` is only used on windows, the function works on all platforms, it just ignores the `type` option on mac/linux.\n\nAlso, I'm not saying that it would break windows, it would just not be as optimized on windows since it doesn't know how to make symlinks properly.\n. You can't get linux?! Oh god... that's so sad! Usually the ISOs are only 700-800M, but if that's too much I'll gladly send you a Ubuntu DVD. What's your postal address and CPU architecture?\n\nAs for the linux/mac only optimization, roots would still be \"accessible\" to windows users, it just would be at the same speed that it is right now because the platform can't do proper symlinks. And I think that we're also trying to do the caching idea, but we need #149 to be implemented first... But both of those optimizations can work together, so one is not a replacement for the other.\n. exactly\n\nOn Tue, Jun 11, 2013 at 4:41 PM, Jeff Escalante notifications@github.comwrote:\n\n> So I assume you meant that this would only happen on watch since assets\n> would definitely have to be copied on compile -- no?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/150#issuecomment-19294377\n> .\n. hmm... this issue came up when I used any `roots js` command. I'm running roots 1.3.6-4 and bower 0.9.2 is installed under that... not really sure what else... the commands fail to exit even on a new roots project\n. hmm... actually, now i can't reproduce it either... maybe I updated roots or something... odd\n. Lol, sorry... axis doesn't have drop-up menus. Actually, most of the style sheets for this project will be using axis, but I need to get some of the basic components from bootstrap.\n. I think you've seen too many \"default bootstrap\" sites. Great designers don't leave that vanilla bootstrap look on finished sites, it's just [meant to be] used as a platform to build on - especially since it provides \"components\" (which are very useful since web-components/x-tags are still very beta). Also, because it is modular and open source all the extra crap that comes with it can be left out.\n\nBootstrap has gotten a bad image because people misuse it, but it is still a powerful platform that designers can use... the idiots that use it are just much more obvious.\n\nOh, and lastly, Bootstrap is not a replacement for axis... they serve different purposes. Bootstrap provides high-level components while Axis provides low-level helpers/functions for writing Stylus.\n. Hmm... true. Perhaps we should provide an alternative... like integration with [x-tags](http://ui.x-tags.org/) to make installation easier with something similar to bower.\n\nPS: we should probably move this conversation over to a new issue since we've digressed pretty far from the original topic.\n. I don't think that L8D is talking about #110 ... I think `(?:s)?he's` saying \"If a project was not created using the same  version of roots that is running, there should be a warning to tell them that the project might be broken... and give them the steps they might need to do to upgrade their project\" ... that way we don't have to worry about project breaking changes, which is why I hereby +1 this.\n\nAlso, by knowing the version of roots that it was made with, we could even provide exact instructions to upgrade projects, and specify which upgrades don't have any project breaking changes (for which we could automatically change the comment in `app.coffee` to the latest version).\n\nThat being said, I'm not really sure why L8D closed this.\n\nPS: Almost nobody checks the version of roots that they're using for a project... I have like 30 roots based projects, if one of them was made with an old version of roots, I have long since forgotten, and I'll probably end up sinking 30 minutes in debugging when I go back to one that broke due to a roots upgrade.\n. This would also address your comment about making a mailing list in #145\n. Actually, we could probably just make one of the exports be `roots_version`, that way we wouldn't even need to search the file itself for that comment.\n\nAlso, we should only show the warning if it is a major version bump... like if the project was made with roots `1.0.10` but you're running `1.0.9` there shouldn't be a warning because there aren't any breaking changes between those versions. But if that project was instead made for roots `2.0.0`, there should be a warning because there are major feature changes.\n. now that I think about it, might we want to just nix snockets entirely? it is pretty much replaced by requirejs & building with modules is much cleaner than just concatenating files anyways. \n. +1 for \"combine it all into one file\"\n\nActually, what if we just use source maps to map the concat'ed file back to the original files. Then `watch` could just do the same thing that `compile` does (and we could deprecate `compile`). In fact, we could ditch RJS entirely in favor of CJS (since we're already using a build tool). Then we wouldn't have to write those ugly RJS wrappers.\n\n...After reading http://tomdale.net/2012/01/amd-is-not-the-answer/ and talking with the guys from component (https://github.com/component/builder.js/issues/103) I've totally changed my mind about RJS.\n. Source maps work in Chrome and prolly in Firefox... not sure about other browsers, but FF & Chrome are the only browsers with decent dev tools anyway (Firebug and Chrome's fork of Firebug).\n\nAnd not sure about the module-loader / combiner tool, but https://github.com/component/builder.js has something to do it.\n. Builder is a builder for building components... so yeah, it's pretty specific to components. What I would like to do is add a template for components and use something like https://npmjs.org/package/webmake to do all the CJS stuff... then if that turns out to be better than RJS, we would just switch the default template to use CJS.\n. rebasing this on v2 would be pretty hard, so i started over with a new branch\n. eh... but that makes conflicts more likely. also, for anyone who is familiar with node, `exports` just makes sense\n. How would this not make conflicts more likely? It makes all the names that used to be used in `exports` special in the local namespace, rather than just having `exports` be special (which people are used to). right?\n. but what about when exports is not the only variable in app.coffee? like here: https://github.com/slang800/editor/blob/master/app.coffee\n\n...in that, app.coffee is also used for starting up a http server on port 3000 to provide the project with an RCP\n. Hmm... didn't actually know about that `server.coffee` thing, thanks! Anyway, if we're not supposed to put other functions in app.coffee, then why not just nix it entirely and use a config file instead? Afterall, config files are made to hold configurations while modules are made to hold functions.\n. Yep, JS is supported out of the box... maybe we should make that more obvious in the docs, and add a [project template](https://github.com/jenius/roots/tree/master/templates) for a js/stylus/jade default stack.\n. Yeah, I'll take a look at it, thanks. As for twitter - I do, but only for playing with their API. The best way to contact me is via email or chat (slang800@gmail.com). Also, I am subscribed to all notifications for this repo.\n. perhaps, we should take some of the smaller, more polished changes out of this PR and ship them as roots v1.5 first, then come back to the larger changes after a rebase.... this PR is pretty huge right now.\n. Already made & merged the v1.5 branch... that took care of most of the small changes that this made, wanna split another chunk of this into a v1.75 branch?\n. that's strange... i expected this to be a really small PR... all I did is rebase v2 on the latest head... must've rewritten all the hashes because of the rebase :(\n. i'll close this and just push the rebase to v2 manually\n. any feedback on this?\n. sure! that should be pretty easy once this is merged in... it'll cut the number of commits in the v2 branch in half\n. Good point... I'll try testing it out later today to see if I get the same issues. However, given it's popularity, I would assume that those issues have been fixed.\n. as a temporary fix, I got component to compile automatically after roots finishes here: https://github.com/slang800/chazsouthard.com/commit/aa921e09b7316609aa2ef95b8b69f635c1dbedc2\n\n...decided to use it when building http://chazsouthard.com\n. oh, yeah... I don't think it can do that. maybe we should use https://github.com/substack/node-optimist instead \n. as part of this, we should make the `--debug` flag work, so it sets `opts.debug` in `config_parser`\n. nice refactor, but this issue isn't totally closed... the `--debug` flag doesn't work. also, since I don't really feel like opening up a new issue just for this: in `roots -h` the `js` commands need to be renamed to `pkg`\n. Great! the idea is that you don't want to allow versions older than the one you tested with (like `0.1.x` would), but you do want to allow small patches.\n. Yeah, if they already have an older version already installed globally or from another package that we depend on (see: https://npmjs.org/doc/install.html#ALGORITHM)... I don't think this would happen often, but it's better to be safe than to risk it.\n. dammit... this was supposed to be a PR for v1.5 ... since GH won't let me edit the PR, I guess I'll just rebase it after v1.5 gets pulled into master... then it won't have the extra commits. please delay pulling this one till it gets rebased\n. Yeah, I know I can edit it... I just didn't want to leave a messed up PR hanging around (since github doesn't let you delete them)\n. true... it isn't... that's why they have that `@css {}` syntax... but that doesn't really solve your problem. What we really need is a clear way to pass configuration settings to the compilers... i'll try to look at this for the add-transformers branch\n. No, I think he wants to have the CSS files concat'ed\n\nAnd, yes: that's exactly what I was talking about... I was just planning on doing it in add-translators because each compiler seems to offer a slightly different way to pass options, so translators sorta normalizes those differences.\n. it's pretty close, but `roots watch` serves from the public directory and compiles everything\n. whoo! thanks @jenius!\n. maybe we could just PR a `git clone` cli wrapper into https://github.com/sentientwaffle/gift, rather than redoing all that work, and making yet another git cli wrapper.\n. it looks like gift now has a clone method, btw\n. ehhh... this really shouldn't be part of roots. maybe we could just PR a `git clone` cli wrapper into https://github.com/sentientwaffle/gift and then use that\n. actually, according to https://github.com/nodegit/nodegit/issues/50, we could use https://github.com/faceleg/git-basic ... that could be worth looking at\n. +1 for node-gitteh\n\nyeah... now after looking through faceleg/git-basic that looks like crap. sorry for posting that w/out more review.\n\nand I don't mean that it shouldn't be a part of roots in the future, I mean this PR should be changed to remove it and put in in a separate lib now.\n. or just one link saying all the docs are on roots.cx\n. Yeah... I've just got a few errors left & then I'm gonna take a stab at part of the asset graph idea\n. Oh, yeah... the asset graph would be a few PRs... I'm just talking about a part of the compiler that would help with asset-graph\n. Ok, the only error that's left is snockets not working. So, I can just remove that from the tests, and we can drop support for it entirely, or I can write a transformer for it... the latter is probably more work.\n\nPersonally, I don't use snockets at all, so I'm not sure how useful it is.\n. Yeah, I think that CJS will replace this (and more), but since that's not ready, I'm not sure if we should get rid of snockets... If nobody is using it (like if people are just using RJS) then we can just get rid of it, but if have no data on roots UX... so I'll leave that call up to you.\n. Fixed a nasty little bug in transformers (which is now moved over to the roots-dev group). Now the thing with snockets really is the only test that's failing...\n\nAny decision on whether or not we should remove snockets?\n. snockets is added back & this seems stable\n. hmm... reorganizing the history sounds pretty hard... want me to just squash it all down into one commit?\n. whoo... history is rewritten\n. This code doesn't change any functionality, so it shouldn't add any tests. I do agree that we need more test cases, but this PR is just about refactoring and using transformers rather than our own ways of interfacing with compilers.\n. actually, transformers is well tested... it has a couple hundred test cases, which is part of why i choose it. what we are missing is integration testing, which i'm working on in asset-graph\n. so... ready to merge?\n. rebased this so it's ready to go\n. commit messages are fixed!\n. ugh... I noticed the title thing by the way that github displays it, but never realized that was a universal sort of thing. thanks for the explanation. i'll go fix them again\n. fixed the commit messages again, and added another part to this PR to close #204\n. Has anyone actually made plugins? ... I know that the feature has existed, but I've never actually seen it used.\n. ugh... yeah, I guess. Any idea on how we can avoid a breaking change without making the plugin api into a total mess?\n. That would be a great idea if the function was the part of the API that we are changing... the function that takes the parameters is the part that the user can define, it's the _caller_ that we are changing. If we want to maintain backwards compatibility, we would need the caller to call the compile function differently if it doesn't have an `options` param... and I don't know a good way to do that\n. hmm... or we could just make this part of the next release\n. @samccone \n\n> That would be a great idea if the function was the part of the API that we are changing... the function that takes the parameters is the part that the user can define, it's the caller that we are changing. If we want to maintain backwards compatibility, we would need the caller to call the compile function differently if it doesn't have an options param... and I don't know a good way to do that\n\nSo that bit of code would have to go inside of the plugins that we are trying to maintain backwards compatibility with.\n. hmm... well if we want a bigger change to bump the version for, I was playing around with a way to reorganize the adapters over in asset-graph: https://github.com/jenius/roots/commit/2981bce91af095565df7fa8a93a22acbd135193f :wink: \n. I added a few more commits that bring this a little closer to the organization in asset-graph (without breaking it)\n. yep... though i think i gotta rebase it\n. @jenius - I'm having a hell of a time re-basing this on top of the most recent commits because several of the files were totally rewritten as classes... could we just merge this and then re-implement those commits on this PR?\n. excellent! thanks!\n\nOn Fri, Aug 9, 2013 at 11:26 PM, Jeff Escalante notifications@github.comwrote:\n\n> Ok, I'll pull the branch down this weekend and give it a solid run-through.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/pull/181#issuecomment-22433878\n> .\n. I'll take a look at those issues. As for it being a single PR, we could just merge the first chunk of commits and then work on the next batch in another PR\n. Great! ... I kinda prefer underscores too, mostly from working with python... though since _all_ the native js functions are named with camelCase, I try to remember to use that.\n. Yeah, I've seen that same idea that it will reduce contributions. However, I think that:\n- Since this project is aimed at users of CoffeeScript, the vast majority of contributors will be (and currently are) users of CoffeeScript.\n- CoffeeScript is hardly a different language from JS, and thus requires very little learning to be able to program with it... So little that it will not be a barrier to contributing. To quote raganwald's essay, [CoffeeScript is not a language worth learning](https://github.com/raganwald/homoiconic/blob/master/2011/12/jargon.md):\n  \n  > If JavaScript was English, CoffeeScript wouldn't be another language like French, it wouldn't be a dialect like Jamaican Patois, it would be technical jargon like the conversation one programmer might have with another.\n\nAnd thank you for pointing that out, it is something worth considering.\n. I was actually hoping to make use of classes more anyway... though if we're using modules, where each file exports its functions, wouldn't this not matter anyway? ... I don't think I've seen anywhere where this would be an issue, unless I'm totally misunderstanding you.\n. great :D\n. No, it won't require a compile for each file. In fact, we won't even touch files that are not used in the HTML/CSS once asset graph is finished. It just watches while files that are needed are compiled, which is much faster than having a separate parse step.\n. But those files would need to be compiled anyway, so there is **~0** added computation time. Whereas yours needs to parse over all the files and then go back and compile them.\n\nAnd for detecting fonts & images, any static assets not used by the compiler will be detected in the HTML/CSS output. This way we only need to be able to search 2 very well supported languages, rather than making and maintaining parsers for atpl, coffeecup, dot, dust, eco, ect, ejs, haml, haml-coffee, handlebars, hogan, jade, jazz, jqtpl, JUST, liquor, mustache, QEJS, swig, templayed, toffee, underscore, walrus, whiskers, less, stylus and sass (to name a few).\n. true, but the _internal representation_ would be an array of `ignore_patterns`, generated from `ignore_files` & `ignore_folders`\n. how would that limit flexibility? we'd just be matching the patterns against filepaths \n. if we were just ignoring a tools folder, the internal representation would be a pattern like `/tools/**`, right?\n. That's odd... that is one of the first unit tests I added to this branch & it worked perfectly. Maybe it's because I didn't use readdirp for it... just minimatch... or because I went with your suggestion to represent files as being relative to the working dir... idk.\n\nAnyway, now that that's resolved, using an array of patterns should be fine, for the internal representation, eh?\n. I don't think that there is any way that this could strip functionality, since it matches against file paths. Can you come up with a use-case that this doesn't satisfy?\n. But people wouldn't need to learn minimatch because the patterns are only an _internal_ representation... the config would still let them ignore by files and folders.\n\nMatching folders with the same name could be an issue, but since we'll be deprecating this when we have asset-graph working, it shouldn't be a big one.\n. Well, I ended up doing a ton of reorganizing of roots into 3 main classes\n- Asset: represents a single file and deals with file watching, and compiling\n- Project: this represents the current roots project, and holds a bunch of configuration stuff\n- Print: a small class that handles printing to the console\n\nSo far, I am really liking this way of organizing, but it includes so many changes that I'm probably going to have to go back to the transformers branch and slowly apply the project structure used here, without breaking roots, like it is in this branch.\n\n...any feedback on how this is organized?\n. Sounds good, have fun on vacation :)\n. The discussion and code here has influenced the transformers branch a lot, but the transformers branch has surpassed this one, and a lot of this was just experimental restructuring. So imma close this PR and start a new asset-graph branch that will hopefully actually get around to implementing asset-graph.\n\nOh, btw, I have a copy of the code here saved locally in case there was something useful in this, but I deleted the branch to reduce the clutter\n. So am I! & Thanks!\n\nBtw, what's your other project?\n. Cool\n\nOh, also I should probably mention that I'm going to college in like a week or so. So I have no idea how it will influence my level of contribution to roots. It could either vastly reduce the amount of time I can spend on it, or actually having a schedule that aligns with the movement of the sun (rather than 40-hour days and 4.2 day weeks) could totally help me focus... idk.\n\nThough, since I've spent the last 4-ish years working with professional software developers like you, I don't think that introductory programming classes for my Software Engineering degree are going to be very time consuming or challenging. So after the inital shock of college wears off, I think I'll have plenty of time.\n. Wow, that's actually incredibly tempting... Carrot looks like a fantastic company and is certainly somewhere I'd like to work. But, while I know that I can get a job right now without a degree, I am worried that that might not be the case 10 or 20 years from now (which is actually the exact problem that my dad is having). Perhaps I'm biased by the  availability heuristic, but I think I should at least try college out. Also, the debt thing isn't a huge issue (I'm getting around 42k in scholarships) it's just the amount of time that I need to put into it.\n\nAs for my degree, it would actually be pretty fun to get a degree like Cognitive Science or EE, but since I am ultimately going to be going into some software-related field, I'd like a degree that says I'm good at software... I am more interested in college for the certification than the experience*, which is why I chose a college that focuses on engineering, not general education.\n\nAnd I actually might start looking for a job, but it would need to be part-time. Currently I just do simple freelancing, but working with a company would be much more consistent and would certainly pay better. Heck, if Carrot allows telecommuting I might even be able to work for them.\n\n\\* MIT, if you're reading this, I am talking about my current college, not you... if you accept/transfer me, it's totally for the experience ^.^\n. Crap... I don't even know how to detect the language that the terminal is set to. Well, this is going to be interesting to learn.\n\nAs for the actual strings, https://npmjs.org/package/i18n-2 looks like a promising library\n. Ah ha... the locale is in `process.env.LANG`! ... So now that we know we can actually determine the locale, we just need to start abstracting the messages from roots itself.\n. Hmm... maybe we could make some polyfill for it because that does seem like the place it _should_ be\n. yeah, but separate from roots (like update-notifier)... that doesn't seem like the job of roots\n. made @roots-dev to hold stuff till we get that username\n. come on @roots... you don't even use your account. it would be really nice if you could just give us the username so we have a good place to host our project.\n\nand yeah github has a [name squatting policy](https://help.github.com/articles/name-squatting-policy), but if you just _gave_ us the username it would save us the trouble of going through @github's support team\n. It's possible that he has a bunch of private repos, but it's very unlikely, considering that the best defense that @roots came up with was \"i'm not obligated to give it up\" rather than \"i'm a paying customer\"... also, you'd think that he would have at least some public activity other than responding to accidental uses of the @roots mention.\n\nAnd yeah, this repo is smaller in terms of stars, but the scope of the project is much larger and encompasses several repos, which is why we want a team to put them all in.\n. @retlehs - Yeah, I've used the roots WordPress starter theme, and I do freelance developing for WordPress themes. Thus, I know exactly what the scope of your project is. And not having activity on a username (unless Rick actually has private repos) is exactly what squatting is.\n\n@roots - you can change your email notification settings so that you don't get \"spammed\"... but I suppose you don't come to GH often enough to notice that setting.\n. well, the roots wordpress theme ended up getting the username, so lets just stick with `roots-dev`\n. note to self: https://github.com/mrmrs/rprtr/ would be really cool to integrate with roots metrics\n. Considering the fact that our audience is mostly web-developers and other computer-literate people, do we really care if IE8 breaks? @jenius, what is distribution of browsers visiting [roots.cx](http://roots.cx)?\n\nAlso, what are the elements that break? ... anything critical to viewing the page?\n. isn't there a better way to determine if we can symlink... maybe it's just the web-designer in me talking, but platform-sniffing seems bad... is there any way we could do feature detection?\n\n... otherwise, if platform-sniffing is the only good option, then I `+1` this\n. hmm... that's really weird... try `npm cache clean` (http://codebetter.com/glennblock/2012/02/27/my-tale-of-npm-woe-when-all-else-fails-clear-you-cache/)\n. hmm... i kinda feel like we do that already with open/closed issues and any further categorization can be done with tags (without requiring contributors to use an external app)... interesting idea though.\n. eh... not really sure what's wrong with it, but I'd be happy to rename it to whatever you want.\n. @yoshuawuyts - it's the ccTLD for the Christmas Islands ... not much meaning for our project. Also, it's not really the name that matters (jenus would actually be a fine team name), it's just easier to manage projects with the GitHub team setup.\n. hmm... maybe we could just move the repos into a team and then deal with thinking of a better name later?\n. Yeah, the \"googleability\" of roots is pretty poor, but changing the name now would be a huge pain... I guess we're just gonna have to become more popular than that wordpress theme.\n\nAs for the idea of using another language: very creative! The Yiddish translation looks pretty cool too: `\u05d5\u05d5\u05d0\u05b8\u05e8\u05e6\u05dc`. I don't have a clue how to type it, or pronounce it, and I'm not sure if we can use unicode in GH usernames, but :+1: for uniqueness! :D\n. Now that we've split roots up into like 5 different projects, and a ton of helper utils, it might be worth revisiting this. Also, in the time since this issue was last updated, GitHub added repo redirects, which will make this sooo much easier: https://github.com/blog/1508-repository-redirects-are-here. \n\nThe name \"roots-dev\" still kinda sucks... Moving into the carrot org would sorta make sense since they're funding most of the development of the project, but then it would be harder to add people who aren't a part of carrot because we'd need to deal with GitHub teams and we'd need to be very careful not to project a sense of exclusion that might prevent people outside of carrot from contributing (idk if company-name orgs actually do that, it's just something to be careful of). Also, there might be a little difficulty with keeping client-work separated from roots repos (because they're conceptually different, so it seems a little odd to put them in the same org).\n\nMaybe we could make an org with a name like \"carrot-labs\"? It would still maintain that nod to carrot, without mixing roots together with client-projects.\n\nThoughts?\n. could you post the contents of `app.coffee`?\n. yes: unit tests... right now we have really complicated tests that just do the full compile operation... what we could really use is unit tests that just test small components of roots.\n. aren't we gonna be merging the transformers branch soon anyway?\n. yeah... we could move the coding style section of the readme in there \n. what if we just let app.coffee have access to the args that are passed to `roots watch`? then we could have something like this in app.coffee:\n\n``` coffee\nif args['mode'] is 'staging'\n  exports['locals'] =\n    autoplay: true\nelse\n  exports['locals'] =\n    autoplay: false\n```\n. Actually, we can do this already in the transformers branch... I just added\n\n``` coffee\nroots = require('roots')\nconsole.log roots.project.mode\n```\n\nto `app.coffee` and called `roots watch`, and got this output:\n\n``` bash\n$ roots watch\nbuild\ncompiling... \ndone!\n```\n\nSo... we can put whatever config stuff we want in `roots.project` and we're set!\n. On the topic of making compilation more flexible, what kind of system should we give to let people attach on to the compiling process? ... I'm quite fond of an event-based system, but that doesn't totally fit in a linear compilation process... hmm.\n\nMaybe we could have adapters attach themselves to other adapters (in either the \"post\" or \"pre\" positions) forming chains and sub-chains. The first chain would start with a no-op adapter called \"compile\". Then we would attach adapters to the post-\"compile\" hook based on the file extension (like what we have right now in get_adapters_by extension).\n\nThis would allow use to say things like \"do X after the file is put through jade\" or \"do Y before 'compile' begins\"\n\nAnyone else got an idea?\n. yeah, we could start with just hooking to the before and after of compile, but then we get into the issue of \"what if we need to run multiple adapters after compile finishes?\" their order may not matter, but they do need to be run in a linear fashion. And then, if we already have an object that can be hooked onto in that way, why not make all the adapters have that feature by extending from a main \"adapter\" class?\n. hmm... I didn't think you would.\n\nI prefer the old syntax because it uses an existing mechanism to pass variables to roots, rather than us creating our own by `eval`ing app.coffee.\n\nAlso, I don't think that the old syntax \"required [node knowledge] to work with roots\". It only added familiarity for those who do work with node (which I think is a fair number of the people who use roots).\n. The downside is a lack of standardization. Node, as a platform, is built to use CJS style modules. The way that we are `eval`ing app.coffee _does_ work, but it's not the way variables are _supposed_ to be passed between modules. \n\nAlso, it creates more \"special\" variables. With the CJS syntax only `exports` is special. With the `eval`ing method the following are special:\n- ignore_files\n- ignore_folders\n- layouts\n- locals\n- templates\n- folder_config\n- output_folder\n- by\n- order\n- compiled_extensions\n- watcher_ignore_folders\n- watcher_ignore_files\n- debug\n- ...and anything else we add to the config in the future\n\nI think that making what we export more explicit is better because it reduces the chance of conflicts.\n\nAlso, we don't need to put `exports` before every variable. We could write it like this if you want it to be shorter:\n\n``` coffee\nmodule.exports =\n    # Files in this list will not be compiled - minimatch supported\n    ignore_files: ['_*', 'readme*', '.gitignore', '.DS_Store']\n    ignore_folders: ['.git']\n\n    # Layout file config\n    # `default` applies to all views. Override for specific\n    # views as seen below.\n    layouts:\n      default: 'layout.jade'\n\n    # Locals will be made available on every page. They can be\n    # variables or (coffeescript) functions.\n    locals:\n      title: 'Welcome to Roots!'\n      title_with_markup: ->\n        \"<h1 class='title'>Welcome to Roots!</h1>\"\n\n    # Precompiled template path, see http://roots.cx/docs/#precompile\n    # templates: 'views/templates'\n```\n. But it's not a configuration file, it has functions and gets executed: it's a script. If it were merely a configuration file we would write it in JSON or YAML, but it's not... we've given it more power than that.\n. OH! here's an idea for fixing this in a really clean way:\n\nEarlier this year I read an [article](http://arstechnica.com/tech-policy/2013/04/how-a-banner-ad-for-hs-ok/) (well actually like 10 articles) about how ISPs were able to inject advertising into webpages as they travel from a server to the browser. They did this by appending a little script tag to the page as it passed by... which is totally not OK, but nevertheless, it gives me an idea.\n\nWhat if we added a similar piece of server middleware to `lib/server.js` which would append a script tag to all outgoing HTML files? Then when that script tag loads, it displays our roots messages & loading icon like it normally does. This would mean we don't need to go though all the files in `./public` and write our error message (reducing I/O) and we wouldn't need to recompile everything when the error goes away (also reducing I/O)!\n\nThoughts?\n. currently working on modifying https://github.com/intesso/connect-livereload to serve this purpose\n. We could totally use this to avoid needing that \"livereload\" variable in `layout.jade` too... it can just be injected the same way!\n\nPS: well, it's working partially... proof of concept looks good\n. Yeah, I don't plan on _releasing_ it until it has the unit tests setup. However, I don't think that means we can't merge it into master and focus on fixing the bugs it has. Or even keep it in its current branch and just focus on it there.\n\nAlso, I think that duplicating PRs for both branches would really be a pain and prolly even mess up the history.\n\nAnd one more thing: transformers isn't purely stylistic changes, it reorganizes a lot of the structure of roots to be easier to deal with.\n\nAnyway, this _does_ have the drawback of halting releases of the 2.0 series for everything except bug-fixes... but I think that it's worth it because transformers is much easier to develop on, and we really do need to go through this rewrite before assetgraph is feasible.\n. hmm... those earlier commits are gonna need to be taken out or it's going to mess up the history because the hashes have been changed. also it's pretty hard to review with those in there\n. the 1st commit message is a bit redundant, but other than that, it's look'n good!\n. yep, I'll do that before I merge... but all at once so I don't have to go back if we find more changes to be made\n. This is a PR that is aimed at the transformers branch and is very dependent on re-factors that have been done in there. Also, I'm building all future work off of that branch because I don't want another big rebase and because it's much easier to work with the way that transformers is structured.\n\nAnd yeah, it should probably be 2 PRs, but since they aren't reflected in the history anyway and the other change is very small, it hardly seems worth it.\n. OH! I almost forgot to mention, this PR means we don't need that `livereload` variable in locals anymore... so this is gonna be a breaking, or at least a \"pretty big\" change, which is why I labeled it for `3.0`\n. Hmm.... ok, but I think I'll do that later. I think it would be easier to put all the pre-deprecation fixes in their own little area, as removed from the rest of the code as possible... at least that's something i'd like to try and see if it looks good. Or, if 3.0 has a huge number of changes, it might not even be worth giving it a deprecation period.\n\nAnd thanks! that actually means a lot. :smile: \n. Yeah, I haven't looked at this in a while, but if i remember correctly, it's ready. I'm not sure why it can't be merged automatically, but I'll look at that later tonight.\n. hmm... actually `parse_dynamic_content` is closer to what I want to abstract out... though doing the layout parsing in an adapter would be great too.\n\nThe parse_dynamic_content adapter would just take in the file, cut out the front_matter and put that data in the locals, then return the file-content with the front_matter cut out\n. The fact that it is the most complex part of roots is exactly why I want to cut it apart and put it in a nice self-organizing structure. Programming only feels complicated when you're organizing it wrong, and I think this is the case here... I would equate it to moving a webapp from \"jQuery callback hell\" to a nice MVC/Backbone layout... except we need to decide how to make our \"MVC\" part... and it's not quite as clean as MVC either.\n\nAnd I agree on pair programming... I can do a lot of collaboration remotely, but actually being in NY would be easier. If I weren't about to go through \"Welcome Week\" at MSOE I'd totally fly down to code with you, but I don't think I can get vacation time on like, day 1 of college.\n. +1 ... just found this issue myself\n. Also, as a side note: the gh-pages deployer (and the syntax for using it) is not mentioned in the output of the `--help` command. Different issue, but I wanted to write it down before I forgot\n. This issue seems to be fixed in https://github.com/carrot/ship/tree/master/lib/deployers/gh-pages. So once that is integrated into roots this issue can be closed.\n. It's `roots deploy --gh-pages` in roots v2. In roots v3 deploying has been moved into https://github.com/carrot/ship\n. oh, and now ship checks for uncommitted changes, so this can prolly be closed\n. This'll be a great temporary patch until we can get a more flexible compilation process, and thank you for making this so quickly. However, I would do the implementation I little bit different... I'll show you in a sec.\n. There, that'll do it! And nope, I was just going to watch the Travis build.\n. Lol, of course... darn, it's always those tiny changes that you think _\"couldn't possibly do anything\"_... well, at least we didn't actually merge it without testing :open_mouth: - _that_ would be bad\n. I think this is really 2 issues:\n- When/If we should switch to the better compiler... or if it will simply become the default compiler, which will remove that decision.\n\nFor this, you're right... we should probably just wait.\n- Using source maps.\n\nHeck yeah! We should start generating these when we're in \"dev\" mode. I don't even think we need to use assetgraph to do that. We should also add\n\n> keep all your scripts (even jquery) unminified and non-compiled because we minify them for you and make source maps\n\nto the docs because having to step through compressed/compiled code really sucks. Oh, also: we should serve the source maps from `/__roots__/sourceMaps/`, or something else under `/__roots__` ... that's the convention that I used in the script-injector thing so we might as well continue it.\n. > save ourselves from, \"There is an unexpected...\". This would of course be viewed in the console, which leads to another issue...\n\nWhat is the issue with it being viewed in the console? We can totally show errors in the browser with script-injector... it could even render it in mono-spaced terminal font.\n. > I believe this would only work with Chrome which I personally love and think everyone should use for developing in the web.\n\nYeah, I don't think that source maps are supported much in other browsers, but eh... whatever. they probably will be soon. Since there's no alternative to source maps there isn't much decision here, so support doesn't really matter.\n. Terminal !== console?\n\nI'm a bit confused on what you're saying...\n. Oh! Yeah, script injector fixes this... So we could add support for showing all sorts of errors in the browser using the `BrowserPrinter`.\n. Yeah, we can print the errors to the browser when the scripts don't compile... but source maps won't help with that at all\n. Actually... in regard to replacing WordPress with roots, I've found a pattern that I quite like and used for this WordPress site that I built with roots. Some of it needs to be a bit more polished, but the general idea works and makes for a very snappy site: http://slang800.github.io/chazsouthard.com and https://github.com/slang800/chazsouthard.com\n\nThis site pulls content from a WordPress backend using the [JSON API](http://wordpress.org/plugins/json-api/). But the site itself is static (and can therefore be cached). Only the content that the backend provides is dynamic. This means that roots can still act as purely a static site generator, with no need for blog features. Also, we get a very elegant [SoC](http://en.wikipedia.org/wiki/Separation_of_concerns) by keeping all content out of the site's repo.\n\nUnless there is a flaw in this pattern, I'd recommend that roots promote this sort of blog design, and move blog generation features out of the roots core. Instead we could just have a small app that parses the flat files for a blog and serves up JSON.\n. @jenius - I'm not saying that you need to use WordPress as the backend... you could just as easily write static JSON files for each post, or even generate them from another language, like markdown with the \"frontmatter\" we currently use.\n\nIt doesn't matter what the backend is that spits out this JSON; whether it is static or dynamic, ugly or properly written... the important part is the design pattern of moving content out of the roots project itself, to maintain SoC and to avoid needing to recompile your project every time you update your content. And since JSON is kinda the \"standard interface\" it makes sense to transfer the content using that.\n\n@HHSnopek I don't think assetgraph has anything to do with managing blog content... assetgraph deals with much more generic lower-level concepts, and doesn't really care about your project structure\n. @jenius actually, it doesn't even need to an extra JSON call: you could load it with the rest of your page by using JSONP and just adding a script tag to load it.\n\nThough, I suppose if you really want to render it server-side, we could make a roots extension that pulls JSON from whatever content-source you want, and then puts it in the local variables when the page is being compiled... That way all content sources would be able to be used for both client-side and server-side rendering.\n\nThe thing i just really want to avoid is tightly coupling a CMS or static file generator to roots... that would be a mess.\n. Why not use transformers for this?\n. I'd love to see that data too, and if it is very clear that the data is reported (and can be shut off) then I wouldn't be bothered by it. Also, I'd like for the data that is reported to be made publicly available.\n\nAny idea on what specific stats you want to gather? ... to start I'd say:\n- error reports (line, stack trace, exception)\n- version number of roots\n- maybe some stats on compilation time and size of projects (to see what we should optimize for)\n. Is there any good way to make Keen IO data open-source? ... so all contributors (and potential contributors) to this repo have access to the stats?\n. Sounds good... maybe we could make something with graphite... or actually, if we're gonna be making our own dashboard anyway, maybe we could go with an existing open source solution like https://github.com/paperlesspost/graphiti\n. Ehh... I feel like setting up GA is hardly worth it as a temporary solution, since reporting systems like graphiti already are built... the majority of the work lies in gathering the data when roots is running.\n. could we send tracking requests async, in a way that allows the command to return before the tracker finishes? After-all, we don't really need to do anything if the request fails.\n\noh, and this issue is linked to: #239\n. Good idea! ... that'd be a bit nicer\n. Didn't we already establish why we aren't going to be writing parsers for every language we want to support back in like #149?\n. I did make a working proof of concept, but it was based on the roots master from like 4 months ago, so I doubt that it would be useful now. But more importantly, if we implement the component to track the dependencies of each file right now (without a solid model for representing the files in projects), I feel that it is going to become unmanageable. \n\nThus, I think we should work on integrating https://github.com/One-com/assetgraph before we work on our dependency tracking component... that way we will have a nice, solid way to interact with projects and represent the relationships inside of them - rather than directly writing to files, like we do right now. \n. We don't need to do a full compile, we only need a starting point from which we find assets, which is the views which compile into html. Like what I said earlier:\n\n> All we need to do is find out what files the compiled HTML/CSS/JS needs. So this is what we do:\n> 1. Compile the views that aren't partials (everything in ./views that doesn't start with a _)\n> 2. Search the HTML that comes out for the URLs of any CSS stylesheets that it relies on.\n> 3. Use those URLs to find the files that are supposed to compile into said CSS stylesheets.\n>    example:\n>    if we find /css/main.css, we then see if /assets/css/main.css exists\n>    if it does, we copy it over to ./public/\n>    if not search for /css/main.styl, if that exists then we compile it into ./public/\n>    if a .styl file isn't there, we search for .less and so on for everything else that can compile to css\n>    if we just can't find anything, we throw a `Can't Find Ur Dang Source` exception\n> \n> if we find something like www.mycdn.com/script.js then that's not our problem. But, if we wanna be really fancy, we could download this file to a tmp folder, then rewrite the URL to point to it to speed up downloads in development.\n> 1. take those compiled CSS style sheets and search through them for anything that the CSS expects to @import.\n> 2. everything we found in step 4 gets sent to step 3\n> 3. go back to step 2 and repeat for JS\n. If you add a partial to the project, nothing happens until you reference it in another file. When you do referance it, it just gets added to the watcher as a dependant of whatever file references it.\n\nWhen you make changes to it, it just causes whatever files depend on it to be recompiled.\n\nWhy would anything break?\n. When the Jade is being compiled, the partials will need to be read - so we would see them at that point.\n. yeah, because there are 2 ways to include a file:\n- at compile time (which we can see by the files being read)\n- after compile time (which is in the outputted HTML, CSS, and JS)\n\nSo we need to check both.\n. Hmm... I actually never thought about _not_ committing the compiled project, but now that you bring it up - that could be really nice. I wouldn't have to run compile before every commit and it would clean up the changelog.\n\nI am kinda worried about not having a record of what changed in the compiled files, but since they're compressed and whatnot it would be pretty hard to look through them for changes anyway. And the whole idea of higher-level languages is to abstract from the lower-level representation. hmm...\n\n@samccone - do you ever run into issues caused by not having a record of the changes of the compiled files? like an increased difficulty in tracking down where bugs occurred in the git history?\n. I just noticed that the public folder was removed from roots.cx like 5 months ago... wonderful, I totally gotta try this.\n\nOh, btw - we should probably open a separate issue for `.gitiginore` not being copied over, if that's still happening.\n. how come we're not ignoring the components folder by default?\n\nI agree that having it configurable is good, but you really shouldn't be editing the stuff in there too much... it's like dependencies, if you start changing stuff then you'll have issues updating and you'll need to maintain a separate branch.\n\nImma reopen this for now, with the task of changing back the default and making it configurable... unless I'm totally wrong about this.\n. Eh... I suppose since assetgraph will be removing the need for ignoring folders like that anyway, it's worth it. Thanks for the explanation.\n. Much better - I used jQuery in that just because it was easier, and didn't really think about the possibility of conflicts. Thanks for rewriting it @samccone!\n. `package.json` definitely sounds like the way to go. It's nice because you can keep separate versions of compilers for all your projects (if you need to), and we can just use `npm install` to setup everything. I don't like the idea of having like 50 installations of stylus scattered across my projects folder, but I suppose I can just globally install the compilers that I use a lot, to prevent that. Also, we'll need to include a `.gitignore` in the default roots project to prevent `node_modules` from getting committed.\n\nAlso, we should add a way to automatically add compilers to the `package.json` & install them as needed (and perhaps remove them if they aren't needed).\n. Wouldn't it make more sense to launch the browser _before_, to make sure that the site you're about to deploy works?\n\nUsually i just do `cd public` and then `roots serve` before I deploy, so I know i'm not launching something that's broken.\n\nAlso, I generally don't bother opening up the pushed site directly after pushing to gh-pages since the changes can take up to 10 minutes to actually show up. What could be useful is if roots outputted the url of the site I deployed to the terminal, so I can `ctrl` + click and open it that way, but opening automatically seems annoying.\n. can this be closed?\n. ok, adding `layout.jade` to the list of ignored files fixed it, and you're right about the fact that it _should_ be ignored. However, I find it strange that it didn't work without ignoring that file. Why is that?\n. it's this: https://github.com/slang800/packwi.com\n. wait a minute... forgot this was already opened here: #223\n. present tense? but that would only have been true 6 hours ago... for the rest of _time_ it will have occurred in the past.\n. updated to present tense\n. ok, install command is fixed\n. squashed it all\n. closed by fd8ebd472a04017064fe63bf3f45e242871038c4\n. did this get fixed when #455 got merged or is there still something to keep this open for?\n. we could rename `lib` to `src` and then add pre-publish/publish scripts in `package.json`:\n\n``` json\n\"scripts\": {\n    \"test\": \"mocha\",\n    \"prepublish\": \"cp -rt ./lib ./src/*; find ./lib -name \\\"*.coffee\\\" -exec rm \\\"{}\\\" \\\\;; coffee -o lib -c src\",\n    \"publish\": \"rm -r ./lib\"\n}\n```\n\noh, and we'd need something like this in `/bin/roots`:\n\n``` js\ntry {\n  var commands = require('../src/commands');\n  var configure_options = require('../src/config_parser');\n} catch (err) {\n  var commands = require('../lib/commands');\n  var configure_options = require('../lib/config_parser');\n}\n```\n\nI wrote this in an old experimental branch but never got around to making a PR for it.\n. Or we could do the renaming in the pre-publish/publish scripts to avoid needing to change `/bin/roots` and rename a huge part of the repo. But I think you get the idea.\n. lol, that's exactly what I explained like 2 comments ago.\n. Yeah, I noticed that weird behavior and found this issue https://github.com/isaacs/npm/issues/3059. However, it _is_ deliberate and supports this usecase:\n\n> Far and away, the most common use case for prepublish is to compile coffeescript into javascript (or minify javascript into ugly javascript, which is essentially the same sort of task). Since this is deterministic, and not platform-dependent, it makes no sense to do it multiple times, on each install target in the preinstall event. It should be done, instead, right before publishing the package, so that it can be bundled in the arball. However, the objection to moving it there is that it no longer compiles CoffeeScript to JavaScript in `npm install <noargs>`. So, now it does.\n\n(from https://github.com/isaacs/npm/issues/3059#issuecomment-12282746)\n\nAnd if you happen to have run `npm install` in development all you need to get it back to its original state is `npm run postpublish` or maybe just git reset. But you shouldn't need to do `npm install` frequently anyway, because you can just use `npm link`.\n\nSo, a Makefile and gulp certainly aren't needed when this can be accomplished in a couple bash commands.\n. ugh, crap - you're right. needing to use the makefile for publishing kinda sucks, but I suppose it's better than the situation you described. I'll commit it to this branch.\n. I thought it might be a bower problem too, but this issue wasn't happening before, so I think it's something that changed in roots.\n\nAnd yep - I'll try to figure out what's going on.\n. Whoops... forgot about this issue, but I actually had a point that I was going to get to:\n\n@jnordberg, since we have incredibly similar projects, would you be interested in working with roots? We could really use your skills over here (especially considering the plugin system you designed), and I think that we've solved some of the issues you've been having with wintersmith.\n\nIn short; we're both interested in build systems so we should totally collaborate somehow.\n. Cool! Good luck w/ your new job :)\n\n...ok, now this can be closed\n. We started some comparisons over here: http://roots.readthedocs.org/en/latest/features.html#comparisons, but they're not quite complete. As for the plugin system: we've addressed this in roots-v3, which is in beta, but you can still feel free to use.\n\nOverall, I'd say roots v2 is only a little better than wintersmith - it adds some important things that we needed for our sites, but isn't a significant departure from the concepts in wintersmith. Roots v3, on the other hand, has evolved into a suite of loosely coupled development tools ([ship](https://github.com/carrot/ship), [charge](https://github.com/carrot/charge), roots, and [axis](https://github.com/jenius/axis)) as well as a few separate components taken out of roots, like [accord](https://github.com/jenius/accord). During the rewrite we've cut roots into a set of separate projects, which has allowed us to grow each part of roots independently into far more mature tools. For example, I've been able to add features like parallel compilation to accord (which would have been near-impossible in roots v2), and in ship we've made an extensive set of depolyers for sending static sites to s3, heroku, github pages, VPSes, and any other hosting server you could want.\n\nRoots v3 and wintersmith are not even comparable, and once v3 is released, the star count will reflect that.\n. Or we could automatically restart the watcher when app.coffee is modified, right?\n. Umm... Cite your source? The only regular clearing that would make any sense is deleting files older than _n_ hours... Otherwise it could delete files being used by active processes.\n. Lol, the internet is a bit of a vague source... Especially since the statement itself would then qualify as a source.\n. @declandewet that's actually a pretty cool idea. We would still need some way to dump everything to disk to inspect the compiled files and support tools that can't use streams. But it would be nice to manipulate the project that way.\n. `/etc/init/mounted-tmp.conf` deletes anything older than `$TMPTIME` days, which is `0` by default. Thus it deletes everything in `/tmp` when it is run. However, this only gets run at startup (before someone could start `roots watch`) so it isn't a problem. It doesn't just delete stuff at regular intervals.\n. +1 looks good\n. actually, this batch of commits can prolly be merged now - I'll do this in chunks. \n. Nope, this shouldn't have anything breaking. I removed the docs since they don't apply yet, and the \"compile to js\" commits are squashed.\n. The point is that there _is_ a commit on the v3 branch that removes all the files. What I'm trying to do is take the stuff from the v3 branch and make a reasonable commit log for it so it doesn't rewrite everything.\n. @ccsouthard - once you have ssh setup, I'll try debugging this directly. I've gotta learn how to use terminal on a mac, but I'm sure I can pick that up fairly quickly.\n. Wow, I never realized quite how similar it is... 0.o  I've always known that it was unix-based, but OSX actually _feels_ like another Linux flavor.\n. Oh, and plugins would just be initialized by passing the instance of roots to them:\n\n``` coffeescript\nmyplugin = require 'myplugin'\nmyplugin(roots)\n```\n\n...allowing them to define compilers, transformations... ect\n. Actually, no - haven't seen v3 but I'll be sure to take a look later.\n\nAnd I'm talking about cloning down an existing project, not making a new one - that part wouldn't change with this architecture... it would just be a regular command-line tool without the need for an API that you access in app.coffee.\n\nSprout looks cool - nice job.\n. Wow, that sounds great. I'd love to see any notes or docs you've written up so I can start working with v3. During those first few months of school I totally lost track of where roots is going and that break in the history has made it hard to catch up.\n\nAnd sure, I'd love to chat about it. Feel free to message me anytime I'm on Hangouts.\n. I finally got around to working with v3, and the way it is organized is pretty to what I was going for & all the major concerns are addressed. Making `app.coffee` the entry point for roots would have added a bit more flexibility than just having it export an object, but it probably would have added some complexity too.\n\nOverall, I really like the new organization!\n. I feel like adding support for precompiled templates and multipass compilation to brunch would be a lot easier than maintaining roots as an entirely separate tool.\n\nI understand some degree of NIH Syndrome on this, but I'm a _really_ big fan of code-reuse. So finding another project that does pretty much the same thing as roots would be hugely helpful because that means we don't need to build our own plugin interface, support for component, source maps generator, plethora of templates, and whatever other things brunch has already made. We can just build on top of theirs.\n. I'm not trying to \"quietly file issues in other projects\", I'm trying to see if we can reuse a huge codebase that's already been written. As for \"seeming more mature\", that's exactly what I said in the first post of this issue:\n\n> ...but more contributors, a full plugin system and seems to be more mature\n\nI'm sorry if I hurt your feelings - it's definitely nothing personal. I just want to make sure that I'm not spending time working on something that has already been created.\n. OH! btw: when I say \"maturity\" I'm talking about the code and its overall stability, not the use of doge and r kelly memes in issue discussions... those are cool by me.\n. nah, I'm still interested. I'm not settled on switching to brunch, it's just an option to think about. I might just end up cutting out some of the features I like in brunch and merge them into roots... idk, whatever ends up being the easiest solution I guess.\n. Yeah, AssetGraph is quite different from pretty much every existing compilation solution. Rather than just concatenating files, it parses relevant parts and builds a \"graph\" of all the relations between the files. Using this we can move/rename/inline/combine files, while still preserving all the links to those files. Also, since the relations are built by starting at an HTML file and scanning everything that it (or other files) link to, we only get assets that are actually referenced somewhere. Finally, because it's an _asset_ graph, rather than a _file_ graph we can apply transformations to stuff like in-line scripts - any type of asset, not just files\n\nThe only type of relation that it is missing is compile-time dependencies, but those will inevitably be read at some time during compilation, so we can duck-punch `fs` to get a list of every file that's read and assign those files as dependencies of the file being compiled.\n\nI haven't had time to implement that last part because of school (in the middle of the last week before finals right now), but if I'm moving to NYC, then I'm sure I'll have time to do it then.\n. I finished up sourcemaps in my accord fork: https://github.com/slang800/accord ... while keeping them composable, implementing logic to determine when an operation doesn't have a sourcemap and therefore cannot pass a map on to the next operation, and even including an adapter to inline them.\n. What I'm saying is that the only thing remaining is updating roots to use the new accord interface, rather than needing to finish anything in accord - sorry if the connection wasn't clear.\n\nAnd I'm actually waiting on https://github.com/jenius/accord/pull/55.\n. and then we'll just keep a request for people to PR new sites into the roots.cx repo?\n. It would be nice to have the ability to use aliases, but it should be highly discouraged in the interest of standardization.\n\nAs for changing the name of `app.coffee` to something else like `roots.coffee`... that could be nice. It would be a pretty big change, but it _would_ make more sense.\n. I can confirm this on linux too. I saw it a few times, but I think it was an error within npm\n. nice writeup - couple corrections though:\n- those strings that you pass back and forth are normally called args. they're the same ones that you would pass if you started the process in the terminal, and you can reuse the same arg parsing system that you would use for the CLI. in this case we already have one built: https://github.com/carrot/accord-cli\n- functions can be sterilized quite easily because they have a `toString` method. though I wouldn't recommend actually using that to pass functions around - even though it _can_ be done, it's very poor SoC.\n- async is not parallel and the difference between them is _huge_ in terms of performance. here's a good explanation: http://stackoverflow.com/questions/6133574/how-to-articulate-the-difference-between-asynchronous-and-parallel-programming (though I'm sure that a google search will turn up a couple hundred other articles)\n- using work queues is a really common pattern, so there's no need to roll our own when we can utilize an existing one like [compute-cluster](https://www.npmjs.org/package/compute-cluster)\n. - They get passed into `process.argv` and even the [docs](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) call them args:\n  \n  > `args` `Array` List of string arguments\n  \n  I'm not just making this up - that's really what they're called. And arguments don't need to have support for types - that's just a feature of most programming languages. But the OS doesn't use types when running a process: it uses [text streams](http://en.wikipedia.org/wiki/Standard_streams)\n- SoC is [separation of concerns](http://en.wikipedia.org/wiki/Separation_of_concerns). And what you're thinking of is the function's scope, not the function itself. The function itself can be stringified as long as it's written in JS (not a binding to native code). The function's scope can also be stringified, but it's pretty complex and even less worth pursuing. And if you want proof of this: look at https://github.com/slang800/visual-stack - both stringifying functions and recording the execution context were ~~used~~ abused horribly in that project.\n- That's nice, but I wonder if you have part of it mixed up, because:\n  - \"Add _true async_ compilation\" should say \"parallel\" because we already have async compilation\n  - \"sync-locking\" should be removed. theres no such thing as \"sync-locking\", that's just how async works. What you're trying to say is that the compilation tasks can be parallelized.\n  - \"cost for each file but have them _async_\" should say \"parallel\" because they would have been async even if they were in a single thread.\n- It doesn't do the same thing, compute-cluster has a task-queue for automatically distributing jobs to workers, cluster does not. And reinventing that task-queue is what I'm saying we should avoid.\n. did we ever look into using web-workers for this? like http://adambom.github.io/parallel.js/\n. also I'm doing this in accord-watcher, so no need for it here\n. That sucks that they're unmaintained. Though, doing `npm install phantomjs` _does_ allow the roots tests to find phantomjs properly.\n. My usecase for dev-deps is I'm writing something that uses roots as a build-step. When it's distributed on npm everything will be compiled into the public folder and jade/coffee/stylus don't need to be installed. But when I'm developing I need them to be installed.\n. yeah, like we don't have to encourage it or anything - it just needs to work properly. And sure, I'll add a test.\n. should be ready!\n. rebased!\n. recompiling once every 5 seconds for 300 seconds gives me this graph of ram usage:\n![image](https://cloud.githubusercontent.com/assets/1049204/3361868/497aa102-fb03-11e3-8670-914a7fc898a3.png). (related to #512)\n. aww... I was hoping that this was the issue :(\n. Or just spawn workers as needed... for example if you only have 3 files in a project, but you have an 8 core CPU, you don't want 8 workers running. But, if you add another 10 files during the course of `roots watch`, it should spawn more workers.\n. `/\\.([^.]*)$/` should be `/\\.[^.]*$/` because group 1 in the first one does nothing.\n\nAlso, are we sure that this works with files that have multiple extensions in their name? I would think that the solution is to insure there are no path separators in (what we assume to be) the file extension.\n. I think this will work: `res.replace(///\\.[^#{path.sep}]*$///, \".#{ext}\")`\n. @jenius yup: block regular expressions (with interpolation)!\n@nporteschaikin lol, noooo :P\n. Oh, sorry - I thought that was meant as a joke aimed at the how my regex looks incredibly over-complicated. The reason why that wouldn't work is because extensions could have periods (for multi-pass compiles), numbers, unicode chars, whatever. Limiting it to upper & lower case latin letters would break with any abnormal filenames\n. whoops, should've looked through the old issues\n. duplicate of #502, #477, and #504. Thanks for taking the time to report though! :D\n. as a side-note, unicode chars are totally valid in commit messages! how cool is that!?\n. [ship](https://github.com/carrot/ship) already does this... needs to be deployed to npm tho\n. on small sites (http://slang.cx is being compiled here) both solutions end up being about the same:\n![image](https://cloud.githubusercontent.com/assets/1049204/3362101/319058fe-fb06-11e3-8032-c30dc6f69fb2.png)\n. the jeet site is actually what I used for the tests in the first post - didn't realize where that was from until now. I just asked @jenius for a large site to test it on and I got a zip of yours :D\n. hmm... I bet if we passed as many `use` functions as possible, as strings (represented by something like the paths to require nib and axis-css), we could sterilize the args properly, pass them to a worker, and accord-parallel would be faster than roots-workers... removing the one thing that's holding us back from removing that extra worker logic from roots \n. True, the user _can_ require functions, but that's what the fallback to the main thread is for. With optimizations, we don't need to cover every single use-case (because that would result in a ton of extra logic for minimal gains). We just need to deal with the \"low hanging fruit\"... the simple optimizations that help most use-cases.\n. Yeah, I would love to have the roots workers fixed, but I have no idea what is wrong with them. If you think it's like a 1-day fix, then that's great, but the code is pretty complex so I feel like it's gonna be awhile before they're working properly. Since accord-parallel _is_ working properly, we should use that until roots-workers works.\n. how is this a suboptimal solution?\n. > I think that since the workers don't need to load the entire app.coffee and related config, we might be able to get better performance than roots/v3#workers (and certainly better SoC). It doesn't compile everything in worker process (it falls back to compiling in the main process when the args can't be sterilized), but I think that it will still offer better performance because of the reduced deps that the workers need to load. And if it doesn't - then it will just be another accord-based module that someone else can hopefully make use of.\n> _(from TeamSnippets on Jun 20th)_\n\nJust because you move more work into a parallel process, doesn't mean it will be faster - you have to take into account how much overhead is added to each worker process. Also, the issue with passing functions isn't a hard limit on the speed of accord-parallel - some functions can be sterilized and there even ways around passing functions in the first place. In fact, I think it's easier to address the performance concern in accord-parallel than it is to fix the performance degradation in roots. Especially given the simpler architecture of accord-parallel.\n\nAnd for the record, any compilation job that is given a function as an arg never leaves the main thread. It doesn't get pushed back from a worker thread, and it's not done on a per-compiler basis (it's a per-job basis).\n. > I really hope that you will be able to accept that this has to be a little less clean for the sake of optimization.\n\nIf the optimization was giving us 10-20x faster execution, I could understand sacrificing a little simplicity. But that's not the type of optimization I'm seeing (I would back this up with more than just the minimal testing I did in #512, but I can't even get roots with workers to compile the carrot.is site because of how much that PR broke). The issue is: engineers are vastly more expensive than CPUs. So unless you have an extremely effective optimization, an optimization that adds ~0 complexity, or are operating at such a scale that fractions of a second add up to major costs, it's not worth it. It's much more cost-effective to just throw more computing power at the problem.\n\n> If you honestly think that you will be able to do either of the above, I would love to hear about it.\n\nI think I can get pretty close to the same speed (maybe even better - not sure) with some clever tricks in accord, and a few changes to roots that allow more jobs to be delegated to worker threads - like not trying to pass helper functions and locals to languages like coffeescript and markdown (that don't accept them anyway). I want to focus these optimizations away from the roots core, which is already quite complex, and do them in a separate lib like accord and accord-parallel.\n\nOh, and if we could revisit what I mentioned above:\n\n> The code is pretty complex so I feel like it's gonna be awhile before they're working properly. Since accord-parallel is working properly, we should use that until roots-workers works.\n\nRoots-workers still isn't fixed, and can't compile the carrot site, so I need to have people install my fork every time someone needs to compile the site, which is pretty annoying. Could we please revert the workers PR - at least until it's working properly? I'm not saying that you should stop trying to get workers to work - if you can implement them in a way that outperforms accord-parallel and doesn't introduce a disproportionate amount of complexity (relative to the speedup it gives), then that's great and clearly we should add it in when that happens.\n. Thanks for understanding.\n\nOh, and I almost forgot: I've started focusing on tracking dependencies of files during compilation. After thinking about it, I probably should have worked on optimizing that before I even looked at running parallel processes. Just using the new `isolated` property, we can cut a whole bunch of files out of each compilation pass (isolated files never need to be recompiled unless they themselves are modified). After that's working, we can begin expanding into tracking Jade deps, and implementing some sort of generic dep checking. And then I'll go back to looking at passing jobs to workers if we still have a significant performance issue.\n\nOH! and one last update: last weekend I managed to get Jade to compile in a worker by moving the functions out of \"locals\" and into a Jade mixin. There was still an issue with the `site` variable (https://github.com/carrot/roots-dynamic-content/issues/9), but it's very close to working... just took a bit of restructuring for performance.\n. I thought we were just gonna revert & cherrypick the changes we want to\nkeep, right?\n\nOn Fri, Jul 25, 2014 at 11:30 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> Hey @slang800 https://github.com/slang800 when you have a minute can\n> you rebase this on top of the v3 branch?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/514#issuecomment-50165307.\n. ooh, I didn't realize that you already reverted it - yeah, I'll rebase\n. rebased & cleaned up!\n. Dynamic content works in the accord-parallel branch (#514) - you can use that till it works in main v3.\n. I think this is still a pretty important issue...\n. +1\n. @tuvistavie - we could still include the updates to the test files, though.\n. cool, now just squash the 2 commits together and it should be all set to merge :smile: \n. So long as the data that we gather is publicly available, anonymized, and the collection is optional - I'm good with it.\n\nOh, also: some people might be angry if this is enabled by default and/or not obvious... I remember ungit had some major pushback from users when it didn't mention that it had analytics https://github.com/FredrikNoren/ungit/pull/91\n. There's probably still calls to the regular fs module somewhere... did you commit your modified version of jade anywhere? Oh, and jade isn't the only module that makes calls to fs - some of the other accord adapters call fs directly.\n. Most of the compilers can be fed strings (meaning we can do the file reading in accord), it's just a couple of the more complex compilers like Jade that need to be patched... though I've started that in http://github.com/slang800/yade (along with getting rid of a TON of synchronous fs calls). Eventually, I plan to get those changes merged into jade itself, but in the meantime I've made it easy to support alternative compilers in accord (see: https://github.com/jenius/accord/pull/50).\n\nAlso, that file-limit changing code is still in roots, the try just lets it fail silently on linux - so it should still allow Mac to compile until we can patch the compilers that make calls to fs.\n. If you have your site on github, I'd be willing to take a look through it and see if I can pick out the problem & file a proper bug report for it.\n. oh, if you look at the latest travis build (https://travis-ci.org/jenius/roots/builds/32655556) that's the exact same error that I'm getting on my machine... something (that we didn't have the version locked down on) must've updated within the last 24 hours\n. here's what I'm getting from diffing the travis logs:\n- serve-static@1.5.1 -> serve-static@1.5.2\n- chokidar@0.8.3 -> chokidar@0.8.4\n- fsevents@0.2.0 -> fsevents@0.2.1\n\n...but the npm install logs aren't sorted normally (it's by the order that they installed in), so I might be missing some other changes in the diff\n. oh, and:\n- coffeelint@1.5.5 -> coffeelint@1.5.6\n- send@0.8.1 -> send@0.8.2 (dep of serve-static)\n\n... some sort of a service to query recent updates based on the packages listed in a given package.json would be incredibly useful right now... probably not even that hard to build\n. This isn't a problem in roots and it's not _exactly_ npm's fault either - they use UNC paths for everything, which is how they are able to make that structure in the first place (see: https://github.com/npm/npm/issues/3697). It's really a problem with Windows APIs (including Windows Explorer) not being able to utilize the real maximum NTFS filepath length of 32,000 characters. But npm _is_ working to make a better way to deal with this limitation (see: https://github.com/joyent/node/issues/6960#issuecomment-46704998)\n\nAs a workaround, if you want to remove a folder, you can do `npm install -g rimraf` and then use the rimraf bin to do `rimraf path\\to\\folder`.\n. This shouldn't cause roots to totally \"break\", you're just not able to use Windows Explorer or other software that relies on poorly written Windows APIs to manipulate the directory structure that roots is installed in. You should still be able to run and use roots.\n. Maybe you could just use `roots watch --no-open` and then open chrome canary manually? That's what I do when I'm developing in my non-default browser.\n\nIt would probably be more of a pain than it's worth to specify what browser you want opened, especially since you could just do something like `google-chrome http://localhost:1111 && roots watch --no-open` to get the same effect.\n. @ccsouthard - the code is updated to work with v3 & compiles on my machine... I'll try to work with you to debug your error later, but right now I'm super busy with intermedia & have 0 freetime\n. It would be pretty hard to get roots to run in a web-browser, but there are plenty of projects that demonstrate roots:\n- https://github.com/slang800/slang.cx\n- https://github.com/jenius/roots.cx\n- https://github.com/slang800/chazsouthard.com\n- https://github.com/jenius/axis-www\n\nNot sure if we could open-source carrot.is... _maybe_ a stripped down version of the repo with issues, authentication stuff, and private pages removed. That would make a great example project for showing off dynamic content and how to build a medium-sized site with roots. However, we'd need to have a discussion about it. Thoughts @jenius?\n. This is what I'm focusing on in accord-watcher and accord-parallel, btw.\n\nOh, and jade does return a dep tree (except for when you compile into a function). Oh, and not exactly all of our operations are async... inside the Jade compiler there are actually some synchronous file reads. I started looking at that in yade, but it's gonna take some time to fix.\n. see: #396\n. Oh, and this was on the first run after updating from roots rc10 to roots 3.0.0\n. [accord](https://github.com/jenius/accord) supports sass, so you just need to do `npm install node-sass --save`, restart roots, & you'll be gtg.\n\n*edit: it's \"node-sass\", not \"lib-sass\"\n. Nope, you shouldn't need to do anything to your app.coffee... accord will just see that node-sass is installed and it'll use it on all the sass files it finds. All that config is handled for you in accord: https://github.com/jenius/accord/blob/master/lib/adapters/scss.coffee\n. Turns out the error pictured above originated from `cli/watch.coffee` (in the `on_error` function). And is something with WordPress/Jetpack\n![screenshot from 2015-02-23 17 28 50](https://cloud.githubusercontent.com/assets/1049204/6339092/8ac9cf18-bb81-11e4-92d1-3a10b3d02263.png)\n. do the error messages come with a stacktrace when you get them?\n. Surely you have gotten some error message from roots before, right? Because, almost every time I get an error message from roots it comes with no stack trace, and a unicode X symbol.\n\nAs for your questions:\n1. not really\n2. is it not reproducible for you?\n. ",
    "exdeniz": "in css file in public\n\n```\nb,\nstrong {\n  font-weight: bold;\n} <- !!!58 line!!\nblockquote {\n  margin: 1em 40px;\n}\n\n```\n\nAny manipulation of the CSS file is not helping. I cut css file and still get the error\n\nstyle.styl\n\n```\n.container \n    width 960px\n```\n\nstyle.css from public \n\n```\n.container {\n  width: 960px;\n}\n```\n. I found why this error occurred. I had another file on pure CSS and compiling stayed on it\nBut there is nothing criminal. Here is the code for the class of 58 lines.\n\n```\n.nivo-box {\n    display:block;\n    position:absolute; <- 58 line   \n    z-index:5;\n    overflow:hidden;\n}\n\n```\n. Sorry. My mistake. I created a folder \"_partial\" and its files have been without the \"_\". R oots compile only one file there, and only after a restart did compile master.styl. Maybe we should, that would ignore the roots and folders with the prefix '_', too.\n. I create folder  'assets/css/_partial' and moved stylus file without prefix \"_\"\nRoots compile only one file and put to 'public/css/_partial/', but don't compile 'master.styl'.  I thought the prefix _ applies to folders too, but is not. \n. in css file in public\n\n```\nb,\nstrong {\n  font-weight: bold;\n} <- !!!58 line!!\nblockquote {\n  margin: 1em 40px;\n}\n\n```\n\nAny manipulation of the CSS file is not helping. I cut css file and still get the error\n\nstyle.styl\n\n```\n.container \n    width 960px\n```\n\nstyle.css from public \n\n```\n.container {\n  width: 960px;\n}\n```\n. I found why this error occurred. I had another file on pure CSS and compiling stayed on it\nBut there is nothing criminal. Here is the code for the class of 58 lines.\n\n```\n.nivo-box {\n    display:block;\n    position:absolute; <- 58 line   \n    z-index:5;\n    overflow:hidden;\n}\n\n```\n. Sorry. My mistake. I created a folder \"_partial\" and its files have been without the \"_\". R oots compile only one file there, and only after a restart did compile master.styl. Maybe we should, that would ignore the roots and folders with the prefix '_', too.\n. I create folder  'assets/css/_partial' and moved stylus file without prefix \"_\"\nRoots compile only one file and put to 'public/css/_partial/', but don't compile 'master.styl'.  I thought the prefix _ applies to folders too, but is not. \n. ",
    "skddc": "I thought that's what the question tag is for. ;)\n\nAlso, this is certainly a question about roots. I'm asking if there are any variables available in a view template that let you change the output based on e.g. the template name or path. I don't know how jade has anything to do with that. I also don't want to store a state on the DOM.\n. That'd be great! Ideally we'd have both the template name and the whole path, so that you can discern various index templates in subdirectories for example.\n. Oh, right. Silly question. Thanks!\n\nAn absolute path would probably be a better default, yes.\n. I thought that's what the question tag is for. ;)\n\nAlso, this is certainly a question about roots. I'm asking if there are any variables available in a view template that let you change the output based on e.g. the template name or path. I don't know how jade has anything to do with that. I also don't want to store a state on the DOM.\n. That'd be great! Ideally we'd have both the template name and the whole path, so that you can discern various index templates in subdirectories for example.\n. Oh, right. Silly question. Thanks!\n\nAn absolute path would probably be a better default, yes.\n. ",
    "denisfl": "But how I can use css (with sass preprocessor) with your \"CSS Library\" (which is currently using stylus)?\n. I realized. Thank you.\n. I will try Stylus but now in our team is used sass. :)\n. But how I can use css (with sass preprocessor) with your \"CSS Library\" (which is currently using stylus)?\n. I realized. Thank you.\n. I will try Stylus but now in our team is used sass. :)\n. ",
    "jsncbt": "Thanks for the fast reply! Look forward to this being resolved as it is stopping me from using roots which in turn makes me very sad.\n. That all makes sense, thanks for that. I am taking a little bit getting use to Stylus coming from LESS.\n\nI would find the sample project helpful if you're able to upload it.\n\nCheers\n. Thanks for the fast reply! Look forward to this being resolved as it is stopping me from using roots which in turn makes me very sad.\n. That all makes sense, thanks for that. I am taking a little bit getting use to Stylus coming from LESS.\n\nI would find the sample project helpful if you're able to upload it.\n\nCheers\n. ",
    "christianbundy": "I'm going to get started on this, we'll have a mockup by the end of the day!\n. It's been a busy day  - I threw together a quick mockup of the first thing that popped into my head (obviously not a vector image). My paths are rough, and I used destructive tools to refine a few edges.. I just wanted to get my thoughts on paper (pixels?) today. As you can tell this is _very_ unpolished. \n\n![icon](https://f.cloud.github.com/assets/537700/49124/319a0f6e-5942-11e2-91ad-253ef4bc4204.png)\n. I don't know how I didn't see your comments @jenius! I just assumed that there was no branding to start with, but that link changes everything!\n. I'm going to get started on this, we'll have a mockup by the end of the day!\n. It's been a busy day  - I threw together a quick mockup of the first thing that popped into my head (obviously not a vector image). My paths are rough, and I used destructive tools to refine a few edges.. I just wanted to get my thoughts on paper (pixels?) today. As you can tell this is _very_ unpolished. \n\n![icon](https://f.cloud.github.com/assets/537700/49124/319a0f6e-5942-11e2-91ad-253ef4bc4204.png)\n. I don't know how I didn't see your comments @jenius! I just assumed that there was no branding to start with, but that link changes everything!\n. ",
    "brooss": "I'd like to work on this (and claim the bounty) but I'm not quite sure what the best method of submitting a solution is. \nI'll just attach a raster version of what I've got to this thread for now. Your thoughts? \n![roots](https://f.cloud.github.com/assets/2663707/235634/743ae3b6-87b4-11e2-89db-a2ec3f2923a2.png)\n. Another attempt.\n\n![roots-new](https://f.cloud.github.com/assets/2663707/239499/c44335e4-889e-11e2-8954-839b8b2123c7.png)\n. samccone, this was an attempt to do something in that (rocket) style using your existing color scheme :confused: \n. I'd like to work on this (and claim the bounty) but I'm not quite sure what the best method of submitting a solution is. \nI'll just attach a raster version of what I've got to this thread for now. Your thoughts? \n![roots](https://f.cloud.github.com/assets/2663707/235634/743ae3b6-87b4-11e2-89db-a2ec3f2923a2.png)\n. Another attempt.\n\n![roots-new](https://f.cloud.github.com/assets/2663707/239499/c44335e4-889e-11e2-8954-839b8b2123c7.png)\n. samccone, this was an attempt to do something in that (rocket) style using your existing color scheme :confused: \n. ",
    "ryan2611": "First comment on github.\n\n![Screen Shot 2013-03-09 at 19 40 08](https://f.cloud.github.com/assets/2445329/240090/84eb82a4-88f1-11e2-842f-8887fd5dd35e.png)\n. Fucking dope.\n. First comment on github.\n\n![Screen Shot 2013-03-09 at 19 40 08](https://f.cloud.github.com/assets/2445329/240090/84eb82a4-88f1-11e2-842f-8887fd5dd35e.png)\n. Fucking dope.\n. ",
    "PatrikLythell": "Had some extra time today. Let me know if you think it's interesting.\n\n![roots-sugg1](https://f.cloud.github.com/assets/999259/363222/58c3676c-a1fd-11e2-9a92-d88cf08198bc.jpg)\n![roots-sugg2](https://f.cloud.github.com/assets/999259/363223/58d7c216-a1fd-11e2-89f1-1dc883f0eab5.jpg)\n. @jenius thanks! Some more insight to this idea: The lines symbolize roots and the color scheme is based on if you mix them all you land on the base color of #3e444d (Ok so not much of an idea, haha).\n\nWill chip away at this when I have time over the next couple of days and post here.\n. Thanks for kind words. No big update but digging it more (or at least not looking like every other logo thing ever) without the circle. Feed back mah dudes!\n\n![roots-good_03](https://f.cloud.github.com/assets/999259/386010/8bebcdfa-a699-11e2-8618-1228e02ce962.jpg)\n. No worries, happy to! Here's one based off of current color scheme:\n\n![roots-square-oldcolor](https://f.cloud.github.com/assets/999259/386902/cf8d1e1a-a6b2-11e2-844c-b8b499453891.png)\n. Not exactly sure how the standard goes on this but:\n\nhttps://www.dropbox.com/s/puont0w5qneojyn/roots-square-new.svg\nhttps://www.dropbox.com/s/p3626g98ouj6lvq/roots-text-new.svg\n\nHopefully this is what you need. Glad to help, hopefully I can keep helping out somehow.\n. Whoops. Here it is:\n\nhttps://www.dropbox.com/s/p3626g98ouj6lvq/roots-text-new.svg\nhttps://www.dropbox.com/s/x7ouomw5w5hwf0z/roots-circle-new.svg\n. That's alright @jenius, happy to help.\n\nBuy me a pint next time you're in London!\n. Had some extra time today. Let me know if you think it's interesting.\n\n![roots-sugg1](https://f.cloud.github.com/assets/999259/363222/58c3676c-a1fd-11e2-9a92-d88cf08198bc.jpg)\n![roots-sugg2](https://f.cloud.github.com/assets/999259/363223/58d7c216-a1fd-11e2-89f1-1dc883f0eab5.jpg)\n. @jenius thanks! Some more insight to this idea: The lines symbolize roots and the color scheme is based on if you mix them all you land on the base color of #3e444d (Ok so not much of an idea, haha).\n\nWill chip away at this when I have time over the next couple of days and post here.\n. Thanks for kind words. No big update but digging it more (or at least not looking like every other logo thing ever) without the circle. Feed back mah dudes!\n\n![roots-good_03](https://f.cloud.github.com/assets/999259/386010/8bebcdfa-a699-11e2-8618-1228e02ce962.jpg)\n. No worries, happy to! Here's one based off of current color scheme:\n\n![roots-square-oldcolor](https://f.cloud.github.com/assets/999259/386902/cf8d1e1a-a6b2-11e2-844c-b8b499453891.png)\n. Not exactly sure how the standard goes on this but:\n\nhttps://www.dropbox.com/s/puont0w5qneojyn/roots-square-new.svg\nhttps://www.dropbox.com/s/p3626g98ouj6lvq/roots-text-new.svg\n\nHopefully this is what you need. Glad to help, hopefully I can keep helping out somehow.\n. Whoops. Here it is:\n\nhttps://www.dropbox.com/s/p3626g98ouj6lvq/roots-text-new.svg\nhttps://www.dropbox.com/s/x7ouomw5w5hwf0z/roots-circle-new.svg\n. That's alright @jenius, happy to help.\n\nBuy me a pint next time you're in London!\n. ",
    "jonki": "Great, thanks! ;) it was one of most desirable thing for me. Will submit PR in few hours ;)\n. Great, thanks! ;) it was one of most desirable thing for me. Will submit PR in few hours ;)\n. ",
    "nickreffitt": "Yeah running that worked fine for me :)\n. Yeah running that worked fine for me :)\n. ",
    "monkeez": "I've tried doing this and it doesn't seem to work, my title tag is coming up empty.\n. I like the idea of having multiple pages of posts, with the option of number of posts per page. Infinite scroll would be welcome too, but as you said it may cause problems for sites with a lot of posts.\n\nMaybe also single page pagination? Being able to go from the current post to either the previous or the next one.\n. Is it possible to have a custom layout for jade files outside of the views folder?\n\nFor instance I have a \"posts\" folder in the root directory with an `index.jade` inside of it. So when I go to `http://localhost:1111/posts/` this page is displayed. Is there a way to target this page for a custom layout? I tried this but it didn't work:\n\n```\nlayouts:\n  default: 'layout.jade'\n  'posts/index.jade': '_posts_layout.jade'\n```\n. That's what I have done with no luck.\n. I have been doing that for my posts. Here's a simple version of what my folder structure looks like.\n\n```\nposts\n    index.jade\n    post1.jade\n    post2.jade\nviews\n    _single_post.jade\n    _posts_layout.jade\n    index.jade\n    layout.jade\n```\n\nI want to use `_posts_layout.jade` on `posts/index.jade`. The reason I'm doing this is I want `example.com/posts/` to be an archive of all the posts and `example.com/posts/post1` to be an actual post.\n\nIt works fine currently except for being able to apply a custom layout to `posts/index.jade`, if I add front matter won't it think it's a post?\n. I must be doing something wrong because I've tried commenting out `# 'special_view.jade': 'special_layout.jade'` in `app.coffee` and adding both `'special_view.jade'` and `'special_layout.jade'` to the `views` folder, yet it keeps on using the default layout.\n\nI'm using `2.1.0` by the way.\n. The reason why I want my site set up that way is because I want `example.com` to be a static homepage, and `example.com/posts/` to be an archive of posts.\n\nThe default blog template has a post located at `example.com/posts/post-title`, but if you try going to `example.com/posts/` there's nothing there which seems counter intuitive to me.\n\nI also tried setting this in my app.coffee but it's still using the default layout:\n\n```\nlayouts:\n  default: 'layout.jade'\n  '../posts/index.jade': '_posts_layout.jade'\n```\n. Wow, thanks for all the help. Sorry, I'm new to all this stuff so it is taking a bit to sink in.\n. OK, so I've finally got around to testing that example you posted and it's not working for me. So I'm guessing something wrong is happening on my end with my PC or something.\n\nThe `index.jade` is getting processed fine but `posts/index.jade` is getting spat out like this:\n\n```\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n```\n\nThat's all that's in `posts/index.html` in the public folder, so none of the layout is coming with it. So for some reason my custom layouts aren't being applied from `app.coffee`.\n\nWhat course of action should I take from here? Un-installing and re-installing Roots? I'm on Windows 8, could it be  a weird OS thing?\n. Well I've started using jade layouts as per one of your suggestions and everything seems to be working the way I want. So I'm not sure why custom roots layouts aren't working for me, but I guess at least I've got a workable solution.\n. Cool, that seems to work now!\n\nAlthough now I'm getting a different problem, when I run `roots watch` on the default roots installation I'm getting chrome opening up with a blank window, is this supposed to be the case? No `html` file can be found in the public folder so I guess the default index file isn't getting copied over for some reason?\n\nThanks for being a fan of my work, though I'm not sure what work you're referring to :).\n. OK it seems like the problem was occurring cause I had a period in my project name. So for example I ran `roots new example.com`, and this was causing it not to compile properly.\n. Well, I've got it all up and running on my laptop but still having issues on my PC (also Windows 8), after changing the file in the sprout folder as mentioned earlier I'm getting a new error:\n\n```\n{ [Error: Command failed: fatal: Not a git repository (or any of the parent directories): .git\n] killed: false, code: 128, signal: null }\n```\n\nI must be doing something wrong?\n. So `roots tpl reset` didn't work, however I think I found what is causing the issue. Creating a new roots project on my main HDD that Windows, Node and roots is installed to works, whereas trying to create a new project on my secondary drive is failing and giving me the error mentioned earlier. It seems like for now a workaround would be to create the project on the main HDD then copy it over to the secondary.\n\nAny idea on why this could be happening? \n\nI understand it can be difficult to get software like this working on different platforms, I don't envy you :).\n. Is there any way I can get more information about the error that is occurring?\n. I mean is there like a debug mode or something I could run so I can pinpoint at what point the error is actually occurring?\n. Yes it's the same error, the one about it not being a git repository.\n. That's OK, it seems to work just moving the project directory to where I want after creating it on the main drive.\n\nI pretty much only put programs on my main drive and all my work on a secondary so if I need to reformat/reinstall Windows I don't have to worry about backing up stuff from the main drive. It's just something I've always done.\n. Hey @jenius I've issued a pull request https://github.com/jenius/roots/pull/438/, I also updated the multiple files test to make sure this functionality works.\n. Hey, I'm just heading to work at the moment so I won't be able to look at\nthis for a number of hours. I don't mind if you update it and commit it\nyourself.\nOn 22 Apr 2014 09:02, \"Jeff Escalante\" notifications@github.com wrote:\n\n> There have been an absurd number of changes to things since this was\n> submitted, if you can't and/or are busy let me know and I can do it. I just\n> want you to get credit for the commit [image: :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/pull/438#issuecomment-40986875\n> .\n. I'm running on Windows 8.1 64bit, when I install roots I get this:\n\n```\nC:\\Users\\mitch>npm i roots -g\nnpm WARN optional dep failed, continuing fsevents@0.3.0\nC:\\Users\\mitch\\AppData\\Roaming\\npm\\roots -> C:\\Users\\mitch\\AppData\\Roaming\\npm\\n\node_modules\\roots\\bin\\roots\n\n> roots@3.0.2 postinstall C:\\Users\\mitch\\AppData\\Roaming\\npm\\node_modules\\roots\n> node ./post_install.js\n\n---------------------------------------------------------\nRoots uses analytics to help the core team to get a\nbetter view of how developers use roots. All analytics\nare collected anonymously, and analytics data is used\nonly to make roots better for everyone. However, if you\nwould like to disable analytics, you are welcome to do\nso by running the command `roots analytics --disable`\n\nMuch like roots itself, roots' analytics are open source.\nCheck out http://roots.cx/analytics for more information.\n---------------------------------------------------------\nroots@3.0.2 C:\\Users\\mitch\\AppData\\Roaming\\npm\\node_modules\\roots\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 graceful-fs@3.0.6\n\u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n\u251c\u2500\u2500 colors@1.0.3\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 chokidar@0.9.0 (recursive-readdir@0.0.2)\n\u251c\u2500\u2500 when@3.7.2\n\u251c\u2500\u2500 minimatch@2.0.4 (brace-expansion@1.1.0)\n\u251c\u2500\u2500 argparse@1.0.2 (sprintf-js@1.0.2)\n\u251c\u2500\u2500 coffee-script@1.9.1\n\u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, readable-stream@1.0.33, minimatch@0.2.14)\n\n\u251c\u2500\u2500 serve-static@1.9.2 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, se\nnd@0.12.2)\n\u251c\u2500\u2500 rimraf@2.3.2 (glob@4.5.3)\n\u251c\u2500\u2500 update-notifier@0.3.1 (is-npm@1.0.0, string-length@1.0.0, chalk@1.0.0, semve\nr-diff@2.0.0, latest-version@1.0.0)\n\u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n\u251c\u2500\u2500 accord@0.16.1 (indx@0.2.3, convert-source-map@0.4.1, fobject@0.0.3, resolve@\n1.1.6, glob@4.5.3, uglify-js@2.4.19)\n\u251c\u2500\u2500 configstore@0.3.2 (object-assign@2.0.0, xdg-basedir@1.0.1, user-home@1.1.1,\nosenv@0.1.0, uuid@2.0.1, js-yaml@3.2.7)\n\u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, colors@0.6.2, anti-matter@0.0.1, minimist@0.1.\n0, node-uuid@1.4.3, escapist-middleware@0.0.2, morgan@1.0.1, pathologist-middlew\nare@0.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, faye-websocke\nt@0.7.3, connect@3.3.5, lodash.assign@2.4.1, lodash.remove@2.4.1, compression@1.\n4.3, publicist-middleware@0.0.1, update-notifier@0.1.10, archivist-middleware@0.\n0.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 lodash@3.6.0\n\u251c\u2500\u2500 sprout@0.1.5 (indx@0.2.3, which@1.0.9, osenv@0.1.0, ncp@2.0.0, ejs@2.2.4, un\nderscore.string@3.0.3, lodash@3.3.1, inquirer@0.8.2)\n\u251c\u2500\u2500 ship@0.2.4 (indx@0.2.3, mime@1.3.4, fstream@1.0.4, minimatch@1.0.0, optimist\n@0.6.1, argparse@0.1.16, file-map@0.0.1, tar@1.0.3, ftp@0.3.10, update-notifier@\n0.2.2, coffee-script@1.8.0, ssh2@0.3.6, github@0.2.1, lodash@2.4.1, netlify@0.2.\n1, bitballoon@0.2.1, request@2.55.0, heroku-client@1.5.0, js-yaml@3.2.7, inquire\nr@0.8.2, aws-sdk@2.1.21)\n\u2514\u2500\u2500 npm@2.7.5\n```\n\nWhich doesn't seem too bad? Just missing an optional dep. But then when I create a new project I get this:\n\n```\nC:\\Users\\mitch\\Websites>roots new example-project\n? Error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"npm install\"\nnpm ERR! install Couldn't read dependencies\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\n\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v0.12.2\nnpm ERR! npm  v2.7.4\nnpm ERR! file C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected token 'r' at 1:1\nnpm ERR! root/package.json\nnpm ERR! ^\nnpm ERR! File: C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\mitch\\.config\\sprout\\roots-base\\npm-debug.log\n\nPotentially unhandled rejection [3] Error: Command failed: C:\\WINDOWS\\system32\\c\nmd.exe /s /c \"npm install\"\nnpm ERR! install Couldn't read dependencies\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\n\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v0.12.2\nnpm ERR! npm  v2.7.4\nnpm ERR! file C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected token 'r' at 1:1\nnpm ERR! root/package.json\nnpm ERR! ^\nnpm ERR! File: C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\mitch\\.config\\sprout\\roots-base\\npm-debug.log\n\n  at ChildProcess.exithandler (child_process.js:751:12)\n  at ChildProcess.emit (events.js:110:17)\n  at maybeClose (child_process.js:1015:16)\n  at Socket.<anonymous> (child_process.js:1183:11)\n  at Socket.emit (events.js:107:17)\n  at Pipe.close (net.js:485:12)\n```\n\nSo there's some problem occurring reading the JSON file. Any ideas why this could be happening? Or any extra info you'd like me to provide?\n. How does that `package.json` file it's erroring on get created? It's located in the `roots-base` folder, but this file doesn't exist in the roots-base repository on GitHub. Also the only text in this file is one line: `root/package.json`, which isn't a valid JSON file.\n. Great thanks, so that fixed that problem but now I'm encountering another with `roots watch`. When I run `roots watch` the cmd prompt doesn't throw any errors and it says the compiling is complete, but then it opens up to this:\n\n![roots_watch_error](https://cloud.githubusercontent.com/assets/5214414/7035859/abdac240-ddd0-11e4-9aae-52a2cfb3a22e.PNG)\n\nAnd this is what the directory structure looks after the compile:\n\n```\n|   .gitignore\n|   app.coffee\n|   app.production.coffee\n|   package.json\n|   readme.md\n|   \n+---assets\n|   +---css\n|   |       master.styl\n|   |       _settings.styl\n|   |       \n|   +---img\n|   |       .keep\n|   |       \n|   \\---js\n|           main.coffee\n|           \n+---node_modules\n|                           \n+---public\n|   |   index.jade\n|   |   \n|   +---css\n|   |       master.styl\n|   |       master.styl.map\n|   |       \n|   +---img\n|   |       .keep\n|   |       \n|   \\---js\n|           main.coffee\n|           main.coffee.map\n|           \n\\---views\n        index.jade\n        layout.jade\n```\n. Yeah I'm getting the same as sourcehunter, the files in the public folder\nlook like they've compiled but they haven't been renamed.\n\nOn Thu, 9 Apr 2015 1:23 am sourcehunter notifications@github.com wrote:\n\n> We are getting the red X, too. Our Jade, Coffee and Stylus files are\n> compiled correctly, but not renamed.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90949466.\n. I've tried doing this and it doesn't seem to work, my title tag is coming up empty.\n. I like the idea of having multiple pages of posts, with the option of number of posts per page. Infinite scroll would be welcome too, but as you said it may cause problems for sites with a lot of posts.\n\nMaybe also single page pagination? Being able to go from the current post to either the previous or the next one.\n. Is it possible to have a custom layout for jade files outside of the views folder?\n\nFor instance I have a \"posts\" folder in the root directory with an `index.jade` inside of it. So when I go to `http://localhost:1111/posts/` this page is displayed. Is there a way to target this page for a custom layout? I tried this but it didn't work:\n\n```\nlayouts:\n  default: 'layout.jade'\n  'posts/index.jade': '_posts_layout.jade'\n```\n. That's what I have done with no luck.\n. I have been doing that for my posts. Here's a simple version of what my folder structure looks like.\n\n```\nposts\n    index.jade\n    post1.jade\n    post2.jade\nviews\n    _single_post.jade\n    _posts_layout.jade\n    index.jade\n    layout.jade\n```\n\nI want to use `_posts_layout.jade` on `posts/index.jade`. The reason I'm doing this is I want `example.com/posts/` to be an archive of all the posts and `example.com/posts/post1` to be an actual post.\n\nIt works fine currently except for being able to apply a custom layout to `posts/index.jade`, if I add front matter won't it think it's a post?\n. I must be doing something wrong because I've tried commenting out `# 'special_view.jade': 'special_layout.jade'` in `app.coffee` and adding both `'special_view.jade'` and `'special_layout.jade'` to the `views` folder, yet it keeps on using the default layout.\n\nI'm using `2.1.0` by the way.\n. The reason why I want my site set up that way is because I want `example.com` to be a static homepage, and `example.com/posts/` to be an archive of posts.\n\nThe default blog template has a post located at `example.com/posts/post-title`, but if you try going to `example.com/posts/` there's nothing there which seems counter intuitive to me.\n\nI also tried setting this in my app.coffee but it's still using the default layout:\n\n```\nlayouts:\n  default: 'layout.jade'\n  '../posts/index.jade': '_posts_layout.jade'\n```\n. Wow, thanks for all the help. Sorry, I'm new to all this stuff so it is taking a bit to sink in.\n. OK, so I've finally got around to testing that example you posted and it's not working for me. So I'm guessing something wrong is happening on my end with my PC or something.\n\nThe `index.jade` is getting processed fine but `posts/index.jade` is getting spat out like this:\n\n```\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n```\n\nThat's all that's in `posts/index.html` in the public folder, so none of the layout is coming with it. So for some reason my custom layouts aren't being applied from `app.coffee`.\n\nWhat course of action should I take from here? Un-installing and re-installing Roots? I'm on Windows 8, could it be  a weird OS thing?\n. Well I've started using jade layouts as per one of your suggestions and everything seems to be working the way I want. So I'm not sure why custom roots layouts aren't working for me, but I guess at least I've got a workable solution.\n. Cool, that seems to work now!\n\nAlthough now I'm getting a different problem, when I run `roots watch` on the default roots installation I'm getting chrome opening up with a blank window, is this supposed to be the case? No `html` file can be found in the public folder so I guess the default index file isn't getting copied over for some reason?\n\nThanks for being a fan of my work, though I'm not sure what work you're referring to :).\n. OK it seems like the problem was occurring cause I had a period in my project name. So for example I ran `roots new example.com`, and this was causing it not to compile properly.\n. Well, I've got it all up and running on my laptop but still having issues on my PC (also Windows 8), after changing the file in the sprout folder as mentioned earlier I'm getting a new error:\n\n```\n{ [Error: Command failed: fatal: Not a git repository (or any of the parent directories): .git\n] killed: false, code: 128, signal: null }\n```\n\nI must be doing something wrong?\n. So `roots tpl reset` didn't work, however I think I found what is causing the issue. Creating a new roots project on my main HDD that Windows, Node and roots is installed to works, whereas trying to create a new project on my secondary drive is failing and giving me the error mentioned earlier. It seems like for now a workaround would be to create the project on the main HDD then copy it over to the secondary.\n\nAny idea on why this could be happening? \n\nI understand it can be difficult to get software like this working on different platforms, I don't envy you :).\n. Is there any way I can get more information about the error that is occurring?\n. I mean is there like a debug mode or something I could run so I can pinpoint at what point the error is actually occurring?\n. Yes it's the same error, the one about it not being a git repository.\n. That's OK, it seems to work just moving the project directory to where I want after creating it on the main drive.\n\nI pretty much only put programs on my main drive and all my work on a secondary so if I need to reformat/reinstall Windows I don't have to worry about backing up stuff from the main drive. It's just something I've always done.\n. Hey @jenius I've issued a pull request https://github.com/jenius/roots/pull/438/, I also updated the multiple files test to make sure this functionality works.\n. Hey, I'm just heading to work at the moment so I won't be able to look at\nthis for a number of hours. I don't mind if you update it and commit it\nyourself.\nOn 22 Apr 2014 09:02, \"Jeff Escalante\" notifications@github.com wrote:\n\n> There have been an absurd number of changes to things since this was\n> submitted, if you can't and/or are busy let me know and I can do it. I just\n> want you to get credit for the commit [image: :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/pull/438#issuecomment-40986875\n> .\n. I'm running on Windows 8.1 64bit, when I install roots I get this:\n\n```\nC:\\Users\\mitch>npm i roots -g\nnpm WARN optional dep failed, continuing fsevents@0.3.0\nC:\\Users\\mitch\\AppData\\Roaming\\npm\\roots -> C:\\Users\\mitch\\AppData\\Roaming\\npm\\n\node_modules\\roots\\bin\\roots\n\n> roots@3.0.2 postinstall C:\\Users\\mitch\\AppData\\Roaming\\npm\\node_modules\\roots\n> node ./post_install.js\n\n---------------------------------------------------------\nRoots uses analytics to help the core team to get a\nbetter view of how developers use roots. All analytics\nare collected anonymously, and analytics data is used\nonly to make roots better for everyone. However, if you\nwould like to disable analytics, you are welcome to do\nso by running the command `roots analytics --disable`\n\nMuch like roots itself, roots' analytics are open source.\nCheck out http://roots.cx/analytics for more information.\n---------------------------------------------------------\nroots@3.0.2 C:\\Users\\mitch\\AppData\\Roaming\\npm\\node_modules\\roots\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 graceful-fs@3.0.6\n\u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n\u251c\u2500\u2500 colors@1.0.3\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 chokidar@0.9.0 (recursive-readdir@0.0.2)\n\u251c\u2500\u2500 when@3.7.2\n\u251c\u2500\u2500 minimatch@2.0.4 (brace-expansion@1.1.0)\n\u251c\u2500\u2500 argparse@1.0.2 (sprintf-js@1.0.2)\n\u251c\u2500\u2500 coffee-script@1.9.1\n\u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, readable-stream@1.0.33, minimatch@0.2.14)\n\n\u251c\u2500\u2500 serve-static@1.9.2 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, se\nnd@0.12.2)\n\u251c\u2500\u2500 rimraf@2.3.2 (glob@4.5.3)\n\u251c\u2500\u2500 update-notifier@0.3.1 (is-npm@1.0.0, string-length@1.0.0, chalk@1.0.0, semve\nr-diff@2.0.0, latest-version@1.0.0)\n\u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n\u251c\u2500\u2500 accord@0.16.1 (indx@0.2.3, convert-source-map@0.4.1, fobject@0.0.3, resolve@\n1.1.6, glob@4.5.3, uglify-js@2.4.19)\n\u251c\u2500\u2500 configstore@0.3.2 (object-assign@2.0.0, xdg-basedir@1.0.1, user-home@1.1.1,\nosenv@0.1.0, uuid@2.0.1, js-yaml@3.2.7)\n\u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, colors@0.6.2, anti-matter@0.0.1, minimist@0.1.\n0, node-uuid@1.4.3, escapist-middleware@0.0.2, morgan@1.0.1, pathologist-middlew\nare@0.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, faye-websocke\nt@0.7.3, connect@3.3.5, lodash.assign@2.4.1, lodash.remove@2.4.1, compression@1.\n4.3, publicist-middleware@0.0.1, update-notifier@0.1.10, archivist-middleware@0.\n0.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 lodash@3.6.0\n\u251c\u2500\u2500 sprout@0.1.5 (indx@0.2.3, which@1.0.9, osenv@0.1.0, ncp@2.0.0, ejs@2.2.4, un\nderscore.string@3.0.3, lodash@3.3.1, inquirer@0.8.2)\n\u251c\u2500\u2500 ship@0.2.4 (indx@0.2.3, mime@1.3.4, fstream@1.0.4, minimatch@1.0.0, optimist\n@0.6.1, argparse@0.1.16, file-map@0.0.1, tar@1.0.3, ftp@0.3.10, update-notifier@\n0.2.2, coffee-script@1.8.0, ssh2@0.3.6, github@0.2.1, lodash@2.4.1, netlify@0.2.\n1, bitballoon@0.2.1, request@2.55.0, heroku-client@1.5.0, js-yaml@3.2.7, inquire\nr@0.8.2, aws-sdk@2.1.21)\n\u2514\u2500\u2500 npm@2.7.5\n```\n\nWhich doesn't seem too bad? Just missing an optional dep. But then when I create a new project I get this:\n\n```\nC:\\Users\\mitch\\Websites>roots new example-project\n? Error: Command failed: C:\\WINDOWS\\system32\\cmd.exe /s /c \"npm install\"\nnpm ERR! install Couldn't read dependencies\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\n\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v0.12.2\nnpm ERR! npm  v2.7.4\nnpm ERR! file C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected token 'r' at 1:1\nnpm ERR! root/package.json\nnpm ERR! ^\nnpm ERR! File: C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\mitch\\.config\\sprout\\roots-base\\npm-debug.log\n\nPotentially unhandled rejection [3] Error: Command failed: C:\\WINDOWS\\system32\\c\nmd.exe /s /c \"npm install\"\nnpm ERR! install Couldn't read dependencies\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\n\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v0.12.2\nnpm ERR! npm  v2.7.4\nnpm ERR! file C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected token 'r' at 1:1\nnpm ERR! root/package.json\nnpm ERR! ^\nnpm ERR! File: C:\\Users\\mitch\\.config\\sprout\\roots-base\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\mitch\\.config\\sprout\\roots-base\\npm-debug.log\n\n  at ChildProcess.exithandler (child_process.js:751:12)\n  at ChildProcess.emit (events.js:110:17)\n  at maybeClose (child_process.js:1015:16)\n  at Socket.<anonymous> (child_process.js:1183:11)\n  at Socket.emit (events.js:107:17)\n  at Pipe.close (net.js:485:12)\n```\n\nSo there's some problem occurring reading the JSON file. Any ideas why this could be happening? Or any extra info you'd like me to provide?\n. How does that `package.json` file it's erroring on get created? It's located in the `roots-base` folder, but this file doesn't exist in the roots-base repository on GitHub. Also the only text in this file is one line: `root/package.json`, which isn't a valid JSON file.\n. Great thanks, so that fixed that problem but now I'm encountering another with `roots watch`. When I run `roots watch` the cmd prompt doesn't throw any errors and it says the compiling is complete, but then it opens up to this:\n\n![roots_watch_error](https://cloud.githubusercontent.com/assets/5214414/7035859/abdac240-ddd0-11e4-9aae-52a2cfb3a22e.PNG)\n\nAnd this is what the directory structure looks after the compile:\n\n```\n|   .gitignore\n|   app.coffee\n|   app.production.coffee\n|   package.json\n|   readme.md\n|   \n+---assets\n|   +---css\n|   |       master.styl\n|   |       _settings.styl\n|   |       \n|   +---img\n|   |       .keep\n|   |       \n|   \\---js\n|           main.coffee\n|           \n+---node_modules\n|                           \n+---public\n|   |   index.jade\n|   |   \n|   +---css\n|   |       master.styl\n|   |       master.styl.map\n|   |       \n|   +---img\n|   |       .keep\n|   |       \n|   \\---js\n|           main.coffee\n|           main.coffee.map\n|           \n\\---views\n        index.jade\n        layout.jade\n```\n. Yeah I'm getting the same as sourcehunter, the files in the public folder\nlook like they've compiled but they haven't been renamed.\n\nOn Thu, 9 Apr 2015 1:23 am sourcehunter notifications@github.com wrote:\n\n> We are getting the red X, too. Our Jade, Coffee and Stylus files are\n> compiled correctly, but not renamed.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/588#issuecomment-90949466.\n. ",
    "wismer": "Thanks a bunch! \n. I looked over some test projects I used with roots a month ago and tried running it with this version of roots. It works, but I did notice something I did not catch before: Is it normal for node_modules folder to be in your project? I would think not, right? I created a new one just now, and it wasn't in there (and runs fine). \n\nOK, as I was writing this, I deleted the folder and it runs fine now. Sorry for the trouble. I knew this was something that I did wrong. I don't know HOW it got there. I do recall weeks ago that sometimes when I updated roots, roots would disappear completely. I'd just reinstall it through npm and no problems thereafter (I assumed I did it wrong, so I never reported it). \n\nAgain, thanks guys. Great product! I promise to be more thorough next time!!!\n. Thanks a bunch! \n. I looked over some test projects I used with roots a month ago and tried running it with this version of roots. It works, but I did notice something I did not catch before: Is it normal for node_modules folder to be in your project? I would think not, right? I created a new one just now, and it wasn't in there (and runs fine). \n\nOK, as I was writing this, I deleted the folder and it runs fine now. Sorry for the trouble. I knew this was something that I did wrong. I don't know HOW it got there. I do recall weeks ago that sometimes when I updated roots, roots would disappear completely. I'd just reinstall it through npm and no problems thereafter (I assumed I did it wrong, so I never reported it). \n\nAgain, thanks guys. Great product! I promise to be more thorough next time!!!\n. ",
    "mihailt": "npm install roots -g runs fine,\nafter that could create a new project\nroots version is 1.0.2-1\nbut using roots update still produces the same error\n. ok the issue was that i did run it roots update without sudo,\nand  npm install roots -g with, stupid me.\n\nso it ran npm install roots -g without appropriate permission\n\nand as stated in update.js\n\n``` javascript\n  run('npm install roots -g', function(err, out, stderr){\n    if (err) {\n      console.log(\"something went seriously wrong here.\\nfile an issue on http://github.com/jenius/roots/issues\".red)\n    } else {\n      console.log(\"done!\".green)\n    }\n  });\n```\n\nthe err condition worked.\nso the problem is that npm broke current install, and didn't install new one.\n\nprobably a good idea would be to print out err and stderr in this case\n. npm install roots -g runs fine,\nafter that could create a new project\nroots version is 1.0.2-1\nbut using roots update still produces the same error\n. ok the issue was that i did run it roots update without sudo,\nand  npm install roots -g with, stupid me.\n\nso it ran npm install roots -g without appropriate permission\n\nand as stated in update.js\n\n``` javascript\n  run('npm install roots -g', function(err, out, stderr){\n    if (err) {\n      console.log(\"something went seriously wrong here.\\nfile an issue on http://github.com/jenius/roots/issues\".red)\n    } else {\n      console.log(\"done!\".green)\n    }\n  });\n```\n\nthe err condition worked.\nso the problem is that npm broke current install, and didn't install new one.\n\nprobably a good idea would be to print out err and stderr in this case\n. ",
    "phektus": "OK updated with a code snippet. Everything works without the grid-related lines. No errors given when not calling column(8) on .somediv. So it's calling column(8) that fires off the error. The grid settings I have stolen verbatim from the docs (http://roots.cx/css/ under 'grid').\n. Sorry, pasted the snippet wrong, fixed the description but the error still stands. \n\nOk copy that (re: nib/nib gradient).\n. OK found the solution too, just need to specify the units on the widths, like:\n\n  column-width: 60px\n  gutter-width: 20px\n\nShould just need to update the docs for it.\n. OK updated with a code snippet. Everything works without the grid-related lines. No errors given when not calling column(8) on .somediv. So it's calling column(8) that fires off the error. The grid settings I have stolen verbatim from the docs (http://roots.cx/css/ under 'grid').\n. Sorry, pasted the snippet wrong, fixed the description but the error still stands. \n\nOk copy that (re: nib/nib gradient).\n. OK found the solution too, just need to specify the units on the widths, like:\n\n  column-width: 60px\n  gutter-width: 20px\n\nShould just need to update the docs for it.\n. ",
    "def0e0": "Confirmed. I use the Roots in both Windows and Mac OS X. After installed in Windows and compile project, files are copied to the \"assets\" and \"views\" instead of \"img\", \"css\", \"js\" inside \"public\" folder. I temporarily fixed it here:\nin file `npm\\node_modules\\roots\\lib\\utils\\output_path.js` line 8 (I just replace slash to backslash)\n\n``` javascript\nvar output_path = path.join(process.cwd(), 'public', file.replace(process.cwd(),'').replace(/^\\\\assets|\\\\views/,''));\n```\n\nI think need to change the regular expression so that replacement occurs whether  for a slash or backslash.\n. I did send pull request, but it automatically create new issue. Sorry for that. Not sure how I can attach pull request to existing issue.\n. Yes, now much better. Thanks for the advice. :)\n. Confirmed. I use the Roots in both Windows and Mac OS X. After installed in Windows and compile project, files are copied to the \"assets\" and \"views\" instead of \"img\", \"css\", \"js\" inside \"public\" folder. I temporarily fixed it here:\nin file `npm\\node_modules\\roots\\lib\\utils\\output_path.js` line 8 (I just replace slash to backslash)\n\n``` javascript\nvar output_path = path.join(process.cwd(), 'public', file.replace(process.cwd(),'').replace(/^\\\\assets|\\\\views/,''));\n```\n\nI think need to change the regular expression so that replacement occurs whether  for a slash or backslash.\n. I did send pull request, but it automatically create new issue. Sorry for that. Not sure how I can attach pull request to existing issue.\n. Yes, now much better. Thanks for the advice. :)\n. ",
    "tvararu": "Maybe only have it run on the `roots new` command so it doesn't up nagging constantly like some Rails gems I know. Run guard with spork, get my terminal flooded with:\n\n```\nSass is in the process of being separated from Haml,\nand will no longer be bundled at all in Haml 3.2.0.\nPlease install the 'sass' gem if you want to use Sass.\n```\n\nStarting a fresh new project seems like a logical breakpoint at which you'd want to make sure your software is up to date.\n. Maybe only have it run on the `roots new` command so it doesn't up nagging constantly like some Rails gems I know. Run guard with spork, get my terminal flooded with:\n\n```\nSass is in the process of being separated from Haml,\nand will no longer be bundled at all in Haml 3.2.0.\nPlease install the 'sass' gem if you want to use Sass.\n```\n\nStarting a fresh new project seems like a logical breakpoint at which you'd want to make sure your software is up to date.\n. ",
    "Hoverbear": "What ever happened to sudo `npm update -g`?\n. Happy to help! I like the idea of the project!\n. Github is great. If you're looking for real-time interaction I suggest making a freenode channel.\n. Looks like the Travis build failed due to a `--basic` timeout. Strange. This works (and is slow, yes) on my copy. Perhaps it should have more time to build with `--basic`?\n. Hey!\n1. Why target coffee-script on the client side and javascript in express?\n2. I know it involves `git rebase` or something similar... I just haven't looked over it quite yet. If you could suggest a good article or document I'd appreciate it.\n. Hey Jenius, sorry, I'm super busy right now. Lets close this since you're not sure if you want it as such anyways.\n. What ever happened to sudo `npm update -g`?\n. Happy to help! I like the idea of the project!\n. Github is great. If you're looking for real-time interaction I suggest making a freenode channel.\n. Looks like the Travis build failed due to a `--basic` timeout. Strange. This works (and is slow, yes) on my copy. Perhaps it should have more time to build with `--basic`?\n. Hey!\n1. Why target coffee-script on the client side and javascript in express?\n2. I know it involves `git rebase` or something similar... I just haven't looked over it quite yet. If you could suggest a good article or document I'd appreciate it.\n. Hey Jenius, sorry, I'm super busy right now. Lets close this since you're not sure if you want it as such anyways.\n. ",
    "dingyi": "Great! Thanks guys.\n. Great! Thanks guys.\n. ",
    "hhsnopek": "\"/components/moment/moment\" has fixed moment.js, jquery is still not connection, \nThank You slang800\n. You're a life saver slang800, thank you!\n. Removed .node-gyp then did `npm cache clean` and got a new error\n\n``` bash\nnpm http 200 https://registry.npmjs.org/delayed-stream/-/delayed-stream-0.0.5.tgz\nmake: Entering directory `/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\n  CXX(target) Release/obj.target/shell/src/shell.o\n../src/shell.cpp: In function \u2018int parent(int)\u2019:\n../src/shell.cpp:79:35: error: no matching function for call to \u2018wait::wait(int*)\u2019\n../src/shell.cpp:79:35: note: candidates are:\nIn file included from /usr/include/stdlib.h:42:0,\n                 from /usr/include/c++/4.7/cstdlib:66,\n                 from ../src/shell.cpp:10:\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait()\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   candidate expects 0 arguments, 1 provided\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait(const wait&)\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   no known conversion for argument 1 from \u2018int*\u2019 to \u2018const wait&\u2019\n../src/shell.cpp: In function \u2018void child(const char*)\u2019:\n../src/shell.cpp:64:11: warning: ignoring return value of \u2018int dup(int)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n../src/shell.cpp:66:11: warning: ignoring return value of \u2018int dup(int)\u2019, declared with attribute warn_unused_result [-Wunused-result]\nmake: *** [Release/obj.target/shell/src/shell.o] Error 1\nmake: Leaving directory `/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\ngyp ERR! build error \ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/share/npm/node_modules/node-gyp/lib/build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\ngyp ERR! System Linux 3.8.0-19-generic\ngyp ERR! command \"node\" \"/usr/share/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\ngyp ERR! node -v v0.10.13\ngyp ERR! node-gyp -v v0.10.6\ngyp ERR! not ok \nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n\n```\n. Using Linux, would never use windows ;), and after removing `node_modules`. This is what I got.\n\n`sudo npm install roots -g` is the  command I use, always...\n\n```\nnpm http GET https://registry.npmjs.org/stable\nnpm http GET https://registry.npmjs.org/tar\nnpm http GET https://registry.npmjs.org/tmp\nnpm http GET https://registry.npmjs.org/unzip/0.1.7\nnpm http 304 https://registry.npmjs.org/buffer-crc32/0.2.1\nnpm http 304 https://registry.npmjs.org/cookie/0.0.5\nnpm http 304 https://registry.npmjs.org/send/0.1.1\nnpm http 304 https://registry.npmjs.org/fresh/0.1.0\nnpm http 304 https://registry.npmjs.org/bytes/0.2.0\nnpm http 200 https://registry.npmjs.org/commander/-/commander-1.1.1.tgz\nnpm http GET\nhttps://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz\nnpm http GET https://registry.npmjs.org/send/-/send-0.1.1.tgz\nnpm http GET https://registry.npmjs.org/bytes/-/bytes-0.2.0.tgz\nnpm http GET https://registry.npmjs.org/fresh/-/fresh-0.1.0.tgz\nnpm http 200 https://registry.npmjs.org/with/-/with-1.0.4.tgz\nnpm http 304 https://registry.npmjs.org/pause/0.0.1\nnpm http 304 https://registry.npmjs.org/rimraf\nnpm http 304 https://registry.npmjs.org/glob\nnpm http 304 https://registry.npmjs.org/abbrev\nnpm http GET https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\nnpm http 304 https://registry.npmjs.org/archy\nnpm http GET https://registry.npmjs.org/rimraf/-/rimraf-2.1.4.tgz\nnpm http 304 https://registry.npmjs.org/fstream\nnpm http 304 https://registry.npmjs.org/glob\nnpm http 200 https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 304 https://registry.npmjs.org/hogan.js\nnpm http 304 https://registry.npmjs.org/nopt\nnpm http 304 https://registry.npmjs.org/promptly\nnpm http 200 https://registry.npmjs.org/dep-graph/-/dep-graph-1.1.0.tgz\nnpm http 200\nhttps://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.1.tgz\nnpm http 304 https://registry.npmjs.org/rc\nnpm http 304 https://registry.npmjs.org/read-package-json\nnpm http 200 https://registry.npmjs.org/mime/-/mime-1.2.2.tgz\nnpm http 304 https://registry.npmjs.org/rimraf\nnpm http 200 https://registry.npmjs.org/uglify-js/-/uglify-js-1.0.7.tgz\nnpm http 304 https://registry.npmjs.org/stable\nnpm http 304 https://registry.npmjs.org/tmp\nnpm http 304 https://registry.npmjs.org/tar\nnpm http 200\nhttps://registry.npmjs.org/transformers/-/transformers-2.0.1.tgz\nnpm http 304 https://registry.npmjs.org/unzip/0.1.7\nnpm http 200 https://registry.npmjs.org/monocle/-/monocle-0.1.48.tgz\nnpm http GET https://registry.npmjs.org/tmp/-/tmp-0.0.20.tgz\nnpm http GET https://registry.npmjs.org/unzip/-/unzip-0.1.7.tgz\nnpm http 200 https://registry.npmjs.org/formidable/-/formidable-1.0.14.tgz\nnpm http 200\nhttps://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/keypress\nnpm http 200 https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz\nnpm http 200 https://registry.npmjs.org/send/-/send-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/bytes/-/bytes-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/fresh/-/fresh-0.1.0.tgz\nnpm http 200 https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\nnpm http 200 https://registry.npmjs.org/rimraf/-/rimraf-2.1.4.tgz\nnpm http 200 https://registry.npmjs.org/tmp/-/tmp-0.0.20.tgz\nnpm http 200 https://registry.npmjs.org/unzip/-/unzip-0.1.7.tgz\nnpm http GET https://registry.npmjs.org/amdefine\nnpm http 304 https://registry.npmjs.org/keypress\nnpm http 304 https://registry.npmjs.org/amdefine\nnpm http GET https://registry.npmjs.org/graceful-fs\nnpm http 304 https://registry.npmjs.org/graceful-fs\nnpm http GET https://registry.npmjs.org/config-chain\nnpm http GET https://registry.npmjs.org/read\nnpm http GET https://registry.npmjs.org/slide\nnpm http GET https://registry.npmjs.org/npmlog\n\n> execSync@1.0.0-pre install\n/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\n> node-gyp rebuild\n\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/readable-stream\nnpm http GET https://registry.npmjs.org/setimmediate\nnpm http GET https://registry.npmjs.org/match-stream/0.0.1\nnpm http GET https://registry.npmjs.org/pullstream\nnpm http GET https://registry.npmjs.org/binary\nnpm http GET https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/config-chain\nnpm http 304 https://registry.npmjs.org/readable-stream\nnpm http 304 https://registry.npmjs.org/read\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/block-stream\nnpm http 304 https://registry.npmjs.org/setimmediate\nmake: Entering directory\n`/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\n  CXX(target) Release/obj.target/shell/src/shell.o\nnpm http 304 https://registry.npmjs.org/slide\nnpm http 304 https://registry.npmjs.org/match-stream/0.0.1\nnpm http 304 https://registry.npmjs.org/npmlog\nnpm http 304 https://registry.npmjs.org/pullstream\nnpm http GET\nhttps://registry.npmjs.org/match-stream/-/match-stream-0.0.1.tgz\nnpm http GET https://registry.npmjs.org/proto-list\nnpm http GET https://registry.npmjs.org/ini\nnpm http 304 https://registry.npmjs.org/binary\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/block-stream\nnpm http GET https://registry.npmjs.org/inherits/-/inherits-1.0.0.tgz\nnpm http 304 https://registry.npmjs.org/proto-list\nnpm http 304 https://registry.npmjs.org/ini\n../src/shell.cpp: In function \u2018int parent(int)\u2019:\n../src/shell.cpp:79:35: error: no matching function for call to\n\u2018wait::wait(int*)\u2019\n../src/shell.cpp:79:35: note: candidates are:\nIn file included from /usr/include/stdlib.h:42:0,\n                 from /usr/include/c++/4.7/cstdlib:66,\n                 from ../src/shell.cpp:10:\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait()\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   candidate\nexpects 0 arguments, 1 provided\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:\nwait::wait(const wait&)\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   no known\nconversion for argument 1 from \u2018int*\u2019 to \u2018const wait&\u2019\nnpm http GET https://registry.npmjs.org/proto-list/-/proto-list-1.2.2.tgz\n../src/shell.cpp: In function \u2018void child(const char*)\u2019:\n../src/shell.cpp:64:11: warning: ignoring return value of \u2018int dup(int)\u2019,\ndeclared with attribute warn_unused_result [-Wunused-result]\n../src/shell.cpp:66:11: warning: ignoring return value of \u2018int dup(int)\u2019,\ndeclared with attribute warn_unused_result [-Wunused-result]\nmake: *** [Release/obj.target/shell/src/shell.o] Error 1\nmake: Leaving directory\n`/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\ngyp ERR! build error\ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit\n(/usr/share/npm/node_modules/node-gyp/lib/build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit\n(child_process.js:789:12)\ngyp ERR! System Linux 3.8.0-19-generic\ngyp ERR! command \"node\"\n\"/usr/share/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd\n/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\ngyp ERR! node -v v0.10.13\ngyp ERR! node-gyp -v v0.10.6\ngyp ERR! not ok\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/mute-stream\nnpm http GET https://registry.npmjs.org/underscore.string\nnpm http GET https://registry.npmjs.org/ansi\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chown\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chown\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chown\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chown\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/send'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules'\nnpm ERR! error rolling back  roots@2.0.2 { [Error: ENOTEMPTY, rmdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path:\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules' }\nnpm ERR! weird error 1\nnpm http 200\nhttps://registry.npmjs.org/match-stream/-/match-stream-0.0.1.tgz\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 200 https://registry.npmjs.org/inherits/-/inherits-1.0.0.tgz\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! tar.unpack error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724035391-0.9463049054611474/tmp.tgz\nnpm http 200 https://registry.npmjs.org/proto-list/-/proto-list-1.2.2.tgz\nnpm ERR! Error: ENOENT, open\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/rc/node_modules/optimist/test/_/bin.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/rc/node_modules/optimist/test/_/bin.js\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! tar pack Error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724033158-0.10729595157317817/package\nnpm ERR! addLocalDirectory Could not pack\n\"/home/henry/tmp/npm-9793-9eLpIvYK/1373724033158-0.10729595157317817/package\"\nto \"/home/henry/.npm/transformers/2.0.1/package.tgz\"\nnpm ERR! tar pack Error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724033004-0.41382312099449337/package\nnpm ERR! addLocalDirectory Could not pack\n\"/home/henry/tmp/npm-9793-9eLpIvYK/1373724033004-0.41382312099449337/package\"\nto \"/home/henry/.npm/uglify-js/1.0.7/package.tgz\"\nnpm http 304 https://registry.npmjs.org/mute-stream\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse/LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/underscore.string\nnpm http 304 https://registry.npmjs.org/ansi\nnpm http GET https://registry.npmjs.org/forever-agent\nnpm http GET https://registry.npmjs.org/json-stringify-safe\nnpm http GET https://registry.npmjs.org/qs\nnpm http GET https://registry.npmjs.org/tunnel-agent\nnpm http GET https://registry.npmjs.org/http-signature\nnpm http GET https://registry.npmjs.org/hawk\nnpm http GET https://registry.npmjs.org/aws-sign\nnpm http GET https://registry.npmjs.org/oauth-sign\nnpm http GET https://registry.npmjs.org/cookie-jar\nnpm http GET https://registry.npmjs.org/node-uuid\nnpm http GET https://registry.npmjs.org/mime\nnpm http GET https://registry.npmjs.org/form-data/0.0.8\nnpm http 304 https://registry.npmjs.org/forever-agent\nnpm http 304 https://registry.npmjs.org/http-signature\nnpm http 304 https://registry.npmjs.org/json-stringify-safe\nnpm http 304 https://registry.npmjs.org/qs\nnpm http 304 https://registry.npmjs.org/hawk\nnpm http 304 https://registry.npmjs.org/tunnel-agent\nnpm http 304 https://registry.npmjs.org/aws-sign\nnpm http GET https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 304 https://registry.npmjs.org/oauth-sign\nnpm http 304 https://registry.npmjs.org/cookie-jar\nnpm http 304 https://registry.npmjs.org/node-uuid\nnpm http 304 https://registry.npmjs.org/form-data/0.0.8\nnpm http 304 https://registry.npmjs.org/mime\nnpm http GET https://registry.npmjs.org/form-data/-/form-data-0.0.8.tgz\nnpm http GET https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.0.tgz\nnpm http 200 https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 200 https://registry.npmjs.org/form-data/-/form-data-0.0.8.tgz\nnpm http 200 https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.0.tgz\nnpm http GET https://registry.npmjs.org/assert-plus/0.1.2\nnpm http GET https://registry.npmjs.org/asn1/0.1.11\nnpm http GET https://registry.npmjs.org/ctype/0.5.2\nnpm http GET https://registry.npmjs.org/hoek\nnpm http GET https://registry.npmjs.org/boom\nnpm http GET https://registry.npmjs.org/cryptiles\nnpm http GET https://registry.npmjs.org/sntp\nnpm http GET https://registry.npmjs.org/combined-stream\nnpm http 304 https://registry.npmjs.org/assert-plus/0.1.2\nnpm http GET https://registry.npmjs.org/assert-plus/-/assert-plus-0.1.2.tgz\nnpm http 304 https://registry.npmjs.org/ctype/0.5.2\nnpm http 304 https://registry.npmjs.org/asn1/0.1.11\nnpm http 304 https://registry.npmjs.org/hoek\nnpm http 304 https://registry.npmjs.org/cryptiles\nnpm http GET https://registry.npmjs.org/asn1/-/asn1-0.1.11.tgz\nnpm http GET https://registry.npmjs.org/hoek/-/hoek-0.8.5.tgz\nnpm http 304 https://registry.npmjs.org/sntp\nnpm http 304 https://registry.npmjs.org/combined-stream\nnpm http 304 https://registry.npmjs.org/boom\nnpm http GET https://registry.npmjs.org/sntp/-/sntp-0.2.4.tgz\nnpm http GET https://registry.npmjs.org/delayed-stream/0.0.5\nnpm http 200 https://registry.npmjs.org/assert-plus/-/assert-plus-0.1.2.tgz\nnpm http 200 https://registry.npmjs.org/asn1/-/asn1-0.1.11.tgz\nnpm http 200 https://registry.npmjs.org/hoek/-/hoek-0.8.5.tgz\nnpm http 200 https://registry.npmjs.org/sntp/-/sntp-0.2.4.tgz\nnpm http 304 https://registry.npmjs.org/delayed-stream/0.0.5\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /usr/lib/npm-debug.log\nnpm ERR! not ok code 0\n\n```\n\nOn Sat, Jul 13, 2013 at 3:30 AM, Declan de Wet notifications@github.comwrote:\n\n> The only errors I get with node-gyp are when I forget to run the command\n> with admin privileges. If you're on Mac or Linux, make sure you sudo npm\n> install -g roots, if you're on Windows then right click command prompt\n> and select \"Run as Administrator\" (CTRL-X+A on Windows 8).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/196#issuecomment-20916671\n> .\n\n## \n-  Henry Snopek\n. The errors have been resolved. \nRemove: \n- `/usr/lib/nodejs/npm`\n- `/usr/lib/node_modules` \n- `/usr/lib/npm`\n- `/home/.node-nyp`\n- `/home/.node_modules`\n- basically anything that is related to npm.\n\nRestart computer, `sudo apt-get clean && sudo apt-get autoclean`, `sudo apt-get update && sudo apt-get upgrade`, `sudo apt-get install npm && sudo npm install roots -g`.\n\nEverything should install correctly if you deleted all the files in the prior steps.\n. As well, I accidentally hit submit w/out have my message.\n. @samccone I looked at it, killed it... Test project works, yet with my second project I still receive an error code, which is consistent with the second error block I listed above\n. Ah yes it is, I'm assuming that can't be in there? \n. Here is the third error block:\n\n```\nhenry@Noize:~$ cd /usrdata/workspace/github_projects/hhsnopek.com\nhenry@Noize:/usrdata/workspace/github_projects/hhsnopek.com$ roots watch\nconfig options set\ncompiling... \nanalyzing project\ncreating folders\ncreated /.git\ncreated /assets\ncreated /views\ncreated /.git/branches\ncreated /.git/hooks\ncreated /.git/info\ncreated /.git/logs\ncreated /.git/objects\ncreated /.git/refs\ncreated /assets/components\ncreated /assets/css\ncreated /assets/fonts\ncreated /assets/img\ncreated /assets/js\ncreated /.git/logs/refs\ncreated /.git/refs/remotes\ncreated /.git/refs/heads\ncreated /.git/refs/tags\ncreated /.git/objects/00\ncreated /.git/objects/02\ncreated /.git/objects/05\ncreated /.git/objects/03\ncreated /.git/objects/08\ncreated /.git/objects/0a\ncreated /.git/objects/0b\ncreated /.git/objects/0d\ncreated /.git/objects/11\ncreated /.git/objects/12\ncreated /.git/objects/15\ncreated /.git/objects/16\ncreated /.git/objects/18\ncreated /.git/objects/1a\ncreated /.git/objects/1b\ncreated /.git/objects/1d\ncreated /.git/objects/20\ncreated /.git/objects/21\ncreated /.git/objects/23\ncreated /.git/objects/26\ncreated /.git/objects/27\ncreated /.git/objects/28\ncreated /.git/objects/29\ncreated /.git/objects/2b\ncreated /.git/objects/2c\ncreated /.git/objects/2e\ncreated /.git/objects/32\ncreated /.git/objects/38\ncreated /.git/objects/39\ncreated /.git/objects/3b\ncreated /.git/objects/3d\ncreated /.git/objects/40\ncreated /.git/objects/44\ncreated /.git/objects/45\ncreated /.git/objects/46\ncreated /.git/objects/47\ncreated /.git/objects/48\ncreated /.git/objects/4a\ncreated /.git/objects/4b\ncreated /.git/objects/4d\ncreated /.git/objects/4f\ncreated /.git/objects/50\ncreated /.git/objects/51\ncreated /.git/objects/52\ncreated /.git/objects/53\ncreated /.git/objects/56\ncreated /.git/objects/5a\ncreated /.git/objects/5b\ncreated /.git/objects/5e\ncreated /.git/objects/5f\ncreated /.git/objects/60\ncreated /.git/objects/61\ncreated /.git/objects/62\ncreated /.git/objects/63\ncreated /.git/objects/64\ncreated /.git/objects/65\ncreated /.git/objects/66\ncreated /.git/objects/67\ncreated /.git/objects/68\ncreated /.git/objects/6c\ncreated /.git/objects/6d\ncreated /.git/objects/6e\ncreated /.git/objects/6f\ncreated /.git/objects/78\ncreated /.git/objects/7a\ncreated /.git/objects/7c\ncreated /.git/objects/7d\ncreated /.git/objects/7e\ncreated /.git/objects/7f\ncreated /.git/objects/81\ncreated /.git/objects/82\ncreated /.git/objects/83\ncreated /.git/objects/84\ncreated /.git/objects/86\ncreated /.git/objects/88\ncreated /.git/objects/89\ncreated /.git/objects/8a\ncreated /.git/objects/8b\ncreated /.git/objects/8c\ncreated /.git/objects/8d\ncreated /.git/objects/8e\ncreated /.git/objects/92\ncreated /.git/objects/93\ncreated /.git/objects/96\ncreated /.git/objects/97\ncreated /.git/objects/99\ncreated /.git/objects/9a\ncreated /.git/objects/9c\ncreated /.git/objects/a1\ncreated /.git/objects/a4\ncreated /.git/objects/a5\ncreated /.git/objects/a7\ncreated /.git/objects/a9\ncreated /.git/objects/ad\ncreated /.git/objects/ae\ncreated /.git/objects/af\ncreated /.git/objects/b1\ncreated /.git/objects/b4\ncreated /.git/objects/b5\ncreated /.git/objects/b8\ncreated /.git/objects/bb\ncreated /.git/objects/bc\ncreated /.git/objects/be\ncreated /.git/objects/bf\ncreated /.git/objects/c2\ncreated /.git/objects/c3\ncreated /.git/objects/c4\ncreated /.git/objects/ca\ncreated /.git/objects/ce\ncreated /.git/objects/d0\ncreated /.git/objects/d3\ncreated /.git/objects/d4\ncreated /.git/objects/d7\ncreated /.git/objects/d8\ncreated /.git/objects/d9\ncreated /.git/objects/da\ncreated /.git/objects/dc\ncreated /.git/objects/dd\ncreated /.git/objects/de\ncreated /.git/objects/df\ncreated /.git/objects/e2\ncreated /.git/objects/e4\ncreated /.git/objects/e5\ncreated /.git/objects/e6\ncreated /.git/objects/e7\ncreated /.git/objects/e8\ncreated /.git/objects/ea\ncreated /.git/objects/ed\ncreated /.git/objects/ef\ncreated /.git/objects/f0\ncreated /.git/objects/f3\ncreated /.git/objects/f4\ncreated /.git/objects/f5\ncreated /.git/objects/f6\ncreated /.git/objects/fd\ncreated /.git/objects/fe\ncreated /.git/objects/info\ncreated /.git/objects/pack\ncreated /assets/js/components\ncreated /.git/logs/refs/heads\ncreated /.git/logs/refs/remotes\ncreated /.git/refs/remotes/origin\ncreated /.git/refs/remotes/server\ncreated /.git/logs/refs/remotes/origin\ncreated /.git/logs/refs/remotes/server\ncompiling and copying files\n\n\n\n------------ ERROR ------------\n\nError: /usrdata/workspace/github_projects/hhsnopek.com/views/layout.jade:22\n    20|   //- it will be automatically ignored when deployed\n    21|   != livereload\n  > 22| \n\nLine 49: Unexpected token yield\n    at throwError (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1156:21)\n    at throwUnexpected (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1209:13)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1559:16)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2001:24)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseGroupExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1490:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1552:20)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1861:24)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseArguments (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1571:27)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1643:34)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1730:20)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2770:16)\n    at parseSourceElement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3049:20)\n    at parseFunctionSourceElements (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2846:29)\n    at parseFunctionExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3010:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1527:24)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseGroupExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1490:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1552:20)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseExpressionStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2168:20)\n    at parseStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2729:24)\n    at parseSourceElement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3049:20)\n    at parseSourceElements (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3082:29)\n    at parseProgram (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3096:19)\n    at parse (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3843:23)\n    at module.exports (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/index.js:4:41)\n    at module.exports (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/index.js:9:16)\n    at addWith (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/index.js:9:11)\n    at parse (/usr/lib/node_modules/roots/node_modules/jade/lib/jade.js:111:11)\n    at Object.exports.compile (/usr/lib/node_modules/roots/node_modules/jade/lib/jade.js:160:9)\n    at Object.exports.compile (/usr/lib/node_modules/roots/lib/adapters/jade.js:12:25)\n    at Compiler.compile_into_layout (/usr/lib/node_modules/roots/lib/compiler.js:131:11)\n    at write_file (/usr/lib/node_modules/roots/lib/compiler.js:57:31)\n    at /usr/lib/node_modules/roots/lib/compiler.js:50:16\n    at Object.exports.compile (/usr/lib/node_modules/roots/lib/adapters/jade.js:20:3)\n    at /usr/lib/node_modules/roots/lib/compiler.js:40:13\n    at Array.forEach (native)\n    at Compiler.compile (/usr/lib/node_modules/roots/lib/compiler.js:34:12)\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:224:13\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:108:13\n    at Array.forEach (native)\n    at _each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:32:24)\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:107:9)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at compile_files (/usr/lib/node_modules/roots/lib/index.js:138:37)\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:508:21\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:224:13\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:108:13\n    at Array.forEach (native)\n    at _each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:32:24)\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:107:9)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at _parallel (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:506:20)\n    at Object.async.parallel (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:536:9)\n    at /usr/lib/node_modules/roots/lib/index.js:132:11\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:229:13\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:104:20)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at compile (/usr/lib/node_modules/roots/lib/index.js:131:9)\n    at _fulfilled (/usr/lib/node_modules/roots/node_modules/q/q.js:703:54)\n    at self.promiseDispatch.done (/usr/lib/node_modules/roots/node_modules/q/q.js:732:30)\n    at Promise.promise.promiseDispatch (/usr/lib/node_modules/roots/node_modules/q/q.js:669:13)\n    at /usr/lib/node_modules/roots/node_modules/q/q.js:495:49\n    at flush (/usr/lib/node_modules/roots/node_modules/q/q.js:106:17)\n    at process._tickCallback (node.js:415:13)\n\ncompiled /assets/css/menu.styl\ncompiled /assets/js/main.coffee\ncopied /libpeerconnection.log\ncopied /.git/COMMIT_EDITMSG\ncopied /.git/HEAD\ncopied /.git/FETCH_HEAD\ncopied /.git/SMARTGIT_PENDING_MESSAGE\ncopied /.git/config\ncopied /.git/description\ncopied /.git/index\ncopied /.git/packed-refs\ncopied /assets/favicon.ico\ncopied /.git/hooks/applypatch-msg.sample\ncopied /.git/hooks/commit-msg.sample\ncopied /.git/hooks/post-update.sample\ncopied /.git/hooks/pre-applypatch.sample\ncopied /.git/hooks/pre-commit.sample\ncopied /.git/hooks/pre-rebase.sample\ncopied /.git/hooks/prepare-commit-msg.sample\ncopied /.git/hooks/update.sample\ncopied /.git/info/exclude\ncopied /.git/logs/HEAD\ncopied /assets/js/pie.htc\ncopied /assets/js/require.js\ncopied /assets/img/BP1.png\ncopied /assets/img/noise.png\ncopied /assets/img/skynoizeQR.png\ncopied /assets/fonts/Cabin-Regular-webfont.eot\ncopied /assets/fonts/Cabin-Regular-webfont.svg\ncopied /assets/fonts/Cabin-Regular-webfont.ttf\ncopied /assets/fonts/Cabin-Regular-webfont.woff\ncopied /assets/fonts/Ubuntu-R-webfont.eot\ncopied /assets/fonts/Ubuntu-R-webfont.svg\ncopied /assets/fonts/Ubuntu-R-webfont.ttf\ncopied /assets/fonts/Ubuntu-R-webfont.woff\ncopied /.git/refs/heads/master\ncopied /.git/objects/05/1b4ae34f5987f38d1bf27dd4b9e8210ab03486\ncopied /.git/objects/00/761cc1ba5c4802071d0a2d535cc43460202f73\ncopied /.git/objects/00/d25fda617648921561b3e4a2be9cc7449d1f16\ncopied /.git/objects/00/facc06e93b8c492cdf06ce4f36b03821189cac\ncopied /.git/objects/02/28afb09a4672be0c5d7980b563b94d78e098d1\ncopied /.git/objects/02/43d7122095a2efba25d96bec2b5cca42df4890\ncopied /.git/objects/03/69436041816dd5522f651c77c2bc504dea8b8c\ncopied /.git/objects/03/a9006035b9a702ab91a880df9a00f9916f55dd\ncopied /.git/objects/08/3acff6606bfc9a34c0ed1ac4cc316e0ae71972\ncopied /.git/objects/0a/bb5c7f18bd3b44fc5b9a62bfec535aa9785f22\ncopied /.git/objects/0a/bd351395a5936839b2677afc6351cd61a5ff89\ncopied /.git/objects/0b/3c1a5653337c4bc760049548e2be47b2e3e2ca\ncopied /.git/objects/0d/794dfbfe20ceed94f96f170154057bafa36754\ncopied /.git/objects/11/28df717ae74c02ac43c835c246a7b6f93f9828\ncopied /.git/objects/12/b40e9ece498d28ddaf6649a9c1840fa1f43463\ncopied /.git/objects/15/937ac9b48f3f7d61a30d0dfaa9ffedaf7bec4f\ncopied /.git/objects/15/f74300d7bd9045df3e232a37ce387deb3b8b0b\ncopied /.git/objects/16/ad2462770a0e285b3130e68ddd59095776c250\ncopied /.git/objects/16/b4a62fc8ca6ddd12042a661a638825becb7d8b\ncopied /.git/objects/16/dea5ad372c35daed05dedf0d423e46310ca046\ncopied /.git/objects/18/1c289a5b2ad78f66f1f46a0bdd7a96b1fd96ed\ncopied /.git/objects/1a/504fedd45196ba2f790540eb4a1fe15b431683\ncopied /.git/objects/1b/274be386ff9742d0bf48b915a101ecdeacf6c5\ncopied /.git/objects/1b/8b2ddb2feb4e673b96a7c2084575cf82899b9f\ncopied /.git/objects/1b/b892c4a5cc964b5f8f0e367ed7af2de84abf00\ncopied /.git/objects/20/089a5580f0a212f651e11c930d85aae76c1238\ncopied /.git/objects/20/36ef43931f40745ba236333ce99e2abbdc79fb\ncopied /.git/objects/20/b14794b6689e12177defae81875505c9cf451a\ncopied /.git/objects/20/dfe908629f541f8c1c0669903531adf49d6cd7\ncopied /.git/objects/1d/28c97909a036a510ffce198a5630daa0bbb6a8\ncopied /.git/objects/21/dda0eda2bb12c579a63cbaa4b54674f2c3443b\ncopied /.git/objects/23/5d1fdf40185725a7ca19b078636be3b914438a\ncopied /.git/objects/23/af6c0f37cde6ab80687aca7fe6859b0b063c84\ncopied /.git/objects/26/b8a9b44f7152a4d15e2be3993bef72af9e1a1b\ncopied /.git/objects/26/d020787bc66e938cbb4cbd20973cc93e8383d1\ncopied /.git/objects/27/258615ff5a215e44ea8bcf4157eebad709f752\ncopied /.git/objects/28/440182785a0daeaab2ef4743d4dfdb578b112e\ncopied /.git/objects/29/1b3ef5be2278655ed09b56c22771b44e309136\ncopied /.git/objects/2b/55b5ef1877a0fc46f5ed304dffeac3f969842e\ncopied /.git/objects/2c/a5cdcb5ac86bb93dd86576c9483e3db1435abe\ncopied /.git/objects/2e/cd831411125f3f71b1ab74fc6167e7b4076123\ncopied /.git/objects/32/8dcfea3f901955fa6c899278ee344f540f9ee5\ncopied /.git/objects/38/7cf6d88c87977f0d98d37c73cbb4d55ab6b44a\ncopied /.git/objects/39/4ed6436a1ce45e6bc49a991c46e3335a2d6698\ncopied /.git/objects/3d/759321e3427248fd5557a77a2345813f1b7dbb\ncopied /.git/objects/3b/25085987d661ed9739680c875b9b48937f9e3b\ncopied /.git/objects/3b/2dbf221a182ed1acf2f8660af0ab22a72911cd\ncopied /.git/objects/40/9bcaedbb275ad09ff72a90aa087d2b0c67c0a8\ncopied /.git/objects/44/61a7accc3d430d8700ba4e254745293b7186b3\ncopied /.git/objects/45/467a849e15c012e1e936cd07395c176623373c\ncopied /.git/objects/45/72eac4a6b665c9f22041ad1537a4d077d2278e\ncopied /.git/objects/46/dca188aa5d4bfa64acef7decf557fd808ef59f\ncopied /.git/objects/47/44a1303b43990e132d80165c17a3836ed4839a\ncopied /.git/objects/48/4e20e0f1906b20c80dfa73eac5d86443ed99f5\ncopied /.git/objects/4a/38a7eb5491d853e4059270cc045d6e7139d2ab\ncopied /.git/objects/4a/a56e3e809db17c1ec81e0d667ede16a692879d\ncopied /.git/objects/4b/795e16aff8579b936e9f49ef9962eee1a2636b\ncopied /.git/objects/4d/7be0e98b9629a0b29f6840f0a57dee2913cd61\ncopied /.git/objects/4f/63155d3291a503de697c1044053eba06961a2f\ncopied /.git/objects/50/f833d15ff9ff986c66709a193d6655919ad6b9\ncopied /.git/objects/51/1c10b792e5a94cb3f4d216e1efb6e1176dd6ee\ncopied /.git/objects/52/bf0cda2e12361df7cd032d9fe01d04ed652acc\ncopied /.git/objects/53/bedcc5c8f6bf692d1a72b8b622c94a88f6c1cd\ncopied /.git/objects/56/05a8edd9c3a443e85de0306713523c19d920d6\ncopied /.git/objects/56/98e65cae7d227f32078b80c56d8ac5783ee3b2\ncopied /.git/objects/5a/b59100d50a1e7e2c97afe9fd91f84ea4e3059a\ncopied /.git/objects/5b/4b6afe4aec0786522deea7c14b6b15f34fa067\ncopied /.git/objects/5b/e4455ad13851ee8a0f750cd78f89a507536d80\ncopied /.git/objects/5e/22ac84d370018f856d45939a026a43ddc9cf13\ncopied /.git/objects/5f/49515ba6ee0e7393b61b3d20bbcb5e83e663f3\ncopied /.git/objects/5f/dc7c9770e3724d5522471b63f3a0a2742ab5fd\ncopied /.git/objects/60/75ea3622b8dac9b67ffb26cd99d96192e03827\ncopied /.git/objects/61/8135e3f6fd9a1bf6ec40e5a396e7d0ea415df2\ncopied /.git/objects/62/046831ee6f202faa1fd4418164c52195fb90b3\ncopied /.git/objects/62/f4bacdc8aeea902d95bd0a679fcdbf361f2474\ncopied /.git/objects/63/89fb081aa997725272672667078874dbda9713\ncopied /.git/objects/64/afaffab7a842b0cf6dffc003e6bc0c38811964\ncopied /.git/objects/65/a4f51d9fc5f9bdedbd50a3c69f21647b0f843f\ncopied /.git/objects/66/094f5a2224edb124d1521e74bbcf87425b7bb3\ncopied /.git/objects/67/9b12d4c5eec093d905044a4457d117a56317bd\ncopied /.git/objects/68/973d44ca1f34d592cec3d891e6e69355fdcc45\ncopied /.git/objects/6c/d4996888e35d2413622c37be7e08e3e40f0ea7\ncopied /.git/objects/6d/35d5e434feba822c57149d1968eaa510ee3d01\ncopied /.git/objects/6e/455c3d80b48ac1ca30ec4aa96a9ab23486ffc7\ncopied /.git/objects/6e/ca10044a6e3032a41ac6b3433d47f10159f10c\ncopied /.git/objects/6f/249c71d54d42a17d02c74c98fe5d143558c4f2\ncopied /.git/objects/6f/9a75207e2f3f5e769d90cac6702038b55d5e1a\ncopied /.git/objects/78/985d23d162bf81ee30b8ac56bb595ad7c55e9d\ncopied /.git/objects/7a/6090cce0723a8f0c7180bf705bfdd9d01fb555\ncopied /.git/objects/7c/cf446b4d6e138500f7f74e687e14e3c35d485b\ncopied /.git/objects/7d/ef8afbbd4a0ea88955e2b40c485e65b6391855\ncopied /.git/objects/7e/b4206404e97d86600db811cfacef7c4fb9ce57\ncopied /.git/objects/7e/f26640be9dc2a329696481281c08bb8da65a1e\ncopied /.git/objects/7f/a2b7277a9e45e5128354f54500b9352272e963\ncopied /.git/objects/7f/d3245a1e1a972bf907838f7515ad9747502d0b\ncopied /.git/objects/81/6ec61b7e13ab0a556f594982c8aba63b03f0b6\ncopied /.git/objects/82/b2aef45ce1439e7527c7687839060915457a4e\ncopied /.git/objects/82/e6b2ab8cb3fbefc10631498cfe262936c809a6\ncopied /.git/objects/83/cca9e6e8e9091a81de9b3d85fd9af44cc9c7d9\ncopied /.git/objects/84/19f8c60061411c275daf0a521ee4fa6b19c3cd\ncopied /.git/objects/86/e8092287717f8729d2524e1a67f41a2d6c946e\ncopied /.git/objects/88/012eda3b199950957d8723cecbf1ee31beeb20\ncopied /.git/objects/88/0a974f8c26e2e1015f3cdfd09424db7ff74e5b\ncopied /.git/objects/88/6b7de4adbd750c21e13ce232a2f229a8c69593\ncopied /.git/objects/89/1b4085731291d921d7e6a8995295715519fbf0\ncopied /.git/objects/89/290da1a1ee70ed084e4f07c6f768b54232b69b\ncopied /.git/objects/89/5a9c459a52db09f9fcac55159eedf9c2732de6\ncopied /.git/objects/8a/1829caa9114b779da776985841c77e90cfc5d3\ncopied /.git/objects/8b/4d1d8657bf5842038422e70461c03cd799dc2c\ncopied /.git/objects/8c/f3cd099adf5ba15bab0c4bd049a8b2c4e244d7\ncopied /.git/objects/8d/f549ecdb70c045e957823c8da608103063b5ec\ncopied /.git/objects/8e/6692db1e33a25505a61d23dd75cae1d0cde1c0\ncopied /.git/objects/92/ca776b8c41858bb0a69a393e9efe139c6b9cae\ncopied /.git/objects/93/65155ff16e995dca61f8a7895acb362a711763\ncopied /.git/objects/96/68a5693105d7e308b3999545ca6ae6819cf576\ncopied /.git/objects/97/14af2bdcf866ace5c8f95d60150db16c05dc88\ncopied /.git/objects/99/6138d08cc249430c4c98f60b35e4767053e923\ncopied /.git/objects/99/ac07071e7f1e189086f6d38b24ab917f2fb889\ncopied /.git/objects/9a/3682e6c47a50112ae7975338ee0e4d4ce30c81\ncopied /.git/objects/9c/6ba2eb6778e57721111e26c89a83c985713637\ncopied /.git/objects/a1/1d31699323fd1fd4b2a9df734366cea384e766\ncopied /.git/objects/a4/3517b5ba6ecfb9d3cf7595a8a95d02b7245dcc\ncopied /.git/objects/a4/ef7615c05e0b248db9e30c71120da3c7e10414\ncopied /.git/objects/a5/748a7c4effd569e6bd186cc89dc8f7f97a31d1\ncopied /.git/objects/a7/52fb3886b15f6bfc25e69931eed8991cc2a79b\ncopied /.git/objects/a9/0b905b2b86ed27d751016fe45e0913963d124e\ncopied /.git/objects/a9/4c1ba6ee8986b575d1667fabb54a0649c4f755\ncopied /.git/objects/ad/0a036d432e5ecd002cdd9aa68f9e3d3236bc2d\ncopied /.git/objects/ad/b5cafcee861b9af88f4b98fbc49a4baaf6aa53\ncopied /.git/objects/ae/44d392620d7a41461436732b078ebae1c7b104\ncopied /.git/objects/ae/f0df5a0265c031a3183b152e045a7b52516daf\ncopied /.git/objects/af/39aec7103073bd412d4c9bf5157cea45b1c079\ncopied /.git/objects/b1/6b5892dc279b71145217f44c1b0c530a0341f8\ncopied /.git/objects/b4/cd232301b02a60c41863fc62bd848fc553d428\ncopied /.git/objects/b5/e2126c25610209a796e7172db325a460185e9e\ncopied /.git/objects/b5/f968ac0885574f6ec0609bc6b5b2ba1d97e2eb\ncopied /.git/objects/b8/969520cf831915f765489b1fa955f6c32b1ff5\ncopied /.git/objects/bb/abc9f28124e8b6f3b0d65820b3c9519cbc4175\ncopied /.git/objects/bc/4bae968a9176b860f925b7e6b16a5a52370557\ncopied /.git/objects/be/647fec750c3cd5e9813a572d7816e71fb74514\ncopied /.git/objects/bf/ad1b50ce7e90e6029df432277babc1ffa66897\ncopied /.git/objects/c2/1e36efddbf7d76ab06fa4c3805002949272e51\ncopied /.git/objects/c2/ac2e50fc931acc4334e0338b9c1a0001119b1a\ncopied /.git/objects/c3/3947878412e205f39044f17cdc99579ddf22ef\ncopied /.git/objects/c4/56115a7dfda311184a14b59fd014f413a0e8e3\ncopied /.git/objects/c4/88a7142e3b455067b40b7cfef21d69b7e72ddb\ncopied /.git/objects/ca/a164cc8fd2b268027eafa3a80f2b2f53806179\ncopied /.git/objects/ce/3c38384e1e55a5a3d63910875861faac54c935\ncopied /.git/objects/ce/d5b35bf73f3e404d2903d26c1cae1664d2ee7c\ncopied /.git/objects/d0/6eb1aa7191d47d0d373d34a1c709221e934fc0\ncopied /.git/objects/d3/be19a51c7ece87bf73a1efb64bcbf00494d945\ncopied /.git/objects/d3/cc9a33bb7361c5a9a1c78ee03de7d45a245607\ncopied /.git/objects/d4/0ce8aa8ffe095f4a5d725cf8d1e6a0f466cef4\ncopied /.git/objects/d4/ad998db14911135db2003022c1b35e6f83c9ec\ncopied /.git/objects/d4/da6c8b30cff31fe7cb5ccd7c7d22b240875204\ncopied /.git/objects/d7/93c1ec734febd8411a1c6a3361dc0cfbf79ade\ncopied /.git/objects/d9/094cf0c7d1f29825766028e72c8fd5b1ce6c47\ncopied /.git/objects/d8/e2d2ff4c4c9b74c0b679737467f85eefb2deef\ncopied /.git/objects/da/0618fcad40cd6102d813c3ef130b23a164ae2d\ncopied /.git/objects/da/cbfd8180ae1a91647ac22f41ebd9d97c7050f0\ncopied /.git/objects/da/d7995df4ad308bf0be9b2324ebcbbebc9c351e\ncopied /.git/objects/dc/3d1efcddfbe2c1d2b048b31243415cf79ec929\ncopied /.git/objects/dd/78b62ac7eeb52228bbfe5c675d25a04a9d1681\ncopied /.git/objects/de/ccacf4e13e1e511e5e94b62aaaf5f16a73d54b\ncopied /.git/objects/df/56c4a26eed7570ea25d6ad9d2c2ebb7bd2016c\ncopied /.git/objects/e2/acc92e626668905fe353d47cba1542ed8cdeaa\ncopied /.git/objects/e4/8518792cc1387fde7ad876cd16de196a3341f9\ncopied /.git/objects/e5/dc66c428c4f01336da7c4677127d24cf3efea2\ncopied /.git/objects/e6/fc5a2f4c9d69acea56e7c8fd1b61786d15ba63\ncopied /.git/objects/e7/84568417e4ac5b53ab5ea41cde863615473b72\ncopied /.git/objects/e8/3ab1026b188e71ca3d011cbf46f50466a82b4b\ncopied /.git/objects/ea/1ff617b8adb8135504ac770cfd66704b72d9c3\ncopied /.git/objects/ef/4fa6df38439f62baab9cd3df5e5394bb7439d5\ncopied /.git/objects/ef/9efe5f07d4ed5653a9931b79e60cbfc211d4ad\ncopied /.git/objects/ef/dccd1c09b9024c0eb4a57fa7754007e3119142\ncopied /.git/objects/ed/69beac7ecc6003fbe27625cb62381c089bcb52\ncopied /.git/objects/ed/965aaa204c99faf304572c1befefd365797411\ncopied /.git/objects/ed/b47568ed9eb01c7102b0af384f5dad4d3c6463\ncopied /.git/objects/f0/c7aa545d128081354c8cc86f47006f1c7f0a65\ncopied /.git/objects/f3/3e632403b34311729918dc9e5a7bdb26d263b9\ncopied /.git/objects/f4/622a9ae7a00b5a67039ac7b02b82ab93b01540\ncopied /.git/objects/f5/7f99a53378b30147d4bd7d87f1f65daf5b2533\ncopied /.git/objects/f6/23d5ad5b511d37e8420eeb0fc60679348b881d\ncopied /.git/objects/fd/0aa82d3b32de34810d172c58142f0315a1b314\ncopied /.git/objects/fe/8d3ae8409fb34cd66c827fcb0325fcac44b3ef\ncopied /.git/objects/pack/pack-ae2453dbdc903bfed9e7e5a9cfa597b089143d4f.idx\ncopied /.git/objects/pack/pack-ae2453dbdc903bfed9e7e5a9cfa597b089143d4f.pack\ncopied /.git/logs/refs/heads/master\ncopied /.git/refs/remotes/server/master\ncopied /.git/refs/remotes/origin/HEAD\ncopied /.git/refs/remotes/origin/gh-pages\ncopied /.git/refs/remotes/origin/master\ncopied /.git/logs/refs/remotes/server/master\ncopied /.git/logs/refs/remotes/origin/HEAD\ncopied /.git/logs/refs/remotes/origin/gh-pages\ncopied /.git/logs/refs/remotes/origin/master\nprecompiling templates\ndone!\nserver started on port 1111\nGET / 404 5ms\n```\n. [app.coffee](https://github.com/HHSnopek/HHSnopek.com/blob/master/app.coffee)\n. Thank you very much! I will take better notice to the change logs :)\n. Thought as I read through Tumblr API and Custom Theme Docs:\n- Dummy content: Why not pull what possibly is already on their blog? If nothing or OAuth key isn't present, then fill with literal dummy content(like presented when you create a new roots project)\n\nHas anyone attempted this yet?\n. This can be closed! :)\n. Transformers is gonna be merged soon anyway and by PRing it into that we can avoid another huge rebase :)\n. Should I merge to transformers, or master; once I complete the test?\n. Fixed and Complete!\n. Definitely can!\n. During rebase, I hit some of your commits by mistake, but I skipped over them. My commits are rebased though\n. Those commits from @jenius and L8D are not showing up in my rebase\n\n```\n# Your branch is ahead of 'origin/transformers' by 2 commits.\n```\n. Thank you @jenius :)\n. Just did\n. Added the man and clean cmd, should be set!\n. Alright Should be all set!\n. Ok... Same issue occurred prior... :/\n. Squashed everything to two commits!\n. oh :o\nSo to fix this i need to ... ?\n. Alright how do i look now?\n. Alright Glory commit was made, I promise next time I will implement better commit styling :)\n. There is no issue with it being in the console, it's just when coffee doesn't always compile it stops... Then the file is not view able in the console at all, and it shows your error in the terminal and not the console \n. Chrome Dev-Tools Console Vs Terminal Console\n. That will help plenty, but does it fix the possibility of when a file isn't fully compiled and won't compile because of an error? \nThat is what above will do, or according to the article at least. \n. I'm gonna take a shot at this to finish it before break ends\n. Source map for CoffeeScript, source map for Stylus, source map for Jade, ... source maps for everybody!!! :smile:  \n. If it's a breaking change, then lets just wait for the next major release of roots. Could we not just merge this with transformers for now?\nThen add a message for the terminal stating that roots will be updating to the \"next release of roots, axis grids will break...\" or something along the lines of that.\n. I know for a fact that my friend across the hall wants to learn wordpress for site building... Attempting to get him to jump into roots. With the addition of this, I think it might bring him in. \nWith pagination, couldn't we break the object into 'x' amount of objects then render as you scroll? Only thing I don't like about my idea is the increase size of the scroll bar as you scroll. Just a thought\n. What if we integrated blog features almost as a template? We could introduce an overview on how to use roots with blog features that are just built-in functions in axis, and already used jade features. Roots should always compile to a static site so it can be cached in the browser. \n\nSo if we created a template, super basic that would apply to a simple blog; with the help of course to the built in features that we already have, the users of roots can then interpret this for themselves. \n\nWe could also add an optional Json api for this, that would be an add on... Correct me if I'm mistaken in the Json part, but this would create an alternative tool to WordPress which is fully customizable to the extent of your mind.\n. From my understanding, asset-graph would improve the structuring of these blog features, and roots projects all together. I believe this should be addressed within asset-graph itself, if the addition of a blog was to be implemented, just for the reason that the structure of a blog would be different from a regular project.\n\nI agree with @samccone and how this feature should not be apart of the core of roots. What I'm getting at is that it should be an extension to roots. The usage @slang800 does is a great way to keep them practically separate, also does seem flawless with the needs of a little refinement. Reason I think that is due to me recreating what @slang800  wrote for that blog, into my own site which is more dynamic when loading the blog area. \n. @jenius I agree on all counts for using roots over wordpress, I just don't agree on the dynamic part :)\n\nNote: Within my project I did not use wordpress, I created a JSON file that used an ajax request to gain the data after the page was ready. The page only delayed the content for display, which is 60ms of loading time which of course will vary on the amount of content within your json file. I see what you're saying.\n\nAlso thank you for clarify with asset-graph.\n. So to the original problem of adding \n- tags\n- categories\n- search\n- pagination\n\nIt seems that at least tags and categories would be solved by the user with adding into their json. Search would just be parsing json or the element id's. The only thing I see for an addition is for pagination.\n. I don't believe the benchmark for v2.1.0 has been reached according to the [PR # 181](https://github.com/jenius/roots/pull/181)...\n\nPossible mistake in the code?\n. I'd just add it to the docs, otherwise I think it's fairly obvious for any user(windows, mac os x, or linux) to use git ^-^\n. This occurred last night for me. Created a new project and installed underscore & backbone, both installed in a path just like @slang800. Backbone & Underscore weren't added in the normal assets dir, only the new one.\n\n```\n\u251c\u2500\u2500 app.coffee\n\u251c\u2500\u2500 assets       <-- Backbone & Underscore weren't added here.\n\u251c\u2500\u2500 public\n\u251c\u2500\u2500 readme.md\n\u2514\u2500\u2500 usrdata\n\u2502       \u2514\u2500\u2500 workspace\n\u2502           \u2514\u2500\u2500 jillwaldron\n\u2502               \u2514\u2500\u2500 assets\n\u2502                   \u2514\u2500\u2500 components\n\u2502                       \u251c\u2500\u2500 backbone\n\u2502                       \u2514\u2500\u2500 underscore\n\u2514\u2500\u2500 views\n```\n. Shall I add this to the list of deployers for ship?\n. sadly this is how I'm suppose to send a client their site, I said download it from gh ^-^\n. Opening issue & adding to working deployers issue\n. :+1: Digital Ocean lets you ride the smooth waves as you chop them up with your own style without a hassle. \n. I literally pulled this up like 30min ago when searching for a sublime user configuration guide. It's amazing! http://docs.sublimetext.info :+1: \n. @jenius isn't providing an asset pipeline the equivalent of assetgraph itself?\n. Ahh @slang800 just explain the difference, if I'm not mistaken:\n\n#### High overview\n\nRails asset pipline\n- Concatenates files of the same type, into one file.\n\nAssetgraph\n- Creates an AST(no matter the file structure the developer uses), allowing us to transform & split files. So if page only uses part of a file(js/css), those parts are only loaded.\n. That's the other mystery, the `package` variable isn't present anywhere in my directory or files :frowning: \n. If I gave you access to a server with the occurring error, do you think you could view the environment?\n. That's fine, do you have a public key?\nEDIT: I'll send you the server info via email\n. Thank you!! - Sent to your gmail\n. Solved!\n`node_modules` needed to be ignored within `app.coffee`\n\nThank you @jenius for the help!!! :grinning: \n. This will be awesome to use!\n. ~~What operating system are you installing roots on?~~\n^ Disregard this...\n\nis python 2.7.x not installed prior to 3.x now 'n days?\n. I believe he was trying to say that we should put under roots requirements that you need python 2.7.x as a Node-gyp requirement\n. There should be a search engine for this haha\n. I just did a clean install of roots\nassuming linux:\nadd chris lea ppa\napt-get install git node nodejs; npm install -g roots\n\nHere's the [results](http://pastebin.com/sw40Gcnv)\nIt does use node-gyp for [execSync](https://www.npmjs.org/package/execSync)\n\n```\n execSync@1.0.1-pre install /usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\n> node-gyp rebuild\n```\n\nIn my error log, I do present a permissions error. That is due to the user being root, I think....\n. I installed v3 and no gyp rebuild or anything, it must be a reference to v2\n. @LtCmdDudefellah  `roots clean` works in 3.0.0-rc.6\n@jenius close this?\n. Wow that's insane - nice find!\n. Depending on which version you're using:\n\n#### roots v2\n\n[video tutorials](http://roots.cx/#tutorials)\nHere's various templates that you can use with roots v2: [roots-dev](https://github.com/roots-dev/)\n\n#### roots v3\n\n[docs](http://roots.readthedocs.org/en/latest/)\nReason I list the docs is because v3 is actively being worked on. It also has the latest features, even looking at v3's [branch](https://github.com/jenius/roots/tree/v3) can help.\n\n---\n\nHere's a whole issue-thread: #396 **List of Sites created by roots**\n\nPersonally I've watched all the v2 video tutorials and that got me started. I then read through code to comprehend dynamic content. V3 introduces a lot more flexibility with plugins due to pipes! Here's a short clip from @jenius I found when working with [jeet](http://www.youtube.com/watch?v=JRXMXHIgOkU), in this he uses V3 and has a detailed example of [dynamic content](https://github.com/carrot/roots-dynamic-content) and how an app.coffee should look.\n\nAfter v3 is released, my assumption at least is that, there will be new video tutorials and a whole new wave of examples and demos!\n\nRemember roots is a tool that will help you structure and build your web site or app. A ToDo-MVC in roots would be done the same way as a vanilla todo-mvc without roots(just different structure). \nGood luck! :grinning:\n. the `title:` uses a string like so:\nYours is an open text(without `\" \"`), so the second line is unexpected\n\n```\ntitle: \"Icaro\"\ndate: 6/23/2014\n```\n\nTry that :smile: \n. What version of roots are you using?\n. Assuming you're using roots v3, you'll have to add [carrot/roots-dynamic-content](https://github.com/carrot/roots-dynamic-content) to your app.coffee as an extension. Here's the [docs](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md) for it as well.\n\napp.coffee example:\n\n```\n###*\n * roots v3.0.0-rc.6\n###\n\naxis            = require('axis')\nautoprefixer    = require('autoprefixer-stylus')\nDynamicContent  = require('dynamic-content')\njeet            = require('jeet')\nrupture         = require('rupture')\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  extensions: [new DynamicContent]\n\n  stylus:\n    use: [axis(), rupture(), jeet(), autoprefixer()]\n```\n. Try this: take out ../ for the single_post_layout, and move the single_post_layout to the views folder\n. @jenius I renamed the project to `roots-test` and it compiles\nEDIT: I ran a quick test on it, and when creating a new project with `.` I get the compile error, is the watcher mistakening the `.` for a file path maybe?\n. Creating a project named: `1.1.1.1` gives this error as well\n. Whoa!! weird bug with this too:\n\nTL DR: once you watch the project, `1.css`, `1.html`, and `1.js` appear in the parent dir of the project.\n\n```\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0roots new 1.1.1.1\n[?] Your project's name: 1.1.1.1\n[?] A brief description of your project: \n\u25b8 project created\n\u25b8 dependencies installing\nnpm WARN package.json 1.1.1.1@ No description\nnpm WARN package.json 1.1.1.1@ No repository field.\nmarked@0.3.2 1.1.1.1/node_modules/marked\n\nrupture@0.1.0 1.1.1.1/node_modules/rupture\n\ncoffee-script@1.7.1 1.1.1.1/node_modules/coffee-script\n\u2514\u2500\u2500 mkdirp@0.3.5\n\naxis@0.2.0 1.1.1.1/node_modules/axis\n\u2514\u2500\u2500 nib@1.0.2 (stylus@0.37.0)\n\nstylus@0.45.1 1.1.1.1/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 debug@0.8.1\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\nautoprefixer-stylus@0.1.0 1.1.1.1/node_modules/autoprefixer-stylus\n\u2514\u2500\u2500 autoprefixer@1.1.20140523 (fs-extra@0.9.1, postcss@0.3.4)\n\njade@1.3.1 1.1.1.1/node_modules/jade\n\u251c\u2500\u2500 character-parser@1.2.0\n\u251c\u2500\u2500 commander@2.1.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 monocle@1.1.51 (readdirp@0.2.5)\n\u251c\u2500\u2500 constantinople@2.0.0 (uglify-js@2.4.13)\n\u251c\u2500\u2500 transformers@2.1.0 (promise@2.0.0, css@1.0.8, uglify-js@2.2.5)\n\u2514\u2500\u2500 with@3.0.0 (uglify-js@2.4.13)\n\u25b8 dependencies finished installing\n\u25b8 project initialized at /usrdata/1.1.1.1\n\u25b8 using template: roots-base\n\u2713 done!\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0ls\n1.1.1.1            Henry        mockups             share-button\naxis               hn-special   nexus               ship\nbuisnesscard       ionicons     powerline-shell     tripping-octo-wookie\ndelete-pen-usb.sh  iso          Python              VirtualBox VMs\ndesign-mockups     jade-book    rokkitt-fontBakery  web\ndesigns            lost+found   roots.cx            workspace\nflattr-icons       mochilamail  salty-carrots\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0cd 1.1.1.1/\n henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0roots watch\ncompiling... done!\n^C henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0ls\napp.coffee  assets  node_modules  package.json  public  readme.md  views\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0cd ..\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0ls\n1.1.1.1            designs       mochilamail         share-button\n1.css              flattr-icons  mockups             ship\n1.html             Henry         nexus               tripping-octo-wookie\n1.js               hn-special    powerline-shell     VirtualBox VMs\naxis               ionicons      Python              web\nbuisnesscard       iso           rokkitt-fontBakery  workspace\ndelete-pen-usb.sh  jade-book     roots.cx\ndesign-mockups     lost+found    salty-carrots\n```\n. I would think using regex, where ever the project dir is being parsed(fs_parser.coffee ?), would pull out 1.1.1.1 or any other variant with dots. maybe? I'd look into this more, but I have class now :frowning: \n. So I did a little [research](http://stackoverflow.com/questions/12478679/npm-install-vs-update-whats-the-difference)\n\nPackage.json\n\n``` json\n{\n  \"name\":          \"my-project\",\n  \"version\":       \"1.0\",                             // install   update\n  \"dependencies\":  {                                  // ------------------\n    \"already-installed-versionless-module\":  \"*\",     // ignores   \"1.0\" -> \"1.1\"\n    \"already-installed-versioned-module\":    \"3.4.1\"  // ignores   ignores\n    \"not-yet-installed-versionless-module\":  \"*\",     // installs  installs\n    \"not-yet-installed-versioned-module\":    \"2.7.8\"  // installs  installs\n  }\n}\n```\n\nOtherwise in npm [itself](https://github.com/npm/npm/blob/master/lib/update.js#L2) states that\n\n```\nfor each pkg in prefix that isn't a git repo\n  look for a new version of pkg that satisfies dep\n  if so, install it.\n  if not, then update it\n```\n\nHope this helps!\n. This also occurred to me with roots 2.1.3(I think... Can't find my error log) I found that, between **.50 - .15(maybe .1 ?) Gb** of the max memory this doesn't occur \n![](https://i.cloudup.com/eCm9ON8c2p.png)\n. @nanotime I'd recommend removing node and npm (to remove the needed sudo permissions) and follow this [gist](//gist.github.com/isaacs/579814). It took me like 5min to compile from source but it solved all my issues\n. @ztrdoo7 \n`roots watch --port 1234` I just tested this, it will work.\nEdit: I do have another project running on port 1111 :smile: \n. Could you upload the error log?\nEDIT: Just put it on pastebin\nfollow this:\n\n```\nroots -v\nroots watch --port 1234\n```\n\nI have a slight feeling that Kaspersky is blocking it, maybe? \n. I don't see the reason to use anti virus on linux... Considering you know\nwhat your accessing and downloading, with the knowledge if it's safe;\notherwise if you really need it, you should be able to change the ports or\nadd access to localhost:1111 within Kaspersky\n\nOn Mon, Jun 9, 2014 at 9:20 PM, Sam Saccone notifications@github.com\nwrote:\n\n> ha no but really I am not sure :|\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/495#issuecomment-45564135.\n\n## \n-  Henry Snopek\n. haha whoops - not sure why I thought that; In that case though you can definitely allow access in Kaspersky -> [follow this](http://support.kaspersky.com/6419) and allow port 1111 for any network access\n. @jenius confirmed this patch does work!\n:ship: that patch\n\n:monkey_face: \n. Which version of roots are you using? 2.1.4 or the latest beta?\n. Reason I ask is because in that video. @jenius is using roots v3 and not 2.1.4 - The way jeet is being [included](http://youtu.be/JRXMXHIgOkU?t=4m49s) is the same as the current way in roots v3. You can install roots v3 by running `npm install -g roots@pre`.\n\nIf jeet isn't being found and it is in the local `node_modules` folder at the project root, you might have  to install the node modules without `sudo` and `sudo` has given me problems in the past. I'd recommend removing all the npm packages & install everything without `sudo` (including npm & node).\n. What do you mean it's missing?\n. are you using roots v2 or v3?\n. In v2 you'll have to hack the `app.coffee` a little because rupture runs as a plugin for stylus prior to compilation of stylus... Or compile the stylus yourself, from the command line, prior to refreshing the page\nI'd recommend installing v3 `npm install roots@pre` and the default template project has rupture. We also have some pretty nice docs for v3 currently: [roots.rtfd.org](http://roots.readthedocs.org/en/latest/)\n. Awesome! Here's a thread with some stuff that will help you out! #468\n. I posted this in your previous thread, but I'll restate it here too\n\n### docs\n\nv3: [roots.rtfd.org](http://roots.readthedocs.org/en/latest/)\nv2: [roots.cx/docs](http://roots.cx/docs)\n\nI personally recommend v3 as it has the latest features!\n. hhsnopek.com -> [github.com/hhsnopek/hhsnopek](//github.com/hhsnopek/hhsnopek)\n. I'd just like to throw out there that I'm using node from homebrew. I know that `sudo` screws up everything with osx & linux. You're probably gonna have to reinstall homebrew/node without sudo, or fix those permissions.\n. Hey @S1efan, which version of roots are you using? I'm using v3 and can't replicate this.\n. @jenius I believe it's due to .DS_Store updating or adding itself as you navigate through the folders\n. even with `.DS_Store` in the ignores of `app.coffee` it persists to reload... any ideas on completely ignoring `.DS_Store`?\n. even hard coded in, when `.DS_Store` is added it reloads :frowning: - but it ignores updates\n. when `.DS_Store` is added to a folder, while roots is watching the project, roots recompiles. When `.DS_Store` is already present and you navigate into the folder, roots does not recompile\n\nEDIT: I hard coded `.DS_Store` into roots and linked it before doing the above\n. ![Deal with it](http://i2.kym-cdn.com/photos/images/newsfeed/000/243/561/afc.gif)\n. Hey @svallory - roots actually uses [accord](github.com/jenius/accord) to compile various types of preprocessed languages. I think a PR there for typescript would end up being a little bit faster in compilation time :smile: \n. @svallory whoops, I was assuming you were using v3 - currently v3 has a lot more features including plugins, better speed, etc. A lot of us are using v3 in production as well. I believe we are getting close launch with v3, @jenius might be able to fill you in more on that\n. @jenius #580\n\n> Yeah I know, I'm sorry! We're in between releases right now actually so things are a little wonky. I'd reference 3.0 for everything more or less at this point. It is quite stable, we're just polishing up a couple edge cases and publicity things before launch.\n> \n> Also, here's our incomplete docs site for v3. I hope this satisfies the designer in you :wink: http://roots-web.bitballoon.com/\n. I think I've stated this before, but you shouldn't need or use sudo with npm. With npm having sudo permissions it screws up a lot of modules. You might want to look into using [brew](http://brew.sh/) to control node and npm. Once you have that setup, run `brew update; brew upgrade; brew doctor` then install node and npm via brew.\n\nEdit: you'll end up running into node & npm issues after you install via brew. Run `brew doctor` once more and follow the steps to fixing this issue. \n. From personal experience using linux @jenius's fix never worked for me. I ended up reinstalling npm & node, sometimes my whole OS O.o\n\nbut it could work for you :smile: \n. Try using brew to fix the issue, mentioned above\n\n## \n\nHenry Snopek\n\nOn Wed, Dec 17, 2014 at 4:35 PM, ccsouthard notifications@github.com\nwrote:\n\n> On mac, no luck so far with `sudo chown -R $USER /usr/local/lib` . \n> I think I have many node issues. \n> \n> ```\n> Muthership:portfolio-roots chaz$ sudo chown -R $USER /usr/local/lib\n> Password:\n> Muthership:portfolio-roots chaz$  sudo npm i roots@pre -g\n> \n> > posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> > node-gyp rebuild\n> gyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\n> gyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n>   CXX(target) Release/obj.target/posix/src/posix.o\n>   SOLINK_MODULE(target) Release/posix.node\n>   SOLINK_MODULE(target) Release/posix.node: Finished\n> \n> > fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> > node-gyp rebuild\n> gyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\n> gyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n>   CXX(target) Release/obj.target/fse/fsevents.o\n>   SOLINK_MODULE(target) Release/fse.node\n>   SOLINK_MODULE(target) Release/fse.node: Finished\n> /usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n> > roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> > node ./post_install.js\n> ---------------------------------------------------------\n> Roots uses analytics to help the core team to get a\n> better view of how developers use roots. All analytics\n> are collected anonymously, and analytics data is used\n> only to make roots better for everyone. However, if you\n> would like to disable analytics, you are welcome to do\n> so by running the command `roots analytics --disable`\n> Much like roots itself, roots' analytics are open source.\n> Check out http://roots.cx/analytics for more information.\n> ---------------------------------------------------------\n> roots@3.0.0-rc.10 /usr/local/lib/node_modules/roots\n> \u251c\u2500\u2500 rimraf@2.2.8\n> \u251c\u2500\u2500 colors@0.6.2\n> \u251c\u2500\u2500 open@0.0.5\n> \u251c\u2500\u2500 graceful-fs@3.0.5\n> \u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n> \u251c\u2500\u2500 minimatch@1.0.0 (sigmund@1.0.0, lru-cache@2.5.0)\n> \u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n> \u251c\u2500\u2500 when@3.6.4\n> \u251c\u2500\u2500 argparse@0.1.16 (underscore.string@2.4.0, underscore@1.7.0)\n> \u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, minimatch@0.2.14, readable-stream@1.0.33)\n> \u251c\u2500\u2500 serve-static@1.7.1 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, send@0.10.1)\n> \u251c\u2500\u2500 coffee-script@1.8.0 (mkdirp@0.3.5)\n> \u251c\u2500\u2500 update-notifier@0.2.2 (is-npm@1.0.0, string-length@1.0.0, chalk@0.5.1, semver-diff@2.0.0, latest-version@1.0.0)\n> \u251c\u2500\u2500 posix@1.0.4\n> \u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n> \u251c\u2500\u2500 lodash@2.4.1\n> \u251c\u2500\u2500 configstore@0.3.1 (object-assign@0.3.1, osenv@0.1.0, uuid@1.4.2, js-yaml@3.0.2)\n> \u251c\u2500\u2500 accord@0.12.0 (indx@0.2.2, resolve@0.7.4, fobject@0.0.3, glob@4.3.1, uglify-js@2.4.16)\n> \u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.2, morgan@1.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, connect@3.3.3, faye-websocket@0.7.3, publicist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.2.2, lodash.remove@2.4.1, archivist-middleware@0.0.1, escapist-middleware@0.0.2, pathologist-middleware@0.0.1, update-notifier@0.1.10, apology-middleware@0.0.4)\n> \u251c\u2500\u2500 sprout@0.1.3 (indx@0.2.2, which@1.0.8, osenv@0.1.0, ncp@1.0.1, string@2.1.0, colors@1.0.3, ejs@1.0.0, readdirp@1.1.0, inquirer@0.8.0)\n> \u251c\u2500\u2500 chokidar@0.8.4 (recursive-readdir@0.0.2, fsevents@0.2.1)\n> \u251c\u2500\u2500 ship@0.1.4 (indx@0.2.2, mime@1.2.11, colors@1.0.3, fstream@1.0.3, optimist@0.6.1, file-map@0.0.1, tar@1.0.3, ftp@0.3.8, request@2.51.0, github@0.2.1, ssh2@0.3.6, js-yaml@3.2.3, heroku-client@1.5.0, aws-sdk@2.1.3, inquirer@0.8.0)\n> \u2514\u2500\u2500 npm@2.1.12\n> Muthership:portfolio-roots chaz$ ls\n> roots\n> Muthership:portfolio-roots chaz$ roots new test\n> \u2718 Error: Command failed: npm ERR! install Couldn't read dependencies\n> npm ERR! Error: Invalid name: \"<%= name %>\"\n> npm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\n> npm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\n> npm ERR!     at Array.forEach (native)\n> npm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\n> npm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\n> npm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\n> npm ERR!     at evalmachine.<anonymous>:271:14\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n> npm ERR! If you need help, you may report this *entire* log,\n> npm ERR! including the npm and node versions, at:\n> npm ERR!     <http://github.com/npm/npm/issues>\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\n> npm ERR! cwd /Users/chaz/.config/sprout/roots-base\n> npm ERR! node -v v0.10.33\n> npm ERR! npm -v 1.4.28\n> npm ERR! \n> npm ERR! Additional logging details can be found in:\n> npm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\n> npm ERR! not ok code 0\n> Potentially unhandled rejection [3] Error: Command failed: npm ERR! install Couldn't read dependencies\n> npm ERR! Error: Invalid name: \"<%= name %>\"\n> npm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\n> npm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\n> npm ERR!     at Array.forEach (native)\n> npm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\n> npm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\n> npm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\n> npm ERR!     at evalmachine.<anonymous>:271:14\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n> npm ERR! If you need help, you may report this *entire* log,\n> npm ERR! including the npm and node versions, at:\n> npm ERR!     <http://github.com/npm/npm/issues>\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\n> npm ERR! cwd /Users/chaz/.config/sprout/roots-base\n> npm ERR! node -v v0.10.33\n> npm ERR! npm -v 1.4.28\n> npm ERR! \n> npm ERR! Additional logging details can be found in:\n> npm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\n> npm ERR! not ok code 0\n>   at ChildProcess.exithandler (child_process.js:648:15)\n>   at ChildProcess.emit (events.js:98:17)\n>   at maybeClose (child_process.js:756:16)\n>   at Socket.<anonymous> (child_process.js:969:11)\n>   at Socket.emit (events.js:95:17)\n>   at Pipe.close (net.js:465:12)\n> ```\n> \n> ## @jenius and @hhsnopek-  Is there an easy way to clean and uninstall node and then reinstall?  I'll start looking on stack exchange \u2013 but in case you run into this before, I'm all ears.  I'd rather not reinstall my OS. ;(\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/587#issuecomment-67409246\n. I swear its the sudo permissions\n\n## \n\nHenry Snopek\n\nOn Wed, Dec 17, 2014 at 6:38 PM, ccsouthard notifications@github.com\nwrote:\n\n> @hhsnopek good reference.\n> I ended up manually removing node and some node modules and installed nvm. I reinstalled a jeet and the stylus watcher is working.  Strangely, pulling\n> \n> ```\n>  sudo npm i roots@pre -g\n> Password:\n> \n> > posix@1.0.4 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/posix\n> > node-gyp rebuild\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing posix@1.0.4\n> \n> > fsevents@0.2.1 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> > node-gyp rebuild\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing fsevents@0.2.1\n> /Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n> > roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> > node ./post_install.js\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> node.js:815\n>     var cwd = process.cwd();\n>                       ^\n> Error: EACCES, permission denied\n>     at Function.startup.resolveArgv0 (node.js:815:23)\n>     at startup (node.js:58:13)\n>     at node.js:906:3\n> npm ERR! roots@3.0.0-rc.10 postinstall: `node ./post_install.js`\n> npm ERR! Exit status 8\n> npm ERR! \n> npm ERR! Failed at the roots@3.0.0-rc.10 postinstall script.\n> npm ERR! This is most likely a problem with the roots package,\n> npm ERR! not with npm itself.\n> npm ERR! Tell the author that this fails on your system:\n> npm ERR!     node ./post_install.js\n> npm ERR! You can get their info via:\n> npm ERR!     npm owner ls roots\n> npm ERR! There is likely additional logging output above.\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"/Users/chaz/.nvm/v0.10.34/bin/node\" \"/Users/chaz/.nvm/v0.10.34/bin/npm\" \"i\" \"roots@pre\" \"-g\"\n> npm ERR! cwd /Users/chaz/projects/portfolio-roots\n> npm ERR! node -v v0.10.34\n> npm ERR! npm -v 1.4.28\n> npm ERR! code ELIFECYCLE\n> npm ERR! not ok code 0\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/587#issuecomment-67423855\n. stylus doesn't need the permissions like postfix does.\n\nThe error says: **EACCES, permission denied**\nIf you notice the postinstall uses, `node ./post_install.js` and **not** `sudo ./post_install.js`.\n\n```\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> node ./post_install.js\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n\nnode.js:815\n    var cwd = process.cwd();\n                      ^\nError: EACCES, permission denied\n    at Function.startup.resolveArgv0 (node.js:815:23)\n    at startup (node.js:58:13)\n    at node.js:906:3\n```\n\nSorry to be so blunt, but the issue is that your permissions are incorrect. It's because you're using `sudo` to run, install, and access your node_modules with npm and node. To fix this you must reinstall node and npm, **without** using sudo. If you _really_ don't want to use brew to fix the issue, use this gist. Installs [node and npm within 30s](https://gist.github.com/isaacs/579814#file-node-and-npm-in-30-seconds-sh) and uses proper permissions.\n. Also here's a reference to a past struggle of mine that was caused by using `sudo` #196\n. The solution from issue #196 was for Ubuntu, not mac fyi\n. Run @jenius's cmd now on `/usr/local/lib` - `sudo chown -R $USER /usr/local/lib/node_modules`\n\nEdit: Then run `npm i roots@pre -g`\n. @ccsouthard Here's an explanation of the latest problem: basically the issue is that you, as a user, do not have read/write access to `/usr/local/lib`. You need to give yourself the rights to do so. \n. That's a previous roots error we had, you gotta remove that file. `rm -f /usr/local/share/man/man1/roots.1`\n\nOnce you do that, we should be good :smile: \n. whoops use `sudo`, this is a different section, not `/usr/lib`\n. `sudo chown -R $USER /usr/local/bin/` your bin can't be symlinked due to permissions (cause from using sudo with npm & node)\n. `sudo chown -R $USER /usr/local/bin/` then `sudo rm -fr /usr/local/share/man/man1/roots.1` then install roots\n. Ping @slang800 I think I've pointed the right direction.... Any thoughts? It's definitely the symlink issue.\n. @ccsouthard did you actually remove the roots.1 file? it seems in your command sequence that you just did `roots` not `roots.1`\n. @ccsouthard don't use finder when navigating through lib, it's a lot easier with the terminal. You shouldn't have to reinstall OSX. \n. Does it still not work if you compile via command line (with jade)?\n. Everything compiles for me, I had an issue using roots 3.0.0 rather than 3.0.2 - are you up to date on roots? \n\n![ordered list](https://cldup.com/oyklm4fUN8.png)\n. Have you tried a fresh install of roots? Maybe commit your changes, delete the project and reclone it down?\n\n## \n\nHenry Snopek\n\nOn Mon, Mar 16, 2015 at 4:59 PM, Thiago De Bastos\nnotifications@github.com wrote:\n\n> Hmm things just got weirder. In both Chrome and Firefox I get this:\n> ![screenshot-nocompile-roots](https://cloud.githubusercontent.com/assets/6151341/6677400/84f58b16-cc27-11e4-9949-648c7abfc08d.png)\n> \n> ## Apologies for my lack of better issue-description, I am exhausted!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/622#issuecomment-81959994\n. I got around this by pulling the latest from master, installing it (`npm install`), then linking it (`npm link`).\n. Hey everyone (@gadern & @thiagodebastos), the problem has been resolved. Run `roots tpl rest` and you'll be able to create new projects :smile: \n. A quick fix to to create an [ignore rule](http://roots.cx/docs/configuration) within your `app.coffee`, as well we have support for [multi-pass](http://roots.cx/docs/multipass) because if can be useful to use.\n. Hey @adampotocki you can convert all of your scripts into pure javascript with the exception of `app.coffee` (if i'm not mistaken). If you want to use any other languages within roots checkout [accord](//github.com/jenius/accord). Babel is supported in accord so you can use it!\n. Adding a little clarity, roots uses accord to compile everything. All you need to do is install the language you'd like to use via npm and roots will automatically pick it up and compile it for you :grinning: \n. No problem, if you have any other questions let us know! :smile: \n. Could you provide your package.json?\n. 1. You have multiple errors within your `package.json`, use this site to correct the issues: http://package-json-validator.com/\n2. I'm unsure what is wrong with your code you've pasted but I don't see any roots problems in that or in your package.json\n. Hey @wojomike have you seen this? https://github.com/jenius/roots/issues/614\n. Quick heads up!! sprout is actually on [v0.4.1](https://github.com/carrot/sprout/releases/tag/v0.4.1)\n. I'm not actually sure, I haven't kept a close eye on sprout. cc @kylemac\n. I don't think you've defined `console`\n:doge: \n. @jenius you need to add a `.jshint` file so that it knows what to be parsing. The default options are [here](https://raw.githubusercontent.com/thoughtbot/hound/master/config/style_guides/javascript.json). You need to add `node: true` for it to stop yelling at you for `console.log` errors :grinning: \n. You got it on the spot, but the use cases could go beyond using netlify for deployment. It's more of a helper so that your global version & project version are the same so if it is specified within the `package.json` you know you're okay\n. it would just be a simple check at the beginning of the root watching or compiling a project, shouldn't slow roots down at all as it's not compiling anything, just checking the version - probably can just read the projects `package.json` then use the same method for printing `roots -v` and compare them\n. yeah so right now when you wanna access templates without creating a new project you're able to use both: `roots tpl ...` & `roots template ...`. When we create a project with a template you must use `roots new <name> --template <templateName>` with no alias to `roots new <name> --tpl <tplName>`\n. tl;dr: alias `--tpl` to `--template`\n. if you're able to get it done that would be great, otherwise I can get to it later this weekend\n. thank you :dancer: \n. Hello everyone, I've been digging into the [roots-contentful #27](https://github.com/carrot/roots-contentful/issues/27) issue. It seems that a random file during the compilation during the roots-contentful category becomes \"stuck\" as the `_path` variable which later affects the `filename` variable in `@roots.config.locals`. I do have a [hotfix](https://github.com/carrot/accord/pull/1) that requires locally linking accord & roots-contentful, there are unknown sideaffects to this. Besides unable to overwrite the defaults, like overriding the filename to your sourcemap. (Which is the only failing test [here](https://github.com/carrot/accord/blob/master/test/test.coffee#L932)), this fix works.\n\nI know this was an issues in roots-records prior to this [refactor](https://github.com/carrot/roots-records/pull/23). If you take a look [here](https://github.com/carrot/roots-records/pull/23/files#diff-2290943f47872064e53f430a293f3c8fR150), this is where I believe the problem gets solved on the extension end. \n\nI will keep updating as I continue with this bug\n. :tada: :grinning: \n. I've actually used poststylus and it works great for the plugin I was using\n. \"/components/moment/moment\" has fixed moment.js, jquery is still not connection, \nThank You slang800\n. You're a life saver slang800, thank you!\n. Removed .node-gyp then did `npm cache clean` and got a new error\n\n``` bash\nnpm http 200 https://registry.npmjs.org/delayed-stream/-/delayed-stream-0.0.5.tgz\nmake: Entering directory `/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\n  CXX(target) Release/obj.target/shell/src/shell.o\n../src/shell.cpp: In function \u2018int parent(int)\u2019:\n../src/shell.cpp:79:35: error: no matching function for call to \u2018wait::wait(int*)\u2019\n../src/shell.cpp:79:35: note: candidates are:\nIn file included from /usr/include/stdlib.h:42:0,\n                 from /usr/include/c++/4.7/cstdlib:66,\n                 from ../src/shell.cpp:10:\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait()\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   candidate expects 0 arguments, 1 provided\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait(const wait&)\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   no known conversion for argument 1 from \u2018int*\u2019 to \u2018const wait&\u2019\n../src/shell.cpp: In function \u2018void child(const char*)\u2019:\n../src/shell.cpp:64:11: warning: ignoring return value of \u2018int dup(int)\u2019, declared with attribute warn_unused_result [-Wunused-result]\n../src/shell.cpp:66:11: warning: ignoring return value of \u2018int dup(int)\u2019, declared with attribute warn_unused_result [-Wunused-result]\nmake: *** [Release/obj.target/shell/src/shell.o] Error 1\nmake: Leaving directory `/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\ngyp ERR! build error \ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/share/npm/node_modules/node-gyp/lib/build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\ngyp ERR! System Linux 3.8.0-19-generic\ngyp ERR! command \"node\" \"/usr/share/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\ngyp ERR! node -v v0.10.13\ngyp ERR! node-gyp -v v0.10.6\ngyp ERR! not ok \nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n\n```\n. Using Linux, would never use windows ;), and after removing `node_modules`. This is what I got.\n\n`sudo npm install roots -g` is the  command I use, always...\n\n```\nnpm http GET https://registry.npmjs.org/stable\nnpm http GET https://registry.npmjs.org/tar\nnpm http GET https://registry.npmjs.org/tmp\nnpm http GET https://registry.npmjs.org/unzip/0.1.7\nnpm http 304 https://registry.npmjs.org/buffer-crc32/0.2.1\nnpm http 304 https://registry.npmjs.org/cookie/0.0.5\nnpm http 304 https://registry.npmjs.org/send/0.1.1\nnpm http 304 https://registry.npmjs.org/fresh/0.1.0\nnpm http 304 https://registry.npmjs.org/bytes/0.2.0\nnpm http 200 https://registry.npmjs.org/commander/-/commander-1.1.1.tgz\nnpm http GET\nhttps://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz\nnpm http GET https://registry.npmjs.org/send/-/send-0.1.1.tgz\nnpm http GET https://registry.npmjs.org/bytes/-/bytes-0.2.0.tgz\nnpm http GET https://registry.npmjs.org/fresh/-/fresh-0.1.0.tgz\nnpm http 200 https://registry.npmjs.org/with/-/with-1.0.4.tgz\nnpm http 304 https://registry.npmjs.org/pause/0.0.1\nnpm http 304 https://registry.npmjs.org/rimraf\nnpm http 304 https://registry.npmjs.org/glob\nnpm http 304 https://registry.npmjs.org/abbrev\nnpm http GET https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\nnpm http 304 https://registry.npmjs.org/archy\nnpm http GET https://registry.npmjs.org/rimraf/-/rimraf-2.1.4.tgz\nnpm http 304 https://registry.npmjs.org/fstream\nnpm http 304 https://registry.npmjs.org/glob\nnpm http 200 https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 304 https://registry.npmjs.org/hogan.js\nnpm http 304 https://registry.npmjs.org/nopt\nnpm http 304 https://registry.npmjs.org/promptly\nnpm http 200 https://registry.npmjs.org/dep-graph/-/dep-graph-1.1.0.tgz\nnpm http 200\nhttps://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.1.tgz\nnpm http 304 https://registry.npmjs.org/rc\nnpm http 304 https://registry.npmjs.org/read-package-json\nnpm http 200 https://registry.npmjs.org/mime/-/mime-1.2.2.tgz\nnpm http 304 https://registry.npmjs.org/rimraf\nnpm http 200 https://registry.npmjs.org/uglify-js/-/uglify-js-1.0.7.tgz\nnpm http 304 https://registry.npmjs.org/stable\nnpm http 304 https://registry.npmjs.org/tmp\nnpm http 304 https://registry.npmjs.org/tar\nnpm http 200\nhttps://registry.npmjs.org/transformers/-/transformers-2.0.1.tgz\nnpm http 304 https://registry.npmjs.org/unzip/0.1.7\nnpm http 200 https://registry.npmjs.org/monocle/-/monocle-0.1.48.tgz\nnpm http GET https://registry.npmjs.org/tmp/-/tmp-0.0.20.tgz\nnpm http GET https://registry.npmjs.org/unzip/-/unzip-0.1.7.tgz\nnpm http 200 https://registry.npmjs.org/formidable/-/formidable-1.0.14.tgz\nnpm http 200\nhttps://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.1.tgz\nnpm http GET https://registry.npmjs.org/keypress\nnpm http 200 https://registry.npmjs.org/cookie/-/cookie-0.0.5.tgz\nnpm http 200 https://registry.npmjs.org/send/-/send-0.1.1.tgz\nnpm http 200 https://registry.npmjs.org/bytes/-/bytes-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/fresh/-/fresh-0.1.0.tgz\nnpm http 200 https://registry.npmjs.org/pause/-/pause-0.0.1.tgz\nnpm http 200 https://registry.npmjs.org/rimraf/-/rimraf-2.1.4.tgz\nnpm http 200 https://registry.npmjs.org/tmp/-/tmp-0.0.20.tgz\nnpm http 200 https://registry.npmjs.org/unzip/-/unzip-0.1.7.tgz\nnpm http GET https://registry.npmjs.org/amdefine\nnpm http 304 https://registry.npmjs.org/keypress\nnpm http 304 https://registry.npmjs.org/amdefine\nnpm http GET https://registry.npmjs.org/graceful-fs\nnpm http 304 https://registry.npmjs.org/graceful-fs\nnpm http GET https://registry.npmjs.org/config-chain\nnpm http GET https://registry.npmjs.org/read\nnpm http GET https://registry.npmjs.org/slide\nnpm http GET https://registry.npmjs.org/npmlog\n\n> execSync@1.0.0-pre install\n/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\n> node-gyp rebuild\n\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/readable-stream\nnpm http GET https://registry.npmjs.org/setimmediate\nnpm http GET https://registry.npmjs.org/match-stream/0.0.1\nnpm http GET https://registry.npmjs.org/pullstream\nnpm http GET https://registry.npmjs.org/binary\nnpm http GET https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/config-chain\nnpm http 304 https://registry.npmjs.org/readable-stream\nnpm http 304 https://registry.npmjs.org/read\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/block-stream\nnpm http 304 https://registry.npmjs.org/setimmediate\nmake: Entering directory\n`/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\n  CXX(target) Release/obj.target/shell/src/shell.o\nnpm http 304 https://registry.npmjs.org/slide\nnpm http 304 https://registry.npmjs.org/match-stream/0.0.1\nnpm http 304 https://registry.npmjs.org/npmlog\nnpm http 304 https://registry.npmjs.org/pullstream\nnpm http GET\nhttps://registry.npmjs.org/match-stream/-/match-stream-0.0.1.tgz\nnpm http GET https://registry.npmjs.org/proto-list\nnpm http GET https://registry.npmjs.org/ini\nnpm http 304 https://registry.npmjs.org/binary\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/block-stream\nnpm http GET https://registry.npmjs.org/inherits/-/inherits-1.0.0.tgz\nnpm http 304 https://registry.npmjs.org/proto-list\nnpm http 304 https://registry.npmjs.org/ini\n../src/shell.cpp: In function \u2018int parent(int)\u2019:\n../src/shell.cpp:79:35: error: no matching function for call to\n\u2018wait::wait(int*)\u2019\n../src/shell.cpp:79:35: note: candidates are:\nIn file included from /usr/include/stdlib.h:42:0,\n                 from /usr/include/c++/4.7/cstdlib:66,\n                 from ../src/shell.cpp:10:\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note: wait::wait()\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   candidate\nexpects 0 arguments, 1 provided\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:\nwait::wait(const wait&)\n/usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:7: note:   no known\nconversion for argument 1 from \u2018int*\u2019 to \u2018const wait&\u2019\nnpm http GET https://registry.npmjs.org/proto-list/-/proto-list-1.2.2.tgz\n../src/shell.cpp: In function \u2018void child(const char*)\u2019:\n../src/shell.cpp:64:11: warning: ignoring return value of \u2018int dup(int)\u2019,\ndeclared with attribute warn_unused_result [-Wunused-result]\n../src/shell.cpp:66:11: warning: ignoring return value of \u2018int dup(int)\u2019,\ndeclared with attribute warn_unused_result [-Wunused-result]\nmake: *** [Release/obj.target/shell/src/shell.o] Error 1\nmake: Leaving directory\n`/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync/build'\ngyp ERR! build error\ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit\n(/usr/share/npm/node_modules/node-gyp/lib/build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit\n(child_process.js:789:12)\ngyp ERR! System Linux 3.8.0-19-generic\ngyp ERR! command \"node\"\n\"/usr/share/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd\n/usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\ngyp ERR! node -v v0.10.13\ngyp ERR! node-gyp -v v0.10.6\ngyp ERR! not ok\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/mute-stream\nnpm http GET https://registry.npmjs.org/underscore.string\nnpm http GET https://registry.npmjs.org/ansi\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chown\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/buffer-crc32/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chown\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chown\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/formidable/LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chown\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/cookie-signature/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/bytes/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/pause/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/send'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/send/History.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules'\nnpm ERR! error rolling back  roots@2.0.2 { [Error: ENOTEMPTY, rmdir\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path:\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules' }\nnpm ERR! weird error 1\nnpm http 200\nhttps://registry.npmjs.org/match-stream/-/match-stream-0.0.1.tgz\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/hogan.js/test/jquery.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 200 https://registry.npmjs.org/inherits/-/inherits-1.0.0.tgz\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/connect/node_modules/qs/index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! tar.unpack error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724035391-0.9463049054611474/tmp.tgz\nnpm http 200 https://registry.npmjs.org/proto-list/-/proto-list-1.2.2.tgz\nnpm ERR! Error: ENOENT, open\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/rc/node_modules/optimist/test/_/bin.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/rc/node_modules/optimist/test/_/bin.js\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! tar pack Error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724033158-0.10729595157317817/package\nnpm ERR! addLocalDirectory Could not pack\n\"/home/henry/tmp/npm-9793-9eLpIvYK/1373724033158-0.10729595157317817/package\"\nto \"/home/henry/.npm/transformers/2.0.1/package.tgz\"\nnpm ERR! tar pack Error reading\n/home/henry/tmp/npm-9793-9eLpIvYK/1373724033004-0.41382312099449337/package\nnpm ERR! addLocalDirectory Could not pack\n\"/home/henry/tmp/npm-9793-9eLpIvYK/1373724033004-0.41382312099449337/package\"\nto \"/home/henry/.npm/uglify-js/1.0.7/package.tgz\"\nnpm http 304 https://registry.npmjs.org/mute-stream\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/request/tests/googledoodle.png\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir\n'/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse'\nFile exists:\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse\nMove it away, and try again.\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/update-notifier/node_modules/configstore/node_modules/yamljs/node_modules/argparse/LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/share/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat\n'/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.8.0-19-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /usr/lib\nnpm ERR! node -v v0.10.13\nnpm ERR! npm -v 1.3.3\nnpm ERR! path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md\nnpm ERR! fstream_path\n/usr/lib/node_modules/roots/node_modules/bower/node_modules/lodash/doc/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack\n/usr/share/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/underscore.string\nnpm http 304 https://registry.npmjs.org/ansi\nnpm http GET https://registry.npmjs.org/forever-agent\nnpm http GET https://registry.npmjs.org/json-stringify-safe\nnpm http GET https://registry.npmjs.org/qs\nnpm http GET https://registry.npmjs.org/tunnel-agent\nnpm http GET https://registry.npmjs.org/http-signature\nnpm http GET https://registry.npmjs.org/hawk\nnpm http GET https://registry.npmjs.org/aws-sign\nnpm http GET https://registry.npmjs.org/oauth-sign\nnpm http GET https://registry.npmjs.org/cookie-jar\nnpm http GET https://registry.npmjs.org/node-uuid\nnpm http GET https://registry.npmjs.org/mime\nnpm http GET https://registry.npmjs.org/form-data/0.0.8\nnpm http 304 https://registry.npmjs.org/forever-agent\nnpm http 304 https://registry.npmjs.org/http-signature\nnpm http 304 https://registry.npmjs.org/json-stringify-safe\nnpm http 304 https://registry.npmjs.org/qs\nnpm http 304 https://registry.npmjs.org/hawk\nnpm http 304 https://registry.npmjs.org/tunnel-agent\nnpm http 304 https://registry.npmjs.org/aws-sign\nnpm http GET https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 304 https://registry.npmjs.org/oauth-sign\nnpm http 304 https://registry.npmjs.org/cookie-jar\nnpm http 304 https://registry.npmjs.org/node-uuid\nnpm http 304 https://registry.npmjs.org/form-data/0.0.8\nnpm http 304 https://registry.npmjs.org/mime\nnpm http GET https://registry.npmjs.org/form-data/-/form-data-0.0.8.tgz\nnpm http GET https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.0.tgz\nnpm http 200 https://registry.npmjs.org/qs/-/qs-0.6.5.tgz\nnpm http 200 https://registry.npmjs.org/form-data/-/form-data-0.0.8.tgz\nnpm http 200 https://registry.npmjs.org/node-uuid/-/node-uuid-1.4.0.tgz\nnpm http GET https://registry.npmjs.org/assert-plus/0.1.2\nnpm http GET https://registry.npmjs.org/asn1/0.1.11\nnpm http GET https://registry.npmjs.org/ctype/0.5.2\nnpm http GET https://registry.npmjs.org/hoek\nnpm http GET https://registry.npmjs.org/boom\nnpm http GET https://registry.npmjs.org/cryptiles\nnpm http GET https://registry.npmjs.org/sntp\nnpm http GET https://registry.npmjs.org/combined-stream\nnpm http 304 https://registry.npmjs.org/assert-plus/0.1.2\nnpm http GET https://registry.npmjs.org/assert-plus/-/assert-plus-0.1.2.tgz\nnpm http 304 https://registry.npmjs.org/ctype/0.5.2\nnpm http 304 https://registry.npmjs.org/asn1/0.1.11\nnpm http 304 https://registry.npmjs.org/hoek\nnpm http 304 https://registry.npmjs.org/cryptiles\nnpm http GET https://registry.npmjs.org/asn1/-/asn1-0.1.11.tgz\nnpm http GET https://registry.npmjs.org/hoek/-/hoek-0.8.5.tgz\nnpm http 304 https://registry.npmjs.org/sntp\nnpm http 304 https://registry.npmjs.org/combined-stream\nnpm http 304 https://registry.npmjs.org/boom\nnpm http GET https://registry.npmjs.org/sntp/-/sntp-0.2.4.tgz\nnpm http GET https://registry.npmjs.org/delayed-stream/0.0.5\nnpm http 200 https://registry.npmjs.org/assert-plus/-/assert-plus-0.1.2.tgz\nnpm http 200 https://registry.npmjs.org/asn1/-/asn1-0.1.11.tgz\nnpm http 200 https://registry.npmjs.org/hoek/-/hoek-0.8.5.tgz\nnpm http 200 https://registry.npmjs.org/sntp/-/sntp-0.2.4.tgz\nnpm http 304 https://registry.npmjs.org/delayed-stream/0.0.5\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /usr/lib/npm-debug.log\nnpm ERR! not ok code 0\n\n```\n\nOn Sat, Jul 13, 2013 at 3:30 AM, Declan de Wet notifications@github.comwrote:\n\n> The only errors I get with node-gyp are when I forget to run the command\n> with admin privileges. If you're on Mac or Linux, make sure you sudo npm\n> install -g roots, if you're on Windows then right click command prompt\n> and select \"Run as Administrator\" (CTRL-X+A on Windows 8).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/196#issuecomment-20916671\n> .\n\n## \n-  Henry Snopek\n. The errors have been resolved. \nRemove: \n- `/usr/lib/nodejs/npm`\n- `/usr/lib/node_modules` \n- `/usr/lib/npm`\n- `/home/.node-nyp`\n- `/home/.node_modules`\n- basically anything that is related to npm.\n\nRestart computer, `sudo apt-get clean && sudo apt-get autoclean`, `sudo apt-get update && sudo apt-get upgrade`, `sudo apt-get install npm && sudo npm install roots -g`.\n\nEverything should install correctly if you deleted all the files in the prior steps.\n. As well, I accidentally hit submit w/out have my message.\n. @samccone I looked at it, killed it... Test project works, yet with my second project I still receive an error code, which is consistent with the second error block I listed above\n. Ah yes it is, I'm assuming that can't be in there? \n. Here is the third error block:\n\n```\nhenry@Noize:~$ cd /usrdata/workspace/github_projects/hhsnopek.com\nhenry@Noize:/usrdata/workspace/github_projects/hhsnopek.com$ roots watch\nconfig options set\ncompiling... \nanalyzing project\ncreating folders\ncreated /.git\ncreated /assets\ncreated /views\ncreated /.git/branches\ncreated /.git/hooks\ncreated /.git/info\ncreated /.git/logs\ncreated /.git/objects\ncreated /.git/refs\ncreated /assets/components\ncreated /assets/css\ncreated /assets/fonts\ncreated /assets/img\ncreated /assets/js\ncreated /.git/logs/refs\ncreated /.git/refs/remotes\ncreated /.git/refs/heads\ncreated /.git/refs/tags\ncreated /.git/objects/00\ncreated /.git/objects/02\ncreated /.git/objects/05\ncreated /.git/objects/03\ncreated /.git/objects/08\ncreated /.git/objects/0a\ncreated /.git/objects/0b\ncreated /.git/objects/0d\ncreated /.git/objects/11\ncreated /.git/objects/12\ncreated /.git/objects/15\ncreated /.git/objects/16\ncreated /.git/objects/18\ncreated /.git/objects/1a\ncreated /.git/objects/1b\ncreated /.git/objects/1d\ncreated /.git/objects/20\ncreated /.git/objects/21\ncreated /.git/objects/23\ncreated /.git/objects/26\ncreated /.git/objects/27\ncreated /.git/objects/28\ncreated /.git/objects/29\ncreated /.git/objects/2b\ncreated /.git/objects/2c\ncreated /.git/objects/2e\ncreated /.git/objects/32\ncreated /.git/objects/38\ncreated /.git/objects/39\ncreated /.git/objects/3b\ncreated /.git/objects/3d\ncreated /.git/objects/40\ncreated /.git/objects/44\ncreated /.git/objects/45\ncreated /.git/objects/46\ncreated /.git/objects/47\ncreated /.git/objects/48\ncreated /.git/objects/4a\ncreated /.git/objects/4b\ncreated /.git/objects/4d\ncreated /.git/objects/4f\ncreated /.git/objects/50\ncreated /.git/objects/51\ncreated /.git/objects/52\ncreated /.git/objects/53\ncreated /.git/objects/56\ncreated /.git/objects/5a\ncreated /.git/objects/5b\ncreated /.git/objects/5e\ncreated /.git/objects/5f\ncreated /.git/objects/60\ncreated /.git/objects/61\ncreated /.git/objects/62\ncreated /.git/objects/63\ncreated /.git/objects/64\ncreated /.git/objects/65\ncreated /.git/objects/66\ncreated /.git/objects/67\ncreated /.git/objects/68\ncreated /.git/objects/6c\ncreated /.git/objects/6d\ncreated /.git/objects/6e\ncreated /.git/objects/6f\ncreated /.git/objects/78\ncreated /.git/objects/7a\ncreated /.git/objects/7c\ncreated /.git/objects/7d\ncreated /.git/objects/7e\ncreated /.git/objects/7f\ncreated /.git/objects/81\ncreated /.git/objects/82\ncreated /.git/objects/83\ncreated /.git/objects/84\ncreated /.git/objects/86\ncreated /.git/objects/88\ncreated /.git/objects/89\ncreated /.git/objects/8a\ncreated /.git/objects/8b\ncreated /.git/objects/8c\ncreated /.git/objects/8d\ncreated /.git/objects/8e\ncreated /.git/objects/92\ncreated /.git/objects/93\ncreated /.git/objects/96\ncreated /.git/objects/97\ncreated /.git/objects/99\ncreated /.git/objects/9a\ncreated /.git/objects/9c\ncreated /.git/objects/a1\ncreated /.git/objects/a4\ncreated /.git/objects/a5\ncreated /.git/objects/a7\ncreated /.git/objects/a9\ncreated /.git/objects/ad\ncreated /.git/objects/ae\ncreated /.git/objects/af\ncreated /.git/objects/b1\ncreated /.git/objects/b4\ncreated /.git/objects/b5\ncreated /.git/objects/b8\ncreated /.git/objects/bb\ncreated /.git/objects/bc\ncreated /.git/objects/be\ncreated /.git/objects/bf\ncreated /.git/objects/c2\ncreated /.git/objects/c3\ncreated /.git/objects/c4\ncreated /.git/objects/ca\ncreated /.git/objects/ce\ncreated /.git/objects/d0\ncreated /.git/objects/d3\ncreated /.git/objects/d4\ncreated /.git/objects/d7\ncreated /.git/objects/d8\ncreated /.git/objects/d9\ncreated /.git/objects/da\ncreated /.git/objects/dc\ncreated /.git/objects/dd\ncreated /.git/objects/de\ncreated /.git/objects/df\ncreated /.git/objects/e2\ncreated /.git/objects/e4\ncreated /.git/objects/e5\ncreated /.git/objects/e6\ncreated /.git/objects/e7\ncreated /.git/objects/e8\ncreated /.git/objects/ea\ncreated /.git/objects/ed\ncreated /.git/objects/ef\ncreated /.git/objects/f0\ncreated /.git/objects/f3\ncreated /.git/objects/f4\ncreated /.git/objects/f5\ncreated /.git/objects/f6\ncreated /.git/objects/fd\ncreated /.git/objects/fe\ncreated /.git/objects/info\ncreated /.git/objects/pack\ncreated /assets/js/components\ncreated /.git/logs/refs/heads\ncreated /.git/logs/refs/remotes\ncreated /.git/refs/remotes/origin\ncreated /.git/refs/remotes/server\ncreated /.git/logs/refs/remotes/origin\ncreated /.git/logs/refs/remotes/server\ncompiling and copying files\n\n\n\n------------ ERROR ------------\n\nError: /usrdata/workspace/github_projects/hhsnopek.com/views/layout.jade:22\n    20|   //- it will be automatically ignored when deployed\n    21|   != livereload\n  > 22| \n\nLine 49: Unexpected token yield\n    at throwError (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1156:21)\n    at throwUnexpected (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1209:13)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1559:16)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2001:24)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseGroupExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1490:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1552:20)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1861:24)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseArguments (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1571:27)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1643:34)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1730:20)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2770:16)\n    at parseSourceElement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3049:20)\n    at parseFunctionSourceElements (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2846:29)\n    at parseFunctionExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3010:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1527:24)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseGroupExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1490:16)\n    at parsePrimaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1552:20)\n    at parseLeftHandSideExpressionAllowCall (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1636:61)\n    at parsePostfixExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1695:20)\n    at parseUnaryExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1775:16)\n    at parseMultiplicativeExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1781:20)\n    at parseAdditiveExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1798:20)\n    at parseShiftExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1815:20)\n    at parseRelationalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1836:16)\n    at parseEqualityExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1854:20)\n    at parseBitwiseANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1871:20)\n    at parseBitwiseXORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1887:20)\n    at parseBitwiseORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1903:20)\n    at parseLogicalANDExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1921:20)\n    at parseLogicalORExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1937:20)\n    at parseConditionalExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1957:16)\n    at parseAssignmentExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:1984:16)\n    at parseExpression (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2011:20)\n    at parseExpressionStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2168:20)\n    at parseStatement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:2729:24)\n    at parseSourceElement (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3049:20)\n    at parseSourceElements (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3082:29)\n    at parseProgram (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3096:19)\n    at parse (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/node_modules/esprima/esprima.js:3843:23)\n    at module.exports (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/node_modules/astw/index.js:4:41)\n    at module.exports (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/node_modules/lexical-scope/index.js:9:16)\n    at addWith (/usr/lib/node_modules/roots/node_modules/jade/node_modules/with/index.js:9:11)\n    at parse (/usr/lib/node_modules/roots/node_modules/jade/lib/jade.js:111:11)\n    at Object.exports.compile (/usr/lib/node_modules/roots/node_modules/jade/lib/jade.js:160:9)\n    at Object.exports.compile (/usr/lib/node_modules/roots/lib/adapters/jade.js:12:25)\n    at Compiler.compile_into_layout (/usr/lib/node_modules/roots/lib/compiler.js:131:11)\n    at write_file (/usr/lib/node_modules/roots/lib/compiler.js:57:31)\n    at /usr/lib/node_modules/roots/lib/compiler.js:50:16\n    at Object.exports.compile (/usr/lib/node_modules/roots/lib/adapters/jade.js:20:3)\n    at /usr/lib/node_modules/roots/lib/compiler.js:40:13\n    at Array.forEach (native)\n    at Compiler.compile (/usr/lib/node_modules/roots/lib/compiler.js:34:12)\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:224:13\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:108:13\n    at Array.forEach (native)\n    at _each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:32:24)\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:107:9)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at compile_files (/usr/lib/node_modules/roots/lib/index.js:138:37)\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:508:21\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:224:13\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:108:13\n    at Array.forEach (native)\n    at _each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:32:24)\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:107:9)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at _parallel (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:506:20)\n    at Object.async.parallel (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:536:9)\n    at /usr/lib/node_modules/roots/lib/index.js:132:11\n    at /usr/lib/node_modules/roots/node_modules/async/lib/async.js:229:13\n    at async.each (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:104:20)\n    at _asyncMap (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:223:9)\n    at Object.map (/usr/lib/node_modules/roots/node_modules/async/lib/async.js:201:23)\n    at compile (/usr/lib/node_modules/roots/lib/index.js:131:9)\n    at _fulfilled (/usr/lib/node_modules/roots/node_modules/q/q.js:703:54)\n    at self.promiseDispatch.done (/usr/lib/node_modules/roots/node_modules/q/q.js:732:30)\n    at Promise.promise.promiseDispatch (/usr/lib/node_modules/roots/node_modules/q/q.js:669:13)\n    at /usr/lib/node_modules/roots/node_modules/q/q.js:495:49\n    at flush (/usr/lib/node_modules/roots/node_modules/q/q.js:106:17)\n    at process._tickCallback (node.js:415:13)\n\ncompiled /assets/css/menu.styl\ncompiled /assets/js/main.coffee\ncopied /libpeerconnection.log\ncopied /.git/COMMIT_EDITMSG\ncopied /.git/HEAD\ncopied /.git/FETCH_HEAD\ncopied /.git/SMARTGIT_PENDING_MESSAGE\ncopied /.git/config\ncopied /.git/description\ncopied /.git/index\ncopied /.git/packed-refs\ncopied /assets/favicon.ico\ncopied /.git/hooks/applypatch-msg.sample\ncopied /.git/hooks/commit-msg.sample\ncopied /.git/hooks/post-update.sample\ncopied /.git/hooks/pre-applypatch.sample\ncopied /.git/hooks/pre-commit.sample\ncopied /.git/hooks/pre-rebase.sample\ncopied /.git/hooks/prepare-commit-msg.sample\ncopied /.git/hooks/update.sample\ncopied /.git/info/exclude\ncopied /.git/logs/HEAD\ncopied /assets/js/pie.htc\ncopied /assets/js/require.js\ncopied /assets/img/BP1.png\ncopied /assets/img/noise.png\ncopied /assets/img/skynoizeQR.png\ncopied /assets/fonts/Cabin-Regular-webfont.eot\ncopied /assets/fonts/Cabin-Regular-webfont.svg\ncopied /assets/fonts/Cabin-Regular-webfont.ttf\ncopied /assets/fonts/Cabin-Regular-webfont.woff\ncopied /assets/fonts/Ubuntu-R-webfont.eot\ncopied /assets/fonts/Ubuntu-R-webfont.svg\ncopied /assets/fonts/Ubuntu-R-webfont.ttf\ncopied /assets/fonts/Ubuntu-R-webfont.woff\ncopied /.git/refs/heads/master\ncopied /.git/objects/05/1b4ae34f5987f38d1bf27dd4b9e8210ab03486\ncopied /.git/objects/00/761cc1ba5c4802071d0a2d535cc43460202f73\ncopied /.git/objects/00/d25fda617648921561b3e4a2be9cc7449d1f16\ncopied /.git/objects/00/facc06e93b8c492cdf06ce4f36b03821189cac\ncopied /.git/objects/02/28afb09a4672be0c5d7980b563b94d78e098d1\ncopied /.git/objects/02/43d7122095a2efba25d96bec2b5cca42df4890\ncopied /.git/objects/03/69436041816dd5522f651c77c2bc504dea8b8c\ncopied /.git/objects/03/a9006035b9a702ab91a880df9a00f9916f55dd\ncopied /.git/objects/08/3acff6606bfc9a34c0ed1ac4cc316e0ae71972\ncopied /.git/objects/0a/bb5c7f18bd3b44fc5b9a62bfec535aa9785f22\ncopied /.git/objects/0a/bd351395a5936839b2677afc6351cd61a5ff89\ncopied /.git/objects/0b/3c1a5653337c4bc760049548e2be47b2e3e2ca\ncopied /.git/objects/0d/794dfbfe20ceed94f96f170154057bafa36754\ncopied /.git/objects/11/28df717ae74c02ac43c835c246a7b6f93f9828\ncopied /.git/objects/12/b40e9ece498d28ddaf6649a9c1840fa1f43463\ncopied /.git/objects/15/937ac9b48f3f7d61a30d0dfaa9ffedaf7bec4f\ncopied /.git/objects/15/f74300d7bd9045df3e232a37ce387deb3b8b0b\ncopied /.git/objects/16/ad2462770a0e285b3130e68ddd59095776c250\ncopied /.git/objects/16/b4a62fc8ca6ddd12042a661a638825becb7d8b\ncopied /.git/objects/16/dea5ad372c35daed05dedf0d423e46310ca046\ncopied /.git/objects/18/1c289a5b2ad78f66f1f46a0bdd7a96b1fd96ed\ncopied /.git/objects/1a/504fedd45196ba2f790540eb4a1fe15b431683\ncopied /.git/objects/1b/274be386ff9742d0bf48b915a101ecdeacf6c5\ncopied /.git/objects/1b/8b2ddb2feb4e673b96a7c2084575cf82899b9f\ncopied /.git/objects/1b/b892c4a5cc964b5f8f0e367ed7af2de84abf00\ncopied /.git/objects/20/089a5580f0a212f651e11c930d85aae76c1238\ncopied /.git/objects/20/36ef43931f40745ba236333ce99e2abbdc79fb\ncopied /.git/objects/20/b14794b6689e12177defae81875505c9cf451a\ncopied /.git/objects/20/dfe908629f541f8c1c0669903531adf49d6cd7\ncopied /.git/objects/1d/28c97909a036a510ffce198a5630daa0bbb6a8\ncopied /.git/objects/21/dda0eda2bb12c579a63cbaa4b54674f2c3443b\ncopied /.git/objects/23/5d1fdf40185725a7ca19b078636be3b914438a\ncopied /.git/objects/23/af6c0f37cde6ab80687aca7fe6859b0b063c84\ncopied /.git/objects/26/b8a9b44f7152a4d15e2be3993bef72af9e1a1b\ncopied /.git/objects/26/d020787bc66e938cbb4cbd20973cc93e8383d1\ncopied /.git/objects/27/258615ff5a215e44ea8bcf4157eebad709f752\ncopied /.git/objects/28/440182785a0daeaab2ef4743d4dfdb578b112e\ncopied /.git/objects/29/1b3ef5be2278655ed09b56c22771b44e309136\ncopied /.git/objects/2b/55b5ef1877a0fc46f5ed304dffeac3f969842e\ncopied /.git/objects/2c/a5cdcb5ac86bb93dd86576c9483e3db1435abe\ncopied /.git/objects/2e/cd831411125f3f71b1ab74fc6167e7b4076123\ncopied /.git/objects/32/8dcfea3f901955fa6c899278ee344f540f9ee5\ncopied /.git/objects/38/7cf6d88c87977f0d98d37c73cbb4d55ab6b44a\ncopied /.git/objects/39/4ed6436a1ce45e6bc49a991c46e3335a2d6698\ncopied /.git/objects/3d/759321e3427248fd5557a77a2345813f1b7dbb\ncopied /.git/objects/3b/25085987d661ed9739680c875b9b48937f9e3b\ncopied /.git/objects/3b/2dbf221a182ed1acf2f8660af0ab22a72911cd\ncopied /.git/objects/40/9bcaedbb275ad09ff72a90aa087d2b0c67c0a8\ncopied /.git/objects/44/61a7accc3d430d8700ba4e254745293b7186b3\ncopied /.git/objects/45/467a849e15c012e1e936cd07395c176623373c\ncopied /.git/objects/45/72eac4a6b665c9f22041ad1537a4d077d2278e\ncopied /.git/objects/46/dca188aa5d4bfa64acef7decf557fd808ef59f\ncopied /.git/objects/47/44a1303b43990e132d80165c17a3836ed4839a\ncopied /.git/objects/48/4e20e0f1906b20c80dfa73eac5d86443ed99f5\ncopied /.git/objects/4a/38a7eb5491d853e4059270cc045d6e7139d2ab\ncopied /.git/objects/4a/a56e3e809db17c1ec81e0d667ede16a692879d\ncopied /.git/objects/4b/795e16aff8579b936e9f49ef9962eee1a2636b\ncopied /.git/objects/4d/7be0e98b9629a0b29f6840f0a57dee2913cd61\ncopied /.git/objects/4f/63155d3291a503de697c1044053eba06961a2f\ncopied /.git/objects/50/f833d15ff9ff986c66709a193d6655919ad6b9\ncopied /.git/objects/51/1c10b792e5a94cb3f4d216e1efb6e1176dd6ee\ncopied /.git/objects/52/bf0cda2e12361df7cd032d9fe01d04ed652acc\ncopied /.git/objects/53/bedcc5c8f6bf692d1a72b8b622c94a88f6c1cd\ncopied /.git/objects/56/05a8edd9c3a443e85de0306713523c19d920d6\ncopied /.git/objects/56/98e65cae7d227f32078b80c56d8ac5783ee3b2\ncopied /.git/objects/5a/b59100d50a1e7e2c97afe9fd91f84ea4e3059a\ncopied /.git/objects/5b/4b6afe4aec0786522deea7c14b6b15f34fa067\ncopied /.git/objects/5b/e4455ad13851ee8a0f750cd78f89a507536d80\ncopied /.git/objects/5e/22ac84d370018f856d45939a026a43ddc9cf13\ncopied /.git/objects/5f/49515ba6ee0e7393b61b3d20bbcb5e83e663f3\ncopied /.git/objects/5f/dc7c9770e3724d5522471b63f3a0a2742ab5fd\ncopied /.git/objects/60/75ea3622b8dac9b67ffb26cd99d96192e03827\ncopied /.git/objects/61/8135e3f6fd9a1bf6ec40e5a396e7d0ea415df2\ncopied /.git/objects/62/046831ee6f202faa1fd4418164c52195fb90b3\ncopied /.git/objects/62/f4bacdc8aeea902d95bd0a679fcdbf361f2474\ncopied /.git/objects/63/89fb081aa997725272672667078874dbda9713\ncopied /.git/objects/64/afaffab7a842b0cf6dffc003e6bc0c38811964\ncopied /.git/objects/65/a4f51d9fc5f9bdedbd50a3c69f21647b0f843f\ncopied /.git/objects/66/094f5a2224edb124d1521e74bbcf87425b7bb3\ncopied /.git/objects/67/9b12d4c5eec093d905044a4457d117a56317bd\ncopied /.git/objects/68/973d44ca1f34d592cec3d891e6e69355fdcc45\ncopied /.git/objects/6c/d4996888e35d2413622c37be7e08e3e40f0ea7\ncopied /.git/objects/6d/35d5e434feba822c57149d1968eaa510ee3d01\ncopied /.git/objects/6e/455c3d80b48ac1ca30ec4aa96a9ab23486ffc7\ncopied /.git/objects/6e/ca10044a6e3032a41ac6b3433d47f10159f10c\ncopied /.git/objects/6f/249c71d54d42a17d02c74c98fe5d143558c4f2\ncopied /.git/objects/6f/9a75207e2f3f5e769d90cac6702038b55d5e1a\ncopied /.git/objects/78/985d23d162bf81ee30b8ac56bb595ad7c55e9d\ncopied /.git/objects/7a/6090cce0723a8f0c7180bf705bfdd9d01fb555\ncopied /.git/objects/7c/cf446b4d6e138500f7f74e687e14e3c35d485b\ncopied /.git/objects/7d/ef8afbbd4a0ea88955e2b40c485e65b6391855\ncopied /.git/objects/7e/b4206404e97d86600db811cfacef7c4fb9ce57\ncopied /.git/objects/7e/f26640be9dc2a329696481281c08bb8da65a1e\ncopied /.git/objects/7f/a2b7277a9e45e5128354f54500b9352272e963\ncopied /.git/objects/7f/d3245a1e1a972bf907838f7515ad9747502d0b\ncopied /.git/objects/81/6ec61b7e13ab0a556f594982c8aba63b03f0b6\ncopied /.git/objects/82/b2aef45ce1439e7527c7687839060915457a4e\ncopied /.git/objects/82/e6b2ab8cb3fbefc10631498cfe262936c809a6\ncopied /.git/objects/83/cca9e6e8e9091a81de9b3d85fd9af44cc9c7d9\ncopied /.git/objects/84/19f8c60061411c275daf0a521ee4fa6b19c3cd\ncopied /.git/objects/86/e8092287717f8729d2524e1a67f41a2d6c946e\ncopied /.git/objects/88/012eda3b199950957d8723cecbf1ee31beeb20\ncopied /.git/objects/88/0a974f8c26e2e1015f3cdfd09424db7ff74e5b\ncopied /.git/objects/88/6b7de4adbd750c21e13ce232a2f229a8c69593\ncopied /.git/objects/89/1b4085731291d921d7e6a8995295715519fbf0\ncopied /.git/objects/89/290da1a1ee70ed084e4f07c6f768b54232b69b\ncopied /.git/objects/89/5a9c459a52db09f9fcac55159eedf9c2732de6\ncopied /.git/objects/8a/1829caa9114b779da776985841c77e90cfc5d3\ncopied /.git/objects/8b/4d1d8657bf5842038422e70461c03cd799dc2c\ncopied /.git/objects/8c/f3cd099adf5ba15bab0c4bd049a8b2c4e244d7\ncopied /.git/objects/8d/f549ecdb70c045e957823c8da608103063b5ec\ncopied /.git/objects/8e/6692db1e33a25505a61d23dd75cae1d0cde1c0\ncopied /.git/objects/92/ca776b8c41858bb0a69a393e9efe139c6b9cae\ncopied /.git/objects/93/65155ff16e995dca61f8a7895acb362a711763\ncopied /.git/objects/96/68a5693105d7e308b3999545ca6ae6819cf576\ncopied /.git/objects/97/14af2bdcf866ace5c8f95d60150db16c05dc88\ncopied /.git/objects/99/6138d08cc249430c4c98f60b35e4767053e923\ncopied /.git/objects/99/ac07071e7f1e189086f6d38b24ab917f2fb889\ncopied /.git/objects/9a/3682e6c47a50112ae7975338ee0e4d4ce30c81\ncopied /.git/objects/9c/6ba2eb6778e57721111e26c89a83c985713637\ncopied /.git/objects/a1/1d31699323fd1fd4b2a9df734366cea384e766\ncopied /.git/objects/a4/3517b5ba6ecfb9d3cf7595a8a95d02b7245dcc\ncopied /.git/objects/a4/ef7615c05e0b248db9e30c71120da3c7e10414\ncopied /.git/objects/a5/748a7c4effd569e6bd186cc89dc8f7f97a31d1\ncopied /.git/objects/a7/52fb3886b15f6bfc25e69931eed8991cc2a79b\ncopied /.git/objects/a9/0b905b2b86ed27d751016fe45e0913963d124e\ncopied /.git/objects/a9/4c1ba6ee8986b575d1667fabb54a0649c4f755\ncopied /.git/objects/ad/0a036d432e5ecd002cdd9aa68f9e3d3236bc2d\ncopied /.git/objects/ad/b5cafcee861b9af88f4b98fbc49a4baaf6aa53\ncopied /.git/objects/ae/44d392620d7a41461436732b078ebae1c7b104\ncopied /.git/objects/ae/f0df5a0265c031a3183b152e045a7b52516daf\ncopied /.git/objects/af/39aec7103073bd412d4c9bf5157cea45b1c079\ncopied /.git/objects/b1/6b5892dc279b71145217f44c1b0c530a0341f8\ncopied /.git/objects/b4/cd232301b02a60c41863fc62bd848fc553d428\ncopied /.git/objects/b5/e2126c25610209a796e7172db325a460185e9e\ncopied /.git/objects/b5/f968ac0885574f6ec0609bc6b5b2ba1d97e2eb\ncopied /.git/objects/b8/969520cf831915f765489b1fa955f6c32b1ff5\ncopied /.git/objects/bb/abc9f28124e8b6f3b0d65820b3c9519cbc4175\ncopied /.git/objects/bc/4bae968a9176b860f925b7e6b16a5a52370557\ncopied /.git/objects/be/647fec750c3cd5e9813a572d7816e71fb74514\ncopied /.git/objects/bf/ad1b50ce7e90e6029df432277babc1ffa66897\ncopied /.git/objects/c2/1e36efddbf7d76ab06fa4c3805002949272e51\ncopied /.git/objects/c2/ac2e50fc931acc4334e0338b9c1a0001119b1a\ncopied /.git/objects/c3/3947878412e205f39044f17cdc99579ddf22ef\ncopied /.git/objects/c4/56115a7dfda311184a14b59fd014f413a0e8e3\ncopied /.git/objects/c4/88a7142e3b455067b40b7cfef21d69b7e72ddb\ncopied /.git/objects/ca/a164cc8fd2b268027eafa3a80f2b2f53806179\ncopied /.git/objects/ce/3c38384e1e55a5a3d63910875861faac54c935\ncopied /.git/objects/ce/d5b35bf73f3e404d2903d26c1cae1664d2ee7c\ncopied /.git/objects/d0/6eb1aa7191d47d0d373d34a1c709221e934fc0\ncopied /.git/objects/d3/be19a51c7ece87bf73a1efb64bcbf00494d945\ncopied /.git/objects/d3/cc9a33bb7361c5a9a1c78ee03de7d45a245607\ncopied /.git/objects/d4/0ce8aa8ffe095f4a5d725cf8d1e6a0f466cef4\ncopied /.git/objects/d4/ad998db14911135db2003022c1b35e6f83c9ec\ncopied /.git/objects/d4/da6c8b30cff31fe7cb5ccd7c7d22b240875204\ncopied /.git/objects/d7/93c1ec734febd8411a1c6a3361dc0cfbf79ade\ncopied /.git/objects/d9/094cf0c7d1f29825766028e72c8fd5b1ce6c47\ncopied /.git/objects/d8/e2d2ff4c4c9b74c0b679737467f85eefb2deef\ncopied /.git/objects/da/0618fcad40cd6102d813c3ef130b23a164ae2d\ncopied /.git/objects/da/cbfd8180ae1a91647ac22f41ebd9d97c7050f0\ncopied /.git/objects/da/d7995df4ad308bf0be9b2324ebcbbebc9c351e\ncopied /.git/objects/dc/3d1efcddfbe2c1d2b048b31243415cf79ec929\ncopied /.git/objects/dd/78b62ac7eeb52228bbfe5c675d25a04a9d1681\ncopied /.git/objects/de/ccacf4e13e1e511e5e94b62aaaf5f16a73d54b\ncopied /.git/objects/df/56c4a26eed7570ea25d6ad9d2c2ebb7bd2016c\ncopied /.git/objects/e2/acc92e626668905fe353d47cba1542ed8cdeaa\ncopied /.git/objects/e4/8518792cc1387fde7ad876cd16de196a3341f9\ncopied /.git/objects/e5/dc66c428c4f01336da7c4677127d24cf3efea2\ncopied /.git/objects/e6/fc5a2f4c9d69acea56e7c8fd1b61786d15ba63\ncopied /.git/objects/e7/84568417e4ac5b53ab5ea41cde863615473b72\ncopied /.git/objects/e8/3ab1026b188e71ca3d011cbf46f50466a82b4b\ncopied /.git/objects/ea/1ff617b8adb8135504ac770cfd66704b72d9c3\ncopied /.git/objects/ef/4fa6df38439f62baab9cd3df5e5394bb7439d5\ncopied /.git/objects/ef/9efe5f07d4ed5653a9931b79e60cbfc211d4ad\ncopied /.git/objects/ef/dccd1c09b9024c0eb4a57fa7754007e3119142\ncopied /.git/objects/ed/69beac7ecc6003fbe27625cb62381c089bcb52\ncopied /.git/objects/ed/965aaa204c99faf304572c1befefd365797411\ncopied /.git/objects/ed/b47568ed9eb01c7102b0af384f5dad4d3c6463\ncopied /.git/objects/f0/c7aa545d128081354c8cc86f47006f1c7f0a65\ncopied /.git/objects/f3/3e632403b34311729918dc9e5a7bdb26d263b9\ncopied /.git/objects/f4/622a9ae7a00b5a67039ac7b02b82ab93b01540\ncopied /.git/objects/f5/7f99a53378b30147d4bd7d87f1f65daf5b2533\ncopied /.git/objects/f6/23d5ad5b511d37e8420eeb0fc60679348b881d\ncopied /.git/objects/fd/0aa82d3b32de34810d172c58142f0315a1b314\ncopied /.git/objects/fe/8d3ae8409fb34cd66c827fcb0325fcac44b3ef\ncopied /.git/objects/pack/pack-ae2453dbdc903bfed9e7e5a9cfa597b089143d4f.idx\ncopied /.git/objects/pack/pack-ae2453dbdc903bfed9e7e5a9cfa597b089143d4f.pack\ncopied /.git/logs/refs/heads/master\ncopied /.git/refs/remotes/server/master\ncopied /.git/refs/remotes/origin/HEAD\ncopied /.git/refs/remotes/origin/gh-pages\ncopied /.git/refs/remotes/origin/master\ncopied /.git/logs/refs/remotes/server/master\ncopied /.git/logs/refs/remotes/origin/HEAD\ncopied /.git/logs/refs/remotes/origin/gh-pages\ncopied /.git/logs/refs/remotes/origin/master\nprecompiling templates\ndone!\nserver started on port 1111\nGET / 404 5ms\n```\n. [app.coffee](https://github.com/HHSnopek/HHSnopek.com/blob/master/app.coffee)\n. Thank you very much! I will take better notice to the change logs :)\n. Thought as I read through Tumblr API and Custom Theme Docs:\n- Dummy content: Why not pull what possibly is already on their blog? If nothing or OAuth key isn't present, then fill with literal dummy content(like presented when you create a new roots project)\n\nHas anyone attempted this yet?\n. This can be closed! :)\n. Transformers is gonna be merged soon anyway and by PRing it into that we can avoid another huge rebase :)\n. Should I merge to transformers, or master; once I complete the test?\n. Fixed and Complete!\n. Definitely can!\n. During rebase, I hit some of your commits by mistake, but I skipped over them. My commits are rebased though\n. Those commits from @jenius and L8D are not showing up in my rebase\n\n```\n# Your branch is ahead of 'origin/transformers' by 2 commits.\n```\n. Thank you @jenius :)\n. Just did\n. Added the man and clean cmd, should be set!\n. Alright Should be all set!\n. Ok... Same issue occurred prior... :/\n. Squashed everything to two commits!\n. oh :o\nSo to fix this i need to ... ?\n. Alright how do i look now?\n. Alright Glory commit was made, I promise next time I will implement better commit styling :)\n. There is no issue with it being in the console, it's just when coffee doesn't always compile it stops... Then the file is not view able in the console at all, and it shows your error in the terminal and not the console \n. Chrome Dev-Tools Console Vs Terminal Console\n. That will help plenty, but does it fix the possibility of when a file isn't fully compiled and won't compile because of an error? \nThat is what above will do, or according to the article at least. \n. I'm gonna take a shot at this to finish it before break ends\n. Source map for CoffeeScript, source map for Stylus, source map for Jade, ... source maps for everybody!!! :smile:  \n. If it's a breaking change, then lets just wait for the next major release of roots. Could we not just merge this with transformers for now?\nThen add a message for the terminal stating that roots will be updating to the \"next release of roots, axis grids will break...\" or something along the lines of that.\n. I know for a fact that my friend across the hall wants to learn wordpress for site building... Attempting to get him to jump into roots. With the addition of this, I think it might bring him in. \nWith pagination, couldn't we break the object into 'x' amount of objects then render as you scroll? Only thing I don't like about my idea is the increase size of the scroll bar as you scroll. Just a thought\n. What if we integrated blog features almost as a template? We could introduce an overview on how to use roots with blog features that are just built-in functions in axis, and already used jade features. Roots should always compile to a static site so it can be cached in the browser. \n\nSo if we created a template, super basic that would apply to a simple blog; with the help of course to the built in features that we already have, the users of roots can then interpret this for themselves. \n\nWe could also add an optional Json api for this, that would be an add on... Correct me if I'm mistaken in the Json part, but this would create an alternative tool to WordPress which is fully customizable to the extent of your mind.\n. From my understanding, asset-graph would improve the structuring of these blog features, and roots projects all together. I believe this should be addressed within asset-graph itself, if the addition of a blog was to be implemented, just for the reason that the structure of a blog would be different from a regular project.\n\nI agree with @samccone and how this feature should not be apart of the core of roots. What I'm getting at is that it should be an extension to roots. The usage @slang800 does is a great way to keep them practically separate, also does seem flawless with the needs of a little refinement. Reason I think that is due to me recreating what @slang800  wrote for that blog, into my own site which is more dynamic when loading the blog area. \n. @jenius I agree on all counts for using roots over wordpress, I just don't agree on the dynamic part :)\n\nNote: Within my project I did not use wordpress, I created a JSON file that used an ajax request to gain the data after the page was ready. The page only delayed the content for display, which is 60ms of loading time which of course will vary on the amount of content within your json file. I see what you're saying.\n\nAlso thank you for clarify with asset-graph.\n. So to the original problem of adding \n- tags\n- categories\n- search\n- pagination\n\nIt seems that at least tags and categories would be solved by the user with adding into their json. Search would just be parsing json or the element id's. The only thing I see for an addition is for pagination.\n. I don't believe the benchmark for v2.1.0 has been reached according to the [PR # 181](https://github.com/jenius/roots/pull/181)...\n\nPossible mistake in the code?\n. I'd just add it to the docs, otherwise I think it's fairly obvious for any user(windows, mac os x, or linux) to use git ^-^\n. This occurred last night for me. Created a new project and installed underscore & backbone, both installed in a path just like @slang800. Backbone & Underscore weren't added in the normal assets dir, only the new one.\n\n```\n\u251c\u2500\u2500 app.coffee\n\u251c\u2500\u2500 assets       <-- Backbone & Underscore weren't added here.\n\u251c\u2500\u2500 public\n\u251c\u2500\u2500 readme.md\n\u2514\u2500\u2500 usrdata\n\u2502       \u2514\u2500\u2500 workspace\n\u2502           \u2514\u2500\u2500 jillwaldron\n\u2502               \u2514\u2500\u2500 assets\n\u2502                   \u2514\u2500\u2500 components\n\u2502                       \u251c\u2500\u2500 backbone\n\u2502                       \u2514\u2500\u2500 underscore\n\u2514\u2500\u2500 views\n```\n. Shall I add this to the list of deployers for ship?\n. sadly this is how I'm suppose to send a client their site, I said download it from gh ^-^\n. Opening issue & adding to working deployers issue\n. :+1: Digital Ocean lets you ride the smooth waves as you chop them up with your own style without a hassle. \n. I literally pulled this up like 30min ago when searching for a sublime user configuration guide. It's amazing! http://docs.sublimetext.info :+1: \n. @jenius isn't providing an asset pipeline the equivalent of assetgraph itself?\n. Ahh @slang800 just explain the difference, if I'm not mistaken:\n\n#### High overview\n\nRails asset pipline\n- Concatenates files of the same type, into one file.\n\nAssetgraph\n- Creates an AST(no matter the file structure the developer uses), allowing us to transform & split files. So if page only uses part of a file(js/css), those parts are only loaded.\n. That's the other mystery, the `package` variable isn't present anywhere in my directory or files :frowning: \n. If I gave you access to a server with the occurring error, do you think you could view the environment?\n. That's fine, do you have a public key?\nEDIT: I'll send you the server info via email\n. Thank you!! - Sent to your gmail\n. Solved!\n`node_modules` needed to be ignored within `app.coffee`\n\nThank you @jenius for the help!!! :grinning: \n. This will be awesome to use!\n. ~~What operating system are you installing roots on?~~\n^ Disregard this...\n\nis python 2.7.x not installed prior to 3.x now 'n days?\n. I believe he was trying to say that we should put under roots requirements that you need python 2.7.x as a Node-gyp requirement\n. There should be a search engine for this haha\n. I just did a clean install of roots\nassuming linux:\nadd chris lea ppa\napt-get install git node nodejs; npm install -g roots\n\nHere's the [results](http://pastebin.com/sw40Gcnv)\nIt does use node-gyp for [execSync](https://www.npmjs.org/package/execSync)\n\n```\n execSync@1.0.1-pre install /usr/lib/node_modules/roots/node_modules/copy-paste/node_modules/execSync\n> node-gyp rebuild\n```\n\nIn my error log, I do present a permissions error. That is due to the user being root, I think....\n. I installed v3 and no gyp rebuild or anything, it must be a reference to v2\n. @LtCmdDudefellah  `roots clean` works in 3.0.0-rc.6\n@jenius close this?\n. Wow that's insane - nice find!\n. Depending on which version you're using:\n\n#### roots v2\n\n[video tutorials](http://roots.cx/#tutorials)\nHere's various templates that you can use with roots v2: [roots-dev](https://github.com/roots-dev/)\n\n#### roots v3\n\n[docs](http://roots.readthedocs.org/en/latest/)\nReason I list the docs is because v3 is actively being worked on. It also has the latest features, even looking at v3's [branch](https://github.com/jenius/roots/tree/v3) can help.\n\n---\n\nHere's a whole issue-thread: #396 **List of Sites created by roots**\n\nPersonally I've watched all the v2 video tutorials and that got me started. I then read through code to comprehend dynamic content. V3 introduces a lot more flexibility with plugins due to pipes! Here's a short clip from @jenius I found when working with [jeet](http://www.youtube.com/watch?v=JRXMXHIgOkU), in this he uses V3 and has a detailed example of [dynamic content](https://github.com/carrot/roots-dynamic-content) and how an app.coffee should look.\n\nAfter v3 is released, my assumption at least is that, there will be new video tutorials and a whole new wave of examples and demos!\n\nRemember roots is a tool that will help you structure and build your web site or app. A ToDo-MVC in roots would be done the same way as a vanilla todo-mvc without roots(just different structure). \nGood luck! :grinning:\n. the `title:` uses a string like so:\nYours is an open text(without `\" \"`), so the second line is unexpected\n\n```\ntitle: \"Icaro\"\ndate: 6/23/2014\n```\n\nTry that :smile: \n. What version of roots are you using?\n. Assuming you're using roots v3, you'll have to add [carrot/roots-dynamic-content](https://github.com/carrot/roots-dynamic-content) to your app.coffee as an extension. Here's the [docs](https://github.com/carrot/roots-dynamic-content/blob/master/docs/intro.md) for it as well.\n\napp.coffee example:\n\n```\n###*\n * roots v3.0.0-rc.6\n###\n\naxis            = require('axis')\nautoprefixer    = require('autoprefixer-stylus')\nDynamicContent  = require('dynamic-content')\njeet            = require('jeet')\nrupture         = require('rupture')\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  extensions: [new DynamicContent]\n\n  stylus:\n    use: [axis(), rupture(), jeet(), autoprefixer()]\n```\n. Try this: take out ../ for the single_post_layout, and move the single_post_layout to the views folder\n. @jenius I renamed the project to `roots-test` and it compiles\nEDIT: I ran a quick test on it, and when creating a new project with `.` I get the compile error, is the watcher mistakening the `.` for a file path maybe?\n. Creating a project named: `1.1.1.1` gives this error as well\n. Whoa!! weird bug with this too:\n\nTL DR: once you watch the project, `1.css`, `1.html`, and `1.js` appear in the parent dir of the project.\n\n```\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0roots new 1.1.1.1\n[?] Your project's name: 1.1.1.1\n[?] A brief description of your project: \n\u25b8 project created\n\u25b8 dependencies installing\nnpm WARN package.json 1.1.1.1@ No description\nnpm WARN package.json 1.1.1.1@ No repository field.\nmarked@0.3.2 1.1.1.1/node_modules/marked\n\nrupture@0.1.0 1.1.1.1/node_modules/rupture\n\ncoffee-script@1.7.1 1.1.1.1/node_modules/coffee-script\n\u2514\u2500\u2500 mkdirp@0.3.5\n\naxis@0.2.0 1.1.1.1/node_modules/axis\n\u2514\u2500\u2500 nib@1.0.2 (stylus@0.37.0)\n\nstylus@0.45.1 1.1.1.1/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 debug@0.8.1\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\nautoprefixer-stylus@0.1.0 1.1.1.1/node_modules/autoprefixer-stylus\n\u2514\u2500\u2500 autoprefixer@1.1.20140523 (fs-extra@0.9.1, postcss@0.3.4)\n\njade@1.3.1 1.1.1.1/node_modules/jade\n\u251c\u2500\u2500 character-parser@1.2.0\n\u251c\u2500\u2500 commander@2.1.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 monocle@1.1.51 (readdirp@0.2.5)\n\u251c\u2500\u2500 constantinople@2.0.0 (uglify-js@2.4.13)\n\u251c\u2500\u2500 transformers@2.1.0 (promise@2.0.0, css@1.0.8, uglify-js@2.2.5)\n\u2514\u2500\u2500 with@3.0.0 (uglify-js@2.4.13)\n\u25b8 dependencies finished installing\n\u25b8 project initialized at /usrdata/1.1.1.1\n\u25b8 using template: roots-base\n\u2713 done!\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0ls\n1.1.1.1            Henry        mockups             share-button\naxis               hn-special   nexus               ship\nbuisnesscard       ionicons     powerline-shell     tripping-octo-wookie\ndelete-pen-usb.sh  iso          Python              VirtualBox VMs\ndesign-mockups     jade-book    rokkitt-fontBakery  web\ndesigns            lost+found   roots.cx            workspace\nflattr-icons       mochilamail  salty-carrots\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0cd 1.1.1.1/\n henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0roots watch\ncompiling... done!\n^C henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0ls\napp.coffee  assets  node_modules  package.json  public  readme.md  views\n\n henry \ue0b0 noize \ue0b0 usrdata \ue0b1 1.1.1.1 \ue0b0 $ \ue0b0cd ..\n henry \ue0b0 noize \ue0b0 usrdata \ue0b0 $ \ue0b0ls\n1.1.1.1            designs       mochilamail         share-button\n1.css              flattr-icons  mockups             ship\n1.html             Henry         nexus               tripping-octo-wookie\n1.js               hn-special    powerline-shell     VirtualBox VMs\naxis               ionicons      Python              web\nbuisnesscard       iso           rokkitt-fontBakery  workspace\ndelete-pen-usb.sh  jade-book     roots.cx\ndesign-mockups     lost+found    salty-carrots\n```\n. I would think using regex, where ever the project dir is being parsed(fs_parser.coffee ?), would pull out 1.1.1.1 or any other variant with dots. maybe? I'd look into this more, but I have class now :frowning: \n. So I did a little [research](http://stackoverflow.com/questions/12478679/npm-install-vs-update-whats-the-difference)\n\nPackage.json\n\n``` json\n{\n  \"name\":          \"my-project\",\n  \"version\":       \"1.0\",                             // install   update\n  \"dependencies\":  {                                  // ------------------\n    \"already-installed-versionless-module\":  \"*\",     // ignores   \"1.0\" -> \"1.1\"\n    \"already-installed-versioned-module\":    \"3.4.1\"  // ignores   ignores\n    \"not-yet-installed-versionless-module\":  \"*\",     // installs  installs\n    \"not-yet-installed-versioned-module\":    \"2.7.8\"  // installs  installs\n  }\n}\n```\n\nOtherwise in npm [itself](https://github.com/npm/npm/blob/master/lib/update.js#L2) states that\n\n```\nfor each pkg in prefix that isn't a git repo\n  look for a new version of pkg that satisfies dep\n  if so, install it.\n  if not, then update it\n```\n\nHope this helps!\n. This also occurred to me with roots 2.1.3(I think... Can't find my error log) I found that, between **.50 - .15(maybe .1 ?) Gb** of the max memory this doesn't occur \n![](https://i.cloudup.com/eCm9ON8c2p.png)\n. @nanotime I'd recommend removing node and npm (to remove the needed sudo permissions) and follow this [gist](//gist.github.com/isaacs/579814). It took me like 5min to compile from source but it solved all my issues\n. @ztrdoo7 \n`roots watch --port 1234` I just tested this, it will work.\nEdit: I do have another project running on port 1111 :smile: \n. Could you upload the error log?\nEDIT: Just put it on pastebin\nfollow this:\n\n```\nroots -v\nroots watch --port 1234\n```\n\nI have a slight feeling that Kaspersky is blocking it, maybe? \n. I don't see the reason to use anti virus on linux... Considering you know\nwhat your accessing and downloading, with the knowledge if it's safe;\notherwise if you really need it, you should be able to change the ports or\nadd access to localhost:1111 within Kaspersky\n\nOn Mon, Jun 9, 2014 at 9:20 PM, Sam Saccone notifications@github.com\nwrote:\n\n> ha no but really I am not sure :|\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/495#issuecomment-45564135.\n\n## \n-  Henry Snopek\n. haha whoops - not sure why I thought that; In that case though you can definitely allow access in Kaspersky -> [follow this](http://support.kaspersky.com/6419) and allow port 1111 for any network access\n. @jenius confirmed this patch does work!\n:ship: that patch\n\n:monkey_face: \n. Which version of roots are you using? 2.1.4 or the latest beta?\n. Reason I ask is because in that video. @jenius is using roots v3 and not 2.1.4 - The way jeet is being [included](http://youtu.be/JRXMXHIgOkU?t=4m49s) is the same as the current way in roots v3. You can install roots v3 by running `npm install -g roots@pre`.\n\nIf jeet isn't being found and it is in the local `node_modules` folder at the project root, you might have  to install the node modules without `sudo` and `sudo` has given me problems in the past. I'd recommend removing all the npm packages & install everything without `sudo` (including npm & node).\n. What do you mean it's missing?\n. are you using roots v2 or v3?\n. In v2 you'll have to hack the `app.coffee` a little because rupture runs as a plugin for stylus prior to compilation of stylus... Or compile the stylus yourself, from the command line, prior to refreshing the page\nI'd recommend installing v3 `npm install roots@pre` and the default template project has rupture. We also have some pretty nice docs for v3 currently: [roots.rtfd.org](http://roots.readthedocs.org/en/latest/)\n. Awesome! Here's a thread with some stuff that will help you out! #468\n. I posted this in your previous thread, but I'll restate it here too\n\n### docs\n\nv3: [roots.rtfd.org](http://roots.readthedocs.org/en/latest/)\nv2: [roots.cx/docs](http://roots.cx/docs)\n\nI personally recommend v3 as it has the latest features!\n. hhsnopek.com -> [github.com/hhsnopek/hhsnopek](//github.com/hhsnopek/hhsnopek)\n. I'd just like to throw out there that I'm using node from homebrew. I know that `sudo` screws up everything with osx & linux. You're probably gonna have to reinstall homebrew/node without sudo, or fix those permissions.\n. Hey @S1efan, which version of roots are you using? I'm using v3 and can't replicate this.\n. @jenius I believe it's due to .DS_Store updating or adding itself as you navigate through the folders\n. even with `.DS_Store` in the ignores of `app.coffee` it persists to reload... any ideas on completely ignoring `.DS_Store`?\n. even hard coded in, when `.DS_Store` is added it reloads :frowning: - but it ignores updates\n. when `.DS_Store` is added to a folder, while roots is watching the project, roots recompiles. When `.DS_Store` is already present and you navigate into the folder, roots does not recompile\n\nEDIT: I hard coded `.DS_Store` into roots and linked it before doing the above\n. ![Deal with it](http://i2.kym-cdn.com/photos/images/newsfeed/000/243/561/afc.gif)\n. Hey @svallory - roots actually uses [accord](github.com/jenius/accord) to compile various types of preprocessed languages. I think a PR there for typescript would end up being a little bit faster in compilation time :smile: \n. @svallory whoops, I was assuming you were using v3 - currently v3 has a lot more features including plugins, better speed, etc. A lot of us are using v3 in production as well. I believe we are getting close launch with v3, @jenius might be able to fill you in more on that\n. @jenius #580\n\n> Yeah I know, I'm sorry! We're in between releases right now actually so things are a little wonky. I'd reference 3.0 for everything more or less at this point. It is quite stable, we're just polishing up a couple edge cases and publicity things before launch.\n> \n> Also, here's our incomplete docs site for v3. I hope this satisfies the designer in you :wink: http://roots-web.bitballoon.com/\n. I think I've stated this before, but you shouldn't need or use sudo with npm. With npm having sudo permissions it screws up a lot of modules. You might want to look into using [brew](http://brew.sh/) to control node and npm. Once you have that setup, run `brew update; brew upgrade; brew doctor` then install node and npm via brew.\n\nEdit: you'll end up running into node & npm issues after you install via brew. Run `brew doctor` once more and follow the steps to fixing this issue. \n. From personal experience using linux @jenius's fix never worked for me. I ended up reinstalling npm & node, sometimes my whole OS O.o\n\nbut it could work for you :smile: \n. Try using brew to fix the issue, mentioned above\n\n## \n\nHenry Snopek\n\nOn Wed, Dec 17, 2014 at 4:35 PM, ccsouthard notifications@github.com\nwrote:\n\n> On mac, no luck so far with `sudo chown -R $USER /usr/local/lib` . \n> I think I have many node issues. \n> \n> ```\n> Muthership:portfolio-roots chaz$ sudo chown -R $USER /usr/local/lib\n> Password:\n> Muthership:portfolio-roots chaz$  sudo npm i roots@pre -g\n> \n> > posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> > node-gyp rebuild\n> gyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\n> gyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n>   CXX(target) Release/obj.target/posix/src/posix.o\n>   SOLINK_MODULE(target) Release/posix.node\n>   SOLINK_MODULE(target) Release/posix.node: Finished\n> \n> > fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> > node-gyp rebuild\n> gyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\n> gyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n>   CXX(target) Release/obj.target/fse/fsevents.o\n>   SOLINK_MODULE(target) Release/fse.node\n>   SOLINK_MODULE(target) Release/fse.node: Finished\n> /usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n> > roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> > node ./post_install.js\n> ---------------------------------------------------------\n> Roots uses analytics to help the core team to get a\n> better view of how developers use roots. All analytics\n> are collected anonymously, and analytics data is used\n> only to make roots better for everyone. However, if you\n> would like to disable analytics, you are welcome to do\n> so by running the command `roots analytics --disable`\n> Much like roots itself, roots' analytics are open source.\n> Check out http://roots.cx/analytics for more information.\n> ---------------------------------------------------------\n> roots@3.0.0-rc.10 /usr/local/lib/node_modules/roots\n> \u251c\u2500\u2500 rimraf@2.2.8\n> \u251c\u2500\u2500 colors@0.6.2\n> \u251c\u2500\u2500 open@0.0.5\n> \u251c\u2500\u2500 graceful-fs@3.0.5\n> \u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n> \u251c\u2500\u2500 minimatch@1.0.0 (sigmund@1.0.0, lru-cache@2.5.0)\n> \u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n> \u251c\u2500\u2500 when@3.6.4\n> \u251c\u2500\u2500 argparse@0.1.16 (underscore.string@2.4.0, underscore@1.7.0)\n> \u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, minimatch@0.2.14, readable-stream@1.0.33)\n> \u251c\u2500\u2500 serve-static@1.7.1 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, send@0.10.1)\n> \u251c\u2500\u2500 coffee-script@1.8.0 (mkdirp@0.3.5)\n> \u251c\u2500\u2500 update-notifier@0.2.2 (is-npm@1.0.0, string-length@1.0.0, chalk@0.5.1, semver-diff@2.0.0, latest-version@1.0.0)\n> \u251c\u2500\u2500 posix@1.0.4\n> \u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n> \u251c\u2500\u2500 lodash@2.4.1\n> \u251c\u2500\u2500 configstore@0.3.1 (object-assign@0.3.1, osenv@0.1.0, uuid@1.4.2, js-yaml@3.0.2)\n> \u251c\u2500\u2500 accord@0.12.0 (indx@0.2.2, resolve@0.7.4, fobject@0.0.3, glob@4.3.1, uglify-js@2.4.16)\n> \u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.2, morgan@1.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, connect@3.3.3, faye-websocket@0.7.3, publicist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.2.2, lodash.remove@2.4.1, archivist-middleware@0.0.1, escapist-middleware@0.0.2, pathologist-middleware@0.0.1, update-notifier@0.1.10, apology-middleware@0.0.4)\n> \u251c\u2500\u2500 sprout@0.1.3 (indx@0.2.2, which@1.0.8, osenv@0.1.0, ncp@1.0.1, string@2.1.0, colors@1.0.3, ejs@1.0.0, readdirp@1.1.0, inquirer@0.8.0)\n> \u251c\u2500\u2500 chokidar@0.8.4 (recursive-readdir@0.0.2, fsevents@0.2.1)\n> \u251c\u2500\u2500 ship@0.1.4 (indx@0.2.2, mime@1.2.11, colors@1.0.3, fstream@1.0.3, optimist@0.6.1, file-map@0.0.1, tar@1.0.3, ftp@0.3.8, request@2.51.0, github@0.2.1, ssh2@0.3.6, js-yaml@3.2.3, heroku-client@1.5.0, aws-sdk@2.1.3, inquirer@0.8.0)\n> \u2514\u2500\u2500 npm@2.1.12\n> Muthership:portfolio-roots chaz$ ls\n> roots\n> Muthership:portfolio-roots chaz$ roots new test\n> \u2718 Error: Command failed: npm ERR! install Couldn't read dependencies\n> npm ERR! Error: Invalid name: \"<%= name %>\"\n> npm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\n> npm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\n> npm ERR!     at Array.forEach (native)\n> npm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\n> npm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\n> npm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\n> npm ERR!     at evalmachine.<anonymous>:271:14\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n> npm ERR! If you need help, you may report this *entire* log,\n> npm ERR! including the npm and node versions, at:\n> npm ERR!     <http://github.com/npm/npm/issues>\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\n> npm ERR! cwd /Users/chaz/.config/sprout/roots-base\n> npm ERR! node -v v0.10.33\n> npm ERR! npm -v 1.4.28\n> npm ERR! \n> npm ERR! Additional logging details can be found in:\n> npm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\n> npm ERR! not ok code 0\n> Potentially unhandled rejection [3] Error: Command failed: npm ERR! install Couldn't read dependencies\n> npm ERR! Error: Invalid name: \"<%= name %>\"\n> npm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\n> npm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\n> npm ERR!     at Array.forEach (native)\n> npm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\n> npm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\n> npm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\n> npm ERR!     at evalmachine.<anonymous>:271:14\n> npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n> npm ERR! If you need help, you may report this *entire* log,\n> npm ERR! including the npm and node versions, at:\n> npm ERR!     <http://github.com/npm/npm/issues>\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\n> npm ERR! cwd /Users/chaz/.config/sprout/roots-base\n> npm ERR! node -v v0.10.33\n> npm ERR! npm -v 1.4.28\n> npm ERR! \n> npm ERR! Additional logging details can be found in:\n> npm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\n> npm ERR! not ok code 0\n>   at ChildProcess.exithandler (child_process.js:648:15)\n>   at ChildProcess.emit (events.js:98:17)\n>   at maybeClose (child_process.js:756:16)\n>   at Socket.<anonymous> (child_process.js:969:11)\n>   at Socket.emit (events.js:95:17)\n>   at Pipe.close (net.js:465:12)\n> ```\n> \n> ## @jenius and @hhsnopek-  Is there an easy way to clean and uninstall node and then reinstall?  I'll start looking on stack exchange \u2013 but in case you run into this before, I'm all ears.  I'd rather not reinstall my OS. ;(\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/587#issuecomment-67409246\n. I swear its the sudo permissions\n\n## \n\nHenry Snopek\n\nOn Wed, Dec 17, 2014 at 6:38 PM, ccsouthard notifications@github.com\nwrote:\n\n> @hhsnopek good reference.\n> I ended up manually removing node and some node modules and installed nvm. I reinstalled a jeet and the stylus watcher is working.  Strangely, pulling\n> \n> ```\n>  sudo npm i roots@pre -g\n> Password:\n> \n> > posix@1.0.4 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/posix\n> > node-gyp rebuild\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing posix@1.0.4\n> \n> > fsevents@0.2.1 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> > node-gyp rebuild\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing fsevents@0.2.1\n> /Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n> > roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> > node ./post_install.js\n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> node.js:815\n>     var cwd = process.cwd();\n>                       ^\n> Error: EACCES, permission denied\n>     at Function.startup.resolveArgv0 (node.js:815:23)\n>     at startup (node.js:58:13)\n>     at node.js:906:3\n> npm ERR! roots@3.0.0-rc.10 postinstall: `node ./post_install.js`\n> npm ERR! Exit status 8\n> npm ERR! \n> npm ERR! Failed at the roots@3.0.0-rc.10 postinstall script.\n> npm ERR! This is most likely a problem with the roots package,\n> npm ERR! not with npm itself.\n> npm ERR! Tell the author that this fails on your system:\n> npm ERR!     node ./post_install.js\n> npm ERR! You can get their info via:\n> npm ERR!     npm owner ls roots\n> npm ERR! There is likely additional logging output above.\n> npm ERR! System Darwin 14.0.0\n> npm ERR! command \"/Users/chaz/.nvm/v0.10.34/bin/node\" \"/Users/chaz/.nvm/v0.10.34/bin/npm\" \"i\" \"roots@pre\" \"-g\"\n> npm ERR! cwd /Users/chaz/projects/portfolio-roots\n> npm ERR! node -v v0.10.34\n> npm ERR! npm -v 1.4.28\n> npm ERR! code ELIFECYCLE\n> npm ERR! not ok code 0\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/587#issuecomment-67423855\n. stylus doesn't need the permissions like postfix does.\n\nThe error says: **EACCES, permission denied**\nIf you notice the postinstall uses, `node ./post_install.js` and **not** `sudo ./post_install.js`.\n\n```\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> node ./post_install.js\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n\nnode.js:815\n    var cwd = process.cwd();\n                      ^\nError: EACCES, permission denied\n    at Function.startup.resolveArgv0 (node.js:815:23)\n    at startup (node.js:58:13)\n    at node.js:906:3\n```\n\nSorry to be so blunt, but the issue is that your permissions are incorrect. It's because you're using `sudo` to run, install, and access your node_modules with npm and node. To fix this you must reinstall node and npm, **without** using sudo. If you _really_ don't want to use brew to fix the issue, use this gist. Installs [node and npm within 30s](https://gist.github.com/isaacs/579814#file-node-and-npm-in-30-seconds-sh) and uses proper permissions.\n. Also here's a reference to a past struggle of mine that was caused by using `sudo` #196\n. The solution from issue #196 was for Ubuntu, not mac fyi\n. Run @jenius's cmd now on `/usr/local/lib` - `sudo chown -R $USER /usr/local/lib/node_modules`\n\nEdit: Then run `npm i roots@pre -g`\n. @ccsouthard Here's an explanation of the latest problem: basically the issue is that you, as a user, do not have read/write access to `/usr/local/lib`. You need to give yourself the rights to do so. \n. That's a previous roots error we had, you gotta remove that file. `rm -f /usr/local/share/man/man1/roots.1`\n\nOnce you do that, we should be good :smile: \n. whoops use `sudo`, this is a different section, not `/usr/lib`\n. `sudo chown -R $USER /usr/local/bin/` your bin can't be symlinked due to permissions (cause from using sudo with npm & node)\n. `sudo chown -R $USER /usr/local/bin/` then `sudo rm -fr /usr/local/share/man/man1/roots.1` then install roots\n. Ping @slang800 I think I've pointed the right direction.... Any thoughts? It's definitely the symlink issue.\n. @ccsouthard did you actually remove the roots.1 file? it seems in your command sequence that you just did `roots` not `roots.1`\n. @ccsouthard don't use finder when navigating through lib, it's a lot easier with the terminal. You shouldn't have to reinstall OSX. \n. Does it still not work if you compile via command line (with jade)?\n. Everything compiles for me, I had an issue using roots 3.0.0 rather than 3.0.2 - are you up to date on roots? \n\n![ordered list](https://cldup.com/oyklm4fUN8.png)\n. Have you tried a fresh install of roots? Maybe commit your changes, delete the project and reclone it down?\n\n## \n\nHenry Snopek\n\nOn Mon, Mar 16, 2015 at 4:59 PM, Thiago De Bastos\nnotifications@github.com wrote:\n\n> Hmm things just got weirder. In both Chrome and Firefox I get this:\n> ![screenshot-nocompile-roots](https://cloud.githubusercontent.com/assets/6151341/6677400/84f58b16-cc27-11e4-9949-648c7abfc08d.png)\n> \n> ## Apologies for my lack of better issue-description, I am exhausted!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/622#issuecomment-81959994\n. I got around this by pulling the latest from master, installing it (`npm install`), then linking it (`npm link`).\n. Hey everyone (@gadern & @thiagodebastos), the problem has been resolved. Run `roots tpl rest` and you'll be able to create new projects :smile: \n. A quick fix to to create an [ignore rule](http://roots.cx/docs/configuration) within your `app.coffee`, as well we have support for [multi-pass](http://roots.cx/docs/multipass) because if can be useful to use.\n. Hey @adampotocki you can convert all of your scripts into pure javascript with the exception of `app.coffee` (if i'm not mistaken). If you want to use any other languages within roots checkout [accord](//github.com/jenius/accord). Babel is supported in accord so you can use it!\n. Adding a little clarity, roots uses accord to compile everything. All you need to do is install the language you'd like to use via npm and roots will automatically pick it up and compile it for you :grinning: \n. No problem, if you have any other questions let us know! :smile: \n. Could you provide your package.json?\n. 1. You have multiple errors within your `package.json`, use this site to correct the issues: http://package-json-validator.com/\n2. I'm unsure what is wrong with your code you've pasted but I don't see any roots problems in that or in your package.json\n. Hey @wojomike have you seen this? https://github.com/jenius/roots/issues/614\n. Quick heads up!! sprout is actually on [v0.4.1](https://github.com/carrot/sprout/releases/tag/v0.4.1)\n. I'm not actually sure, I haven't kept a close eye on sprout. cc @kylemac\n. I don't think you've defined `console`\n:doge: \n. @jenius you need to add a `.jshint` file so that it knows what to be parsing. The default options are [here](https://raw.githubusercontent.com/thoughtbot/hound/master/config/style_guides/javascript.json). You need to add `node: true` for it to stop yelling at you for `console.log` errors :grinning: \n. You got it on the spot, but the use cases could go beyond using netlify for deployment. It's more of a helper so that your global version & project version are the same so if it is specified within the `package.json` you know you're okay\n. it would just be a simple check at the beginning of the root watching or compiling a project, shouldn't slow roots down at all as it's not compiling anything, just checking the version - probably can just read the projects `package.json` then use the same method for printing `roots -v` and compare them\n. yeah so right now when you wanna access templates without creating a new project you're able to use both: `roots tpl ...` & `roots template ...`. When we create a project with a template you must use `roots new <name> --template <templateName>` with no alias to `roots new <name> --tpl <tplName>`\n. tl;dr: alias `--tpl` to `--template`\n. if you're able to get it done that would be great, otherwise I can get to it later this weekend\n. thank you :dancer: \n. Hello everyone, I've been digging into the [roots-contentful #27](https://github.com/carrot/roots-contentful/issues/27) issue. It seems that a random file during the compilation during the roots-contentful category becomes \"stuck\" as the `_path` variable which later affects the `filename` variable in `@roots.config.locals`. I do have a [hotfix](https://github.com/carrot/accord/pull/1) that requires locally linking accord & roots-contentful, there are unknown sideaffects to this. Besides unable to overwrite the defaults, like overriding the filename to your sourcemap. (Which is the only failing test [here](https://github.com/carrot/accord/blob/master/test/test.coffee#L932)), this fix works.\n\nI know this was an issues in roots-records prior to this [refactor](https://github.com/carrot/roots-records/pull/23). If you take a look [here](https://github.com/carrot/roots-records/pull/23/files#diff-2290943f47872064e53f430a293f3c8fR150), this is where I believe the problem gets solved on the extension end. \n\nI will keep updating as I continue with this bug\n. :tada: :grinning: \n. I've actually used poststylus and it works great for the plugin I was using\n. ",
    "declandewet": "I didn't run into this issue on 64bit Windows 8 Home Premium. Roots compiled just fine.\n. I was talking about `roots watch` too. It compiles only once per file save for me.\n. I'm not getting any unnecessary compilation at all on the latest `npm` version, @jenius. Everything works spiffy except for a weird popup message about some error regarding port 1111 that I'm pretty sure doesn't exist when I run 'roots watch' for the first time. I'll try to repro it later, but deleting a file does yield this (roots compiles fine on any detected file change after this message though):\n\n![picture](http://puu.sh/3HBO7.png)\n\n(I know that path is two levels deep, but it happens on .jade files in the views folder as well. Basically anything that got deleted)\n\nNeither of these two things prevent being able to work on a project, though. They're just minor annoyances\n. `root`. `rootsify`. `stump`. :laughing: \n. Why the decision not to use Jade's built in `block` and `extends`, anyway?\n. In that case, two possible synonyms for `yield`: `bear`, `give`.\nSynonym for `include`: `contain`\n. Could work, but I think it might be confusing at first to people who are both relatively new to Jade and Roots, as Jade's demo code for anything layouts is `block content`\n. That's actually a fair point. Fancy that.\n. From Stylus' `package.json`, it lists [CSSOM](https://github.com/NV/CSSOM) as a dependency. It might help for checking the syntax tree with CSSOM for assets without having to parse the compiled CSS directly. \n\nFor example, using it on this stylesheet:\n\n``` css\n@import url('reset.css');\n\n.wrapper p {\n  background: url(../img/image.png);\n}\n\n@import url('shame.css');\n```\n\nProduces this tree:\n\n``` javascript\n{\n    parentStyleSheet: null,\n    cssRules: [\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            href: \"reset.css\",\n            media: {\n                length: 0\n            },\n            styleSheet: {\n                parentStyleSheet: \"../../..\",\n                cssRules: []\n            }\n        },\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            selectorText: \".wrapper p\",\n            style: {\n                0: \"background\",\n                length: 1,\n                parentRule: \"..\",\n                _importants: {\n                    background: \"\"\n                },\n                __starts: 38,\n                background: \"url(../img/image.png)\"\n            },\n            __starts: 27,\n            __ends: 78\n        },\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            href: \"shame.css\",\n            media: {\n                length: 0\n            },\n            styleSheet: {\n                parentStyleSheet: \"../../..\",\n                cssRules: []\n            }\n        }\n    ]\n}\n```\n. I develop on Windows - a Mac is far too expensive, and data costs are high in my country too, so simply downloading a linux flavour isn't an option. Never assume that not many people develop on Windows. Not many people are blind, but we still work our butts off making sites accessible to them, no? Same thing here. :smile:  \n\nI understand symlink is the preferred option, but if it isn't at all possible - then why not just cache files after compiling them and compare file's modified dates to the ones in the cache? It's a strategy that would work on all platforms.\n. Roots watch requires you to be running as Admin? That's strange - I haven't needed admin privileges for Roots since I typed this command: `$ npm install -g roots`\n. Bootstrap also enforces quite a lot of cluttered HTML markup on the designer that isn't _really_ needed. I'm in the process of porting Jeet to Axis for semantic grids that can work all the way down to IE7 (as an improvement of the current semantic.gs implementation) and the sites I've built for testing have been very quick to develop (10-30mins), very different from each other in terms of design and nice, clean HTML that would make a purist smile.\n. It would be nice, it'll make developing on Roots seem a lot more fluid. I use [Mixture](http://mixture.io) to work on Axis, and it reloads CSS - not the whole page. Add this mixin (borrowed from Jeet) while developing and things _really_ start feeling awesome:\n\n```\nedit()\n  body *\n    transition: 200ms ease all\n    background: rgba(#000, .15)\n```\n. Here's an idea for the meantime: an option to turn off the Roots implementation in case the developer wants to use LiveReload (or a similar app) instead.\n. Shouldn't be too hard http://requirejs.org/docs/optimization.html#wholeproject\n. Just figured I'd plug a link I found earlier today here regarding stylesheets: http://aboutcode.net/vogue/\n. It should probably only reload the stylesheet that has changed...\n. +1\n. It has nothing to do with studies Jeff, you're from a Ruby background, no? That's the real reason you use underscores. Studies schmudies. :trollface: : \n. I like CoffeeScript but I still see people complain about it - I read somewhere (can't remember exactly) that CoffeeScript use is absolutely fine for personal projects but using it on a project that other people might use will hinder the projec's contributions. I really don't care if it is or isn't - but there is that mindset to think about.\n. I think you need to have a read of Trevor Burnham's answer to this question: http://stackoverflow.com/questions/6548750/function-declaration-in-coffeescript\n. Yes. Sort of. The generated JS is quite messy - but this is the only way to have _real_ named functions output in the compiled JS. It'd look something like this:\n\n``` coffeescript\n# Classes are the only place CoffeeScript generates named functions.\n# This might seem messy, but the extra wrapping is necessary in order\n# to have consistent behavior in IE. See the FAQ for more details:\n# https://github.com/jashkenas/coffee-script/wiki/FAQ\n\nclass square\n  constructor: (x) -> return x * x # constructors require an explicit return\n\nconsole.log square 5    # 25\nconsole.log square.name # square\n```\n. Also, it's always worth a mention - if instead of using a workaround like the above example, CoffeeScript has embedded JavaScript to help:\n\n``` coffeescript\nexpression = ->\n  Logger.log(\"Hello World!\")\n\n`function named() { expression(); }`\n```\n\nCompiles to:\n\n``` javascript\nvar expression;\n\nexpression = function() {\n  return Logger.log(\"Hello World!\");\n};\n\nfunction named() { expression(); };\n```\n. ![picture](http://25.media.tumblr.com/tumblr_m8h2dhhTzn1rvrxudo1_1280.png)\n. Mine was a mastered learning methodology of outdated technology, no lectures - just books, tests and exams on repeat....\n\n:boar: :book: :books: :page_facing_up: :computer: :beer: :beer: :beers: :beers: :beers: \n. I don't think `process.env.LANG` will be available on all machines - it's not present on my Windows machine:\n\n![picture](http://puu.sh/3U0vo.png)\n. Is taking quite a while, haha. That temporary name could be \"TeamRoots\" or something. \n. How old are all of you again? This behaviour somewhat resembles that of my sister and her friends. She's 12 years old. We're adults... I should **not** be the one reminding you all to act your age. We don't want either of our projects being associated with this kind of attitude. \n\nAs for project scope - that really is no valid argument. Your project is a Wordpress theme - it's target market is smaller. Ours is an entire site generator for both static and dynamic content that supports precompilation of assets and includes a CSS library akin to Twitter's Bootstrap for those who prefer semantic HTML, so our target market is much larger. But yours is more established than ours, it's been around longer and has more contributors (though ours averages out to more commits per contributor). I'm not making an argument against your project or for ours - what I'm implying is that we can go on arguing the scope of each project and not get anywhere with it as there are an almost infinite number of reasons why one is larger than the other in specific areas.\n\nIf I'm reading the name squatting policy correctly, it regards inactivity as squatting. By the book, @roots has been active on the site. He may not have public repos, he may or may not have private repos, I don't know for sure - but what I do know is that he's actively engaging with other users on the site. He's commenting on issues, replying to accidental (or not) mentions - so as far as Github is concerned, he's active. There's really nothing we can do about this right now, so let's be diplomatic about it and wait it out, perhaps a different opportunity will arise.\n. The only errors I get with `node-gyp` are when I forget to run the command with admin privileges. If you're on Mac or Linux, make sure you `sudo npm install -g roots`, if you're on Windows then right click command prompt and select \"Run as Administrator\" (CTRL-X+A on Windows 8).\n. I'm not sure who added them but they do send out a positive warm fuzzy message. I like waffles. ;)\n. Have you changed the `!=yield` call in your layouts to `!=content`? - Might solve your problem. For more info: #145\n. Interesting concept and definitely something I'd vouch for but I've tried TumblrThemer, Thimblr and associated \"solutions\" out and none of them really hit the ball. Tumblr themes are a pain to work with if you 1. Have no content on your blog yet and/or 2. don't know what you're doing. I kind of feel like adding support for such a thing is a whole different market to where Roots is currently heading...\n. I don't disagree with that at all, it would be huge... but it's a difficult task... You'd essentially have to emulate their entire template API and allow for dummy content without relying on what's already in a blog as well...\n. I've found this: https://github.com/pabluk/tumblr-theme-parser\n\nIt's in Python though, and relies on a Python grammar parser called PyParse. I'm not sure of any equivalents for Node, but porting this (or even using it directly by spawning it through `shell.exec` since Roots already has a dependency on Python thanks to `node-gyp`) would be a very good start.\n\nIt gives the Tumblr theme template syntax and relies on JSON data for dummy content, and I've always thought having a JSON model system in Roots would be a useful alternative to dynamic content files, just haven't found a good enough reason to bring it up yet.\n\nObviously if we do just decide to spawn it and not port it, we'd either need someone to contribute actively to that library or port it over anyway (since it has not been maintained for six months)\n\nAlternatively, there is also this PHP templating engine that claims to be inspired by Tumblr and claims to support multiple parsers, one of which is \"100% compatible with the Tumblr syntax\" - https://www.ohloh.net/p/pheme\n\nThere is also [Thimble](https://github.com/mwunsch/thimble), which is no longer maintained (at all), but it does have parsers that could be used as a starting reference point.\n\nThis post on Coderwall seems to explain how to fetch content from online Tumblr blogs - could be useful for quick dummy content: https://coderwall.com/p/xuf6ug\n\nAlso, if you Google Christopher Lloyd on Quora, you might find that he is a man who re-implemented the Tumblr theme parser in Ruby. However, he has not open sourced it and planned to use it for commercial products. He has said though, that development on it wasn't very active and if things continued that way, he would open source it. Perhaps it might be worth getting in touch?\n\nEDIT: After searching very thoroughly, I have found this JS parser: https://github.com/elfsternberg/tumble (last commit  to master was 10 days ago)\n. Well, that Python one is an exact tumblr parser, problem is it's in Python and is 6 months unmaintained :( I wish I was smart enough to comprehend writing parsers/compilers, but I'm just not. It isn't my strong point. I've built a tokenizer... But it was really shoddy.\n. Perhaps we should port pyparsing to java first :laughing: \n\nOn a more serious note at least these resources can be used as a reference, probably might pick up on some common design principles?\n. I've been watching these comments and was going to mention perhaps a switch to JSON (or cson) would be better but then I remembered the functions...\n. Closing because of #228 \n. @samccone That pretty much sums up exactly how I feel \n. Uh oops I meant to say UglifyJS lmao, must be from my brain typing in `require [...], (...) ->` repeatedly and not `uglify [...]...`\n\nAnd yeah now that I look closer I can see that... but I'm not sure how that's much of an issue, because forward slashes haven't caused any bugs in most of my uses on windows? Also, doesn't node.js normalize paths between operating systems?\n. Strange - I was able to deploy other sites rather easily before. Also, the error that guy you referred to me who emailed me - I think his issue with installing Roots just became a whole lot more clear, as I recall seeing the same ENOTEMPTY error in his `npm-debug.log`\n. I haven't delved into a level of programming on windows to know for sure but I have a good feeling it does not by default... I mean, it'll work when used in libraries like Grunt if you're building dynamic file objects, is finicky otherwise, that's as far as my expertise there goes.\n. Try using [isaacs/node-glob](https://github.com/isaacs/node-glob).\n\nI do remember a while ago when learning Grunt, `node-glob` was a lot more finicky on Windows (see: [glob-whatev](https://npmjs.org/package/glob-whatev)), but that was a long time ago, and dynamic file mapping was impossible on Windows with Grunt, now it's possible - but still just a tad finicky.\n\nThere does seem to be a [gotcha for node-glob on Windows](https://github.com/isaacs/node-glob#windows):\n\n> Windows\n> Please only use forward-slashes in glob expressions.\n> \n> Though windows uses either / or \\ as its path separator, only / characters are used by this glob implementation. You must use forward-slashes only in glob expressions. Back-slashes will always be interpreted as escape characters, not path separators.\n> \n> Results from absolute patterns such as /foo/\\* are mounted onto the root setting using path.join. On windows, this will by default result in /foo/\\* matching C:\\foo\\bar.txt.\n. I might have some time to write some documentation this weekend, but I'll be backpacking through Cape Town so I probably won't be able to push until I'm back on Wednesday. Will be a lot of work though because there's going to be some incredibly great updates to Jeet: https://github.com/CorySimmons/jeet/pull/54\n\nIdeally, how would you like the documentation to be handled? I'm thinking in a step sequence:\n1. Maintain our own documentation on http://roots.cx while we wait for those improvements to be merged to Jeet\n2. Work with Cory on submitting a pull request to the Jeet website that adds some better docs so he can give input on the recent changes\n\nAlso, I don't know why we didn't think of this sooner, but since Cory wants to add extra utilities to Jeet on top of the grid, and Axis is extra utilities making use of Jeet's grid - _why didn't we just decide to merge?_ - I'm sure Axis would benefit greatly by that because we all share the same common goal and ideas and most of us are active at different times. I feel like it could increase the rate at which this project grows...\n\nLet's have a talk about it on [this issue in the Axis repo](https://github.com/jenius/axis/issues/80).\n. Axis is already it's own npm package: http://npmjs.org/package/axis-css\n. I've used moment before. It is super awesome - would trust it over the HubSpot one any day (any code I've used from HubSpot breaks bower in roots so I no trusty) in terms of time formatting. For capitalizing, titleizing and the like, I'd use [underscore.string](https://github.com/epeli/underscore.string).\n. underscore.string _is_ great, I used it for string manipulation to test out my CSS preprocessor idea, as I didn't have any knowledge of compilers at the time. But now I've got an understanding of parsing, tokenizing and so on. :) underscore.string gave me nothing but joy at the time! You'll enjoy it too, for sure.\n. Option 3 is a manual process and would make uninstalls require more effort. Option 2 will install a whole bunch of stuff you might not need (like MS SQL server and IIS and so on). Best option is to install the .NET framework.\n. .NET framework is a few versions ahead of 2.0, might be the cause of issue. I found this article for JSDOM regarding similar issues, and I think the instructions may be applicable to your case. http://www.steveworkman.com/node-js/2012/installing-jsdom-on-windows/\n. Would this have to be implemented at a level somewhat close to the compiler?\n. Gotcha :D\n. Hmmm, I'm having a thought here - what if we allow the user to set a particular view as an RSS feed in `app.coffee`?\n\nSomething like:\n\n``` coffeescript\n'feed.jade': 'rss'\n```\n\nWhich would generate a `.xml` file instead of a `.html` file.\n\nThen the user could do something like this:\n\n```\ndoctype xml\nrss(\n  version='2.0',\n  xmlns:atom='<a href=\"http://www.w3.org/2005/Atom\" rel=\"nofollow\">http://www.w3.org/2005/Atom</a>'\n)\nchannel\n  title Declan de Wet\n  link.\n    <a href=\"http://declandewet.com\" rel=\"nofollow\">http://declandewet.com</a>\n  atom:link(\n    href='<a href=\"http://declandewet.com/feed\" rel=\"nofollow\">http://declandewet.com/feed</a>',\n    rel='self',\n    type='application/rss+xml'\n  )\n  description.\n    The portfolio and blog of Declan de Wet\n  language en\n  each post in site.blog\n    item\n      title= post.title\n      link\n        a(href=\"#{post.url}\", rel=\"nofollow\") #{post.url}\n      description\n        | <![CDATA[\n        | !{post.description}\n        p: a(href='<a href=\"#{post.url}')!=\" rel=\"nofollow\">#{post.url}')!=</a> 'Read more &raquo;'\n        | ]]>\n        pubDate= post.url\n        guid(isPermaLink='false') <a href=\"#{post.url}\" rel=\"nofollow\">#{post.url}</a>\n\n```\n. Would that feature be on by default? I feel like doing that would be an issue - i am no expert on RSS so correct me if you can, but don't separate feeds for separate items require different links and descriptions? How would it work? Or is it possible to list multiple types of items in a single rss feed?\n. I see. So for getting the XML attributes like the title and description of the feed would we read it in from say, the layout page of the dynamic content's meta description tag or what? Perhaps allow them to override it in an object in the same config?\n. Yeah front matter for individual items in the feed is easy & obvious, I'm referring to the title/description/url of the entire feed, outside of the scope of individual `<item>`s.  I can get the URL from the location of the dynamic content list view file, perhaps get the title from just prepending the folder name of the dynamic content to the title set in `app.coffee`, but the description?\n. Sounds good\n. I'll be getting some time in a few days and would like to play with this - but since the changes, let me ask: Which is the better spot: Roots, or Accord?\n. @jenius thoughts on this?\n. Yeah I figured out last night, but at that point it was like 3 AM :o\n\nEDIT: @jenius how do I pull the upstream transformers branch into my local repo so I can start working on this? Tried a few commands but I get the error `fatal: not a valid object name: upstream/transformers`\n. Thanks dude, one correction - since `origin` is my forked version, and `upstream` is your version - it's:\n\n```\ngit checkout --orphan transformers\ngit pull upstream transformers\n```\n\n:smile: I will be submitting this patch shortly!\n. Haha, you did that for me on Axis and I still don't know how to do it without just working on my repo and submitting a PR. Other than just cloning your repo and working on it there... Which only just occurred to me right now. It's official: I'm a dumb blonde. But how does one submit a pull request that way?\n. Interesting! Thanks for all this info and sorry to be a burden with it, but as a self-taught guy I've just gotta pick peoples brains every now and then xD\n. Oh btw not sure if you saw it but the PR is here #263\n. merged in #263\n. Done :)\n. If you do a basic `$ roots compile`, you should be able to run it like any other node.js app. Our loving benevolent dictator wrote a handy StackOverflow answer on the subject here: http://stackoverflow.com/questions/19625025/install-a-server-for-a-node-js-web-service-application/19625953#19625953\n. `app.coffee` should have an underscore glob in `ignore_files:` and `settings.styl` should start with an underscore so that it is ignored, otherwise Roots will try to compile it, and since it does not output any CSS, compiling it produces no file - that is the cause of error.\n. If none of those files compile directly and are included via an `@import` call then yeah\n. Yeah, they compile directly. I wouldn't call it a Stylus convention per se, it's just more of a gotcha with Roots. I mean, I don't use the underscore \"convention\" (if you could call it that) in my build tools, because I know that I'll only ever use one stylesheet - so I just watch/compile `master.styl` in those projects and any other file gets imported into it with `@import`.\n. I don't have anything against this proposal, @jenius - your input?\n. Also, I don't think the grid changes are necessary - since that commit breaks the current default, this makes it a breaking change - And we've already switched to a new grid framework: https://github.com/jenius/axis/commit/70ae56b86d7d613fd977e2484a01d15a4971158b\n. In the new grid everything is fluid and mobile first by default (i don't even think there is a fixed layout option other than specifying a `max-width` using the `center()` mixin) - you can have a look at more info here: http://jeetframework.com\n. It's already been removed (and replaced with Jeet's settings) - just not in the master branch/current stable release\n. All of the CSS stuff is in [Axis](http://github.com/jenius/axis) - the templates just generate base settings in `_settings.styl` for it. They're not even required, as Axis is coded with smart defaults, despite it's modular nature :) \n\nAs for the separate template repositories, those are fairly new (only a few days old) so I wouldn't expect their structure to remain as is. We're mostly just gearing up on getting the transformers branch here ready as well as modularizing the code into individual components so we can ship the finalized changes to those individual templates when we're good and ready\n. so wow as good PR\n. Hmmm. Does your user account have read/write permissions to that directory? If so, try to ensure that you run your terminal as an administrator (right click, run as administrator). \n\nI've not encountered this issue before but if you want to see more information about it, I found [this](https://github.com/joyent/node/issues/3977) and [this](http://stackoverflow.com/questions/17666329/handlebars-compile-operation-not-permitted)\n. Could we perhaps get some more info? If this error resulted in the creation of an `npm-debug.log` file, the contents of that file would be a massive aid in helping you.\n. I'm seeing output about CouchDB here. CouchDB isn't a dep, is it @jenius?\n. I feel like we should have a wall of fame dedicated to weird issues like this one that are mystical in nature. \n\n@wad2eq - are you being sure to install roots globally, as well as with administrator rights?\n. I haven't had any issues but I use git-bash through ConEmu on administrator mode, not the default command prompt\n. @wad2eq I don't think you need to go so far as to reinstall Win7. Just make sure you:\n1. Run `cmd.exe` as an administrator\n2. Install roots globally `$ npm install roots -g`\n. I have WAY too much energy to read that massive wall of text right now and am about to literally get up and jam to some trance, but I skim-read it and I think the upgrade the precompilers when the roots major changes is the best option - maybe it might be a good idea to allow users to update the precompilers within roots themselves if they want to try it out?\n. Hi @Roxy2,\n\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably `node-gyp`) depends on the availability of Python and Visual C++, as outlined in the README [here](https://github.com/jenius/roots#windows-installs). This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\n\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\n\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\n\nAlso, be sure to run `cmd.exe` or `powershell` or a terminal emulator like `ConEmu` as an administrator when installing Node modules globally. \n. Hi @Roxy2 - were you able to sort this out?\n. Hmmm. This is so very weird. Give me a minute or two...\n. It looks to me like Roots has installed, judging by the screenshot (and your previous message). These warnings are not an issue (I work predominantly on Windows 8.1 and get them as well - you need not be worried). Give it a test:\n\nIt seems to me as if Jeet relies on a Roots edge pre-release, so taking from the [Jeet template's](https://github.com/mojotech/jeet-roots) instructions:\n\n```\n$ npm install -g clonr roots@2.1.0-beta3\n```\n\n```\n$ clonr mojotech/jeet-roots projectname\n```\n\n```\n$ cd projectname\n```\n\n```\n$ roots watch\n```\n\nThat should fire up the Jeet template and the livereload server/watcher.\n. Any time :)\n. Hahaha! That reply was comical. Thanks for the laugh :P\n. Oh lord... I think I may have trouble finding out what the Windows equivalent is... xD\n. @samccone but people get frightened when I take out my D://\n. So it turns out the windows equivalent is the same:\n\n![my supervisor ensures me that this is a picture of a beautiful sunset, it may not be though](http://puu.sh/5CSm2.png)\n. So, I deleted that file, uninstalled roots, re-installed the beta-3 prerelease, and this is the result when trying to create a new project:\n\n![lol](http://puu.sh/5CSWt.png)\n. That version works in generating a new project, but it's still the old beta-2 code. I'm confused.\n. ![](http://puu.sh/5CTNy.png)\n\nThis looks different to the content, say, on here: https://github.com/mojotech/jeet-roots/blob/master/app.coffee#L1\n. That makes more sense. One question, though.\n\nWhy is it, that when generating a _new_ project, using the **stable** release of Roots, **2.1.0**, does the comment say it was created on `v2.1.0-beta2`?\n. 2.1.0-beta2.\n\n![](http://puu.sh/5CU9U.png)\n\nEven though I installed it like this:\n\n`npm install -g roots`\n\nThat command should install the latest stable 2.1.0, should it not?\n\nThat is why I said, on Windows, the latest stable version is referencing the old pre-release of beta2.\n. I'm going to try manually removing roots from the `npm-cache` folder and reinstall. Maybe that will work\n. It seems that it worked. But now I'm getting the same error when generating a new project.\n\n![](http://puu.sh/5CUoZ.png)\n. That's the problem. I cleared it out (again, right now), and I'm still getting this error.\n\n![](http://gyazo.com/81e18f0c3c3bbefe9782daf641ca4ef0.gif)\n. Deleted it again so can't copy/paste right now but it's something along the lines of\n\n```\npackage_manager: 'bower'\ndefault_template: 'default'\ntemplates:\n  <insert long list of templates here>\n```\n\nI literally just right now redid all of my steps (uninstalling roots, manually deleting the config yaml files, manually deleting the npm-cache) and reinstalled roots and it installed 2.1.0-beta2 AGAIN. Ugh. So frustrating...\n. Sorry - had to go to my sisters valedictory ceremony. Man that was boring. Still getting the same issue. It keeps installing 2.1.0-beta2, and on the rare occasion it actually installs the version I want, generating a new project gives the same fatal error. I can't even use Roots at this point. :(\n. I think I'm going to do the unspeakable and re-install node from scratch...\n. @samccone that is a good idea. I wish I had thought of that before going ahead with my previous statement xD\n. This should be reopened, it has nothing to do with fd8ebd4 - everything required for Roots to run is installed (Git, Python, C++ runtime) - clearing the npm cache does not fix the issue, nor does clearing out the `.config/configstore` directory, and aliasing a cloned copy of Roots does not fix the issue either, nor does uninstalling/reinstalling node.js/npm, and other people are experiencing the problem as well (#341).\n\nIt seems that when `$ roots new name` is run, Roots looks in `C://Users\\username\\.config\\roots` for files and folders that dictate templates, but that directory does not exist. I'm not sure if Roots is looking in the wrong place (should it be looking at `C://Users\\username\\.config\\configstore\\roots` instead?) or if Roots is looking in the right place but is just failing to create the directory structure it needs... \n\nI've basically found that the only way to work with Roots at this point is to install Ubuntu or use nitrous.io - makes development a lot slower because the former requires I separate my development/design workflows between two different operating systems and the latter involves network latency, which is more like latent network hell here in slow data Africa :( Getting a mac is too expensive so that's out of the window\n\n@jenius I think this deserves a second look. I trust your judgment that this is an npm issue, but I think something needs to be done here. I've noticed it only happens on Windows 8.1, however this is the only npm module that I seem to be having trouble with, and it can't be the only one I use that uses the configstore...\n. Yeoman, Bower and Mocha use `configstore` indirectly through `update-notifier`, with the addition that Yeoman also creates a file called `insight-yo` using `configstore`, and I have no trouble at all with those modules. I don't think this relates specifically to `configstore` itself (unless `configstore` can install stuff from git into the `.config` folder [note: not the `.config/configstore` folder]). Roots is producing a fatal error saying that `.config/roots/templates` does not exist/could not be found. Manually adding the folders changes the error message to `Fatal Error: path not specified`. \n\nAs for reproducing the issue, Windows 8.1 Home Premium on a 64-bit architecture is what I'm experiencing the issue on: `$ roots new name` causes the problem immediately. If you look at issue #341 - you'll find that @Compiztab and @srsgores found a partial work-around by enclosing the project name in quotes/square brackets like so:\n\n```\n$ roots new \"name\" \n```\n\nOR\n\n```\n$ roots new [name]\n```\n\nI think this technique they use requires the manual structuring of `C:\\\\Users/user/.config/roots/templates`, but they will have to chime in on that because I could not get their work-around to work at all.\n. haha node labels pretty much every windows as Windows NT @jenius - don't be frightened :P\n. I am not to be trusted on this statement, but I am almost certain this is a Bower issue... it's the very reason I wrote a [tweet](https://twitter.com/declanjdewet/status/401616720705495041):\n\n![a facebook status](http://gyazo.com/aeb657463b8e89111b1cd64c37fa829b.png)\n. I've never actually had the balls to drop bower, though. Something about it makes me sad to let it go. Want to give Browserify a try.\n. As I said in #332, Roots 2.1.0 is seriously broken on Windows. :(\n. It kind of does apply, he's having the exact same issue as I was. npm kept installing the beta2 prerelease instead of 2.1.0 because 2.1.0 and beta3 do not work on Windows at all. This issue pertains to the version not working, whereas mine includes this version not working as well as it using the wrong version, which I later then found out was because the npm cache actually determines which version works so it can fall back to that on installs\n. I used it before finding Roots - it was alright\n. Roots.cx docs are probably a little outdated - but the Readme had the answer this whole time: https://github.com/jenius/roots#windows-installs\n. Wouldn't it just be awesome to pipe and cache streams instead of rely on temporary files\n. I wonder if it's possible to use [Gulp](https://github.com/wearefractal/gulp) at a higher level for something like this - sorta \"behind the scenes\"\n. And add multi-device testing and CSS injection on top of just a simple live reload\n. Just worth noting: browser-sync doesn't necessarily _have_ to replace the watcher. It **can**, but it can also forward to an existing server process through a proxy. This might make running tasks easier, and will still allow for custom dev paths\n. I'm not sure if this would fit better as an extension or part of Roots core...\n. This will be on my radar when I start :)\n. Id est, _Roots must either absorb or destroy all. All hail Roots._\n. http://declandewet.com\n. Hey @monkeez - this is an issue with one of Roots' dependencies: https://github.com/carrot/sprout\n\nThe good news is, this issue is known and has already been fixed: https://github.com/carrot/sprout/pull/17\n\nThe bad news, is that we're waiting on a breaking change update before we publish this fix.\n\nHowever, there is something you can do in the meantime. Clone this Roots repo, cd into it, run `npm install` and then head on over to roots/node_modules/sprout/lib/api/init.js and change lines 109-111 from:\n\n```\nupdate_template = function() {\n  return nodefn.call(exec, \"cd \" + this.sprout_path + \"; git pull\");\n};\n```\n\nto:\n\n```\nupdate_template = function() {\n  return nodefn.call(exec, \"cd \" + this.sprout_path + \" && git pull\");\n};\n```\n\nAll you need to do then, is run `npm link` from command prompt and Roots should work. :)\n\n(btw, huge fan of your work :+1: )\n. ...Just musing here and not describing an actual solution, but would a symlink from the one drive to roots, git, npm & node on the other drive work? cc/ @jenius @slang800 @samccone  \n. Yeah I'm aware of that, this symlink would be outside the scope of roots as well, just a thing @monkeez could maybe do to sort of normalize his workflow. That's the only [possible?] solution outside the scope of just installing everything on the harddrive he wants to work on\n. Using 3.0.0-rc6\n\nThis error appears in Git Bash, Command Prompt and Powershell - the process does not end when the error gets thrown. This is on Windows 8.1 - I don't have access to Windows 7 so can't reproduce _exactly_ the same result.\n\n![](http://puu.sh/8SQAf.png)\n\nWhy can't I see a stack trace?\n. Hi @Flip4Bytes - I'm a Windows user myself. The only correct way to run any program as Administrator on Windows is to right-click it, and select \"Run as Administrator\" - using the CLI is not always reliable.\n\nYou will need version 2.7.x of Python installed, as well as the Microsoft Visual C++ runtime installed (this comes with the .NET framework _or_ Visual Studio 2008+) as well as Git installed in order for Roots to install properly. \n\nThat being said, the [V3 pre-release](https://github.com/jenius/roots/tree/v3) works way better on Windows and comes with a few performance and architecture improvements, but you'll miss out on the deploy features. You can install it with:\n\n``` bash\n$ npm install roots@pre -g\n```\n\nIf you do need deployment, you can still use any other method to do so as the compiled output is just files, so if you can work with that then cloning your branch on to your production servers or using something like [flightplan](https://www.npmjs.org/package/flightplan) could definitely get the deployment disadvantage out of the way\n. :+1:, very nice PR\n. Hi @Brle88 - I've just commented on another user's issue of the same description - if you could read my answer there, it might help: https://github.com/jenius/roots/issues/464#issuecomment-42658913\n. It looks like the error _is_ coming from Sprout.\n\nIf you change https://github.com/carrot/sprout/blob/master/lib/api/init.coffee#L87-L90\n\nFrom:\n\n``` coffee\nprompt_user_for_answers = ->\n  if not @questions.length then return W.resolve()\n  nodecb.call(inquirer.prompt, @questions)\n    .then((o) => @answers = o)\n```\n\nTo:\n\n``` coffee\nprompt_user_for_answers = ->\n  if not @questions.length then return W.resolve()\n  nodecb.call(inquirer.prompt.bind(inquirer), @questions).with(@)\n    .then((o) -> @answers = o)\n    .catch(console.error.bind(console))\n```\n\nThen Roots `new` works on Windows (with a very unnerving loading spinner in the terminal):\n\n![windowsfix](http://i.imgur.com/z5AHvNh.gif)\n. Thanks @samccone - Used it to make this: http://helpfindjake.com - and to be honest this is a really slow workflow on Windows - sometimes waiting 20+ seconds to reload the page (which I decided to intercept with a... what's it called again... such an antiquated tool... the um.... manual refresh? yeah. manual refresh. that's the one). Roots definitely suffers on Windows now. Wasn't so bad before.\n. Yeah, I think adding on the `catch` method to that promise chain in Sprout has caused the slowness, but without it - unhandled rejection errors run rampant.I think it's slow because the compile is being triggered multiple times at once, so it's not that the compile is slow, it's just that there's a gazillion compiles. Also, the \"spinner\" is another crazy side effect...\n\nRemoved the monitor commit - Why is the monitor not good for production? Does it have side effects?\n\nEDIT: Oh, okay - I see why monitor is not reliable for production - I just had a look at the Travis details for adding it and Travis goes wild with errors - it's kind of funny actually, because it's almost as if the output is computer speak for Travis telling you it does not like when.js looking at it's... \"particulars\"\n\nAlso, I just discovered the `catch` block on that promise chain in Sprout is not exactly required - it's just the `inquirer` context that needs binding, but I am getting an EJS compile error. Adding the `catch` block removes the EJS compile error in git-bash, but not in command prompt (Windows' default terminal). Removing the `catch` block nets the EJS error in both terminals\n. A fresh install of **roots@pre** still has the \"cannot find module ./new\" error on the **new** command. The cloned repo that I have, once **npm link**'ed does not have this issue, and is able to compile projects fine, but the **watch** command is a bit wonky. Has the change I made to fix the \"cannot find module ./new\" thing been merged into the latest release?\n. I never actually ran into this issue, i'm going to try reproduce this on my windows machine when i get home and have a look if there's anything obvious\n. @edinchez that looks like you need to install [Git](http://git-scm.org) first. :)\n. @jenius - you can either surround the path in quotation marks (bar the file extension, if present), or escape spaces with a caret (`^`)\n. closed because duplicate of #587\n. Yes, you can. Just change the extension of your stylesheets from whatever they are (`file.css`, `file.styl`, `file.scss`, etc) to `file.less`, and then `npm install less --save-dev` \n. Strange... It _should_ work. Try adding `less` to your regular `dependencies` in `package.json`. \n\nRoots uses [Accord](https://github.com/jenius/accord) under the hood for file compilation, and all that is required is having the necessary compiler for your transpiled language installed and the correct file extension. The tests for it pass, but I'm going to try reproduce this and get back to you.\n. It seems to work just fine:\n\n![](https://s3.amazonaws.com/f.cl.ly/items/14020b172u3D2s1f0X3m/Image%202015-03-06%20at%203.04.27%20PM.png)\n\nWhat version of Roots are you using? Could you provide more information?\n. On the contrary, my use case is to simply combine two separate records from `roots-records`, which is far too simple to warrant a whole new extension.\n\nWhen I say \"combine\", what I mean is if I have an array of `categories` and an array of `articles` that come from separate API endpoints, and I wish to now tack the `article`s that are linked to the UUID of the `baby` category into an array directly on the `baby` category.\n\nI've tried using templating logic here, but for some reason some pages (like layout files and single view templates) do not get the roots-records locals. I've tried looking into what causes that and it makes no sense. But having this kind of functionality would have saved me having to figure out how to get both APIs how I want them (which is by using `request` inside a `before` hook in `app.coffee`, it's ugly - unnecessary http requests etc)\n. I did suggest it over in the `roots-records` repo, but I got thinking and this would also work and might be better in fact, because it doesn't tie too closely to any single extension and could be used in more ways\n. I think this might actually be possible using an extension, but it would be a little complicated. Essentially, this extension would have to:\n1. Know what files are going to be compiled\n2. Even if their compilation is the responsibility of another extension\n3. While maintaining a buffer string that will eventually get compiled after everything compiles\n\nThe buffer string would eventually get compiled to the `.htaccess` file that maps the compiled URL to a rewrite rule.\n\nThe really tricky part is getting the extension to know what files are compiled or not. This is easy for standard Roots static or compiled files - simply inspect the templating engine view and check if it is a partial or not - but pages made through `roots-records` will be a hell of a lot trickier to detect...\n\nPerhaps having it fully-automatic might mean it will be a little over-engineered. Perhaps being explicit and providing a glob match for this kind of thing would be easier - but therein again lies the problem of matching against views generated by other extensions...\n. I think Jeff and I once spoke about supporting canonical URLs (like you are describing here) and there was an issue that prevented them from making their way into Roots. However this was before V3 so I think we could explore the idea again as I am also interested.\n\nFor now, you can do the same thing with this in your `app.coffee`:\n\n``` coffeescript\nserver:\n  clean_urls: true\n  # and other things like:\n  # gzip: true\n```\n\nBut in production you will have to use [Charge](https://github.com/carrot/charge) to serve your site.\n. Hi @jtwebman - there is [a small note on the rtfd.org site](http://roots.readthedocs.org/en/latest/features.html#comparisons) regarding this comparison (it's the first bullet point):\n\n> DocPad: Powerful, but complex interface for users and developers. Roots has the same power, and is complex for developers, but simple for users.\n\n@jenius can probably give a more detailed breakdown of the differences if asked, but he is occupied with the adventure of a life time at the moment, so do not be alarmed by sparse response times. :)\n\nSpeaking from limited experience with DocPad, I much prefer Roots' simple configuration and file-extension based workflow, without detracting the ability of hooking very deep into internals if need be with it's super powerful extension system. \n\nIf it's not the internals and abilities Roots provides, it's the completely awesome level of warm, friendly support you get from the team here and their persistent encouragement  for and welcoming nature towards contributions, even going so far as to provide the necessary starting point when one is clueless as to where to begin adding a feature or fixing a bug.\n\nSince I started using Roots some time ago, back when it was still early 0.2.0 - I have seen my productivity and development speed shoot up exponentially and have even grown as a developer through reading the very well-documented and clean source code and discussing things here with the Roots team, so much so that it has positively affected my career in ways I could never have imagined and opened me up to opportunities I'll never forget, which is not something a lot of self-taught 22 year olds can say for themselves.\n\nI urge you to give Roots a try and form an opinion of your own - and please do share that opinion, every bit of feedback helps. :)\n. You can point `roots-records` directly at the data file, rather than `require`ing it - try something like this:\n\n``` coffee\nextensions: [\n  records({\n    shoes: {file: 'data/books.json'}\n  })\n]\n```\n\nThat might work. I don't think the JSON file being too large is an issue as I've used extremely large (80mb+) files for projects with multiple translations - though `require` is synchronous, so it could be that you might just need to read in the data asynchronously\n. damnit @jenius you beat me to it! :P\n. @ganar since Roots is an npm module, you can update it just like any other npm module - `$ npm update roots -g`\n\n@tcurdt I see your point - but this issue should really be taken up on the [roots.cx repo](https://github.com/carrot/roots-www), since the docs are a separate project to roots itself\n\nPlease post your feedback there\n. If you run `roots watch --verbose`, what output do you see?\n. @ganar \n\nYou might have forgot to install all the necessary dependencies Node.js needs to build native modules, one of which seems to be Node.js itself. According to this line in your error:\n\n```\ngyp ERR! stack     at ChildProcess.onExit (.nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\n```\n\nYou're attempting to build a legacy Node.js project with `io.js`.\n\nTry running this first:\n\n```\n$ nvm install 0.10 && nvm use 0.10\n```\n\nThen try `$ npm install -g roots@2.1.4` once again.\n\nIf that still doesn't work, and you still get references to `node-gyp` in your error log, you might need to install Python (specifically version `2.7`, if I remember correctly) as well as [`Xcode`](https://developer.apple.com/xcode/download/) (You also need to install the `Command Line Tools` via `Xcode`. You can find this under the menu `Xcode -> Preferences -> Downloads`. This step will install `gcc` and the related toolchain containing `make`)\n\n> Do you have any idea of which version of Node should I install to get it to run again? I'm trying to use NVM to install an old version and see if I can bring this old project (2 years old) back from the dead.\n\nYou can infer this information from the [`engines` field in `package.json` on the branch that contains `v2.1.4`](https://github.com/jenius/roots/blob/v2.1.4/package.json#L80) [(permalink)](https://github.com/jenius/roots/blob/4f7a0499194a8358a68b81496f8f7a049c1d86b4/package.json#L80) - according to the link, the `node` version should be greater than or equal to `v0.8`. (although, I do remember having Node.js `v0.10.x` compatibility in Roots `v2.x`)\n. I have a few ideas:\n\n### Replacing Chokidar entirely\n\nIf the `browser-sync` instance is decoupled from the `Server` class, `chokidar` in [`/api/watch.coffee`](lib/api/watch.coffee) can be replaced with the BS instance's various `watch`/`stream` methods, making it one less dependency.\n\n### Enabling live-injection of compiled assets\n\nFollowing the above change, observing the compiled output and calling `bs.reload()` on specific files will live-inject the changes into the browser where possible. This gives the developer faster visual feedback.\n- This is possible with CSS. `bs.reload('*.css')`\n- I believe this is also possible with image assets. `bs.reload(['*.jpg', '*.png', ...])`\n- It's possible to do this with HTML changes too, [with a plugin](/shakyShane/html-injector)\n\n### Selective Compile / Incremental Builds\n\nI'm not 100% certain on Roots' internals, but on Windows when I change a file Roots seems to compile _every_ file, rather than just the one being changed. Between the 3-7s time it takes to finish compiling on a busy machine running git shell through a console emulator alongside a running Node server and the time it takes to reload the page (often not reloading at all), which is a common workflow for Node development on Windows, this can become rather irksome.\n\nI think `browser-sync` offers a more stable ground to build on regarding cross-platform compatibility when it comes to incremental builds/selective compiles (I hope one of those two terms is the correct one). There is a challenge here though, in that it might be unwise to watch for all the different file extension combinations a Roots project could possibly have - perhaps this can be found out from the sprout template being used, or perhaps the existence of transpilers in the `package.json`? Just a thought.\n. @molovo my guess is browser-sync is opening the browser window.\n\nIt seems passing `open: false` to browser-sync is the way to stop this behavior.\n\n[This change](https://github.com/jenius/roots/pull/681/files#diff-627edfbbe6d880fdd66f0550503fd694R40) allows you to pass options to `browser-sync` in `app.coffee` using the `browser` key.\n\nPut this together and:\n\napp.coffee\n\n``` coffee\nmodule.exports =\n  ...\n  browser:\n    open: false\n```\n\nPerhaps it might be a good idea to set this automatically if the respective root's \"no open\" config settings are present...\n\n/cc @jenius\n. :confetti_ball: \n. Hi @i8ramin \n\nBe sure to check that all of the following is in place:\n- You have installed `postcss` in your project via `npm install postcss --save`\n- Your `postcss` config block follows the correct syntax - Here's an example:\n  - ![](http://infinit.io/_/GRe4a2b.png)\n- At the very least, your main Stylus file (e.g. `master.styl`) should have the file extension `.css.styl`\n- Optional, but a nice-to-have, is the ability to inline `@import`s of regular CSS files in Stylus using the `include css` option:\n  - ![](http://infinit.io/_/hU2LeHz.png)\n\nThat should kick [Multipass Compilation](http://roots.cx/docs/multipass) into gear and get PostCSS working! \n. Hi @pauljakobwhite \n\nIn order to get LESS working, you'll need to do a few things.\n\n# Installing\n\nFirst up, since Accord doesn't provide it's own version of the engine, you'll need to install LESS in your Roots project:\n\n```\n$ npm i less -s\n```\n\nAccord, in the context of a Roots project, will then automatically have access to the LESS compiler.\n\n# Configuring Less\n\nThe next step is to configure Less in your `app.coffee`. Since Accord only supports  the `sourceMap` option for Less, your configuration might look like this:\n\n_app.coffee_\n\n``` coffee\nmodule.exports =\n  ...\n  less:\n    sourceMap: true\n```\n\n# Getting Less to compile your stylesheets\n\nFollowing the previous changes, there is one extra step needed to get Less to work. Navigate to `assets/css` and change the file extension of all stylesheet assets from `styl` to `less`. This allows Accord to detect and compile the files. So, your `assets/css` directory would look like this:\n\n```\nassets/\n  css/\n    master.less\n```\n\nThe final step for triggering compiles is to convert the syntax of `master.less` from Stylus to Less.\n\n# Adding `autoprefixer`\n\nSince Roots does not expose an Accord engine's raw methods, and takes only options passed directly to the engine, you can't use Less' `render` method to transform the CSS once it is compiled.\n\nBut you can still enable `autoprefixer` in a number of ways:\n1. Use the [`after` hook in `app.coffee`](http://roots.cx/docs/configuration#after) to detect CSS files and run them through `autoprefixer` directly\n2. Extract the above into a [Roots Extension](http://roots.cx/docs/extensions)\n3. Make use of [Multipass Compilation](http://roots.cx/docs/multipass)\n\nOption 3 is the easiest and most preferred method for something as trivial as running `autoprefixer`, as Accord already supports `postcss` so that's the method I will focus on.\n\n## Installing `autoprefixer`\n\nThis is easy. You'll need to install and configure `postcss` and `autoprefixer`:\n\n```\nnpm i postcss autoprefixer -s\n```\n\n`autoprefixer` is a `postcss` plugin at its core, so `postcss` is the `accord` engine you'll use to add `autoprefixer`.\n\n## Enabling Multipass Compilation\n\nAssuming your `master.less` imports all of your CSS files, just change the file extension of your `master.less` to `master.css.less`. In order from right to left, Accord will map the extension of the file and run the appropriate engine compiler for the extension. In this case, it will attempt to run Less, followed by `postcss`.\n\nIf you have multiple top-level stylesheets, they too should have the extension `.css.less`.\n\nNow all you need to do is add the `postcss` configuration to your `app.coffee`:\n\n``` coffee\nautoprefixer = require 'autoprefixer'\n\nmodule.exports =\n  ...\n  less:\n    sourceMap: true\n  postcss:\n    use: [autoprefixer()]\n```\n\nThat should kick things into gear.\n\n# [optional] Scaffolding\n\nRoots' CLI offers a `tpl` or `template` [option](http://roots.cx/docs/cli#template) that wraps [Sprout](/carrot/sprout), a lightweight project scaffolding tool similar to [Yeoman](/yeoman/yeoman).\n\nUsing Sprout, you can create a base template that does all of this for you automatically. Follow the instructions over at Sprout's readme. Root's [base template](https://github.com/carrot/base) (the one `roots new` uses by default) is a good example resource.\n\nPut your new Sprout template up on Github, and then add it to Roots (I'll name it \"la\" for brevity):\n\n```\n$ roots tpl add la git@github.com:pauljakobwhite/la.git\n```\n\nNow you can do this to initialize a new Roots project with Less and Autoprefixer:\n\n```\n$ roots new -t la\n```\n\nIf you want to make your template the default when running `$ roots new`, then run this command:\n\n```\n$ roots tpl default la\n```\n. Hi @kylefraser - I've not used Roots in some time, but I do remember having a similar issue to this at one point - the source of the problem for me was a rogue `package.json` one level up from my roots project folder. To illustrate:\r\n\r\n```\r\n- projects/\r\n---package.json <-- This caused the issue for me\r\n---roots_project/\r\n------app.coffee\r\n```. I didn't run into this issue on 64bit Windows 8 Home Premium. Roots compiled just fine.\n. I was talking about `roots watch` too. It compiles only once per file save for me.\n. I'm not getting any unnecessary compilation at all on the latest `npm` version, @jenius. Everything works spiffy except for a weird popup message about some error regarding port 1111 that I'm pretty sure doesn't exist when I run 'roots watch' for the first time. I'll try to repro it later, but deleting a file does yield this (roots compiles fine on any detected file change after this message though):\n\n![picture](http://puu.sh/3HBO7.png)\n\n(I know that path is two levels deep, but it happens on .jade files in the views folder as well. Basically anything that got deleted)\n\nNeither of these two things prevent being able to work on a project, though. They're just minor annoyances\n. `root`. `rootsify`. `stump`. :laughing: \n. Why the decision not to use Jade's built in `block` and `extends`, anyway?\n. In that case, two possible synonyms for `yield`: `bear`, `give`.\nSynonym for `include`: `contain`\n. Could work, but I think it might be confusing at first to people who are both relatively new to Jade and Roots, as Jade's demo code for anything layouts is `block content`\n. That's actually a fair point. Fancy that.\n. From Stylus' `package.json`, it lists [CSSOM](https://github.com/NV/CSSOM) as a dependency. It might help for checking the syntax tree with CSSOM for assets without having to parse the compiled CSS directly. \n\nFor example, using it on this stylesheet:\n\n``` css\n@import url('reset.css');\n\n.wrapper p {\n  background: url(../img/image.png);\n}\n\n@import url('shame.css');\n```\n\nProduces this tree:\n\n``` javascript\n{\n    parentStyleSheet: null,\n    cssRules: [\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            href: \"reset.css\",\n            media: {\n                length: 0\n            },\n            styleSheet: {\n                parentStyleSheet: \"../../..\",\n                cssRules: []\n            }\n        },\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            selectorText: \".wrapper p\",\n            style: {\n                0: \"background\",\n                length: 1,\n                parentRule: \"..\",\n                _importants: {\n                    background: \"\"\n                },\n                __starts: 38,\n                background: \"url(../img/image.png)\"\n            },\n            __starts: 27,\n            __ends: 78\n        },\n        {\n            parentRule: null,\n            parentStyleSheet: \"../..\",\n            href: \"shame.css\",\n            media: {\n                length: 0\n            },\n            styleSheet: {\n                parentStyleSheet: \"../../..\",\n                cssRules: []\n            }\n        }\n    ]\n}\n```\n. I develop on Windows - a Mac is far too expensive, and data costs are high in my country too, so simply downloading a linux flavour isn't an option. Never assume that not many people develop on Windows. Not many people are blind, but we still work our butts off making sites accessible to them, no? Same thing here. :smile:  \n\nI understand symlink is the preferred option, but if it isn't at all possible - then why not just cache files after compiling them and compare file's modified dates to the ones in the cache? It's a strategy that would work on all platforms.\n. Roots watch requires you to be running as Admin? That's strange - I haven't needed admin privileges for Roots since I typed this command: `$ npm install -g roots`\n. Bootstrap also enforces quite a lot of cluttered HTML markup on the designer that isn't _really_ needed. I'm in the process of porting Jeet to Axis for semantic grids that can work all the way down to IE7 (as an improvement of the current semantic.gs implementation) and the sites I've built for testing have been very quick to develop (10-30mins), very different from each other in terms of design and nice, clean HTML that would make a purist smile.\n. It would be nice, it'll make developing on Roots seem a lot more fluid. I use [Mixture](http://mixture.io) to work on Axis, and it reloads CSS - not the whole page. Add this mixin (borrowed from Jeet) while developing and things _really_ start feeling awesome:\n\n```\nedit()\n  body *\n    transition: 200ms ease all\n    background: rgba(#000, .15)\n```\n. Here's an idea for the meantime: an option to turn off the Roots implementation in case the developer wants to use LiveReload (or a similar app) instead.\n. Shouldn't be too hard http://requirejs.org/docs/optimization.html#wholeproject\n. Just figured I'd plug a link I found earlier today here regarding stylesheets: http://aboutcode.net/vogue/\n. It should probably only reload the stylesheet that has changed...\n. +1\n. It has nothing to do with studies Jeff, you're from a Ruby background, no? That's the real reason you use underscores. Studies schmudies. :trollface: : \n. I like CoffeeScript but I still see people complain about it - I read somewhere (can't remember exactly) that CoffeeScript use is absolutely fine for personal projects but using it on a project that other people might use will hinder the projec's contributions. I really don't care if it is or isn't - but there is that mindset to think about.\n. I think you need to have a read of Trevor Burnham's answer to this question: http://stackoverflow.com/questions/6548750/function-declaration-in-coffeescript\n. Yes. Sort of. The generated JS is quite messy - but this is the only way to have _real_ named functions output in the compiled JS. It'd look something like this:\n\n``` coffeescript\n# Classes are the only place CoffeeScript generates named functions.\n# This might seem messy, but the extra wrapping is necessary in order\n# to have consistent behavior in IE. See the FAQ for more details:\n# https://github.com/jashkenas/coffee-script/wiki/FAQ\n\nclass square\n  constructor: (x) -> return x * x # constructors require an explicit return\n\nconsole.log square 5    # 25\nconsole.log square.name # square\n```\n. Also, it's always worth a mention - if instead of using a workaround like the above example, CoffeeScript has embedded JavaScript to help:\n\n``` coffeescript\nexpression = ->\n  Logger.log(\"Hello World!\")\n\n`function named() { expression(); }`\n```\n\nCompiles to:\n\n``` javascript\nvar expression;\n\nexpression = function() {\n  return Logger.log(\"Hello World!\");\n};\n\nfunction named() { expression(); };\n```\n. ![picture](http://25.media.tumblr.com/tumblr_m8h2dhhTzn1rvrxudo1_1280.png)\n. Mine was a mastered learning methodology of outdated technology, no lectures - just books, tests and exams on repeat....\n\n:boar: :book: :books: :page_facing_up: :computer: :beer: :beer: :beers: :beers: :beers: \n. I don't think `process.env.LANG` will be available on all machines - it's not present on my Windows machine:\n\n![picture](http://puu.sh/3U0vo.png)\n. Is taking quite a while, haha. That temporary name could be \"TeamRoots\" or something. \n. How old are all of you again? This behaviour somewhat resembles that of my sister and her friends. She's 12 years old. We're adults... I should **not** be the one reminding you all to act your age. We don't want either of our projects being associated with this kind of attitude. \n\nAs for project scope - that really is no valid argument. Your project is a Wordpress theme - it's target market is smaller. Ours is an entire site generator for both static and dynamic content that supports precompilation of assets and includes a CSS library akin to Twitter's Bootstrap for those who prefer semantic HTML, so our target market is much larger. But yours is more established than ours, it's been around longer and has more contributors (though ours averages out to more commits per contributor). I'm not making an argument against your project or for ours - what I'm implying is that we can go on arguing the scope of each project and not get anywhere with it as there are an almost infinite number of reasons why one is larger than the other in specific areas.\n\nIf I'm reading the name squatting policy correctly, it regards inactivity as squatting. By the book, @roots has been active on the site. He may not have public repos, he may or may not have private repos, I don't know for sure - but what I do know is that he's actively engaging with other users on the site. He's commenting on issues, replying to accidental (or not) mentions - so as far as Github is concerned, he's active. There's really nothing we can do about this right now, so let's be diplomatic about it and wait it out, perhaps a different opportunity will arise.\n. The only errors I get with `node-gyp` are when I forget to run the command with admin privileges. If you're on Mac or Linux, make sure you `sudo npm install -g roots`, if you're on Windows then right click command prompt and select \"Run as Administrator\" (CTRL-X+A on Windows 8).\n. I'm not sure who added them but they do send out a positive warm fuzzy message. I like waffles. ;)\n. Have you changed the `!=yield` call in your layouts to `!=content`? - Might solve your problem. For more info: #145\n. Interesting concept and definitely something I'd vouch for but I've tried TumblrThemer, Thimblr and associated \"solutions\" out and none of them really hit the ball. Tumblr themes are a pain to work with if you 1. Have no content on your blog yet and/or 2. don't know what you're doing. I kind of feel like adding support for such a thing is a whole different market to where Roots is currently heading...\n. I don't disagree with that at all, it would be huge... but it's a difficult task... You'd essentially have to emulate their entire template API and allow for dummy content without relying on what's already in a blog as well...\n. I've found this: https://github.com/pabluk/tumblr-theme-parser\n\nIt's in Python though, and relies on a Python grammar parser called PyParse. I'm not sure of any equivalents for Node, but porting this (or even using it directly by spawning it through `shell.exec` since Roots already has a dependency on Python thanks to `node-gyp`) would be a very good start.\n\nIt gives the Tumblr theme template syntax and relies on JSON data for dummy content, and I've always thought having a JSON model system in Roots would be a useful alternative to dynamic content files, just haven't found a good enough reason to bring it up yet.\n\nObviously if we do just decide to spawn it and not port it, we'd either need someone to contribute actively to that library or port it over anyway (since it has not been maintained for six months)\n\nAlternatively, there is also this PHP templating engine that claims to be inspired by Tumblr and claims to support multiple parsers, one of which is \"100% compatible with the Tumblr syntax\" - https://www.ohloh.net/p/pheme\n\nThere is also [Thimble](https://github.com/mwunsch/thimble), which is no longer maintained (at all), but it does have parsers that could be used as a starting reference point.\n\nThis post on Coderwall seems to explain how to fetch content from online Tumblr blogs - could be useful for quick dummy content: https://coderwall.com/p/xuf6ug\n\nAlso, if you Google Christopher Lloyd on Quora, you might find that he is a man who re-implemented the Tumblr theme parser in Ruby. However, he has not open sourced it and planned to use it for commercial products. He has said though, that development on it wasn't very active and if things continued that way, he would open source it. Perhaps it might be worth getting in touch?\n\nEDIT: After searching very thoroughly, I have found this JS parser: https://github.com/elfsternberg/tumble (last commit  to master was 10 days ago)\n. Well, that Python one is an exact tumblr parser, problem is it's in Python and is 6 months unmaintained :( I wish I was smart enough to comprehend writing parsers/compilers, but I'm just not. It isn't my strong point. I've built a tokenizer... But it was really shoddy.\n. Perhaps we should port pyparsing to java first :laughing: \n\nOn a more serious note at least these resources can be used as a reference, probably might pick up on some common design principles?\n. I've been watching these comments and was going to mention perhaps a switch to JSON (or cson) would be better but then I remembered the functions...\n. Closing because of #228 \n. @samccone That pretty much sums up exactly how I feel \n. Uh oops I meant to say UglifyJS lmao, must be from my brain typing in `require [...], (...) ->` repeatedly and not `uglify [...]...`\n\nAnd yeah now that I look closer I can see that... but I'm not sure how that's much of an issue, because forward slashes haven't caused any bugs in most of my uses on windows? Also, doesn't node.js normalize paths between operating systems?\n. Strange - I was able to deploy other sites rather easily before. Also, the error that guy you referred to me who emailed me - I think his issue with installing Roots just became a whole lot more clear, as I recall seeing the same ENOTEMPTY error in his `npm-debug.log`\n. I haven't delved into a level of programming on windows to know for sure but I have a good feeling it does not by default... I mean, it'll work when used in libraries like Grunt if you're building dynamic file objects, is finicky otherwise, that's as far as my expertise there goes.\n. Try using [isaacs/node-glob](https://github.com/isaacs/node-glob).\n\nI do remember a while ago when learning Grunt, `node-glob` was a lot more finicky on Windows (see: [glob-whatev](https://npmjs.org/package/glob-whatev)), but that was a long time ago, and dynamic file mapping was impossible on Windows with Grunt, now it's possible - but still just a tad finicky.\n\nThere does seem to be a [gotcha for node-glob on Windows](https://github.com/isaacs/node-glob#windows):\n\n> Windows\n> Please only use forward-slashes in glob expressions.\n> \n> Though windows uses either / or \\ as its path separator, only / characters are used by this glob implementation. You must use forward-slashes only in glob expressions. Back-slashes will always be interpreted as escape characters, not path separators.\n> \n> Results from absolute patterns such as /foo/\\* are mounted onto the root setting using path.join. On windows, this will by default result in /foo/\\* matching C:\\foo\\bar.txt.\n. I might have some time to write some documentation this weekend, but I'll be backpacking through Cape Town so I probably won't be able to push until I'm back on Wednesday. Will be a lot of work though because there's going to be some incredibly great updates to Jeet: https://github.com/CorySimmons/jeet/pull/54\n\nIdeally, how would you like the documentation to be handled? I'm thinking in a step sequence:\n1. Maintain our own documentation on http://roots.cx while we wait for those improvements to be merged to Jeet\n2. Work with Cory on submitting a pull request to the Jeet website that adds some better docs so he can give input on the recent changes\n\nAlso, I don't know why we didn't think of this sooner, but since Cory wants to add extra utilities to Jeet on top of the grid, and Axis is extra utilities making use of Jeet's grid - _why didn't we just decide to merge?_ - I'm sure Axis would benefit greatly by that because we all share the same common goal and ideas and most of us are active at different times. I feel like it could increase the rate at which this project grows...\n\nLet's have a talk about it on [this issue in the Axis repo](https://github.com/jenius/axis/issues/80).\n. Axis is already it's own npm package: http://npmjs.org/package/axis-css\n. I've used moment before. It is super awesome - would trust it over the HubSpot one any day (any code I've used from HubSpot breaks bower in roots so I no trusty) in terms of time formatting. For capitalizing, titleizing and the like, I'd use [underscore.string](https://github.com/epeli/underscore.string).\n. underscore.string _is_ great, I used it for string manipulation to test out my CSS preprocessor idea, as I didn't have any knowledge of compilers at the time. But now I've got an understanding of parsing, tokenizing and so on. :) underscore.string gave me nothing but joy at the time! You'll enjoy it too, for sure.\n. Option 3 is a manual process and would make uninstalls require more effort. Option 2 will install a whole bunch of stuff you might not need (like MS SQL server and IIS and so on). Best option is to install the .NET framework.\n. .NET framework is a few versions ahead of 2.0, might be the cause of issue. I found this article for JSDOM regarding similar issues, and I think the instructions may be applicable to your case. http://www.steveworkman.com/node-js/2012/installing-jsdom-on-windows/\n. Would this have to be implemented at a level somewhat close to the compiler?\n. Gotcha :D\n. Hmmm, I'm having a thought here - what if we allow the user to set a particular view as an RSS feed in `app.coffee`?\n\nSomething like:\n\n``` coffeescript\n'feed.jade': 'rss'\n```\n\nWhich would generate a `.xml` file instead of a `.html` file.\n\nThen the user could do something like this:\n\n```\ndoctype xml\nrss(\n  version='2.0',\n  xmlns:atom='<a href=\"http://www.w3.org/2005/Atom\" rel=\"nofollow\">http://www.w3.org/2005/Atom</a>'\n)\nchannel\n  title Declan de Wet\n  link.\n    <a href=\"http://declandewet.com\" rel=\"nofollow\">http://declandewet.com</a>\n  atom:link(\n    href='<a href=\"http://declandewet.com/feed\" rel=\"nofollow\">http://declandewet.com/feed</a>',\n    rel='self',\n    type='application/rss+xml'\n  )\n  description.\n    The portfolio and blog of Declan de Wet\n  language en\n  each post in site.blog\n    item\n      title= post.title\n      link\n        a(href=\"#{post.url}\", rel=\"nofollow\") #{post.url}\n      description\n        | <![CDATA[\n        | !{post.description}\n        p: a(href='<a href=\"#{post.url}')!=\" rel=\"nofollow\">#{post.url}')!=</a> 'Read more &raquo;'\n        | ]]>\n        pubDate= post.url\n        guid(isPermaLink='false') <a href=\"#{post.url}\" rel=\"nofollow\">#{post.url}</a>\n\n```\n. Would that feature be on by default? I feel like doing that would be an issue - i am no expert on RSS so correct me if you can, but don't separate feeds for separate items require different links and descriptions? How would it work? Or is it possible to list multiple types of items in a single rss feed?\n. I see. So for getting the XML attributes like the title and description of the feed would we read it in from say, the layout page of the dynamic content's meta description tag or what? Perhaps allow them to override it in an object in the same config?\n. Yeah front matter for individual items in the feed is easy & obvious, I'm referring to the title/description/url of the entire feed, outside of the scope of individual `<item>`s.  I can get the URL from the location of the dynamic content list view file, perhaps get the title from just prepending the folder name of the dynamic content to the title set in `app.coffee`, but the description?\n. Sounds good\n. I'll be getting some time in a few days and would like to play with this - but since the changes, let me ask: Which is the better spot: Roots, or Accord?\n. @jenius thoughts on this?\n. Yeah I figured out last night, but at that point it was like 3 AM :o\n\nEDIT: @jenius how do I pull the upstream transformers branch into my local repo so I can start working on this? Tried a few commands but I get the error `fatal: not a valid object name: upstream/transformers`\n. Thanks dude, one correction - since `origin` is my forked version, and `upstream` is your version - it's:\n\n```\ngit checkout --orphan transformers\ngit pull upstream transformers\n```\n\n:smile: I will be submitting this patch shortly!\n. Haha, you did that for me on Axis and I still don't know how to do it without just working on my repo and submitting a PR. Other than just cloning your repo and working on it there... Which only just occurred to me right now. It's official: I'm a dumb blonde. But how does one submit a pull request that way?\n. Interesting! Thanks for all this info and sorry to be a burden with it, but as a self-taught guy I've just gotta pick peoples brains every now and then xD\n. Oh btw not sure if you saw it but the PR is here #263\n. merged in #263\n. Done :)\n. If you do a basic `$ roots compile`, you should be able to run it like any other node.js app. Our loving benevolent dictator wrote a handy StackOverflow answer on the subject here: http://stackoverflow.com/questions/19625025/install-a-server-for-a-node-js-web-service-application/19625953#19625953\n. `app.coffee` should have an underscore glob in `ignore_files:` and `settings.styl` should start with an underscore so that it is ignored, otherwise Roots will try to compile it, and since it does not output any CSS, compiling it produces no file - that is the cause of error.\n. If none of those files compile directly and are included via an `@import` call then yeah\n. Yeah, they compile directly. I wouldn't call it a Stylus convention per se, it's just more of a gotcha with Roots. I mean, I don't use the underscore \"convention\" (if you could call it that) in my build tools, because I know that I'll only ever use one stylesheet - so I just watch/compile `master.styl` in those projects and any other file gets imported into it with `@import`.\n. I don't have anything against this proposal, @jenius - your input?\n. Also, I don't think the grid changes are necessary - since that commit breaks the current default, this makes it a breaking change - And we've already switched to a new grid framework: https://github.com/jenius/axis/commit/70ae56b86d7d613fd977e2484a01d15a4971158b\n. In the new grid everything is fluid and mobile first by default (i don't even think there is a fixed layout option other than specifying a `max-width` using the `center()` mixin) - you can have a look at more info here: http://jeetframework.com\n. It's already been removed (and replaced with Jeet's settings) - just not in the master branch/current stable release\n. All of the CSS stuff is in [Axis](http://github.com/jenius/axis) - the templates just generate base settings in `_settings.styl` for it. They're not even required, as Axis is coded with smart defaults, despite it's modular nature :) \n\nAs for the separate template repositories, those are fairly new (only a few days old) so I wouldn't expect their structure to remain as is. We're mostly just gearing up on getting the transformers branch here ready as well as modularizing the code into individual components so we can ship the finalized changes to those individual templates when we're good and ready\n. so wow as good PR\n. Hmmm. Does your user account have read/write permissions to that directory? If so, try to ensure that you run your terminal as an administrator (right click, run as administrator). \n\nI've not encountered this issue before but if you want to see more information about it, I found [this](https://github.com/joyent/node/issues/3977) and [this](http://stackoverflow.com/questions/17666329/handlebars-compile-operation-not-permitted)\n. Could we perhaps get some more info? If this error resulted in the creation of an `npm-debug.log` file, the contents of that file would be a massive aid in helping you.\n. I'm seeing output about CouchDB here. CouchDB isn't a dep, is it @jenius?\n. I feel like we should have a wall of fame dedicated to weird issues like this one that are mystical in nature. \n\n@wad2eq - are you being sure to install roots globally, as well as with administrator rights?\n. I haven't had any issues but I use git-bash through ConEmu on administrator mode, not the default command prompt\n. @wad2eq I don't think you need to go so far as to reinstall Win7. Just make sure you:\n1. Run `cmd.exe` as an administrator\n2. Install roots globally `$ npm install roots -g`\n. I have WAY too much energy to read that massive wall of text right now and am about to literally get up and jam to some trance, but I skim-read it and I think the upgrade the precompilers when the roots major changes is the best option - maybe it might be a good idea to allow users to update the precompilers within roots themselves if they want to try it out?\n. Hi @Roxy2,\n\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably `node-gyp`) depends on the availability of Python and Visual C++, as outlined in the README [here](https://github.com/jenius/roots#windows-installs). This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\n\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\n\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\n\nAlso, be sure to run `cmd.exe` or `powershell` or a terminal emulator like `ConEmu` as an administrator when installing Node modules globally. \n. Hi @Roxy2 - were you able to sort this out?\n. Hmmm. This is so very weird. Give me a minute or two...\n. It looks to me like Roots has installed, judging by the screenshot (and your previous message). These warnings are not an issue (I work predominantly on Windows 8.1 and get them as well - you need not be worried). Give it a test:\n\nIt seems to me as if Jeet relies on a Roots edge pre-release, so taking from the [Jeet template's](https://github.com/mojotech/jeet-roots) instructions:\n\n```\n$ npm install -g clonr roots@2.1.0-beta3\n```\n\n```\n$ clonr mojotech/jeet-roots projectname\n```\n\n```\n$ cd projectname\n```\n\n```\n$ roots watch\n```\n\nThat should fire up the Jeet template and the livereload server/watcher.\n. Any time :)\n. Hahaha! That reply was comical. Thanks for the laugh :P\n. Oh lord... I think I may have trouble finding out what the Windows equivalent is... xD\n. @samccone but people get frightened when I take out my D://\n. So it turns out the windows equivalent is the same:\n\n![my supervisor ensures me that this is a picture of a beautiful sunset, it may not be though](http://puu.sh/5CSm2.png)\n. So, I deleted that file, uninstalled roots, re-installed the beta-3 prerelease, and this is the result when trying to create a new project:\n\n![lol](http://puu.sh/5CSWt.png)\n. That version works in generating a new project, but it's still the old beta-2 code. I'm confused.\n. ![](http://puu.sh/5CTNy.png)\n\nThis looks different to the content, say, on here: https://github.com/mojotech/jeet-roots/blob/master/app.coffee#L1\n. That makes more sense. One question, though.\n\nWhy is it, that when generating a _new_ project, using the **stable** release of Roots, **2.1.0**, does the comment say it was created on `v2.1.0-beta2`?\n. 2.1.0-beta2.\n\n![](http://puu.sh/5CU9U.png)\n\nEven though I installed it like this:\n\n`npm install -g roots`\n\nThat command should install the latest stable 2.1.0, should it not?\n\nThat is why I said, on Windows, the latest stable version is referencing the old pre-release of beta2.\n. I'm going to try manually removing roots from the `npm-cache` folder and reinstall. Maybe that will work\n. It seems that it worked. But now I'm getting the same error when generating a new project.\n\n![](http://puu.sh/5CUoZ.png)\n. That's the problem. I cleared it out (again, right now), and I'm still getting this error.\n\n![](http://gyazo.com/81e18f0c3c3bbefe9782daf641ca4ef0.gif)\n. Deleted it again so can't copy/paste right now but it's something along the lines of\n\n```\npackage_manager: 'bower'\ndefault_template: 'default'\ntemplates:\n  <insert long list of templates here>\n```\n\nI literally just right now redid all of my steps (uninstalling roots, manually deleting the config yaml files, manually deleting the npm-cache) and reinstalled roots and it installed 2.1.0-beta2 AGAIN. Ugh. So frustrating...\n. Sorry - had to go to my sisters valedictory ceremony. Man that was boring. Still getting the same issue. It keeps installing 2.1.0-beta2, and on the rare occasion it actually installs the version I want, generating a new project gives the same fatal error. I can't even use Roots at this point. :(\n. I think I'm going to do the unspeakable and re-install node from scratch...\n. @samccone that is a good idea. I wish I had thought of that before going ahead with my previous statement xD\n. This should be reopened, it has nothing to do with fd8ebd4 - everything required for Roots to run is installed (Git, Python, C++ runtime) - clearing the npm cache does not fix the issue, nor does clearing out the `.config/configstore` directory, and aliasing a cloned copy of Roots does not fix the issue either, nor does uninstalling/reinstalling node.js/npm, and other people are experiencing the problem as well (#341).\n\nIt seems that when `$ roots new name` is run, Roots looks in `C://Users\\username\\.config\\roots` for files and folders that dictate templates, but that directory does not exist. I'm not sure if Roots is looking in the wrong place (should it be looking at `C://Users\\username\\.config\\configstore\\roots` instead?) or if Roots is looking in the right place but is just failing to create the directory structure it needs... \n\nI've basically found that the only way to work with Roots at this point is to install Ubuntu or use nitrous.io - makes development a lot slower because the former requires I separate my development/design workflows between two different operating systems and the latter involves network latency, which is more like latent network hell here in slow data Africa :( Getting a mac is too expensive so that's out of the window\n\n@jenius I think this deserves a second look. I trust your judgment that this is an npm issue, but I think something needs to be done here. I've noticed it only happens on Windows 8.1, however this is the only npm module that I seem to be having trouble with, and it can't be the only one I use that uses the configstore...\n. Yeoman, Bower and Mocha use `configstore` indirectly through `update-notifier`, with the addition that Yeoman also creates a file called `insight-yo` using `configstore`, and I have no trouble at all with those modules. I don't think this relates specifically to `configstore` itself (unless `configstore` can install stuff from git into the `.config` folder [note: not the `.config/configstore` folder]). Roots is producing a fatal error saying that `.config/roots/templates` does not exist/could not be found. Manually adding the folders changes the error message to `Fatal Error: path not specified`. \n\nAs for reproducing the issue, Windows 8.1 Home Premium on a 64-bit architecture is what I'm experiencing the issue on: `$ roots new name` causes the problem immediately. If you look at issue #341 - you'll find that @Compiztab and @srsgores found a partial work-around by enclosing the project name in quotes/square brackets like so:\n\n```\n$ roots new \"name\" \n```\n\nOR\n\n```\n$ roots new [name]\n```\n\nI think this technique they use requires the manual structuring of `C:\\\\Users/user/.config/roots/templates`, but they will have to chime in on that because I could not get their work-around to work at all.\n. haha node labels pretty much every windows as Windows NT @jenius - don't be frightened :P\n. I am not to be trusted on this statement, but I am almost certain this is a Bower issue... it's the very reason I wrote a [tweet](https://twitter.com/declanjdewet/status/401616720705495041):\n\n![a facebook status](http://gyazo.com/aeb657463b8e89111b1cd64c37fa829b.png)\n. I've never actually had the balls to drop bower, though. Something about it makes me sad to let it go. Want to give Browserify a try.\n. As I said in #332, Roots 2.1.0 is seriously broken on Windows. :(\n. It kind of does apply, he's having the exact same issue as I was. npm kept installing the beta2 prerelease instead of 2.1.0 because 2.1.0 and beta3 do not work on Windows at all. This issue pertains to the version not working, whereas mine includes this version not working as well as it using the wrong version, which I later then found out was because the npm cache actually determines which version works so it can fall back to that on installs\n. I used it before finding Roots - it was alright\n. Roots.cx docs are probably a little outdated - but the Readme had the answer this whole time: https://github.com/jenius/roots#windows-installs\n. Wouldn't it just be awesome to pipe and cache streams instead of rely on temporary files\n. I wonder if it's possible to use [Gulp](https://github.com/wearefractal/gulp) at a higher level for something like this - sorta \"behind the scenes\"\n. And add multi-device testing and CSS injection on top of just a simple live reload\n. Just worth noting: browser-sync doesn't necessarily _have_ to replace the watcher. It **can**, but it can also forward to an existing server process through a proxy. This might make running tasks easier, and will still allow for custom dev paths\n. I'm not sure if this would fit better as an extension or part of Roots core...\n. This will be on my radar when I start :)\n. Id est, _Roots must either absorb or destroy all. All hail Roots._\n. http://declandewet.com\n. Hey @monkeez - this is an issue with one of Roots' dependencies: https://github.com/carrot/sprout\n\nThe good news is, this issue is known and has already been fixed: https://github.com/carrot/sprout/pull/17\n\nThe bad news, is that we're waiting on a breaking change update before we publish this fix.\n\nHowever, there is something you can do in the meantime. Clone this Roots repo, cd into it, run `npm install` and then head on over to roots/node_modules/sprout/lib/api/init.js and change lines 109-111 from:\n\n```\nupdate_template = function() {\n  return nodefn.call(exec, \"cd \" + this.sprout_path + \"; git pull\");\n};\n```\n\nto:\n\n```\nupdate_template = function() {\n  return nodefn.call(exec, \"cd \" + this.sprout_path + \" && git pull\");\n};\n```\n\nAll you need to do then, is run `npm link` from command prompt and Roots should work. :)\n\n(btw, huge fan of your work :+1: )\n. ...Just musing here and not describing an actual solution, but would a symlink from the one drive to roots, git, npm & node on the other drive work? cc/ @jenius @slang800 @samccone  \n. Yeah I'm aware of that, this symlink would be outside the scope of roots as well, just a thing @monkeez could maybe do to sort of normalize his workflow. That's the only [possible?] solution outside the scope of just installing everything on the harddrive he wants to work on\n. Using 3.0.0-rc6\n\nThis error appears in Git Bash, Command Prompt and Powershell - the process does not end when the error gets thrown. This is on Windows 8.1 - I don't have access to Windows 7 so can't reproduce _exactly_ the same result.\n\n![](http://puu.sh/8SQAf.png)\n\nWhy can't I see a stack trace?\n. Hi @Flip4Bytes - I'm a Windows user myself. The only correct way to run any program as Administrator on Windows is to right-click it, and select \"Run as Administrator\" - using the CLI is not always reliable.\n\nYou will need version 2.7.x of Python installed, as well as the Microsoft Visual C++ runtime installed (this comes with the .NET framework _or_ Visual Studio 2008+) as well as Git installed in order for Roots to install properly. \n\nThat being said, the [V3 pre-release](https://github.com/jenius/roots/tree/v3) works way better on Windows and comes with a few performance and architecture improvements, but you'll miss out on the deploy features. You can install it with:\n\n``` bash\n$ npm install roots@pre -g\n```\n\nIf you do need deployment, you can still use any other method to do so as the compiled output is just files, so if you can work with that then cloning your branch on to your production servers or using something like [flightplan](https://www.npmjs.org/package/flightplan) could definitely get the deployment disadvantage out of the way\n. :+1:, very nice PR\n. Hi @Brle88 - I've just commented on another user's issue of the same description - if you could read my answer there, it might help: https://github.com/jenius/roots/issues/464#issuecomment-42658913\n. It looks like the error _is_ coming from Sprout.\n\nIf you change https://github.com/carrot/sprout/blob/master/lib/api/init.coffee#L87-L90\n\nFrom:\n\n``` coffee\nprompt_user_for_answers = ->\n  if not @questions.length then return W.resolve()\n  nodecb.call(inquirer.prompt, @questions)\n    .then((o) => @answers = o)\n```\n\nTo:\n\n``` coffee\nprompt_user_for_answers = ->\n  if not @questions.length then return W.resolve()\n  nodecb.call(inquirer.prompt.bind(inquirer), @questions).with(@)\n    .then((o) -> @answers = o)\n    .catch(console.error.bind(console))\n```\n\nThen Roots `new` works on Windows (with a very unnerving loading spinner in the terminal):\n\n![windowsfix](http://i.imgur.com/z5AHvNh.gif)\n. Thanks @samccone - Used it to make this: http://helpfindjake.com - and to be honest this is a really slow workflow on Windows - sometimes waiting 20+ seconds to reload the page (which I decided to intercept with a... what's it called again... such an antiquated tool... the um.... manual refresh? yeah. manual refresh. that's the one). Roots definitely suffers on Windows now. Wasn't so bad before.\n. Yeah, I think adding on the `catch` method to that promise chain in Sprout has caused the slowness, but without it - unhandled rejection errors run rampant.I think it's slow because the compile is being triggered multiple times at once, so it's not that the compile is slow, it's just that there's a gazillion compiles. Also, the \"spinner\" is another crazy side effect...\n\nRemoved the monitor commit - Why is the monitor not good for production? Does it have side effects?\n\nEDIT: Oh, okay - I see why monitor is not reliable for production - I just had a look at the Travis details for adding it and Travis goes wild with errors - it's kind of funny actually, because it's almost as if the output is computer speak for Travis telling you it does not like when.js looking at it's... \"particulars\"\n\nAlso, I just discovered the `catch` block on that promise chain in Sprout is not exactly required - it's just the `inquirer` context that needs binding, but I am getting an EJS compile error. Adding the `catch` block removes the EJS compile error in git-bash, but not in command prompt (Windows' default terminal). Removing the `catch` block nets the EJS error in both terminals\n. A fresh install of **roots@pre** still has the \"cannot find module ./new\" error on the **new** command. The cloned repo that I have, once **npm link**'ed does not have this issue, and is able to compile projects fine, but the **watch** command is a bit wonky. Has the change I made to fix the \"cannot find module ./new\" thing been merged into the latest release?\n. I never actually ran into this issue, i'm going to try reproduce this on my windows machine when i get home and have a look if there's anything obvious\n. @edinchez that looks like you need to install [Git](http://git-scm.org) first. :)\n. @jenius - you can either surround the path in quotation marks (bar the file extension, if present), or escape spaces with a caret (`^`)\n. closed because duplicate of #587\n. Yes, you can. Just change the extension of your stylesheets from whatever they are (`file.css`, `file.styl`, `file.scss`, etc) to `file.less`, and then `npm install less --save-dev` \n. Strange... It _should_ work. Try adding `less` to your regular `dependencies` in `package.json`. \n\nRoots uses [Accord](https://github.com/jenius/accord) under the hood for file compilation, and all that is required is having the necessary compiler for your transpiled language installed and the correct file extension. The tests for it pass, but I'm going to try reproduce this and get back to you.\n. It seems to work just fine:\n\n![](https://s3.amazonaws.com/f.cl.ly/items/14020b172u3D2s1f0X3m/Image%202015-03-06%20at%203.04.27%20PM.png)\n\nWhat version of Roots are you using? Could you provide more information?\n. On the contrary, my use case is to simply combine two separate records from `roots-records`, which is far too simple to warrant a whole new extension.\n\nWhen I say \"combine\", what I mean is if I have an array of `categories` and an array of `articles` that come from separate API endpoints, and I wish to now tack the `article`s that are linked to the UUID of the `baby` category into an array directly on the `baby` category.\n\nI've tried using templating logic here, but for some reason some pages (like layout files and single view templates) do not get the roots-records locals. I've tried looking into what causes that and it makes no sense. But having this kind of functionality would have saved me having to figure out how to get both APIs how I want them (which is by using `request` inside a `before` hook in `app.coffee`, it's ugly - unnecessary http requests etc)\n. I did suggest it over in the `roots-records` repo, but I got thinking and this would also work and might be better in fact, because it doesn't tie too closely to any single extension and could be used in more ways\n. I think this might actually be possible using an extension, but it would be a little complicated. Essentially, this extension would have to:\n1. Know what files are going to be compiled\n2. Even if their compilation is the responsibility of another extension\n3. While maintaining a buffer string that will eventually get compiled after everything compiles\n\nThe buffer string would eventually get compiled to the `.htaccess` file that maps the compiled URL to a rewrite rule.\n\nThe really tricky part is getting the extension to know what files are compiled or not. This is easy for standard Roots static or compiled files - simply inspect the templating engine view and check if it is a partial or not - but pages made through `roots-records` will be a hell of a lot trickier to detect...\n\nPerhaps having it fully-automatic might mean it will be a little over-engineered. Perhaps being explicit and providing a glob match for this kind of thing would be easier - but therein again lies the problem of matching against views generated by other extensions...\n. I think Jeff and I once spoke about supporting canonical URLs (like you are describing here) and there was an issue that prevented them from making their way into Roots. However this was before V3 so I think we could explore the idea again as I am also interested.\n\nFor now, you can do the same thing with this in your `app.coffee`:\n\n``` coffeescript\nserver:\n  clean_urls: true\n  # and other things like:\n  # gzip: true\n```\n\nBut in production you will have to use [Charge](https://github.com/carrot/charge) to serve your site.\n. Hi @jtwebman - there is [a small note on the rtfd.org site](http://roots.readthedocs.org/en/latest/features.html#comparisons) regarding this comparison (it's the first bullet point):\n\n> DocPad: Powerful, but complex interface for users and developers. Roots has the same power, and is complex for developers, but simple for users.\n\n@jenius can probably give a more detailed breakdown of the differences if asked, but he is occupied with the adventure of a life time at the moment, so do not be alarmed by sparse response times. :)\n\nSpeaking from limited experience with DocPad, I much prefer Roots' simple configuration and file-extension based workflow, without detracting the ability of hooking very deep into internals if need be with it's super powerful extension system. \n\nIf it's not the internals and abilities Roots provides, it's the completely awesome level of warm, friendly support you get from the team here and their persistent encouragement  for and welcoming nature towards contributions, even going so far as to provide the necessary starting point when one is clueless as to where to begin adding a feature or fixing a bug.\n\nSince I started using Roots some time ago, back when it was still early 0.2.0 - I have seen my productivity and development speed shoot up exponentially and have even grown as a developer through reading the very well-documented and clean source code and discussing things here with the Roots team, so much so that it has positively affected my career in ways I could never have imagined and opened me up to opportunities I'll never forget, which is not something a lot of self-taught 22 year olds can say for themselves.\n\nI urge you to give Roots a try and form an opinion of your own - and please do share that opinion, every bit of feedback helps. :)\n. You can point `roots-records` directly at the data file, rather than `require`ing it - try something like this:\n\n``` coffee\nextensions: [\n  records({\n    shoes: {file: 'data/books.json'}\n  })\n]\n```\n\nThat might work. I don't think the JSON file being too large is an issue as I've used extremely large (80mb+) files for projects with multiple translations - though `require` is synchronous, so it could be that you might just need to read in the data asynchronously\n. damnit @jenius you beat me to it! :P\n. @ganar since Roots is an npm module, you can update it just like any other npm module - `$ npm update roots -g`\n\n@tcurdt I see your point - but this issue should really be taken up on the [roots.cx repo](https://github.com/carrot/roots-www), since the docs are a separate project to roots itself\n\nPlease post your feedback there\n. If you run `roots watch --verbose`, what output do you see?\n. @ganar \n\nYou might have forgot to install all the necessary dependencies Node.js needs to build native modules, one of which seems to be Node.js itself. According to this line in your error:\n\n```\ngyp ERR! stack     at ChildProcess.onExit (.nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\n```\n\nYou're attempting to build a legacy Node.js project with `io.js`.\n\nTry running this first:\n\n```\n$ nvm install 0.10 && nvm use 0.10\n```\n\nThen try `$ npm install -g roots@2.1.4` once again.\n\nIf that still doesn't work, and you still get references to `node-gyp` in your error log, you might need to install Python (specifically version `2.7`, if I remember correctly) as well as [`Xcode`](https://developer.apple.com/xcode/download/) (You also need to install the `Command Line Tools` via `Xcode`. You can find this under the menu `Xcode -> Preferences -> Downloads`. This step will install `gcc` and the related toolchain containing `make`)\n\n> Do you have any idea of which version of Node should I install to get it to run again? I'm trying to use NVM to install an old version and see if I can bring this old project (2 years old) back from the dead.\n\nYou can infer this information from the [`engines` field in `package.json` on the branch that contains `v2.1.4`](https://github.com/jenius/roots/blob/v2.1.4/package.json#L80) [(permalink)](https://github.com/jenius/roots/blob/4f7a0499194a8358a68b81496f8f7a049c1d86b4/package.json#L80) - according to the link, the `node` version should be greater than or equal to `v0.8`. (although, I do remember having Node.js `v0.10.x` compatibility in Roots `v2.x`)\n. I have a few ideas:\n\n### Replacing Chokidar entirely\n\nIf the `browser-sync` instance is decoupled from the `Server` class, `chokidar` in [`/api/watch.coffee`](lib/api/watch.coffee) can be replaced with the BS instance's various `watch`/`stream` methods, making it one less dependency.\n\n### Enabling live-injection of compiled assets\n\nFollowing the above change, observing the compiled output and calling `bs.reload()` on specific files will live-inject the changes into the browser where possible. This gives the developer faster visual feedback.\n- This is possible with CSS. `bs.reload('*.css')`\n- I believe this is also possible with image assets. `bs.reload(['*.jpg', '*.png', ...])`\n- It's possible to do this with HTML changes too, [with a plugin](/shakyShane/html-injector)\n\n### Selective Compile / Incremental Builds\n\nI'm not 100% certain on Roots' internals, but on Windows when I change a file Roots seems to compile _every_ file, rather than just the one being changed. Between the 3-7s time it takes to finish compiling on a busy machine running git shell through a console emulator alongside a running Node server and the time it takes to reload the page (often not reloading at all), which is a common workflow for Node development on Windows, this can become rather irksome.\n\nI think `browser-sync` offers a more stable ground to build on regarding cross-platform compatibility when it comes to incremental builds/selective compiles (I hope one of those two terms is the correct one). There is a challenge here though, in that it might be unwise to watch for all the different file extension combinations a Roots project could possibly have - perhaps this can be found out from the sprout template being used, or perhaps the existence of transpilers in the `package.json`? Just a thought.\n. @molovo my guess is browser-sync is opening the browser window.\n\nIt seems passing `open: false` to browser-sync is the way to stop this behavior.\n\n[This change](https://github.com/jenius/roots/pull/681/files#diff-627edfbbe6d880fdd66f0550503fd694R40) allows you to pass options to `browser-sync` in `app.coffee` using the `browser` key.\n\nPut this together and:\n\napp.coffee\n\n``` coffee\nmodule.exports =\n  ...\n  browser:\n    open: false\n```\n\nPerhaps it might be a good idea to set this automatically if the respective root's \"no open\" config settings are present...\n\n/cc @jenius\n. :confetti_ball: \n. Hi @i8ramin \n\nBe sure to check that all of the following is in place:\n- You have installed `postcss` in your project via `npm install postcss --save`\n- Your `postcss` config block follows the correct syntax - Here's an example:\n  - ![](http://infinit.io/_/GRe4a2b.png)\n- At the very least, your main Stylus file (e.g. `master.styl`) should have the file extension `.css.styl`\n- Optional, but a nice-to-have, is the ability to inline `@import`s of regular CSS files in Stylus using the `include css` option:\n  - ![](http://infinit.io/_/hU2LeHz.png)\n\nThat should kick [Multipass Compilation](http://roots.cx/docs/multipass) into gear and get PostCSS working! \n. Hi @pauljakobwhite \n\nIn order to get LESS working, you'll need to do a few things.\n\n# Installing\n\nFirst up, since Accord doesn't provide it's own version of the engine, you'll need to install LESS in your Roots project:\n\n```\n$ npm i less -s\n```\n\nAccord, in the context of a Roots project, will then automatically have access to the LESS compiler.\n\n# Configuring Less\n\nThe next step is to configure Less in your `app.coffee`. Since Accord only supports  the `sourceMap` option for Less, your configuration might look like this:\n\n_app.coffee_\n\n``` coffee\nmodule.exports =\n  ...\n  less:\n    sourceMap: true\n```\n\n# Getting Less to compile your stylesheets\n\nFollowing the previous changes, there is one extra step needed to get Less to work. Navigate to `assets/css` and change the file extension of all stylesheet assets from `styl` to `less`. This allows Accord to detect and compile the files. So, your `assets/css` directory would look like this:\n\n```\nassets/\n  css/\n    master.less\n```\n\nThe final step for triggering compiles is to convert the syntax of `master.less` from Stylus to Less.\n\n# Adding `autoprefixer`\n\nSince Roots does not expose an Accord engine's raw methods, and takes only options passed directly to the engine, you can't use Less' `render` method to transform the CSS once it is compiled.\n\nBut you can still enable `autoprefixer` in a number of ways:\n1. Use the [`after` hook in `app.coffee`](http://roots.cx/docs/configuration#after) to detect CSS files and run them through `autoprefixer` directly\n2. Extract the above into a [Roots Extension](http://roots.cx/docs/extensions)\n3. Make use of [Multipass Compilation](http://roots.cx/docs/multipass)\n\nOption 3 is the easiest and most preferred method for something as trivial as running `autoprefixer`, as Accord already supports `postcss` so that's the method I will focus on.\n\n## Installing `autoprefixer`\n\nThis is easy. You'll need to install and configure `postcss` and `autoprefixer`:\n\n```\nnpm i postcss autoprefixer -s\n```\n\n`autoprefixer` is a `postcss` plugin at its core, so `postcss` is the `accord` engine you'll use to add `autoprefixer`.\n\n## Enabling Multipass Compilation\n\nAssuming your `master.less` imports all of your CSS files, just change the file extension of your `master.less` to `master.css.less`. In order from right to left, Accord will map the extension of the file and run the appropriate engine compiler for the extension. In this case, it will attempt to run Less, followed by `postcss`.\n\nIf you have multiple top-level stylesheets, they too should have the extension `.css.less`.\n\nNow all you need to do is add the `postcss` configuration to your `app.coffee`:\n\n``` coffee\nautoprefixer = require 'autoprefixer'\n\nmodule.exports =\n  ...\n  less:\n    sourceMap: true\n  postcss:\n    use: [autoprefixer()]\n```\n\nThat should kick things into gear.\n\n# [optional] Scaffolding\n\nRoots' CLI offers a `tpl` or `template` [option](http://roots.cx/docs/cli#template) that wraps [Sprout](/carrot/sprout), a lightweight project scaffolding tool similar to [Yeoman](/yeoman/yeoman).\n\nUsing Sprout, you can create a base template that does all of this for you automatically. Follow the instructions over at Sprout's readme. Root's [base template](https://github.com/carrot/base) (the one `roots new` uses by default) is a good example resource.\n\nPut your new Sprout template up on Github, and then add it to Roots (I'll name it \"la\" for brevity):\n\n```\n$ roots tpl add la git@github.com:pauljakobwhite/la.git\n```\n\nNow you can do this to initialize a new Roots project with Less and Autoprefixer:\n\n```\n$ roots new -t la\n```\n\nIf you want to make your template the default when running `$ roots new`, then run this command:\n\n```\n$ roots tpl default la\n```\n. Hi @kylefraser - I've not used Roots in some time, but I do remember having a similar issue to this at one point - the source of the problem for me was a rogue `package.json` one level up from my roots project folder. To illustrate:\r\n\r\n```\r\n- projects/\r\n---package.json <-- This caused the issue for me\r\n---roots_project/\r\n------app.coffee\r\n```. ",
    "L8D": "@declandewet I believe @Daiz is talking about the `roots watch` command compiling the site many times unintendedly.(Not just getting the `roots` program to compile once)\n\nI had a similar issue when I use vim because of the .swp files(even though they were in the `exports.ignore_files` as `*.swp`), I ended up changing my vim configuration to keep it's swap files in a different folder.\n\nMy guess is that @Daiz 's problem originates in possible hidden files that are kept inside the project foler(possible swap files). Or @Daiz 's editor could be auto-saving the file he is editing.\n. Though @slang800, I don't think that you'd need to recompile main.coffee or any files really if you're modifying a javascript file. But that is irrelevant your example.\n. **Helpful reminder:** if a user is using the GNU(but no busybox, etc.) `rm` utility recursively, it will also remove the originally linked files. For example, if we have a photo from `assets/img` that gets linked to `public/img` and a user decides to `rm -rf public` then the original image inside `assets/img` also gets deleted.\n\n~~This being said, I think we need to have an option to do the dynamic linking, and/or have a way to specify a file to be linked(_instead_ of being compiled) during a compile.~~\n\nNevermind, I was thinking this would occur during a `roots compile` and link to the public folder...I wasn't thinking correctly.\n. Nevermind.\n\nI found out the issue was in declaring the variable with it starting with a hash: `location: #`\n. I also decided it was better to use the hash anyways, that way I can take out the tab-pane from inside the post and do something like:\n\n```\n- each post in site.posts\n  .tab-pane(id=\"##{post.location}\")\n    .tab-content\n```\n. I sincerely would like to know why you'd cry about bootstrap? Is it because you spent so much time on axis?\n\nWhat if I ported bootstrap to stylus + axis? Would that be okay?\n. Okay...This does answer my question and made me realize the effects of bootstrap. Though, I guess my main purpose for wanting bootstrap was for it's js plugins. Are there any equal-alternatives that I should be using with roots?\n\nAnd...[I'm so very sorry](http://github.com/L8D/tysens.us)...\n. I'd like this as long as using `exports.*` stays valid\n. Are you completely sure that you've been properly using the `exports.ignored_files` array properly? Can I see the line?\n. Well, I'm not very fimiliar with `exports.watcher_ignor_files`, and I'm not sure it will work very well.\n\nYou can however(as I did), change the directory under which vim saves it's swap files to completely avoid this. Adding `set directory=/tmp/` to your vimrc will tell vim to then put it's swap files in your temporary directory, instead of on the hard disc, and most importantly in your roots project directory. This is actually better for your hard drive in the long run too, because it prevents vim from writing there every single time you go to insert mode or present a change to the document.\n. I did too for a second thar. ;)\n. Why not rename your `.css` files to `.styl` and then @import them from there?\n. YESH! Thank you Jeff!\n. @declandewet I believe @Daiz is talking about the `roots watch` command compiling the site many times unintendedly.(Not just getting the `roots` program to compile once)\n\nI had a similar issue when I use vim because of the .swp files(even though they were in the `exports.ignore_files` as `*.swp`), I ended up changing my vim configuration to keep it's swap files in a different folder.\n\nMy guess is that @Daiz 's problem originates in possible hidden files that are kept inside the project foler(possible swap files). Or @Daiz 's editor could be auto-saving the file he is editing.\n. Though @slang800, I don't think that you'd need to recompile main.coffee or any files really if you're modifying a javascript file. But that is irrelevant your example.\n. **Helpful reminder:** if a user is using the GNU(but no busybox, etc.) `rm` utility recursively, it will also remove the originally linked files. For example, if we have a photo from `assets/img` that gets linked to `public/img` and a user decides to `rm -rf public` then the original image inside `assets/img` also gets deleted.\n\n~~This being said, I think we need to have an option to do the dynamic linking, and/or have a way to specify a file to be linked(_instead_ of being compiled) during a compile.~~\n\nNevermind, I was thinking this would occur during a `roots compile` and link to the public folder...I wasn't thinking correctly.\n. Nevermind.\n\nI found out the issue was in declaring the variable with it starting with a hash: `location: #`\n. I also decided it was better to use the hash anyways, that way I can take out the tab-pane from inside the post and do something like:\n\n```\n- each post in site.posts\n  .tab-pane(id=\"##{post.location}\")\n    .tab-content\n```\n. I sincerely would like to know why you'd cry about bootstrap? Is it because you spent so much time on axis?\n\nWhat if I ported bootstrap to stylus + axis? Would that be okay?\n. Okay...This does answer my question and made me realize the effects of bootstrap. Though, I guess my main purpose for wanting bootstrap was for it's js plugins. Are there any equal-alternatives that I should be using with roots?\n\nAnd...[I'm so very sorry](http://github.com/L8D/tysens.us)...\n. I'd like this as long as using `exports.*` stays valid\n. Are you completely sure that you've been properly using the `exports.ignored_files` array properly? Can I see the line?\n. Well, I'm not very fimiliar with `exports.watcher_ignor_files`, and I'm not sure it will work very well.\n\nYou can however(as I did), change the directory under which vim saves it's swap files to completely avoid this. Adding `set directory=/tmp/` to your vimrc will tell vim to then put it's swap files in your temporary directory, instead of on the hard disc, and most importantly in your roots project directory. This is actually better for your hard drive in the long run too, because it prevents vim from writing there every single time you go to insert mode or present a change to the document.\n. I did too for a second thar. ;)\n. Why not rename your `.css` files to `.styl` and then @import them from there?\n. YESH! Thank you Jeff!\n. ",
    "kylemac": "@slang800 - I guess a contrived example would be to set some config value like an API base URL (perhaps for versioning) in your main.coffee and utilize that in your AJAX requests\n. +1 from me too. was just talking to @jenius about this again yesterday\n. no hurt feelings everyone. all :heart: in OSS\n. this is actually an issue with https://github.com/carrot/sprout or more accurately the [base roots template](https://github.com/roots-dev/base) in sprout. I agree that we should [underscore](http://stringjs.com/#methods/underscore) this input for the base template\n. @brian-mann could you possibly edit your initial post to include the checkbox syntax. Example below\n\n```\n- [ ] Deployment to s3\n```\n\nThis will help to mark things and keep a good running tally\n. :+1: \n. here's a few as well \n- v3 - https://github.com/carrot/globtester - ([live site](http://www.globtester.com/))\n- v3 - https://github.com/carrot/roots-buildpack-sample - ([live site](http://roots-buildpack-sample.herokuapp.com/))\n. ``` coffeescript\naxis = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture = require 'rupture'\njeet = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  stylus:\n      use: [axis(), autoprefixer(), jeet(), rupture(), dynamic_content()] # <- you needed to close your array\n```\n\nEDIT: I'm wrong and this didn't fix the issue :dusty_stick:\n. okay, I'm really an idiot. you DO need to close your array bracket but you also passed `dynamic_content` as a stylus plugin. that's the more important issue to point out.  \n. @nanotime seems like an easy mistake to make but you'll need to add `dynamic-content` as an extension, not as part of the stylus middleware. \n\n``` coffeescript\n# app.coffee \nmodule.exports =\n  extensions: [dynamic_content()]\n  # ... rest of your stylus goodness \n```\n. I have to say, I'm very excited for this to be merged. :bouquet: \n. `package.json` isn't actually required. roots will do some stuff like move stuff to a public folder even if you haven't defined your dependencies in `package.json`. actually an `app.coffee` which is otherwise the main configuration for roots' projects isn't even a requirement.  \n. ha yeah, true. I actually had a hard time trying to figure out how you got that output - but I suppose not CD'ng into the project could do that to ya. \n. @MikaelX I'm assuming what you're saying is that the images get moved from `/assets/img` to `/public/img` just fine and are viewable through the file system, but are not being served correctly. is this every single image or only certain images?  \n\nIf you can share your project in any way (perhaps it's open source), I'd be happy to look into it a little bit more - otherwise it may prove difficult for me to reproduce your issue\n. @jedifrog mind committing and pushing your repo up to github and then we can clone and take a peek at it? \n. @mhartington you can totally do this already, although perhaps it's not documented well enough. \n\nFirst off, to use HTML and Javascript, you don't have to do anything really. If you simply create `.html` and `.js` files in your project they will automatically just be moved to your `public` folder (or whatever you have set in your `app.coffee` configuration). \n\nNow, if you only want to use Stylus for CSS precompilation, then the only thing you'll need to do is assure that `stylus`, `axis`, `rupture`, and `jeet` are in your `package.json` file and that you've passed `axis`, `rupture`, and `jeet` to stylus in your `app.coffee` file as extensions. \n\nSince your Stylus file will be compiled to something like `/css/style.css` you can safely add that to a `<link>` tag in your `.html` files just like you would normally do.\n\nYou see, roots will only run a compile on a [supported language](https://github.com/jenius/accord#supported-languages) that is in your `package.json`. If it does encounter a file that has an unmatched extension - then it will simply copy that file without manipulating it. This gives you the freedom to mix and match or just use regular old HTML/JS/CSS if you'd like. \n\nHopefully that is clear enough - let me know if you need some more help. \n. yes, apologies. I should have asked if you were using the prerelease yet or not. we've used it in production a few times and it's pretty stable as @jenius can attest to. if you're starting a new project - we'd love to have you help us put it through the test. \n. @jenius show the gif! \n. :bouquet: lots of hard work here @jenius. well done \n. :-1: \n. @ccsouthard - okay, this is definitely an issue introduced in sprout@v0.1.3 when there is EJS in your `package.json` (which there is in https://github.com/roots-dev/base). I'm sorry about the inconvenience here. \n\nA quick fix is to edit the roots-base sprout template which will be located at `~/.config/sprout/roots-base/`. You'll want to remove the EJS in the `package.json` file here which is being used in the `name` and `description`. We'll work on patching this up otherwise. \n. as discussed in person, the watcher/local_server tests pretty much cover as much of this as we're going to get and the docs are covered in a different repo (which I'll address). this is ready to be reviewed and merged whenever you're ready to make the release bump. \n. just kidding : / \n. hey @dbox we've got a roots extension called [roots-netlify](https://github.com/carrot/roots-netlify) that exposes an easy-to-use interface to [netlify's redirect rules](https://docs.netlify.com/redirects/). this plugin will compile the appropriate `_redirects` file in your root path. note, this extension isn't 100% necessary, you could write out a `_redirects` file in your project -- we just like having it in our `app.coffee` where all our other configuration is (and it merges redirects, headers configuration). further, josh lays it out a little in the readme of roots-netlify\n\n> It's also a common roots convention to start files with an _ to ignore them during compilation. Since Netlify would normally be configured with a _headers and _redirects file, using this extension allows you keep that nice clean convention throughout the whole project.\n. oh, I see that doesn't exactly answer your question. for .htaccess - if you simply put a `.htaccess` file in your root-dir, roots will copy it over to `public/.htaccess` at which time you can point your apache configuration to that. \n. yeah, what declan said -- we use [charge](https://github.com/carrot/charge) (which is built into roots and is what is serving your site when you run `roots watch`) for our local development. it has all the features you'd want from a web-server so you don't have to install apache locally or something crazy like that. then in our `app.production.coffee` we usually default to netlify's clean url rewrite. if we were deploying to an apache server, we would just write a basic `.htaccess` into our project and use that. \n\nto see what declan shared in more context, here's the `app.coffee` file for http://roots.cx which is hosted on netlify - https://github.com/carrot/roots-www/blob/master/app.coffee#L26-L27\n. @Grenzfrei does this happen consistently at certain paths? could you share your `app.coffee` configuration too - that might help us debug. \n. ping @Grenzfrei. we'd love to help debug a little more - let us know if you're still seeing this\n. @jenius @hhsnopek the update from 0.3 to 0.4 was a breaking change to the `Utils` class in sprout - so nothing breaking for here. we should definitely bump support to `0.4.x`\n. @jenius these tests are passing - I just need to figure out what is making the coverage go down -- i just can't seem to get `npm run coverage` to run properly on my machine\n. :tada: \n. @nporteschaikin 1 inline comment and you just need to do a `inquirer = require 'inquirer'` in `lib/api/new.coffee` and this is working\n. :+1: merging this in and going to continue to put `origin/sprout-upgrade` through it's paces \n. great stuff. this helps out on a few projects now too. thanks a ton @knupska ! \n. 1 comment then LGTM. tests pass and i ran it locally on a project \ud83d\udc4d \n. @slang800 - I guess a contrived example would be to set some config value like an API base URL (perhaps for versioning) in your main.coffee and utilize that in your AJAX requests\n. +1 from me too. was just talking to @jenius about this again yesterday\n. no hurt feelings everyone. all :heart: in OSS\n. this is actually an issue with https://github.com/carrot/sprout or more accurately the [base roots template](https://github.com/roots-dev/base) in sprout. I agree that we should [underscore](http://stringjs.com/#methods/underscore) this input for the base template\n. @brian-mann could you possibly edit your initial post to include the checkbox syntax. Example below\n\n```\n- [ ] Deployment to s3\n```\n\nThis will help to mark things and keep a good running tally\n. :+1: \n. here's a few as well \n- v3 - https://github.com/carrot/globtester - ([live site](http://www.globtester.com/))\n- v3 - https://github.com/carrot/roots-buildpack-sample - ([live site](http://roots-buildpack-sample.herokuapp.com/))\n. ``` coffeescript\naxis = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture = require 'rupture'\njeet = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  stylus:\n      use: [axis(), autoprefixer(), jeet(), rupture(), dynamic_content()] # <- you needed to close your array\n```\n\nEDIT: I'm wrong and this didn't fix the issue :dusty_stick:\n. okay, I'm really an idiot. you DO need to close your array bracket but you also passed `dynamic_content` as a stylus plugin. that's the more important issue to point out.  \n. @nanotime seems like an easy mistake to make but you'll need to add `dynamic-content` as an extension, not as part of the stylus middleware. \n\n``` coffeescript\n# app.coffee \nmodule.exports =\n  extensions: [dynamic_content()]\n  # ... rest of your stylus goodness \n```\n. I have to say, I'm very excited for this to be merged. :bouquet: \n. `package.json` isn't actually required. roots will do some stuff like move stuff to a public folder even if you haven't defined your dependencies in `package.json`. actually an `app.coffee` which is otherwise the main configuration for roots' projects isn't even a requirement.  \n. ha yeah, true. I actually had a hard time trying to figure out how you got that output - but I suppose not CD'ng into the project could do that to ya. \n. @MikaelX I'm assuming what you're saying is that the images get moved from `/assets/img` to `/public/img` just fine and are viewable through the file system, but are not being served correctly. is this every single image or only certain images?  \n\nIf you can share your project in any way (perhaps it's open source), I'd be happy to look into it a little bit more - otherwise it may prove difficult for me to reproduce your issue\n. @jedifrog mind committing and pushing your repo up to github and then we can clone and take a peek at it? \n. @mhartington you can totally do this already, although perhaps it's not documented well enough. \n\nFirst off, to use HTML and Javascript, you don't have to do anything really. If you simply create `.html` and `.js` files in your project they will automatically just be moved to your `public` folder (or whatever you have set in your `app.coffee` configuration). \n\nNow, if you only want to use Stylus for CSS precompilation, then the only thing you'll need to do is assure that `stylus`, `axis`, `rupture`, and `jeet` are in your `package.json` file and that you've passed `axis`, `rupture`, and `jeet` to stylus in your `app.coffee` file as extensions. \n\nSince your Stylus file will be compiled to something like `/css/style.css` you can safely add that to a `<link>` tag in your `.html` files just like you would normally do.\n\nYou see, roots will only run a compile on a [supported language](https://github.com/jenius/accord#supported-languages) that is in your `package.json`. If it does encounter a file that has an unmatched extension - then it will simply copy that file without manipulating it. This gives you the freedom to mix and match or just use regular old HTML/JS/CSS if you'd like. \n\nHopefully that is clear enough - let me know if you need some more help. \n. yes, apologies. I should have asked if you were using the prerelease yet or not. we've used it in production a few times and it's pretty stable as @jenius can attest to. if you're starting a new project - we'd love to have you help us put it through the test. \n. @jenius show the gif! \n. :bouquet: lots of hard work here @jenius. well done \n. :-1: \n. @ccsouthard - okay, this is definitely an issue introduced in sprout@v0.1.3 when there is EJS in your `package.json` (which there is in https://github.com/roots-dev/base). I'm sorry about the inconvenience here. \n\nA quick fix is to edit the roots-base sprout template which will be located at `~/.config/sprout/roots-base/`. You'll want to remove the EJS in the `package.json` file here which is being used in the `name` and `description`. We'll work on patching this up otherwise. \n. as discussed in person, the watcher/local_server tests pretty much cover as much of this as we're going to get and the docs are covered in a different repo (which I'll address). this is ready to be reviewed and merged whenever you're ready to make the release bump. \n. just kidding : / \n. hey @dbox we've got a roots extension called [roots-netlify](https://github.com/carrot/roots-netlify) that exposes an easy-to-use interface to [netlify's redirect rules](https://docs.netlify.com/redirects/). this plugin will compile the appropriate `_redirects` file in your root path. note, this extension isn't 100% necessary, you could write out a `_redirects` file in your project -- we just like having it in our `app.coffee` where all our other configuration is (and it merges redirects, headers configuration). further, josh lays it out a little in the readme of roots-netlify\n\n> It's also a common roots convention to start files with an _ to ignore them during compilation. Since Netlify would normally be configured with a _headers and _redirects file, using this extension allows you keep that nice clean convention throughout the whole project.\n. oh, I see that doesn't exactly answer your question. for .htaccess - if you simply put a `.htaccess` file in your root-dir, roots will copy it over to `public/.htaccess` at which time you can point your apache configuration to that. \n. yeah, what declan said -- we use [charge](https://github.com/carrot/charge) (which is built into roots and is what is serving your site when you run `roots watch`) for our local development. it has all the features you'd want from a web-server so you don't have to install apache locally or something crazy like that. then in our `app.production.coffee` we usually default to netlify's clean url rewrite. if we were deploying to an apache server, we would just write a basic `.htaccess` into our project and use that. \n\nto see what declan shared in more context, here's the `app.coffee` file for http://roots.cx which is hosted on netlify - https://github.com/carrot/roots-www/blob/master/app.coffee#L26-L27\n. @Grenzfrei does this happen consistently at certain paths? could you share your `app.coffee` configuration too - that might help us debug. \n. ping @Grenzfrei. we'd love to help debug a little more - let us know if you're still seeing this\n. @jenius @hhsnopek the update from 0.3 to 0.4 was a breaking change to the `Utils` class in sprout - so nothing breaking for here. we should definitely bump support to `0.4.x`\n. @jenius these tests are passing - I just need to figure out what is making the coverage go down -- i just can't seem to get `npm run coverage` to run properly on my machine\n. :tada: \n. @nporteschaikin 1 inline comment and you just need to do a `inquirer = require 'inquirer'` in `lib/api/new.coffee` and this is working\n. :+1: merging this in and going to continue to put `origin/sprout-upgrade` through it's paces \n. great stuff. this helps out on a few projects now too. thanks a ton @knupska ! \n. 1 comment then LGTM. tests pass and i ran it locally on a project \ud83d\udc4d \n. ",
    "simon-lang": "thanks mate, much appreciated!\n\nI know you're probably all over it, but we had some weird problems with our node projects when upgrading from Coffeescript 1.4 recently - some minor regressions in 1.5 and 1.6. Not sure if updated Coffeescript was part of your recent version change.\n. thanks mate, much appreciated!\n\nI know you're probably all over it, but we had some weird problems with our node projects when upgrading from Coffeescript 1.4 recently - some minor regressions in 1.5 and 1.6. Not sure if updated Coffeescript was part of your recent version change.\n. ",
    "aesnyder": "no problem, thanks for the quick reply. BTW, the precompiled templates are dope\n. hey I did change != yield to change != content to get past that issue. This is throwing errors on the model attributes when I try to access them in the template. (i'm using backbone and marionette)\n\n@jenius what details and code would you like? \n. the error i get is in the javascript from templates.js  -- i get \"options is undefinded\"\n\noptions is is an attribute of the model that the view/template renders.\n\nNothing about the code changes other than that. \n\nhttps://gist.github.com/aesnyder/6021919\n\nneed anything else @jenius?\n. hey @jenius I think I figured it out it seems that anywhere that Jade is doing interpretation the variable's reference isn't being changed in the compacted file. \n\nIn the compacted/minified file the attribute should be something like e.options which outputs correctly when one's template looks like\n%h6= e.options[0]\n\nbut when jade has to do interpretation the compacted file still references options, not e.options\n\nI discovered this because the templates were bombing on statements like:\n- for option in options \n\nor\n\nh6(style=\"font-family: #{font};\"\n\nI think this is an issue with jade? Or your precompiler, I hope this helps.\n. I tried opening a PR but got a 403.. Anyways, downgrading jade to 0.30 in the package.json temporarily fixes this.\n\nCheers\n. Sounds good, thanks for all your hard work. Roots really kicks ass dude, been using it in most of my side projects. :beers:\n. I feel your pain bro\n. Ah no problem, will close. \n\nIs 3 stable enough to begin using?\n. no problem, thanks for the quick reply. BTW, the precompiled templates are dope\n. hey I did change != yield to change != content to get past that issue. This is throwing errors on the model attributes when I try to access them in the template. (i'm using backbone and marionette)\n\n@jenius what details and code would you like? \n. the error i get is in the javascript from templates.js  -- i get \"options is undefinded\"\n\noptions is is an attribute of the model that the view/template renders.\n\nNothing about the code changes other than that. \n\nhttps://gist.github.com/aesnyder/6021919\n\nneed anything else @jenius?\n. hey @jenius I think I figured it out it seems that anywhere that Jade is doing interpretation the variable's reference isn't being changed in the compacted file. \n\nIn the compacted/minified file the attribute should be something like e.options which outputs correctly when one's template looks like\n%h6= e.options[0]\n\nbut when jade has to do interpretation the compacted file still references options, not e.options\n\nI discovered this because the templates were bombing on statements like:\n- for option in options \n\nor\n\nh6(style=\"font-family: #{font};\"\n\nI think this is an issue with jade? Or your precompiler, I hope this helps.\n. I tried opening a PR but got a 403.. Anyways, downgrading jade to 0.30 in the package.json temporarily fixes this.\n\nCheers\n. Sounds good, thanks for all your hard work. Roots really kicks ass dude, been using it in most of my side projects. :beers:\n. I feel your pain bro\n. Ah no problem, will close. \n\nIs 3 stable enough to begin using?\n. ",
    "cspotcode": "Another Windows user here.  Windows is the sensible choice at my job.  Although they technically allow us to request Macs, it's not worth the effort.  Plus, I build my own personal desktops and play a lot of games that are Windows-only, and it makes sense to use Windows 100% so I don't have to context switch or maintain multiple OS installations.\n\nWindows required you to be Administrator to create symlinks, meaning `roots watch` fails unless I run it as admin. (which is super-annoying)  Windows _does_ allow creating junction points as regular non-admin users, but those are only for directories, not files.\n. Are you using a version of roots that symlinks files in development mode, or are you using an older version?\n\nFor me, in Windows 7 with an NTFS filesystem, Node throws an error when roots attempts to create a symlink.  In general, when I want to create a symlink on Windows, I always have to do it from a command prompt that's running as admin.\n\nAccording to the [NTFS Wikipedia article](http://en.wikipedia.org/wiki/NTFS_symbolic_link) this restriction is a default security setting and can be changed with the Local Security Policy management console.\n. @jenius:\nThanks for responding, and sorry for reporting this in the wrong place.  I am certainly not trying to tell you what you should/shouldn't support; I merely assumed that loading jQuery 2.0 in IE8 was an oversight.\n1. Sounds good; I'll create a PR unless I run into any problems that aren't worth the effort.  I'm hoping that jQuery 1.10 is sufficient.\n2. I was actually comparing the axis UI components (not roots itself) to Bootstrap's components.  I am curious what tradeoffs other CSS authors consider acceptable when their pages are viewed in a bad browser. (loss of rounded corners, non-gradient backgrounds, hover effects don't animate)  That's my only reason for loading the sites in IE8.  IMHO, it is important for any site demo-ing pre-made CSS components to support IE8 just so it's easy for developers to see how those components will render, in case they have a client that requires IE8 support.  But maybe I'm just weird.\n\n@slang800:\nThe only problematic breakage is that the sidebar nav menu doesn't move to the top of the screen when I scroll down.\n. I was meaning to do this but haven't had any time for open source over the past two weeks.  If someone else writes the test that's probably the best way forward; otherwise I'll do it when I have free time again. (probably another 2 weeks from now)\n. I see, makes sense.  I'll switch back to using app.coffee.  Thanks for the\nexplanation!\nOn Jun 23, 2015 6:14 PM, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Hey there! Yes, it is. Roots does not support app.js, the fact that it\n> works under any condition was unknown to me. If there's enough demand for\n> it, we could add support for this, but app.coffee is really just a very\n> simple configuration file, not one in which a lot of coding needs to be\n> done, so coffee just makes it less to write and cleaner.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/650#issuecomment-114657136.\n. Another Windows user here.  Windows is the sensible choice at my job.  Although they technically allow us to request Macs, it's not worth the effort.  Plus, I build my own personal desktops and play a lot of games that are Windows-only, and it makes sense to use Windows 100% so I don't have to context switch or maintain multiple OS installations.\n\nWindows required you to be Administrator to create symlinks, meaning `roots watch` fails unless I run it as admin. (which is super-annoying)  Windows _does_ allow creating junction points as regular non-admin users, but those are only for directories, not files.\n. Are you using a version of roots that symlinks files in development mode, or are you using an older version?\n\nFor me, in Windows 7 with an NTFS filesystem, Node throws an error when roots attempts to create a symlink.  In general, when I want to create a symlink on Windows, I always have to do it from a command prompt that's running as admin.\n\nAccording to the [NTFS Wikipedia article](http://en.wikipedia.org/wiki/NTFS_symbolic_link) this restriction is a default security setting and can be changed with the Local Security Policy management console.\n. @jenius:\nThanks for responding, and sorry for reporting this in the wrong place.  I am certainly not trying to tell you what you should/shouldn't support; I merely assumed that loading jQuery 2.0 in IE8 was an oversight.\n1. Sounds good; I'll create a PR unless I run into any problems that aren't worth the effort.  I'm hoping that jQuery 1.10 is sufficient.\n2. I was actually comparing the axis UI components (not roots itself) to Bootstrap's components.  I am curious what tradeoffs other CSS authors consider acceptable when their pages are viewed in a bad browser. (loss of rounded corners, non-gradient backgrounds, hover effects don't animate)  That's my only reason for loading the sites in IE8.  IMHO, it is important for any site demo-ing pre-made CSS components to support IE8 just so it's easy for developers to see how those components will render, in case they have a client that requires IE8 support.  But maybe I'm just weird.\n\n@slang800:\nThe only problematic breakage is that the sidebar nav menu doesn't move to the top of the screen when I scroll down.\n. I was meaning to do this but haven't had any time for open source over the past two weeks.  If someone else writes the test that's probably the best way forward; otherwise I'll do it when I have free time again. (probably another 2 weeks from now)\n. I see, makes sense.  I'll switch back to using app.coffee.  Thanks for the\nexplanation!\nOn Jun 23, 2015 6:14 PM, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Hey there! Yes, it is. Roots does not support app.js, the fact that it\n> works under any condition was unknown to me. If there's enough demand for\n> it, we could add support for this, but app.coffee is really just a very\n> simple configuration file, not one in which a lot of coding needs to be\n> done, so coffee just makes it less to write and cleaner.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/650#issuecomment-114657136.\n. ",
    "dapetcu21": "Actually, I figured that it can't take ignore_files into account, because then it wouldn't reload on changed included files that happen to be ignored. You'd still need some kind of a dependency graph for this.\n. Follow-up: It appears to be caused by Vim saving .swp files in the templates directory, so something must be happening \nthat it's ignoring my ignored_files\n\nAfter some fiddling, it seems that it fails if there's anything else in templates that doesn't end in .jade (.DS_Store included)\n. I can confirm the the following lines work for all intents and purposes. The problem manifests itself when I create any other kind of file but a jade file in my templates folder\n\n``` javascript\nexports.ignore_files = ['_*', '.*.swp', '.*.swo', 'readme*', '.gitignore', '.DS_Store']\nexports.ignore_folders = ['.git']\nexports.watcher_ignore_files = ['.*.swp', '.*.swo']\n```\n. That's what I already did, but it's a workaround, not a solution. The problem still lies in the way roots compiles templates.\n. yup. works\n. ?\n. I thought you meant PR as in Public Relations :smile:\n. The thing is, I actually DO want to use layouts, but just for some specific files. I just don't want to have a default.\n. This doesn't enforce a default layout on me, but allows me to use it on other files.\nSomething like this:\n\n``` coffeescript\nexports.layouts =\n  'index.jade': 'layout.jade'\n  'about.jade': 'layout.jade'\n```\n. I'm sorry. I completely forgot about this one at the time. Is this still relevant with v3 impending? Does it make sense to close it? Does it make sense to add the tests and push?\n. Well, it is fixed, hence the PR (if it's still applicable). It just needs a test. I can do that sometime later during the night, if it's needed.\n. Thanks for the info. :)\n. Lol, now I noticed:\nFile not found issue **404**\n. Just a pun. This is issue 404 and it's about something not being found.\n. Problem is, nothing I have consistently produces the error. It's somehow random, but with my ARGO Tabs it does that 90% of the time.\n\nhttps://github.com/dapetcu21/ARGOTabs/tree/rootsv3\n. I've been honestly trying, but funnily enough, I can't even reproduce this with roots from 3 days ago.\n. 10.9.1, 2013 15\" rMBP\n\nOn Thu, Mar 6, 2014 at 5:38 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## More details about your computer/os etc?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/407#issuecomment-36900081\n. I'm pretty sure this is linked to #400\n. As I said, the issue happens even when I disable the plugin and use a static manifest file.\n. I'll double check and try to reproduce the problem on another project as soon as I get home\n. I confirmed that my plugin is not the issue here. I didn't manage to reproduce it with a smaller example, since it only appears to crash after caching a considerable amount of files, but this one still crashes:\nhttps://github.com/dapetcu21/ARGOTabs/tree/nomanifestplugin\n. It's the exact same one as the one above, line by line. If this helps, this seems to happen almost deterministically before it crashes:\n\n```\nDocument was loaded from Application Cache with manifest http://localhost:1111/manifest.appcache localhost/:1\nApplication Cache Checking event localhost/:1\nApplication Cache Downloading event localhost/:1\nApplication Cache Progress event (0 of 77) http://localhost:1111/js/placeholderbackend.js localhost/:1\nApplication Cache Progress event (1 of 77) http://localhost:1111/components/bootstrap/css/bootstrap.css localhost/:1\nApplication Cache Progress event (2 of 77) http://localhost:1111/components/bootstrap/js/bootstrap.min.js localhost/:1\nApplication Cache Progress event (3 of 77) http://localhost:1111/js/require.js localhost/:1\nApplication Cache Progress event (4 of 77) http://localhost:1111/components/font-awesome/fonts/fontawesome-webfont.woff localhost/:1\nApplication Cache Progress event (5 of 77) http://localhost:1111/js/routes/routes.js localhost/:1\nApplication Cache Progress event (6 of 77) http://localhost:1111/components/font-awesome/css/font-awesome.css localhost/:1\nApplication Cache Progress event (7 of 77) http://localhost:1111/components/font-awesome/fonts/fontawesome-webfont.ttf localhost/:1\nApplication Cache Progress event (8 of 77) http://localhost:1111/js/team.js localhost/:1\nApplication Cache Progress event (9 of 77) http://localhost:1111/js/routes/dashboard.js localhost/:1\nApplication Cache Progress event (10 of 77) http://localhost:1111/components/bootstrap/img/glyphicons-halflings-white.png localhost/:1\nApplication Cache Progress event (11 of 77) http://localhost:1111/js/alertcontroller.js localhost/:1\nApplication Cache Progress event (12 of 77) http://localhost:1111/partials/rooms.html localhost/:1\nApplication Cache Progress event (13 of 77) http://localhost:1111/components/bootstrap/css/bootstrap.min.css localhost/:1\nApplication Cache Progress event (14 of 77) http://localhost:1111/js/routes/json.js localhost/:1\nApplication Cache Progress event (15 of 77) http://localhost:1111/js/opencontroller.js localhost/:1\nApplication Cache Progress event (16 of 77) http://localhost:1111/js/globals.js localhost/:1\nApplication Cache Progress event (17 of 77) http://localhost:1111/partials/unimplemented.html localhost/:1\nFailed to load resource: net::ERR_FAILED http://localhost:1111/__roots__/main.js\nApplication Cache Progress event (18 of 77) http://localhost:1111/components/html2canvas/html2canvas.js localhost/:1\nApplication Cache Error event: Resource fetch failed (0) http://localhost:1111/components/html2canvas/html2canvas.js \n```\n. My guess would be that it crashes when requesting `http://localhost:1111/__roots__/main.js` and any other successful download after that is just some pending asynchronous task.\n. I think that the browser sends a somewhat different request for cache updates and something breaks in infector. Apparently adding `&& !res.headersSent` [here](https://github.com/samccone/infestor/blob/master/index.js#L36) makes it work, but I have no idea of why this misfire happens in the first place.\n. Thanks\n. Ping @jenius?\n. I think that the docs behaviour should be the correct one. I'm preparing a PR to fix my other issue and that should address this too.\n. Thanks ^^. No problem :)\n. Oh, but you can use async stuff in them. Just return a promise.\n. Actually, I figured that it can't take ignore_files into account, because then it wouldn't reload on changed included files that happen to be ignored. You'd still need some kind of a dependency graph for this.\n. Follow-up: It appears to be caused by Vim saving .swp files in the templates directory, so something must be happening \nthat it's ignoring my ignored_files\n\nAfter some fiddling, it seems that it fails if there's anything else in templates that doesn't end in .jade (.DS_Store included)\n. I can confirm the the following lines work for all intents and purposes. The problem manifests itself when I create any other kind of file but a jade file in my templates folder\n\n``` javascript\nexports.ignore_files = ['_*', '.*.swp', '.*.swo', 'readme*', '.gitignore', '.DS_Store']\nexports.ignore_folders = ['.git']\nexports.watcher_ignore_files = ['.*.swp', '.*.swo']\n```\n. That's what I already did, but it's a workaround, not a solution. The problem still lies in the way roots compiles templates.\n. yup. works\n. ?\n. I thought you meant PR as in Public Relations :smile:\n. The thing is, I actually DO want to use layouts, but just for some specific files. I just don't want to have a default.\n. This doesn't enforce a default layout on me, but allows me to use it on other files.\nSomething like this:\n\n``` coffeescript\nexports.layouts =\n  'index.jade': 'layout.jade'\n  'about.jade': 'layout.jade'\n```\n. I'm sorry. I completely forgot about this one at the time. Is this still relevant with v3 impending? Does it make sense to close it? Does it make sense to add the tests and push?\n. Well, it is fixed, hence the PR (if it's still applicable). It just needs a test. I can do that sometime later during the night, if it's needed.\n. Thanks for the info. :)\n. Lol, now I noticed:\nFile not found issue **404**\n. Just a pun. This is issue 404 and it's about something not being found.\n. Problem is, nothing I have consistently produces the error. It's somehow random, but with my ARGO Tabs it does that 90% of the time.\n\nhttps://github.com/dapetcu21/ARGOTabs/tree/rootsv3\n. I've been honestly trying, but funnily enough, I can't even reproduce this with roots from 3 days ago.\n. 10.9.1, 2013 15\" rMBP\n\nOn Thu, Mar 6, 2014 at 5:38 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## More details about your computer/os etc?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/407#issuecomment-36900081\n. I'm pretty sure this is linked to #400\n. As I said, the issue happens even when I disable the plugin and use a static manifest file.\n. I'll double check and try to reproduce the problem on another project as soon as I get home\n. I confirmed that my plugin is not the issue here. I didn't manage to reproduce it with a smaller example, since it only appears to crash after caching a considerable amount of files, but this one still crashes:\nhttps://github.com/dapetcu21/ARGOTabs/tree/nomanifestplugin\n. It's the exact same one as the one above, line by line. If this helps, this seems to happen almost deterministically before it crashes:\n\n```\nDocument was loaded from Application Cache with manifest http://localhost:1111/manifest.appcache localhost/:1\nApplication Cache Checking event localhost/:1\nApplication Cache Downloading event localhost/:1\nApplication Cache Progress event (0 of 77) http://localhost:1111/js/placeholderbackend.js localhost/:1\nApplication Cache Progress event (1 of 77) http://localhost:1111/components/bootstrap/css/bootstrap.css localhost/:1\nApplication Cache Progress event (2 of 77) http://localhost:1111/components/bootstrap/js/bootstrap.min.js localhost/:1\nApplication Cache Progress event (3 of 77) http://localhost:1111/js/require.js localhost/:1\nApplication Cache Progress event (4 of 77) http://localhost:1111/components/font-awesome/fonts/fontawesome-webfont.woff localhost/:1\nApplication Cache Progress event (5 of 77) http://localhost:1111/js/routes/routes.js localhost/:1\nApplication Cache Progress event (6 of 77) http://localhost:1111/components/font-awesome/css/font-awesome.css localhost/:1\nApplication Cache Progress event (7 of 77) http://localhost:1111/components/font-awesome/fonts/fontawesome-webfont.ttf localhost/:1\nApplication Cache Progress event (8 of 77) http://localhost:1111/js/team.js localhost/:1\nApplication Cache Progress event (9 of 77) http://localhost:1111/js/routes/dashboard.js localhost/:1\nApplication Cache Progress event (10 of 77) http://localhost:1111/components/bootstrap/img/glyphicons-halflings-white.png localhost/:1\nApplication Cache Progress event (11 of 77) http://localhost:1111/js/alertcontroller.js localhost/:1\nApplication Cache Progress event (12 of 77) http://localhost:1111/partials/rooms.html localhost/:1\nApplication Cache Progress event (13 of 77) http://localhost:1111/components/bootstrap/css/bootstrap.min.css localhost/:1\nApplication Cache Progress event (14 of 77) http://localhost:1111/js/routes/json.js localhost/:1\nApplication Cache Progress event (15 of 77) http://localhost:1111/js/opencontroller.js localhost/:1\nApplication Cache Progress event (16 of 77) http://localhost:1111/js/globals.js localhost/:1\nApplication Cache Progress event (17 of 77) http://localhost:1111/partials/unimplemented.html localhost/:1\nFailed to load resource: net::ERR_FAILED http://localhost:1111/__roots__/main.js\nApplication Cache Progress event (18 of 77) http://localhost:1111/components/html2canvas/html2canvas.js localhost/:1\nApplication Cache Error event: Resource fetch failed (0) http://localhost:1111/components/html2canvas/html2canvas.js \n```\n. My guess would be that it crashes when requesting `http://localhost:1111/__roots__/main.js` and any other successful download after that is just some pending asynchronous task.\n. I think that the browser sends a somewhat different request for cache updates and something breaks in infector. Apparently adding `&& !res.headersSent` [here](https://github.com/samccone/infestor/blob/master/index.js#L36) makes it work, but I have no idea of why this misfire happens in the first place.\n. Thanks\n. Ping @jenius?\n. I think that the docs behaviour should be the correct one. I'm preparing a PR to fix my other issue and that should address this too.\n. Thanks ^^. No problem :)\n. Oh, but you can use async stuff in them. Just return a promise.\n. ",
    "DAddYE": "because stylus isn't 100% compatible with css (especially older one).\n. Thanks a lot, take your time and again thanks for this good piece of software!\n. Hi,\n\nsorry to be so late for unknown reason I missed the notification.\n\nBy the way, thanks for your well detailed reply. Here my thoughts:\n\n#### Front Matter\n\n> We can use front matter in any language, but can only use :yaml in jade. Eventually I would like to expand dynamic content such that it can work for other languages if people prefer, so a universal solution is much more attractive to me.\n\nI agree and I see if we were working on a markdown template, following the actual front matter style has a lot of sense, but I think you should _adapt_ it to the specific language. \n\n#### SEO\n\nI agree\n\n#### File paths\n\nMy idea was pretty simple:\n\n```\n\\_ pages\n  \\_ images\n   \\_ image1.png\n   \\_ image2.png\n```\n\nbe able to:\n\n```\n- for img in pages.images\n    li: img(src=img)\n```\n\nSo yes, make it dynamic.\n\nThe scenario is very common, a customer can send me 100 images today for a gallery.\n1. requires a long time just map each file in the front matter or write it directly\n\nThe customer within 30 days send me an update folder of 105 images.\n1. I don't know anymore which image is new or old, if we have _dynamic_ files I can simply change the folder with the new one and that's it otherwise I to (I know is not complicated) hand check and hand write.\n\nAgain, thanks for your time and this awesome product!\n. Awesome!\n\n![](http://gifs.joelglovier.com/excited/ace-ventura-dance.gif)\n. because stylus isn't 100% compatible with css (especially older one).\n. Thanks a lot, take your time and again thanks for this good piece of software!\n. Hi,\n\nsorry to be so late for unknown reason I missed the notification.\n\nBy the way, thanks for your well detailed reply. Here my thoughts:\n\n#### Front Matter\n\n> We can use front matter in any language, but can only use :yaml in jade. Eventually I would like to expand dynamic content such that it can work for other languages if people prefer, so a universal solution is much more attractive to me.\n\nI agree and I see if we were working on a markdown template, following the actual front matter style has a lot of sense, but I think you should _adapt_ it to the specific language. \n\n#### SEO\n\nI agree\n\n#### File paths\n\nMy idea was pretty simple:\n\n```\n\\_ pages\n  \\_ images\n   \\_ image1.png\n   \\_ image2.png\n```\n\nbe able to:\n\n```\n- for img in pages.images\n    li: img(src=img)\n```\n\nSo yes, make it dynamic.\n\nThe scenario is very common, a customer can send me 100 images today for a gallery.\n1. requires a long time just map each file in the front matter or write it directly\n\nThe customer within 30 days send me an update folder of 105 images.\n1. I don't know anymore which image is new or old, if we have _dynamic_ files I can simply change the folder with the new one and that's it otherwise I to (I know is not complicated) hand check and hand write.\n\nAgain, thanks for your time and this awesome product!\n. Awesome!\n\n![](http://gifs.joelglovier.com/excited/ace-ventura-dance.gif)\n. ",
    "hew": "Where are the docs for this? I looked at roots.cx/docs but I don't see anything explicitly about the API.\n. For everyone's edification: \n\n![the picture](http://f.cl.ly/items/1S3p3P2a0D1D1F3v2g3T/Image%202015-10-14%20at%2011.06.30%20AM.png)\n\n(Don't forget to re-compile after making changes to app.coffee)\n. No worries. :)\n. Where are the docs for this? I looked at roots.cx/docs but I don't see anything explicitly about the API.\n. For everyone's edification: \n\n![the picture](http://f.cl.ly/items/1S3p3P2a0D1D1F3v2g3T/Image%202015-10-14%20at%2011.06.30%20AM.png)\n\n(Don't forget to re-compile after making changes to app.coffee)\n. No worries. :)\n. ",
    "courcelan": "Cognitive Science! Computer Science, Linguistics, Philosophy (Logic), Neurobiology, Psychology (Perception) all rolled into one :) \n. Jeff:\n\nDid you happen to run a deploy? I've noticed that when I run a deploy, the 1st time through, the deployment script rewrites all my assets in the assets folder (i've renamed dev_assets), effectively making them empty \"shell\" files. They have the name and are in the correct location, but have no bytes in them.\n\nHere's what outputs during deployment:\n\nhttps://gist.github.com/courcelan/6143486\n\nOnce I copy back in those assets (I've kept a copy separate because of the issues) and run deploy again, it seems to work.\n. Gotcha. No worries, I'm not sure where to look in on it myself! It acted alright for the rest of the evening that I was using it, but of course, it would be best if pain free!\n. Jeff -\n\nCould this be extrapolated to the deploy command? I was thinking along the same lines that sometimes you need to deploy for different environments. Examples: using <base href> for gh-pages since the root for gh-pages is not the same as \"roots watch\" or (ugh) when the client wants a media file to auto-play and for your sanity you need it to not play when you are testing and reloading the page every two minutes.\n\nOtherwise, I think that allowing customized roots builds would be great. I can think of different folder structure or things that may need to happen with concatenation being a good start. \n. This is probably the wrong place to continue discussion about this, but I was I guess speaking more towards how app.coffee has \"locals\" and it would be sweet to have another data-member called \"staging\" or \"production\" or whatever that had different variables that would overwrite (or append) to locals when you deploy.\n\nSomething like:\n\n`roots deploy --gh-pages --staging`\n\nand in app.coffee:\n\n```\nlocals:\n   autoplay: false\n   ....\nstaging:\n   autoplay: true\n   ....\n```\n\nIt would direct the deployment script to merge the staging construct into the locals construct before compilation. Does that make sense? And is that still considered too complex?\n\nJust an idea\n. +1 from me\n. Here's what I do.\n\nin layout.jade, remove everything except for:\n\n```\n!= content\n\n//- this must be included for live reload to work in developement\n//- it will be automatically ignored when deployed\n!= livereload\n```\n\nthis will always output everything through a blank file.\n\nThen for those pages where I want the whole wrapper of `<html><head>`, etc etc, I create a `base.jade` file. I put in all the wrapper code and then create a block:\n\n```\nblock primary\n```\n\nthen in my children pages, just use basic jade layout:\n\n```\nextends base\n\nblock primary\n//- all my primary block jade code.\n```\n\npretty simple and keeps it clean for Angular and other template partials.\n\nHope this helps!\n. Been having the same issue\n\nCobey Potter\n\n> On Oct 20, 2013, at 8:12 PM, Adam Kochanowicz notifications@github.com wrote:\n> \n> I don't get an error with this one. It just seems to think there's not actually a 2.1.0-beta1 available.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Cognitive Science! Computer Science, Linguistics, Philosophy (Logic), Neurobiology, Psychology (Perception) all rolled into one :) \n. Jeff:\n\nDid you happen to run a deploy? I've noticed that when I run a deploy, the 1st time through, the deployment script rewrites all my assets in the assets folder (i've renamed dev_assets), effectively making them empty \"shell\" files. They have the name and are in the correct location, but have no bytes in them.\n\nHere's what outputs during deployment:\n\nhttps://gist.github.com/courcelan/6143486\n\nOnce I copy back in those assets (I've kept a copy separate because of the issues) and run deploy again, it seems to work.\n. Gotcha. No worries, I'm not sure where to look in on it myself! It acted alright for the rest of the evening that I was using it, but of course, it would be best if pain free!\n. Jeff -\n\nCould this be extrapolated to the deploy command? I was thinking along the same lines that sometimes you need to deploy for different environments. Examples: using <base href> for gh-pages since the root for gh-pages is not the same as \"roots watch\" or (ugh) when the client wants a media file to auto-play and for your sanity you need it to not play when you are testing and reloading the page every two minutes.\n\nOtherwise, I think that allowing customized roots builds would be great. I can think of different folder structure or things that may need to happen with concatenation being a good start. \n. This is probably the wrong place to continue discussion about this, but I was I guess speaking more towards how app.coffee has \"locals\" and it would be sweet to have another data-member called \"staging\" or \"production\" or whatever that had different variables that would overwrite (or append) to locals when you deploy.\n\nSomething like:\n\n`roots deploy --gh-pages --staging`\n\nand in app.coffee:\n\n```\nlocals:\n   autoplay: false\n   ....\nstaging:\n   autoplay: true\n   ....\n```\n\nIt would direct the deployment script to merge the staging construct into the locals construct before compilation. Does that make sense? And is that still considered too complex?\n\nJust an idea\n. +1 from me\n. Here's what I do.\n\nin layout.jade, remove everything except for:\n\n```\n!= content\n\n//- this must be included for live reload to work in developement\n//- it will be automatically ignored when deployed\n!= livereload\n```\n\nthis will always output everything through a blank file.\n\nThen for those pages where I want the whole wrapper of `<html><head>`, etc etc, I create a `base.jade` file. I put in all the wrapper code and then create a block:\n\n```\nblock primary\n```\n\nthen in my children pages, just use basic jade layout:\n\n```\nextends base\n\nblock primary\n//- all my primary block jade code.\n```\n\npretty simple and keeps it clean for Angular and other template partials.\n\nHope this helps!\n. Been having the same issue\n\nCobey Potter\n\n> On Oct 20, 2013, at 8:12 PM, Adam Kochanowicz notifications@github.com wrote:\n> \n> I don't get an error with this one. It just seems to think there's not actually a 2.1.0-beta1 available.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "argyleink": "no more repro\n. Will do! It was a combination of me migrating an old roots blog to the new roots blog setup and not reading enough of your docs. The answers were available, i just wasnt seeing them. (like needing an \"_\" to not precompile single.jade). My pathing inside my posts pointing to layouts broke too, so blah blah, I got it working. This error has gone away completely since I properly migrated my content to the new blog structure. The EMFILE error portion of this was all my repeated bad compilations of posts. Nothing you are doing, it was all me =)\n\nThanks for following up tho!\n. Very much enjoying! I've given nearly every other option available right now a fair try and good local testing (brunch, yeoman, etc). Roots kicked ass, was out of the way the most, let me get to work the fastest, etc. \n\nThanks a ton for building this shit out dude! It's very much appreciate and admired.\n. no more repro\n. Will do! It was a combination of me migrating an old roots blog to the new roots blog setup and not reading enough of your docs. The answers were available, i just wasnt seeing them. (like needing an \"_\" to not precompile single.jade). My pathing inside my posts pointing to layouts broke too, so blah blah, I got it working. This error has gone away completely since I properly migrated my content to the new blog structure. The EMFILE error portion of this was all my repeated bad compilations of posts. Nothing you are doing, it was all me =)\n\nThanks for following up tho!\n. Very much enjoying! I've given nearly every other option available right now a fair try and good local testing (brunch, yeoman, etc). Roots kicked ass, was out of the way the most, let me get to work the fastest, etc. \n\nThanks a ton for building this shit out dude! It's very much appreciate and admired.\n. ",
    "nkhine": "https://npmjs.org/package/i18next is also a good option \n. https://npmjs.org/package/i18next is also a good option \n. ",
    "benadamstyles": "@jenius Has any progress been made on the extension? I'm interested in having a go myself, but I don't want to duplicate work.\n. I've actually got something working! It has one major caveat currently, and it's written very much to my specific use-case, but it could easily be made public-ready by swapping out some hard-coded values for user options. The caveat is that I have no idea how to make this work with `roots-records` template views.\n\nWhat it essentially does is take all your jade files, then for each language yaml file you have in `./i18n`, it swaps out handlebars-like `{{message.example}}` for the `message.example` property in the language yaml file.\n\nDo you think this has legs?\n\n``` javascript\nimport glob from 'glob'\nimport RootsUtil from 'roots-util'\nimport path from 'path'\nimport yaml from 'read-yaml'\nimport _ from '../assets/js/modules/underscore'\n\nexport default function(options) {\n\n  return class I18n {\n    constructor(roots) {\n      this.category = 'views'\n      this.util = new RootsUtil(roots)\n    }\n\n    fs() {\n      return {\n        extract: true,\n        detect: file => this.util.with_extension(file, ['jade'])\n      }\n    }\n\n    compile_hooks() {\n      return { // TODO use async methods and return Promise\n        write: ({roots, file_options, content}) =>\n          glob.sync(path.join(roots.root, 'i18n/*'))\n          .map(langFile => [\n            content.replace(/\\{\\{(\\S+)\\}\\}/g, (match, capture) =>\n              _.getPath(yaml.sync(langFile), capture)\n            ),\n            langFile\n          ]).map(([content, langFile]) => {\n            const p = file_options._path,\n                  dir = path.dirname(p),\n                  ext = path.extname(p),\n                  name = path.basename(p, ext),\n                  lang = path.basename(langFile, path.extname(langFile))\n\n            return {\n              content,\n              path: path.join('.', dir, `${name}.${lang}${ext}`),\n              extension: `${lang}${ext}`\n            }\n          })\n      }\n    }\n  }\n}\n```\n. @jenius With a few tweaks, this is working well for me, but I still haven't been able to make this work with `roots-records`. Looking at that extension's source code, it appears to be rendering single view templates \"outside\" the roots compilation flow, if that makes sense. See [this function](https://github.com/carrot/roots-records/blob/master/lib/index.coffee#L157).\n\nI think this means that there's no way, _within_ the roots flow, to grab the contents of those compiled views and modify them. I could do some funky command line scripting after the compile step \u2013 at this stage, is that the only solution, or can you think of another trick?\n. Just in case anyone comes across this that is looking for i18n support in roots, I have actually solved the problem of `roots-records` single-view templates now. I will put my module up as an npm package at some point soon.\n\n@jenius Is it ok to use the package name `roots-i18n`? Would you like to check the code before I publish?\n. Will do. It is pretty much the definition of hacky, but it works well for my purposes so I think it might help others too. Obviously if (when?) a better solution comes around, that would instantly take precedence. I'll be in touch soon.\n. @jenius https://github.com/Leeds-eBooks/roots-i18n\n. Haha you're right. I can't do a call tonight but I will comment the crap out of it and hopefully that will help, and if not we could chat later in the week. Thanks for taking a look so quickly!\n. Ok let me know if it makes any more sense now: https://github.com/Leeds-eBooks/roots-i18n\n. Hey @jenius I've been asked about getting this up on `npm` here: https://github.com/Leeds-eBooks/roots-i18n/issues/1\n\nDo you think I can go ahead and use the `roots-i18n` package name on `npm`?\n. Thanks man, I'll get this up today. Yeah I don't know what to do about he Babel stuff, I don't have time to rewrite it without es6, and I don't think we can assume that everyone is using the latest Node.js.\n\nI'll write up some tests when I have a bit more time!\n. FYI https://www.npmjs.com/package/roots-i18n\n. Thanks! :blush:\n\nIt is a little hacky though so any suggestions on how this could be integrated better into the rivets flow would be very welcome.\n. @Gioni06 Did you make a start on this? Thinking of starting myself but don't want to duplicate work!\n. Hi, new roots user, I was looking for something very specific and roots answered to every single part of it so thanks very much.\n\nI'm getting this error too and I thought I would describe my experience in case it helps (although I have no idea how to debug it usefully). I've managed to narrow it down to one very specific group of lines that break browserify when included in one of my modules. Take them out, it works fine, leave them in, the last 30ish lines of `build.js` are transposed to the top of the file. I can paste the lines if you think it might help but there is absolutely nothing special about them. But I guess there must be some combination of characters that is creating a problem somewhere in the process chain.\n\nHowever, this _only_ happens during `roots watch`, not `roots compile`, so I think it must have to do with #655 \n\nI'd love to help out if you can explain some way I might be able to debug this more usefully. Adding `debug: true` to `app.coffee` doesn't change the output of `roots watch` at all.\n\nThanks!\n. Thanks for the quick response! It fills me with confidence. Been getting to grips with multipass compilation and it's really fantastic \u2013 I thought I would have a nightmare trying to get scss to play nicely with postcss but it works perfectly. And `roots-records` is brilliant.\n\nAnyway yep, this bug was with `3.2.x`, and rolling back to `3.1.0` fixed it. In terms of supplying a sample reproduction of the problem I actually don't think I would be able to because it's so weirdly specific. My project was working completely fine on `3.2.x`, until I introduced these lines:\n\n``` javascript\n.then(userRes => {\n    const user = userRes.info || userRes,\n          dropin = [];\n\n    if (!user.dob) {\n      dropin.push({\n        key: \"dob\",\n        placeholder: \"date of birth\",\n        type: \"date\"\n      });\n    }\n    if (!user.address) {\n      dropin.push(...[{\n        key: 'address',\n        placeholder: 'address',\n        type: 'textarea',\n        attributes: {\n          rows: '2',\n          autocapitalize: 'words'\n        }\n      }, {\n        key: 'city',\n        placeholder: 'city',\n        type: 'text',\n        attributes: {\n          autocapitalize: 'words'\n        }\n      }, {\n        key: 'postcode',\n        placeholder: 'postcode',\n        type: 'text',\n        attributes: {\n          autocapitalize: 'characters'\n        }\n      }]);\n    }\n\n    if (dropin.length) {\n      return A.dropin(\n        'We need some extra information from you before you can accept the quote:',\n        dropin\n      ).then(data => ajax.post('url', data, A.getRestid()));\n    } else return Promise.resolve();\n  })\n  .then(() => ajax.get('url', A.getRestid(), cid + '/' + tid))\n  .catch(\n    message => message && message.toLowerCase().includes('add a credit card'),\n    () => ajax.customer.addCard().then(() => ajax.customer.pay(cid, tid))\n  )\n  .catch(\n    errors => errors && errors.toLowerCase().includes('string'),\n    errors => supersonic.ui.dialog.confirm(errors, {\n      message: 'String?',\n      buttonLabels: ['Yes', 'No']\n    }).then(i => i === 0 ?\n      ajax.customer.addCard().then(() => ajax.customer.pay(cid, tid)) :\n      Promise.reject(errors)\n    )\n  )\n  .then(res =>\n    res.redirect ? supersonic.app.openURL(res.redirect) : Promise.reject(res)\n  ),\n\npreAuth: (from, to, amount, offerId, preAuthorizationId) =>\n  ajax.get(\n    `url/${from}/${to}/${amount}/${offerId}?${\n      _.toQuery({preAuthorizationId})\n    }`, A.getRestid()\n  )\n```\n\nI was able to narrow it down to these exact lines (pasted here with some urls and strings renamed for legal reasons). If I left the `preAuth` method in, the bug happened, if I left the `.then()` function and its contents (which follow on from another method that didn't cause the bug) in, the bug happened. This is obviously es6 code, run through browserify with a babelify transform. I'm sure this won't be helpful as it seems completely arbitrary to me. There are no syntax errors in this chunk. My `app.coffee` browserify settings are:\n\n``` coffeescript\nbrowserify(\n  files: 'assets/js/main.js'\n  out: 'js/build.js'\n  transforms: 'babelify'\n)\n```\n\nAgain, this bug only happens with `watch`, not `compile`, so I think it must have to do with the server or related libraries. Any way I can debug the server processes?\n. Thanks man. Like I said if there's any way I can help out I'd be more than happy to spend some time on this.\n. I think this is the same bug I was epxeriencing here: #654 \n\nI think if you roll back to `3.1.0` you'll stop seeing this problem.\n. @tiktuk Are you using an environment argument? I have found that LiveReload doesn't work if you use `roots watch -e xyz`. For example, a basic project with an `app.coffee` works fine \u2013 change the filename to `app.dev.coffee` and run `roots watch -e dev` and livereload doesn't work. If this is not the case with your issue I will file a separate issue.\n. That's brilliant news! Thanks very much. Is that the browser sync branch?\n. A better solution would be to install roots _locally_: `npm install roots@2.4.1` **(no `-g`)**. Then in your `package.json` (in the root directory of your roots project), add the following to the `scripts` key:\n\n``` json\n\"watch\": \"roots watch\"\n```\n\nThen you just run `npm run watch` and it will use the local version of roots (local to the project).\n. Yes you do, and no it won't :)\n. If you don't already have a `package.json`, you'll need to run `npm init` in the project directory first.\n. No problem! Let me know if you have any problems.\n. Are you on version 3.2? If so, try rolling back to 3.1.0 and you should see the problem go away.\n\nI've been using roots for a few weeks now and I would say that it absolutely is ready for production (well, 3.1.0 is!). For some of the more complex things like i18n, it's immature compared with other solutions like Middleman or DocPad. But the benefits (written in JavaScript, the multipass compilation using Accord, the extensibility, the `roots-records` extension) outweigh this in my opinion. I have spent a fair amount of time working on roots extensions rather than specifically on my website code over the past few weeks \u2013 if you don't have that luxury, you may want to look elsewhere. But there are many things I like about this library and I feel like it has a solid future. Especially if people like you and me and other users of roots can get involved in its maintenance.\n. Interesting. What JS extensions are you using?\n. I am using `webpack` with a `babel` loader, which logs JS syntax errors on compile. Maybe you can use a js lint extension or lint using browserify somehow.\n. Pretty sure this is expected behaviour. The deploy command can't know what you have decided to call your production `app.coffee` file, I don't think it assumes it's called `app.production.coffee`. I could be wrong.\n. Oh I see. I'll have a look at the roots source, maybe this can be fixed in a quick pr. You can always write an npm script like `roots compile -e production && ship public/ -to heroku`. However, you might need to use my fork of roots [here](https://github.com/Leeds-eBooks/roots/tree/kill-compile) (the `kill-compile` branch) which quits the compile process, which otherwise just hangs.\n. Brilliant, thanks so much!. @jenius Has any progress been made on the extension? I'm interested in having a go myself, but I don't want to duplicate work.\n. I've actually got something working! It has one major caveat currently, and it's written very much to my specific use-case, but it could easily be made public-ready by swapping out some hard-coded values for user options. The caveat is that I have no idea how to make this work with `roots-records` template views.\n\nWhat it essentially does is take all your jade files, then for each language yaml file you have in `./i18n`, it swaps out handlebars-like `{{message.example}}` for the `message.example` property in the language yaml file.\n\nDo you think this has legs?\n\n``` javascript\nimport glob from 'glob'\nimport RootsUtil from 'roots-util'\nimport path from 'path'\nimport yaml from 'read-yaml'\nimport _ from '../assets/js/modules/underscore'\n\nexport default function(options) {\n\n  return class I18n {\n    constructor(roots) {\n      this.category = 'views'\n      this.util = new RootsUtil(roots)\n    }\n\n    fs() {\n      return {\n        extract: true,\n        detect: file => this.util.with_extension(file, ['jade'])\n      }\n    }\n\n    compile_hooks() {\n      return { // TODO use async methods and return Promise\n        write: ({roots, file_options, content}) =>\n          glob.sync(path.join(roots.root, 'i18n/*'))\n          .map(langFile => [\n            content.replace(/\\{\\{(\\S+)\\}\\}/g, (match, capture) =>\n              _.getPath(yaml.sync(langFile), capture)\n            ),\n            langFile\n          ]).map(([content, langFile]) => {\n            const p = file_options._path,\n                  dir = path.dirname(p),\n                  ext = path.extname(p),\n                  name = path.basename(p, ext),\n                  lang = path.basename(langFile, path.extname(langFile))\n\n            return {\n              content,\n              path: path.join('.', dir, `${name}.${lang}${ext}`),\n              extension: `${lang}${ext}`\n            }\n          })\n      }\n    }\n  }\n}\n```\n. @jenius With a few tweaks, this is working well for me, but I still haven't been able to make this work with `roots-records`. Looking at that extension's source code, it appears to be rendering single view templates \"outside\" the roots compilation flow, if that makes sense. See [this function](https://github.com/carrot/roots-records/blob/master/lib/index.coffee#L157).\n\nI think this means that there's no way, _within_ the roots flow, to grab the contents of those compiled views and modify them. I could do some funky command line scripting after the compile step \u2013 at this stage, is that the only solution, or can you think of another trick?\n. Just in case anyone comes across this that is looking for i18n support in roots, I have actually solved the problem of `roots-records` single-view templates now. I will put my module up as an npm package at some point soon.\n\n@jenius Is it ok to use the package name `roots-i18n`? Would you like to check the code before I publish?\n. Will do. It is pretty much the definition of hacky, but it works well for my purposes so I think it might help others too. Obviously if (when?) a better solution comes around, that would instantly take precedence. I'll be in touch soon.\n. @jenius https://github.com/Leeds-eBooks/roots-i18n\n. Haha you're right. I can't do a call tonight but I will comment the crap out of it and hopefully that will help, and if not we could chat later in the week. Thanks for taking a look so quickly!\n. Ok let me know if it makes any more sense now: https://github.com/Leeds-eBooks/roots-i18n\n. Hey @jenius I've been asked about getting this up on `npm` here: https://github.com/Leeds-eBooks/roots-i18n/issues/1\n\nDo you think I can go ahead and use the `roots-i18n` package name on `npm`?\n. Thanks man, I'll get this up today. Yeah I don't know what to do about he Babel stuff, I don't have time to rewrite it without es6, and I don't think we can assume that everyone is using the latest Node.js.\n\nI'll write up some tests when I have a bit more time!\n. FYI https://www.npmjs.com/package/roots-i18n\n. Thanks! :blush:\n\nIt is a little hacky though so any suggestions on how this could be integrated better into the rivets flow would be very welcome.\n. @Gioni06 Did you make a start on this? Thinking of starting myself but don't want to duplicate work!\n. Hi, new roots user, I was looking for something very specific and roots answered to every single part of it so thanks very much.\n\nI'm getting this error too and I thought I would describe my experience in case it helps (although I have no idea how to debug it usefully). I've managed to narrow it down to one very specific group of lines that break browserify when included in one of my modules. Take them out, it works fine, leave them in, the last 30ish lines of `build.js` are transposed to the top of the file. I can paste the lines if you think it might help but there is absolutely nothing special about them. But I guess there must be some combination of characters that is creating a problem somewhere in the process chain.\n\nHowever, this _only_ happens during `roots watch`, not `roots compile`, so I think it must have to do with #655 \n\nI'd love to help out if you can explain some way I might be able to debug this more usefully. Adding `debug: true` to `app.coffee` doesn't change the output of `roots watch` at all.\n\nThanks!\n. Thanks for the quick response! It fills me with confidence. Been getting to grips with multipass compilation and it's really fantastic \u2013 I thought I would have a nightmare trying to get scss to play nicely with postcss but it works perfectly. And `roots-records` is brilliant.\n\nAnyway yep, this bug was with `3.2.x`, and rolling back to `3.1.0` fixed it. In terms of supplying a sample reproduction of the problem I actually don't think I would be able to because it's so weirdly specific. My project was working completely fine on `3.2.x`, until I introduced these lines:\n\n``` javascript\n.then(userRes => {\n    const user = userRes.info || userRes,\n          dropin = [];\n\n    if (!user.dob) {\n      dropin.push({\n        key: \"dob\",\n        placeholder: \"date of birth\",\n        type: \"date\"\n      });\n    }\n    if (!user.address) {\n      dropin.push(...[{\n        key: 'address',\n        placeholder: 'address',\n        type: 'textarea',\n        attributes: {\n          rows: '2',\n          autocapitalize: 'words'\n        }\n      }, {\n        key: 'city',\n        placeholder: 'city',\n        type: 'text',\n        attributes: {\n          autocapitalize: 'words'\n        }\n      }, {\n        key: 'postcode',\n        placeholder: 'postcode',\n        type: 'text',\n        attributes: {\n          autocapitalize: 'characters'\n        }\n      }]);\n    }\n\n    if (dropin.length) {\n      return A.dropin(\n        'We need some extra information from you before you can accept the quote:',\n        dropin\n      ).then(data => ajax.post('url', data, A.getRestid()));\n    } else return Promise.resolve();\n  })\n  .then(() => ajax.get('url', A.getRestid(), cid + '/' + tid))\n  .catch(\n    message => message && message.toLowerCase().includes('add a credit card'),\n    () => ajax.customer.addCard().then(() => ajax.customer.pay(cid, tid))\n  )\n  .catch(\n    errors => errors && errors.toLowerCase().includes('string'),\n    errors => supersonic.ui.dialog.confirm(errors, {\n      message: 'String?',\n      buttonLabels: ['Yes', 'No']\n    }).then(i => i === 0 ?\n      ajax.customer.addCard().then(() => ajax.customer.pay(cid, tid)) :\n      Promise.reject(errors)\n    )\n  )\n  .then(res =>\n    res.redirect ? supersonic.app.openURL(res.redirect) : Promise.reject(res)\n  ),\n\npreAuth: (from, to, amount, offerId, preAuthorizationId) =>\n  ajax.get(\n    `url/${from}/${to}/${amount}/${offerId}?${\n      _.toQuery({preAuthorizationId})\n    }`, A.getRestid()\n  )\n```\n\nI was able to narrow it down to these exact lines (pasted here with some urls and strings renamed for legal reasons). If I left the `preAuth` method in, the bug happened, if I left the `.then()` function and its contents (which follow on from another method that didn't cause the bug) in, the bug happened. This is obviously es6 code, run through browserify with a babelify transform. I'm sure this won't be helpful as it seems completely arbitrary to me. There are no syntax errors in this chunk. My `app.coffee` browserify settings are:\n\n``` coffeescript\nbrowserify(\n  files: 'assets/js/main.js'\n  out: 'js/build.js'\n  transforms: 'babelify'\n)\n```\n\nAgain, this bug only happens with `watch`, not `compile`, so I think it must have to do with the server or related libraries. Any way I can debug the server processes?\n. Thanks man. Like I said if there's any way I can help out I'd be more than happy to spend some time on this.\n. I think this is the same bug I was epxeriencing here: #654 \n\nI think if you roll back to `3.1.0` you'll stop seeing this problem.\n. @tiktuk Are you using an environment argument? I have found that LiveReload doesn't work if you use `roots watch -e xyz`. For example, a basic project with an `app.coffee` works fine \u2013 change the filename to `app.dev.coffee` and run `roots watch -e dev` and livereload doesn't work. If this is not the case with your issue I will file a separate issue.\n. That's brilliant news! Thanks very much. Is that the browser sync branch?\n. A better solution would be to install roots _locally_: `npm install roots@2.4.1` **(no `-g`)**. Then in your `package.json` (in the root directory of your roots project), add the following to the `scripts` key:\n\n``` json\n\"watch\": \"roots watch\"\n```\n\nThen you just run `npm run watch` and it will use the local version of roots (local to the project).\n. Yes you do, and no it won't :)\n. If you don't already have a `package.json`, you'll need to run `npm init` in the project directory first.\n. No problem! Let me know if you have any problems.\n. Are you on version 3.2? If so, try rolling back to 3.1.0 and you should see the problem go away.\n\nI've been using roots for a few weeks now and I would say that it absolutely is ready for production (well, 3.1.0 is!). For some of the more complex things like i18n, it's immature compared with other solutions like Middleman or DocPad. But the benefits (written in JavaScript, the multipass compilation using Accord, the extensibility, the `roots-records` extension) outweigh this in my opinion. I have spent a fair amount of time working on roots extensions rather than specifically on my website code over the past few weeks \u2013 if you don't have that luxury, you may want to look elsewhere. But there are many things I like about this library and I feel like it has a solid future. Especially if people like you and me and other users of roots can get involved in its maintenance.\n. Interesting. What JS extensions are you using?\n. I am using `webpack` with a `babel` loader, which logs JS syntax errors on compile. Maybe you can use a js lint extension or lint using browserify somehow.\n. Pretty sure this is expected behaviour. The deploy command can't know what you have decided to call your production `app.coffee` file, I don't think it assumes it's called `app.production.coffee`. I could be wrong.\n. Oh I see. I'll have a look at the roots source, maybe this can be fixed in a quick pr. You can always write an npm script like `roots compile -e production && ship public/ -to heroku`. However, you might need to use my fork of roots [here](https://github.com/Leeds-eBooks/roots/tree/kill-compile) (the `kill-compile` branch) which quits the compile process, which otherwise just hangs.\n. Brilliant, thanks so much!. ",
    "toet": "Who says you're getting this username?\n\nAccording to Github support I am in no obligation to give it up so I won't.\n\nStop spamming me.\n\nSent from my iPhone\n\n> Op 30 jun. 2013 om 03:05 heeft Sean Lang notifications@github.com het volgende geschreven:\n> \n> made @roots-dev to hold stuff till we get that username\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Finally, Ben, thanks.\nIf you guys simply asked me instead of contacting Github first, spamming me and \"being dicks about it\", I would have been more than happy to help.\n\nI'll contact Github support and get this sorted.\n\nGood luck on the project, perhaps i'll use it some day :).\n\nRick\n\nOp 9 jul. 2013, om 20:22 heeft Ben Word het volgende geschreven:\n\n> you have no idea about the scope of our project, which doesn't matter anyway. even if @roots doesn't have public activity that doesn't mean it's squatting.\n> \n> you guys being dicks about it probably doesn't help anything.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Is this necessary?\n\nSsshhhh Sean.\n\nSent from my iPhone\n\n> Op 9 jul. 2013 om 20:59 heeft Sean Lang notifications@github.com het volgende geschreven:\n> \n> @retlehs - Yeah, I've used the roots WordPress starter theme, and I do freelance developing for WordPress themes. Thus, I know exactly what the scope of your project is. And yes, not having activity on a username (unless Rick actually has private repos) is exactly what squatting is.\n> \n> @roots - you can change your email notification settings so that you don't get \"spammed\"... but I suppose you don't come to GH often enough to notice that setting.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Declan, read my first email of the day ;).\n\nI have contacted GitHub support about handing over my username.\n\nSent from my iPhone\n\n> Op 9 jul. 2013 om 21:17 heeft Declan de Wet notifications@github.com het volgende geschreven:\n> \n> How old are all of you again? This behaviour somewhat resembles that of my sister and her friends. She's 12 years old. We're adults... I should not be the one reminding you all to act your age. We don't want either of our projects being associated with this kind of attitude.\n> \n> As for project scope - that really is no valid argument. Your project is a Wordpress theme - it's target market is smaller. Ours is an entire site generator for both static and dynamic content that supports precompilation of assets and includes a CSS library akin to Twitter's Bootstrap for those who prefer semantic HTML, so our target market is much larger. But yours is more established than ours, it's been around longer and has more contributors (though ours averages out to more commits per contributor). I'm not making an argument against your project or for ours - what I'm implying is that we can go on arguing the scope of each project and not get anywhere with it as there are an almost infinite number of reasons why one is larger than the other in specific areas.\n> \n> If I'm reading the name squatting policy correctly, it regards inactivity as squatting. By the book, @roots has been active on the site. He may not have public repos, he may or may not have private repos, I don't know for sure - but what I do know is that he's actively engaging with other users on the site. He's commenting on issues, replying to accidental (or not) mentions - so as far as Github is concerned, he's active. There's really nothing we can do about this right now, so let's be diplomatic about it and wait it out, perhaps a different opportunity will arise.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Who says you're getting this username?\n\nAccording to Github support I am in no obligation to give it up so I won't.\n\nStop spamming me.\n\nSent from my iPhone\n\n> Op 30 jun. 2013 om 03:05 heeft Sean Lang notifications@github.com het volgende geschreven:\n> \n> made @roots-dev to hold stuff till we get that username\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Finally, Ben, thanks.\nIf you guys simply asked me instead of contacting Github first, spamming me and \"being dicks about it\", I would have been more than happy to help.\n\nI'll contact Github support and get this sorted.\n\nGood luck on the project, perhaps i'll use it some day :).\n\nRick\n\nOp 9 jul. 2013, om 20:22 heeft Ben Word het volgende geschreven:\n\n> you have no idea about the scope of our project, which doesn't matter anyway. even if @roots doesn't have public activity that doesn't mean it's squatting.\n> \n> you guys being dicks about it probably doesn't help anything.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Is this necessary?\n\nSsshhhh Sean.\n\nSent from my iPhone\n\n> Op 9 jul. 2013 om 20:59 heeft Sean Lang notifications@github.com het volgende geschreven:\n> \n> @retlehs - Yeah, I've used the roots WordPress starter theme, and I do freelance developing for WordPress themes. Thus, I know exactly what the scope of your project is. And yes, not having activity on a username (unless Rick actually has private repos) is exactly what squatting is.\n> \n> @roots - you can change your email notification settings so that you don't get \"spammed\"... but I suppose you don't come to GH often enough to notice that setting.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Declan, read my first email of the day ;).\n\nI have contacted GitHub support about handing over my username.\n\nSent from my iPhone\n\n> Op 9 jul. 2013 om 21:17 heeft Declan de Wet notifications@github.com het volgende geschreven:\n> \n> How old are all of you again? This behaviour somewhat resembles that of my sister and her friends. She's 12 years old. We're adults... I should not be the one reminding you all to act your age. We don't want either of our projects being associated with this kind of attitude.\n> \n> As for project scope - that really is no valid argument. Your project is a Wordpress theme - it's target market is smaller. Ours is an entire site generator for both static and dynamic content that supports precompilation of assets and includes a CSS library akin to Twitter's Bootstrap for those who prefer semantic HTML, so our target market is much larger. But yours is more established than ours, it's been around longer and has more contributors (though ours averages out to more commits per contributor). I'm not making an argument against your project or for ours - what I'm implying is that we can go on arguing the scope of each project and not get anywhere with it as there are an almost infinite number of reasons why one is larger than the other in specific areas.\n> \n> If I'm reading the name squatting policy correctly, it regards inactivity as squatting. By the book, @roots has been active on the site. He may not have public repos, he may or may not have private repos, I don't know for sure - but what I do know is that he's actively engaging with other users on the site. He's commenting on issues, replying to accidental (or not) mentions - so as far as Github is concerned, he's active. There's really nothing we can do about this right now, so let's be diplomatic about it and wait it out, perhaps a different opportunity will arise.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "retlehs": "how do you know he's squatting? it's possible that he's got private repos that he uses.\n\nalso, this roots project is a lot smaller than https://github.com/retlehs/roots. we also contacted github the other week to reach out to roots, but if he's not wanting to give it up then it's not a big deal.\n. you have no idea about the scope of our project, which doesn't matter anyway. even if @roots doesn't have public activity that doesn't mean it's squatting. \n\nyou guys [being dicks about it](https://github.com/jenius/roots/issues/190#issuecomment-20249015) probably doesn't help anything.\n. how do you know he's squatting? it's possible that he's got private repos that he uses.\n\nalso, this roots project is a lot smaller than https://github.com/retlehs/roots. we also contacted github the other week to reach out to roots, but if he's not wanting to give it up then it's not a big deal.\n. you have no idea about the scope of our project, which doesn't matter anyway. even if @roots doesn't have public activity that doesn't mean it's squatting. \n\nyou guys [being dicks about it](https://github.com/jenius/roots/issues/190#issuecomment-20249015) probably doesn't help anything.\n. ",
    "tiojoca": "Ah, great, that seems to work fine, thanks! And yes, you're right, if `post.title` is set on `app.coffee` and on the post's front matter, the front matter `title` overrides the `app.coffee` variable.\n. Ah, great, that seems to work fine, thanks! And yes, you're right, if `post.title` is set on `app.coffee` and on the post's front matter, the front matter `title` overrides the `app.coffee` variable.\n. ",
    "yoshuawuyts": "What does the .cx extension stand for? You could go with something like that. But to be honest I'm really okay with roots staying under the /jenius/ name, I don't really think we're missing out on anything by having it here. \n. :+1: I approve\n. What does the .cx extension stand for? You could go with something like that. But to be honest I'm really okay with roots staying under the /jenius/ name, I don't really think we're missing out on anything by having it here. \n. :+1: I approve\n. ",
    "airtonix": "related to your problem with obtaining the @roots username, any google search for roots gives results for something to do with wordpress (ugh).\n\nPerhaps use the word \"Roots\" in another language as the username ?\n\nhttp://translate.google.com/#en/ja/root \n. @jenius can you elaborate more on how we can bundle our own view helpers?\n\nideally I was hoping for this : \n\n```\nlocals:\n  something: \"\"\n  something: \"\"\n  something: \"\"\n  darkside: require './view_helpers/darkside' \n```\n\nOr even better, simply require each file in `config.view_helpers`  directory: \n\n```\nmodule.exports.darkside = (something) ->\n ...\n```\n. related to your problem with obtaining the @roots username, any google search for roots gives results for something to do with wordpress (ugh).\n\nPerhaps use the word \"Roots\" in another language as the username ?\n\nhttp://translate.google.com/#en/ja/root \n. @jenius can you elaborate more on how we can bundle our own view helpers?\n\nideally I was hoping for this : \n\n```\nlocals:\n  something: \"\"\n  something: \"\"\n  something: \"\"\n  darkside: require './view_helpers/darkside' \n```\n\nOr even better, simply require each file in `config.view_helpers`  directory: \n\n```\nmodule.exports.darkside = (something) ->\n ...\n```\n. ",
    "DiegoAz": "Hi. I got the next error when trying : roots watch.  On Ubuntu 14.04 with roots@pre\n\nmodule.js:340\n    throw err;\n    ^\nError: Cannot find module 'axis'\n  at Function.Module._resolveFilename (module.js:338:15)\n  at Function.Module._load (module.js:280:25)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object.<anonymous> (/home/diego/Documents/Develop/Web/Jeet/app.coffee:1:16)\n  at Object.<anonymous> (/home/diego/Documents/Develop/Web/Jeet/app.coffee:1:1)\n  at Module._compile (module.js:456:26)\n  at Object.loadFile (/usr/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/register.js:16:19)\n  at Module.load (/usr/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/register.js:45:36)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Config.load_config (/usr/lib/node_modules/roots/lib/config.js:101:14)\n  at new Config (/usr/lib/node_modules/roots/lib/config.js:58:19)\n  at new Roots (/usr/lib/node_modules/roots/lib/index.js:48:21)\n  at module.exports (/usr/lib/node_modules/roots/lib/cli/watch.js:21:15)\n  at EventEmitter.module.exports.execute (/usr/lib/node_modules/roots/lib/cli/index.js:32:12)\n  at Object.<anonymous> (/usr/lib/node_modules/roots/bin/roots:30:5)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Function.Module.runMain (module.js:497:10)\n  at startup (node.js:119:16)\n  at node.js:906:3\n. Hi, I don't understand. According with the docs and the videotuts. You should 1. install node/npm 2. install roots or roots@pre. I understand when you install roots this include packages like axis in your new project when you create it with the command \"roots new ...\" isn't it ?. So when you create a new project at the project directory you should not install packages that should include roots like axis. Or it is necessary?\n. ok man. Thanks. ;)\n. @jenius The roots site. You thought I was trying to install Jeet?. Jeet is the project name, I want to practice doing that page.I did the installation of everything with roots 2 and all is working fine.\n. Hi. I was trying to install ROOTS and I had the same errors of @Flip4Bytes . I finally did. You need, in addition to Python 2.7.x, Microsoft Visual Studio (MVS) C++ Express 12+. I think must be the 12+ version from MVS because execSync package needs that (https://www.npmjs.org/package/execSync).\n. Finally I followed your suggest because I got the #332 bug.\n. Hi. I got the next error when trying : roots watch.  On Ubuntu 14.04 with roots@pre\n\nmodule.js:340\n    throw err;\n    ^\nError: Cannot find module 'axis'\n  at Function.Module._resolveFilename (module.js:338:15)\n  at Function.Module._load (module.js:280:25)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Object.<anonymous> (/home/diego/Documents/Develop/Web/Jeet/app.coffee:1:16)\n  at Object.<anonymous> (/home/diego/Documents/Develop/Web/Jeet/app.coffee:1:1)\n  at Module._compile (module.js:456:26)\n  at Object.loadFile (/usr/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/register.js:16:19)\n  at Module.load (/usr/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/register.js:45:36)\n  at Function.Module._load (module.js:312:12)\n  at Module.require (module.js:364:17)\n  at require (module.js:380:17)\n  at Config.load_config (/usr/lib/node_modules/roots/lib/config.js:101:14)\n  at new Config (/usr/lib/node_modules/roots/lib/config.js:58:19)\n  at new Roots (/usr/lib/node_modules/roots/lib/index.js:48:21)\n  at module.exports (/usr/lib/node_modules/roots/lib/cli/watch.js:21:15)\n  at EventEmitter.module.exports.execute (/usr/lib/node_modules/roots/lib/cli/index.js:32:12)\n  at Object.<anonymous> (/usr/lib/node_modules/roots/bin/roots:30:5)\n  at Module._compile (module.js:456:26)\n  at Object.Module._extensions..js (module.js:474:10)\n  at Module.load (module.js:356:32)\n  at Function.Module._load (module.js:312:12)\n  at Function.Module.runMain (module.js:497:10)\n  at startup (node.js:119:16)\n  at node.js:906:3\n. Hi, I don't understand. According with the docs and the videotuts. You should 1. install node/npm 2. install roots or roots@pre. I understand when you install roots this include packages like axis in your new project when you create it with the command \"roots new ...\" isn't it ?. So when you create a new project at the project directory you should not install packages that should include roots like axis. Or it is necessary?\n. ok man. Thanks. ;)\n. @jenius The roots site. You thought I was trying to install Jeet?. Jeet is the project name, I want to practice doing that page.I did the installation of everything with roots 2 and all is working fine.\n. Hi. I was trying to install ROOTS and I had the same errors of @Flip4Bytes . I finally did. You need, in addition to Python 2.7.x, Microsoft Visual Studio (MVS) C++ Express 12+. I think must be the 12+ version from MVS because execSync package needs that (https://www.npmjs.org/package/execSync).\n. Finally I followed your suggest because I got the #332 bug.\n. ",
    "mikedidthis": "So I am a stranger to this project, found this issue after searching for the umpteen time on parsing Tumblr themes locally in a sane manor. If there is anything I can do to please let me know.\n. So I am a stranger to this project, found this issue after searching for the umpteen time on parsing Tumblr themes locally in a sane manor. If there is anything I can do to please let me know.\n. ",
    "krry": "I like that pattern, think I'll keep it :) Turns out my problem was being confused about the leading hash-equals in \n    #= require \"_helper\"\n\nI'm new to coffeescript, thought that was commented out or something.  What does that do?  I have dug around in coffeescript docs for 20 mins now with no luck.\n\nOn 5 Aug 2013, at 7:35 PM, Jeff Escalante notifications@github.com wrote:\n\n> Oh, that's because _\\* is an ignore pattern set in app.coffee - it's just a convention that files with leading underscores are ignored. If this isn't your thing, you can always jump into app.coffee and remove that pattern : )\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Good lookin' out. I was using requirejs when I should've been using snockets.\n. In that case, how would you rig it up with require to concat the helper scripts without loading them into the DOM?\n. I like that pattern, think I'll keep it :) Turns out my problem was being confused about the leading hash-equals in \n    #= require \"_helper\"\n\nI'm new to coffeescript, thought that was commented out or something.  What does that do?  I have dug around in coffeescript docs for 20 mins now with no luck.\n\nOn 5 Aug 2013, at 7:35 PM, Jeff Escalante notifications@github.com wrote:\n\n> Oh, that's because _\\* is an ignore pattern set in app.coffee - it's just a convention that files with leading underscores are ignored. If this isn't your thing, you can always jump into app.coffee and remove that pattern : )\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Good lookin' out. I was using requirejs when I should've been using snockets.\n. In that case, how would you rig it up with require to concat the helper scripts without loading them into the DOM?\n. ",
    "chasevida": "maybe not the best place to ask, but it's slightly related. I can't find any documentation on how to deploy this to gh-pages (except this thread which hints at it). What command do you run exactly? `$ roots deploy origin gh-pages` doesn't work?\n. cheers, that worked.\n. Yes, dynamic content is what I'm referring too. I think you're right in that it's most likely best as an extension. Thanks for the links, I'll have a read through the docs, codebase and style guide to make a first pass at writing an extension. I wasn't aware of extension docs you linked to so that's helpful cheers.\n. Sounds good. Thanks again, I love this project and it's surrounding libs.\n. Hey @jenius, I've been working through the docs and it's coming along pretty good. \n\nMind if I ask a question about the [write hook](http://roots-web.bitballoon.com/docs/extensions#write-hook)? I was expecting that if returned a new object with `path` and `content` properties it would effectively replace the current write. However, it seems that it writes both the new file based on my object and the file file that was passed in. I can obviously return false to stop the write and perform an `fs` write file in this function myself or is there a way to replace the object that roots can then write?\n. I had read up on the extract property. My goal was to check the front matter from each post to determine if it should be included as an api endpoint and/or as the standard front end html. Perhaps I should give a quick outline of what I'm trying to achieve.\n\nMy goal with this plugin is really to do the following:\n1. Check if dynamic content should be included in the `api` via each files front matter\n2. Check that it should write solely to the `api` or to both the `api` and `front end html`\n3. Generate a json document representing the post that includes:\n   - front matter as document objects as well as the content\n   - compiled `content` markup that excludes it's `layout` markup\n4. Generate appropriate collection lists based on directory structure\n5. Write these json documents under an appropriate directory i.e. `/api/` (and if applicable cancel a front end html write)\n\nDoing it this way I thought the api could easily take both existing content and api specific content as required (no need to duplicate articles). This would allow say someone to create a basic SPA using push state as the url links would still exist as pages and the content would be synced.\n\nI can easily collect all the content and write it in a separate `api` directory but I feel it could offer a few more powerful options on how this information is presented.\n\nSo I guess I just need to know a few things:\n1. Can I use a roots method to compile the dynamic content from within a plugin?\n2. Can I use extract in the `fs` function to dynamically stop a write based on the files front matter or perform a similar check elsewhere? \n3. ~~Do I need to set a category property as I'm wanting to filter through all the dynamic content and not just one section?~~ _(I believe I can simply use 'dynamic' as the appropriate category)_\n. Yeah, I was aware there would be some significant cross over which is why I was interested in hooking into some core methods so I didn't duplicate jobs such as compiling and writing etc.\n\nIf you think it's better adding this into the dynamic content module I'm totally happy with that. Like I said I wrote a very basic api module no problem but when I wanted to add the features to make it more flexible I hit a few walls pretty quick in terms of keeping it optimal and roots like. So for my quick venture into suggestion 2 I'd agree that option 1 is better.\n\nIn terms of front matter, I'd actually used the similar logic with  `_api: true` and/or `_api: only` but you're right the `_render` method takes care of the latter. I'm still getting familiar with all of roots and v3 so I miss some of these elements occasionally.\n\nSo +1 on adding something like this to the dynamic content module.\n. Yeah I'm keen. I must admit I took a crash course on coffee-script on the weekend to write my initial extension... so give me a little bit of time but I'll have a crack at it, write some tests and then make a PR. Should be fun.\n. maybe not the best place to ask, but it's slightly related. I can't find any documentation on how to deploy this to gh-pages (except this thread which hints at it). What command do you run exactly? `$ roots deploy origin gh-pages` doesn't work?\n. cheers, that worked.\n. Yes, dynamic content is what I'm referring too. I think you're right in that it's most likely best as an extension. Thanks for the links, I'll have a read through the docs, codebase and style guide to make a first pass at writing an extension. I wasn't aware of extension docs you linked to so that's helpful cheers.\n. Sounds good. Thanks again, I love this project and it's surrounding libs.\n. Hey @jenius, I've been working through the docs and it's coming along pretty good. \n\nMind if I ask a question about the [write hook](http://roots-web.bitballoon.com/docs/extensions#write-hook)? I was expecting that if returned a new object with `path` and `content` properties it would effectively replace the current write. However, it seems that it writes both the new file based on my object and the file file that was passed in. I can obviously return false to stop the write and perform an `fs` write file in this function myself or is there a way to replace the object that roots can then write?\n. I had read up on the extract property. My goal was to check the front matter from each post to determine if it should be included as an api endpoint and/or as the standard front end html. Perhaps I should give a quick outline of what I'm trying to achieve.\n\nMy goal with this plugin is really to do the following:\n1. Check if dynamic content should be included in the `api` via each files front matter\n2. Check that it should write solely to the `api` or to both the `api` and `front end html`\n3. Generate a json document representing the post that includes:\n   - front matter as document objects as well as the content\n   - compiled `content` markup that excludes it's `layout` markup\n4. Generate appropriate collection lists based on directory structure\n5. Write these json documents under an appropriate directory i.e. `/api/` (and if applicable cancel a front end html write)\n\nDoing it this way I thought the api could easily take both existing content and api specific content as required (no need to duplicate articles). This would allow say someone to create a basic SPA using push state as the url links would still exist as pages and the content would be synced.\n\nI can easily collect all the content and write it in a separate `api` directory but I feel it could offer a few more powerful options on how this information is presented.\n\nSo I guess I just need to know a few things:\n1. Can I use a roots method to compile the dynamic content from within a plugin?\n2. Can I use extract in the `fs` function to dynamically stop a write based on the files front matter or perform a similar check elsewhere? \n3. ~~Do I need to set a category property as I'm wanting to filter through all the dynamic content and not just one section?~~ _(I believe I can simply use 'dynamic' as the appropriate category)_\n. Yeah, I was aware there would be some significant cross over which is why I was interested in hooking into some core methods so I didn't duplicate jobs such as compiling and writing etc.\n\nIf you think it's better adding this into the dynamic content module I'm totally happy with that. Like I said I wrote a very basic api module no problem but when I wanted to add the features to make it more flexible I hit a few walls pretty quick in terms of keeping it optimal and roots like. So for my quick venture into suggestion 2 I'd agree that option 1 is better.\n\nIn terms of front matter, I'd actually used the similar logic with  `_api: true` and/or `_api: only` but you're right the `_render` method takes care of the latter. I'm still getting familiar with all of roots and v3 so I miss some of these elements occasionally.\n\nSo +1 on adding something like this to the dynamic content module.\n. Yeah I'm keen. I must admit I took a crash course on coffee-script on the weekend to write my initial extension... so give me a little bit of time but I'll have a crack at it, write some tests and then make a PR. Should be fun.\n. ",
    "joshrowley": "yeah, have been putting this off too long, prob won't get to look at it today, but tomorrow night i'll try to wrap this bad boy up.\n. I looked at replacing `aws-sdk-js` with `knox`, however `knox` doesn't support some essential stuff we want to do like setting up the static website configuration programmatically, check if a bucket exists, creating buckets. Really only does file manipulation. I'm currently going through the SDK to try to identify why `aws-sdk-js` isn't catching errors correctly.\n. OK, this should be in a lot better shape now. Take a look and let me know whether anything else needs to be added for this to get merged in.\n. Yep, just added one last commit addressing a couple things, should be good to go.\n. Hey @samccone @jenius , i took care of the couple small things (named function for getting the project folder name, squash the mime lib commits), and started extracting error messages into a json file. My progress is on a separate branch right now, you can find it here: https://github.com/joshrowley/roots/commit/60eb7d3b0bb405ddf2c38f11fe0da3a303af3e7c.\n\nI didn't include it in the PR yet because I wasn't sure of the best way to handle times when I have messaging that requires dynamic content inserted into the string.\n. :+1: look forward to using this\n. :+1: \n\n:tada: :clap: :confetti_ball: :clap: :tada: :clap:  :confetti_ball: \n\nWell done @jenius.\n. :tada: we have [middleware support](https://github.com/divshot/superstatic/issues/64#issuecomment-41332338), will update this soon\n. Updated with infestor, but having trouble with getting the web sockets portion working. Problem is that we aren't able to add the event listener to the connect server [before `listen` is called on it](https://github.com/divshot/superstatic/blob/master/lib/server/index.js#L92). I thought maybe we could [add it afterwards](http://stackoverflow.com/questions/6246052/http-server-doesnt-have-addlistener-in-node-js-it-isnt-a-event-emitter), but that doesn't seem to work. I've never really worked with websockets at all, so if anyone wants to take a look here's [my attempt](https://github.com/joshrowley/roots/commit/844b0e02e751ac65c88b971b803760c3eca6a4f4).\n\nWe might need divshot to expand their API in order to expose the server before it starts listening so that we can attach the listener.\n. This is working and functional, just waiting on a [patch](https://github.com/divshot/superstatic/pull/65) to superstatic. In the mean time, I temporarily pull the dependency from our fork.\n. Closing this, we will use [charge](https://github.com/carrot/charge).\n. :+1: Yes this would be great. I'll work on getting that added to https://github.com/jenius/roots/pull/451\n. :+1: I got this same error starting this morning on v2.1.3 . I'll try to capture more info if it happens again.\n. @slang800 Good catches, I'll revise this PR later today.\n. @nporteschaikin I think your example wouldn't match multiple extensions, but maybe @slang800 can enlighten us with why he thinks it's so funny.\n\n`res.replace(///\\.[^#{path.sep}]*$///, \".#{ext}\")` is still problematic though if the file name contains a `.` before the beginning of the extension. I'm sure @jenius has a lot of experience with this, what are the criteria for determining what's an extension or not. Maybe we only replace if the matched extensions match a compiler that's registered with Roots?\n. Hey, so I spoke with @jenius, we're not concerned with dots in the name of compiled files, if you have a file that needs to be compiled it should **not** have a dot in it.\n\nI updated the regex with @slang800's regex and added tests, should be ready to merge once this (hopefully) passes on Travis.\n. @samccone I don't know the best way to recreate the conditions that cause this failure in the test suite, if you know I'm all ears. But previously this was just failing silently and it was quite difficult to track down.\n. I was waiting to PR this to the main repo because I think there should be a cleaner way to do it.\n. @jenius :+1: Yeah I think `path` should probably be underscored.\n. @jenius :+1: updated, tests passing, ready for merge\n. @jenius yo, added tests to check that the limit is raised correctly, and moved the call into `Config`, let's merge?\n. Are there tests for the workers functionality? This seems to belong with those, plus I wanted to see how one would test the workers being created.\n\nOr I guess I could test a fixture that has dynamic content loaded and checks that all the content made it? Kind of an indirect way to test  this.\n. @jenius :+1: test added\n. I'm sure there's some way to remove posix from this, but I remember sinking a lot of time into trying to figure out an alternative. I can take a look at this, I'm just tied up with other work and I'm not sure when I'll get to it. I'll ping you in this thread when I have a chance to take a look.\n. @jenius @slang800 I tried swapping graceful-fs into accord as well as the jade compiler itself, but I'm still receiving `EMFILE` errors when compiling large projects. Setting both `soft` and `hard` here will allow it to compile it correctly on Linux, and I kept the `try` in there for Windows. I can't find a way past `EMFILE` errors otherwise.\n. Are we gonna have to submit patches to every compiler accord supports that uses `fs`?\n. I just need to compile the project correctly, I don't want to wait for another project (not controlled by us) to get patched.\n. Cool, yeah, if you're making improvements to jade, I'm all for that. This just has a small change that actually allows linux to not fail because i'm now setting both soft and hard limit (it was failing before because i was setting the soft limit higher than the hard limit, but i left the `try` for windows to fail silently.\n. :+1: yup\n. Cool, yeah sounds good, I'll take a look tomorrow :+1: .\n. @jenius tests added!\n. Ah yes, I'll take a look at that. It appears that the entire `process.env` object is passed into the `Roots` constructor's options if `--env` isn't supplied on the command line, causing a lot of things to break.\n. @jenius hey dude, this has the latest work we did together attempting to fix the testing issues.\n. yeah i can confirm this issue, caused some difficulty with catching CLI errors correctly with the contentful deployer i was working on\n. Ah, nevermind, this is handled fine by the `directories` key in `package.json`, I thought this was an issue but it was just being caused by a mistake in my own code.\n. @aesnyder yup [carrot.is](http://carrot.is) is running on roots v3 and working great! It's also managed by an external CMS, [Contentful](https://www.contentful.com/) that we were able to create using roots extensions API. We wrote a [blog post](http://carrot.is/coding/static_cms) about it as well if you wanna learn more.\n\nOther than that, definitely check out our [roots extensions](https://github.com/carrot/?query=roots) to see what other goodies we have.\n. You should take a look at [roots-records](https://github.com/carrot/roots-records), an extension that allows you to do exactly that. It will load JSON data from a file for use in your jade views. There's also a [roots-yaml](https://github.com/carrot/roots-yaml) extension if you prefer that data structure format.\n. I have a PR open for it! https://github.com/jenius/roots/pull/625\n\nIt's been a while so the code isn't fresh in my mind. There were a couple last things you wanted me to do with it. I'll take a peek at it this weekend and figure out the remaining steps left so it's ready for a merge.\n. Also, we can do this for other config options in `app.coffee` (like `server` and the boolean options), but I wanted to start with the ones I would personally find the most useful\n. @jenius Yeah, I think I broke handling `app.coffee` files that don't export node style. Will have fix soon.\n. @jenius nevermind, all that was mine, just needed to set a default empty array for extensions if the conf file didn't have that key.\n. yay, tests passing :+1: \n. @jenius One issue that @nporteschaikin brought up (in Slack) is that the extension replacement logic won't work if the extension doesn't have a `name` property (i.e. you use an anonymous function)\n. Yup, will add that name check!\n. @dbox That's a perfect use case for roots extensions. There's a [roots-netlify](https://github.com/carrot/roots-netlify) extension that writes config files for a static hosting platform called [Netlify](https://www.netlify.com/). It's a good starting point for figuring out how to write an extension for writing an `.htaccess` file.\n. One solution is to specify the roots version in `package.json` and then add an alias in your bash profile: `alias roots-local=\"./node_modules/roots/bin/roots\"`, then run `roots-local` whenever you want to run the version of roots specific to the project you're working on.\n. yeah, have been putting this off too long, prob won't get to look at it today, but tomorrow night i'll try to wrap this bad boy up.\n. I looked at replacing `aws-sdk-js` with `knox`, however `knox` doesn't support some essential stuff we want to do like setting up the static website configuration programmatically, check if a bucket exists, creating buckets. Really only does file manipulation. I'm currently going through the SDK to try to identify why `aws-sdk-js` isn't catching errors correctly.\n. OK, this should be in a lot better shape now. Take a look and let me know whether anything else needs to be added for this to get merged in.\n. Yep, just added one last commit addressing a couple things, should be good to go.\n. Hey @samccone @jenius , i took care of the couple small things (named function for getting the project folder name, squash the mime lib commits), and started extracting error messages into a json file. My progress is on a separate branch right now, you can find it here: https://github.com/joshrowley/roots/commit/60eb7d3b0bb405ddf2c38f11fe0da3a303af3e7c.\n\nI didn't include it in the PR yet because I wasn't sure of the best way to handle times when I have messaging that requires dynamic content inserted into the string.\n. :+1: look forward to using this\n. :+1: \n\n:tada: :clap: :confetti_ball: :clap: :tada: :clap:  :confetti_ball: \n\nWell done @jenius.\n. :tada: we have [middleware support](https://github.com/divshot/superstatic/issues/64#issuecomment-41332338), will update this soon\n. Updated with infestor, but having trouble with getting the web sockets portion working. Problem is that we aren't able to add the event listener to the connect server [before `listen` is called on it](https://github.com/divshot/superstatic/blob/master/lib/server/index.js#L92). I thought maybe we could [add it afterwards](http://stackoverflow.com/questions/6246052/http-server-doesnt-have-addlistener-in-node-js-it-isnt-a-event-emitter), but that doesn't seem to work. I've never really worked with websockets at all, so if anyone wants to take a look here's [my attempt](https://github.com/joshrowley/roots/commit/844b0e02e751ac65c88b971b803760c3eca6a4f4).\n\nWe might need divshot to expand their API in order to expose the server before it starts listening so that we can attach the listener.\n. This is working and functional, just waiting on a [patch](https://github.com/divshot/superstatic/pull/65) to superstatic. In the mean time, I temporarily pull the dependency from our fork.\n. Closing this, we will use [charge](https://github.com/carrot/charge).\n. :+1: Yes this would be great. I'll work on getting that added to https://github.com/jenius/roots/pull/451\n. :+1: I got this same error starting this morning on v2.1.3 . I'll try to capture more info if it happens again.\n. @slang800 Good catches, I'll revise this PR later today.\n. @nporteschaikin I think your example wouldn't match multiple extensions, but maybe @slang800 can enlighten us with why he thinks it's so funny.\n\n`res.replace(///\\.[^#{path.sep}]*$///, \".#{ext}\")` is still problematic though if the file name contains a `.` before the beginning of the extension. I'm sure @jenius has a lot of experience with this, what are the criteria for determining what's an extension or not. Maybe we only replace if the matched extensions match a compiler that's registered with Roots?\n. Hey, so I spoke with @jenius, we're not concerned with dots in the name of compiled files, if you have a file that needs to be compiled it should **not** have a dot in it.\n\nI updated the regex with @slang800's regex and added tests, should be ready to merge once this (hopefully) passes on Travis.\n. @samccone I don't know the best way to recreate the conditions that cause this failure in the test suite, if you know I'm all ears. But previously this was just failing silently and it was quite difficult to track down.\n. I was waiting to PR this to the main repo because I think there should be a cleaner way to do it.\n. @jenius :+1: Yeah I think `path` should probably be underscored.\n. @jenius :+1: updated, tests passing, ready for merge\n. @jenius yo, added tests to check that the limit is raised correctly, and moved the call into `Config`, let's merge?\n. Are there tests for the workers functionality? This seems to belong with those, plus I wanted to see how one would test the workers being created.\n\nOr I guess I could test a fixture that has dynamic content loaded and checks that all the content made it? Kind of an indirect way to test  this.\n. @jenius :+1: test added\n. I'm sure there's some way to remove posix from this, but I remember sinking a lot of time into trying to figure out an alternative. I can take a look at this, I'm just tied up with other work and I'm not sure when I'll get to it. I'll ping you in this thread when I have a chance to take a look.\n. @jenius @slang800 I tried swapping graceful-fs into accord as well as the jade compiler itself, but I'm still receiving `EMFILE` errors when compiling large projects. Setting both `soft` and `hard` here will allow it to compile it correctly on Linux, and I kept the `try` in there for Windows. I can't find a way past `EMFILE` errors otherwise.\n. Are we gonna have to submit patches to every compiler accord supports that uses `fs`?\n. I just need to compile the project correctly, I don't want to wait for another project (not controlled by us) to get patched.\n. Cool, yeah, if you're making improvements to jade, I'm all for that. This just has a small change that actually allows linux to not fail because i'm now setting both soft and hard limit (it was failing before because i was setting the soft limit higher than the hard limit, but i left the `try` for windows to fail silently.\n. :+1: yup\n. Cool, yeah sounds good, I'll take a look tomorrow :+1: .\n. @jenius tests added!\n. Ah yes, I'll take a look at that. It appears that the entire `process.env` object is passed into the `Roots` constructor's options if `--env` isn't supplied on the command line, causing a lot of things to break.\n. @jenius hey dude, this has the latest work we did together attempting to fix the testing issues.\n. yeah i can confirm this issue, caused some difficulty with catching CLI errors correctly with the contentful deployer i was working on\n. Ah, nevermind, this is handled fine by the `directories` key in `package.json`, I thought this was an issue but it was just being caused by a mistake in my own code.\n. @aesnyder yup [carrot.is](http://carrot.is) is running on roots v3 and working great! It's also managed by an external CMS, [Contentful](https://www.contentful.com/) that we were able to create using roots extensions API. We wrote a [blog post](http://carrot.is/coding/static_cms) about it as well if you wanna learn more.\n\nOther than that, definitely check out our [roots extensions](https://github.com/carrot/?query=roots) to see what other goodies we have.\n. You should take a look at [roots-records](https://github.com/carrot/roots-records), an extension that allows you to do exactly that. It will load JSON data from a file for use in your jade views. There's also a [roots-yaml](https://github.com/carrot/roots-yaml) extension if you prefer that data structure format.\n. I have a PR open for it! https://github.com/jenius/roots/pull/625\n\nIt's been a while so the code isn't fresh in my mind. There were a couple last things you wanted me to do with it. I'll take a peek at it this weekend and figure out the remaining steps left so it's ready for a merge.\n. Also, we can do this for other config options in `app.coffee` (like `server` and the boolean options), but I wanted to start with the ones I would personally find the most useful\n. @jenius Yeah, I think I broke handling `app.coffee` files that don't export node style. Will have fix soon.\n. @jenius nevermind, all that was mine, just needed to set a default empty array for extensions if the conf file didn't have that key.\n. yay, tests passing :+1: \n. @jenius One issue that @nporteschaikin brought up (in Slack) is that the extension replacement logic won't work if the extension doesn't have a `name` property (i.e. you use an anonymous function)\n. Yup, will add that name check!\n. @dbox That's a perfect use case for roots extensions. There's a [roots-netlify](https://github.com/carrot/roots-netlify) extension that writes config files for a static hosting platform called [Netlify](https://www.netlify.com/). It's a good starting point for figuring out how to write an extension for writing an `.htaccess` file.\n. One solution is to specify the roots version in `package.json` and then add an alias in your bash profile: `alias roots-local=\"./node_modules/roots/bin/roots\"`, then run `roots-local` whenever you want to run the version of roots specific to the project you're working on.\n. ",
    "corysimmons": "That's what Bourbon does with Neat. http://neat.bourbon.io but since Axis really is just a collection of nice Stylus mixins, you might want to fresh domain it at like axis.io or something with a cool chunky logo (with infinite shadow ofc).\n\nI'm going to be keeping Jeet separate with it's own domain and branding, you've got Axis separate.\n\nRoots is really just a collection of tools much like Jeet started off. Axis is one of those tools.\n. Make it easily extensible though. Could you make Axis it's own npm package if it's not already?\n\nI want Jeet to be a standalone grid framework as well as be a part of Roots, so it'd be nice if I could use Axis with Jeet's standalone npm package.\n. Also, my portfolio is really ugly and doesn't reflect my quality of work nowadays at all. Lemme work on this Jeet thing this weekend, then let me have a shot at the Axis brand/design/dev, and if I'm awesome at it, you should be an awesome guy and put in a good word for me for realz. :)\n. Awesome. Thought it might be but was too lazy to check.\n. It should be ignoring the entire `jeet/` folder right? https://github.com/mojotech/jeet-roots/blob/master/app.coffee\n. Not sure why it works, but it works: https://github.com/mojotech/jeet-roots/commit/5058cc0d36ede3e2bee504178178d68616bea17a\n\nThanks @declandewet \n. I suppose they compile directly when someone saves them.\n\nSo is this a Stylus convention you guys have?\n\n@jenius Would you suggest I update the Jeet repo itself to prelude every file (except `index.styl`) in https://github.com/mojotech/jeet/tree/master/jeet with underscores?\n. If you can't accept jeet as a dep then let me know so I can try to figure something else out. I don't think it hurts anything though since it's version locked and just gives access to another option for `css_library`\n. I agree. I think @jenius _might_ be adding that to the fancy new version of Roots so this is just kind of a bandage until then.\n. @samccone If you're as confident as I am that this won't hurt anything, would you mind merging? I have a few projects I'm collaborating on in Jeet 4 right now and it's so much easier when we don't have to fork Roots beforehand.\n. No problem, I understand.\n. @jenius This needs solved regardless: https://github.com/mojotech/jeet-roots/issues/6\n. Jeet isn't just a Stylus library. It works with Autoprefixer too. Much like Axis has Autoprefixer built-in, yet Roots uses it.\n\nPull Autoprefixer out of Axis and put it in Roots instead and I can solve the rest on my end.\n\nIt's clashing with jeet.js (needed for Autoprefixer).\n\nFixing it via package.json isn't the right way to do it, but giving Axis special treatment isn't either. Just do this as a bandage until your new/modular version of Roots launches.\n. \"Closed\". So we dropped Jeet's npm watcher for Roots watching and now we don't get that..?\n. Ok I understand. Good work on autoprefixer-stylus btw. I'll take out Autoprefixer in jeet-roots for now so it's compatible at least.\n\nAny ETA on this fancy new Roots?\n. Sound great. Sorry about being a thorn lately. Patience acquired.\n. Seems to be Jade's default behavior. TJ offers a way to fix this in the pipeline: http://stackoverflow.com/questions/7991782/how-can-express-and-jade-does-not-compress-html Maybe worth figuring out a way to get this in v3 so `no-compress` doesn't compress html.\n. np, roots 3 is starting to grow on me\n. That's what Bourbon does with Neat. http://neat.bourbon.io but since Axis really is just a collection of nice Stylus mixins, you might want to fresh domain it at like axis.io or something with a cool chunky logo (with infinite shadow ofc).\n\nI'm going to be keeping Jeet separate with it's own domain and branding, you've got Axis separate.\n\nRoots is really just a collection of tools much like Jeet started off. Axis is one of those tools.\n. Make it easily extensible though. Could you make Axis it's own npm package if it's not already?\n\nI want Jeet to be a standalone grid framework as well as be a part of Roots, so it'd be nice if I could use Axis with Jeet's standalone npm package.\n. Also, my portfolio is really ugly and doesn't reflect my quality of work nowadays at all. Lemme work on this Jeet thing this weekend, then let me have a shot at the Axis brand/design/dev, and if I'm awesome at it, you should be an awesome guy and put in a good word for me for realz. :)\n. Awesome. Thought it might be but was too lazy to check.\n. It should be ignoring the entire `jeet/` folder right? https://github.com/mojotech/jeet-roots/blob/master/app.coffee\n. Not sure why it works, but it works: https://github.com/mojotech/jeet-roots/commit/5058cc0d36ede3e2bee504178178d68616bea17a\n\nThanks @declandewet \n. I suppose they compile directly when someone saves them.\n\nSo is this a Stylus convention you guys have?\n\n@jenius Would you suggest I update the Jeet repo itself to prelude every file (except `index.styl`) in https://github.com/mojotech/jeet/tree/master/jeet with underscores?\n. If you can't accept jeet as a dep then let me know so I can try to figure something else out. I don't think it hurts anything though since it's version locked and just gives access to another option for `css_library`\n. I agree. I think @jenius _might_ be adding that to the fancy new version of Roots so this is just kind of a bandage until then.\n. @samccone If you're as confident as I am that this won't hurt anything, would you mind merging? I have a few projects I'm collaborating on in Jeet 4 right now and it's so much easier when we don't have to fork Roots beforehand.\n. No problem, I understand.\n. @jenius This needs solved regardless: https://github.com/mojotech/jeet-roots/issues/6\n. Jeet isn't just a Stylus library. It works with Autoprefixer too. Much like Axis has Autoprefixer built-in, yet Roots uses it.\n\nPull Autoprefixer out of Axis and put it in Roots instead and I can solve the rest on my end.\n\nIt's clashing with jeet.js (needed for Autoprefixer).\n\nFixing it via package.json isn't the right way to do it, but giving Axis special treatment isn't either. Just do this as a bandage until your new/modular version of Roots launches.\n. \"Closed\". So we dropped Jeet's npm watcher for Roots watching and now we don't get that..?\n. Ok I understand. Good work on autoprefixer-stylus btw. I'll take out Autoprefixer in jeet-roots for now so it's compatible at least.\n\nAny ETA on this fancy new Roots?\n. Sound great. Sorry about being a thorn lately. Patience acquired.\n. Seems to be Jade's default behavior. TJ offers a way to fix this in the pipeline: http://stackoverflow.com/questions/7991782/how-can-express-and-jade-does-not-compress-html Maybe worth figuring out a way to get this in v3 so `no-compress` doesn't compress html.\n. np, roots 3 is starting to grow on me\n. ",
    "dbox": "+1\n. @hhsnopek Is this something in your wheelhouse? Was just using another project with browsersync and it's soo fast.\n. Great idea @joshrowley \n. I would use this\n. This isn't the extension, but @hhsnopek just helped me get a sample roots-bower setup going:\n\nhttps://github.com/dbox/roots-bower\n\nThe biggest issue was trying to get rid of the bower_components folder in `public/`\n. https://www.npmjs.com/package/bower-installer This might be helpful too\n. Fwiw, I rescind my +1. Npm does everything I need now.\n. Thanks @kylemac. Yeah, sorry I wasn't clear. Basically I'm wanting roots to auto-magically generate the mod-rewrite rules to the .htaccess file. Basically the same thing it's doing for netlify: `mysite.com/about.html` -> `mysite.com/about/`\n\nObviously it can be done manually but that's the beauty of roots. Taking away all the dirty work. :smile: \n\nIf this is out of scope of roots, totally understandable, but it'd be super handy.\n. @kylemac but wouldn't it be _awesome_ if roots (or an extension) automagically wrote that `.htacess` file for you? :smile: \n. Thanks @joshrowley. Might be a little over my head at the moment, but hopefully someone can take it on. \n. Well awesome. Didnt know you could do that. Thanks!\n. @pjv do `npm install jstransformer-marked --save` then change all `:markdown` instances to `:marked`\n\nbtw @jenius this is what was going on with axis-www\n. no, i think only an axis bump. I can do it this weekend.\n. Can verify happening in 3.2.2\n. I'm not even sure you need a sample project. I assume all 3.2.2 projects have broken images.\n\nHere's a repo:\n\nhttps://github.com/dbox/roots-image-test\n\nImage worked in 3.1.0. Upgraded globally to 3.2.2 and image was broken.\n. @molovo Yes, it's fixed here: https://github.com/jenius/roots/pull/681\n. You mean #655? I posted a test repo in there you can check against.\n. And there was much rejoicing.\n\nThanks!! You're the best.\n. :open_mouth: :open_mouth: :tada: \n. were you able to isolate something that was throwing `roots segmentation fault` ?\n. :tada: What's the best way to test a site with a non-published version of roots?\n. Great. Thanks. Do I need to merge `deps` and this branch first?\n. - [x] Image issue fixed\n- [x] font issue fixed\n- [x] browsersync working\n. 2 other repos (my original image demo + axis-www) give this error:\n\n```\nPotentially unhandled rejection [1] TypeError: Cannot read property 'clean_urls' of undefined\n  at Server.start (/Users/danielbox/sites/dev/roots/lib/local_server.coffee:46:12)\n  at dispatch (/Users/danielbox/sites/dev/roots/node_modules/when/node.js:70:15)\n  at callAndResolve (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:30:12)\n  at callAndResolveNext (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:40:4)\n  at tryCatchReject3 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:856:7)\n  at runContinuation3 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:814:4)\n  at Fulfilled.fold (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:588:4)\n  at callAndResolve (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:34:12)\n  at apply (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:23:4)\n  at Object.call (/Users/danielbox/sites/dev/roots/node_modules/when/node.js:107:10)\n  at Compile.<anonymous> (/Users/danielbox/sites/dev/roots/lib/cli/watch.coffee:44:12)\n  at tryCatchReject (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:845:30)\n  at runContinuation1 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:804:4)\n  at Fulfilled.when (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:592:4)\n  at Pending.run (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:483:13)\n  at Scheduler._drain (/Users/danielbox/sites/dev/roots/node_modules/when/lib/Scheduler.js:62:19)\n  at Scheduler.drain (/Users/danielbox/sites/dev/roots/node_modules/when/lib/Scheduler.js:27:9)\n  at process._tickCallback (node.js:442:13)\n```\n\nwhich shuts down the watcher\n. ![giphy-1](https://cloud.githubusercontent.com/assets/296130/10178734/2a9e6e36-66c7-11e5-9a55-9988400944a3.gif)\n\nWorking on my end now!\n. Thanks as always. I :heart:  roots\n. whooot!\n. +1\n. @hhsnopek Is this something in your wheelhouse? Was just using another project with browsersync and it's soo fast.\n. Great idea @joshrowley \n. I would use this\n. This isn't the extension, but @hhsnopek just helped me get a sample roots-bower setup going:\n\nhttps://github.com/dbox/roots-bower\n\nThe biggest issue was trying to get rid of the bower_components folder in `public/`\n. https://www.npmjs.com/package/bower-installer This might be helpful too\n. Fwiw, I rescind my +1. Npm does everything I need now.\n. Thanks @kylemac. Yeah, sorry I wasn't clear. Basically I'm wanting roots to auto-magically generate the mod-rewrite rules to the .htaccess file. Basically the same thing it's doing for netlify: `mysite.com/about.html` -> `mysite.com/about/`\n\nObviously it can be done manually but that's the beauty of roots. Taking away all the dirty work. :smile: \n\nIf this is out of scope of roots, totally understandable, but it'd be super handy.\n. @kylemac but wouldn't it be _awesome_ if roots (or an extension) automagically wrote that `.htacess` file for you? :smile: \n. Thanks @joshrowley. Might be a little over my head at the moment, but hopefully someone can take it on. \n. Well awesome. Didnt know you could do that. Thanks!\n. @pjv do `npm install jstransformer-marked --save` then change all `:markdown` instances to `:marked`\n\nbtw @jenius this is what was going on with axis-www\n. no, i think only an axis bump. I can do it this weekend.\n. Can verify happening in 3.2.2\n. I'm not even sure you need a sample project. I assume all 3.2.2 projects have broken images.\n\nHere's a repo:\n\nhttps://github.com/dbox/roots-image-test\n\nImage worked in 3.1.0. Upgraded globally to 3.2.2 and image was broken.\n. @molovo Yes, it's fixed here: https://github.com/jenius/roots/pull/681\n. You mean #655? I posted a test repo in there you can check against.\n. And there was much rejoicing.\n\nThanks!! You're the best.\n. :open_mouth: :open_mouth: :tada: \n. were you able to isolate something that was throwing `roots segmentation fault` ?\n. :tada: What's the best way to test a site with a non-published version of roots?\n. Great. Thanks. Do I need to merge `deps` and this branch first?\n. - [x] Image issue fixed\n- [x] font issue fixed\n- [x] browsersync working\n. 2 other repos (my original image demo + axis-www) give this error:\n\n```\nPotentially unhandled rejection [1] TypeError: Cannot read property 'clean_urls' of undefined\n  at Server.start (/Users/danielbox/sites/dev/roots/lib/local_server.coffee:46:12)\n  at dispatch (/Users/danielbox/sites/dev/roots/node_modules/when/node.js:70:15)\n  at callAndResolve (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:30:12)\n  at callAndResolveNext (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:40:4)\n  at tryCatchReject3 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:856:7)\n  at runContinuation3 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:814:4)\n  at Fulfilled.fold (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:588:4)\n  at callAndResolve (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:34:12)\n  at apply (/Users/danielbox/sites/dev/roots/node_modules/when/lib/apply.js:23:4)\n  at Object.call (/Users/danielbox/sites/dev/roots/node_modules/when/node.js:107:10)\n  at Compile.<anonymous> (/Users/danielbox/sites/dev/roots/lib/cli/watch.coffee:44:12)\n  at tryCatchReject (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:845:30)\n  at runContinuation1 (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:804:4)\n  at Fulfilled.when (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:592:4)\n  at Pending.run (/Users/danielbox/sites/dev/roots/node_modules/when/lib/makePromise.js:483:13)\n  at Scheduler._drain (/Users/danielbox/sites/dev/roots/node_modules/when/lib/Scheduler.js:62:19)\n  at Scheduler.drain (/Users/danielbox/sites/dev/roots/node_modules/when/lib/Scheduler.js:27:9)\n  at process._tickCallback (node.js:442:13)\n```\n\nwhich shuts down the watcher\n. ![giphy-1](https://cloud.githubusercontent.com/assets/296130/10178734/2a9e6e36-66c7-11e5-9a55-9988400944a3.gif)\n\nWorking on my end now!\n. Thanks as always. I :heart:  roots\n. whooot!\n. ",
    "embrown30": "OK, I will try that real quick and let you know what happens!\nThanks for the quick reply\n\nOn Wed, Oct 9, 2013 at 12:45 PM, Jeff Escalante notifications@github.comwrote:\n\n> I would try two things to fix this:\n> 1. Run the command with sudo\n> 2. Make sure you have XCode installed through the app store, and that\n>    you have also installed command line tools (you need this for the C\n>    compiler)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/241#issuecomment-25987223\n> .\n\n## \n\n_\"via et veritas et vita...\"_\n- -- Jesus\n  *\n  John 14:6\n\nErica Brown\nem.brown30@gmail.com\n. it worked...\nI had to install XCode and the command line tools!\nthx\n\nOn Wed, Oct 9, 2013 at 12:52 PM, Erica Brown em.brown30@gmail.com wrote:\n\n> OK, I will try that real quick and let you know what happens!\n> Thanks for the quick reply\n> \n> On Wed, Oct 9, 2013 at 12:45 PM, Jeff Escalante notifications@github.comwrote:\n> \n> > I would try two things to fix this:\n> > 1. Run the command with sudo\n> > 2. Make sure you have XCode installed through the app store, and that\n> >    you have also installed command line tools (you need this for the C\n> >    compiler)\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/241#issuecomment-25987223\n> > .\n> \n> ## \n> \n> _\"via et veritas et vita...\"_\n> - -- Jesus\n>   *\n>   John 14:6\n> \n> Erica Brown\n> em.brown30@gmail.com\n\n## \n\n_\"via et veritas et vita...\"_\n- -- Jesus\n  *\n  John 14:6\n\nErica Brown\nem.brown30@gmail.com\n. OK, I will try that real quick and let you know what happens!\nThanks for the quick reply\n\nOn Wed, Oct 9, 2013 at 12:45 PM, Jeff Escalante notifications@github.comwrote:\n\n> I would try two things to fix this:\n> 1. Run the command with sudo\n> 2. Make sure you have XCode installed through the app store, and that\n>    you have also installed command line tools (you need this for the C\n>    compiler)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/241#issuecomment-25987223\n> .\n\n## \n\n_\"via et veritas et vita...\"_\n- -- Jesus\n  *\n  John 14:6\n\nErica Brown\nem.brown30@gmail.com\n. it worked...\nI had to install XCode and the command line tools!\nthx\n\nOn Wed, Oct 9, 2013 at 12:52 PM, Erica Brown em.brown30@gmail.com wrote:\n\n> OK, I will try that real quick and let you know what happens!\n> Thanks for the quick reply\n> \n> On Wed, Oct 9, 2013 at 12:45 PM, Jeff Escalante notifications@github.comwrote:\n> \n> > I would try two things to fix this:\n> > 1. Run the command with sudo\n> > 2. Make sure you have XCode installed through the app store, and that\n> >    you have also installed command line tools (you need this for the C\n> >    compiler)\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/jenius/roots/issues/241#issuecomment-25987223\n> > .\n> \n> ## \n> \n> _\"via et veritas et vita...\"_\n> - -- Jesus\n>   *\n>   John 14:6\n> \n> Erica Brown\n> em.brown30@gmail.com\n\n## \n\n_\"via et veritas et vita...\"_\n- -- Jesus\n  *\n  John 14:6\n\nErica Brown\nem.brown30@gmail.com\n. ",
    "eternal-turtles": "Installing Python got me further along but now I get the following -- of these options, how do you think I should try to resolve this?:\n\nMSBUILD : error MSB3428: Could not load the Visual C++ component \"VCBuild.exe\". To fix this, 1) install the .NET Framew\nork 2.0 SDK, 2) install Microsoft Visual Studio 2005 or 3) add the location of the component to the system path if it i\ns installed elsewhere.  [C:\\Users\\Jack\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\copy-paste\\node_modules\\exec\nSync\\build\\binding.sln]\ngyp ERR! build error\ngyp ERR! stack Error: `c:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:2\n67:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\n. Downloaded the .NET framework 2.0 SDK (x64) installer from microsoft and ran it -- it asked if I wanted to repair or uninstall so I chose repair. Restarted, and still getting the same errors installing roots.\n. Installing Python got me further along but now I get the following -- of these options, how do you think I should try to resolve this?:\n\nMSBUILD : error MSB3428: Could not load the Visual C++ component \"VCBuild.exe\". To fix this, 1) install the .NET Framew\nork 2.0 SDK, 2) install Microsoft Visual Studio 2005 or 3) add the location of the component to the system path if it i\ns installed elsewhere.  [C:\\Users\\Jack\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\copy-paste\\node_modules\\exec\nSync\\build\\binding.sln]\ngyp ERR! build error\ngyp ERR! stack Error: `c:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:2\n67:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\n. Downloaded the .NET framework 2.0 SDK (x64) installer from microsoft and ran it -- it asked if I wanted to repair or uninstall so I chose repair. Restarted, and still getting the same errors installing roots.\n. ",
    "zethussuen": "wow. so anticipate this feature :rainbow: :dog:\n. wow. so anticipate this feature :rainbow: :dog:\n. ",
    "IRus": "@jenius I think RSS should be included by default(like in wordpress for example). Today i found an blog(http://andyshora.com/) and this blog built with roots. I want get latest updates and start searching RSS. And this blog actually doesn't have RSS! It's ridiculous... RSS should be zero-config included by default. \n. @jenius I think RSS should be included by default(like in wordpress for example). Today i found an blog(http://andyshora.com/) and this blog built with roots. I want get latest updates and start searching RSS. And this blog actually doesn't have RSS! It's ridiculous... RSS should be zero-config included by default. \n. ",
    "mikaylathompson": "I'm on osx 10.9, and `xcode-select --version` says `version 2333`.\n\nI'm updating that now, so I'll give it another try in 5 minutes, and let you know how it goes.\n. Yep, the xcode update seems to have fixed it!\n\nThanks for the help, and the project!\n. I'm on osx 10.9, and `xcode-select --version` says `version 2333`.\n\nI'm updating that now, so I'll give it another try in 5 minutes, and let you know how it goes.\n. Yep, the xcode update seems to have fixed it!\n\nThanks for the help, and the project!\n. ",
    "srsgores": "No, I don't understand what you're asking for.  Please explain how this is relevant to this PR.  Did you me to do several commits, then send a pull request with those commits?  Like separating the jQuery one from measurements from meta?\n. So I would revert the commit... branch... merge partial changes for files, then commit individually?  I'm a little new to these scenarios...\n. @declandewet, I'm having a real hard time figuring this out.  I may not get to fixing this for a while tbh.  Take of the pr what you can, I guess.\n. @jenius, I could do separate pull requests.  I'll have to re-do the work, but that's ok, since there wasn't much.\n\n@declandewet, in regards to the breaking grid change, what would be the appropriate code to set grids to fluid?\n. @declandewet, then what is the code doing?\n\n```\n// grid system settings (http://semantic.gs)\ncolumn-width = 60px\ngutter-width = 20px\ncolumns = 12\n```\n\nShould we remove it?\n. @declandewet, I noticed that that stuff was removed from the upcoming \"next release branch\", but there was only one branch for each of the separate themes.  I guess I'm just confused about the way we're supposed to contribute to these repos.\n\n@jenius, I sent pull requests for each theme.  Hope that works. \n. Further to what @Compiztab said, you can avoid having the `[` and `]` in the project name by simply surrounding the name in quotes:\n\n```\nroots new \"my-new-project\"\n```\n\nWhich will create a new directory for your project in the `my-new-project` directory.\n\nNote that you must remove the `default` folder from the `templates` folder each time you want to create a new project.  @jenius, are there any plans to fix this?\n. WOW, obviously -- **I had to install python**.  This should be doc'd on the roots page.\n\n\"Make sure you have Python installed before installing.  Use Choclatey (Windows package manager) and do:\n\n```\ncinst python\n```\n\nThen restart your command prompt.\nThen run the normal roots installation:\n\n```\nnpm install -g roots\n```\n\n\"\n. No, I don't understand what you're asking for.  Please explain how this is relevant to this PR.  Did you me to do several commits, then send a pull request with those commits?  Like separating the jQuery one from measurements from meta?\n. So I would revert the commit... branch... merge partial changes for files, then commit individually?  I'm a little new to these scenarios...\n. @declandewet, I'm having a real hard time figuring this out.  I may not get to fixing this for a while tbh.  Take of the pr what you can, I guess.\n. @jenius, I could do separate pull requests.  I'll have to re-do the work, but that's ok, since there wasn't much.\n\n@declandewet, in regards to the breaking grid change, what would be the appropriate code to set grids to fluid?\n. @declandewet, then what is the code doing?\n\n```\n// grid system settings (http://semantic.gs)\ncolumn-width = 60px\ngutter-width = 20px\ncolumns = 12\n```\n\nShould we remove it?\n. @declandewet, I noticed that that stuff was removed from the upcoming \"next release branch\", but there was only one branch for each of the separate themes.  I guess I'm just confused about the way we're supposed to contribute to these repos.\n\n@jenius, I sent pull requests for each theme.  Hope that works. \n. Further to what @Compiztab said, you can avoid having the `[` and `]` in the project name by simply surrounding the name in quotes:\n\n```\nroots new \"my-new-project\"\n```\n\nWhich will create a new directory for your project in the `my-new-project` directory.\n\nNote that you must remove the `default` folder from the `templates` folder each time you want to create a new project.  @jenius, are there any plans to fix this?\n. WOW, obviously -- **I had to install python**.  This should be doc'd on the roots page.\n\n\"Make sure you have Python installed before installing.  Use Choclatey (Windows package manager) and do:\n\n```\ncinst python\n```\n\nThen restart your command prompt.\nThen run the normal roots installation:\n\n```\nnpm install -g roots\n```\n\n\"\n. ",
    "ghost": "```\n wow\n\n                             such close\n         very merge\n\n                        wow\n```\n. @jenius No. In my case, npm installed roots as stable. (2.1.0 - not beta)\n\nAnd in Korean Windows, `\\`(back slash) is won (\uc6d0) (sign: \u20a9; code: KRW). And It is not the cause.\n. I solve a half.\nCommand `roots new [project-name]` works when  dir `C:\\Users\\Administrator\\.config\\roots\\templates` was created before. But only one time. I have to remove this dir to create one more roots project.\n\nAnyway I'm using roots XD\n. @haxsu - Could you elaborate on how you fixed the issue with your Windows user name? I can't get it to work.\n. ```\n wow\n\n                             such close\n         very merge\n\n                        wow\n```\n. @jenius No. In my case, npm installed roots as stable. (2.1.0 - not beta)\n\nAnd in Korean Windows, `\\`(back slash) is won (\uc6d0) (sign: \u20a9; code: KRW). And It is not the cause.\n. I solve a half.\nCommand `roots new [project-name]` works when  dir `C:\\Users\\Administrator\\.config\\roots\\templates` was created before. But only one time. I have to remove this dir to create one more roots project.\n\nAnyway I'm using roots XD\n. @haxsu - Could you elaborate on how you fixed the issue with your Windows user name? I can't get it to work.\n. ",
    "aawilson": "Yeah, that's my plan, I've earmarked taking a look. It'll involve learning some coffee, but what's life without learning?\n. Took me longer than I thought to get to it, but you're right, easy fix.\n. @samccone It's here: https://github.com/jenius/roots/blob/master/lib/utils/add_error_messages.js\n\n@jenius You're right, this would make more sense to handle in the roots binary itself. Do you have a preference for an interface for err and res?\n. Haha sounds good, I'll close this\n. Yeah, happy to add a test, sorry not to create the PR with one. I'm usually pretty good about it, but I let node.js get in my way\n. I had some trouble doing a simple rebase, so I cherry-picked onto master and added my tests there. Pull is https://github.com/jenius/roots/pull/331\n. I'm not used to having an intermediary repo. And here I was wondering why I was having so much trouble rebasing off of master--aawilson:master is out of date.\n\nShould be good to go.\n. Yeah, that's my plan, I've earmarked taking a look. It'll involve learning some coffee, but what's life without learning?\n. Took me longer than I thought to get to it, but you're right, easy fix.\n. @samccone It's here: https://github.com/jenius/roots/blob/master/lib/utils/add_error_messages.js\n\n@jenius You're right, this would make more sense to handle in the roots binary itself. Do you have a preference for an interface for err and res?\n. Haha sounds good, I'll close this\n. Yeah, happy to add a test, sorry not to create the PR with one. I'm usually pretty good about it, but I let node.js get in my way\n. I had some trouble doing a simple rebase, so I cherry-picked onto master and added my tests there. Pull is https://github.com/jenius/roots/pull/331\n. I'm not used to having an intermediary repo. And here I was wondering why I was having so much trouble rebasing off of master--aawilson:master is out of date.\n\nShould be good to go.\n. ",
    "bengreenier": "Running command prompt as administrator works.  \n\n I'm gonna run a few more little tests, to see why node doesn't have access to that directory when ran \"regularly\"...\n. Hmm, perhaps that's a factor. Interestingly, when I (in a _regular_ command prompt)\n\n```\nroots new test\ncd test\nroots watch\n```\n\n**I get the error**, but when I (starting from scratch again)\n\n```\nroots new test\ncd test\nroots compile\nroots watch\n```\n\n**I do not**. Windows is telling me I have full control of _all_ directories and files in question, so i'm a bit confused.  \n\nThat being said, I'm quite content to either:\n1) run command prompt as administrator\n2) run `roots compile` before `roots watch`\n. Running command prompt as administrator works.  \n\n I'm gonna run a few more little tests, to see why node doesn't have access to that directory when ran \"regularly\"...\n. Hmm, perhaps that's a factor. Interestingly, when I (in a _regular_ command prompt)\n\n```\nroots new test\ncd test\nroots watch\n```\n\n**I get the error**, but when I (starting from scratch again)\n\n```\nroots new test\ncd test\nroots compile\nroots watch\n```\n\n**I do not**. Windows is telling me I have full control of _all_ directories and files in question, so i'm a bit confused.  \n\nThat being said, I'm quite content to either:\n1) run command prompt as administrator\n2) run `roots compile` before `roots watch`\n. ",
    "nightpool": "The \"permissions error\" is due to symlinks not being a part of windows.\nI'm having the same errors.\nWhen does roots use symlinks?\n. This is fixed by running roots compile before roots watch, but then I don't get any benefits from watch other then the built-in sever, right?\n. The \"permissions error\" is due to symlinks not being a part of windows.\nI'm having the same errors.\nWhen does roots use symlinks?\n. This is fixed by running roots compile before roots watch, but then I don't get any benefits from watch other then the built-in sever, right?\n. ",
    "wad2eq": "this is from \"CMD\" after getting repo\n\n```\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"/m\" switch.\nMSBUILD : error MSB4132: The tools version \"3.5\" is unrecognized. Available tools versions are \"12.0\", \"4.0\", \"2.0\".\ngyp ERR! build error\ngyp ERR! stack Error: `C:\\Program Files (x86)\\MSBuild\\12.0\\bin\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\node-gyp\\\\bin\\\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Program Files\\nodejs\\node_modules\\roots\\node_modules\\copy-paste\\node_modules\\execSync\ngyp ERR! node -v v0.10.21\ngyp ERR! node-gyp -v v0.9.5\ngyp ERR! not ok\nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n\n\nAnd this is from  \"npm-debug.log\" file.\n0 info it worked if it ends with ok\n1 verbose cli [ 'node',\n1 verbose cli   'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\n1 verbose cli   'install',\n1 verbose cli   'roots',\n1 verbose cli   '-g' ]\n2 info using npm@1.2.20\n3 info using node@v0.10.21\n4 verbose read json C:\\Program Files\\nodejs\\package.json\n5 verbose read json C:\\Program Files\\nodejs\\package.json\n6 verbose cache add [ 'roots', null ]\n7 verbose cache add name=undefined spec=\"roots\" args=[\"roots\",null]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'roots',\n8 verbose parsed url   path: 'roots',\n8 verbose parsed url   href: 'roots' }\n9 silly lockFile e2b4a430-roots roots\n10 verbose lock roots C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\e2b4a430-roots.lock\n11 silly lockFile e2b4a430-roots roots\n12 silly lockFile e2b4a430-roots roots\n13 verbose addNamed [ 'roots', '' ]\n14 verbose addNamed [ null, '' ]\n15 silly lockFile 734ea7ee-roots roots@\n16 verbose lock roots@ C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\734ea7ee-roots.lock\n17 silly addNameRange { name: 'roots', range: '', hasData: false }\n18 verbose url raw roots\n19 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n20 verbose url resolved https://registry.npmjs.org/roots\n21 info trying registry request attempt 1 at 18:26:29\n22 verbose etag \"9ZOBS8HPQGB18VI7SGZH5D97S\"\n23 http GET https://registry.npmjs.org/roots\n24 http 304 https://registry.npmjs.org/roots\n25 silly registry.get cb [ 304,\n25 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',\n25 silly registry.get     etag: '\"9ZOBS8HPQGB18VI7SGZH5D97S\"',\n25 silly registry.get     date: 'Wed, 06 Nov 2013 17:26:35 GMT',\n25 silly registry.get     'content-length': '0' } ]\n26 verbose etag roots from cache\n27 silly addNameRange number 2 { name: 'roots', range: '', hasData: true }\n28 silly addNameRange versions [ 'roots',\n28 silly addNameRange   [ '0.0.8-6',\n28 silly addNameRange     '0.0.8-7',\n28 silly addNameRange     '0.0.8-8',\n28 silly addNameRange     '0.0.8-9',\n28 silly addNameRange     '0.0.9',\n28 silly addNameRange     '0.0.9-1',\n28 silly addNameRange     '0.0.9-2',\n28 silly addNameRange     '0.0.9-3',\n28 silly addNameRange     '1.0.0',\n28 silly addNameRange     '1.0.1',\n28 silly addNameRange     '1.0.1-1',\n28 silly addNameRange     '1.0.1-2',\n28 silly addNameRange     '1.0.1-3',\n28 silly addNameRange     '1.0.2',\n28 silly addNameRange     '1.0.2-1',\n28 silly addNameRange     '1.0.3',\n28 silly addNameRange     '1.0.3-1',\n28 silly addNameRange     '1.0.4',\n28 silly addNameRange     '1.1.0',\n28 silly addNameRange     '1.1.1',\n28 silly addNameRange     '1.1.2',\n28 silly addNameRange     '1.2.1',\n28 silly addNameRange     '1.2.2',\n28 silly addNameRange     '1.2.3',\n28 silly addNameRange     '1.2.4',\n28 silly addNameRange     '1.2.4-1',\n28 silly addNameRange     '1.2.4-2',\n28 silly addNameRange     '1.2.4-3',\n28 silly addNameRange     '1.3.0',\n28 silly addNameRange     '1.3.1',\n28 silly addNameRange     '1.3.2',\n28 silly addNameRange     '1.3.3',\n28 silly addNameRange     '1.3.4',\n28 silly addNameRange     '1.3.5',\n28 silly addNameRange     '1.3.6',\n28 silly addNameRange     '1.3.6-1',\n28 silly addNameRange     '1.3.6-2',\n28 silly addNameRange     '1.3.6-3',\n28 silly addNameRange     '1.3.6-4',\n28 silly addNameRange     '2.0.0',\n28 silly addNameRange     '2.0.1',\n28 silly addNameRange     '2.0.2',\n28 silly addNameRange     '2.0.3',\n28 silly addNameRange     '2.0.4',\n28 silly addNameRange     '2.0.5',\n28 silly addNameRange     '2.0.6',\n28 silly addNameRange     '2.1.0',\n28 silly addNameRange     '2.1.0-beta1',\n28 silly addNameRange     '2.1.0-beta2' ] ]\n29 verbose addNamed [ 'roots', '2.0.6' ]\n30 verbose addNamed [ '2.0.6', '2.0.6' ]\n31 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n32 verbose lock roots@2.0.6 C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\1b64af29-roots-2-0-6.lock\n33 verbose read json C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package\\package.json\n34 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n35 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n36 silly lockFile 734ea7ee-roots roots@\n37 silly lockFile 734ea7ee-roots roots@\n38 silly resolved [ { name: 'roots',\n38 silly resolved     version: '2.0.6',\n38 silly resolved     description: 'roots is a toolbox for building simple, beautiful, and efficient products for the web',\n38 silly resolved     keywords: [ 'front-end', 'development', 'css', 'build', 'library', 'tool' ],\n38 silly resolved     homepage: 'http://roots.cx',\n38 silly resolved     bugs: { url: 'https://github.com/jenius/roots/issues' },\n38 silly resolved     author: { name: 'Jeff Escalante' },\n38 silly resolved     main: 'lib',\n38 silly resolved     bin: { roots: 'bin/roots' },\n38 silly resolved     repository: { type: 'git', url: 'git://github.com/jenius/roots.git' },\n38 silly resolved     dependencies:\n38 silly resolved      { connect: '2.9.x',\n38 silly resolved        colors: '0.6.x',\n38 silly resolved        open: '0.0.x',\n38 silly resolved        monocle: '1.1.x',\n38 silly resolved        readdirp: '0.3.x',\n38 silly resolved        mkdirp: '0.3.x',\n38 silly resolved        stylus: '0.37.x',\n38 silly resolved        jade: '0.35.x',\n38 silly resolved        snockets: '1.3.x',\n38 silly resolved        marked: '0.2.x',\n38 silly resolved        ejs: '0.8.x',\n38 silly resolved        'coffee-script': '1.6.x',\n38 silly resolved        'clean-css': '1.1.x',\n38 silly resolved        'uglify-js': '2.4.x',\n38 silly resolved        bower: '1.2.x',\n38 silly resolved        async: '0.2.x',\n38 silly resolved        'axis-css': '0.0.x',\n38 silly resolved        underscore: '1.5.x',\n38 silly resolved        shelljs: '0.2.x',\n38 silly resolved        q: '0.9.x',\n38 silly resolved        minimatch: '0.2.x',\n38 silly resolved        ftp: '0.3.x',\n38 silly resolved        'js-yaml': '2.1.x',\n38 silly resolved        semver: '2.1.x',\n38 silly resolved        'faye-websocket': '0.6.x',\n38 silly resolved        'copy-paste': '0.0.x',\n38 silly resolved        'cli-js': '0.0.x',\n38 silly resolved        'update-notifier': '~0.1.3',\n38 silly resolved        optimist: '0.6.x',\n38 silly resolved        nib: '1.0.x',\n38 silly resolved        prettyjson: '0.8.x' },\n38 silly resolved     devDependencies: { mocha: 'latest', should: 'latest' },\n38 silly resolved     man: [ './setup/man/roots.1' ],\n38 silly resolved     engines: { node: '>=0.8.0' },\n38 silly resolved     preferGlobal: true,\n38 silly resolved     scripts: { test: 'mocha' },\n\n.....\n38 silly resolved     readmeFilename: 'readme.md',\n38 silly resolved     _id: 'roots@2.0.6',\n38 silly resolved     _from: 'roots@' } ]\n39 info install roots@2.0.6 into C:\\Program Files\\nodejs\n40 info installOne roots@2.0.6\n41 verbose from cache C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package\\package.json\n42 info C:\\Program Files\\nodejs\\node_modules\\roots unbuild\n43 verbose read json C:\\Program Files\\nodejs\\node_modules\\roots\\package.json\n44 verbose tar unpack C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz\n45 silly lockFile e19897b3--Files-nodejs-node-modules-roots C:\\Program Files\\nodejs\\node_modules\\roots\n46 verbose lock C:\\Program Files\\nodejs\\node_modules\\roots C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\e19897b3--Files-nodejs-node-modules-roots.lock\n47 silly lockFile fea0bfac-pm-cache-roots-2-0-6-package-tgz C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz\n48 verbose lock C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\fea0bfac-pm-cache-roots-2-0-6-package-tgz.lock\n49 silly gunzTarPerm modes [ '755', '644' ]\n50 error Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots'\n50 error  { [Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots']\n50 error   errno: 50,\n50 error   code: 'EPERM',\n50 error   path: 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\roots',\n50 error   fstream_type: 'Directory',\n50 error   fstream_path: 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\roots',\n50 error   fstream_class: 'DirWriter',\n50 error   fstream_stack:\n50 error    [ 'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\fstream\\\\lib\\\\dir-writer.js:36:23',\n50 error      'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\mkdirp\\\\index.js:37:53',\n50 error      'Object.oncomplete (fs.js:107:15)' ] }\n51 error Please try running this command again as root/Administrator.\n52 error System Windows_NT 6.1.7601\n53 error command \"node\" \"C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots\" \"-g\"\n54 error cwd C:\\Users\\dom\n55 error node -v v0.10.21\n56 error npm -v 1.2.20\n57 error path C:\\Program Files\\nodejs\\node_modules\\roots\n58 error fstream_path C:\\Program Files\\nodejs\\node_modules\\roots\n59 error fstream_type Directory\n60 error fstream_class DirWriter\n61 error code EPERM\n62 error errno 50\n63 error stack Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots'\n64 error fstream_stack C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\fstream\\lib\\dir-writer.js:36:23\n64 error fstream_stack C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\n64 error fstream_stack Object.oncomplete (fs.js:107:15)\n65 verbose exit [ 50, true ]\n```\n. I can't realy help i reinstall node - nothing. I would like to see what is Roots because i love jeet framework. I think i will reinstall windows 7 and we will see\n. Hello sorry for my  \"no answer\". I did not find any solution so i reinstall Windows. After that i have installed VS Expres 2013, than i have run  cmd as administrator and \" npm install roots -g\"\nAnd i heve got error \nMSBUILD : error MSB3428: Unable to load component Visual C++ \"VCBuild.exe\"\nTo resolve this issue:1) install .NET Framework 2.0 SDK, 2) install  Microsoft Visual Studio 2005 lub 3) dodaj lokalizacj\u0119 sk\u0142adnika\nadd the location of the component\n\u00a0 the track system, if installed in any location  [C:\\U\nsers\\dom\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\copy-paste\\node_mo\ndules\\execSync\\build\\binding.sln] \n\n\"sorry for my english\" :)\nAfter i heve installed Ubuntu and its works ( but i cant install nvidia drivers :) - always something wrong.\n. this is from \"CMD\" after getting repo\n\n```\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"/m\" switch.\nMSBUILD : error MSB4132: The tools version \"3.5\" is unrecognized. Available tools versions are \"12.0\", \"4.0\", \"2.0\".\ngyp ERR! build error\ngyp ERR! stack Error: `C:\\Program Files (x86)\\MSBuild\\12.0\\bin\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:789:12)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\node-gyp\\\\bin\\\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Program Files\\nodejs\\node_modules\\roots\\node_modules\\copy-paste\\node_modules\\execSync\ngyp ERR! node -v v0.10.21\ngyp ERR! node-gyp -v v0.9.5\ngyp ERR! not ok\nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n\n\nAnd this is from  \"npm-debug.log\" file.\n0 info it worked if it ends with ok\n1 verbose cli [ 'node',\n1 verbose cli   'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\n1 verbose cli   'install',\n1 verbose cli   'roots',\n1 verbose cli   '-g' ]\n2 info using npm@1.2.20\n3 info using node@v0.10.21\n4 verbose read json C:\\Program Files\\nodejs\\package.json\n5 verbose read json C:\\Program Files\\nodejs\\package.json\n6 verbose cache add [ 'roots', null ]\n7 verbose cache add name=undefined spec=\"roots\" args=[\"roots\",null]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'roots',\n8 verbose parsed url   path: 'roots',\n8 verbose parsed url   href: 'roots' }\n9 silly lockFile e2b4a430-roots roots\n10 verbose lock roots C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\e2b4a430-roots.lock\n11 silly lockFile e2b4a430-roots roots\n12 silly lockFile e2b4a430-roots roots\n13 verbose addNamed [ 'roots', '' ]\n14 verbose addNamed [ null, '' ]\n15 silly lockFile 734ea7ee-roots roots@\n16 verbose lock roots@ C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\734ea7ee-roots.lock\n17 silly addNameRange { name: 'roots', range: '', hasData: false }\n18 verbose url raw roots\n19 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n20 verbose url resolved https://registry.npmjs.org/roots\n21 info trying registry request attempt 1 at 18:26:29\n22 verbose etag \"9ZOBS8HPQGB18VI7SGZH5D97S\"\n23 http GET https://registry.npmjs.org/roots\n24 http 304 https://registry.npmjs.org/roots\n25 silly registry.get cb [ 304,\n25 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',\n25 silly registry.get     etag: '\"9ZOBS8HPQGB18VI7SGZH5D97S\"',\n25 silly registry.get     date: 'Wed, 06 Nov 2013 17:26:35 GMT',\n25 silly registry.get     'content-length': '0' } ]\n26 verbose etag roots from cache\n27 silly addNameRange number 2 { name: 'roots', range: '', hasData: true }\n28 silly addNameRange versions [ 'roots',\n28 silly addNameRange   [ '0.0.8-6',\n28 silly addNameRange     '0.0.8-7',\n28 silly addNameRange     '0.0.8-8',\n28 silly addNameRange     '0.0.8-9',\n28 silly addNameRange     '0.0.9',\n28 silly addNameRange     '0.0.9-1',\n28 silly addNameRange     '0.0.9-2',\n28 silly addNameRange     '0.0.9-3',\n28 silly addNameRange     '1.0.0',\n28 silly addNameRange     '1.0.1',\n28 silly addNameRange     '1.0.1-1',\n28 silly addNameRange     '1.0.1-2',\n28 silly addNameRange     '1.0.1-3',\n28 silly addNameRange     '1.0.2',\n28 silly addNameRange     '1.0.2-1',\n28 silly addNameRange     '1.0.3',\n28 silly addNameRange     '1.0.3-1',\n28 silly addNameRange     '1.0.4',\n28 silly addNameRange     '1.1.0',\n28 silly addNameRange     '1.1.1',\n28 silly addNameRange     '1.1.2',\n28 silly addNameRange     '1.2.1',\n28 silly addNameRange     '1.2.2',\n28 silly addNameRange     '1.2.3',\n28 silly addNameRange     '1.2.4',\n28 silly addNameRange     '1.2.4-1',\n28 silly addNameRange     '1.2.4-2',\n28 silly addNameRange     '1.2.4-3',\n28 silly addNameRange     '1.3.0',\n28 silly addNameRange     '1.3.1',\n28 silly addNameRange     '1.3.2',\n28 silly addNameRange     '1.3.3',\n28 silly addNameRange     '1.3.4',\n28 silly addNameRange     '1.3.5',\n28 silly addNameRange     '1.3.6',\n28 silly addNameRange     '1.3.6-1',\n28 silly addNameRange     '1.3.6-2',\n28 silly addNameRange     '1.3.6-3',\n28 silly addNameRange     '1.3.6-4',\n28 silly addNameRange     '2.0.0',\n28 silly addNameRange     '2.0.1',\n28 silly addNameRange     '2.0.2',\n28 silly addNameRange     '2.0.3',\n28 silly addNameRange     '2.0.4',\n28 silly addNameRange     '2.0.5',\n28 silly addNameRange     '2.0.6',\n28 silly addNameRange     '2.1.0',\n28 silly addNameRange     '2.1.0-beta1',\n28 silly addNameRange     '2.1.0-beta2' ] ]\n29 verbose addNamed [ 'roots', '2.0.6' ]\n30 verbose addNamed [ '2.0.6', '2.0.6' ]\n31 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n32 verbose lock roots@2.0.6 C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\1b64af29-roots-2-0-6.lock\n33 verbose read json C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package\\package.json\n34 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n35 silly lockFile 1b64af29-roots-2-0-6 roots@2.0.6\n36 silly lockFile 734ea7ee-roots roots@\n37 silly lockFile 734ea7ee-roots roots@\n38 silly resolved [ { name: 'roots',\n38 silly resolved     version: '2.0.6',\n38 silly resolved     description: 'roots is a toolbox for building simple, beautiful, and efficient products for the web',\n38 silly resolved     keywords: [ 'front-end', 'development', 'css', 'build', 'library', 'tool' ],\n38 silly resolved     homepage: 'http://roots.cx',\n38 silly resolved     bugs: { url: 'https://github.com/jenius/roots/issues' },\n38 silly resolved     author: { name: 'Jeff Escalante' },\n38 silly resolved     main: 'lib',\n38 silly resolved     bin: { roots: 'bin/roots' },\n38 silly resolved     repository: { type: 'git', url: 'git://github.com/jenius/roots.git' },\n38 silly resolved     dependencies:\n38 silly resolved      { connect: '2.9.x',\n38 silly resolved        colors: '0.6.x',\n38 silly resolved        open: '0.0.x',\n38 silly resolved        monocle: '1.1.x',\n38 silly resolved        readdirp: '0.3.x',\n38 silly resolved        mkdirp: '0.3.x',\n38 silly resolved        stylus: '0.37.x',\n38 silly resolved        jade: '0.35.x',\n38 silly resolved        snockets: '1.3.x',\n38 silly resolved        marked: '0.2.x',\n38 silly resolved        ejs: '0.8.x',\n38 silly resolved        'coffee-script': '1.6.x',\n38 silly resolved        'clean-css': '1.1.x',\n38 silly resolved        'uglify-js': '2.4.x',\n38 silly resolved        bower: '1.2.x',\n38 silly resolved        async: '0.2.x',\n38 silly resolved        'axis-css': '0.0.x',\n38 silly resolved        underscore: '1.5.x',\n38 silly resolved        shelljs: '0.2.x',\n38 silly resolved        q: '0.9.x',\n38 silly resolved        minimatch: '0.2.x',\n38 silly resolved        ftp: '0.3.x',\n38 silly resolved        'js-yaml': '2.1.x',\n38 silly resolved        semver: '2.1.x',\n38 silly resolved        'faye-websocket': '0.6.x',\n38 silly resolved        'copy-paste': '0.0.x',\n38 silly resolved        'cli-js': '0.0.x',\n38 silly resolved        'update-notifier': '~0.1.3',\n38 silly resolved        optimist: '0.6.x',\n38 silly resolved        nib: '1.0.x',\n38 silly resolved        prettyjson: '0.8.x' },\n38 silly resolved     devDependencies: { mocha: 'latest', should: 'latest' },\n38 silly resolved     man: [ './setup/man/roots.1' ],\n38 silly resolved     engines: { node: '>=0.8.0' },\n38 silly resolved     preferGlobal: true,\n38 silly resolved     scripts: { test: 'mocha' },\n\n.....\n38 silly resolved     readmeFilename: 'readme.md',\n38 silly resolved     _id: 'roots@2.0.6',\n38 silly resolved     _from: 'roots@' } ]\n39 info install roots@2.0.6 into C:\\Program Files\\nodejs\n40 info installOne roots@2.0.6\n41 verbose from cache C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package\\package.json\n42 info C:\\Program Files\\nodejs\\node_modules\\roots unbuild\n43 verbose read json C:\\Program Files\\nodejs\\node_modules\\roots\\package.json\n44 verbose tar unpack C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz\n45 silly lockFile e19897b3--Files-nodejs-node-modules-roots C:\\Program Files\\nodejs\\node_modules\\roots\n46 verbose lock C:\\Program Files\\nodejs\\node_modules\\roots C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\e19897b3--Files-nodejs-node-modules-roots.lock\n47 silly lockFile fea0bfac-pm-cache-roots-2-0-6-package-tgz C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz\n48 verbose lock C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\roots\\2.0.6\\package.tgz C:\\Users\\dom\\AppData\\Roaming\\npm-cache\\fea0bfac-pm-cache-roots-2-0-6-package-tgz.lock\n49 silly gunzTarPerm modes [ '755', '644' ]\n50 error Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots'\n50 error  { [Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots']\n50 error   errno: 50,\n50 error   code: 'EPERM',\n50 error   path: 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\roots',\n50 error   fstream_type: 'Directory',\n50 error   fstream_path: 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\roots',\n50 error   fstream_class: 'DirWriter',\n50 error   fstream_stack:\n50 error    [ 'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\fstream\\\\lib\\\\dir-writer.js:36:23',\n50 error      'C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\node_modules\\\\mkdirp\\\\index.js:37:53',\n50 error      'Object.oncomplete (fs.js:107:15)' ] }\n51 error Please try running this command again as root/Administrator.\n52 error System Windows_NT 6.1.7601\n53 error command \"node\" \"C:\\\\Users\\\\dom\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots\" \"-g\"\n54 error cwd C:\\Users\\dom\n55 error node -v v0.10.21\n56 error npm -v 1.2.20\n57 error path C:\\Program Files\\nodejs\\node_modules\\roots\n58 error fstream_path C:\\Program Files\\nodejs\\node_modules\\roots\n59 error fstream_type Directory\n60 error fstream_class DirWriter\n61 error code EPERM\n62 error errno 50\n63 error stack Error: EPERM, mkdir 'C:\\Program Files\\nodejs\\node_modules\\roots'\n64 error fstream_stack C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\fstream\\lib\\dir-writer.js:36:23\n64 error fstream_stack C:\\Users\\dom\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\n64 error fstream_stack Object.oncomplete (fs.js:107:15)\n65 verbose exit [ 50, true ]\n```\n. I can't realy help i reinstall node - nothing. I would like to see what is Roots because i love jeet framework. I think i will reinstall windows 7 and we will see\n. Hello sorry for my  \"no answer\". I did not find any solution so i reinstall Windows. After that i have installed VS Expres 2013, than i have run  cmd as administrator and \" npm install roots -g\"\nAnd i heve got error \nMSBUILD : error MSB3428: Unable to load component Visual C++ \"VCBuild.exe\"\nTo resolve this issue:1) install .NET Framework 2.0 SDK, 2) install  Microsoft Visual Studio 2005 lub 3) dodaj lokalizacj\u0119 sk\u0142adnika\nadd the location of the component\n\u00a0 the track system, if installed in any location  [C:\\U\nsers\\dom\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\copy-paste\\node_mo\ndules\\execSync\\build\\binding.sln] \n\n\"sorry for my english\" :)\nAfter i heve installed Ubuntu and its works ( but i cant install nvidia drivers :) - always something wrong.\n. ",
    "Roxy2": "Thank-you Declan: )\nSent from iCloud\n\nOn 13 Nov, 2013,at 09:42 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2,\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably node-gyp) depends on the availability of Python and Visual C++, as outlined in the README here. This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\nAlso, be sure to run cmd.exe or powershell or a terminal emulator like ConEmu as an administrator when installing Node modules globally.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan,\n\nNot sure if I'm suppose to reply here or open a new issue?\n\nI followed all instructions below and this time when installing 'roots' I got a another new error message?\n\nI downloaded and installed Python 2.7, Visual Studio 2013 Professional.\n\ndoes the error mean something is wrong with the Visual Studio install?\u00a0\n\nThanks\nJulie\nSent from iCloud\n\nOn 13 Nov, 2013,at 09:42 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2,\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably node-gyp) depends on the availability of Python and Visual C++, as outlined in the README here. This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\nAlso, be sure to run cmd.exe or powershell or a terminal emulator like ConEmu as an administrator when installing Node modules globally.\n\u2014\nReply to this email directly or view it on GitHub.\n. ![npm-error-msg](https://f.cloud.github.com/assets/5688616/1538709/2efba64c-4cf2-11e3-8a22-0e60df8c945d.png)\n\nSearched the error message : error MSB8007 trying to install recommended fixes now hopefully they will work\n\nhttps://github.com/Worlize/WebSocket-Node/issues/63\n. Still downloading atm, will let know tomorrow.\u00a0\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nHi @Roxy2 - were you able to sort this out?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan,\n\nFirst image is a warning that appears 3/4 way through install (better than the error msg that stopped install all together)\n\nbut this time the install seems to have completed see second image.\u00a0\n\nIs the warning msg an issue, is it likely to cause issues still?\n\nso far as I mentioned I have installed python (no issue) visual studio C++ 2010 edition (no issue) tried to install 'roots' again but still got error. after I googled error msb8007\u00a0https://github.com/Worlize/WebSocket-Node/issues/63\u00a0it said to install SDK7.1 I tried this with no success, then ran\u00a0Windows update still no success with SDK7.1 so I gave up on that. I shut down computer and reloaded. Desktop message appeared \"loading windows features don't turn computer off\" only got to 74% through then said \"loading windows features failed reverting changes\" left computer alone overnight and by morning my normal desktop was up and I then tried again to install 'roots' and the images below show the latest install progress.\n\nI have tried to google the warning mentioned here but I need a translator to decipher the tech language they use? If you could interprate in plain English for me I would really appreciate it.\u00a0\n\nAll I want to do is run Jeet using Roots\n\nThanks\n\nJulie\n\nSent from iCloud\n\nOn 14 Nov, 2013,at 05:45 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2 - were you able to sort this out?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan\n\nI just opened new issue 'error - won't install 'roots'\n\nRoxy2\n\nThanks\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nWe're not seeing any of the images you're referencing in your latest comment on this issue - could you come on to the Github page and post the images that way so we may have a look?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. oops accidentally put pics on isaacs / npm will close it sorry. here they are.\n\n![warning-roots-install](https://f.cloud.github.com/assets/5688616/1555924/2bf4694c-4e9c-11e3-8642-ff29ff3646f7.jpg)\n![finished-roots-install](https://f.cloud.github.com/assets/5688616/1555925/31e89d00-4e9c-11e3-9228-574891c19eb0.jpg)\n. Thanks for all your help: )\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nIt looks to me like Roots has installed, judging by the screenshot (and your previous message). These warnings are not an issue (I work predominantly on Windows 8.1 and get them as well - you need not be worried). Give it a test:\n\nIt seems to me as if Jeet relies on a Roots edge pre-release, so taking from the Jeet template's instructions:\n\n$ npm install -g clonr roots@2.1.0-beta3\n$ clonr mojotech/jeet-roots projectname\n$ cd projectname\n$ roots watch\nThat should fire up the Jeet template and the livereload server/watcher.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. now this is happening\n\n![err-notfound-git](https://f.cloud.github.com/assets/5688616/1556124/4131843a-4eaf-11e3-897f-331e6d1f756c.jpg)\n. How does foo directory work I tried clonr mojotech/jeet-roots foo and I get permission denied. \n\n![permission denied](https://f.cloud.github.com/assets/5688616/1557489/2ddbfa3a-4f1a-11e3-900d-efa5d96d8124.jpg)\n. Yes it did thankyou for helping, I will log with Jeet.\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Jeff Escalante notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nThis looks like an issue with jeet-roots rather than with roots itself. I would file it there instead. Did the roots install complete successfully?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank-you Declan: )\nSent from iCloud\n\nOn 13 Nov, 2013,at 09:42 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2,\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably node-gyp) depends on the availability of Python and Visual C++, as outlined in the README here. This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\nAlso, be sure to run cmd.exe or powershell or a terminal emulator like ConEmu as an administrator when installing Node modules globally.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan,\n\nNot sure if I'm suppose to reply here or open a new issue?\n\nI followed all instructions below and this time when installing 'roots' I got a another new error message?\n\nI downloaded and installed Python 2.7, Visual Studio 2013 Professional.\n\ndoes the error mean something is wrong with the Visual Studio install?\u00a0\n\nThanks\nJulie\nSent from iCloud\n\nOn 13 Nov, 2013,at 09:42 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2,\nMost of the issues with Roots installing on Windows are the result of missing Python and the Visual C++ runtime executable. One of Roots' dependencies (notably node-gyp) depends on the availability of Python and Visual C++, as outlined in the README here. This is not an issue on Mac or Linux machines, as they come with these dependencies installed by default.\nI would advise installing Python 2.7.\\* which you can get from here: http://www.python.org/download/releases/2.7/\nAs for the C++ runtime, any one of the steps outlined in the README section linked above will work.\nAlso, be sure to run cmd.exe or powershell or a terminal emulator like ConEmu as an administrator when installing Node modules globally.\n\u2014\nReply to this email directly or view it on GitHub.\n. ![npm-error-msg](https://f.cloud.github.com/assets/5688616/1538709/2efba64c-4cf2-11e3-8a22-0e60df8c945d.png)\n\nSearched the error message : error MSB8007 trying to install recommended fixes now hopefully they will work\n\nhttps://github.com/Worlize/WebSocket-Node/issues/63\n. Still downloading atm, will let know tomorrow.\u00a0\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nHi @Roxy2 - were you able to sort this out?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan,\n\nFirst image is a warning that appears 3/4 way through install (better than the error msg that stopped install all together)\n\nbut this time the install seems to have completed see second image.\u00a0\n\nIs the warning msg an issue, is it likely to cause issues still?\n\nso far as I mentioned I have installed python (no issue) visual studio C++ 2010 edition (no issue) tried to install 'roots' again but still got error. after I googled error msb8007\u00a0https://github.com/Worlize/WebSocket-Node/issues/63\u00a0it said to install SDK7.1 I tried this with no success, then ran\u00a0Windows update still no success with SDK7.1 so I gave up on that. I shut down computer and reloaded. Desktop message appeared \"loading windows features don't turn computer off\" only got to 74% through then said \"loading windows features failed reverting changes\" left computer alone overnight and by morning my normal desktop was up and I then tried again to install 'roots' and the images below show the latest install progress.\n\nI have tried to google the warning mentioned here but I need a translator to decipher the tech language they use? If you could interprate in plain English for me I would really appreciate it.\u00a0\n\nAll I want to do is run Jeet using Roots\n\nThanks\n\nJulie\n\nSent from iCloud\n\nOn 14 Nov, 2013,at 05:45 PM, Declan de Wet notifications@github.com wrote:\n\nHi @Roxy2 - were you able to sort this out?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Declan\n\nI just opened new issue 'error - won't install 'roots'\n\nRoxy2\n\nThanks\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nWe're not seeing any of the images you're referencing in your latest comment on this issue - could you come on to the Github page and post the images that way so we may have a look?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. oops accidentally put pics on isaacs / npm will close it sorry. here they are.\n\n![warning-roots-install](https://f.cloud.github.com/assets/5688616/1555924/2bf4694c-4e9c-11e3-8642-ff29ff3646f7.jpg)\n![finished-roots-install](https://f.cloud.github.com/assets/5688616/1555925/31e89d00-4e9c-11e3-9228-574891c19eb0.jpg)\n. Thanks for all your help: )\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Declan de Wet notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nIt looks to me like Roots has installed, judging by the screenshot (and your previous message). These warnings are not an issue (I work predominantly on Windows 8.1 and get them as well - you need not be worried). Give it a test:\n\nIt seems to me as if Jeet relies on a Roots edge pre-release, so taking from the Jeet template's instructions:\n\n$ npm install -g clonr roots@2.1.0-beta3\n$ clonr mojotech/jeet-roots projectname\n$ cd projectname\n$ roots watch\nThat should fire up the Jeet template and the livereload server/watcher.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. now this is happening\n\n![err-notfound-git](https://f.cloud.github.com/assets/5688616/1556124/4131843a-4eaf-11e3-897f-331e6d1f756c.jpg)\n. How does foo directory work I tried clonr mojotech/jeet-roots foo and I get permission denied. \n\n![permission denied](https://f.cloud.github.com/assets/5688616/1557489/2ddbfa3a-4f1a-11e3-900d-efa5d96d8124.jpg)\n. Yes it did thankyou for helping, I will log with Jeet.\n\nSent from my smartphone on the new Vodafone network\n\n-------- Original message --------\nFrom: Jeff Escalante notifications@github.com \nDate:  \nTo: jenius/roots roots@noreply.github.com \nCc: Roxy2 julie.small@me.com \nSubject: Re: [roots] Error - won't install (#292) \n\nThis looks like an issue with jeet-roots rather than with roots itself. I would file it there instead. Did the roots install complete successfully?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "dillonforrest": "Okay cool!  Thanks for letting me know!  Btw, your vids on the roots page are pretty hilarious. XD\n\nThanks for pointing out the 2.1.0 branch -- will do!\n. @samccone thanks buddy! :+1: \n. @samccone issue persists unfortunately.  I don't think it's an npm issue if I could `npm install` other stuff.  Any thoughts?\n. @samccone Just did `npm cache clean` then `npm install roots -g` again.  Still getting the same SSL error.  o__O\n. @samccone Okay, after trying `npm config set strict-ssl false`, roots begins installing finally.  But then I get the following:\n\n```\nnpm ERR! git clone git://github.com/roots-dev/transformers.git\nnpm ERR! Error: `git \"clone\" \"git://github.com/roots-dev/transformers.git\" \"/home/ec2-user/tmp/npm-28070/1389739971052-0.11506958142854273\"` failed with 128\nnpm ERR!     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/exec.js:56:20)\nnpm ERR!     at ChildProcess.EventEmitter.emit (events.js:91:17)\nnpm ERR!     at Process._handle.onexit (child_process.js:674:10)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.4.62-53.42.amzn1.x86_64\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /home/ec2-user/experimental-git/dillon/new-ui-tools/static-views\nnpm ERR! node -v v0.8.4\nnpm ERR! npm -v 1.1.45\n```\n\nAny thoughts?  o__O\n. a;sdklfj a;sdklfj a;skdfj a;sdkf ~______~ sighhhhh\n\n@samccone okay, thanks for checking.  Are you sure there's nothing related to the roots package itself which could be affecting me?  Especially considering that I could still `npm install underscore` while ssh'd into my Linux server?  cc @jenius o____O\n\nIf I can get this working, then I'm gonna be a proud production user of roots at work.  :)\n. @jenius Thanks for the suggestion!!  I tried that too.  I started getting `No space left on device` errors.  Wutdafux.\n\nSo I did `$ df` and got the following:\n\n```\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/dev/xvda1             8256952   8173012        64 100% /\ntmpfs                   304236         0    304236   0% /dev/shm\n```\n\nSmh.  I guess I don't have enough space on my server to install roots.  I never imagined this would happen.\n\nThanks to you and @samccone for all the help!!  I'll clean tmrw and will reinstall.\n. It's amazon linux.... weird issues would not be out of the question. ~________~\n. Okay cool!  Thanks for letting me know!  Btw, your vids on the roots page are pretty hilarious. XD\n\nThanks for pointing out the 2.1.0 branch -- will do!\n. @samccone thanks buddy! :+1: \n. @samccone issue persists unfortunately.  I don't think it's an npm issue if I could `npm install` other stuff.  Any thoughts?\n. @samccone Just did `npm cache clean` then `npm install roots -g` again.  Still getting the same SSL error.  o__O\n. @samccone Okay, after trying `npm config set strict-ssl false`, roots begins installing finally.  But then I get the following:\n\n```\nnpm ERR! git clone git://github.com/roots-dev/transformers.git\nnpm ERR! Error: `git \"clone\" \"git://github.com/roots-dev/transformers.git\" \"/home/ec2-user/tmp/npm-28070/1389739971052-0.11506958142854273\"` failed with 128\nnpm ERR!     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/exec.js:56:20)\nnpm ERR!     at ChildProcess.EventEmitter.emit (events.js:91:17)\nnpm ERR!     at Process._handle.onexit (child_process.js:674:10)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.4.62-53.42.amzn1.x86_64\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"roots\" \"-g\"\nnpm ERR! cwd /home/ec2-user/experimental-git/dillon/new-ui-tools/static-views\nnpm ERR! node -v v0.8.4\nnpm ERR! npm -v 1.1.45\n```\n\nAny thoughts?  o__O\n. a;sdklfj a;sdklfj a;skdfj a;sdkf ~______~ sighhhhh\n\n@samccone okay, thanks for checking.  Are you sure there's nothing related to the roots package itself which could be affecting me?  Especially considering that I could still `npm install underscore` while ssh'd into my Linux server?  cc @jenius o____O\n\nIf I can get this working, then I'm gonna be a proud production user of roots at work.  :)\n. @jenius Thanks for the suggestion!!  I tried that too.  I started getting `No space left on device` errors.  Wutdafux.\n\nSo I did `$ df` and got the following:\n\n```\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/dev/xvda1             8256952   8173012        64 100% /\ntmpfs                   304236         0    304236   0% /dev/shm\n```\n\nSmh.  I guess I don't have enough space on my server to install roots.  I never imagined this would happen.\n\nThanks to you and @samccone for all the help!!  I'll clean tmrw and will reinstall.\n. It's amazon linux.... weird issues would not be out of the question. ~________~\n. ",
    "snowe2010": "Looks like the problem is coming directly from git. I narrowed it down to this line of code.\n\n```\n  var clone_command = shell.exec('git clone ' + tmpl + ' ' + tmpl_path, { silent: true });\n```\n\nTesting by myself and referencing [these](https://github.com/sbt/sbt/issues/895) [issues](https://stackoverflow.com/questions/23121382/cant-install-cordova-plugins-from-git-on-cli) confirms it, that git on Windows sometimes doesn't create subdirectories. The solution is to create the folder ahead of time if it doesn't exist.\n\nAlso the documentation for `fs` explicitly says not to use  `fs.existsSync`\n. Seems like I've found a fix. I'll submit a pull request in the morning though, after I've cleaned it up a bit.\n. I do have a question. I've hardly ever touched javascript before, much less Node.js. I used a new module? (I think that's what it's called) and I reference it like this `mkdirp = require('mkdirp')`, but I think that I need to add it as a dependency somewhere else. Where am I supposed to add it as a dependency as?\n. Haha yeah it was a dependency. I didn't see it in the list. I've submitted a pull request, though I'd like someone to review it closely, because I've never coded in javascript before. \n. I'm getting this error:\n\n```\n\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http GET https://registry.npmjs.org/object-assign\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/string_decoder\nnpm http GET https://registry.npmjs.org/npmconf\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test\\unix.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call setupMadeDir\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack end (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:319:21)\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:336:20\nnpm ERR! fstream_stack next (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:366:20)\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/object-assign\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\\issue-12.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: EPERM, unlink 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md'\nnpm ERR! error rolling back  roots@3.0.0-rc.9 { [Error: EPERM, unlink 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md']\nnpm ERR! error rolling back   errno: 50,\nnpm ERR! error rolling back   code: 'EPERM',\nnpm ERR! error rolling back   path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\sprout\\\\node_modules\\\\string\\\\README.md' }\nnpm ERR! posix@1.0.3 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the posix@1.0.3 install script.\nnpm ERR! This is most likely a problem with the posix package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls posix\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! code ELIFECYCLE\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/npmconf\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\\runner.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE'\nnpm ERR!  { [Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE']\nnpm ERR!   errno: 50,\nnpm ERR!   code: 'EPERM',\nnpm ERR!   path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\serve-static\\\\node_modules\\\\parseurl\\\\LICENSE',\nnpm ERR!   fstream_finish_call: 'chmod',\nnpm ERR!   fstream_type: 'File',\nnpm ERR!   fstream_path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\serve-static\\\\node_modules\\\\parseurl\\\\LICENSE',\nnpm ERR!   fstream_class: 'FileWriter',\nnpm ERR!   fstream_stack:\nnpm ERR!    [ 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\node_modules\\\\fstream\\\\lib\\\\writer.js:305:19',\nnpm ERR!      'Object.oncomplete (fs.js:107:15)' ] }\nnpm ERR!\nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code EPERM\nnpm ERR! errno 50\nnpm ERR! stack Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE'\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm WARN optional dep failed, continuing fsevents@0.2.1\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\\resolver.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n```\n\nHere's the full log \nhttp://pastee.co/4orBtA\n. Good idea. I'm not sure why the builds are failing. I didn't add any 'sinon' dependency \n. So did I mess something up? I didn't even touch anything relating to sinon. And I reverted the changes I made to package.json because mkdirp was already a dependency.\n. There. All squashed together. \n. Anything else I need to fix?\n. You can give me stuff to test on windows if you want. I've got both WIndows 7 and Windows 8.1 so I can try to test stuff out for you. I'd also like this project to work nicely on Windows. My mac vm stopped working recently so I can't switch over to using that.\n. Files in test_roots:\n\n```\n|- /public\n   |- /img\n      |- .keep\n```\n\nI'm guessing that's a no. \n. Yeah I had to just manually fix the \"cannot find module ./new\" error using @declandewet's fix. The name of my project folder is \"test_roots\" without the quotes. \n. Ok I tried with my project name as just \"test\" and I got the same results. And I name almost every single one of my folders with underscores, so I think Windows handles them just fine. \n. Ah good call @philbarr, so I get this error after cleaning the cache and trying to install:\n\n```\nC:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\posix>node \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\node-gyp-bin\\\\..\\..\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"/m\" switch.\n  posix.cc\n..\\src\\posix.cc(2): fatal error C1083: Cannot open include file: 'unistd.h': No such file\n or directory [C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modu\nles\\posix\\build\\posix.vcxproj]\ngyp ERR! build error\ngyp ERR! stack Error: `C:\\Program Files (x86)\\MSBuild\\12.0\\bin\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:797:12)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\node_modules\\\\node-gyp\\\\bin\\\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\posix\ngyp ERR! node -v v0.10.26\ngyp ERR! node-gyp -v v0.12.2\ngyp ERR! not ok\n```\n\nand at the bottom of the output \n\n```\nnpm ERR! posix@1.0.3 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the posix@1.0.3 install script.\nnpm ERR! This is most likely a problem with the posix package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls posix\nnpm ERR! There is likely additional logging output above.\n```\n. yay!\n. Looks like the problem is coming directly from git. I narrowed it down to this line of code.\n\n```\n  var clone_command = shell.exec('git clone ' + tmpl + ' ' + tmpl_path, { silent: true });\n```\n\nTesting by myself and referencing [these](https://github.com/sbt/sbt/issues/895) [issues](https://stackoverflow.com/questions/23121382/cant-install-cordova-plugins-from-git-on-cli) confirms it, that git on Windows sometimes doesn't create subdirectories. The solution is to create the folder ahead of time if it doesn't exist.\n\nAlso the documentation for `fs` explicitly says not to use  `fs.existsSync`\n. Seems like I've found a fix. I'll submit a pull request in the morning though, after I've cleaned it up a bit.\n. I do have a question. I've hardly ever touched javascript before, much less Node.js. I used a new module? (I think that's what it's called) and I reference it like this `mkdirp = require('mkdirp')`, but I think that I need to add it as a dependency somewhere else. Where am I supposed to add it as a dependency as?\n. Haha yeah it was a dependency. I didn't see it in the list. I've submitted a pull request, though I'd like someone to review it closely, because I've never coded in javascript before. \n. I'm getting this error:\n\n```\n\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\send\\LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\inquirer\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http GET https://registry.npmjs.org/object-assign\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\escape-html\\index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/string_decoder\nnpm http GET https://registry.npmjs.org/npmconf\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\npm\\doc\\cli\\npm-submodule.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore\\favicon.ico\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\fobject\\src\\index.coffee\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\argparse\\node_modules\\underscore.string\\test\\speed.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\coffee-script\\node_modules\\mkdirp\\test\\umask.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ncp\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\osenv\\test\\unix.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call setupMadeDir\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack end (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:319:21)\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:336:20\nnpm ERR! fstream_stack next (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:366:20)\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\glob\\test\\00-setup.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/object-assign\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\uglify-js\\test\\compress\\issue-12.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: EPERM, unlink 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md'\nnpm ERR! error rolling back  roots@3.0.0-rc.9 { [Error: EPERM, unlink 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md']\nnpm ERR! error rolling back   errno: 50,\nnpm ERR! error rolling back   code: 'EPERM',\nnpm ERR! error rolling back   path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\sprout\\\\node_modules\\\\string\\\\README.md' }\nnpm ERR! posix@1.0.3 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the posix@1.0.3 install script.\nnpm ERR! This is most likely a problem with the posix package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls posix\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! code ELIFECYCLE\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\string\\README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm http 304 https://registry.npmjs.org/npmconf\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\utils-merge\\index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\keen.io\\node_modules\\superagent\\docs\\index.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\ejs\\ejs.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\configstore\\node_modules\\js-yaml\\node_modules\\esprima\\test\\runner.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\update-notifier\\node_modules\\chalk\\node_modules\\has-ansi\\node_modules\\ansi-regex\\readme.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE'\nnpm ERR!  { [Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE']\nnpm ERR!   errno: 50,\nnpm ERR!   code: 'EPERM',\nnpm ERR!   path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\serve-static\\\\node_modules\\\\parseurl\\\\LICENSE',\nnpm ERR!   fstream_finish_call: 'chmod',\nnpm ERR!   fstream_type: 'File',\nnpm ERR!   fstream_path: 'C:\\\\Users\\\\tyler.thrailkill\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\roots\\\\node_modules\\\\serve-static\\\\node_modules\\\\parseurl\\\\LICENSE',\nnpm ERR!   fstream_class: 'FileWriter',\nnpm ERR!   fstream_stack:\nnpm ERR!    [ 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\node_modules\\\\fstream\\\\lib\\\\writer.js:305:19',\nnpm ERR!      'Object.oncomplete (fs.js:107:15)' ] }\nnpm ERR!\nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chmod\nnpm ERR! code EPERM\nnpm ERR! errno 50\nnpm ERR! stack Error: EPERM, chmod 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\serve-static\\node_modules\\parseurl\\LICENSE'\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\sprout\\node_modules\\readdirp\\readdirp.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm WARN optional dep failed, continuing fsevents@0.2.1\nnpm ERR! EEXIST, mkdir 'C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test'\nFile exists: C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\nMove it away, and try again.\n\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\\\Program Files\\\\nodejs\\\\\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd C:\\Users\\tyler.thrailkill\\Dropbox\nnpm ERR! node -v v0.10.26\nnpm ERR! npm -v 1.4.3\nnpm ERR! path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\nnpm ERR! fstream_path C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\accord\\node_modules\\resolve\\test\\resolver.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\fstream\\lib\\writer.js:171:23\nnpm ERR! fstream_stack C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\mkdirp\\index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n```\n\nHere's the full log \nhttp://pastee.co/4orBtA\n. Good idea. I'm not sure why the builds are failing. I didn't add any 'sinon' dependency \n. So did I mess something up? I didn't even touch anything relating to sinon. And I reverted the changes I made to package.json because mkdirp was already a dependency.\n. There. All squashed together. \n. Anything else I need to fix?\n. You can give me stuff to test on windows if you want. I've got both WIndows 7 and Windows 8.1 so I can try to test stuff out for you. I'd also like this project to work nicely on Windows. My mac vm stopped working recently so I can't switch over to using that.\n. Files in test_roots:\n\n```\n|- /public\n   |- /img\n      |- .keep\n```\n\nI'm guessing that's a no. \n. Yeah I had to just manually fix the \"cannot find module ./new\" error using @declandewet's fix. The name of my project folder is \"test_roots\" without the quotes. \n. Ok I tried with my project name as just \"test\" and I got the same results. And I name almost every single one of my folders with underscores, so I think Windows handles them just fine. \n. Ah good call @philbarr, so I get this error after cleaning the cache and trying to install:\n\n```\nC:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\posix>node \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\node-gyp-bin\\\\..\\..\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild\nBuilding the projects in this solution one at a time. To enable parallel build, please add the \"/m\" switch.\n  posix.cc\n..\\src\\posix.cc(2): fatal error C1083: Cannot open include file: 'unistd.h': No such file\n or directory [C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modu\nles\\posix\\build\\posix.vcxproj]\ngyp ERR! build error\ngyp ERR! stack Error: `C:\\Program Files (x86)\\MSBuild\\12.0\\bin\\msbuild.exe` failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\lib\\build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:797:12)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\node_modules\\\\node-gyp\\\\bin\\\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Users\\tyler.thrailkill\\AppData\\Roaming\\npm\\node_modules\\roots\\node_modules\\posix\ngyp ERR! node -v v0.10.26\ngyp ERR! node-gyp -v v0.12.2\ngyp ERR! not ok\n```\n\nand at the bottom of the output \n\n```\nnpm ERR! posix@1.0.3 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the posix@1.0.3 install script.\nnpm ERR! This is most likely a problem with the posix package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls posix\nnpm ERR! There is likely additional logging output above.\n```\n. yay!\n. ",
    "jnordberg": "Hey, this looks like an interesting project! I'll have to try it out when i get some time. Just started a new job and will not have much time in the coming months.. so i don't think i will be jumping on to any new projects. But i'll definitely keep an eye on what you're doing and steal the good bits for ws 3.0 :P\n. Hey, this looks like an interesting project! I'll have to try it out when i get some time. Just started a new job and will not have much time in the coming months.. so i don't think i will be jumping on to any new projects. But i'll definitely keep an eye on what you're doing and steal the good bits for ws 3.0 :P\n. ",
    "cheapsteak": "I am so incredibly torn.  \n\nOn one hand, Roots's website looks great (super professional) and the tutorial videos are great. On the other hand, Wintersmith has a _lot_ more stars on Github, and the plugin system means I don't have to install *everything* (sass _and_ less _and_ stylus, and .. dogescript? lol).   \n\nIs there any way to compare these two without actually having to learn and try both?   \n\nHow has no one made a comparison-blog about this yet?\n. Thank you both for the detailed response! I was only half kidding with the star count comment, lol. It's great to know that v3 will be using a plugin system, will have to check that out then \n. I am so incredibly torn.  \n\nOn one hand, Roots's website looks great (super professional) and the tutorial videos are great. On the other hand, Wintersmith has a _lot_ more stars on Github, and the plugin system means I don't have to install *everything* (sass _and_ less _and_ stylus, and .. dogescript? lol).   \n\nIs there any way to compare these two without actually having to learn and try both?   \n\nHow has no one made a comparison-blog about this yet?\n. Thank you both for the detailed response! I was only half kidding with the star count comment, lol. It's great to know that v3 will be using a plugin system, will have to check that out then \n. ",
    "svallory": "Upgrading node to v0.10.23 didn't help\n. As a temporary fix, running this command works...\n\n```\nsudo npm install -g --user 0 roots\n```\n\nMaybe you should put it in the docs, I saw a lot of packages with the same problem. Looks like it's an old and recurrent problem with node.\n. Based on the amount of people reporting it (just google \"options.uid should be a number\")  for a lot of different packages, I'd say no. Or, if it's a problem with my computer, it's a pretty common one and node should check and get around it. \n. it's definitely not a problem with roots. I read somewhere that apparently `node-gyp` is a pretty common cause for this error.\n. I've got some news on this matter... Based on [this answer on stack overflow](http://stackoverflow.com/a/19132229/219838), the problem arises from trying to install global modules on the \"preinstall\" script. If you really need to, you should add this to your package.json to avoid this issue.\n\n```\n\"config\": {\n    \"unsafe-perm\": true\n}\n```\n. Well, since I'm at it... I just tried adding the flag mentioned on the answer to roots' `package.json` file and it had no effect. Adding a .npmrc with the option didn't help either. Looks like we are in the hands of npm now. I already updated the issue there.\n\nOne more thing... since it happens with a lot of packages out there, for anyone reading this, you may want to run \n\n`sudo npm config set unsafe-perm true`\n\nAnd solve this once and for all!\n\nCheers!\n. @hhsnopek That only seems to be true for v3. Should I forget v2 and start using v3?\n. @hhsnopek If that's the case, I'll add typescript to accord then and start using v3 today. I'm assuming it's possible to configure roots to pass the custom path of my adapter to accord, so I can use it even before it makes it's way into the official repo, am I right?\n. Upgrading node to v0.10.23 didn't help\n. As a temporary fix, running this command works...\n\n```\nsudo npm install -g --user 0 roots\n```\n\nMaybe you should put it in the docs, I saw a lot of packages with the same problem. Looks like it's an old and recurrent problem with node.\n. Based on the amount of people reporting it (just google \"options.uid should be a number\")  for a lot of different packages, I'd say no. Or, if it's a problem with my computer, it's a pretty common one and node should check and get around it. \n. it's definitely not a problem with roots. I read somewhere that apparently `node-gyp` is a pretty common cause for this error.\n. I've got some news on this matter... Based on [this answer on stack overflow](http://stackoverflow.com/a/19132229/219838), the problem arises from trying to install global modules on the \"preinstall\" script. If you really need to, you should add this to your package.json to avoid this issue.\n\n```\n\"config\": {\n    \"unsafe-perm\": true\n}\n```\n. Well, since I'm at it... I just tried adding the flag mentioned on the answer to roots' `package.json` file and it had no effect. Adding a .npmrc with the option didn't help either. Looks like we are in the hands of npm now. I already updated the issue there.\n\nOne more thing... since it happens with a lot of packages out there, for anyone reading this, you may want to run \n\n`sudo npm config set unsafe-perm true`\n\nAnd solve this once and for all!\n\nCheers!\n. @hhsnopek That only seems to be true for v3. Should I forget v2 and start using v3?\n. @hhsnopek If that's the case, I'll add typescript to accord then and start using v3 today. I'm assuming it's possible to configure roots to pass the custom path of my adapter to accord, so I can use it even before it makes it's way into the official repo, am I right?\n. ",
    "agrberg": "I can confirm this is still happening with `roots new` on v2.1.2\n. :+1: thanks!\n. :+1: I can confirm it's working with the update.\n. I can confirm this is still happening with `roots new` on v2.1.2\n. :+1: thanks!\n. :+1: I can confirm it's working with the update.\n. ",
    "turboMaCk": "I have similar issue. When I try to $ roots new <name> and $ cd <new> reposo is allready here.\n\n```\n$ git remote show origin\nremote origin\n  Fetch URL: https://github.com/roots-dev/roots-template-default.git\n  Push  URL: https://github.com/roots-dev/roots-template-default.git\n  HEAD branch: master\n  Remote branch:\n    master tracked\n  Local branch configured for 'git pull':\n    master merges with remote master\n  Local ref configured for 'git push':\n    master pushes to master (up to date)\n\n\n$ roots --version -> 2.1.4\n```\n. I have similar issue. When I try to $ roots new <name> and $ cd <new> reposo is allready here.\n\n```\n$ git remote show origin\nremote origin\n  Fetch URL: https://github.com/roots-dev/roots-template-default.git\n  Push  URL: https://github.com/roots-dev/roots-template-default.git\n  HEAD branch: master\n  Remote branch:\n    master tracked\n  Local branch configured for 'git pull':\n    master merges with remote master\n  Local ref configured for 'git push':\n    master pushes to master (up to date)\n\n\n$ roots --version -> 2.1.4\n```\n. ",
    "ccsouthard": "Ok thanks jeff.\n. I'll have one to add in a few weeks.  Thank you for making this available.\n. \u200bSite looks great! Looking forward to the videos. Nice work @jenius\u200b\n\nOn Thu, Jan 22, 2015 at 1:09 PM, Josh Rowley notifications@github.com\nwrote:\n\n> [image: :+1:]\n> \n> [image: :tada:] [image: :clap:] [image: :confetti_ball:] [image: :clap:] [image:\n> :tada:] [image: :clap:] [image: :confetti_ball:]\n> \n> Well done @jenius https://github.com/jenius.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/426#issuecomment-71068197.\n. Slang updated my GH repo.https://github.com/ccsouthard/curemap\n\nWhen I run the watch  After installing V3- I run into issues.\n\nSo the files have been upgraded but my local development environment seems to be messy and out of order.\n.  I contacted @slang800  before posting. I will circle back. Thank you for your openness and willingness to help solve this problem. If you wish to start debugging, where would you begin? The new version obviously is highly complex and as an outsider it is taking me a while to understand all of the changes.  \n. @slang800 updated and cleaned the app for me. I'm assuming the new v3 won't jive with my older code. So I should probably revert back to the earlier version. I'll start reading through the new branch. \n. @slang800 Thank you. Ping me when you're out of the weeds.  Is there a\nprotocol to uninstalling both versions? I then could clean git history,\nreinstall v3 and then pull the repo.\n\nOn Thu, Oct 9, 2014 at 3:05 PM, Sean Lang notifications@github.com wrote:\n\n> @ccsouthard https://github.com/ccsouthard - the code is updated to work\n> with v3 & compiles on my machine... I'll try to work with you to debug your\n> error later, but right now I'm super busy with intermedia & have 0 freetime\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/571#issuecomment-58560833.\n.  To further clarify my problem. The developer who was working with me on this project forked the v3 update.  it appears that this could be a problem on other systems as well.\n\"I could'nt run on the new version, the error displayed is Error: Cannot find module 'axis-css'. Kindly suggest.\"\n\n This is the same error I encountered after running the watch. I installed the module and the other modules that I was prompted to install. However \u2013 I'm at a standstill.\n\nIn case @slang800 is full out. Are there any other  developers (available for freelance) who could help me with deploying my app prototype? I have about five days at best to share at a conference and I'm a bit over my head.\n. THANK YOU. Yes. Please email me at chazsouthard @ gmail\n\nOn Oct 10, 2014, at 2:15 PM, Jeff Escalante notifications@github.com wrote:\n\n> Sounds like a problem with your app.coffee file. But yeah I could probably set up a time this weekend to look through it if you'd like as freelance!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n.  I just resolved the issue of my own by removing my old local repository, cloning the new branch and running the watch.\n\n This was a simple solution. However I think some of the problems lie in the previous version and understanding the changes in how to implement the changes locally. Anyways \u2013 all is well.\n. I'm having a different issue with Yosemite. The watch originally worked after the upgrade (first save w/ changes and reload worked perfect), however now it compiles (second save) and the automatically reload fails. hmmmm\n. Weird. I restarted my computer and now the watcher works. Good to know that Yosemite's architecture does not alter roots. Thanks Jeff.\n. I'd like to check out the new docs site setup. Will that soon live under roots.cx gh repo?\n. https://github.com/ccsouthard/curemap\n*js is verbose and not well written.\n. @jenius  I think it is on my end as well. \n\n```\nMuthership:portfolio-roots chaz$ sudo npm i roots@pre -g\nPassword:\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> node ./post_install.js\n```\n\nCould this be an internal administration issue?  This could be a shot in the dark; I've had a variety of modules fail due to default privacy issues after upgrading to Yosemite. Thanks for looking into it.\n. On mac, no luck so far with `sudo chown -R $USER /usr/local/lib` . \n\nI think I have many node issues. \n\n```\nMuthership:portfolio-roots chaz$ sudo chown -R $USER /usr/local/lib\nPassword:\nMuthership:portfolio-roots chaz$  sudo npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> node ./post_install.js\n\n---------------------------------------------------------\nRoots uses analytics to help the core team to get a\nbetter view of how developers use roots. All analytics\nare collected anonymously, and analytics data is used\nonly to make roots better for everyone. However, if you\nwould like to disable analytics, you are welcome to do\nso by running the command `roots analytics --disable`\n\nMuch like roots itself, roots' analytics are open source.\nCheck out http://roots.cx/analytics for more information.\n---------------------------------------------------------\nroots@3.0.0-rc.10 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 graceful-fs@3.0.5\n\u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n\u251c\u2500\u2500 minimatch@1.0.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 when@3.6.4\n\u251c\u2500\u2500 argparse@0.1.16 (underscore.string@2.4.0, underscore@1.7.0)\n\u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, minimatch@0.2.14, readable-stream@1.0.33)\n\u251c\u2500\u2500 serve-static@1.7.1 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, send@0.10.1)\n\u251c\u2500\u2500 coffee-script@1.8.0 (mkdirp@0.3.5)\n\u251c\u2500\u2500 update-notifier@0.2.2 (is-npm@1.0.0, string-length@1.0.0, chalk@0.5.1, semver-diff@2.0.0, latest-version@1.0.0)\n\u251c\u2500\u2500 posix@1.0.4\n\u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 configstore@0.3.1 (object-assign@0.3.1, osenv@0.1.0, uuid@1.4.2, js-yaml@3.0.2)\n\u251c\u2500\u2500 accord@0.12.0 (indx@0.2.2, resolve@0.7.4, fobject@0.0.3, glob@4.3.1, uglify-js@2.4.16)\n\u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.2, morgan@1.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, connect@3.3.3, faye-websocket@0.7.3, publicist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.2.2, lodash.remove@2.4.1, archivist-middleware@0.0.1, escapist-middleware@0.0.2, pathologist-middleware@0.0.1, update-notifier@0.1.10, apology-middleware@0.0.4)\n\u251c\u2500\u2500 sprout@0.1.3 (indx@0.2.2, which@1.0.8, osenv@0.1.0, ncp@1.0.1, string@2.1.0, colors@1.0.3, ejs@1.0.0, readdirp@1.1.0, inquirer@0.8.0)\n\u251c\u2500\u2500 chokidar@0.8.4 (recursive-readdir@0.0.2, fsevents@0.2.1)\n\u251c\u2500\u2500 ship@0.1.4 (indx@0.2.2, mime@1.2.11, colors@1.0.3, fstream@1.0.3, optimist@0.6.1, file-map@0.0.1, tar@1.0.3, ftp@0.3.8, request@2.51.0, github@0.2.1, ssh2@0.3.6, js-yaml@3.2.3, heroku-client@1.5.0, aws-sdk@2.1.3, inquirer@0.8.0)\n\u2514\u2500\u2500 npm@2.1.12\nMuthership:portfolio-roots chaz$ ls\nroots\nMuthership:portfolio-roots chaz$ roots new test\n\u2718 Error: Command failed: npm ERR! install Couldn't read dependencies\nnpm ERR! Error: Invalid name: \"<%= name %>\"\nnpm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\nnpm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\nnpm ERR!     at Array.forEach (native)\nnpm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\nnpm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\nnpm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\nnpm ERR!     at evalmachine.<anonymous>:271:14\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/chaz/.config/sprout/roots-base\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\nnpm ERR! not ok code 0\n\nPotentially unhandled rejection [3] Error: Command failed: npm ERR! install Couldn't read dependencies\nnpm ERR! Error: Invalid name: \"<%= name %>\"\nnpm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\nnpm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\nnpm ERR!     at Array.forEach (native)\nnpm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\nnpm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\nnpm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\nnpm ERR!     at evalmachine.<anonymous>:271:14\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/chaz/.config/sprout/roots-base\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\nnpm ERR! not ok code 0\n\n  at ChildProcess.exithandler (child_process.js:648:15)\n  at ChildProcess.emit (events.js:98:17)\n  at maybeClose (child_process.js:756:16)\n  at Socket.<anonymous> (child_process.js:969:11)\n  at Socket.emit (events.js:95:17)\n  at Pipe.close (net.js:465:12)\n```\n\n@jenius and @hhsnopek-  Is there an easy way to clean and uninstall node and then reinstall?  I'll start looking on stack exchange \u2013 but in case you run into this before, I'm all ears.  I'd rather not reinstall my OS. ;(\n. @hhsnopek good reference.\nI ended up manually removing node and some node modules and installed nvm. I reinstalled a jeet and the stylus watcher is working.  Strangely, pulling\n\n```\n sudo npm i roots@pre -g\nPassword:\n\n> posix@1.0.4 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing posix@1.0.4\n\n> fsevents@0.2.1 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> node ./post_install.js\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n\nnode.js:815\n    var cwd = process.cwd();\n                      ^\nError: EACCES, permission denied\n    at Function.startup.resolveArgv0 (node.js:815:23)\n    at startup (node.js:58:13)\n    at node.js:906:3\n\nnpm ERR! roots@3.0.0-rc.10 postinstall: `node ./post_install.js`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the roots@3.0.0-rc.10 postinstall script.\nnpm ERR! This is most likely a problem with the roots package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node ./post_install.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls roots\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/Users/chaz/.nvm/v0.10.34/bin/node\" \"/Users/chaz/.nvm/v0.10.34/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz/projects/portfolio-roots\nnpm ERR! node -v v0.10.34\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! not ok code 0\n```\n. I _think_ you maybe right.  However, I'm still pulling the same errors without sudo. \n. For my purposes right now, jeet works. But, I'd like to figure out the  why?\n\n```\nMuthership:portfolio-sandbox chaz$ stylus -u jeet -w style.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/stylus/lib/functions/index.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/index.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_settings.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_functions.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_grid.styl\n  compiled style.css\n  watching style.styl\n```\n.  Be blunt. Save me time. I'm going to revisit this in the morning and use\nbrew.\n\nOn Wed, Dec 17, 2014 at 7:57 PM, Henry Snopek notifications@github.com\nwrote:\n\n> stylus doesn't need the permissions like postfix does.\n> \n> The error says: _EACCES, permission denied_\n> If you notice the postinstall uses, node ./post_install.js and _not_ sudo\n> ./post_install.js.\n> \n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing fsevents@0.2.1\n> /Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n> \n> > roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> > node ./post_install.js\n> \n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> \n> node.js:815\n>     var cwd = process.cwd();\n>                       ^\n> Error: EACCES, permission denied\n>     at Function.startup.resolveArgv0 (node.js:815:23)\n>     at startup (node.js:58:13)\n>     at node.js:906:3\n> \n> Sorry to be so blunt, but the issue is that your permissions are\n> incorrect. It's because you're using sudo to run, install, and access\n> your node_modules with npm and node. To fix this you must reinstall node\n> and npm, _without_ using sudo. If you _really_ don't want to use brew to\n> fix the issue, use this gist. Installs node and npm within 30s\n> https://gist.github.com/isaacs/579814#file-node-and-npm-in-30-seconds-sh\n> and uses proper permissions.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/587#issuecomment-67425579.\n. yeah, that Is many errors.\n\n\"The errors have been resolved.\n\nRemove:\n- /usr/lib/nodejs/npm\n- /usr/lib/node_modules\n- /usr/lib/npm\n- /home/.node-nyp\n- /home/.node_modules\n- basically anything that is related to npm.\n\nRestart computer, sudo apt-get clean && sudo apt-get autoclean, sudo\napt-get update && sudo apt-get upgrade, sudo apt-get install npm && sudo\nnpm install roots -g.\n\nEverything should install correctly if you deleted all the files in the\nprior steps.\n\u200b\"\u200b\n\nNo sudo. Got it.\n\nOn Wed, Dec 17, 2014 at 7:59 PM, Henry Snopek notifications@github.com\nwrote:\n\n> Also here's a reference to a past struggle of mine that was caused by\n> using sudo #196 https://github.com/jenius/roots/issues/196\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/587#issuecomment-67425781.\n. @hhsnopek  I followed your detailed instructions.\n1. Removed all NPM and node files\n2. Installed homebrew\n3. Reinstalled node\n4. Ran the basic install function for roots \n\n```\nMuthership:~ chaz$ npm i roots@pre -g\nnpm ERR! Error: EACCES, mkdir '/usr/local/lib/node_modules/roots'\nnpm ERR!  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/roots']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/lib/node_modules/roots',\nnpm ERR!   fstream_type: 'Directory',\nnpm ERR!   fstream_path: '/usr/local/lib/node_modules/roots',\nnpm ERR!   fstream_class: 'DirWriter',\nnpm ERR!   fstream_stack: \nnpm ERR!    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',\nnpm ERR!      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53',\nnpm ERR!      'Object.oncomplete (fs.js:107:15)' ] }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path /usr/local/lib/node_modules/roots\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots\nnpm ERR! fstream_type Directory\nnpm ERR! fstream_class DirWriter\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, mkdir '/usr/local/lib/node_modules/roots'\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/npm-debug.log\nnpm ERR! not ok code 0\n```\n1. sudo  would take care of running the command as root/administrator \u2013 but I think I'm missing or have some other problem.\n\nAny thoughts?\n. @hhsnopek That makes sense but I'm still encountering similar errors.\n1. \n\n```\n Muthership:~ chaz$ cd /usr/local/lib \nMuthership:lib chaz$ sudo chown -R $USER /usr/local/lib\nPassword:\n\n```\n1.  However, I'm still encounter the same errors.\n\n```\nMuthership:lib chaz$ npm i roots@pre -g\nnpm ERR! Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR!  { [Error: EACCES, unlink '/usr/local/share/man/man1/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/share/man/man1/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /usr/local/lib\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path /usr/local/share/man/man1/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR! error rolling back Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR! error rolling back  { [Error: EACCES, unlink '/usr/local/share/man/man1/roots.1']\nnpm ERR! error rolling back   errno: 3,\nnpm ERR! error rolling back   code: 'EACCES',\nnpm ERR! error rolling back   path: '/usr/local/share/man/man1/roots.1' }\nnpm ERR! not ok code 0 \n\n```\n\nAnything blatantly obvious? I'm not too comfortable under the hood.\n. ```\nMuthership:lib chaz$ cd ~\n\nMuthership:~ chaz$ rm -f /usr/local/share/man/man1/roots.1\n\nrm: /usr/local/share/man/man1/roots.1: Permission denied\n```\n\nThank you. Let me give this a go. Thanks for sticking with it.\n. ```\nMuthership:~ chaz$ sudo rm -f /usr/local/share/man/man1/roots.1\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n\nI'm confused now.\n. ```\nMuthership:~ chaz$ chown -R $USER /usr/local/bin/ \nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n. Thanks Henry.\nI don't think I'll be able to complete today I spilled some coffee on my laptop \u2026it is bugging out. One of those days. The coffee could be more problematic. Ech oh. I'll  remove this comment from GH later. \n\nSent from my wireless device (please forgive grammatical errors).\n\n> On Dec 18, 2014, at 9:12 PM, Henry Snopek notifications@github.com wrote:\n> \n> sudo chown -R $USER /usr/local/bin/ then sudo rm -fr /usr/local/share/man/man1/roots.1 then install roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/bin/\nPassword:\nMuthership:~ chaz$  sudo rm -fr /usr/local/share/man/man1/roots\nMuthership:~ chaz$  npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n\nno dice.\n. @hhsnopek  I did. Any other ideas?\n\n```\nMuthership:~ chaz$ sudo rm -fr /usr/local/share/man/man1/roots.1\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n. yes. looks like symlink problem.\n\n```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n. Thanks. I'm going to follow : http://stackoverflow.com/questions/11177954/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x\n\nthen reinstall. If there is a better way please let me know.\n. ```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/bin/\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.34\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n\nIt might be my OS. I followed the steps exactly. I'm not going to give up, but I'm at a standstill.\n\nReinstall OSX?\n. ```\nMuthership:~ chaz$ npm install stylus -g\n/usr/local/bin/stylus -> /usr/local/lib/node_modules/stylus/bin/stylus\nstylus@0.49.3 /usr/local/lib/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u251c\u2500\u2500 debug@2.1.0 (ms@0.6.2)\n\u251c\u2500\u2500 source-map@0.1.41 (amdefine@0.1.0)\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\n```\n\nStylus works fine. Same roots error.\n.  I did perfectly. Theoretically, I understand that the file causing the problems is still improperly permissioned.  I've uninstalled node multiple times following the top answers at SE. I can't seem to locate the file \u2013 when I go to folder\u2026 I keep receiving file or folder not found.\n. @hhsnopek  I didn't until I felt I exhausted my knowledge.\n\nFor instance, how do I ch into this folder /usr/local/lib/node_modules/roots/bin/roots after a `cd ~` ?\n\n```\nMuthership:library chaz$ cd /usr/local/lib/node_modules/roots/bin/roots\n-bash: cd: /usr/local/lib/node_modules/roots/bin/roots: No such file or directory\n```\n\nI need to understand the mac file structure better. \n. @jenius  Thanks. I'm still at a loss though on how to rm the symlink and roots.1 I can't get the command line to find the folder. Any suggestions on commands I can try to resolve this issue?\n. @jenius It was a permissions error.  My new stumbling block is related to dependencies and I'll search the issues to see if others have had the same problem.\n\n However, to tie up loose ends. What I needed to do is to change the ownership from the root to my username. To do this I used these commands:\n\n`Muthership:/ chaz$ sudo chown -R chaz /usr/local/bin/\nMuthership:/ chaz$ sudo chown -R chaz /usr/local/lib/node_modules\nMuthership:/ chaz$ sudo chown -R chaz /usr/local/share/\n`\n. @jenius Got it using the patch above.\n. Ok thanks jeff.\n. I'll have one to add in a few weeks.  Thank you for making this available.\n. \u200bSite looks great! Looking forward to the videos. Nice work @jenius\u200b\n\nOn Thu, Jan 22, 2015 at 1:09 PM, Josh Rowley notifications@github.com\nwrote:\n\n> [image: :+1:]\n> \n> [image: :tada:] [image: :clap:] [image: :confetti_ball:] [image: :clap:] [image:\n> :tada:] [image: :clap:] [image: :confetti_ball:]\n> \n> Well done @jenius https://github.com/jenius.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/426#issuecomment-71068197.\n. Slang updated my GH repo.https://github.com/ccsouthard/curemap\n\nWhen I run the watch  After installing V3- I run into issues.\n\nSo the files have been upgraded but my local development environment seems to be messy and out of order.\n.  I contacted @slang800  before posting. I will circle back. Thank you for your openness and willingness to help solve this problem. If you wish to start debugging, where would you begin? The new version obviously is highly complex and as an outsider it is taking me a while to understand all of the changes.  \n. @slang800 updated and cleaned the app for me. I'm assuming the new v3 won't jive with my older code. So I should probably revert back to the earlier version. I'll start reading through the new branch. \n. @slang800 Thank you. Ping me when you're out of the weeds.  Is there a\nprotocol to uninstalling both versions? I then could clean git history,\nreinstall v3 and then pull the repo.\n\nOn Thu, Oct 9, 2014 at 3:05 PM, Sean Lang notifications@github.com wrote:\n\n> @ccsouthard https://github.com/ccsouthard - the code is updated to work\n> with v3 & compiles on my machine... I'll try to work with you to debug your\n> error later, but right now I'm super busy with intermedia & have 0 freetime\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/571#issuecomment-58560833.\n.  To further clarify my problem. The developer who was working with me on this project forked the v3 update.  it appears that this could be a problem on other systems as well.\n\"I could'nt run on the new version, the error displayed is Error: Cannot find module 'axis-css'. Kindly suggest.\"\n\n This is the same error I encountered after running the watch. I installed the module and the other modules that I was prompted to install. However \u2013 I'm at a standstill.\n\nIn case @slang800 is full out. Are there any other  developers (available for freelance) who could help me with deploying my app prototype? I have about five days at best to share at a conference and I'm a bit over my head.\n. THANK YOU. Yes. Please email me at chazsouthard @ gmail\n\nOn Oct 10, 2014, at 2:15 PM, Jeff Escalante notifications@github.com wrote:\n\n> Sounds like a problem with your app.coffee file. But yeah I could probably set up a time this weekend to look through it if you'd like as freelance!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n.  I just resolved the issue of my own by removing my old local repository, cloning the new branch and running the watch.\n\n This was a simple solution. However I think some of the problems lie in the previous version and understanding the changes in how to implement the changes locally. Anyways \u2013 all is well.\n. I'm having a different issue with Yosemite. The watch originally worked after the upgrade (first save w/ changes and reload worked perfect), however now it compiles (second save) and the automatically reload fails. hmmmm\n. Weird. I restarted my computer and now the watcher works. Good to know that Yosemite's architecture does not alter roots. Thanks Jeff.\n. I'd like to check out the new docs site setup. Will that soon live under roots.cx gh repo?\n. https://github.com/ccsouthard/curemap\n*js is verbose and not well written.\n. @jenius  I think it is on my end as well. \n\n```\nMuthership:portfolio-roots chaz$ sudo npm i roots@pre -g\nPassword:\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> node ./post_install.js\n```\n\nCould this be an internal administration issue?  This could be a shot in the dark; I've had a variety of modules fail due to default privacy issues after upgrading to Yosemite. Thanks for looking into it.\n. On mac, no luck so far with `sudo chown -R $USER /usr/local/lib` . \n\nI think I have many node issues. \n\n```\nMuthership:portfolio-roots chaz$ sudo chown -R $USER /usr/local/lib\nPassword:\nMuthership:portfolio-roots chaz$  sudo npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/posix/.node-gyp\"\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/chaz/.node-gyp/0.10.33\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/.node-gyp\"\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/local/lib/node_modules/roots\n> node ./post_install.js\n\n---------------------------------------------------------\nRoots uses analytics to help the core team to get a\nbetter view of how developers use roots. All analytics\nare collected anonymously, and analytics data is used\nonly to make roots better for everyone. However, if you\nwould like to disable analytics, you are welcome to do\nso by running the command `roots analytics --disable`\n\nMuch like roots itself, roots' analytics are open source.\nCheck out http://roots.cx/analytics for more information.\n---------------------------------------------------------\nroots@3.0.0-rc.10 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 graceful-fs@3.0.5\n\u251c\u2500\u2500 vinyl@0.4.6 (clone-stats@0.0.1, clone@0.2.0)\n\u251c\u2500\u2500 minimatch@1.0.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 when@3.6.4\n\u251c\u2500\u2500 argparse@0.1.16 (underscore.string@2.4.0, underscore@1.7.0)\n\u251c\u2500\u2500 readdirp@1.3.0 (graceful-fs@2.0.3, minimatch@0.2.14, readable-stream@1.0.33)\n\u251c\u2500\u2500 serve-static@1.7.1 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, send@0.10.1)\n\u251c\u2500\u2500 coffee-script@1.8.0 (mkdirp@0.3.5)\n\u251c\u2500\u2500 update-notifier@0.2.2 (is-npm@1.0.0, string-length@1.0.0, chalk@0.5.1, semver-diff@2.0.0, latest-version@1.0.0)\n\u251c\u2500\u2500 posix@1.0.4\n\u251c\u2500\u2500 keen.io@0.1.3 (underscore@1.5.2, superagent@0.21.0)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 configstore@0.3.1 (object-assign@0.3.1, osenv@0.1.0, uuid@1.4.2, js-yaml@3.0.2)\n\u251c\u2500\u2500 accord@0.12.0 (indx@0.2.2, resolve@0.7.4, fobject@0.0.3, glob@4.3.1, uglify-js@2.4.16)\n\u251c\u2500\u2500 charge@0.0.3 (infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.2, morgan@1.0.1, alchemist-middleware@0.0.4, hygienist-middleware@0.0.3, connect@3.3.3, faye-websocket@0.7.3, publicist-middleware@0.0.1, lodash.assign@2.4.1, compression@1.2.2, lodash.remove@2.4.1, archivist-middleware@0.0.1, escapist-middleware@0.0.2, pathologist-middleware@0.0.1, update-notifier@0.1.10, apology-middleware@0.0.4)\n\u251c\u2500\u2500 sprout@0.1.3 (indx@0.2.2, which@1.0.8, osenv@0.1.0, ncp@1.0.1, string@2.1.0, colors@1.0.3, ejs@1.0.0, readdirp@1.1.0, inquirer@0.8.0)\n\u251c\u2500\u2500 chokidar@0.8.4 (recursive-readdir@0.0.2, fsevents@0.2.1)\n\u251c\u2500\u2500 ship@0.1.4 (indx@0.2.2, mime@1.2.11, colors@1.0.3, fstream@1.0.3, optimist@0.6.1, file-map@0.0.1, tar@1.0.3, ftp@0.3.8, request@2.51.0, github@0.2.1, ssh2@0.3.6, js-yaml@3.2.3, heroku-client@1.5.0, aws-sdk@2.1.3, inquirer@0.8.0)\n\u2514\u2500\u2500 npm@2.1.12\nMuthership:portfolio-roots chaz$ ls\nroots\nMuthership:portfolio-roots chaz$ roots new test\n\u2718 Error: Command failed: npm ERR! install Couldn't read dependencies\nnpm ERR! Error: Invalid name: \"<%= name %>\"\nnpm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\nnpm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\nnpm ERR!     at Array.forEach (native)\nnpm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\nnpm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\nnpm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\nnpm ERR!     at evalmachine.<anonymous>:271:14\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/chaz/.config/sprout/roots-base\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\nnpm ERR! not ok code 0\n\nPotentially unhandled rejection [3] Error: Command failed: npm ERR! install Couldn't read dependencies\nnpm ERR! Error: Invalid name: \"<%= name %>\"\nnpm ERR!     at ensureValidName (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:315:15)\nnpm ERR!     at Object.module.exports.fixNameField (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:204:5)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:30:38\nnpm ERR!     at Array.forEach (native)\nnpm ERR!     at normalize (/usr/local/lib/node_modules/npm/node_modules/read-package-json/node_modules/normalize-package-data/lib/normalize.js:29:15)\nnpm ERR!     at final (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:342:33)\nnpm ERR!     at then (/usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:126:33)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/read-package-json/read-json.js:331:40\nnpm ERR!     at evalmachine.<anonymous>:271:14\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! cwd /Users/chaz/.config/sprout/roots-base\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/.config/sprout/roots-base/npm-debug.log\nnpm ERR! not ok code 0\n\n  at ChildProcess.exithandler (child_process.js:648:15)\n  at ChildProcess.emit (events.js:98:17)\n  at maybeClose (child_process.js:756:16)\n  at Socket.<anonymous> (child_process.js:969:11)\n  at Socket.emit (events.js:95:17)\n  at Pipe.close (net.js:465:12)\n```\n\n@jenius and @hhsnopek-  Is there an easy way to clean and uninstall node and then reinstall?  I'll start looking on stack exchange \u2013 but in case you run into this before, I'm all ears.  I'd rather not reinstall my OS. ;(\n. @hhsnopek good reference.\nI ended up manually removing node and some node modules and installed nvm. I reinstalled a jeet and the stylus watcher is working.  Strangely, pulling\n\n```\n sudo npm i roots@pre -g\nPassword:\n\n> posix@1.0.4 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing posix@1.0.4\n\n> fsevents@0.2.1 install /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> node ./post_install.js\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n\nnode.js:815\n    var cwd = process.cwd();\n                      ^\nError: EACCES, permission denied\n    at Function.startup.resolveArgv0 (node.js:815:23)\n    at startup (node.js:58:13)\n    at node.js:906:3\n\nnpm ERR! roots@3.0.0-rc.10 postinstall: `node ./post_install.js`\nnpm ERR! Exit status 8\nnpm ERR! \nnpm ERR! Failed at the roots@3.0.0-rc.10 postinstall script.\nnpm ERR! This is most likely a problem with the roots package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node ./post_install.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls roots\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"/Users/chaz/.nvm/v0.10.34/bin/node\" \"/Users/chaz/.nvm/v0.10.34/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz/projects/portfolio-roots\nnpm ERR! node -v v0.10.34\nnpm ERR! npm -v 1.4.28\nnpm ERR! code ELIFECYCLE\nnpm ERR! not ok code 0\n```\n. I _think_ you maybe right.  However, I'm still pulling the same errors without sudo. \n. For my purposes right now, jeet works. But, I'd like to figure out the  why?\n\n```\nMuthership:portfolio-sandbox chaz$ stylus -u jeet -w style.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/stylus/lib/functions/index.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/index.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_settings.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_functions.styl\n  watching /Users/chaz/.nvm/v0.10.34/lib/node_modules/jeet/stylus/jeet/_grid.styl\n  compiled style.css\n  watching style.styl\n```\n.  Be blunt. Save me time. I'm going to revisit this in the morning and use\nbrew.\n\nOn Wed, Dec 17, 2014 at 7:57 PM, Henry Snopek notifications@github.com\nwrote:\n\n> stylus doesn't need the permissions like postfix does.\n> \n> The error says: _EACCES, permission denied_\n> If you notice the postinstall uses, node ./post_install.js and _not_ sudo\n> ./post_install.js.\n> \n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> sh: node-gyp: command not found\n> npm WARN optional dep failed, continuing fsevents@0.2.1\n> /Users/chaz/.nvm/v0.10.34/bin/roots -> /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots/bin/roots\n> \n> > roots@3.0.0-rc.10 postinstall /Users/chaz/.nvm/v0.10.34/lib/node_modules/roots\n> > node ./post_install.js\n> \n> shell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\n> \n> node.js:815\n>     var cwd = process.cwd();\n>                       ^\n> Error: EACCES, permission denied\n>     at Function.startup.resolveArgv0 (node.js:815:23)\n>     at startup (node.js:58:13)\n>     at node.js:906:3\n> \n> Sorry to be so blunt, but the issue is that your permissions are\n> incorrect. It's because you're using sudo to run, install, and access\n> your node_modules with npm and node. To fix this you must reinstall node\n> and npm, _without_ using sudo. If you _really_ don't want to use brew to\n> fix the issue, use this gist. Installs node and npm within 30s\n> https://gist.github.com/isaacs/579814#file-node-and-npm-in-30-seconds-sh\n> and uses proper permissions.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/587#issuecomment-67425579.\n. yeah, that Is many errors.\n\n\"The errors have been resolved.\n\nRemove:\n- /usr/lib/nodejs/npm\n- /usr/lib/node_modules\n- /usr/lib/npm\n- /home/.node-nyp\n- /home/.node_modules\n- basically anything that is related to npm.\n\nRestart computer, sudo apt-get clean && sudo apt-get autoclean, sudo\napt-get update && sudo apt-get upgrade, sudo apt-get install npm && sudo\nnpm install roots -g.\n\nEverything should install correctly if you deleted all the files in the\nprior steps.\n\u200b\"\u200b\n\nNo sudo. Got it.\n\nOn Wed, Dec 17, 2014 at 7:59 PM, Henry Snopek notifications@github.com\nwrote:\n\n> Also here's a reference to a past struggle of mine that was caused by\n> using sudo #196 https://github.com/jenius/roots/issues/196\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/587#issuecomment-67425781.\n. @hhsnopek  I followed your detailed instructions.\n1. Removed all NPM and node files\n2. Installed homebrew\n3. Reinstalled node\n4. Ran the basic install function for roots \n\n```\nMuthership:~ chaz$ npm i roots@pre -g\nnpm ERR! Error: EACCES, mkdir '/usr/local/lib/node_modules/roots'\nnpm ERR!  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/roots']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/lib/node_modules/roots',\nnpm ERR!   fstream_type: 'Directory',\nnpm ERR!   fstream_path: '/usr/local/lib/node_modules/roots',\nnpm ERR!   fstream_class: 'DirWriter',\nnpm ERR!   fstream_stack: \nnpm ERR!    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',\nnpm ERR!      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53',\nnpm ERR!      'Object.oncomplete (fs.js:107:15)' ] }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path /usr/local/lib/node_modules/roots\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots\nnpm ERR! fstream_type Directory\nnpm ERR! fstream_class DirWriter\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, mkdir '/usr/local/lib/node_modules/roots'\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/chaz/npm-debug.log\nnpm ERR! not ok code 0\n```\n1. sudo  would take care of running the command as root/administrator \u2013 but I think I'm missing or have some other problem.\n\nAny thoughts?\n. @hhsnopek That makes sense but I'm still encountering similar errors.\n1. \n\n```\n Muthership:~ chaz$ cd /usr/local/lib \nMuthership:lib chaz$ sudo chown -R $USER /usr/local/lib\nPassword:\n\n```\n1.  However, I'm still encounter the same errors.\n\n```\nMuthership:lib chaz$ npm i roots@pre -g\nnpm ERR! Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR!  { [Error: EACCES, unlink '/usr/local/share/man/man1/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/share/man/man1/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /usr/local/lib\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path /usr/local/share/man/man1/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR! error rolling back Error: EACCES, unlink '/usr/local/share/man/man1/roots.1'\nnpm ERR! error rolling back  { [Error: EACCES, unlink '/usr/local/share/man/man1/roots.1']\nnpm ERR! error rolling back   errno: 3,\nnpm ERR! error rolling back   code: 'EACCES',\nnpm ERR! error rolling back   path: '/usr/local/share/man/man1/roots.1' }\nnpm ERR! not ok code 0 \n\n```\n\nAnything blatantly obvious? I'm not too comfortable under the hood.\n. ```\nMuthership:lib chaz$ cd ~\n\nMuthership:~ chaz$ rm -f /usr/local/share/man/man1/roots.1\n\nrm: /usr/local/share/man/man1/roots.1: Permission denied\n```\n\nThank you. Let me give this a go. Thanks for sticking with it.\n. ```\nMuthership:~ chaz$ sudo rm -f /usr/local/share/man/man1/roots.1\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n\nI'm confused now.\n. ```\nMuthership:~ chaz$ chown -R $USER /usr/local/bin/ \nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n. Thanks Henry.\nI don't think I'll be able to complete today I spilled some coffee on my laptop \u2026it is bugging out. One of those days. The coffee could be more problematic. Ech oh. I'll  remove this comment from GH later. \n\nSent from my wireless device (please forgive grammatical errors).\n\n> On Dec 18, 2014, at 9:12 PM, Henry Snopek notifications@github.com wrote:\n> \n> sudo chown -R $USER /usr/local/bin/ then sudo rm -fr /usr/local/share/man/man1/roots.1 then install roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/bin/\nPassword:\nMuthership:~ chaz$  sudo rm -fr /usr/local/share/man/man1/roots\nMuthership:~ chaz$  npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n\nno dice.\n. @hhsnopek  I did. Any other ideas?\n\n```\nMuthership:~ chaz$ sudo rm -fr /usr/local/share/man/man1/roots.1\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n. yes. looks like symlink problem.\n\n```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nPassword:\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.33\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n\n```\n. Thanks. I'm going to follow : http://stackoverflow.com/questions/11177954/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x\n\nthen reinstall. If there is a better way please let me know.\n. ```\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/lib/\nMuthership:~ chaz$ sudo chown -R $USER /usr/local/bin/\nMuthership:~ chaz$ npm i roots@pre -g\n\n> posix@1.0.4 install /usr/local/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/posix/src/posix.o\n  SOLINK_MODULE(target) Release/posix.node\n  SOLINK_MODULE(target) Release/posix.node: Finished\n\n> fsevents@0.2.1 install /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nnpm ERR! Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR!  { [Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '../../../lib/node_modules/roots/man/roots.1' }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/chaz\nnpm ERR! node -v v0.10.34\nnpm ERR! npm -v 1.4.28\nnpm ERR! path ../../../lib/node_modules/roots/man/roots.1\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, symlink '../../../lib/node_modules/roots/man/roots.1'\nnpm ERR! not ok code 0\n```\n\nIt might be my OS. I followed the steps exactly. I'm not going to give up, but I'm at a standstill.\n\nReinstall OSX?\n. ```\nMuthership:~ chaz$ npm install stylus -g\n/usr/local/bin/stylus -> /usr/local/lib/node_modules/stylus/bin/stylus\nstylus@0.49.3 /usr/local/lib/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u251c\u2500\u2500 debug@2.1.0 (ms@0.6.2)\n\u251c\u2500\u2500 source-map@0.1.41 (amdefine@0.1.0)\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\n```\n\nStylus works fine. Same roots error.\n.  I did perfectly. Theoretically, I understand that the file causing the problems is still improperly permissioned.  I've uninstalled node multiple times following the top answers at SE. I can't seem to locate the file \u2013 when I go to folder\u2026 I keep receiving file or folder not found.\n. @hhsnopek  I didn't until I felt I exhausted my knowledge.\n\nFor instance, how do I ch into this folder /usr/local/lib/node_modules/roots/bin/roots after a `cd ~` ?\n\n```\nMuthership:library chaz$ cd /usr/local/lib/node_modules/roots/bin/roots\n-bash: cd: /usr/local/lib/node_modules/roots/bin/roots: No such file or directory\n```\n\nI need to understand the mac file structure better. \n. @jenius  Thanks. I'm still at a loss though on how to rm the symlink and roots.1 I can't get the command line to find the folder. Any suggestions on commands I can try to resolve this issue?\n. @jenius It was a permissions error.  My new stumbling block is related to dependencies and I'll search the issues to see if others have had the same problem.\n\n However, to tie up loose ends. What I needed to do is to change the ownership from the root to my username. To do this I used these commands:\n\n`Muthership:/ chaz$ sudo chown -R chaz /usr/local/bin/\nMuthership:/ chaz$ sudo chown -R chaz /usr/local/lib/node_modules\nMuthership:/ chaz$ sudo chown -R chaz /usr/local/share/\n`\n. @jenius Got it using the patch above.\n. ",
    "dkmooers": "Big +1 for this - I really enjoy being able to use this with Metalsmith via Gulp. I can have Safari, Firefox, and Chrome open on my Mac and then an Android phone and iPad all running simultaneously - big productivity boost for responsive testing. I'd be willing to take a stab at this if someone could point me in the right direction?\n. Sorry, I'm out on this one, I'm not using Roots anymore - I'm sticking with WP for now, and using Meteor for an interactive app. Best of luck!\n. Sounds great, thanks for the heads-up!\n. Big +1 for this - I really enjoy being able to use this with Metalsmith via Gulp. I can have Safari, Firefox, and Chrome open on my Mac and then an Android phone and iPad all running simultaneously - big productivity boost for responsive testing. I'd be willing to take a stab at this if someone could point me in the right direction?\n. Sorry, I'm out on this one, I'm not using Roots anymore - I'm sticking with WP for now, and using Meteor for an interactive app. Best of luck!\n. Sounds great, thanks for the heads-up!\n. ",
    "jepedo": "Integrating browsersync would be slick. +1 for this.\n. Integrating browsersync would be slick. +1 for this.\n. ",
    "calebeby": "How can BrowserSync be configured in Roots?\n. I want the browsersync script in `head` instead of `body`:\n\n``` js\nsnippetOptions: {\n  rule: {\n    match: /<\\/head>/i,\n      fn: function (snippet, match) {\n        return snippet + match;\n      }\n  }\n}\n```\n\nfrom https://github.com/BrowserSync/browser-sync/issues/977#issuecomment-236443965\n. Sure, I'll see if I can work on it this weekend. Turbolinks can be used outside of rails, it is just a script that intercepts links like `spike-pushstate`.\n\nIt does not play nice with browsersync because browsersync puts the script\nin `body` instead of `head`\n. Can `spike-pushstate` work with roots?\n. Even if `spike-pushstate` does work with `roots`, it is still a good idea to make browsersync configurable. Are you still interested in me working on this?\n. @jescalan can you look at this?\n. I haven't written tests before, is it documented how to do this?\n. In which file are the tests for the server?\n. Here's the plan:\n- [ ] make a fixture for browsersync\n- [ ] in `watcher.coffee` add a test that does the following:\n  - Create new `roots` from browsersync fixture\n  - Once it's ready, test some easily configurable feature of browsersync\n\nWhich feature of Browsersync would be easiest to test? There is a list of them [here](https://www.browsersync.io/docs/options). I was thinking the UI address, but I don't see a http request tester in mocha. We would have to do something like [this](https://davidbeath.com/posts/testing-http-responses-in-nodejs.html).\n\nWhat do you think?\n. In the `watcher.coffee` file is it using the `compile/basic` fixture? That fixture does not have an `app.coffee`. Should I add one, or make a new fixture? If I make a new fixture, how is the fixture started by the test? How do I check variables in `local_server.coffee` from within the test?\n\nWow. I have a lot of questions today :smile:\n. How can BrowserSync be configured in Roots?\n. I want the browsersync script in `head` instead of `body`:\n\n``` js\nsnippetOptions: {\n  rule: {\n    match: /<\\/head>/i,\n      fn: function (snippet, match) {\n        return snippet + match;\n      }\n  }\n}\n```\n\nfrom https://github.com/BrowserSync/browser-sync/issues/977#issuecomment-236443965\n. Sure, I'll see if I can work on it this weekend. Turbolinks can be used outside of rails, it is just a script that intercepts links like `spike-pushstate`.\n\nIt does not play nice with browsersync because browsersync puts the script\nin `body` instead of `head`\n. Can `spike-pushstate` work with roots?\n. Even if `spike-pushstate` does work with `roots`, it is still a good idea to make browsersync configurable. Are you still interested in me working on this?\n. @jescalan can you look at this?\n. I haven't written tests before, is it documented how to do this?\n. In which file are the tests for the server?\n. Here's the plan:\n- [ ] make a fixture for browsersync\n- [ ] in `watcher.coffee` add a test that does the following:\n  - Create new `roots` from browsersync fixture\n  - Once it's ready, test some easily configurable feature of browsersync\n\nWhich feature of Browsersync would be easiest to test? There is a list of them [here](https://www.browsersync.io/docs/options). I was thinking the UI address, but I don't see a http request tester in mocha. We would have to do something like [this](https://davidbeath.com/posts/testing-http-responses-in-nodejs.html).\n\nWhat do you think?\n. In the `watcher.coffee` file is it using the `compile/basic` fixture? That fixture does not have an `app.coffee`. Should I add one, or make a new fixture? If I make a new fixture, how is the fixture started by the test? How do I check variables in `local_server.coffee` from within the test?\n\nWow. I have a lot of questions today :smile:\n. ",
    "nathanharper": "I'm not against pulling it out into its own method, though I'm not sure where you guys would want it to go in terms of organization. Would it be enough to make a new method for TerminalPrinter, or as part of some new error processing module?\n. No prob! Logic's been pulled out now.\n. I'm not against pulling it out into its own method, though I'm not sure where you guys would want it to go in terms of organization. Would it be enough to make a new method for TerminalPrinter, or as part of some new error processing module?\n. No prob! Logic's been pulled out now.\n. ",
    "brian-mann": "@kylemac Got it.\n@jenius I agree, digests are a PITA to deal with - but they have some significant upsides.  Automatic cache busting, a rock-solid mechanism to know when assets have been updated (by polling the `manifest.json` file), and easy rollback support.\n. @kylemac Got it.\n@jenius I agree, digests are a PITA to deal with - but they have some significant upsides.  Automatic cache busting, a rock-solid mechanism to know when assets have been updated (by polling the `manifest.json` file), and easy rollback support.\n. ",
    "andrewglassett": "There is no preview, zero bytes. Resolution 0x0\n. Sorry, it isn't zero bytes but the resolution is 0x0\n. There is no preview, zero bytes. Resolution 0x0\n. Sorry, it isn't zero bytes but the resolution is 0x0\n. ",
    "olivier-w": "I'm having the same issue (10.9.2, 2012 15\" rMBP). I found this on Twitter explaining a fix:\nhttps://twitter.com/jaminben/status/396687516197064704\n\n...but I'm not sure where to define `watcher_ignore_folders`. Can anyone help?\n. Thanks! Adding `node_modules` to `watcher_ignores` seems to have fixed it.\nI don't seem to be using bower. This is a new sample project based on your jeet video, so no giant file trees here.\n. Actually I'm on v3 rc6\n\n![screen shot 2014-05-07 at 4 13 06 pm](https://cloud.githubusercontent.com/assets/465250/2908123/140ee2c0-d624-11e3-9e4b-bc4139dca9a9.png)\n. Sure, glad I could help. Roots is awesome!\n. Sure, just made another PR here: https://github.com/jenius/roots/pull/467\n. I'm having the same issue (10.9.2, 2012 15\" rMBP). I found this on Twitter explaining a fix:\nhttps://twitter.com/jaminben/status/396687516197064704\n\n...but I'm not sure where to define `watcher_ignore_folders`. Can anyone help?\n. Thanks! Adding `node_modules` to `watcher_ignores` seems to have fixed it.\nI don't seem to be using bower. This is a new sample project based on your jeet video, so no giant file trees here.\n. Actually I'm on v3 rc6\n\n![screen shot 2014-05-07 at 4 13 06 pm](https://cloud.githubusercontent.com/assets/465250/2908123/140ee2c0-d624-11e3-9e4b-bc4139dca9a9.png)\n. Sure, glad I could help. Roots is awesome!\n. Sure, just made another PR here: https://github.com/jenius/roots/pull/467\n. ",
    "nporteschaikin": "I'm following up on this.  I'm on `rc6` on an rMBP 13\" and `node`'s CPU usage hovers around 90% when I am running the watcher.\n. @jenius on top of it. always.\n. This was an issue on [roots-records](http://www.github.com/carrot/roots-records).  Setup function would be clutch.\n. @jenius :fire: :+1: \n. @jenius any ETA on merging this? I want to refactor roots-records.\n. If I have bad syntax in coffee:\n\n```\ncompiling... \u2718 Error: /Users/noah/Projects/parm-genie/assets/js/controllers/comments.coffee:3:3: error: unexpected =\n  =\n  ^\n  at Error (<anonymous>:null:null)\n  at on_error (/Users/noah/Projects/roots/lib/cli/watch.coffee:51:19)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nor in jade:\n\n```\ncompiling... \u2718 Error: Error: Jade:5\n    3| else\n    4|   h1 Dashboard\n  > 5| ()\n    6| = bar\n    7| a(href=route('sessions', 'destroy')) Log Out\n    8| \n\nunexpected token \"attrs\"\n  at Error (<anonymous>:null:null)\n  at on_error (/Users/noah/Projects/roots/lib/cli/watch.coffee:51:19)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nThis is on instantiating `roots watch` or making a change like shown above and saving.\n. Much bug.Such fix.\n\nOn Mon, May 19, 2014 at 11:45 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## Closed #469.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/469#event-122517640\n. ``` coffeescript\nres.replace /\\.[a-zA-Z]+$/, \".#{ext}\"\n```\n. @slang800 Rather than simply lol'ing, maybe you could educate me on why that doesn't work?  Since there's no knowledge to be garnered from \"lol.\"  ;)\n. @jenius Wow.  So idiot.  Much embarrassed.\n. @jenius :tennis: :point_up: \n. @kylemac all set.\n. I'm following up on this.  I'm on `rc6` on an rMBP 13\" and `node`'s CPU usage hovers around 90% when I am running the watcher.\n. @jenius on top of it. always.\n. This was an issue on [roots-records](http://www.github.com/carrot/roots-records).  Setup function would be clutch.\n. @jenius :fire: :+1: \n. @jenius any ETA on merging this? I want to refactor roots-records.\n. If I have bad syntax in coffee:\n\n```\ncompiling... \u2718 Error: /Users/noah/Projects/parm-genie/assets/js/controllers/comments.coffee:3:3: error: unexpected =\n  =\n  ^\n  at Error (<anonymous>:null:null)\n  at on_error (/Users/noah/Projects/roots/lib/cli/watch.coffee:51:19)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nor in jade:\n\n```\ncompiling... \u2718 Error: Error: Jade:5\n    3| else\n    4|   h1 Dashboard\n  > 5| ()\n    6| = bar\n    7| a(href=route('sessions', 'destroy')) Log Out\n    8| \n\nunexpected token \"attrs\"\n  at Error (<anonymous>:null:null)\n  at on_error (/Users/noah/Projects/roots/lib/cli/watch.coffee:51:19)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/Users/noah/Projects/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/Users/noah/Projects/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nThis is on instantiating `roots watch` or making a change like shown above and saving.\n. Much bug.Such fix.\n\nOn Mon, May 19, 2014 at 11:45 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## Closed #469.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/469#event-122517640\n. ``` coffeescript\nres.replace /\\.[a-zA-Z]+$/, \".#{ext}\"\n```\n. @slang800 Rather than simply lol'ing, maybe you could educate me on why that doesn't work?  Since there's no knowledge to be garnered from \"lol.\"  ;)\n. @jenius Wow.  So idiot.  Much embarrassed.\n. @jenius :tennis: :point_up: \n. @kylemac all set.\n. ",
    "ganar": "My solution to this issue was to set a `baseURL` in the template\n. I tried to [use this solution to include markdownin in a variable ](http://stackoverflow.com/questions/21793753/including-markdown-inside-yaml-front-matter), but it did not render in the blog view\n\nThere is [also this other comment about it in another system](http://push.cwcon.org/learn/yaml-and-markdown.html) that does not apply to _roots_\n. How would you do this?\n\n> You could however take the slightly more verbose way of requiring in something like `marked` as a local to jade, and passing your text to that function...\n\nI tried to do that before opening the issue, but did not work in the view: the system told me that the function was not available. I guess is because the local function wasn't declared yet\n. I humbly suggest an article on how to update roots. I am on Version 3.1.0 and can't find the reference on how to update to 3.2.2\n. @jenius Jeff: thanks a lot for your help. Please consider linking together the article on [roots configuration](http://roots.cx/docs/configuration)  and [environments](http://roots.cx/docs/environments) or give a more complete example at the end of _environment_. The documentation is not very clear for us noobs.\n. @joshrowley can you be more specific on were is `package.json` located?. I don't program in this technology, I'm a roots user. How do you manage to keep both versions in the same machine? \n. Thanks @Leeds-eBooks: do I have to `cd` to the directory were the project is before doing the install? will this affect the other, more recent, roots installation?\n. Excellent! thanks a lot for your help @Leeds-eBooks\n. @Leeds-eBooks all hell broke loose\n\nI switched to _El Capit\u00e1n_ and roots 2.1.4 no longer works. Period. The error log for the \u2014attempted\u2014 installation is 1.5MB.\n\nDo you have any idea of which version of Node should I install to get it to run again? I'm trying to use `NVM` to install an old version and see if I can bring this old project (2 years old) back from the dead.\n\n**HINT** I have another machine running _El Capit\u00e1n_ with this project working. Is there anyway that I can use to move the binaries for roots to my machine that may allow me to keep working on the project?\n\nAny help is truly appreciated\n\n## Tail of the error in the teminal\n\n```\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [Release/obj.target/binding/binding.o] Error 1\ngyp ERR! build error \ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (.nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:87:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:172:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Darwin 15.4.0\ngyp ERR! command \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/iojs\" \".nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /Volumes/Legacy/webserver/projects/eck/bocetos/redesign/node_modules/roots/node_modules/node-sass\ngyp ERR! node -v v3.3.1\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \nBuild failed\nnpm ERR! Darwin 15.4.0\nnpm ERR! argv \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/iojs\" \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/npm\" \"install\" \"roots@2.1.5\"\nnpm ERR! node v3.3.1\nnpm ERR! npm  v2.14.3\nnpm ERR! code ELIFECYCLE\n\nnpm ERR! node-sass@0.8.6 install: `node build.js`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the node-sass@0.8.6 install script 'node build.js'.\nnpm ERR! This is most likely a problem with the node-sass package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node build.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls node-sass\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Volumes/Legacy/webserver/projects/eck/bocetos/redesign/npm-debug.log\n```\n. @declandewet Great answer! So clear and thorough at the same time! Kudos! I particularly appreciate the link to the specific line on `package.json` with the dependency. I'm a designer that uses roots, not a node developer: the curve to use, and, above all, maintain the projects over time, using this kind of technologies has been quite steep.\n\nMy roots 2.1.4 installation is finally up and running, the only change to your instructions that I would appreciate very much  in your answer \u2014for all of us noobs in the audience\u2014 is this:\n\n```\nnpm install -g roots@2.1.4\n```\n\nIt does not work without the `-g` (global) option, and the roots version has to be specified. Other than that the answer is perfect.\n. may I provide help on this issue? maybe those pages can run as static pages here, on github?\n\nThe point may seem moot, but most projects need to run in the version of the software that was used to develop them, and upgrading is not an option.\n. Were can I find the original docs in HTML? In which repo? I may be able to create a repo for them or fork them in my personal account and publish them in github as static pages, you can point v1.root.cx there. Would that be ok with you?\n. Here is the documentation for Roots  2, running on github, it took a while, but everything is working:\n\nhttp://ganar.github.io/roots-www-v1-docs/\n\nI think that you can point v1.roots.cx to this place, or maybe host the pages that I corrected in http://github.com/jescalan/roots-www-old, whatever feels right to you. The idea is to not lose the documentation, too keep it viewable online.\n\nThanks for all your efforts with root.\n\nCheers\n. Hi Jeff:\n\nI\u2019m sorry for my delay in answering you. The CNAME configuration on my side is ready \n\nCheers!\n\n> On 15May, 2016, at 3:58 PM, Jeff Escalante notifications@github.com wrote:\n> \n> You need to add a CNAME file to the repo for the domain to work when I point it there, see the docs here: https://help.github.com/articles/using-a-custom-domain-with-github-pages/ https://help.github.com/articles/using-a-custom-domain-with-github-pages/\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub https://github.com/jescalan/roots/issues/712#issuecomment-219307053\n. Great: It's working! I need to change a couple of things, but at least it is usable.\n. My solution to this issue was to set a `baseURL` in the template\n. I tried to [use this solution to include markdownin in a variable ](http://stackoverflow.com/questions/21793753/including-markdown-inside-yaml-front-matter), but it did not render in the blog view\n\nThere is [also this other comment about it in another system](http://push.cwcon.org/learn/yaml-and-markdown.html) that does not apply to _roots_\n. How would you do this?\n\n> You could however take the slightly more verbose way of requiring in something like `marked` as a local to jade, and passing your text to that function...\n\nI tried to do that before opening the issue, but did not work in the view: the system told me that the function was not available. I guess is because the local function wasn't declared yet\n. I humbly suggest an article on how to update roots. I am on Version 3.1.0 and can't find the reference on how to update to 3.2.2\n. @jenius Jeff: thanks a lot for your help. Please consider linking together the article on [roots configuration](http://roots.cx/docs/configuration)  and [environments](http://roots.cx/docs/environments) or give a more complete example at the end of _environment_. The documentation is not very clear for us noobs.\n. @joshrowley can you be more specific on were is `package.json` located?. I don't program in this technology, I'm a roots user. How do you manage to keep both versions in the same machine? \n. Thanks @Leeds-eBooks: do I have to `cd` to the directory were the project is before doing the install? will this affect the other, more recent, roots installation?\n. Excellent! thanks a lot for your help @Leeds-eBooks\n. @Leeds-eBooks all hell broke loose\n\nI switched to _El Capit\u00e1n_ and roots 2.1.4 no longer works. Period. The error log for the \u2014attempted\u2014 installation is 1.5MB.\n\nDo you have any idea of which version of Node should I install to get it to run again? I'm trying to use `NVM` to install an old version and see if I can bring this old project (2 years old) back from the dead.\n\n**HINT** I have another machine running _El Capit\u00e1n_ with this project working. Is there anyway that I can use to move the binaries for roots to my machine that may allow me to keep working on the project?\n\nAny help is truly appreciated\n\n## Tail of the error in the teminal\n\n```\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [Release/obj.target/binding/binding.o] Error 1\ngyp ERR! build error \ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (.nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:87:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:172:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Darwin 15.4.0\ngyp ERR! command \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/iojs\" \".nvm/versions/io.js/v3.3.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /Volumes/Legacy/webserver/projects/eck/bocetos/redesign/node_modules/roots/node_modules/node-sass\ngyp ERR! node -v v3.3.1\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \nBuild failed\nnpm ERR! Darwin 15.4.0\nnpm ERR! argv \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/iojs\" \"/Volumes/Legacy/Users/ganar/.nvm/versions/io.js/v3.3.1/bin/npm\" \"install\" \"roots@2.1.5\"\nnpm ERR! node v3.3.1\nnpm ERR! npm  v2.14.3\nnpm ERR! code ELIFECYCLE\n\nnpm ERR! node-sass@0.8.6 install: `node build.js`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the node-sass@0.8.6 install script 'node build.js'.\nnpm ERR! This is most likely a problem with the node-sass package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node build.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls node-sass\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Volumes/Legacy/webserver/projects/eck/bocetos/redesign/npm-debug.log\n```\n. @declandewet Great answer! So clear and thorough at the same time! Kudos! I particularly appreciate the link to the specific line on `package.json` with the dependency. I'm a designer that uses roots, not a node developer: the curve to use, and, above all, maintain the projects over time, using this kind of technologies has been quite steep.\n\nMy roots 2.1.4 installation is finally up and running, the only change to your instructions that I would appreciate very much  in your answer \u2014for all of us noobs in the audience\u2014 is this:\n\n```\nnpm install -g roots@2.1.4\n```\n\nIt does not work without the `-g` (global) option, and the roots version has to be specified. Other than that the answer is perfect.\n. may I provide help on this issue? maybe those pages can run as static pages here, on github?\n\nThe point may seem moot, but most projects need to run in the version of the software that was used to develop them, and upgrading is not an option.\n. Were can I find the original docs in HTML? In which repo? I may be able to create a repo for them or fork them in my personal account and publish them in github as static pages, you can point v1.root.cx there. Would that be ok with you?\n. Here is the documentation for Roots  2, running on github, it took a while, but everything is working:\n\nhttp://ganar.github.io/roots-www-v1-docs/\n\nI think that you can point v1.roots.cx to this place, or maybe host the pages that I corrected in http://github.com/jescalan/roots-www-old, whatever feels right to you. The idea is to not lose the documentation, too keep it viewable online.\n\nThanks for all your efforts with root.\n\nCheers\n. Hi Jeff:\n\nI\u2019m sorry for my delay in answering you. The CNAME configuration on my side is ready \n\nCheers!\n\n> On 15May, 2016, at 3:58 PM, Jeff Escalante notifications@github.com wrote:\n> \n> You need to add a CNAME file to the repo for the domain to work when I point it there, see the docs here: https://help.github.com/articles/using-a-custom-domain-with-github-pages/ https://help.github.com/articles/using-a-custom-domain-with-github-pages/\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub https://github.com/jescalan/roots/issues/712#issuecomment-219307053\n. Great: It's working! I need to change a couple of things, but at least it is usable.\n. ",
    "eliwilliamson": "i have tested and it does not work on retina devices\n. sweet - looking forward to it!\n. > layout.jade:\n\n``` jade\ndoctype html\nhtml\n  head\n    meta(charset='utf8')\n    meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')\n    meta(name='description', content='description of your site')\n    meta(name='author', content= \"author of the site\")\n    title= path\n    link(rel='stylesheet', href='css/master.css')\n  body\n    block content\n\n  script(data-main=\"js/main\", src=\"//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.9/require.min.js\")\n```\n\n> index.jade:\n\n``` jade\nh1 hello world\n```\n. the auto-reloading isnt working either\n. 3.0.0-rc.5\n. that fixed the problem above however it prevents the the other content in index.jade from showing up\n\nextends layout\n\nh1 hello world\n. nm figured it out\n\nit needs block content\n. thank you @FranzSkuffka :+1: \n. thank you @jenius - please let me know when this is resolved as i have a few projects utilizing roots at the moment. thanks again for all your (and carrot creative's) hard work!\n. Thank you for the update @newswim i'm excited to see this feature enhancement. In the mean time, @jenius is there a way to optimize the `compile` command to work out of the box with netlify? I tried to deploy a site (and compile locally for that matter) with multiple layouts and it left me with a broken build. On netlify, I received the following error: `Error: Error running command: Build script returned non-zero exit code: 127` (see my settings on netlify attached below). I used to love the out-of-the-box functionality of roots and github - the \"it just works\" bit really made me an advocate. I hope carrot see's this enhancement as an investment in retaining the usership who were attracted to roots for the same reason.\n![screen shot 2016-02-22 at 3 00 06 pm](https://cloud.githubusercontent.com/assets/871660/13232501/0177b0fa-d975-11e5-888d-78f0b87a0bd2.png)\n. that was it @jenius - thanks for the help and hope to see gh-pages working again soon with a Ship project update :+1: \n. I found this in their docs but don't know where it is nested in the roots build https://www.browsersync.io/docs/options/#option-notify\n. you rock @jenius thanks for the fix! Looking forward to the deploy --to gh-pages \"ship\" issue resolution :+1: \n. i have tested and it does not work on retina devices\n. sweet - looking forward to it!\n. > layout.jade:\n\n``` jade\ndoctype html\nhtml\n  head\n    meta(charset='utf8')\n    meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')\n    meta(name='description', content='description of your site')\n    meta(name='author', content= \"author of the site\")\n    title= path\n    link(rel='stylesheet', href='css/master.css')\n  body\n    block content\n\n  script(data-main=\"js/main\", src=\"//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.9/require.min.js\")\n```\n\n> index.jade:\n\n``` jade\nh1 hello world\n```\n. the auto-reloading isnt working either\n. 3.0.0-rc.5\n. that fixed the problem above however it prevents the the other content in index.jade from showing up\n\nextends layout\n\nh1 hello world\n. nm figured it out\n\nit needs block content\n. thank you @FranzSkuffka :+1: \n. thank you @jenius - please let me know when this is resolved as i have a few projects utilizing roots at the moment. thanks again for all your (and carrot creative's) hard work!\n. Thank you for the update @newswim i'm excited to see this feature enhancement. In the mean time, @jenius is there a way to optimize the `compile` command to work out of the box with netlify? I tried to deploy a site (and compile locally for that matter) with multiple layouts and it left me with a broken build. On netlify, I received the following error: `Error: Error running command: Build script returned non-zero exit code: 127` (see my settings on netlify attached below). I used to love the out-of-the-box functionality of roots and github - the \"it just works\" bit really made me an advocate. I hope carrot see's this enhancement as an investment in retaining the usership who were attracted to roots for the same reason.\n![screen shot 2016-02-22 at 3 00 06 pm](https://cloud.githubusercontent.com/assets/871660/13232501/0177b0fa-d975-11e5-888d-78f0b87a0bd2.png)\n. that was it @jenius - thanks for the help and hope to see gh-pages working again soon with a Ship project update :+1: \n. I found this in their docs but don't know where it is nested in the roots build https://www.browsersync.io/docs/options/#option-notify\n. you rock @jenius thanks for the fix! Looking forward to the deploy --to gh-pages \"ship\" issue resolution :+1: \n. ",
    "jedifrog": "Perhaps add to readme to freeze it with --save-exact.\n\n``` shell\n$ roots -v\n3.0.0-rc.7\n$ sudo npm remove roots -g\n$ sudo npm install roots@2.1.3 -g --save-exact\n```\n. Actually, I was too quick on the draw. The `--save-exact` flag appears to only freeze locally. Running `npm update -g` will still update roots to v3. There appears to be [no way](https://github.com/npm/npm/issues/3175) to freeze global packages, other than revoking writing rights.\n. Popped my pull request cherry: https://github.com/jenius/roots/pull/480\n. Ah, that makes sense. I hadn't worked with Requirejs before. I've rerun the 'roots new' and 'roots watch' tasks in a new project, and same result, although without the connection interruption error:\n\n``` shell\n\u27a4 roots new roots-test-0.1\n[?] Your project's name: roots-test-0.1\n[?] A brief description of your project: \n\u25b8 project created\n\u25b8 dependencies installing\nnpm WARN package.json roots-test-0.1@ No description\nnpm WARN package.json roots-test-0.1@ No repository field.\nmarked@0.3.2 roots-test-0.1/node_modules/marked\n\nrupture@0.1.0 roots-test-0.1/node_modules/rupture\n\ncoffee-script@1.7.1 roots-test-0.1/node_modules/coffee-script\n\u2514\u2500\u2500 mkdirp@0.3.5\n\nstylus@0.45.1 roots-test-0.1/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 debug@0.8.1\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\naxis@0.2.0 roots-test-0.1/node_modules/axis\n\u2514\u2500\u2500 nib@1.0.2 (stylus@0.37.0)\n\nautoprefixer-stylus@0.1.0 roots-test-0.1/node_modules/autoprefixer-stylus\n\u2514\u2500\u2500 autoprefixer@1.1.20140523 (fs-extra@0.9.1, postcss@0.3.4)\n\njade@1.3.1 roots-test-0.1/node_modules/jade\n\u251c\u2500\u2500 character-parser@1.2.0\n\u251c\u2500\u2500 commander@2.1.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 monocle@1.1.51 (readdirp@0.2.5)\n\u251c\u2500\u2500 constantinople@2.0.0 (uglify-js@2.4.13)\n\u251c\u2500\u2500 with@3.0.0 (uglify-js@2.4.13)\n\u2514\u2500\u2500 transformers@2.1.0 (promise@2.0.0, css@1.0.8, uglify-js@2.2.5)\n\u25b8 dependencies finished installing\n\u25b8 project initialized at /home/jedifrog/Dev/svdb/experiments/roots-test-0.1\n\u25b8 using template: roots-base\n\u2713 done!\n\u27a4 cd roots-test-0.1/\n\u27a4 roots watch\ncompiling... done!\n```\n\nFwiw, other build tools like grunt, broccoli and gulp do work on this machine. Any place I could look that could provide further info? Is there a logging function that I've overlooked?\n\n![screenshot - 05292014 - 05 26 26 pm](https://cloud.githubusercontent.com/assets/5634723/3119401/e9daeafc-e745-11e3-9c4a-90dcf481e983.png)\n. https://github.com/jedifrog/roots-test-0.1\n. I just created a new project called [roots-test](https://github.com/jedifrog/roots-test). It compiles fine.\n. Thanks guys!\n\nRenaming the project folder after the `roots new` command is enough to produce the error.\n`roots new hip.hop` + `roots watch` = error\n`mv hip.hop hophop` + `roots watch` = success\n\n`roots new hiphop` + `roots watch` = success\n`mv hiphop hip.hop` + `roots watch` = error\n\nUpdate: it seems having a dots anywhere in the path causes this error. When I initialized a new project in a subfolder of a folder called 0.1.5, it gave the error again.\n. Version compatibility?\n\nIsn't it easier to keep v3 out of the npm `roots` package until you release v3 stable? I'm still pretty new at this, so forgive my ignorance.\n. ``` shell\n\u27a4 roots -v\n2.1.3\n\u27a4 sudo npm update -g roots\nnpm WARN optional dep failed, continuing fsevents@0.2.0\nnpm WARN engine log-driver@1.2.1: wanted: {\"node\":\">=0.8.6\",\"npm\":\"1.1.65\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine hawk@0.10.2: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine hoek@0.7.6: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine cryptiles@0.1.3: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine boom@0.3.8: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine sntp@0.1.4: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nroots@3.0.0-rc.7 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 graceful-fs@2.0.3\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 configstore@0.3.0 (object-assign@0.2.2, osenv@0.0.3, mkdirp@0.3.5, uuid@1.4.1)\n\u251c\u2500\u2500 when@3.2.2\n\u251c\u2500\u2500 minimatch@0.3.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 vinyl@0.2.3 (clone-stats@0.0.1)\n\u251c\u2500\u2500 coffee-script@1.7.1 (mkdirp@0.3.5)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 chokidar@0.8.2 (recursive-readdir@0.0.2)\n\u251c\u2500\u2500 serve-static@1.2.0 (parseurl@1.0.1, send@0.4.0)\n\u251c\u2500\u2500 readdirp@1.0.1 (minimatch@0.2.14, readable-stream@1.0.27-1)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 argparse@0.1.15 (underscore@1.4.4, underscore.string@2.3.3)\n\u251c\u2500\u2500 update-notifier@0.1.8 (semver@2.1.0, configstore@0.2.3, chalk@0.4.0, request@2.27.0)\n\u251c\u2500\u2500 js-yaml@3.0.2 (esprima@1.0.4)\n\u251c\u2500\u2500 sprout@0.1.0 (indx@0.1.2, which@1.0.5, osenv@0.0.3, ncp@0.5.1, mkdirp@0.3.5, string@1.8.1, ejs@1.0.0, inquirer@0.4.1)\n\u251c\u2500\u2500 charge@0.0.3 (hygienist-middleware@0.0.3, infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.1, morgan@1.0.1, connect@3.0.0, alchemist-middleware@0.0.4, faye-websocket@0.7.2, escapist-middleware@0.0.2, compression@1.0.3, publicist-middleware@0.0.1, pathologist-middleware@0.0.1, lodash.assign@2.4.1, archivist-middleware@0.0.1, lodash.remove@2.4.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 accord@0.10.0 (indx@0.1.2, glob@3.2.11, uglify-js@2.4.13)\n\u2514\u2500\u2500 npm@1.4.13\n\u27a4 roots -v\n3.0.0-rc.7\n```\n. A normal `npm i roots -g` gives me 2.1.3. \n\n``` shell\n   { latest: '2.1.3',\n     '2.1.0-beta1': '2.1.0-beta1',\n     '2.1.0-beta2': '2.1.0-beta2',\n     '2.1.0-beta3': '2.1.0-beta3',\n     '2.1.0-beta4': '2.1.0-beta4',\n     '3.0.0-rc.0': '3.0.0-rc.0',\n     '3.0.0-rc.1': '3.0.0-rc.1',\n     '3.0.0-rc.2': '3.0.0-rc.2',\n     '3.0.0-rc.3': '3.0.0-rc.3',\n     pre: '3.0.0-rc.7',\n     '3.0.0-rc.4': '3.0.0-rc.4',\n     'v3.0.0-rc.5': '3.0.0-rc.5',\n     '3.0.0-rc.5': '3.0.0-rc.5',\n     '3.0.0-rc.6': '3.0.0-rc.6',\n     '3.0.0-rc.7': '3.0.0-rc.7' },\n```\n\nWhen someone runs 'npm i roots@pre' and wants to revert to v2, does npm keep a record of v3 being the version to update to?\n. I understand. Thanks guys, I'll be switching to v3, that was in the planning anyway.\n\n![wow](http://oi59.tinypic.com/25tkl7b.jpg)\n. Perhaps add to readme to freeze it with --save-exact.\n\n``` shell\n$ roots -v\n3.0.0-rc.7\n$ sudo npm remove roots -g\n$ sudo npm install roots@2.1.3 -g --save-exact\n```\n. Actually, I was too quick on the draw. The `--save-exact` flag appears to only freeze locally. Running `npm update -g` will still update roots to v3. There appears to be [no way](https://github.com/npm/npm/issues/3175) to freeze global packages, other than revoking writing rights.\n. Popped my pull request cherry: https://github.com/jenius/roots/pull/480\n. Ah, that makes sense. I hadn't worked with Requirejs before. I've rerun the 'roots new' and 'roots watch' tasks in a new project, and same result, although without the connection interruption error:\n\n``` shell\n\u27a4 roots new roots-test-0.1\n[?] Your project's name: roots-test-0.1\n[?] A brief description of your project: \n\u25b8 project created\n\u25b8 dependencies installing\nnpm WARN package.json roots-test-0.1@ No description\nnpm WARN package.json roots-test-0.1@ No repository field.\nmarked@0.3.2 roots-test-0.1/node_modules/marked\n\nrupture@0.1.0 roots-test-0.1/node_modules/rupture\n\ncoffee-script@1.7.1 roots-test-0.1/node_modules/coffee-script\n\u2514\u2500\u2500 mkdirp@0.3.5\n\nstylus@0.45.1 roots-test-0.1/node_modules/stylus\n\u251c\u2500\u2500 css-parse@1.7.0\n\u251c\u2500\u2500 debug@0.8.1\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 sax@0.5.8\n\u2514\u2500\u2500 glob@3.2.11 (inherits@2.0.1, minimatch@0.3.0)\n\naxis@0.2.0 roots-test-0.1/node_modules/axis\n\u2514\u2500\u2500 nib@1.0.2 (stylus@0.37.0)\n\nautoprefixer-stylus@0.1.0 roots-test-0.1/node_modules/autoprefixer-stylus\n\u2514\u2500\u2500 autoprefixer@1.1.20140523 (fs-extra@0.9.1, postcss@0.3.4)\n\njade@1.3.1 roots-test-0.1/node_modules/jade\n\u251c\u2500\u2500 character-parser@1.2.0\n\u251c\u2500\u2500 commander@2.1.0\n\u251c\u2500\u2500 mkdirp@0.3.5\n\u251c\u2500\u2500 monocle@1.1.51 (readdirp@0.2.5)\n\u251c\u2500\u2500 constantinople@2.0.0 (uglify-js@2.4.13)\n\u251c\u2500\u2500 with@3.0.0 (uglify-js@2.4.13)\n\u2514\u2500\u2500 transformers@2.1.0 (promise@2.0.0, css@1.0.8, uglify-js@2.2.5)\n\u25b8 dependencies finished installing\n\u25b8 project initialized at /home/jedifrog/Dev/svdb/experiments/roots-test-0.1\n\u25b8 using template: roots-base\n\u2713 done!\n\u27a4 cd roots-test-0.1/\n\u27a4 roots watch\ncompiling... done!\n```\n\nFwiw, other build tools like grunt, broccoli and gulp do work on this machine. Any place I could look that could provide further info? Is there a logging function that I've overlooked?\n\n![screenshot - 05292014 - 05 26 26 pm](https://cloud.githubusercontent.com/assets/5634723/3119401/e9daeafc-e745-11e3-9c4a-90dcf481e983.png)\n. https://github.com/jedifrog/roots-test-0.1\n. I just created a new project called [roots-test](https://github.com/jedifrog/roots-test). It compiles fine.\n. Thanks guys!\n\nRenaming the project folder after the `roots new` command is enough to produce the error.\n`roots new hip.hop` + `roots watch` = error\n`mv hip.hop hophop` + `roots watch` = success\n\n`roots new hiphop` + `roots watch` = success\n`mv hiphop hip.hop` + `roots watch` = error\n\nUpdate: it seems having a dots anywhere in the path causes this error. When I initialized a new project in a subfolder of a folder called 0.1.5, it gave the error again.\n. Version compatibility?\n\nIsn't it easier to keep v3 out of the npm `roots` package until you release v3 stable? I'm still pretty new at this, so forgive my ignorance.\n. ``` shell\n\u27a4 roots -v\n2.1.3\n\u27a4 sudo npm update -g roots\nnpm WARN optional dep failed, continuing fsevents@0.2.0\nnpm WARN engine log-driver@1.2.1: wanted: {\"node\":\">=0.8.6\",\"npm\":\"1.1.65\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine hawk@0.10.2: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine hoek@0.7.6: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine cryptiles@0.1.3: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine boom@0.3.8: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\nnpm WARN engine sntp@0.1.4: wanted: {\"node\":\"0.8.x\"} (current: {\"node\":\"v0.10.28\",\"npm\":\"1.4.13\"})\n/usr/local/bin/roots -> /usr/local/lib/node_modules/roots/bin/roots\nroots@3.0.0-rc.7 /usr/local/lib/node_modules/roots\n\u251c\u2500\u2500 graceful-fs@2.0.3\n\u251c\u2500\u2500 rimraf@2.2.8\n\u251c\u2500\u2500 colors@0.6.2\n\u251c\u2500\u2500 open@0.0.5\n\u251c\u2500\u2500 configstore@0.3.0 (object-assign@0.2.2, osenv@0.0.3, mkdirp@0.3.5, uuid@1.4.1)\n\u251c\u2500\u2500 when@3.2.2\n\u251c\u2500\u2500 minimatch@0.3.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 vinyl@0.2.3 (clone-stats@0.0.1)\n\u251c\u2500\u2500 coffee-script@1.7.1 (mkdirp@0.3.5)\n\u251c\u2500\u2500 mkdirp@0.5.0 (minimist@0.0.8)\n\u251c\u2500\u2500 chokidar@0.8.2 (recursive-readdir@0.0.2)\n\u251c\u2500\u2500 serve-static@1.2.0 (parseurl@1.0.1, send@0.4.0)\n\u251c\u2500\u2500 readdirp@1.0.1 (minimatch@0.2.14, readable-stream@1.0.27-1)\n\u251c\u2500\u2500 lodash@2.4.1\n\u251c\u2500\u2500 argparse@0.1.15 (underscore@1.4.4, underscore.string@2.3.3)\n\u251c\u2500\u2500 update-notifier@0.1.8 (semver@2.1.0, configstore@0.2.3, chalk@0.4.0, request@2.27.0)\n\u251c\u2500\u2500 js-yaml@3.0.2 (esprima@1.0.4)\n\u251c\u2500\u2500 sprout@0.1.0 (indx@0.1.2, which@1.0.5, osenv@0.0.3, ncp@0.5.1, mkdirp@0.3.5, string@1.8.1, ejs@1.0.0, inquirer@0.4.1)\n\u251c\u2500\u2500 charge@0.0.3 (hygienist-middleware@0.0.3, infestor@0.2.0, anti-matter@0.0.1, minimist@0.1.0, node-uuid@1.4.1, morgan@1.0.1, connect@3.0.0, alchemist-middleware@0.0.4, faye-websocket@0.7.2, escapist-middleware@0.0.2, compression@1.0.3, publicist-middleware@0.0.1, pathologist-middleware@0.0.1, lodash.assign@2.4.1, archivist-middleware@0.0.1, lodash.remove@2.4.1, apology-middleware@0.0.4)\n\u251c\u2500\u2500 accord@0.10.0 (indx@0.1.2, glob@3.2.11, uglify-js@2.4.13)\n\u2514\u2500\u2500 npm@1.4.13\n\u27a4 roots -v\n3.0.0-rc.7\n```\n. A normal `npm i roots -g` gives me 2.1.3. \n\n``` shell\n   { latest: '2.1.3',\n     '2.1.0-beta1': '2.1.0-beta1',\n     '2.1.0-beta2': '2.1.0-beta2',\n     '2.1.0-beta3': '2.1.0-beta3',\n     '2.1.0-beta4': '2.1.0-beta4',\n     '3.0.0-rc.0': '3.0.0-rc.0',\n     '3.0.0-rc.1': '3.0.0-rc.1',\n     '3.0.0-rc.2': '3.0.0-rc.2',\n     '3.0.0-rc.3': '3.0.0-rc.3',\n     pre: '3.0.0-rc.7',\n     '3.0.0-rc.4': '3.0.0-rc.4',\n     'v3.0.0-rc.5': '3.0.0-rc.5',\n     '3.0.0-rc.5': '3.0.0-rc.5',\n     '3.0.0-rc.6': '3.0.0-rc.6',\n     '3.0.0-rc.7': '3.0.0-rc.7' },\n```\n\nWhen someone runs 'npm i roots@pre' and wants to revert to v2, does npm keep a record of v3 being the version to update to?\n. I understand. Thanks guys, I'll be switching to v3, that was in the planning anyway.\n\n![wow](http://oi59.tinypic.com/25tkl7b.jpg)\n. ",
    "DuncanMacWeb": "Hmm, thanks; I\u2019m no longer seeing this; the Roots manfile doesn\u2019t seem to be being installed any more, though I don\u2019t think a recent commit to this repo has caused the change. It\u2019s more likely to be due to a Node upgrade: I'm now on Node 0.10.28 and NPM 1.4.10.\n. Hmm, thanks; I\u2019m no longer seeing this; the Roots manfile doesn\u2019t seem to be being installed any more, though I don\u2019t think a recent commit to this repo has caused the change. It\u2019s more likely to be due to a Node upgrade: I'm now on Node 0.10.28 and NPM 1.4.10.\n. ",
    "s1efan": "Thx for your help!\nI'm using roots v. 2.1.3. Jeet 3 installation doesn't work.. \n\nnpm ERR! ReferenceError: resp is not defined\nnpm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\nnpm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this _entire_ log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     http://github.com/npm/npm/issues\n\nnpm ERR! System Darwin 13.1.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/Stefan\nnpm ERR! node -v v0.10.27\nnpm ERR! npm -v 1.4.8\nnpm ERR! type not_defined\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/Stefan/npm-debug.log\nnpm ERR! not ok code 0\n. I've tried it with and without sudo\n. ops, sorry, roots 3, not jeet 3 ;-)\n\nhere is the complete npm-debug.log:\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'roots@pre', '-g' ]\n2 info using npm@1.4.8\n3 info using node@v0.10.27\n4 verbose cache add [ 'roots@pre', null ]\n5 verbose cache add name=undefined spec=\"roots@pre\" args=[\"roots@pre\",null]\n6 verbose parsed url { protocol: null,\n6 verbose parsed url   slashes: null,\n6 verbose parsed url   auth: null,\n6 verbose parsed url   host: null,\n6 verbose parsed url   port: null,\n6 verbose parsed url   hostname: null,\n6 verbose parsed url   hash: null,\n6 verbose parsed url   search: null,\n6 verbose parsed url   query: null,\n6 verbose parsed url   pathname: 'roots@pre',\n6 verbose parsed url   path: 'roots@pre',\n6 verbose parsed url   href: 'roots@pre' }\n7 verbose cache add name=\"roots\" spec=\"pre\" args=[\"roots\",\"pre\"]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'pre',\n8 verbose parsed url   path: 'pre',\n8 verbose parsed url   href: 'pre' }\n9 verbose addNamed [ 'roots', 'pre' ]\n10 verbose addNamed [ null, null ]\n11 silly lockFile 03e6abf5-roots-pre roots@pre\n12 verbose lock roots@pre /Users/Stefan/.npm/03e6abf5-roots-pre.lock\n13 info addNameTag [ 'roots', 'pre' ]\n14 verbose url raw roots\n15 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n16 verbose url resolved https://registry.npmjs.org/roots\n17 info trying registry request attempt 1 at 17:00:42\n18 verbose etag \"531FRO8Y1X0VR1L3H9D14IK2U\"\n19 http GET https://registry.npmjs.org/roots\n20 http 304 https://registry.npmjs.org/roots\n21 silly registry.get cb [ 304,\n21 silly registry.get   { date: 'Fri, 02 May 2014 15:00:42 GMT',\n21 silly registry.get     server: 'Apache',\n21 silly registry.get     via: '1.1 varnish',\n21 silly registry.get     'last-modified': 'Fri, 02 May 2014 15:00:42 GMT',\n21 silly registry.get     'cache-control': 'max-age=1',\n21 silly registry.get     etag: '\"531FRO8Y1X0VR1L3H9D14IK2U\"',\n21 silly registry.get     'x-served-by': 'cache-fra1224-FRA',\n21 silly registry.get     'x-cache': 'MISS',\n21 silly registry.get     'x-cache-hits': '0',\n21 silly registry.get     'x-timer': 'S1399042842.520974874,VS0,VE181',\n21 silly registry.get     vary: 'Accept',\n21 silly registry.get     'content-length': '0',\n21 silly registry.get     'keep-alive': 'timeout=10, max=50',\n21 silly registry.get     connection: 'Keep-Alive' } ]\n22 verbose etag roots from cache\n23 error ReferenceError: resp is not defined\n23 error     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n23 error     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n23 error     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n23 error     at Object.oncomplete (fs.js:107:15)\n24 error If you need help, you may report this _entire_ log,\n24 error including the npm and node versions, at:\n24 error     http://github.com/npm/npm/issues\n25 error System Darwin 13.1.0\n26 error command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\" \"-g\"\n27 error cwd /Users/Stefan\n28 error node -v v0.10.27\n29 error npm -v 1.4.8\n30 error type not_defined\n31 verbose exit [ 1, true ]\n. Thx again, but there is the same error-log after clearing the npm-cache. Perhaps my Mac don't like roots 3.. ;-)\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'roots@pre' ]\n2 info using npm@1.4.8\n3 info using node@v0.10.27\n4 verbose cache add [ 'roots@pre', null ]\n5 verbose cache add name=undefined spec=\"roots@pre\" args=[\"roots@pre\",null]\n6 verbose parsed url { protocol: null,\n6 verbose parsed url   slashes: null,\n6 verbose parsed url   auth: null,\n6 verbose parsed url   host: null,\n6 verbose parsed url   port: null,\n6 verbose parsed url   hostname: null,\n6 verbose parsed url   hash: null,\n6 verbose parsed url   search: null,\n6 verbose parsed url   query: null,\n6 verbose parsed url   pathname: 'roots@pre',\n6 verbose parsed url   path: 'roots@pre',\n6 verbose parsed url   href: 'roots@pre' }\n7 verbose cache add name=\"roots\" spec=\"pre\" args=[\"roots\",\"pre\"]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'pre',\n8 verbose parsed url   path: 'pre',\n8 verbose parsed url   href: 'pre' }\n9 verbose addNamed [ 'roots', 'pre' ]\n10 verbose addNamed [ null, null ]\n11 silly lockFile 03e6abf5-roots-pre roots@pre\n12 verbose lock roots@pre /Users/Stefan/.npm/03e6abf5-roots-pre.lock\n13 info addNameTag [ 'roots', 'pre' ]\n14 verbose url raw roots\n15 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n16 verbose url resolved https://registry.npmjs.org/roots\n17 info trying registry request attempt 1 at 22:23:58\n18 verbose etag \"531FRO8Y1X0VR1L3H9D14IK2U\"\n19 http GET https://registry.npmjs.org/roots\n20 http 304 https://registry.npmjs.org/roots\n21 silly registry.get cb [ 304,\n21 silly registry.get   { date: 'Fri, 02 May 2014 20:23:58 GMT',\n21 silly registry.get     server: 'Apache',\n21 silly registry.get     via: '1.1 varnish',\n21 silly registry.get     'last-modified': 'Fri, 02 May 2014 20:23:58 GMT',\n21 silly registry.get     'cache-control': 'max-age=1',\n21 silly registry.get     etag: '\"531FRO8Y1X0VR1L3H9D14IK2U\"',\n21 silly registry.get     'x-served-by': 'cache-fra1224-FRA',\n21 silly registry.get     'x-cache': 'MISS',\n21 silly registry.get     'x-cache-hits': '0',\n21 silly registry.get     'x-timer': 'S1399062238.641352892,VS0,VE181',\n21 silly registry.get     vary: 'Accept',\n21 silly registry.get     'content-length': '0',\n21 silly registry.get     'keep-alive': 'timeout=10, max=50',\n21 silly registry.get     connection: 'Keep-Alive' } ]\n22 verbose etag roots from cache\n23 error ReferenceError: resp is not defined\n23 error     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n23 error     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n23 error     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n23 error     at Object.oncomplete (fs.js:107:15)\n24 error If you need help, you may report this _entire_ log,\n24 error including the npm and node versions, at:\n24 error     http://github.com/npm/npm/issues\n25 error System Darwin 13.1.0\n26 error command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\"\n27 error cwd /Users/Stefan\n28 error node -v v0.10.27\n29 error npm -v 1.4.8\n30 error type not_defined\n31 verbose exit [ 1, true ]\n. Ok, I will try it. Big thanks for your great help!\n. It work's!! I'm happy!!! :-))) cu\n. Hey, I've solved it. The Finder-Windows of the project must be closed. Then it works. :-)\n. Thx for your help!\nI'm using roots v. 2.1.3. Jeet 3 installation doesn't work.. \n\nnpm ERR! ReferenceError: resp is not defined\nnpm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\nnpm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this _entire_ log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     http://github.com/npm/npm/issues\n\nnpm ERR! System Darwin 13.1.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/Stefan\nnpm ERR! node -v v0.10.27\nnpm ERR! npm -v 1.4.8\nnpm ERR! type not_defined\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/Stefan/npm-debug.log\nnpm ERR! not ok code 0\n. I've tried it with and without sudo\n. ops, sorry, roots 3, not jeet 3 ;-)\n\nhere is the complete npm-debug.log:\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'roots@pre', '-g' ]\n2 info using npm@1.4.8\n3 info using node@v0.10.27\n4 verbose cache add [ 'roots@pre', null ]\n5 verbose cache add name=undefined spec=\"roots@pre\" args=[\"roots@pre\",null]\n6 verbose parsed url { protocol: null,\n6 verbose parsed url   slashes: null,\n6 verbose parsed url   auth: null,\n6 verbose parsed url   host: null,\n6 verbose parsed url   port: null,\n6 verbose parsed url   hostname: null,\n6 verbose parsed url   hash: null,\n6 verbose parsed url   search: null,\n6 verbose parsed url   query: null,\n6 verbose parsed url   pathname: 'roots@pre',\n6 verbose parsed url   path: 'roots@pre',\n6 verbose parsed url   href: 'roots@pre' }\n7 verbose cache add name=\"roots\" spec=\"pre\" args=[\"roots\",\"pre\"]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'pre',\n8 verbose parsed url   path: 'pre',\n8 verbose parsed url   href: 'pre' }\n9 verbose addNamed [ 'roots', 'pre' ]\n10 verbose addNamed [ null, null ]\n11 silly lockFile 03e6abf5-roots-pre roots@pre\n12 verbose lock roots@pre /Users/Stefan/.npm/03e6abf5-roots-pre.lock\n13 info addNameTag [ 'roots', 'pre' ]\n14 verbose url raw roots\n15 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n16 verbose url resolved https://registry.npmjs.org/roots\n17 info trying registry request attempt 1 at 17:00:42\n18 verbose etag \"531FRO8Y1X0VR1L3H9D14IK2U\"\n19 http GET https://registry.npmjs.org/roots\n20 http 304 https://registry.npmjs.org/roots\n21 silly registry.get cb [ 304,\n21 silly registry.get   { date: 'Fri, 02 May 2014 15:00:42 GMT',\n21 silly registry.get     server: 'Apache',\n21 silly registry.get     via: '1.1 varnish',\n21 silly registry.get     'last-modified': 'Fri, 02 May 2014 15:00:42 GMT',\n21 silly registry.get     'cache-control': 'max-age=1',\n21 silly registry.get     etag: '\"531FRO8Y1X0VR1L3H9D14IK2U\"',\n21 silly registry.get     'x-served-by': 'cache-fra1224-FRA',\n21 silly registry.get     'x-cache': 'MISS',\n21 silly registry.get     'x-cache-hits': '0',\n21 silly registry.get     'x-timer': 'S1399042842.520974874,VS0,VE181',\n21 silly registry.get     vary: 'Accept',\n21 silly registry.get     'content-length': '0',\n21 silly registry.get     'keep-alive': 'timeout=10, max=50',\n21 silly registry.get     connection: 'Keep-Alive' } ]\n22 verbose etag roots from cache\n23 error ReferenceError: resp is not defined\n23 error     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n23 error     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n23 error     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n23 error     at Object.oncomplete (fs.js:107:15)\n24 error If you need help, you may report this _entire_ log,\n24 error including the npm and node versions, at:\n24 error     http://github.com/npm/npm/issues\n25 error System Darwin 13.1.0\n26 error command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\" \"-g\"\n27 error cwd /Users/Stefan\n28 error node -v v0.10.27\n29 error npm -v 1.4.8\n30 error type not_defined\n31 verbose exit [ 1, true ]\n. Thx again, but there is the same error-log after clearing the npm-cache. Perhaps my Mac don't like roots 3.. ;-)\n\n0 info it worked if it ends with ok\n1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'roots@pre' ]\n2 info using npm@1.4.8\n3 info using node@v0.10.27\n4 verbose cache add [ 'roots@pre', null ]\n5 verbose cache add name=undefined spec=\"roots@pre\" args=[\"roots@pre\",null]\n6 verbose parsed url { protocol: null,\n6 verbose parsed url   slashes: null,\n6 verbose parsed url   auth: null,\n6 verbose parsed url   host: null,\n6 verbose parsed url   port: null,\n6 verbose parsed url   hostname: null,\n6 verbose parsed url   hash: null,\n6 verbose parsed url   search: null,\n6 verbose parsed url   query: null,\n6 verbose parsed url   pathname: 'roots@pre',\n6 verbose parsed url   path: 'roots@pre',\n6 verbose parsed url   href: 'roots@pre' }\n7 verbose cache add name=\"roots\" spec=\"pre\" args=[\"roots\",\"pre\"]\n8 verbose parsed url { protocol: null,\n8 verbose parsed url   slashes: null,\n8 verbose parsed url   auth: null,\n8 verbose parsed url   host: null,\n8 verbose parsed url   port: null,\n8 verbose parsed url   hostname: null,\n8 verbose parsed url   hash: null,\n8 verbose parsed url   search: null,\n8 verbose parsed url   query: null,\n8 verbose parsed url   pathname: 'pre',\n8 verbose parsed url   path: 'pre',\n8 verbose parsed url   href: 'pre' }\n9 verbose addNamed [ 'roots', 'pre' ]\n10 verbose addNamed [ null, null ]\n11 silly lockFile 03e6abf5-roots-pre roots@pre\n12 verbose lock roots@pre /Users/Stefan/.npm/03e6abf5-roots-pre.lock\n13 info addNameTag [ 'roots', 'pre' ]\n14 verbose url raw roots\n15 verbose url resolving [ 'https://registry.npmjs.org/', './roots' ]\n16 verbose url resolved https://registry.npmjs.org/roots\n17 info trying registry request attempt 1 at 22:23:58\n18 verbose etag \"531FRO8Y1X0VR1L3H9D14IK2U\"\n19 http GET https://registry.npmjs.org/roots\n20 http 304 https://registry.npmjs.org/roots\n21 silly registry.get cb [ 304,\n21 silly registry.get   { date: 'Fri, 02 May 2014 20:23:58 GMT',\n21 silly registry.get     server: 'Apache',\n21 silly registry.get     via: '1.1 varnish',\n21 silly registry.get     'last-modified': 'Fri, 02 May 2014 20:23:58 GMT',\n21 silly registry.get     'cache-control': 'max-age=1',\n21 silly registry.get     etag: '\"531FRO8Y1X0VR1L3H9D14IK2U\"',\n21 silly registry.get     'x-served-by': 'cache-fra1224-FRA',\n21 silly registry.get     'x-cache': 'MISS',\n21 silly registry.get     'x-cache-hits': '0',\n21 silly registry.get     'x-timer': 'S1399062238.641352892,VS0,VE181',\n21 silly registry.get     vary: 'Accept',\n21 silly registry.get     'content-length': '0',\n21 silly registry.get     'keep-alive': 'timeout=10, max=50',\n21 silly registry.get     connection: 'Keep-Alive' } ]\n22 verbose etag roots from cache\n23 error ReferenceError: resp is not defined\n23 error     at /usr/local/lib/node_modules/npm/lib/cache.js:714:32\n23 error     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:148:7)\n23 error     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:133:7\n23 error     at Object.oncomplete (fs.js:107:15)\n24 error If you need help, you may report this _entire_ log,\n24 error including the npm and node versions, at:\n24 error     http://github.com/npm/npm/issues\n25 error System Darwin 13.1.0\n26 error command \"node\" \"/usr/local/bin/npm\" \"install\" \"roots@pre\"\n27 error cwd /Users/Stefan\n28 error node -v v0.10.27\n29 error npm -v 1.4.8\n30 error type not_defined\n31 verbose exit [ 1, true ]\n. Ok, I will try it. Big thanks for your great help!\n. It work's!! I'm happy!!! :-))) cu\n. Hey, I've solved it. The Finder-Windows of the project must be closed. Then it works. :-)\n. ",
    "zaklampert": "Hey! Sweet. That worked like a charm. \n\nAm I missing out on anything by using this version? \n. Hey! Sweet. That worked like a charm. \n\nAm I missing out on anything by using this version? \n. ",
    "janiskopsisko": "Thank you very much.. your solution worked like a charm! Cheers\n. Thank you very much.. your solution worked like a charm! Cheers\n. ",
    "nanotime": "@jenius  Damn, an dynamic content extensions exists? My bad, i had no idea of that.\n\nYes, i'm using the v3 (in the title i put v3: ... xD), so, let me check how can i install the extension... sorry :/\n\n@HHSnopek yep, in my first try i use the quotes (\"\") but the error was still fucking my life xD\n. Thanks! I'm testing roots v3 and use on little commercial projects (not published for now)\n. Yeap, sorry if i reopen the issue but, i'm still having the same problem... so, more details: \n\nOk, following the recomendations here i installed (npm install dynamic-content -S) in my roots folder and then configure it in my settings: \n\n``` coffeescript\naxis = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture = require 'rupture'\njeet = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  stylus:\n      use: [axis(), autoprefixer(), jeet(), rupture(), dynamic_content()]\n```\n\nPretty basic (is just a test for a prototype, the client don't see this shit... yet xD). Anyway, i read the docs and then i created the folder products in views directory, the structure looks like: \n\n```\n\u02feassets\n... bla bla\n\u02feviews\n  \u02feproducts\n    \u02fesomejadeproductsfiles.jade\n  \u02fesomejadefiles.jade\n```\n\nThe jade files with the front matter data are stupidly simple, just a test: \n\n``` jade\n---\ntitle: 'Icaro'\ndate: 22/04/2014\n---\n\n:markdown\n  Uh... hello world? \n```\n\nAnd .... **ERRRAAAAWWWRRR!!!** when i shoot roots watchs:\n\n```\nError: Error: /home/nano/Copy/sandbox/Doggi/views/products/icaro.jade:3\n    1| ---\n    2| title: 'Icaro'\n  > 3| date: 22/04/2014\n    4| ---\n    5| \n    6| :markdown\n\nUnexpected token `tag` expected `text`, `code`, `:`, `newline` or `eos`\n  at Error (<anonymous>:null:null)\n  at on_error (/usr/local/lib/node_modules/roots/lib/cli/watch.js:47:21)\n  at Roots.<anonymous> (/usr/local/lib/node_modules/roots/lib/cli/watch.js:33:14)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nThe same error at the last time... so, exactly what i'm doing wrong here? Putting in wrong site the products folder? Need another extension to support front matter?\n\nAgain, thanks for all, dudes. \n. Uh, sorry! missclick! The bracket is fine, i just make a bad copy&paste of that :/\n. Yeeze, i'm a completly IDIOT... sorry about that...\n. Yep, i have installed the extension, dynamic works fine but all() function don't work and, well, surely i'm doing something wrong with the single views, but what?\n\n``` coffeescript\naxis            = require 'axis'\nrupture         = require 'rupture'\nautoprefixer    = require 'autoprefixer-stylus'\njeet            = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  extensions: [dynamic_content()]\n\n  stylus:\n    use: [axis(), rupture(), jeet(), autoprefixer()]\n```\n. Ahm, nope, it don't works:\n\n```\nError: Error: /home/nano/Dev/test/sample-blog/posts/doge/dammit_doge.jade:2\n    1| \n  > 2| extends single_post_layout\n    3| \n    4| block content\n    5|   :markdown\n\nENOENT, no such file or directory '/home/nano/Dev/test/sample-blog/posts/doge/single_post_layout.jade'\n  at Error (<anonymous>:null:null)\n  at on_error (/usr/local/lib/node_modules/roots/lib/cli/watch.js:47:21)\n  at Roots.<anonymous> (/usr/local/lib/node_modules/roots/lib/cli/watch.js:33:14)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nand ...\n\n``` jade\n---\ntitle: \"hola mundo\"\ndate: 25/25/2014\ntag: nothing\n---\nextends single_post_layout\n\nblock content\n  :markdown\n    hello world!\n```\n. Thanks! :)\n. Ok, i still have issues...\n\nWell, this time i install roots with sudo. I know, is bad idea, but now the path of roots (and stylus, coffee, bla bla) aims to /usr/bin/roots, so, i can't change the permissions in there, is dangerous...\n\nAnyway, `sudo npm i -g roots@pre` let me install all what i need (and it still warning me about the \"engine\" stuff), but now roots run... the problem? Simple:\n\n```\n\u26a1 roots watch\n\u2718 Error: Cannot find module 'sax'\n```\n\nThis is my project for a client, 3 days ago it working totally fine, today, well, you can see... making a deep search, i notice what sax is a package in the node_modules of nib, but is there i don't move nothing\nThis is my project for a client, 3 days ago it working totally fine, today, well, you can see... making a deep search, i notice what sax is a package in the node_modules of nib, but i don't move nothing\n\nAgain, thanks, and Cheers!\n\n**edit**\n\nUhm, my solution was a bit dirty... i create a new project and migrate the assets, dynamics, etc and it works fine... well, a weird issue\n. @jenius  Damn, an dynamic content extensions exists? My bad, i had no idea of that.\n\nYes, i'm using the v3 (in the title i put v3: ... xD), so, let me check how can i install the extension... sorry :/\n\n@HHSnopek yep, in my first try i use the quotes (\"\") but the error was still fucking my life xD\n. Thanks! I'm testing roots v3 and use on little commercial projects (not published for now)\n. Yeap, sorry if i reopen the issue but, i'm still having the same problem... so, more details: \n\nOk, following the recomendations here i installed (npm install dynamic-content -S) in my roots folder and then configure it in my settings: \n\n``` coffeescript\naxis = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture = require 'rupture'\njeet = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  stylus:\n      use: [axis(), autoprefixer(), jeet(), rupture(), dynamic_content()]\n```\n\nPretty basic (is just a test for a prototype, the client don't see this shit... yet xD). Anyway, i read the docs and then i created the folder products in views directory, the structure looks like: \n\n```\n\u02feassets\n... bla bla\n\u02feviews\n  \u02feproducts\n    \u02fesomejadeproductsfiles.jade\n  \u02fesomejadefiles.jade\n```\n\nThe jade files with the front matter data are stupidly simple, just a test: \n\n``` jade\n---\ntitle: 'Icaro'\ndate: 22/04/2014\n---\n\n:markdown\n  Uh... hello world? \n```\n\nAnd .... **ERRRAAAAWWWRRR!!!** when i shoot roots watchs:\n\n```\nError: Error: /home/nano/Copy/sandbox/Doggi/views/products/icaro.jade:3\n    1| ---\n    2| title: 'Icaro'\n  > 3| date: 22/04/2014\n    4| ---\n    5| \n    6| :markdown\n\nUnexpected token `tag` expected `text`, `code`, `:`, `newline` or `eos`\n  at Error (<anonymous>:null:null)\n  at on_error (/usr/local/lib/node_modules/roots/lib/cli/watch.js:47:21)\n  at Roots.<anonymous> (/usr/local/lib/node_modules/roots/lib/cli/watch.js:33:14)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nThe same error at the last time... so, exactly what i'm doing wrong here? Putting in wrong site the products folder? Need another extension to support front matter?\n\nAgain, thanks for all, dudes. \n. Uh, sorry! missclick! The bracket is fine, i just make a bad copy&paste of that :/\n. Yeeze, i'm a completly IDIOT... sorry about that...\n. Yep, i have installed the extension, dynamic works fine but all() function don't work and, well, surely i'm doing something wrong with the single views, but what?\n\n``` coffeescript\naxis            = require 'axis'\nrupture         = require 'rupture'\nautoprefixer    = require 'autoprefixer-stylus'\njeet            = require 'jeet'\ndynamic_content = require 'dynamic-content'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore']\n\n  extensions: [dynamic_content()]\n\n  stylus:\n    use: [axis(), rupture(), jeet(), autoprefixer()]\n```\n. Ahm, nope, it don't works:\n\n```\nError: Error: /home/nano/Dev/test/sample-blog/posts/doge/dammit_doge.jade:2\n    1| \n  > 2| extends single_post_layout\n    3| \n    4| block content\n    5|   :markdown\n\nENOENT, no such file or directory '/home/nano/Dev/test/sample-blog/posts/doge/single_post_layout.jade'\n  at Error (<anonymous>:null:null)\n  at on_error (/usr/local/lib/node_modules/roots/lib/cli/watch.js:47:21)\n  at Roots.<anonymous> (/usr/local/lib/node_modules/roots/lib/cli/watch.js:33:14)\n  at Roots.EventEmitter.emit (events.js:95:17)\n  at tryCatchReject (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:738:14)\n  at RejectedHandler.when (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:634:7)\n  at DeferredHandler.run (/usr/local/lib/node_modules/roots/node_modules/when/lib/makePromise.js:417:13)\n  at Scheduler._drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:42:14)\n  at Scheduler.drainQueue (/usr/local/lib/node_modules/roots/node_modules/when/lib/scheduler.js:19:9)\n  at process._tickCallback (node.js:415:13)\n```\n\nand ...\n\n``` jade\n---\ntitle: \"hola mundo\"\ndate: 25/25/2014\ntag: nothing\n---\nextends single_post_layout\n\nblock content\n  :markdown\n    hello world!\n```\n. Thanks! :)\n. Ok, i still have issues...\n\nWell, this time i install roots with sudo. I know, is bad idea, but now the path of roots (and stylus, coffee, bla bla) aims to /usr/bin/roots, so, i can't change the permissions in there, is dangerous...\n\nAnyway, `sudo npm i -g roots@pre` let me install all what i need (and it still warning me about the \"engine\" stuff), but now roots run... the problem? Simple:\n\n```\n\u26a1 roots watch\n\u2718 Error: Cannot find module 'sax'\n```\n\nThis is my project for a client, 3 days ago it working totally fine, today, well, you can see... making a deep search, i notice what sax is a package in the node_modules of nib, but is there i don't move nothing\nThis is my project for a client, 3 days ago it working totally fine, today, well, you can see... making a deep search, i notice what sax is a package in the node_modules of nib, but i don't move nothing\n\nAgain, thanks, and Cheers!\n\n**edit**\n\nUhm, my solution was a bit dirty... i create a new project and migrate the assets, dynamics, etc and it works fine... well, a weird issue\n. ",
    "reggi": "Whoops, didn't cd into my project...\n. Yeah, didn't realize i needed to cd into the folder. I used `mkdir` to create the project folder, because `roots new` also `inits` some variables you can't do `roots new .`. What if `roots watch` looked for `package.json` before starting the server?\n. I mean obviously, lol hence: https://github.com/reggi/play-roots/tree/ada79f5bb014bd57f941fed6b1e122d5327fbb5b >.<\n. Oh and I also tried\n\n```\nthomas@workstation:play-roots$ roots new play-roots-test --basic\nusage: roots new [-h] [--template TEMPLATE] [--overrides OVERRIDES] path\nroots new: error: Unrecognized arguments: --basic.\nthomas@workstation:play-roots$ roots new play-roots-test --ejs\nusage: roots new [-h] [--template TEMPLATE] [--overrides OVERRIDES] path\nroots new: error: Unrecognized arguments: --ejs.\n```\n\nhttp://roots.cx/docs#languages\n. :bulb:\n. Whoops, didn't cd into my project...\n. Yeah, didn't realize i needed to cd into the folder. I used `mkdir` to create the project folder, because `roots new` also `inits` some variables you can't do `roots new .`. What if `roots watch` looked for `package.json` before starting the server?\n. I mean obviously, lol hence: https://github.com/reggi/play-roots/tree/ada79f5bb014bd57f941fed6b1e122d5327fbb5b >.<\n. Oh and I also tried\n\n```\nthomas@workstation:play-roots$ roots new play-roots-test --basic\nusage: roots new [-h] [--template TEMPLATE] [--overrides OVERRIDES] path\nroots new: error: Unrecognized arguments: --basic.\nthomas@workstation:play-roots$ roots new play-roots-test --ejs\nusage: roots new [-h] [--template TEMPLATE] [--overrides OVERRIDES] path\nroots new: error: Unrecognized arguments: --ejs.\n```\n\nhttp://roots.cx/docs#languages\n. :bulb:\n. ",
    "MikaelX": "@kylemac Yes I can share the project, it's on a local stash server but I can zip this and get it to you if needed. I believe we're using the RC 6.5 since we installed it through npm install roots@pre a week ago. I would presume that the issue boils down to one of the node extensions acting up. I have the code at work and can't access that from home so unfortunately i won't be able to give you anything until friday :(\n. I have now confirmed this :+1: \n. @kylemac Yes I can share the project, it's on a local stash server but I can zip this and get it to you if needed. I believe we're using the RC 6.5 since we installed it through npm install roots@pre a week ago. I would presume that the issue boils down to one of the node extensions acting up. I have the code at work and can't access that from home so unfortunately i won't be able to give you anything until friday :(\n. I have now confirmed this :+1: \n. ",
    "weslien": "Ok, I just tested this with RC7, and it is no longer a problem.\nBoth png and jpg works.\n\nLucky us it was already solved (we work together)!\n. Here is an abridged version of the output after running:\n\n``` bash\nnpm i roots@pre -g\n```\n\n``` bash\nnpm http GET https://registry.npmjs.org/roots\n...\nnpm http GET https://registry.npmjs.org/utils-merge\nnpm ERR! git fetch -a origin (git://github.com/jenius/st.git) fatal: unable to connect to github.com:\nnpm ERR! git fetch -a origin (git://github.com/jenius/st.git) github.com[0: 192.30.252.130]: errno=Connection refused\n...\nnpm ERR! Error: ENOENT, utime '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call utimes\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules'\nnpm ERR! error rolling back  charge@0.0.3 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules' }\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, open '/usr/local/lib/node_modules/roots/node_modules/when/lib/decorators/with.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/when/lib/decorators/with.js\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules'\nnpm ERR! error rolling back  roots@3.0.0-rc.7 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules' }\nnpm ERR! Error: Command failed: fatal: unable to connect to github.com:\nnpm ERR! github.com[0: 192.30.252.130]: errno=Connection refused\nnpm ERR!\nnpm ERR!\nnpm ERR!     at ChildProcess.exithandler (child_process.js:647:15)\nnpm ERR!     at ChildProcess.EventEmitter.emit (events.js:98:17)\nnpm ERR!     at maybeClose (child_process.js:753:16)\nnpm ERR!     at Socket.<anonymous> (child_process.js:966:11)\nnpm ERR!     at Socket.EventEmitter.emit (events.js:95:17)\nnpm ERR!     at Pipe.close (net.js:465:12)\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! code 128\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, utime '/usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call utimes\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl'\nFile exists: /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl\nMove it away, and try again.\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/.../Projekt/.../npm-debug.log\nnpm ERR! not ok code 0\n```\n\nIf you want i can e-mail you the npm-debug.log, but it should be obvious from the errors above what the problem is:\n\n``` bash\ngit fetch -a origin (git://github.com/jenius/st.git) fatal: unable to connect to github.com\n```\n\nGustav\n. Same problem:\n\n``` bash\nnpm ERR! git clone git://github.com/jenius/st.git Cloning into bare repository '/Users/.../.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81'...\nnpm ERR! git clone git://github.com/jenius/st.git fatal: unable to connect to github.com:\nnpm ERR! git clone git://github.com/jenius/st.git github.com[0: 192.30.252.128]: errno=Connection refused\n```\n. Ok, I'll try digging, this is our package.json deps if it helps:\n\n``` json\n  \"dependencies\": {\n    \"autoprefixer-stylus\": \"0.1.x\",\n    \"axis\": \"0.2.x\",\n    \"coffee-script\": \"1.7.x\",\n    \"css-pipeline\": \"0.0.4\",\n    \"jade\": \"1.x\",\n    \"jeet\": \"^5.2.10\",\n    \"marked\": \"0.3.x\",\n    \"roots-browserify\": \"0.0.4\",\n    \"rupture\": \"0.1.x\",\n    \"stylus\": \"0.45.x\",\n    \"underscore\": \"^1.6.0\"\n  }\n```\n. Oh, and do you mean alchemist or archivist?\nI'm getting this error right after the Connection refused:\n\n``` bash\nnpm ERR! EEXIST, mkdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/archivist-middleware/node_modules/minimatch'\nFile exists: /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/archivist-middleware/node_modules/minimatch\nMove it away, and try again.\n```\n\nEdit: Oh wait, saw that alchemist is a dep of archivist :)\n. Could it have something to do with having installed roots, and then installing roots@pre (which ends up in roots) ?\n\nMight be some old dependencies still lying around.\n\nSounds like a potential classic \"clean install vs. install\" scenario\n. Ok, I found it.\n\nQuick search in node_modules/roots:\n\n``` bash\nfind . | xargs grep -r \\/st\\.git | grep -v gist\n```\n\ngives us, the following result:\n\n``` bash\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/node_modules/st/package.json:  \"_resolved\": \"git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a\",\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/node_modules/st/package.json:  \"_from\": \"st@git://github.com/jenius/st.git\"\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/package.json:    \"st\": \"git://github.com/jenius/st.git\",\n```\n\nExcerpt from package.json in /usr/local/lib/node_modules/roots :\n\n``` json\ndependencies\": {\n    \"coffee-script\": \"1.7.x\",\n    \"colors\": \"0.6.x\",\n    \"readdirp\": \"1.x\",\n    \"minimatch\": \"0.3.x\",\n    \"lodash\": \"2.x\",\n    \"js-yaml\": \"3.x\",\n    \"when\": \"3.x\",\n    \"accord\": \"0.10.0\",\n    \"mkdirp\": \"0.5.x\",\n    \"update-notifier\": \"0.1.x\",\n    \"chokidar\": \"0.8.x\",\n    \"open\": \"0.0.5\",\n    \"sprout\": \"0.1.x\",\n    \"configstore\": \"0.3.x\",\n    \"graceful-fs\": \"2.x\",\n    \"vinyl\": \"0.2.x\",\n    \"rimraf\": \"2.x\",\n    \"argparse\": \"0.1.x\",\n    \"npm\": \"^1.4.6\",\n    \"charge\": \"0.0.3\",\n    \"serve-static\": \"^1.1.0\"\n  }\n```\n\nCharge depends on archivist 0.1\narchivist 0.1 depends on alchemist _0.2_\nalchemist 0.2 depends on ... \n\n``` json\n\"dependencies\": {\n    \"st\": \"git://github.com/jenius/st.git\",\n    \"lodash.defaults\": \"^2.4.1\"\n  },\n```\n\nhttps://github.com/carrot/alchemist-middleware/blob/v0.0.2/package.json\nA release or dependency bump somewhere here might be the thing :)\n\nAnd a note to self:\nIf referencing git repos directly, use https, not git!\n\nHope this helps you solve this tricky business!\n\n-G\n. Hi,\n\nWe just found a (rather complex) solution for this problem for the instance when you are behind a corporate firewall.\n\nFirst of all, you just set the following git config:\n\n``` bash\ngit config --global url.https://github.com/.insteadOf git://github.com/\n```\n\nThis will force git to use the https:// protocol instead of git:// for all github repos.\nIf you run into others (for instance on bitbucket) you just add another.\n\nNow, if you, like us, have your own GIT repos hosted on an internal machine, but have dependencies on external (github) repos, you will likely run into some interesting proxy problems.\n\nIf you are using mac or linux (tested on both) you can use this solution to access both instances using the same config:\n\n``` bash\n#Set a temp variable\nproxy=http://username:password@your.proxy.com:[port]\n#Set git to use this proxy by default (will not work for internal repos)\ngit config --global https.proxy $proxy\ngit config --global http.proxy $proxy\n\n#Set a proxy override for a specific origin for the current repo\n#This tells the remote \"origin\" for the current repo to NOT use the proxy\n#and will allow you to push/pull from repos both outside and inside the firewall \n#without changing your config.\ngit config --add remote.origin.proxy \"\"\n\n#If your internal remote was called \"internal\" you would instead run:\ngit config --add remote.internal.proxy \"\"\n```\n\nNow, this will solve your git:// problems as well as you internal/external repo+proxy issues.\n\nAs an added bonus, we decided to ALSO use a local npm registry to further simplify the setup.\nWe chose [sinopia](https://github.com/rlidwka/sinopia), after testing to use a locally replicated couchdb first. This, however, would not fully abstract the download process, and forced you to go outside the firewall for packages that were not fully synced to the db.\n\nAfter setting up sinopia however, we could just do:\n\n``` bash\nnpm config set registry localnpmregistry.yourdomain.com #localnpmregistry.yourdomain.com obviously points to the server where sinopia is listening on port 80\nnpm config rm proxy\nnpm config rm https.proxy\n```\n\nConfiguring the server where sinopia is running in a similar fashion (npm config set proxy $proxy) would then mean that sinopia handles the external download of packages, caches them on disk, and serves them to you over the local network.\n\nNo more proxies!\n. ah ok,\n\nwould it be possible to add an ignore list for what files are being watched, or, even better, a specific list of files to watch?\n. Hi!\n\n@slang800 sorry, site is far from open source, but I'm working on a more detailed error report.\n\n@jenius I didn't mean to imply you were anything but an excellent developer, which is obvious based on the work you do. Nuff said on that.\n\nWhat i meant with latest in this case is a 3.x dependency on roots.\n\nWhat I did was uninstall roots@3.0.0-rc.8 and then installed roots@3.0.0-rc.7\n\n```\nroots -v \n```\n\ngives me \n\n```\nroots@3.0.0-rc.7\n```\n\nSo far so good. Double checked /usr/local/lib and it was there :) \nI then removed the node_modules in my project dir, and ran\n\n```\nnpm i\n```\n\nagain. After it was done I saw the following in the output:\n\n```\nroots-browserify@0.0.4 node_modules/roots-browserify\n...\n\u251c\u2500\u2500 roots@3.0.0-rc.8 (...\n...\n\nroots@3.0.0-rc.8 node_modules/roots\n...\n\ncss-pipeline@0.0.4 node_modules/css-pipeline\n...\n\u251c\u2500\u2500 roots@3.0.0-rc.8 (...\n```\n\nBoth roots-browserify and css-pipeline have a 3.x peerDep on roots, which resolves to rc.8 apparently. Since no roots was present in the project dir to satisfy these deps, I'm assuming it was installed. So I tried to also install rc.7 locally and then reinstall everything again:\n\n```\nrm -rf node_modules\nnpm i roots@3.0.0-rc.7\nnpm i\n```\n\nAfter which it no longer installs rc.8. This, however, did not solve my problem.\n\n```\nnpm list\n```\n\ngives me the following:\n\n```\n...\n\u251c\u2500\u252c roots@3.0.0-rc.7 (so far so good)\n...\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c st@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a) <-- old acquaintance\n...\n\u251c\u2500\u252c css-pipeline@0.0.4\n\u2502 \u2514\u2500\u252c roots-util@0.0.2\n\u2502   \u251c\u2500\u2500 UNMET DEPENDENCY roots 3.x\n...\n\u251c\u2500\u252c roots-browserify@0.0.4\n\u2502 \u251c\u2500\u252c roots-util@0.0.4\n\u2502 \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY roots 3.x\n...\nnpm ERR! missing: roots@3.x, required by roots-util@0.0.2\nnpm ERR! missing: roots@3.x, required by roots-util@0.0.4\n```\n\nNow I'm not experienced enough with this to draw any conslusions, but I hope this will at least give you an idea of what may have gone wrong.\n\nI'll keep investigating why my CSS seems to get botched.\n. Hi again,\n\nI have discovered the problem, it seems.\nWhile upgrading roots, we also got the latest version (5.3.0) of jeet, and we had previously been using 5.2.10. Apparently, the col(x/y) command no longer adds display: inline in 5.3.0. A downgrade of jeet solved it, and roots is not to blame :)\n\nI'm gonna check in with the jeet project and see if this is intentional.\n. Turns out it was a feature in 5.3.0 where they dropped support for IE6 (and thus removing display: inline since it \"helped\" IE suck less). Our problem was that we were using a mobile first strategy that has display: none as the default on a lot of elements, and when display: inline disappeared, so did they :)\n\nWe are addressing this as we speak, and we are now on rc.8 again :)\n\nWill get back to you if we have any \"real\" defects to report!\n\nThanks for the quick reply and sorry for taking up your time :watch: \n\nP.S. You might want to give archivist, alchemist and their dependant packages a version bump so you can get rid of:\n\n```\nst@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a)\n```\n\nWe still can't update roots from behind our firewall as long as this dep is there.\nTree:\n\n```\n\u251c\u2500\u252c archivist-middleware@0.0.1\n\u2502 \u251c\u2500\u252c alchemist-middleware@0.0.2\n\u2502 \u2502 \u251c\u2500\u252c lodash.defaults@2.4.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._objecttypes@2.4.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c lodash.keys@2.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lodash._isnative@2.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lodash._shimkeys@2.4.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 lodash.isobject@2.4.1\n\u2502 \u2502 \u2514\u2500\u252c st@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a)\n```\n. Ok, solved this as well. Turned out he had a folder in his /usr/local/lib/node_modules with owner \"nobody\". This in turn blocked npm update from completing. \nAfter chowning it and running npm update, problem went away.\n\nSo a non-issue, once again. Sorry for pestering you :)\n. Ok, I just tested this with RC7, and it is no longer a problem.\nBoth png and jpg works.\n\nLucky us it was already solved (we work together)!\n. Here is an abridged version of the output after running:\n\n``` bash\nnpm i roots@pre -g\n```\n\n``` bash\nnpm http GET https://registry.npmjs.org/roots\n...\nnpm http GET https://registry.npmjs.org/utils-merge\nnpm ERR! git fetch -a origin (git://github.com/jenius/st.git) fatal: unable to connect to github.com:\nnpm ERR! git fetch -a origin (git://github.com/jenius/st.git) github.com[0: 192.30.252.130]: errno=Connection refused\n...\nnpm ERR! Error: ENOENT, utime '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/apology-middleware/node_modules/coveralls/index.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call utimes\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/pathologist-middleware/node_modules/send/package.json\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules'\nnpm ERR! error rolling back  charge@0.0.3 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules' }\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/compression/node_modules/compressible/compressible.sublime-workspace\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/npm/doc/cli/npm-cache.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, open '/usr/local/lib/node_modules/roots/node_modules/when/lib/decorators/with.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/when/lib/decorators/with.js\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/coffee-script/lib/coffee-script/rewriter.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules'\nnpm ERR! error rolling back  roots@3.0.0-rc.7 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/usr/local/lib/node_modules/roots/node_modules/mkdirp/node_modules' }\nnpm ERR! Error: Command failed: fatal: unable to connect to github.com:\nnpm ERR! github.com[0: 192.30.252.130]: errno=Connection refused\nnpm ERR!\nnpm ERR!\nnpm ERR!     at ChildProcess.exithandler (child_process.js:647:15)\nnpm ERR!     at ChildProcess.EventEmitter.emit (events.js:98:17)\nnpm ERR!     at maybeClose (child_process.js:753:16)\nnpm ERR!     at Socket.<anonymous> (child_process.js:966:11)\nnpm ERR!     at Socket.EventEmitter.emit (events.js:95:17)\nnpm ERR!     at Pipe.close (net.js:465:12)\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! code 128\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund/package.json\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/utils-merge/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, utime '/usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/accord/test/fixtures/handlebars/expected/precompile.html\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call utimes\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! EEXIST, mkdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl'\nFile exists: /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl\nMove it away, and try again.\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/parseurl/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code EEXIST\nnpm ERR! errno 47\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:171:23\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/publicist-middleware/node_modules/minimatch/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/connect/node_modules/debug/debug.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents/node_modules/nan/README.md\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR! Error: ENOENT, lstat '/usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js'\nnpm ERR! If you need help, you may report this *entire* log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     <http://github.com/npm/npm/issues>\n\nnpm ERR! System Darwin 13.2.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"i\" \"roots@pre\" \"-g\"\nnpm ERR! cwd /Users/.../Projekt/...\nnpm ERR! node -v v0.10.28\nnpm ERR! npm -v 1.4.10\nnpm ERR! path /usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/roots/node_modules/lodash/dist/lodash.compat.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\n...\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/.../Projekt/.../npm-debug.log\nnpm ERR! not ok code 0\n```\n\nIf you want i can e-mail you the npm-debug.log, but it should be obvious from the errors above what the problem is:\n\n``` bash\ngit fetch -a origin (git://github.com/jenius/st.git) fatal: unable to connect to github.com\n```\n\nGustav\n. Same problem:\n\n``` bash\nnpm ERR! git clone git://github.com/jenius/st.git Cloning into bare repository '/Users/.../.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81'...\nnpm ERR! git clone git://github.com/jenius/st.git fatal: unable to connect to github.com:\nnpm ERR! git clone git://github.com/jenius/st.git github.com[0: 192.30.252.128]: errno=Connection refused\n```\n. Ok, I'll try digging, this is our package.json deps if it helps:\n\n``` json\n  \"dependencies\": {\n    \"autoprefixer-stylus\": \"0.1.x\",\n    \"axis\": \"0.2.x\",\n    \"coffee-script\": \"1.7.x\",\n    \"css-pipeline\": \"0.0.4\",\n    \"jade\": \"1.x\",\n    \"jeet\": \"^5.2.10\",\n    \"marked\": \"0.3.x\",\n    \"roots-browserify\": \"0.0.4\",\n    \"rupture\": \"0.1.x\",\n    \"stylus\": \"0.45.x\",\n    \"underscore\": \"^1.6.0\"\n  }\n```\n. Oh, and do you mean alchemist or archivist?\nI'm getting this error right after the Connection refused:\n\n``` bash\nnpm ERR! EEXIST, mkdir '/usr/local/lib/node_modules/roots/node_modules/charge/node_modules/archivist-middleware/node_modules/minimatch'\nFile exists: /usr/local/lib/node_modules/roots/node_modules/charge/node_modules/archivist-middleware/node_modules/minimatch\nMove it away, and try again.\n```\n\nEdit: Oh wait, saw that alchemist is a dep of archivist :)\n. Could it have something to do with having installed roots, and then installing roots@pre (which ends up in roots) ?\n\nMight be some old dependencies still lying around.\n\nSounds like a potential classic \"clean install vs. install\" scenario\n. Ok, I found it.\n\nQuick search in node_modules/roots:\n\n``` bash\nfind . | xargs grep -r \\/st\\.git | grep -v gist\n```\n\ngives us, the following result:\n\n``` bash\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/node_modules/st/package.json:  \"_resolved\": \"git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a\",\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/node_modules/st/package.json:  \"_from\": \"st@git://github.com/jenius/st.git\"\n./node_modules/charge/node_modules/archivist-middleware/node_modules/alchemist-middleware/package.json:    \"st\": \"git://github.com/jenius/st.git\",\n```\n\nExcerpt from package.json in /usr/local/lib/node_modules/roots :\n\n``` json\ndependencies\": {\n    \"coffee-script\": \"1.7.x\",\n    \"colors\": \"0.6.x\",\n    \"readdirp\": \"1.x\",\n    \"minimatch\": \"0.3.x\",\n    \"lodash\": \"2.x\",\n    \"js-yaml\": \"3.x\",\n    \"when\": \"3.x\",\n    \"accord\": \"0.10.0\",\n    \"mkdirp\": \"0.5.x\",\n    \"update-notifier\": \"0.1.x\",\n    \"chokidar\": \"0.8.x\",\n    \"open\": \"0.0.5\",\n    \"sprout\": \"0.1.x\",\n    \"configstore\": \"0.3.x\",\n    \"graceful-fs\": \"2.x\",\n    \"vinyl\": \"0.2.x\",\n    \"rimraf\": \"2.x\",\n    \"argparse\": \"0.1.x\",\n    \"npm\": \"^1.4.6\",\n    \"charge\": \"0.0.3\",\n    \"serve-static\": \"^1.1.0\"\n  }\n```\n\nCharge depends on archivist 0.1\narchivist 0.1 depends on alchemist _0.2_\nalchemist 0.2 depends on ... \n\n``` json\n\"dependencies\": {\n    \"st\": \"git://github.com/jenius/st.git\",\n    \"lodash.defaults\": \"^2.4.1\"\n  },\n```\n\nhttps://github.com/carrot/alchemist-middleware/blob/v0.0.2/package.json\nA release or dependency bump somewhere here might be the thing :)\n\nAnd a note to self:\nIf referencing git repos directly, use https, not git!\n\nHope this helps you solve this tricky business!\n\n-G\n. Hi,\n\nWe just found a (rather complex) solution for this problem for the instance when you are behind a corporate firewall.\n\nFirst of all, you just set the following git config:\n\n``` bash\ngit config --global url.https://github.com/.insteadOf git://github.com/\n```\n\nThis will force git to use the https:// protocol instead of git:// for all github repos.\nIf you run into others (for instance on bitbucket) you just add another.\n\nNow, if you, like us, have your own GIT repos hosted on an internal machine, but have dependencies on external (github) repos, you will likely run into some interesting proxy problems.\n\nIf you are using mac or linux (tested on both) you can use this solution to access both instances using the same config:\n\n``` bash\n#Set a temp variable\nproxy=http://username:password@your.proxy.com:[port]\n#Set git to use this proxy by default (will not work for internal repos)\ngit config --global https.proxy $proxy\ngit config --global http.proxy $proxy\n\n#Set a proxy override for a specific origin for the current repo\n#This tells the remote \"origin\" for the current repo to NOT use the proxy\n#and will allow you to push/pull from repos both outside and inside the firewall \n#without changing your config.\ngit config --add remote.origin.proxy \"\"\n\n#If your internal remote was called \"internal\" you would instead run:\ngit config --add remote.internal.proxy \"\"\n```\n\nNow, this will solve your git:// problems as well as you internal/external repo+proxy issues.\n\nAs an added bonus, we decided to ALSO use a local npm registry to further simplify the setup.\nWe chose [sinopia](https://github.com/rlidwka/sinopia), after testing to use a locally replicated couchdb first. This, however, would not fully abstract the download process, and forced you to go outside the firewall for packages that were not fully synced to the db.\n\nAfter setting up sinopia however, we could just do:\n\n``` bash\nnpm config set registry localnpmregistry.yourdomain.com #localnpmregistry.yourdomain.com obviously points to the server where sinopia is listening on port 80\nnpm config rm proxy\nnpm config rm https.proxy\n```\n\nConfiguring the server where sinopia is running in a similar fashion (npm config set proxy $proxy) would then mean that sinopia handles the external download of packages, caches them on disk, and serves them to you over the local network.\n\nNo more proxies!\n. ah ok,\n\nwould it be possible to add an ignore list for what files are being watched, or, even better, a specific list of files to watch?\n. Hi!\n\n@slang800 sorry, site is far from open source, but I'm working on a more detailed error report.\n\n@jenius I didn't mean to imply you were anything but an excellent developer, which is obvious based on the work you do. Nuff said on that.\n\nWhat i meant with latest in this case is a 3.x dependency on roots.\n\nWhat I did was uninstall roots@3.0.0-rc.8 and then installed roots@3.0.0-rc.7\n\n```\nroots -v \n```\n\ngives me \n\n```\nroots@3.0.0-rc.7\n```\n\nSo far so good. Double checked /usr/local/lib and it was there :) \nI then removed the node_modules in my project dir, and ran\n\n```\nnpm i\n```\n\nagain. After it was done I saw the following in the output:\n\n```\nroots-browserify@0.0.4 node_modules/roots-browserify\n...\n\u251c\u2500\u2500 roots@3.0.0-rc.8 (...\n...\n\nroots@3.0.0-rc.8 node_modules/roots\n...\n\ncss-pipeline@0.0.4 node_modules/css-pipeline\n...\n\u251c\u2500\u2500 roots@3.0.0-rc.8 (...\n```\n\nBoth roots-browserify and css-pipeline have a 3.x peerDep on roots, which resolves to rc.8 apparently. Since no roots was present in the project dir to satisfy these deps, I'm assuming it was installed. So I tried to also install rc.7 locally and then reinstall everything again:\n\n```\nrm -rf node_modules\nnpm i roots@3.0.0-rc.7\nnpm i\n```\n\nAfter which it no longer installs rc.8. This, however, did not solve my problem.\n\n```\nnpm list\n```\n\ngives me the following:\n\n```\n...\n\u251c\u2500\u252c roots@3.0.0-rc.7 (so far so good)\n...\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c st@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a) <-- old acquaintance\n...\n\u251c\u2500\u252c css-pipeline@0.0.4\n\u2502 \u2514\u2500\u252c roots-util@0.0.2\n\u2502   \u251c\u2500\u2500 UNMET DEPENDENCY roots 3.x\n...\n\u251c\u2500\u252c roots-browserify@0.0.4\n\u2502 \u251c\u2500\u252c roots-util@0.0.4\n\u2502 \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY roots 3.x\n...\nnpm ERR! missing: roots@3.x, required by roots-util@0.0.2\nnpm ERR! missing: roots@3.x, required by roots-util@0.0.4\n```\n\nNow I'm not experienced enough with this to draw any conslusions, but I hope this will at least give you an idea of what may have gone wrong.\n\nI'll keep investigating why my CSS seems to get botched.\n. Hi again,\n\nI have discovered the problem, it seems.\nWhile upgrading roots, we also got the latest version (5.3.0) of jeet, and we had previously been using 5.2.10. Apparently, the col(x/y) command no longer adds display: inline in 5.3.0. A downgrade of jeet solved it, and roots is not to blame :)\n\nI'm gonna check in with the jeet project and see if this is intentional.\n. Turns out it was a feature in 5.3.0 where they dropped support for IE6 (and thus removing display: inline since it \"helped\" IE suck less). Our problem was that we were using a mobile first strategy that has display: none as the default on a lot of elements, and when display: inline disappeared, so did they :)\n\nWe are addressing this as we speak, and we are now on rc.8 again :)\n\nWill get back to you if we have any \"real\" defects to report!\n\nThanks for the quick reply and sorry for taking up your time :watch: \n\nP.S. You might want to give archivist, alchemist and their dependant packages a version bump so you can get rid of:\n\n```\nst@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a)\n```\n\nWe still can't update roots from behind our firewall as long as this dep is there.\nTree:\n\n```\n\u251c\u2500\u252c archivist-middleware@0.0.1\n\u2502 \u251c\u2500\u252c alchemist-middleware@0.0.2\n\u2502 \u2502 \u251c\u2500\u252c lodash.defaults@2.4.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._objecttypes@2.4.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c lodash.keys@2.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lodash._isnative@2.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lodash._shimkeys@2.4.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 lodash.isobject@2.4.1\n\u2502 \u2502 \u2514\u2500\u252c st@0.4.1 (git://github.com/jenius/st.git#c26142ba1060706b8585917716b5e9c7999ef50a)\n```\n. Ok, solved this as well. Turned out he had a folder in his /usr/local/lib/node_modules with owner \"nobody\". This in turn blocked npm update from completing. \nAfter chowning it and running npm update, problem went away.\n\nSo a non-issue, once again. Sorry for pestering you :)\n. ",
    "tmilewski": "I didn't, @jedifrog. I created a stop-gap server using the same methodology as now seen in 3.0.0-rc7.\n\nNote: I was on 3.0.0-rc6.\n. :+1: \n. I didn't, @jedifrog. I created a stop-gap server using the same methodology as now seen in 3.0.0-rc7.\n\nNote: I was on 3.0.0-rc6.\n. :+1: \n. ",
    "wkf": ":+1: \n. :+1: \n. ",
    "ztrdoo7": "Hey Sam,\n\nI appreciate you getting back to me. This command is not working when \nusing with a space (\"roots watch --port=1234\") it loads port 1111 \nanyway. When using (\"roots watch--port=1234\") I get 'need some help' \ncommon commands. I know this is a small problem since it is just a port \nissue, but any help getting this going would be greatly appreciated!\n\nThanks Sam,\n\nZach Roberson\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:03:05 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> @ztrdoo7 this means that something else on your computer is listening \n> on port 1111\n> \n> try running roots watch --port=1234\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hey Sam,\n\nI appreciate the quick response.. I have been trying to figure out how \nto open that port since your email... seems it is on a TIME_WAIT status \nand it is due to the fact that that is the port used by Kapersky. Not \nsure that I want to kill that process in using roots.\n\nIs there anyway around this? I am trying to use KickStrap which uses \nroots to build a web project. Could I down grade the version of roots to \nv2 and then change ports to work with this?\n\nThanks for your help,\n\nZach Roberson\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 9:30:04 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> Hey Zach, ah you are on v3 which may have not implemented this CLI flag \n> just yet.\n> \n> The other solution is to look at what is running on port 1111 and kill \n> it.\n> \n> lsof -i :1111\n> you can run this command to find out ^\n> \n> http://www.cyberciti.biz/faq/what-process-has-open-linux-port/\n> read more here^\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Still not working with that command.\n\nThank you for all your replies. I will keep trying different options.\n\nThanks,\n\nZach\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 10:38:52 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> @ztrdoo7 Looks like port should actually work...\n> \n> https://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n> \n> so roots watch --port=1234\n> \n> should work...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. This is still not working for me.. I don't know that the port is the issue as it says server started, but there is a ton of .js errors after start.. either way I have tried roots watch ---port=1234, roots watch --port 1234, and roots watch --PORT=1234... no matter it stays on port 1111. I tried uploading .txt of the command prompt but github will not support file type. \n. It is being blocked by Kaspersky. I turned Kaspersky off and did roots \nwatch. Everything worked fine. As soon as I turned it back on I started \ngetting the error I have been showing. I looked through restricted \napplications and didn't see anything relating to it, but that is \nobviously the issue.\n\nIf this is something I can prevent from being blocked please let me know \nhow. Otherwise I will turn it off when I need to use. Oddly Kaspersky \ndoesn't notify that it is blocking anything, they should if they are \ngoing to block this.\n\nThanks for all ya'lls patience and help.\n\nZach\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 3:56:46 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> Could you upload the error log?\n> follow this:\n> \n> roots -v roots watch --port 1234\n> I have a slight feeling that Kaspersky is blocking it, maybe?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Ha, I appreciate it. Thanks for the help.\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:14:02 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> This guy might know\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I am using Windows 8.1, but I will look at how to do that within windows \nenvironment.\n\nThank you.\n\nZach\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:31:00 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> I don't see the reason to use anti virus on linux... Considering you \n> know\n> what your accessing and downloading, with the knowledge if it's safe;\n> otherwise if you really need it, you should be able to change the ports \n> or\n> add access to localhost:1111 within Kaspersky\n> \n> On Mon, Jun 9, 2014 at 9:20 PM, Sam Saccone notifications@github.com\n> wrote:\n> \n> > ha no but really I am not sure :|\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/495#issuecomment-45564135.\n> \n> ## \n> - Henry Snopek\n>   \u2014\n>   Reply to this email directly or view it on GitHub.\n. Just in case anyone else runs into the same problem.. I have added \nexclusions to allow local port 1111 for tcp and udp and moved to top of \nrule list, I have turned off Kaspersky firewall, none of these work. The \nonly solution I have found with Kaspersky is completely exiting the \nprogram. From what I have been told that is an update port for \nKaspersky. Thanks for all the help guys, not a big deal really, just \nhave to workaround.\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:34:45 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> haha whoops - not sure why I thought that; In that case though you can \n> definitely allow access in Kaspersky -> follow this and allow port 1111 \n> for any network access\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hey Sam,\n\nI appreciate you getting back to me. This command is not working when \nusing with a space (\"roots watch --port=1234\") it loads port 1111 \nanyway. When using (\"roots watch--port=1234\") I get 'need some help' \ncommon commands. I know this is a small problem since it is just a port \nissue, but any help getting this going would be greatly appreciated!\n\nThanks Sam,\n\nZach Roberson\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:03:05 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> @ztrdoo7 this means that something else on your computer is listening \n> on port 1111\n> \n> try running roots watch --port=1234\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hey Sam,\n\nI appreciate the quick response.. I have been trying to figure out how \nto open that port since your email... seems it is on a TIME_WAIT status \nand it is due to the fact that that is the port used by Kapersky. Not \nsure that I want to kill that process in using roots.\n\nIs there anyway around this? I am trying to use KickStrap which uses \nroots to build a web project. Could I down grade the version of roots to \nv2 and then change ports to work with this?\n\nThanks for your help,\n\nZach Roberson\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 9:30:04 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> Hey Zach, ah you are on v3 which may have not implemented this CLI flag \n> just yet.\n> \n> The other solution is to look at what is running on port 1111 and kill \n> it.\n> \n> lsof -i :1111\n> you can run this command to find out ^\n> \n> http://www.cyberciti.biz/faq/what-process-has-open-linux-port/\n> read more here^\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Still not working with that command.\n\nThank you for all your replies. I will keep trying different options.\n\nThanks,\n\nZach\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 10:38:52 AM\nSubject: Re: [roots] Problem compiling (#495)\n\n> @ztrdoo7 Looks like port should actually work...\n> \n> https://github.com/jenius/roots/blob/v3/lib/cli/watch.coffee#L24\n> \n> so roots watch --port=1234\n> \n> should work...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. This is still not working for me.. I don't know that the port is the issue as it says server started, but there is a ton of .js errors after start.. either way I have tried roots watch ---port=1234, roots watch --port 1234, and roots watch --PORT=1234... no matter it stays on port 1111. I tried uploading .txt of the command prompt but github will not support file type. \n. It is being blocked by Kaspersky. I turned Kaspersky off and did roots \nwatch. Everything worked fine. As soon as I turned it back on I started \ngetting the error I have been showing. I looked through restricted \napplications and didn't see anything relating to it, but that is \nobviously the issue.\n\nIf this is something I can prevent from being blocked please let me know \nhow. Otherwise I will turn it off when I need to use. Oddly Kaspersky \ndoesn't notify that it is blocking anything, they should if they are \ngoing to block this.\n\nThanks for all ya'lls patience and help.\n\nZach\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 3:56:46 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> Could you upload the error log?\n> follow this:\n> \n> roots -v roots watch --port 1234\n> I have a slight feeling that Kaspersky is blocking it, maybe?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Ha, I appreciate it. Thanks for the help.\n\n------ Original Message ------\nFrom: \"Sam Saccone\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:14:02 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> This guy might know\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I am using Windows 8.1, but I will look at how to do that within windows \nenvironment.\n\nThank you.\n\nZach\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:31:00 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> I don't see the reason to use anti virus on linux... Considering you \n> know\n> what your accessing and downloading, with the knowledge if it's safe;\n> otherwise if you really need it, you should be able to change the ports \n> or\n> add access to localhost:1111 within Kaspersky\n> \n> On Mon, Jun 9, 2014 at 9:20 PM, Sam Saccone notifications@github.com\n> wrote:\n> \n> > ha no but really I am not sure :|\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/495#issuecomment-45564135.\n> \n> ## \n> - Henry Snopek\n>   \u2014\n>   Reply to this email directly or view it on GitHub.\n. Just in case anyone else runs into the same problem.. I have added \nexclusions to allow local port 1111 for tcp and udp and moved to top of \nrule list, I have turned off Kaspersky firewall, none of these work. The \nonly solution I have found with Kaspersky is completely exiting the \nprogram. From what I have been told that is an update port for \nKaspersky. Thanks for all the help guys, not a big deal really, just \nhave to workaround.\n\n------ Original Message ------\nFrom: \"Henry Snopek\" notifications@github.com\nTo: \"jenius/roots\" roots@noreply.github.com\nCc: \"Zach R.\" zachroberson.mt2@gmail.com\nSent: 6/9/2014 8:34:45 PM\nSubject: Re: [roots] Problem compiling (#495)\n\n> haha whoops - not sure why I thought that; In that case though you can \n> definitely allow access in Kaspersky -> follow this and allow port 1111 \n> for any network access\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "spectral-software": "+1\nIf the port is in use, it fails, and there is no way (that I can find) to specify a listening port.\n. I dug through the code a bit and noticed that it will use process.env.PORT.\n\nWindows:\n\n```\nset PORT=XXXX\n```\n\nMac/Linux:\n\n```\nPORT=XXXX\n```\n. Loving this project, keep up the great work!\n. +1\nIf the port is in use, it fails, and there is no way (that I can find) to specify a listening port.\n. I dug through the code a bit and noticed that it will use process.env.PORT.\n\nWindows:\n\n```\nset PORT=XXXX\n```\n\nMac/Linux:\n\n```\nPORT=XXXX\n```\n. Loving this project, keep up the great work!\n. ",
    "mhartington": "Hey thanks for the advice! That makes sense, thanks for clarifying.\n\nYeah I've been using a scss version of jeet then saw [this video](https://www.youtube.com/watch?v=JRXMXHIgOkU) of jeet and roots together and loved the workflow. But was having trouble setting it up and including jeet. I will try V3 Beta and get things going. More than willing to help out! \n. Awesome, got it set up, thanks for the fast response guys :thumbsup: \n\nI'll mention any issue I find.\n. Ahh, makes sense. \n\nAny timeframe on when v2 templates will be migrated to v3?\n. Yeah I can help where I can, working on other projects myself though. Will use this for a blog site so I'll report any issue I may come across in the process. Closing this issue for now.\n. Good to hear! \n\nFor those wondering, the command to deploy to gh-pages is:\n\n``` bash\n$ roots deploy ./ -to gh-pages\n```\n\nOne thing to note, which I may open a new issue for, is the repo input is throwing an error.\n\n``` bash\n[?] username: mhartington\n[?] password: xxxxx\n[?] repo: /\n\u2718 TypeError: path must be a string\n```\n\nTried all sorts of combos, but still got the error. Any ideas on what I'm doing wrong?\n. Hey thanks for the advice! That makes sense, thanks for clarifying.\n\nYeah I've been using a scss version of jeet then saw [this video](https://www.youtube.com/watch?v=JRXMXHIgOkU) of jeet and roots together and loved the workflow. But was having trouble setting it up and including jeet. I will try V3 Beta and get things going. More than willing to help out! \n. Awesome, got it set up, thanks for the fast response guys :thumbsup: \n\nI'll mention any issue I find.\n. Ahh, makes sense. \n\nAny timeframe on when v2 templates will be migrated to v3?\n. Yeah I can help where I can, working on other projects myself though. Will use this for a blog site so I'll report any issue I may come across in the process. Closing this issue for now.\n. Good to hear! \n\nFor those wondering, the command to deploy to gh-pages is:\n\n``` bash\n$ roots deploy ./ -to gh-pages\n```\n\nOne thing to note, which I may open a new issue for, is the repo input is throwing an error.\n\n``` bash\n[?] username: mhartington\n[?] password: xxxxx\n[?] repo: /\n\u2718 TypeError: path must be a string\n```\n\nTried all sorts of combos, but still got the error. Any ideas on what I'm doing wrong?\n. ",
    "thiagodebastos": "Hi @jenius , not sure if this is the right place to ask, how do I  enable this 'verbose' mode? I am getting an error \n\n``` shell\ncompiling... \u2718 TypeError: undefined is not a function\n```\n\nI had reached an eureka moment this morning at 5.30am after being up all night trying to work out Jade + JSON + jQuery. I figured it out finally. Went to sleep. Wokr up 8.30 this morning and in my zombified mode, I forgot to commit my changes, messed a few things up. Mostly, thanks to some stashed changes, everything seems to be in order. However I can't compile. Going by statistics alone, I bet it is a retarded issue like the previous ones I've had hehe. Is there a better way to assertain where the error originates from?\n. I figured out what it was. During the merge, stash, change branch and whatever other ungodly thing I did in my zombified state, the old 'views' folder was moved. So now I had index, 404 and about both in the root dir and in the newly made views dir. This caused the conflict and threw me the error. After deleting the folders, everything is back to normal. Not sure if this helps but I thought it better to share :)\n. Jeez, I just realised I could have saved hours by writing out a specific json file for my portfolio directory. At the moment, because it does not reside in 'posts', where, honestly, I should just put it, it is not (with my limited js/jquery know-how) easily accessed. This is how I was able to drill down to get the portfolio titles:\n\n``` js\n// still needs some work, I need to ignore 'undefined' results\n$(document).ready(function() {\n    $.getJSON('/content.json', function(data) {\n        $.each(data, function() {\n            $.each(this, function(index) {\n                console.log(this);\n                $.each(this, function(index) {\n                    console.log(this.title);\n                });\n            });\n        });\n    });\n});\n```\n\nat one point I was using this, until it decided to stop working. It started giving me the same first portfolio item twice. sigh\n\n``` js\n    $.getJSON(\"/content.json\", function(json) {\n        var myjson = json;\n        var related = \"\";\n        var i = 0;\n        var $related = myjson.portfolio.items[i];\n        while (i < myjson.portfolio.items.length) {\n            related +=\n                \"<h3> Portfolio \" + [i] + \" at key [\" + [i] + \"]</h3>\" +\n                \"<br> <strong>Title</strong>: \" + $related.title +\n                \"<br> <strong>Description</strong>: \" + $related.description +\n                \"<br> <strong>Category</strong>: \" + $related.category +\n                \"<br> <strong>Url</strong>: \" + $related._url +\n                \"<br> <strong>Tags</strong>: \" + $related.tags + '<hr>';\n            i++;\n        }\n        // console.log(related);\n        document.getElementById(\"json\").innerHTML = related;\n    });\n```\n\nfor anyone that ends up here with json issues:\n\n``` js\n    $.getJSON('/portfolio.json', function(data) {\n        $.each(data, function() {\n            var text = '';\n            $.each(this, function(index) {\n                text +=\n                \"<br> <strong>Title</strong>: \"      + this.title +\n                \"<br> <strong>Description</strong>: \"+ this.description +\n                \"<br> <strong>Category</strong>: \"   + this.category +\n                \"<br> <strong>Url</strong>: \"        + this._url +\n                \"<br> <strong>Tags</strong>: \"       + this.tags + '<hr>';\n            });\n            document.getElementById(\"demo2\").innerHTML = text;\n        });\n    });\n```\n. The only wall I have hit now is finding a way to use js variables from within Jade. I can't seem to find a clear answer anywhere. I want to store the json into a variable that I can use in Jade. Is that better/more efficient than just injecting with AJAX?\n. Wow. I thought that was it and wrote it off because it didn't work. I looked back and realised that I had forgotten to indent everything after the doctype. I can't believe how easy it is to get carried away with `fixes` when the issue comes down to a brainmelt. Thanks!\n. It works fine with Jade CLI, I did mention that, I'll move the text around as you may have missed where I said it :)\n\n(I successfully compiled a test file with 300 includes via the jade cli)\n. Hmm it seems that this happens way before 30 includes, I can't get past 8 includes in on atoms-2.jade\n\n``` jade\n//- atomic-mixins.jade\nmixin atom-meta-head\n    head\n        title #{locals.site.title}\n        meta(charset='UTF-8')\n        meta(name='viewport', content='width=device-width, initial-scale=1\"')\n        meta(name='description', content='description of your site')\n        meta(name='author', content= \"author of the site\")\n        != css('/')\n\n```\n\n``` jade\n//- styleguide-layout.jade\ninclude /_patterns/templates/_atomic-mixins.jade\n\ndoctype html\nhtml.htmlClass(class='{{ }}' lang='en')\n\n    +atom-meta-head\n    body\n        block content\n\n        script(src='/assets/js/vendor/jquery-2.1.3.min.js')\n        != js('/')\n```\n\n``` jade\n//- atoms2.jade\nextends styleguide-layout\nblock content\n    #sg-patterns\n        #atoms-select-menu\n            h2.sg-pattern-head Select Menu\n            .sg-pattern-body\n                include /_patterns/atoms/forms/select-menu\n\n        #atoms-checkbox\n            h2.sg-pattern-head Check Box\n            .sg-pattern-body\n                include /_patterns/atoms/forms/checkbox\n\n        #atoms-radio-buttons\n            h2.sg-pattern-head Radio Buttons\n            .sg-pattern-body\n                include /_patterns/atoms/forms/radio-buttons\n\n        #atoms-html5-inputs\n            h2.sg-pattern-head HTML5 Inputs\n            .sg-pattern-body\n                include /_patterns/atoms/forms/html5-inputs\n\n        #atoms-buttons\n            h2.sg-pattern-head Buttons\n            .sg-pattern-body\n                include /_patterns/atoms/buttons/buttons\n\n        #atoms-table\n            h2.sg-pattern-head Table\n            .sg-pattern-body\n                include /_patterns/atoms/tables/table\n\n        #atoms-video\n            h2.sg-pattern-head Video\n            .sg-pattern-body\n                include /_patterns/atoms/media/_video\n\n        #atoms-audio\n            h2.sg-pattern-head Audio\n            .sg-pattern-body\n                include /_patterns/atoms/media/_audio\n\n```\n\nHere is my project: https://github.com/thiagodebastos/atomic-roots\n. Hmm things just got weirder. In both Chrome and Firefox I get this:\n![screenshot-nocompile-roots](https://cloud.githubusercontent.com/assets/6151341/6677400/84f58b16-cc27-11e4-9949-648c7abfc08d.png)\n\nApologies for my lack of better issue-description, I am exhausted!\n\nI am using Roots 3.0.1, I thought that was the latest?\n. I did as you suggested and it worked. Not sure what went wrong there. I suppose we can close this?\n. I started getting this same issue just now.\n\n``` shell\n \u276f roots new wp-testing                          [19:57:33]\n? Your project's name: wp-testing\n? A brief description of your project: wp integration\n\u25b8 project created\n\u25b8 dependencies installing\nnpm ERR! install Couldn't read dependencies\n\u2718 Error: Invalid name: \"[object Object]\"\nPotentially unhandled rejection [3] Error: Invalid name: \"[object Object]\"\n  at ensureValidName (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/fixer.js:322:15)\n  at Object.module.exports.fixNameField (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/fixer.js:211:5)\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/normalize.js:30:38\n  at Array.forEach (native)\n  at normalize (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/normalize.js:29:15)\n  at final (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:368:33)\n  at then (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:127:33)\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:267:40\n  at evalmachine.<anonymous>:336:14\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n  at FSReqWrap.oncomplete (evalmachine.<anonymous>:99:15)\n\n```\n\nsolution found here [https://github.com/jenius/roots/issues/604#issuecomment-71348510] not working.\n. Great news! thank you :dancer: \nIt works!\n. Thanks! Will do, good thing I've got nvm working fine :)\n. hmm this only seems to be happening on one of my computers.\nI tried switching to node 4.2.2 but still get this:\n\n```\n \u276f npm install -g roots                                                                                                                                                   [18:46:33]\n\n> fsevents@0.3.8 install /Users/debastost/.nvm/versions/node/v4.2.2/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  SOLINK_MODULE(target) Release/.node\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR! Darwin 14.5.0\nnpm ERR! argv \"/Users/debastost/.nvm/versions/node/v4.2.2/bin/node\" \"/Users/debastost/.nvm/versions/node/v4.2.2/bin/npm\" \"install\" \"-g\" \"roots\"\nnpm ERR! node v4.2.2\nnpm ERR! npm  v2.14.7\nnpm ERR! code 128\n\nnpm ERR! Command failed: git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce\nnpm ERR! Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce'...\nnpm ERR! fatal: unable to connect to github.com:\nnpm ERR! github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR!\nnpm ERR!\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/debastost/Projects/study/featurepeek/npm-debug.log\n```\n. I'm not sure if this is relevant, but I am facing the same issue on one of my macs.\nI get this error though:\n\n```\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: github.com[0: 192.30.252.128]: errno=Operation timed out\nloadDep:st                \u2590 \u2562\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591npm WARN install Couldn't install optional dependency: Command failed: git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e\nnpm WARN install Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e'...\nnpm WARN install fatal: unable to connect to github.com:\nnpm WARN install github.com[0: 192.30.252.128]: errno=Operation timed out\n\n```\n\nIt's quite strange considering I dont have an issue with any other repos on GitHub?\n. Sometimes I wish the internet behaved nicely just for one whole day, just\none! I'll look deeper into it as soon as I get a chance!\nOn 1 Dec 2015 23:41, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Never seen this one before. Definitely not an issue with roots through\n> haha, it's an internet thing.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/686#issuecomment-160956265.\n. Hi @jenius , not sure if this is the right place to ask, how do I  enable this 'verbose' mode? I am getting an error \n\n``` shell\ncompiling... \u2718 TypeError: undefined is not a function\n```\n\nI had reached an eureka moment this morning at 5.30am after being up all night trying to work out Jade + JSON + jQuery. I figured it out finally. Went to sleep. Wokr up 8.30 this morning and in my zombified mode, I forgot to commit my changes, messed a few things up. Mostly, thanks to some stashed changes, everything seems to be in order. However I can't compile. Going by statistics alone, I bet it is a retarded issue like the previous ones I've had hehe. Is there a better way to assertain where the error originates from?\n. I figured out what it was. During the merge, stash, change branch and whatever other ungodly thing I did in my zombified state, the old 'views' folder was moved. So now I had index, 404 and about both in the root dir and in the newly made views dir. This caused the conflict and threw me the error. After deleting the folders, everything is back to normal. Not sure if this helps but I thought it better to share :)\n. Jeez, I just realised I could have saved hours by writing out a specific json file for my portfolio directory. At the moment, because it does not reside in 'posts', where, honestly, I should just put it, it is not (with my limited js/jquery know-how) easily accessed. This is how I was able to drill down to get the portfolio titles:\n\n``` js\n// still needs some work, I need to ignore 'undefined' results\n$(document).ready(function() {\n    $.getJSON('/content.json', function(data) {\n        $.each(data, function() {\n            $.each(this, function(index) {\n                console.log(this);\n                $.each(this, function(index) {\n                    console.log(this.title);\n                });\n            });\n        });\n    });\n});\n```\n\nat one point I was using this, until it decided to stop working. It started giving me the same first portfolio item twice. sigh\n\n``` js\n    $.getJSON(\"/content.json\", function(json) {\n        var myjson = json;\n        var related = \"\";\n        var i = 0;\n        var $related = myjson.portfolio.items[i];\n        while (i < myjson.portfolio.items.length) {\n            related +=\n                \"<h3> Portfolio \" + [i] + \" at key [\" + [i] + \"]</h3>\" +\n                \"<br> <strong>Title</strong>: \" + $related.title +\n                \"<br> <strong>Description</strong>: \" + $related.description +\n                \"<br> <strong>Category</strong>: \" + $related.category +\n                \"<br> <strong>Url</strong>: \" + $related._url +\n                \"<br> <strong>Tags</strong>: \" + $related.tags + '<hr>';\n            i++;\n        }\n        // console.log(related);\n        document.getElementById(\"json\").innerHTML = related;\n    });\n```\n\nfor anyone that ends up here with json issues:\n\n``` js\n    $.getJSON('/portfolio.json', function(data) {\n        $.each(data, function() {\n            var text = '';\n            $.each(this, function(index) {\n                text +=\n                \"<br> <strong>Title</strong>: \"      + this.title +\n                \"<br> <strong>Description</strong>: \"+ this.description +\n                \"<br> <strong>Category</strong>: \"   + this.category +\n                \"<br> <strong>Url</strong>: \"        + this._url +\n                \"<br> <strong>Tags</strong>: \"       + this.tags + '<hr>';\n            });\n            document.getElementById(\"demo2\").innerHTML = text;\n        });\n    });\n```\n. The only wall I have hit now is finding a way to use js variables from within Jade. I can't seem to find a clear answer anywhere. I want to store the json into a variable that I can use in Jade. Is that better/more efficient than just injecting with AJAX?\n. Wow. I thought that was it and wrote it off because it didn't work. I looked back and realised that I had forgotten to indent everything after the doctype. I can't believe how easy it is to get carried away with `fixes` when the issue comes down to a brainmelt. Thanks!\n. It works fine with Jade CLI, I did mention that, I'll move the text around as you may have missed where I said it :)\n\n(I successfully compiled a test file with 300 includes via the jade cli)\n. Hmm it seems that this happens way before 30 includes, I can't get past 8 includes in on atoms-2.jade\n\n``` jade\n//- atomic-mixins.jade\nmixin atom-meta-head\n    head\n        title #{locals.site.title}\n        meta(charset='UTF-8')\n        meta(name='viewport', content='width=device-width, initial-scale=1\"')\n        meta(name='description', content='description of your site')\n        meta(name='author', content= \"author of the site\")\n        != css('/')\n\n```\n\n``` jade\n//- styleguide-layout.jade\ninclude /_patterns/templates/_atomic-mixins.jade\n\ndoctype html\nhtml.htmlClass(class='{{ }}' lang='en')\n\n    +atom-meta-head\n    body\n        block content\n\n        script(src='/assets/js/vendor/jquery-2.1.3.min.js')\n        != js('/')\n```\n\n``` jade\n//- atoms2.jade\nextends styleguide-layout\nblock content\n    #sg-patterns\n        #atoms-select-menu\n            h2.sg-pattern-head Select Menu\n            .sg-pattern-body\n                include /_patterns/atoms/forms/select-menu\n\n        #atoms-checkbox\n            h2.sg-pattern-head Check Box\n            .sg-pattern-body\n                include /_patterns/atoms/forms/checkbox\n\n        #atoms-radio-buttons\n            h2.sg-pattern-head Radio Buttons\n            .sg-pattern-body\n                include /_patterns/atoms/forms/radio-buttons\n\n        #atoms-html5-inputs\n            h2.sg-pattern-head HTML5 Inputs\n            .sg-pattern-body\n                include /_patterns/atoms/forms/html5-inputs\n\n        #atoms-buttons\n            h2.sg-pattern-head Buttons\n            .sg-pattern-body\n                include /_patterns/atoms/buttons/buttons\n\n        #atoms-table\n            h2.sg-pattern-head Table\n            .sg-pattern-body\n                include /_patterns/atoms/tables/table\n\n        #atoms-video\n            h2.sg-pattern-head Video\n            .sg-pattern-body\n                include /_patterns/atoms/media/_video\n\n        #atoms-audio\n            h2.sg-pattern-head Audio\n            .sg-pattern-body\n                include /_patterns/atoms/media/_audio\n\n```\n\nHere is my project: https://github.com/thiagodebastos/atomic-roots\n. Hmm things just got weirder. In both Chrome and Firefox I get this:\n![screenshot-nocompile-roots](https://cloud.githubusercontent.com/assets/6151341/6677400/84f58b16-cc27-11e4-9949-648c7abfc08d.png)\n\nApologies for my lack of better issue-description, I am exhausted!\n\nI am using Roots 3.0.1, I thought that was the latest?\n. I did as you suggested and it worked. Not sure what went wrong there. I suppose we can close this?\n. I started getting this same issue just now.\n\n``` shell\n \u276f roots new wp-testing                          [19:57:33]\n? Your project's name: wp-testing\n? A brief description of your project: wp integration\n\u25b8 project created\n\u25b8 dependencies installing\nnpm ERR! install Couldn't read dependencies\n\u2718 Error: Invalid name: \"[object Object]\"\nPotentially unhandled rejection [3] Error: Invalid name: \"[object Object]\"\n  at ensureValidName (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/fixer.js:322:15)\n  at Object.module.exports.fixNameField (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/fixer.js:211:5)\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/normalize.js:30:38\n  at Array.forEach (native)\n  at normalize (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/normalize-package-data/lib/normalize.js:29:15)\n  at final (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:368:33)\n  at then (/usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:127:33)\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/read-package-json/read-json.js:267:40\n  at evalmachine.<anonymous>:336:14\n  at /usr/local/lib/node_modules/roots/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:102:5\n  at FSReqWrap.oncomplete (evalmachine.<anonymous>:99:15)\n\n```\n\nsolution found here [https://github.com/jenius/roots/issues/604#issuecomment-71348510] not working.\n. Great news! thank you :dancer: \nIt works!\n. Thanks! Will do, good thing I've got nvm working fine :)\n. hmm this only seems to be happening on one of my computers.\nI tried switching to node 4.2.2 but still get this:\n\n```\n \u276f npm install -g roots                                                                                                                                                   [18:46:33]\n\n> fsevents@0.3.8 install /Users/debastost/.nvm/versions/node/v4.2.2/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\n  SOLINK_MODULE(target) Release/.node\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce: github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-eb581e81: github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR! Darwin 14.5.0\nnpm ERR! argv \"/Users/debastost/.nvm/versions/node/v4.2.2/bin/node\" \"/Users/debastost/.nvm/versions/node/v4.2.2/bin/npm\" \"install\" \"-g\" \"roots\"\nnpm ERR! node v4.2.2\nnpm ERR! npm  v2.14.7\nnpm ERR! code 128\n\nnpm ERR! Command failed: git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/node-github.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce\nnpm ERR! Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-node-github-git-cefba6ce'...\nnpm ERR! fatal: unable to connect to github.com:\nnpm ERR! github.com[0: 192.30.252.130]: errno=Operation timed out\nnpm ERR!\nnpm ERR!\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/debastost/Projects/study/featurepeek/npm-debug.log\n```\n. I'm not sure if this is relevant, but I am facing the same issue on one of my macs.\nI get this error though:\n\n```\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e'...\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: fatal: unable to connect to github.com:\nnpm ERR! git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e: github.com[0: 192.30.252.128]: errno=Operation timed out\nloadDep:st                \u2590 \u2562\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591npm WARN install Couldn't install optional dependency: Command failed: git clone --template=/Users/debastost/.npm/_git-remotes/_templates --mirror git://github.com/jenius/st.git /Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e\nnpm WARN install Cloning into bare repository '/Users/debastost/.npm/_git-remotes/git-github-com-jenius-st-git-75440a74bcfef19581af498df6a5644e'...\nnpm WARN install fatal: unable to connect to github.com:\nnpm WARN install github.com[0: 192.30.252.128]: errno=Operation timed out\n\n```\n\nIt's quite strange considering I dont have an issue with any other repos on GitHub?\n. Sometimes I wish the internet behaved nicely just for one whole day, just\none! I'll look deeper into it as soon as I get a chance!\nOn 1 Dec 2015 23:41, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Never seen this one before. Definitely not an issue with roots through\n> haha, it's an internet thing.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/686#issuecomment-160956265.\n. ",
    "rposborne": ":+1: Makes the upgrade from v2 -> v3 hard to troubleshoot. \n. I'll retract my plus 1 it seems to have disappeared after switching to master vs rc7\n. :+1: Makes the upgrade from v2 -> v3 hard to troubleshoot. \n. I'll retract my plus 1 it seems to have disappeared after switching to master vs rc7\n. ",
    "mauvm": "Not sure if correct, but it looks like the global view variable `path` is renamed to `filename`.\n. Oh yeah. Forgot to mention that. It is 0.0.3. Tried downgrading it to 0.0.2 and 0.0.1, without any luck. It does look like a Stylus issue, specifically with vendor prefixing.\n. It seems like compression is the issue here. When running `roots compile --no-compress` the vendor prefix is included.\n\nWhich does the job for now. (:\n. Solving this on the client side is actually a very good idea. If we render a metadata object for the posts, we could use this for navigation but also for dynamically displaying related posts etc. The downside is that you can't use this information on compile time.\n\nUsing the cached feedback from a previous compilation wouldn't be that inefficient, since you would add a post (compilation # 1), modify it a bit (compilation # 2), and then deploy (compilation # 3). Which makes sure you always have the cached feedback available. Only deploying directly from a fresh repo (or after deleting cached files) would cause problems. But this can be handled by a simple \"cache file exists\" check in your deploy script. This tackles the most part of the out-of-sync problem and allows for compile time (and client side) use of the post's metadata. Also it allows for transparent/native usage of this data, through providing it via the locals configuration in `app.coffee`. For example:\n\n``` js\nmodule.exports =\n    locals:\n        meta: require 'cache/meta.json'\n```\n\nAnd in the view:\n\n``` jade\na(href= meta.posts[0]._url) First post\n```\n\nMakes sense?\n. Not sure if correct, but it looks like the global view variable `path` is renamed to `filename`.\n. Oh yeah. Forgot to mention that. It is 0.0.3. Tried downgrading it to 0.0.2 and 0.0.1, without any luck. It does look like a Stylus issue, specifically with vendor prefixing.\n. It seems like compression is the issue here. When running `roots compile --no-compress` the vendor prefix is included.\n\nWhich does the job for now. (:\n. Solving this on the client side is actually a very good idea. If we render a metadata object for the posts, we could use this for navigation but also for dynamically displaying related posts etc. The downside is that you can't use this information on compile time.\n\nUsing the cached feedback from a previous compilation wouldn't be that inefficient, since you would add a post (compilation # 1), modify it a bit (compilation # 2), and then deploy (compilation # 3). Which makes sure you always have the cached feedback available. Only deploying directly from a fresh repo (or after deleting cached files) would cause problems. But this can be handled by a simple \"cache file exists\" check in your deploy script. This tackles the most part of the out-of-sync problem and allows for compile time (and client side) use of the post's metadata. Also it allows for transparent/native usage of this data, through providing it via the locals configuration in `app.coffee`. For example:\n\n``` js\nmodule.exports =\n    locals:\n        meta: require 'cache/meta.json'\n```\n\nAnd in the view:\n\n``` jade\na(href= meta.posts[0]._url) First post\n```\n\nMakes sense?\n. ",
    "philbarr": "I find I have to run:\nnpm cache clean\n...sometimes if I'm getting into trouble on windows. So if I'm installing latest roots it's:\nnpm uninstall roots@pre -g\nnpm cache clean\nnpm install roots@pre -g\n\nWhilst running the \"npm cache clean\"  you can watch it deleting all the folders in C:\\Users\\username\\AppData\\Roaming\\npm-cache.\n. Ok, so as far as I can tell the problem is with the \"posix\" module, which has an include to a unistd.h file, which means nothing to us windows peeps. So we can't use the posix module on windows.\nFortunately, it's only used in one place in all of roots (except for in a test, and who cares about those, right?), so the workaround as it stands (I did all this from a git shell so I didn't have to enter passwords etc.) is:\n1. Make sure %APPDATA%\\Roaming\\npm is on your %PATH%\n2. cd %APPDATA%\\Roaming\\npm\\node_modules (create this dir if it doesn't exist)\n3. git clone -b v3 https://github.com/jenius/roots.git\n4. cd roots\n5. git checkout tags/v3.0.0-rc.9\n6. edit package.json and remove line 36 entirely which is the dependency:\n   \n   \"posix\": \"1.0.x\",\n7. edit lib/config.coffee and comment out lines 6 and 44 with a # :\n   \n   # posix  = require 'posix'\n   \n   # try posix.setrlimit('nofile', { soft: limit, hard: limit })\n8. ALSO, there is a problem with the regex at line 143 in this same file (lib/config.coffee) - which is probably a windows problem because of the path separator being a backslash. Needs to be changed to the following (note the extra slash after #{path.sep}):\n   \n   if ext then res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")\n9. We need to emulate the \"global install\" bit (There might be a better way to do this). Create a file at %APPDATA%\\Roaming\\npm called roots.cmd and add the following text\n\n```\n    @IF EXIST \"%~dp0\\node.exe\" (\n      \"%~dp0\\node.exe\"  \"%~dp0\\node_modules\\roots\\bin\\roots\" %*\n    ) ELSE (\n      @SETLOCAL\n      @SET PATHEXT=%PATHEXT:;.JS;=;%\n      node  \"%~dp0\\node_modules\\roots\\bin\\roots\" %*\n    )\n```\n1. Just for good measure run \"npm cache clean\"\n2. Make sure you're in %APPDATA%\\Roaming\\npm\\node_modules\\roots at the command line and then run \"npm install\"\n3. Enjoy!! \n. Sure, happy to do that.\n. Hi @samccone, are you getting that trying to install roots.cx? Because roots doesn't have a dependency on node-posix-ext, only on node-posix.\nFor what it's worth, I could get node-posix-ext to build on windows, but I wasn't using cygwin as you appear to be. Either that or you like to confuse people with strange directory paths :)\n. @jenius - I don't have an alternative solution to the EMFILE problem, but would you like me to submit a pull request for removing the posix stuff, and we can work on the EMFILE after that? And submit the regex fix at the same time?\n. Win7\nOn 22 Sep 2014 22:19, \"Sam Saccone\" notifications@github.com wrote:\n\n> yeah I am just trying a few things, that is cygwin btw.. are you on\n> windows 7 or 8?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/521#issuecomment-56444889.\n. pull request created to fix the posix (whilst leaving it working on posix systems) and the windows regex issue. This is my first pull request so feel free to point out where I've gone wrong.\n. Still working on getting the tests to pass. Even more fun, I have different tests failing on Windows than on the Travis report, particularly because of CR line endings.\nAt some point I'm going to setup a VagrantFile with ubuntu and node so I can run the tests on both systems easily.\nThis stuff might take a few days though...\n. afraid these fail on windows again. will have a look in the morning.\nwas my regex fix making the tests fail? because this line doesn't work on win:\nres = res.replace(///.[^#{path.sep}]*$///, \".#{ext}\")\n. Yes this is what happens on windows. My last pull request did fix this issue but unfortunately broke tests at the same time.\nI'm working on a fix for this that doesn't break the tests.\n. Given the new state of 3.0.0-rc.10, this is an easy fix now, in lib/config.coffee line 155 change the regex from:\n`res = res.replace(///\\.[^\\#{path.sep}]*$///, \".#{ext}\")`\nto\n`res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")`\n\nnote that I just moved the backslash from before the path.sep to after it.\n. I find I have to run:\nnpm cache clean\n...sometimes if I'm getting into trouble on windows. So if I'm installing latest roots it's:\nnpm uninstall roots@pre -g\nnpm cache clean\nnpm install roots@pre -g\n\nWhilst running the \"npm cache clean\"  you can watch it deleting all the folders in C:\\Users\\username\\AppData\\Roaming\\npm-cache.\n. Ok, so as far as I can tell the problem is with the \"posix\" module, which has an include to a unistd.h file, which means nothing to us windows peeps. So we can't use the posix module on windows.\nFortunately, it's only used in one place in all of roots (except for in a test, and who cares about those, right?), so the workaround as it stands (I did all this from a git shell so I didn't have to enter passwords etc.) is:\n1. Make sure %APPDATA%\\Roaming\\npm is on your %PATH%\n2. cd %APPDATA%\\Roaming\\npm\\node_modules (create this dir if it doesn't exist)\n3. git clone -b v3 https://github.com/jenius/roots.git\n4. cd roots\n5. git checkout tags/v3.0.0-rc.9\n6. edit package.json and remove line 36 entirely which is the dependency:\n   \n   \"posix\": \"1.0.x\",\n7. edit lib/config.coffee and comment out lines 6 and 44 with a # :\n   \n   # posix  = require 'posix'\n   \n   # try posix.setrlimit('nofile', { soft: limit, hard: limit })\n8. ALSO, there is a problem with the regex at line 143 in this same file (lib/config.coffee) - which is probably a windows problem because of the path separator being a backslash. Needs to be changed to the following (note the extra slash after #{path.sep}):\n   \n   if ext then res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")\n9. We need to emulate the \"global install\" bit (There might be a better way to do this). Create a file at %APPDATA%\\Roaming\\npm called roots.cmd and add the following text\n\n```\n    @IF EXIST \"%~dp0\\node.exe\" (\n      \"%~dp0\\node.exe\"  \"%~dp0\\node_modules\\roots\\bin\\roots\" %*\n    ) ELSE (\n      @SETLOCAL\n      @SET PATHEXT=%PATHEXT:;.JS;=;%\n      node  \"%~dp0\\node_modules\\roots\\bin\\roots\" %*\n    )\n```\n1. Just for good measure run \"npm cache clean\"\n2. Make sure you're in %APPDATA%\\Roaming\\npm\\node_modules\\roots at the command line and then run \"npm install\"\n3. Enjoy!! \n. Sure, happy to do that.\n. Hi @samccone, are you getting that trying to install roots.cx? Because roots doesn't have a dependency on node-posix-ext, only on node-posix.\nFor what it's worth, I could get node-posix-ext to build on windows, but I wasn't using cygwin as you appear to be. Either that or you like to confuse people with strange directory paths :)\n. @jenius - I don't have an alternative solution to the EMFILE problem, but would you like me to submit a pull request for removing the posix stuff, and we can work on the EMFILE after that? And submit the regex fix at the same time?\n. Win7\nOn 22 Sep 2014 22:19, \"Sam Saccone\" notifications@github.com wrote:\n\n> yeah I am just trying a few things, that is cygwin btw.. are you on\n> windows 7 or 8?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/521#issuecomment-56444889.\n. pull request created to fix the posix (whilst leaving it working on posix systems) and the windows regex issue. This is my first pull request so feel free to point out where I've gone wrong.\n. Still working on getting the tests to pass. Even more fun, I have different tests failing on Windows than on the Travis report, particularly because of CR line endings.\nAt some point I'm going to setup a VagrantFile with ubuntu and node so I can run the tests on both systems easily.\nThis stuff might take a few days though...\n. afraid these fail on windows again. will have a look in the morning.\nwas my regex fix making the tests fail? because this line doesn't work on win:\nres = res.replace(///.[^#{path.sep}]*$///, \".#{ext}\")\n. Yes this is what happens on windows. My last pull request did fix this issue but unfortunately broke tests at the same time.\nI'm working on a fix for this that doesn't break the tests.\n. Given the new state of 3.0.0-rc.10, this is an easy fix now, in lib/config.coffee line 155 change the regex from:\n`res = res.replace(///\\.[^\\#{path.sep}]*$///, \".#{ext}\")`\nto\n`res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")`\n\nnote that I just moved the backslash from before the path.sep to after it.\n. ",
    "hankthewhale": "My hero. Everything works as expected switching to v3. I typically do not sudo npm anything but I was desperate. Thanks for the help! I'd say this is safe to close out.\n. My hero. Everything works as expected switching to v3. I typically do not sudo npm anything but I was desperate. Thanks for the help! I'd say this is safe to close out.\n. ",
    "FranzSkuffka": "did not see anything about it in the docs, neither does it work with the instructions i found at jenius.github.io/rupture/\n. latest npm install (2.1.4)\n. thanks alot.\nas i am fairly new to web development in general i'd be in great trouble having to figure this out by myself. I will switch to roots 3 then.\n. i think i might get on this through creating a node package, but i'm fairly new to all this.\n. You are completely right. I'm sorry about this, i will head over to axis and contribute there, as i view the generic support of rem font sizing, svg and hi-res images as an integral part of this very rapid and modern workflow.\n\nhaven't found anything on this in axis, correct me if i'm wrong.\n. @jenius if not bower, what else do you use? \n. It might make sense to add this to the readme and documentation as an example use of multipass compilation.\n. @jenius Confirmed.\nIt's on my todo list now :)\n. @i8ramin was also asking for poststylus in specific. I used it for [gulp-stylus-pipeline](https://github.com/FranzSkuffka/gulp-stylus-pipeline) but it did not really improve anything. I do not think poststylus is actually ready yet but it might make sense to integrate it sooner or later.\n. Which system are you on? Does the server serve the correct files?\n. I get\n\n```\nENOENT, no such file or directory '/Users/jan/ufo2/assets/css/views/layout.jade']\n\nPotentially unhandled rejection [10] Error: /Users/jan/ufo2/assets/css/master.css.styl:1\n  > 1| extends views/layout\n    2| \n    3| include views/_mixins\n    4| \n```\n\non every compile except the first after initializing the watcher.\n\nI do not encounter this bug when I do not define a `template` for a content type in roots-contentful.\n. This is probably some misconfiguration of the project or a naming conflict with some internal variables. Have to fix this myself. Thanks though!\n. Thank you for evaluating. :smile:\n. hint: @eliwilliamson you can enclose e.g. place ``` in the lines above and below code blocks to format them accordingly.\n. Angular2 is just huge. I get multi-megabyte files. Thanks for the poke.\n. I am going to build an E-Mail template editor. Do you recommend vue.js and have any experience with it? I saw it before and it looks really appealing. Thanks!\n. Thanks, I will look into it. Had 2 solid days of angular2 PITA without any results.\n. I won't let angular get between roots and me :heart: \n. No magic in my setup either, I restructure the application as I go. Usually I use it with roots-browserify to integrate with npm, but that's it.\n. Just to note, I was intentionally filing this issue here because it is a part of roots' core and not inherent to a template. Opened a PR on the base template now.\n. did not see anything about it in the docs, neither does it work with the instructions i found at jenius.github.io/rupture/\n. latest npm install (2.1.4)\n. thanks alot.\nas i am fairly new to web development in general i'd be in great trouble having to figure this out by myself. I will switch to roots 3 then.\n. i think i might get on this through creating a node package, but i'm fairly new to all this.\n. You are completely right. I'm sorry about this, i will head over to axis and contribute there, as i view the generic support of rem font sizing, svg and hi-res images as an integral part of this very rapid and modern workflow.\n\nhaven't found anything on this in axis, correct me if i'm wrong.\n. @jenius if not bower, what else do you use? \n. It might make sense to add this to the readme and documentation as an example use of multipass compilation.\n. @jenius Confirmed.\nIt's on my todo list now :)\n. @i8ramin was also asking for poststylus in specific. I used it for [gulp-stylus-pipeline](https://github.com/FranzSkuffka/gulp-stylus-pipeline) but it did not really improve anything. I do not think poststylus is actually ready yet but it might make sense to integrate it sooner or later.\n. Which system are you on? Does the server serve the correct files?\n. I get\n\n```\nENOENT, no such file or directory '/Users/jan/ufo2/assets/css/views/layout.jade']\n\nPotentially unhandled rejection [10] Error: /Users/jan/ufo2/assets/css/master.css.styl:1\n  > 1| extends views/layout\n    2| \n    3| include views/_mixins\n    4| \n```\n\non every compile except the first after initializing the watcher.\n\nI do not encounter this bug when I do not define a `template` for a content type in roots-contentful.\n. This is probably some misconfiguration of the project or a naming conflict with some internal variables. Have to fix this myself. Thanks though!\n. Thank you for evaluating. :smile:\n. hint: @eliwilliamson you can enclose e.g. place ``` in the lines above and below code blocks to format them accordingly.\n. Angular2 is just huge. I get multi-megabyte files. Thanks for the poke.\n. I am going to build an E-Mail template editor. Do you recommend vue.js and have any experience with it? I saw it before and it looks really appealing. Thanks!\n. Thanks, I will look into it. Had 2 solid days of angular2 PITA without any results.\n. I won't let angular get between roots and me :heart: \n. No magic in my setup either, I restructure the application as I go. Usually I use it with roots-browserify to integrate with npm, but that's it.\n. Just to note, I was intentionally filing this issue here because it is a part of roots' core and not inherent to a template. Opened a PR on the base template now.\n. ",
    "laurosantos": "Hi @jenius\nThanks!\n\n---\n\nLauro Santos\nConsultor de Sistemas Internet e Multim\u00eddia\nAdobe Community Professional\nAdobe Certified Instructor\nAdobe Certified Rich Internet Application Specialist\nAdobe Certified Web Specialist\ntwitter.com/laurosantos\nhttp://www.laurosantos.com.br\nhttp://www.brmultimidia.com.br\n\n2014-07-12 16:22 GMT-03:00 Jeff Escalante notifications@github.com:\n\n> Hey @laurosantos https://github.com/laurosantos - this is not an issue\n> with roots, it's an issue with a very old version of axis\n> https://github.com/jenius/axis - you should open the issue there [image:\n> :grin:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/526#issuecomment-48821472.\n. Hi @jenius\nThanks!\n\n---\n\nLauro Santos\nConsultor de Sistemas Internet e Multim\u00eddia\nAdobe Community Professional\nAdobe Certified Instructor\nAdobe Certified Rich Internet Application Specialist\nAdobe Certified Web Specialist\ntwitter.com/laurosantos\nhttp://www.laurosantos.com.br\nhttp://www.brmultimidia.com.br\n\n2014-07-12 16:22 GMT-03:00 Jeff Escalante notifications@github.com:\n\n> Hey @laurosantos https://github.com/laurosantos - this is not an issue\n> with roots, it's an issue with a very old version of axis\n> https://github.com/jenius/axis - you should open the issue there [image:\n> :grin:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/526#issuecomment-48821472.\n. ",
    "danhper": "Thanks for your reply. I see, I'm going to try the `v3` branch!\n. Sure,  I just restored the version of Jade in `package.json` and changed the PR title.\n. I just squashed the two commits.\n. Thanks for your reply. I see, I'm going to try the `v3` branch!\n. Sure,  I just restored the version of Jade in `package.json` and changed the PR title.\n. I just squashed the two commits.\n. ",
    "dietlev": "I'm using \nroots new exampleProject\n\nThere is no output at all. It seems like Terminal is just waiting for input.\nsudo doesn't make a difference, same problem.\n. I'm using \nroots new exampleProject\n\nThere is no output at all. It seems like Terminal is just waiting for input.\nsudo doesn't make a difference, same problem.\n. ",
    "Ne4to777": "2.1.4\n. It works fine on Ubuntu 14 (under win7x64 with virtualbox)\n. same error (screenshot 2).\n. Yes, I'm interested. I've installed Ubuntu 14 over my win7x64 and now express template throws new errors (roots watch) . A lot of errors. I can send you log file. And same error (screen 2) through node app\n. It throws same error under Ubuntu. What I have to do?\n. same error (screen 2). As I understand \"connect-assets\" module newer then 2.x.x has no .cssCompilers property.\n. Try 'roots deploy'.\n. can you interract with heroku through terminal without roots? \n. 2.1.4\n. It works fine on Ubuntu 14 (under win7x64 with virtualbox)\n. same error (screenshot 2).\n. Yes, I'm interested. I've installed Ubuntu 14 over my win7x64 and now express template throws new errors (roots watch) . A lot of errors. I can send you log file. And same error (screen 2) through node app\n. It throws same error under Ubuntu. What I have to do?\n. same error (screen 2). As I understand \"connect-assets\" module newer then 2.x.x has no .cssCompilers property.\n. Try 'roots deploy'.\n. can you interract with heroku through terminal without roots? \n. ",
    "1jerry": "Ran into the exact same issue.  Found where this was happening: line 32 in roots/lib/deployer.js.  Unfortunately I wasn't able to find an easy fix.  As you can see, I tried.\n- First I noticed a semi-colon separating commands.  This needs to be a &&. \n  - I tested this from the node REPL prompt with generic commands and it does execute both commands.  \n  - But for some reason using the original string with **git** commands still _did not_ work.  It always returns _\"Paths with -a does not make sense\"_.  \n  - _I even tried removing the first command (git add .) and executing only the *git commit_ but it still produces the same error.\n- I then tried bypassing the _roots deploy_ command by just pushing manually to Heroku.  I then got _cannot GET /_ as the output of my site.  Of course!  I didn't push the **public/** folder.\n- then tried changing Procfile from \"node server.js\" to \"roots watch\".  Heroku wouldn't run that.  Of course!  Heroku doesn't have the _roots_ command.\n- I then tried to add the **public/** folder to git, but there are symlinks there, which Windows git chokes on.\n\nMy conclusion was that the _shelljs_ library doesn't always work correctly on Windows.  At least not with git.  And we cannot deploy **roots** v2 sites to Heroku _from Windows_.\n. OK.  Removed \"posix\" from package.json and tried to install.  Still got a\nerror with _posix_.  I searched everything in local node-modules and there\nis no requirement for posix.  Was scratching my head and searching for\nposix for a while (over an hour).  Then I found roots/3.0.0-rc.9 in the npm\ncache.  I didn't think I would need to clear that, but I did anyway and\ntried again.  Still no luck.  Searching in the large npm install log I\nfinally came to the conclusion than even though I have a local checkout of\nroots and branch _v3_ is active, npm install is _still_ _downloading_\nroots-3.0.0-rc.9.tgz from _registry.npmjs.org http://registry.npmjs.org_!?!\nWhich it then puts in the cache and loads the dependencies from that\nversion of package.json, _not_ my local version.\n\nThis seems illogical and is beyond my npm expertise.  Am I doing something\nwrong?  Any suggestions of how I can build root@3 _without_ the posix\nlibrary?\n\n## \n\n## Jerry\n\nOn Tue, Sep 16, 2014 at 9:05 PM, Jeff Escalante notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> Yeah, getting v3 working on windows is essential. I think this is another\n> issue with the posix module, which we really need to remove. If you pull it\n> down locally, remove posix from the node_modules, and run npm i does it\n> install cleanly?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/556#issuecomment-55846513.\n. A clue!  Roots requires roots-util@0.0.4, which requires roots >3.0.  Even\nthough the current package meets the >3.0 requirements, it hasn't finished\nbuilding yet and seems to be downloading roots _again_ from npmjs.org and\nre-processing all the requirements.\n\nIt seems to me _npm_ should handle this better, but even so it looks like\nit is a recursive, and unnecessary configuration setting.  If it is\npossible someone wanted to use roots-util _outside of roots_, then why\nwould they want the _whole roots_ installed too?\n\nTo test on Windows, I think I would have to install (locally)\nroots-util _first,\nthen_ try the npm install again, yes?\n\n## \n\n## Jerry\n\nOn Wed, Sep 17, 2014 at 12:16 PM, u (not us) Jerry <********> wrote:\n\n> OK.  Removed \"posix\" from package.json and tried to install.  Still got a\n> error with _posix_.  I searched everything in local node-modules and\n> there is no requirement for posix.  Was scratching my head and searching\n> for posix for a while (over an hour).  Then I found roots/3.0.0-rc.9 in the\n> npm cache.  I didn't think I would need to clear that, but I did anyway and\n> tried again.  Still no luck.  Searching in the large npm install log I\n> finally came to the conclusion than even though I have a local checkout of\n> roots and branch _v3_ is active, npm install is _still_ _downloading_\n> roots-3.0.0-rc.9.tgz from _registry.npmjs.org http://registry.npmjs.org_!?!\n> Which it then puts in the cache and loads the dependencies from that\n> version of package.json, _not_ my local version.\n> \n> This seems illogical and is beyond my npm expertise.  Am I doing something\n> wrong?  Any suggestions of how I can build root@3 _without_ the posix\n> library?\n> \n> ## \n> \n> ## Jerry\n> \n> On Tue, Sep 16, 2014 at 9:05 PM, Jeff Escalante\n> notifications-at-github.com |git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n> \n> > Yeah, getting v3 working on windows is essential. I think this is another\n> > issue with the posix module, which we really need to remove. If you pull it\n> > down locally, remove posix from the node_modules, and run npm i does it\n> > install cleanly?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/556#issuecomment-55846513.\n. I was able to install dependencies in my cloned roots3 folder.  But since\nthe _roots_ command _add_ and _template list_ will both throw errors for\nmissing \"posix\", there is nothing I can do with it.\n\nFor the _npm install_ to work I had to edit package.json inside package.tgz\nin roots-util/0.0.4 in the npm cache directory.  I had to remove the\ndependencies reference to roots.  I also had to remove 'posix' from\npackage.json inside package.tgz in roots/3.0.0-rc.9.  It still produced\nerrors about missing posix (from where, I don't know), but at least it\nfinished.\n\nAlso if I _then_ removed roots from the peerDependencies section.  npm\ninstall then worked fine without errors (the second time).  If I removed\nthe peerDependencies section _before_ running the first time, the install\nwould not create the _roots_ command in .bin.\n\nHappy to test again on Windows once all posix requirements are removed.\n\n## \n\n## Jerry\n\nOn Wed, Sep 17, 2014 at 12:34 PM, Jeff Escalante notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> Hmm roots-util only has it has a peer dependency -- does that try to\n> install? I didn't think that peer dependencies also install, they just\n> check the host to make sure it fits that version spec...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/556#issuecomment-55947606.\n. That is correct.  I didn't mean to say it didn't work.  I just had problems\ndeleting and copying the file structure.\n\n## \n\n## Jerry\n\nOn Fri, Sep 19, 2014 at 5:07 PM, Sean Lang notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> This shouldn't cause roots to totally \"break\", you're just not able to use\n> Windows Explorer or other software that relies on poorly written Windows\n> APIs to manipulate the directory structure that roots is installed in. You\n> should still be able to run and use roots.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/557#issuecomment-56250305.\n. Ran into the exact same issue.  Found where this was happening: line 32 in roots/lib/deployer.js.  Unfortunately I wasn't able to find an easy fix.  As you can see, I tried.\n- First I noticed a semi-colon separating commands.  This needs to be a &&. \n  - I tested this from the node REPL prompt with generic commands and it does execute both commands.  \n  - But for some reason using the original string with **git** commands still _did not_ work.  It always returns _\"Paths with -a does not make sense\"_.  \n  - _I even tried removing the first command (git add .) and executing only the *git commit_ but it still produces the same error.\n- I then tried bypassing the _roots deploy_ command by just pushing manually to Heroku.  I then got _cannot GET /_ as the output of my site.  Of course!  I didn't push the **public/** folder.\n- then tried changing Procfile from \"node server.js\" to \"roots watch\".  Heroku wouldn't run that.  Of course!  Heroku doesn't have the _roots_ command.\n- I then tried to add the **public/** folder to git, but there are symlinks there, which Windows git chokes on.\n\nMy conclusion was that the _shelljs_ library doesn't always work correctly on Windows.  At least not with git.  And we cannot deploy **roots** v2 sites to Heroku _from Windows_.\n. OK.  Removed \"posix\" from package.json and tried to install.  Still got a\nerror with _posix_.  I searched everything in local node-modules and there\nis no requirement for posix.  Was scratching my head and searching for\nposix for a while (over an hour).  Then I found roots/3.0.0-rc.9 in the npm\ncache.  I didn't think I would need to clear that, but I did anyway and\ntried again.  Still no luck.  Searching in the large npm install log I\nfinally came to the conclusion than even though I have a local checkout of\nroots and branch _v3_ is active, npm install is _still_ _downloading_\nroots-3.0.0-rc.9.tgz from _registry.npmjs.org http://registry.npmjs.org_!?!\nWhich it then puts in the cache and loads the dependencies from that\nversion of package.json, _not_ my local version.\n\nThis seems illogical and is beyond my npm expertise.  Am I doing something\nwrong?  Any suggestions of how I can build root@3 _without_ the posix\nlibrary?\n\n## \n\n## Jerry\n\nOn Tue, Sep 16, 2014 at 9:05 PM, Jeff Escalante notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> Yeah, getting v3 working on windows is essential. I think this is another\n> issue with the posix module, which we really need to remove. If you pull it\n> down locally, remove posix from the node_modules, and run npm i does it\n> install cleanly?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/556#issuecomment-55846513.\n. A clue!  Roots requires roots-util@0.0.4, which requires roots >3.0.  Even\nthough the current package meets the >3.0 requirements, it hasn't finished\nbuilding yet and seems to be downloading roots _again_ from npmjs.org and\nre-processing all the requirements.\n\nIt seems to me _npm_ should handle this better, but even so it looks like\nit is a recursive, and unnecessary configuration setting.  If it is\npossible someone wanted to use roots-util _outside of roots_, then why\nwould they want the _whole roots_ installed too?\n\nTo test on Windows, I think I would have to install (locally)\nroots-util _first,\nthen_ try the npm install again, yes?\n\n## \n\n## Jerry\n\nOn Wed, Sep 17, 2014 at 12:16 PM, u (not us) Jerry <********> wrote:\n\n> OK.  Removed \"posix\" from package.json and tried to install.  Still got a\n> error with _posix_.  I searched everything in local node-modules and\n> there is no requirement for posix.  Was scratching my head and searching\n> for posix for a while (over an hour).  Then I found roots/3.0.0-rc.9 in the\n> npm cache.  I didn't think I would need to clear that, but I did anyway and\n> tried again.  Still no luck.  Searching in the large npm install log I\n> finally came to the conclusion than even though I have a local checkout of\n> roots and branch _v3_ is active, npm install is _still_ _downloading_\n> roots-3.0.0-rc.9.tgz from _registry.npmjs.org http://registry.npmjs.org_!?!\n> Which it then puts in the cache and loads the dependencies from that\n> version of package.json, _not_ my local version.\n> \n> This seems illogical and is beyond my npm expertise.  Am I doing something\n> wrong?  Any suggestions of how I can build root@3 _without_ the posix\n> library?\n> \n> ## \n> \n> ## Jerry\n> \n> On Tue, Sep 16, 2014 at 9:05 PM, Jeff Escalante\n> notifications-at-github.com |git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n> \n> > Yeah, getting v3 working on windows is essential. I think this is another\n> > issue with the posix module, which we really need to remove. If you pull it\n> > down locally, remove posix from the node_modules, and run npm i does it\n> > install cleanly?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenius/roots/issues/556#issuecomment-55846513.\n. I was able to install dependencies in my cloned roots3 folder.  But since\nthe _roots_ command _add_ and _template list_ will both throw errors for\nmissing \"posix\", there is nothing I can do with it.\n\nFor the _npm install_ to work I had to edit package.json inside package.tgz\nin roots-util/0.0.4 in the npm cache directory.  I had to remove the\ndependencies reference to roots.  I also had to remove 'posix' from\npackage.json inside package.tgz in roots/3.0.0-rc.9.  It still produced\nerrors about missing posix (from where, I don't know), but at least it\nfinished.\n\nAlso if I _then_ removed roots from the peerDependencies section.  npm\ninstall then worked fine without errors (the second time).  If I removed\nthe peerDependencies section _before_ running the first time, the install\nwould not create the _roots_ command in .bin.\n\nHappy to test again on Windows once all posix requirements are removed.\n\n## \n\n## Jerry\n\nOn Wed, Sep 17, 2014 at 12:34 PM, Jeff Escalante notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> Hmm roots-util only has it has a peer dependency -- does that try to\n> install? I didn't think that peer dependencies also install, they just\n> check the host to make sure it fits that version spec...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/556#issuecomment-55947606.\n. That is correct.  I didn't mean to say it didn't work.  I just had problems\ndeleting and copying the file structure.\n\n## \n\n## Jerry\n\nOn Fri, Sep 19, 2014 at 5:07 PM, Sean Lang notifications-at-github.com\n|git-73ry| 1fn1zhbp1t@sneakemail.com wrote:\n\n> This shouldn't cause roots to totally \"break\", you're just not able to use\n> Windows Explorer or other software that relies on poorly written Windows\n> APIs to manipulate the directory structure that roots is installed in. You\n> should still be able to run and use roots.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/557#issuecomment-56250305.\n. ",
    "danielbaars": "'roots deploy' results in:\n\n\u2718 Error: null is not a valid deployer\n. 'roots deploy' results in:\n\n\u2718 Error: null is not a valid deployer\n. ",
    "ChadMartinson": "I am getting the same problem on a linux machine.\n. Yes, exactly the same problem and I am on 3.0.0-rc.11\n. ok sorry needs to be roots deploy -to heroku and it is working\n. I am getting the same problem on a linux machine.\n. Yes, exactly the same problem and I am on 3.0.0-rc.11\n. ok sorry needs to be roots deploy -to heroku and it is working\n. ",
    "jdalton": "Just a heads up. [lodash v3](https://github.com/lodash/lodash/releases/tag/3.0.0) has significantly reduced the dep graphs of its modularized packages:\n\n```\nlodash.assign@3.0.0\n\u251c\u2500\u252c lodash._baseassign@3.0.1\n\u2502 \u251c\u2500\u2500 lodash._basecopy@3.0.0\n\u2502 \u2514\u2500\u252c lodash.keys@3.0.3\n\u2502   \u251c\u2500\u2500 lodash.isarguments@3.0.0\n\u2502   \u251c\u2500\u2500 lodash.isarray@3.0.0\n\u2502   \u2514\u2500\u2500 lodash.isnative@3.0.0\n\u2514\u2500\u252c lodash._createassigner@3.0.0\n  \u251c\u2500\u2500 lodash._bindcallback@3.0.0\n  \u2514\u2500\u2500 lodash._isiterateecall@3.0.1\n```\n\nand\n\n```\nlodash.remove@3.0.0\n\u2514\u2500\u252c lodash._basecallback@3.2.0\n  \u251c\u2500\u252c lodash._baseisequal@3.0.1\n  \u2502 \u251c\u2500\u2500 lodash.isarray@3.0.0\n  \u2502 \u2514\u2500\u2500 lodash.istypedarray@3.0.0\n  \u251c\u2500\u2500 lodash._bindcallback@3.0.0\n  \u2514\u2500\u252c lodash.keys@3.0.3\n    \u251c\u2500\u2500 lodash.isarguments@3.0.0\n    \u251c\u2500\u2500 lodash.isarray@3.0.0\n    \u2514\u2500\u2500 lodash.isnative@3.0.0\n```\n\nYou can also cherry-pick modules from `lodash`, for example `require('lodash/array/chunk')`.\n. Just a heads up. [lodash v3](https://github.com/lodash/lodash/releases/tag/3.0.0) has significantly reduced the dep graphs of its modularized packages:\n\n```\nlodash.assign@3.0.0\n\u251c\u2500\u252c lodash._baseassign@3.0.1\n\u2502 \u251c\u2500\u2500 lodash._basecopy@3.0.0\n\u2502 \u2514\u2500\u252c lodash.keys@3.0.3\n\u2502   \u251c\u2500\u2500 lodash.isarguments@3.0.0\n\u2502   \u251c\u2500\u2500 lodash.isarray@3.0.0\n\u2502   \u2514\u2500\u2500 lodash.isnative@3.0.0\n\u2514\u2500\u252c lodash._createassigner@3.0.0\n  \u251c\u2500\u2500 lodash._bindcallback@3.0.0\n  \u2514\u2500\u2500 lodash._isiterateecall@3.0.1\n```\n\nand\n\n```\nlodash.remove@3.0.0\n\u2514\u2500\u252c lodash._basecallback@3.2.0\n  \u251c\u2500\u252c lodash._baseisequal@3.0.1\n  \u2502 \u251c\u2500\u2500 lodash.isarray@3.0.0\n  \u2502 \u2514\u2500\u2500 lodash.istypedarray@3.0.0\n  \u251c\u2500\u2500 lodash._bindcallback@3.0.0\n  \u2514\u2500\u252c lodash.keys@3.0.3\n    \u251c\u2500\u2500 lodash.isarguments@3.0.0\n    \u251c\u2500\u2500 lodash.isarray@3.0.0\n    \u2514\u2500\u2500 lodash.isnative@3.0.0\n```\n\nYou can also cherry-pick modules from `lodash`, for example `require('lodash/array/chunk')`.\n. ",
    "artelse": "I don't want to change my default browser, hence my edit of watch.js for development work.\n. Indeed that was my question. I have done something similar in grunt-connect. I am rather new to the node.js world, evaluating different frameworks and learning, but this seems a nice opportunity to dig into roots a little. If I get stuck somewhere will chime in again.\n. Not much progress, have been ill and in transit from back NYC to AMS.. hope to get to it when feeling better. \n. Thanks, these responses are the things that give me confidence in this project. But, I have been distracted by my regular work too much and can't donate any time.. which is too bad. Thanks again, will check back later on.\n. I don't want to change my default browser, hence my edit of watch.js for development work.\n. Indeed that was my question. I have done something similar in grunt-connect. I am rather new to the node.js world, evaluating different frameworks and learning, but this seems a nice opportunity to dig into roots a little. If I get stuck somewhere will chime in again.\n. Not much progress, have been ill and in transit from back NYC to AMS.. hope to get to it when feeling better. \n. Thanks, these responses are the things that give me confidence in this project. But, I have been distracted by my regular work too much and can't donate any time.. which is too bad. Thanks again, will check back later on.\n. ",
    "davidmoshal": "Thanks, yes, that would work.\n- I actually managed to get it to work by doing something similar, in Jade, and was going to post a followup note. I converted the pdf to html, added front matter, placed a 'p' on the next line, then \"| \" on all subsequent lines. It works, but it makes the html file unreadable outside Roots (because, for one thing, it's now a Jade file, and it also now has front matter). I can see how EJS  makes more sense (though I don't have experience with EJS).\n\nTwo other ideas I had:\n\n#2: put the html file in mongo | couchdb | Box, along with descriptive info, and just read it out with an ajax call from Coffeescript. (Box has the added benefit of being able to do the pdf conversion itself).\n\n#3: create my own route-handling plugin for express - actually I was surprised that you don't make the express routing available as a plugin.  ie: a handler on the route \"/docs/\" would know to collect up the document information, by reading the files, and pass that to the template - so it's even better in that it doesn't need any front-matter (assuming that I don't need any more information than that available in a file descriptor).\n- am I missing something, is there a way to define 'route-based-plugins' in roots?\n\nBtw - very impressive work, really well thought out, in terms of content and styling - kudos.\n\nDave\n. Would love to help, but bandwidth fairly limited.\n\nAlso my interest in Roots is probably atypical, I was looking for a quick\nfront end to document our project, ie: one single place for the\nrequirements, test results, coverage data, automation, wiki, links to issue\nwebsite, etc.\n\nInitially some of these docs were in Markdown, so, that's what drew me in\n(and I'm entirely comfortable with jade and coffeescript).\n\nMy passion lies with more dynamic apps (reactive apps in fact, like\nractive.js, firebase, etc), so that's another step further removed from\nyour target market of static sites.\n\nOne more, unrelated comment regarding Roots watch.\nFirstly, I really like this feature, it obviates the need for using\nLiveReload.\nHowever, like many of these systems, it doesn't seem to update when an\nembedded dependency changes.\nFor example, if a post changes, of if something included in a layout, or\npartial, is updated.\nI've 'rolled my own' versions of this functionality, and found that the\nonly reliable way to watch files and folders is with Chokidar, btw.\n\nSounds like I should take a look at v3.\n\nDave\n\nOn Tue, Sep 30, 2014 at 2:06 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Yeah, so what you are describing now is in the general range of\n> capabilities for roots v3 extensions. I'd like to have functionality like\n> this available through plugins rather than bloating the core out with it,\n> but it's possible for sure. I want to stay away from any sort of dynamic\n> stuff, as the output is intended to be served as flat html files rather\n> than requiring a server. If you are interested in helping out with working\n> on this kind of stuff you should chat with us though!\n> \n> https://gitter.im/jenius/roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57382832.\n. OK, I'll get v3, presumably there's a release branch, or tag, on Github?\nBTW - I looked at Hexo previously, they have a nice collection of plugins, for all sorts of developer related tasks, is that where you're headed in terms of plugins, or am I comparing apples to oranges?  https://github.com/hexojs/hexo/wiki/Plugins\n. > Yeah hexo looks like a nice library for sure, but it's built only for\n> blogs, where roots is more for general purpose static sites.\n\nThat was my initial take, that it was only for blogs, but I didn't try out\ntheir plugins. It's possible blog-style site might work for me, depending\non flexible their 'layouts' are ie: can I :\n\na) embed pdf generated html in an iframe?\n\nb) can this iframe be arranged as a single blog per page?\n\nc) can I 'fix' various navigation links.\n\nI'm going to devote a few investigatory cycles.\n\n> You can see an early preview of some of the plugins we have in place here\n> http://roots-web.bitballoon.com/extensions.\n\nNice!\n\n> To get v3, install with npm i roots@pre -g [image: :grinning:]\n\nI think I'm going to step back from that edge, too bloody for me.\n\nDave\n\nOn Tue, Sep 30, 2014 at 7:37 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Yeah hexo looks like a nice library for sure, but it's built only for\n> blogs, where roots is more for general purpose static sites. You can see an\n> early preview of some of the plugins we have in place here\n> http://roots-web.bitballoon.com/extensions.\n> \n> To get v3, install with npm i roots@pre -g [image: :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57411885.\n. I'm not concerned about the pre-release tag. \nI am concerned when I get a bunch of exceptions - I opened another issue for you, and posted the error messages.\n\nI had a quick look at Hexo's plugin api vs roots.\nhttp://hexo.io/docs/plugins.html\n\nMy first impression is as follows:\n\n**In roots** you export a template parsing api with 2 methods:  \n- settings\n- compile  \n\nSo it seems that plugins exist to convert templates to static files, optionally including front-matter compatible content files. (unless I'm missing something).\n\n**In Hexo**, the plugin API seems to allow this too, but adds route-based registration of plugins, which can then essentially generate content dynamically \n- I think it implements my option #3 above, which started this thread.\n\nThe question remains, as you point out, whether their layouts are flexible enough to go beyond simple blogs, and/or, whether my problem domain can be constrained to fit that sort of solution space.\n. Had a quick look at the plugin api link - hadn't seen that before.\nMy entry point is roots.cx - am I on the wrong site?\n\nLooking through the more detailed documentation, it still seems that the processing pipeline you expose is all about converting templates to static files, optionally using yaml-configured data files.\n\nIt's pretty flexible, and impressive wrt to templates, but I'm not seeing a way to register a plugin in the route processing pipeline. I understand that this then becomes an entirely different kind of app, ie: dynamic, and coupled to node/express etc.\n\nIf I'm understanding correctly, Roots is all about creating static server-side content, entirely decoupled at run time from node (or any other dynamic request handling platform). \nI'm assuming that your ability to combine json information is relying on client-side processing, not server side?\n\nSounds like you think I'm still missing something though.\n. > Yes, roots is entirely static, no server-side coupling of any sort, and that is entirely on purpose and will not change. \n\nthat's what I figured. \n\nI'm going to have to think about whether I really need a dynamic server, or whether everything can be done with static pages, plus a dynamic client - the client presumably could implement any javascript, at a minimum.\n. Fine with closing them ticket.\n\nI like marionette (and backbone), though I prefer Webix for sheer\nproductivity on the client side. Its a higher level abstraction though, but\nwith built in widgets.\n\nDave\n On Oct 1, 2014 8:17 AM, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Definitely. Of course I would recommend pairing a static client with an\n> API, but in the end it depends on what you are comfortable with and/or if\n> you have the time to learn a new flow. Personally, I'd recommend\n> marionette http://marionettejs.com/ as the glue between client and\n> server if you do take this route.\n> \n> Closing this issue but happy to keep discussing if you want!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57480967.\n. so, after manually creating the directory:\n ~/.node-gyp/0.10.32\n\nthen running following command:\nsudo npm install roots@pre -g\n\nRoots does seem to install, after first throwing these errors:\n\n> posix@1.0.3 install /usr/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp ERR! UNCAUGHT EXCEPTION\ngyp ERR! stack Error: EPERM, chmod '/Users/davem/.node-gyp/0.10.32'\ngyp ERR! System Darwin 13.4.0\ngyp ERR! command \"node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/posix\ngyp ERR! node -v v0.10.32\ngyp ERR! node-gyp -v v1.0.2\n This is a bug in `node-gyp`.\ngyp ERR! Try to update node-gyp and file an Issue if it does not help:\ngyp ERR!     https://github.com/TooTallNate/node-gyp/issues\nnpm WARN optional dep failed, continuing posix@1.0.3\n\n> fsevents@0.2.1 install /usr/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp ERR! UNCAUGHT EXCEPTION\ngyp ERR! stack Error: EPERM, chmod '/Users/davem/.node-gyp/0.10.32'\ngyp ERR! System Darwin 13.4.0\ngyp ERR! command \"node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\ngyp ERR! node -v v0.10.32\ngyp ERR! node-gyp -v v1.0.2\ngyp ERR! This is a bug in `node-gyp`.\ngyp ERR! Try to update node-gyp and file an Issue if it does not help:\ngyp ERR!     https://github.com/TooTallNate/node-gyp/issues\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/usr/bin/roots -> /usr/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/lib/node_modules/roots\n> node ./post_install.js\n. While it does install, it's a pretty sick installation - won't run roots new, or roots watch.  \nRolling back. \n. The only thing unusual about my node setup that comes to mind is that I\ninstalled it from HomeBrew (on OSX).\n\nThat being the simplest way for me to get around requiring sudo for every\nlocal npm install (which was causing problems with my gradle build script).\n\nThat might explain the first error I had, because node isn't installed as\nroot, but with brew privileges. Just guessing, C isn't part of my usual\ndevelopment stack, so, it's definitely part black-box for me and the two\ncould be unrelated.\n\nWould you be able to find a machine that has node installed by brew, not\nthe regular package?\n\nCurious thing is that I was able to uninstall the pre-3 version and\nreinstall the regular roots version just fine. In case you're wondering, I\nalso tried uninstalling the old version first, and the re-installing pre-3,\nbut the errors were exactly the same.\n\nOn Tue, Sep 30, 2014 at 8:31 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Woah it looks like you've got some issues with your node install. I\n> haven't seen this error before. It's either an error with node-gyp, or an\n> error with your permissions, or both, certainly not with roots. We are\n> removing the posix module next release because of issues with windows, but\n> it's likely that you'll have issues with other C-linked packages in the\n> future, so it might be worth opening this up in the posix or node-gyp repos\n> and seeing if maybe one of these guys can help you?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-57414765.\n. same version v0.10.32\nchowning didn't work for my build script for some reason.\nwhy does your old version work just fine, but not v3?\n\nOn Tue, Sep 30, 2014 at 9:01 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Oh yeah installing node with homebrew is no good. I think it's an old node\n> version as well? If you use node's official installer you'll be in much\n> better shape. If you are having permissions issues, just chown\n> /usr/local/lib and you should be set.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-57416376.\n. Never tried v3 again. Roots v2 works, but most likely I'm going with another framework, with a non-static backend - ie: not sure that a purely static site will work for this project.\n. up to you - though I think that it's related to the Homebrew installation\nof node - something that presumably many folks do to avoid having to sudo\nlocal npm installs.\n\nDave\n\nOn Wed, Oct 8, 2014 at 11:23 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> Ok cool, I'm going to close this for now then as it seems to be specific\n> to your machine/setup.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-58403351.\n. Thanks, yes, that would work.\n- I actually managed to get it to work by doing something similar, in Jade, and was going to post a followup note. I converted the pdf to html, added front matter, placed a 'p' on the next line, then \"| \" on all subsequent lines. It works, but it makes the html file unreadable outside Roots (because, for one thing, it's now a Jade file, and it also now has front matter). I can see how EJS  makes more sense (though I don't have experience with EJS).\n\nTwo other ideas I had:\n\n#2: put the html file in mongo | couchdb | Box, along with descriptive info, and just read it out with an ajax call from Coffeescript. (Box has the added benefit of being able to do the pdf conversion itself).\n\n#3: create my own route-handling plugin for express - actually I was surprised that you don't make the express routing available as a plugin.  ie: a handler on the route \"/docs/\" would know to collect up the document information, by reading the files, and pass that to the template - so it's even better in that it doesn't need any front-matter (assuming that I don't need any more information than that available in a file descriptor).\n- am I missing something, is there a way to define 'route-based-plugins' in roots?\n\nBtw - very impressive work, really well thought out, in terms of content and styling - kudos.\n\nDave\n. Would love to help, but bandwidth fairly limited.\n\nAlso my interest in Roots is probably atypical, I was looking for a quick\nfront end to document our project, ie: one single place for the\nrequirements, test results, coverage data, automation, wiki, links to issue\nwebsite, etc.\n\nInitially some of these docs were in Markdown, so, that's what drew me in\n(and I'm entirely comfortable with jade and coffeescript).\n\nMy passion lies with more dynamic apps (reactive apps in fact, like\nractive.js, firebase, etc), so that's another step further removed from\nyour target market of static sites.\n\nOne more, unrelated comment regarding Roots watch.\nFirstly, I really like this feature, it obviates the need for using\nLiveReload.\nHowever, like many of these systems, it doesn't seem to update when an\nembedded dependency changes.\nFor example, if a post changes, of if something included in a layout, or\npartial, is updated.\nI've 'rolled my own' versions of this functionality, and found that the\nonly reliable way to watch files and folders is with Chokidar, btw.\n\nSounds like I should take a look at v3.\n\nDave\n\nOn Tue, Sep 30, 2014 at 2:06 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Yeah, so what you are describing now is in the general range of\n> capabilities for roots v3 extensions. I'd like to have functionality like\n> this available through plugins rather than bloating the core out with it,\n> but it's possible for sure. I want to stay away from any sort of dynamic\n> stuff, as the output is intended to be served as flat html files rather\n> than requiring a server. If you are interested in helping out with working\n> on this kind of stuff you should chat with us though!\n> \n> https://gitter.im/jenius/roots\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57382832.\n. OK, I'll get v3, presumably there's a release branch, or tag, on Github?\nBTW - I looked at Hexo previously, they have a nice collection of plugins, for all sorts of developer related tasks, is that where you're headed in terms of plugins, or am I comparing apples to oranges?  https://github.com/hexojs/hexo/wiki/Plugins\n. > Yeah hexo looks like a nice library for sure, but it's built only for\n> blogs, where roots is more for general purpose static sites.\n\nThat was my initial take, that it was only for blogs, but I didn't try out\ntheir plugins. It's possible blog-style site might work for me, depending\non flexible their 'layouts' are ie: can I :\n\na) embed pdf generated html in an iframe?\n\nb) can this iframe be arranged as a single blog per page?\n\nc) can I 'fix' various navigation links.\n\nI'm going to devote a few investigatory cycles.\n\n> You can see an early preview of some of the plugins we have in place here\n> http://roots-web.bitballoon.com/extensions.\n\nNice!\n\n> To get v3, install with npm i roots@pre -g [image: :grinning:]\n\nI think I'm going to step back from that edge, too bloody for me.\n\nDave\n\nOn Tue, Sep 30, 2014 at 7:37 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Yeah hexo looks like a nice library for sure, but it's built only for\n> blogs, where roots is more for general purpose static sites. You can see an\n> early preview of some of the plugins we have in place here\n> http://roots-web.bitballoon.com/extensions.\n> \n> To get v3, install with npm i roots@pre -g [image: :grinning:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57411885.\n. I'm not concerned about the pre-release tag. \nI am concerned when I get a bunch of exceptions - I opened another issue for you, and posted the error messages.\n\nI had a quick look at Hexo's plugin api vs roots.\nhttp://hexo.io/docs/plugins.html\n\nMy first impression is as follows:\n\n**In roots** you export a template parsing api with 2 methods:  \n- settings\n- compile  \n\nSo it seems that plugins exist to convert templates to static files, optionally including front-matter compatible content files. (unless I'm missing something).\n\n**In Hexo**, the plugin API seems to allow this too, but adds route-based registration of plugins, which can then essentially generate content dynamically \n- I think it implements my option #3 above, which started this thread.\n\nThe question remains, as you point out, whether their layouts are flexible enough to go beyond simple blogs, and/or, whether my problem domain can be constrained to fit that sort of solution space.\n. Had a quick look at the plugin api link - hadn't seen that before.\nMy entry point is roots.cx - am I on the wrong site?\n\nLooking through the more detailed documentation, it still seems that the processing pipeline you expose is all about converting templates to static files, optionally using yaml-configured data files.\n\nIt's pretty flexible, and impressive wrt to templates, but I'm not seeing a way to register a plugin in the route processing pipeline. I understand that this then becomes an entirely different kind of app, ie: dynamic, and coupled to node/express etc.\n\nIf I'm understanding correctly, Roots is all about creating static server-side content, entirely decoupled at run time from node (or any other dynamic request handling platform). \nI'm assuming that your ability to combine json information is relying on client-side processing, not server side?\n\nSounds like you think I'm still missing something though.\n. > Yes, roots is entirely static, no server-side coupling of any sort, and that is entirely on purpose and will not change. \n\nthat's what I figured. \n\nI'm going to have to think about whether I really need a dynamic server, or whether everything can be done with static pages, plus a dynamic client - the client presumably could implement any javascript, at a minimum.\n. Fine with closing them ticket.\n\nI like marionette (and backbone), though I prefer Webix for sheer\nproductivity on the client side. Its a higher level abstraction though, but\nwith built in widgets.\n\nDave\n On Oct 1, 2014 8:17 AM, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Definitely. Of course I would recommend pairing a static client with an\n> API, but in the end it depends on what you are comfortable with and/or if\n> you have the time to learn a new flow. Personally, I'd recommend\n> marionette http://marionettejs.com/ as the glue between client and\n> server if you do take this route.\n> \n> Closing this issue but happy to keep discussing if you want!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/566#issuecomment-57480967.\n. so, after manually creating the directory:\n ~/.node-gyp/0.10.32\n\nthen running following command:\nsudo npm install roots@pre -g\n\nRoots does seem to install, after first throwing these errors:\n\n> posix@1.0.3 install /usr/lib/node_modules/roots/node_modules/posix\n> node-gyp rebuild\n\ngyp ERR! UNCAUGHT EXCEPTION\ngyp ERR! stack Error: EPERM, chmod '/Users/davem/.node-gyp/0.10.32'\ngyp ERR! System Darwin 13.4.0\ngyp ERR! command \"node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/posix\ngyp ERR! node -v v0.10.32\ngyp ERR! node-gyp -v v1.0.2\n This is a bug in `node-gyp`.\ngyp ERR! Try to update node-gyp and file an Issue if it does not help:\ngyp ERR!     https://github.com/TooTallNate/node-gyp/issues\nnpm WARN optional dep failed, continuing posix@1.0.3\n\n> fsevents@0.2.1 install /usr/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\n> node-gyp rebuild\n\ngyp ERR! UNCAUGHT EXCEPTION\ngyp ERR! stack Error: EPERM, chmod '/Users/davem/.node-gyp/0.10.32'\ngyp ERR! System Darwin 13.4.0\ngyp ERR! command \"node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /usr/lib/node_modules/roots/node_modules/chokidar/node_modules/fsevents\ngyp ERR! node -v v0.10.32\ngyp ERR! node-gyp -v v1.0.2\ngyp ERR! This is a bug in `node-gyp`.\ngyp ERR! Try to update node-gyp and file an Issue if it does not help:\ngyp ERR!     https://github.com/TooTallNate/node-gyp/issues\nnpm WARN optional dep failed, continuing fsevents@0.2.1\n/usr/bin/roots -> /usr/lib/node_modules/roots/bin/roots\n\n> roots@3.0.0-rc.10 postinstall /usr/lib/node_modules/roots\n> node ./post_install.js\n. While it does install, it's a pretty sick installation - won't run roots new, or roots watch.  \nRolling back. \n. The only thing unusual about my node setup that comes to mind is that I\ninstalled it from HomeBrew (on OSX).\n\nThat being the simplest way for me to get around requiring sudo for every\nlocal npm install (which was causing problems with my gradle build script).\n\nThat might explain the first error I had, because node isn't installed as\nroot, but with brew privileges. Just guessing, C isn't part of my usual\ndevelopment stack, so, it's definitely part black-box for me and the two\ncould be unrelated.\n\nWould you be able to find a machine that has node installed by brew, not\nthe regular package?\n\nCurious thing is that I was able to uninstall the pre-3 version and\nreinstall the regular roots version just fine. In case you're wondering, I\nalso tried uninstalling the old version first, and the re-installing pre-3,\nbut the errors were exactly the same.\n\nOn Tue, Sep 30, 2014 at 8:31 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Woah it looks like you've got some issues with your node install. I\n> haven't seen this error before. It's either an error with node-gyp, or an\n> error with your permissions, or both, certainly not with roots. We are\n> removing the posix module next release because of issues with windows, but\n> it's likely that you'll have issues with other C-linked packages in the\n> future, so it might be worth opening this up in the posix or node-gyp repos\n> and seeing if maybe one of these guys can help you?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-57414765.\n. same version v0.10.32\nchowning didn't work for my build script for some reason.\nwhy does your old version work just fine, but not v3?\n\nOn Tue, Sep 30, 2014 at 9:01 PM, Jeff Escalante notifications@github.com\nwrote:\n\n> Oh yeah installing node with homebrew is no good. I think it's an old node\n> version as well? If you use node's official installer you'll be in much\n> better shape. If you are having permissions issues, just chown\n> /usr/local/lib and you should be set.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-57416376.\n. Never tried v3 again. Roots v2 works, but most likely I'm going with another framework, with a non-static backend - ie: not sure that a purely static site will work for this project.\n. up to you - though I think that it's related to the Homebrew installation\nof node - something that presumably many folks do to avoid having to sudo\nlocal npm installs.\n\nDave\n\nOn Wed, Oct 8, 2014 at 11:23 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> Ok cool, I'm going to close this for now then as it seems to be specific\n> to your machine/setup.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/567#issuecomment-58403351.\n. ",
    "herrdu": "meet the same problem with you .And someone said that it's relation with node.js update.\n. meet the same problem with you .And someone said that it's relation with node.js update.\n. ",
    "gosteev": "thank you for reply! i will look forward v3 release\n. thank you for reply! i will look forward v3 release\n. ",
    "couchcrew-thomas": "Sorry, it seems the first pastie was missing a part of the console output. Here is the complete one:\nhttp://pastie.org/9650226\nAs you can see there, jade is correctly installed by roots.\nI did not made any changes to the package.json.\n. Is this one already merged into the latest v3 commit? Gonna start a new project soon and I'd like to do this with v3.\n. Sorry, it seems the first pastie was missing a part of the console output. Here is the complete one:\nhttp://pastie.org/9650226\nAs you can see there, jade is correctly installed by roots.\nI did not made any changes to the package.json.\n. Is this one already merged into the latest v3 commit? Gonna start a new project soon and I'd like to do this with v3.\n. ",
    "motleydev": "Hey thanks - sorry for the errant posting, too. Just my two cents, it might be worth putting a flag at the top of this page (http://roots.cx/axis/) just to catch anyone else struggling with the same kind of thing. Your awesomely fast response allows the designer in me to forgive you for your comments about vertical rhythm\u2026 thanks for the great tool! Looking forward to actually trying the roots generator after 3.0!\n. Hey thanks - sorry for the errant posting, too. Just my two cents, it might be worth putting a flag at the top of this page (http://roots.cx/axis/) just to catch anyone else struggling with the same kind of thing. Your awesomely fast response allows the designer in me to forgive you for your comments about vertical rhythm\u2026 thanks for the great tool! Looking forward to actually trying the roots generator after 3.0!\n. ",
    "sethkrasnianski": "False alarm\n. Fixed in https://github.com/jenius/roots/commit/9d39e39f4e3aa5931c43fac489c378a310ea8343\n. False alarm\n. Fixed in https://github.com/jenius/roots/commit/9d39e39f4e3aa5931c43fac489c378a310ea8343\n. ",
    "mordecai174": "```\nautoprefixer    = require 'autoprefixer-stylus'\nrupture         = require 'rupture'\nClientTemplates = require 'client-templates'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore', 'api/**']\n  stylus:\n    use: [autoprefixer(), rupture()]\n\n  extensions: [ClientTemplates(\n    base: \"views/templates/\",\n    pattern: \"**/*.jade\",\n    out: \"js/templates.js\"\n  )]\n```\n. ```\nautoprefixer    = require 'autoprefixer-stylus'\nrupture         = require 'rupture'\nClientTemplates = require 'client-templates'\n\nmodule.exports =\n  ignores: ['readme.md', '**/layout.*', '**/_*', '.gitignore', 'api/**']\n  stylus:\n    use: [autoprefixer(), rupture()]\n\n  extensions: [ClientTemplates(\n    base: \"views/templates/\",\n    pattern: \"**/*.jade\",\n    out: \"js/templates.js\"\n  )]\n```\n. ",
    "kevin-smets": "Compiling Jade / Pug returns a deptree (same as sass which we use, don't know about Stylus). We use it on a massive project and we just store the entire thing in memory. This of course needs to be updated as files change and will require a full compile to start with the entire tree. You could obviously store this to disk as well and take the hit that it possibly does not match a 100% (maybe due to a branch switch or something).\n\nThis brought our dependency graphing from 10s ~ 30s to almost instant for a project containing over thousands of files. The issue is pretty old, is still being looked into?\n. Compiling Jade / Pug returns a deptree (same as sass which we use, don't know about Stylus). We use it on a massive project and we just store the entire thing in memory. This of course needs to be updated as files change and will require a full compile to start with the entire tree. You could obviously store this to disk as well and take the hit that it possibly does not match a 100% (maybe due to a branch switch or something).\n\nThis brought our dependency graphing from 10s ~ 30s to almost instant for a project containing over thousands of files. The issue is pretty old, is still being looked into?\n. ",
    "sourcehunter": "We are getting the red X, too. Our Jade, Coffee and Stylus files are compiled correctly, but not renamed.\n. Thanks for the hint. This seems to be an error in the CoffeeScript compiler. Your RegExp compiles to:\n\n``` javascript\nres = res.replace(/\\.[^\\#{path.sep}]*$/, \".\" + ext));\n```\n\nIt seems to parse `\\#` as character class resulting in the interpolation beeing ignored.\n\nThere are two possible fixes:\n1. Put the backslash after the interpolation:\n   \n   ``` coffeescript\n   res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")\n   ```\n2. Introduce a seperate variable for the path seperator RegExp:\n   \n   ``` coffeescript\n   if ext\n     pathSepRegExp = path.sep.replace '\\\\', '\\\\\\\\'\n     res = res.replace(///\\.[^#{pathSepRegExp}]*$///, \".#{ext}\")\n   ```\n\nI prefer the second solution, which also covers a few more (theoretical) cases.\n. We are getting the red X, too. Our Jade, Coffee and Stylus files are compiled correctly, but not renamed.\n. Thanks for the hint. This seems to be an error in the CoffeeScript compiler. Your RegExp compiles to:\n\n``` javascript\nres = res.replace(/\\.[^\\#{path.sep}]*$/, \".\" + ext));\n```\n\nIt seems to parse `\\#` as character class resulting in the interpolation beeing ignored.\n\nThere are two possible fixes:\n1. Put the backslash after the interpolation:\n   \n   ``` coffeescript\n   res = res.replace(///\\.[^#{path.sep}\\]*$///, \".#{ext}\")\n   ```\n2. Introduce a seperate variable for the path seperator RegExp:\n   \n   ``` coffeescript\n   if ext\n     pathSepRegExp = path.sep.replace '\\\\', '\\\\\\\\'\n     res = res.replace(///\\.[^#{pathSepRegExp}]*$///, \".#{ext}\")\n   ```\n\nI prefer the second solution, which also covers a few more (theoretical) cases.\n. ",
    "Gioni06": "I installed roots globally, but when i run `roots new test-project` it says that there is now Internet connection. Sorry i have no console output right now, buts it works fine on my mac. When i copy the files manually into a new project roots runs just fine.\n. now = no .Sorry German autocompletion.\n. Hi @jenius. I just wanted to let you know that its works now. I was about to reproduce the error, but i switched to Windows 10 and the error disappeared. I'm 100% sure that my connection was just fine though. I think the error was produced at a lower level, not Roots related. Sorry for the false alarm. When i can reproduce the error anytime soon, I will let you know. \n. @Leeds-eBooks No i didn't. I stopt working on this particular project. But please tell me when you start a project. I would definitely help you where possible.\n. I'm currently having similar issues with roots watch. It compiles once, but fails on file changes. Roots is looking for jade templates in my `css` / `less` folders. It tells me , that my `navigation.less` has an error in line 1. I double checked every reference but i cannot find out why roots thinks that this is an view file.\n\n```\n  [Error: Error: /Users/Jonas/Documents/Development/Github/qsc-airqoo-update/assets/css/_partials/navigation.less:1\n    > 1| extends layout-single\n      2| \n      3| block meta\n      4|   meta(name='description', content='#{config.glossarItem.description}')\n\n  ENOENT, no such file or directory '/Users/Jonas/Documents/Development/Github/qsc-airqoo-update/assets/css/_partials/layout-single.jade']\n```\n\nThe `layout-single.jade` is certainly in my views folder and the `navigation.less` has no jade code inside.\n\nIs this behavior related to this issue? \n. I installed roots globally, but when i run `roots new test-project` it says that there is now Internet connection. Sorry i have no console output right now, buts it works fine on my mac. When i copy the files manually into a new project roots runs just fine.\n. now = no .Sorry German autocompletion.\n. Hi @jenius. I just wanted to let you know that its works now. I was about to reproduce the error, but i switched to Windows 10 and the error disappeared. I'm 100% sure that my connection was just fine though. I think the error was produced at a lower level, not Roots related. Sorry for the false alarm. When i can reproduce the error anytime soon, I will let you know. \n. @Leeds-eBooks No i didn't. I stopt working on this particular project. But please tell me when you start a project. I would definitely help you where possible.\n. I'm currently having similar issues with roots watch. It compiles once, but fails on file changes. Roots is looking for jade templates in my `css` / `less` folders. It tells me , that my `navigation.less` has an error in line 1. I double checked every reference but i cannot find out why roots thinks that this is an view file.\n\n```\n  [Error: Error: /Users/Jonas/Documents/Development/Github/qsc-airqoo-update/assets/css/_partials/navigation.less:1\n    > 1| extends layout-single\n      2| \n      3| block meta\n      4|   meta(name='description', content='#{config.glossarItem.description}')\n\n  ENOENT, no such file or directory '/Users/Jonas/Documents/Development/Github/qsc-airqoo-update/assets/css/_partials/layout-single.jade']\n```\n\nThe `layout-single.jade` is certainly in my views folder and the `navigation.less` has no jade code inside.\n\nIs this behavior related to this issue? \n. ",
    "edinchez": "[This](http://img7.yehpic.com/f2b489f1ac511a2fef6f968998fd8802.png) is the error I'm receiving on Windows. Any ideas?\n. [This](http://img7.yehpic.com/f2b489f1ac511a2fef6f968998fd8802.png) is the error I'm receiving on Windows. Any ideas?\n. ",
    "haxsu": "I was able to install roots on Windows but when I try to make a new project, it does this:\n\nC:\\Users\\ALL INJURY CARE>roots new project\n{ [Error: Command failed: C:\\Windows\\system32\\cmd.exe /s /c \"git clone https://g\nithub.com/roots-dev/base.git C:\\Users\\ALL INJURY CARE.config\\sprout\\roots-base\"\n\nToo many arguments.\n\nusage: git clone [options] [--] <repo> [<dir>]\n\n```\n-v, --verbose         be more verbose\n-q, --quiet           be more quiet\n--progress            force progress reporting\n-n, --no-checkout     don't create a checkout\n--bare                create a bare repository\n--mirror              create a mirror repository (implies bare)\n-l, --local           to clone from a local repository\n--no-hardlinks        don't use local hardlinks, always copy\n-s, --shared          setup as shared repository\n--recursive           initialize submodules in the clone\n--recurse-submodules  initialize submodules in the clone\n--template <template-directory>\n                      directory from which templates will be used\n--reference <repo>    reference repository\n-o, --origin <name>   use <name> instead of 'origin' to track upstream\n-b, --branch <branch>\n                      checkout <branch> instead of the remote's HEAD\n-u, --upload-pack <path>\n                      path to git-upload-pack on the remote\n--depth <depth>       create a shallow clone of that depth\n--single-branch       clone only one branch, HEAD or --branch\n--separate-git-dir <gitdir>\n                      separate git dir from working tree\n-c, --config <key=value>\n                      set config inside the new repository\n```\n\n]\n  killed: false,\n  code: 129,\n  signal: null,\n  cmd: 'C:\\Windows\\system32\\cmd.exe /s /c \"git clone https://github.com/roots\n-dev/base.git C:\\Users\\ALL INJURY CARE\\.config\\sprout\\roots-base\"' }\nPotentially unhandled rejection [3] Error: Command failed: C:\\Windows\\system32\\c\nmd.exe /s /c \"git clone https://github.com/roots-dev/base.git C:\\Users\\ALL INJUR\nY CARE.config\\sprout\\roots-base\"\nToo many arguments.\n\nusage: git clone [options] [--] <repo> [<dir>]\n\n```\n-v, --verbose         be more verbose\n-q, --quiet           be more quiet\n--progress            force progress reporting\n-n, --no-checkout     don't create a checkout\n--bare                create a bare repository\n--mirror              create a mirror repository (implies bare)\n-l, --local           to clone from a local repository\n--no-hardlinks        don't use local hardlinks, always copy\n-s, --shared          setup as shared repository\n--recursive           initialize submodules in the clone\n--recurse-submodules  initialize submodules in the clone\n--template <template-directory>\n                      directory from which templates will be used\n--reference <repo>    reference repository\n-o, --origin <name>   use <name> instead of 'origin' to track upstream\n-b, --branch <branch>\n                      checkout <branch> instead of the remote's HEAD\n-u, --upload-pack <path>\n                      path to git-upload-pack on the remote\n--depth <depth>       create a shallow clone of that depth\n--single-branch       clone only one branch, HEAD or --branch\n--separate-git-dir <gitdir>\n                      separate git dir from working tree\n-c, --config <key=value>\n                      set config inside the new repository\n```\n\n  at ChildProcess.exithandler (child_process.js:751:12)\n  at ChildProcess.emit (events.js:110:17)\n  at maybeClose (child_process.js:1015:16)\n  at Socket.<anonymous> (child_process.js:1183:11)\n  at Socket.emit (events.js:107:17)\n  at Pipe.close (net.js:485:12)\n\nI have tried everything that I could think of (including trying out the things listed on this forum) to fix this issue but now it is really bothering me. I really would like to be able to use this for Windows. Please, if anyone can help me solve this, that would be great. \n. I can verify that renaming my computer name fixed that issue. I also had to add a path directory manually. \n\nNow I am having the same issue that monkeez had where as when I run \"roots watch\" it leaves a blank screen with a red x. Trying to resolve this issue at the moment but help would be appreciated.\n\nEDIT: Never mind, fixed the issue. It seems like when I was running roots watch, i did not actually cd to the actual project folder...lol\n. I was able to install roots on Windows but when I try to make a new project, it does this:\n\nC:\\Users\\ALL INJURY CARE>roots new project\n{ [Error: Command failed: C:\\Windows\\system32\\cmd.exe /s /c \"git clone https://g\nithub.com/roots-dev/base.git C:\\Users\\ALL INJURY CARE.config\\sprout\\roots-base\"\n\nToo many arguments.\n\nusage: git clone [options] [--] <repo> [<dir>]\n\n```\n-v, --verbose         be more verbose\n-q, --quiet           be more quiet\n--progress            force progress reporting\n-n, --no-checkout     don't create a checkout\n--bare                create a bare repository\n--mirror              create a mirror repository (implies bare)\n-l, --local           to clone from a local repository\n--no-hardlinks        don't use local hardlinks, always copy\n-s, --shared          setup as shared repository\n--recursive           initialize submodules in the clone\n--recurse-submodules  initialize submodules in the clone\n--template <template-directory>\n                      directory from which templates will be used\n--reference <repo>    reference repository\n-o, --origin <name>   use <name> instead of 'origin' to track upstream\n-b, --branch <branch>\n                      checkout <branch> instead of the remote's HEAD\n-u, --upload-pack <path>\n                      path to git-upload-pack on the remote\n--depth <depth>       create a shallow clone of that depth\n--single-branch       clone only one branch, HEAD or --branch\n--separate-git-dir <gitdir>\n                      separate git dir from working tree\n-c, --config <key=value>\n                      set config inside the new repository\n```\n\n]\n  killed: false,\n  code: 129,\n  signal: null,\n  cmd: 'C:\\Windows\\system32\\cmd.exe /s /c \"git clone https://github.com/roots\n-dev/base.git C:\\Users\\ALL INJURY CARE\\.config\\sprout\\roots-base\"' }\nPotentially unhandled rejection [3] Error: Command failed: C:\\Windows\\system32\\c\nmd.exe /s /c \"git clone https://github.com/roots-dev/base.git C:\\Users\\ALL INJUR\nY CARE.config\\sprout\\roots-base\"\nToo many arguments.\n\nusage: git clone [options] [--] <repo> [<dir>]\n\n```\n-v, --verbose         be more verbose\n-q, --quiet           be more quiet\n--progress            force progress reporting\n-n, --no-checkout     don't create a checkout\n--bare                create a bare repository\n--mirror              create a mirror repository (implies bare)\n-l, --local           to clone from a local repository\n--no-hardlinks        don't use local hardlinks, always copy\n-s, --shared          setup as shared repository\n--recursive           initialize submodules in the clone\n--recurse-submodules  initialize submodules in the clone\n--template <template-directory>\n                      directory from which templates will be used\n--reference <repo>    reference repository\n-o, --origin <name>   use <name> instead of 'origin' to track upstream\n-b, --branch <branch>\n                      checkout <branch> instead of the remote's HEAD\n-u, --upload-pack <path>\n                      path to git-upload-pack on the remote\n--depth <depth>       create a shallow clone of that depth\n--single-branch       clone only one branch, HEAD or --branch\n--separate-git-dir <gitdir>\n                      separate git dir from working tree\n-c, --config <key=value>\n                      set config inside the new repository\n```\n\n  at ChildProcess.exithandler (child_process.js:751:12)\n  at ChildProcess.emit (events.js:110:17)\n  at maybeClose (child_process.js:1015:16)\n  at Socket.<anonymous> (child_process.js:1183:11)\n  at Socket.emit (events.js:107:17)\n  at Pipe.close (net.js:485:12)\n\nI have tried everything that I could think of (including trying out the things listed on this forum) to fix this issue but now it is really bothering me. I really would like to be able to use this for Windows. Please, if anyone can help me solve this, that would be great. \n. I can verify that renaming my computer name fixed that issue. I also had to add a path directory manually. \n\nNow I am having the same issue that monkeez had where as when I run \"roots watch\" it leaves a blank screen with a red x. Trying to resolve this issue at the moment but help would be appreciated.\n\nEDIT: Never mind, fixed the issue. It seems like when I was running roots watch, i did not actually cd to the actual project folder...lol\n. ",
    "iansinnott": "Thanks Jeff, good to know. I will definitely keep an eye on this as so far it's the only thing I've found to not like about Roots.\n\nOn Sat, Jan 3, 2015 at 10:46 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## Closed #594.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/594#event-213692791\n. Thanks Jeff, good to know. I will definitely keep an eye on this as so far it's the only thing I've found to not like about Roots.\n\nOn Sat, Jan 3, 2015 at 10:46 AM, Jeff Escalante notifications@github.com\nwrote:\n\n> ## Closed #594.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/jenius/roots/issues/594#event-213692791\n. ",
    "teichmaj": "Good job for releasing v3! I will give it a try when I have some time. Unfortunately, I moved away from roots to grunt for the project I am currently working on. So I haven't tried to fix it up and I'm not very optimistic I will find the time any time soon :( \n. Good job for releasing v3! I will give it a try when I have some time. Unfortunately, I moved away from roots to grunt for the project I am currently working on. So I haven't tried to fix it up and I'm not very optimistic I will find the time any time soon :( \n. ",
    "scarnago": "I have to uninstall roots and install this new v3? How I do that?\n. I have to uninstall roots and install this new v3? How I do that?\n. ",
    "ilife5": "@jenius \nThank you, but it output nothing.\n\nMy code is here:\n\napp.coffee\n\n```\nmdJade = require \"markdown-jade\"\n\nmodule.exports =\n  ignores: ['readme.md', '.idea/**', '**/layout.*', '**/_*', '.gitignore', 'ship.*conf', 'template/**']\n\n  extensions: [\n    mdJade()\n  ]\n\n  open_browser: false\n\n```\n\nmarkdown-jade is my extension\n\n```\npath        = require \"path\"\n\nmodule.exports = (opts) ->\n\n  class MarkdownConversion\n    constructor: (@roots) ->\n      @category = \"markdown\"\n\n    fs: ->\n      extract: true\n      detect: (f) ->\n        path.extname(f.relative) is (\".md\")\n\n    compile_hooks: ->\n      write: (ctx) =>\n        { path: path.join(ctx.roots.config.output_path(), \"fff.html\"), content: 'wow overrides' }\n```\n\nI use the code in the test suite and set extract true.\n. I think I get the point:)\n\nI should use the <code>ctx.roots.root</code> get the root path, It transfrom \n\nroot/fff.html ==> root/public/fff.html\n\nWhen use <code>path.join(ctx.roots.config.output_path(), \"fff.html\")</code>\n\nAlthough I get the target path root/public/fff.html, then \n\n```\n//compile.coffee\nobj.path = @roots.config.out(obj.path, obj.extension)\n```\n\ntransform it to root/public/public/fff.html.\n\nIt is a little difficult to understand:)\n\nThanks a lot.\n. @declandewet  it doesn`t work\n\nroots output file.less to public\n. @declandewet thanks.It worked. \nI have tested under 3.0.0 and 3.0.1\u3002\n. @jenius \nThank you, but it output nothing.\n\nMy code is here:\n\napp.coffee\n\n```\nmdJade = require \"markdown-jade\"\n\nmodule.exports =\n  ignores: ['readme.md', '.idea/**', '**/layout.*', '**/_*', '.gitignore', 'ship.*conf', 'template/**']\n\n  extensions: [\n    mdJade()\n  ]\n\n  open_browser: false\n\n```\n\nmarkdown-jade is my extension\n\n```\npath        = require \"path\"\n\nmodule.exports = (opts) ->\n\n  class MarkdownConversion\n    constructor: (@roots) ->\n      @category = \"markdown\"\n\n    fs: ->\n      extract: true\n      detect: (f) ->\n        path.extname(f.relative) is (\".md\")\n\n    compile_hooks: ->\n      write: (ctx) =>\n        { path: path.join(ctx.roots.config.output_path(), \"fff.html\"), content: 'wow overrides' }\n```\n\nI use the code in the test suite and set extract true.\n. I think I get the point:)\n\nI should use the <code>ctx.roots.root</code> get the root path, It transfrom \n\nroot/fff.html ==> root/public/fff.html\n\nWhen use <code>path.join(ctx.roots.config.output_path(), \"fff.html\")</code>\n\nAlthough I get the target path root/public/fff.html, then \n\n```\n//compile.coffee\nobj.path = @roots.config.out(obj.path, obj.extension)\n```\n\ntransform it to root/public/public/fff.html.\n\nIt is a little difficult to understand:)\n\nThanks a lot.\n. @declandewet  it doesn`t work\n\nroots output file.less to public\n. @declandewet thanks.It worked. \nI have tested under 3.0.0 and 3.0.1\u3002\n. ",
    "dustinrjo": "Sure, I will rip out a few of the private bits, images etc and make sure the error persists then zip it and post it to you\n. So I duplicated the project and replaced all the text content with Doge ipsum and it stopped happening.  \n\nSomething about my site content must be breaking it because changing the content significantly fixes it.\n\nThat doesn't make much sense at all to me because Roots compiles it fine and the Charge server should be just serving those static files.  If I'm able to reproduce it more consistently I will post again but for now I won't drag you into this strange bug.  \n\nIt is still persisting on me though every 5-10 compiles with the actual site content I want to use but I will close this for now.  If nothing else it was a fun opportunity to look under the hood of how you built this sweet tool.  If you do have any tips for debugging though please let me know or add that to the documentation.  Setting the debug option literally does nothing for me, at least that I'm seeing.\n\nThanks!\n. Brunch.io does a great job with this, there may be some library or module that could be borrowed or studied as an example.  I can't help with this right now but this would be my first suggestion.\n. If my comments were in Jade I would agree.  Having tested this, I'm seeing that that does not have any effect on CoffeeScript which is where I want to preserve the comments.\n\nAn example from a Rails project I worked on:\n\nhttp://www.badassembly.com/assets/application-e8dd98f992baf47a9cf46cc9e2674e5a.js\n\nThe code itself is all minified, but comments needed for attribution are preserved.\n\nIs there a way to configure _this_ in Roots?\n. Indeed that sounds correct.\n\nCurrently I'm using the basic out of the box config here:\n\n```\njs_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false)\n```\n\nSomehow I need to pass a flag to UglifyJS that seems to be under the hood of the js_pipeline's minifications that tells it to `--comments`\n\nI found this here: https://github.com/mishoo/UglifyJS2#keeping-copyright-notices-or-other-comments\n\nI'm not so sure how to set those options in the roots config for the js_pipeline based on the documentation.  \n\nI'll dig through the code now to see if I can figure it out, but hopefully that paints a picture of what I'm trying to solve if you have any ideas.\n. Hi Jeff,  I finally got a chance to test this thoroughly and I could be doing something wrong, but I've tried a lot of different things and I'm not certain your implementation works when `minify: true`\n\nI've got the latest release from you and even tried the exact code from the test.coffee you wrote.\n\nAgain, my production config is this:\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false)`\n\nIt works when minify is false, but that is not the challenge here, the challenge is to enable the `--comments` flag in Uglify to only preserve comments that are `@preserve` or `@required`\n\nI tried this:\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false, comments: true)`\n\nand this\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false, opts: {comments: true})`\n\nBut it seemed like the code change you made would just enable the comments flag by default without any config needed, though I don't know exactly how it does that.\n\nThanks for you swift responses!\n. Sure, I will rip out a few of the private bits, images etc and make sure the error persists then zip it and post it to you\n. So I duplicated the project and replaced all the text content with Doge ipsum and it stopped happening.  \n\nSomething about my site content must be breaking it because changing the content significantly fixes it.\n\nThat doesn't make much sense at all to me because Roots compiles it fine and the Charge server should be just serving those static files.  If I'm able to reproduce it more consistently I will post again but for now I won't drag you into this strange bug.  \n\nIt is still persisting on me though every 5-10 compiles with the actual site content I want to use but I will close this for now.  If nothing else it was a fun opportunity to look under the hood of how you built this sweet tool.  If you do have any tips for debugging though please let me know or add that to the documentation.  Setting the debug option literally does nothing for me, at least that I'm seeing.\n\nThanks!\n. Brunch.io does a great job with this, there may be some library or module that could be borrowed or studied as an example.  I can't help with this right now but this would be my first suggestion.\n. If my comments were in Jade I would agree.  Having tested this, I'm seeing that that does not have any effect on CoffeeScript which is where I want to preserve the comments.\n\nAn example from a Rails project I worked on:\n\nhttp://www.badassembly.com/assets/application-e8dd98f992baf47a9cf46cc9e2674e5a.js\n\nThe code itself is all minified, but comments needed for attribution are preserved.\n\nIs there a way to configure _this_ in Roots?\n. Indeed that sounds correct.\n\nCurrently I'm using the basic out of the box config here:\n\n```\njs_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false)\n```\n\nSomehow I need to pass a flag to UglifyJS that seems to be under the hood of the js_pipeline's minifications that tells it to `--comments`\n\nI found this here: https://github.com/mishoo/UglifyJS2#keeping-copyright-notices-or-other-comments\n\nI'm not so sure how to set those options in the roots config for the js_pipeline based on the documentation.  \n\nI'll dig through the code now to see if I can figure it out, but hopefully that paints a picture of what I'm trying to solve if you have any ideas.\n. Hi Jeff,  I finally got a chance to test this thoroughly and I could be doing something wrong, but I've tried a lot of different things and I'm not certain your implementation works when `minify: true`\n\nI've got the latest release from you and even tried the exact code from the test.coffee you wrote.\n\nAgain, my production config is this:\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false)`\n\nIt works when minify is false, but that is not the challenge here, the challenge is to enable the `--comments` flag in Uglify to only preserve comments that are `@preserve` or `@required`\n\nI tried this:\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false, comments: true)`\n\nand this\n\n`js_pipeline(files: 'assets/js/*.coffee', out: 'js/main.js', minify: true, hash: false, opts: {comments: true})`\n\nBut it seemed like the code change you made would just enable the comments flag by default without any config needed, though I don't know exactly how it does that.\n\nThanks for you swift responses!\n. ",
    "peduarte": "Thanks.\n\nWhat about on app.coffee?\nWhat do I need to modify on there?\nCurrently it has css pipeline in the extension array, and some stylus configuration.\n. Got an error but we figured it out. Need to update the version of Accord in root's package.json to the latest one :)\n\nPull request by @aendrew on the way...\n. Thanks.\n\nWhat about on app.coffee?\nWhat do I need to modify on there?\nCurrently it has css pipeline in the extension array, and some stylus configuration.\n. Got an error but we figured it out. Need to update the version of Accord in root's package.json to the latest one :)\n\nPull request by @aendrew on the way...\n. ",
    "aendrew": "Just to document this fully: using Roots with Sass in the latest version yields \"TypeError: Object.keys called on non-object\". Updating Accord to 0.15.x fixes this. \n. Thanks! :+1: :shipit: \n. Just to document this fully: using Roots with Sass in the latest version yields \"TypeError: Object.keys called on non-object\". Updating Accord to 0.15.x fixes this. \n. Thanks! :+1: :shipit: \n. ",
    "toabi": "I think brunch uses this: https://github.com/paulmillr/read-components \n. I think brunch uses this: https://github.com/paulmillr/read-components \n. ",
    "javaporter": "Hmm, kind of works. So, you still have to name your file with a `.scss` extension, which confuses your syntax highlighting. There are workarounds to that issue, but it's not ideal.\n. Hmm, kind of works. So, you still have to name your file with a `.scss` extension, which confuses your syntax highlighting. There are workarounds to that issue, but it's not ideal.\n. ",
    "gadern": "Thanks @hhsnopek, should have thought of that, common sense strikes again. Also, `npm install -g git+https://github.com/jenius/roots.git` worked for me if anyone is still having trouble.\n. Thanks @hhsnopek, should have thought of that, common sense strikes again. Also, `npm install -g git+https://github.com/jenius/roots.git` worked for me if anyone is still having trouble.\n. ",
    "eholzwarth": "@jenius @joshrowley What is the status on this PR? I would like to use it :)\n. Any reason this can't be merged now? It is a real bummer to maintain parallel versions of app.coffee\n. @jenius @joshrowley What is the status on this PR? I would like to use it :)\n. Any reason this can't be merged now? It is a real bummer to maintain parallel versions of app.coffee\n. ",
    "ryanjbonnell": "+1\n. +1\n. ",
    "4d47": "Thanks for the responses, so I got bitten by that multipass file extension logic.\n\nBut why compiling \"example.jade.foo.bar\" to \"example.html\" since foo and bar do not match a compiled extension ? Wouldnt it make more sense to avoid compiling unless all extensions match a language ?\n. Was with Vim default settings, no strange conventions or anything.\n. Thanks for the responses, so I got bitten by that multipass file extension logic.\n\nBut why compiling \"example.jade.foo.bar\" to \"example.html\" since foo and bar do not match a compiled extension ? Wouldnt it make more sense to avoid compiling unless all extensions match a language ?\n. Was with Vim default settings, no strange conventions or anything.\n. ",
    "eteubert": "I was just stumbling over the same issue, that `/about.html` is accessible but `/about/` is not. I didn't realize it's a netlify feature.\n\nSuggestion: Add an option that renders `/about/index.html` instead of `/about.html`. Then accessing `/about/` works in every environment, even locally.\n. I was just stumbling over the same issue, that `/about.html` is accessible but `/about/` is not. I didn't realize it's a netlify feature.\n\nSuggestion: Add an option that renders `/about/index.html` instead of `/about.html`. Then accessing `/about/` works in every environment, even locally.\n. ",
    "maniqui": "I might be missing something, but the code for serving `/about.html` (when accessing `/about`) using `.htaccess` is just the following:\n\n```\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^([^\\.]+)$ $1.html [NC,L]\n```\n\nSo, @dbox , this means that you don't need to \"auto-magically generate the mod-rewrite rules to the .htaccess file\", because you can do that with just one simple rule for every URL (instead of one rule for each URL).\n. I might be missing something, but the code for serving `/about.html` (when accessing `/about`) using `.htaccess` is just the following:\n\n```\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^([^\\.]+)$ $1.html [NC,L]\n```\n\nSo, @dbox , this means that you don't need to \"auto-magically generate the mod-rewrite rules to the .htaccess file\", because you can do that with just one simple rule for every URL (instead of one rule for each URL).\n. ",
    "jtwebman": "I actually think it is very different then asking the grunt and gulp question and I feel the analogy is a little off. After watching the videos and playing around with a site I think it is like the difference between Instagram videos and Vine videos. I think maybe you guys have never used DocPad because from what I see they are exactly the same thing with only minor differences like 8 sec video vs 15 secs video. \n\nHere is what I see and some of what I think is missing that Docpad has:\n1. The config looks like it forces me to use coffee script. I am one of those people that really doesn't like CoffeScript. Docpad lets me write the config in javascript or even json if it is simple.\n2. Accord just makes it a little easier when you start out but that really is it. Docpad just does this with plugins. The plugins way is much better because I don't have to wait till accord supports the library or send you a pull request. Also maybe my library isn't public so it wouldn't make sense for you to put it in Accord. I can just build the Docpad plugin with no other dependencies. In Roots I am guessing I could write my own extension to do this just seems strange having accord and extensions when it could all be done with extensions.\n3. I am concerned that your employee page was dynamic. In Docpad you could easily have done it with collections and then markdown or yaml or what ever you wanted. Unless maybe the employees could update the data themselves. Roots-record requires json Docpad it could be anything. Paging also is no issue in Docpad. It can be easily setup to generate each page. The advantage being that it all gets indexed by google.\n4. Client-templetes was a really nice feature that Docpad is missing though if I needed it for something I don't think it would be hard to add in. I would love to see it done with React vs Jade. My only concern is client-templetes is dependent on Accord.\n5. The Wordpress thing is cool but Docpad does that as well as you can use Tumblr, Medium, MongoDB (Really and DB).\n6. Templetes was nice but Docpad has skeletons which are very close to the exact same thing.\n7. Last, when I played around with the code you end up changing the config so much but then you have to restart the watcher. Doesn't seem like a hard task to add in that the watch auto resets when the config changes.\n\nSo from my point of view you are rebuilding Docpad. You both even like CoffeeScript. Image if you guys would have just worked with Docpad and added maybe client-tempeltes how much farther along both of these would have been. This is why I asked the question because you guys are both doing the same thing. Comparing to Wordpress or Grunt doesn't make sense but Docpad and you do the same thing, almost exactly.\n. I actually think it is very different then asking the grunt and gulp question and I feel the analogy is a little off. After watching the videos and playing around with a site I think it is like the difference between Instagram videos and Vine videos. I think maybe you guys have never used DocPad because from what I see they are exactly the same thing with only minor differences like 8 sec video vs 15 secs video. \n\nHere is what I see and some of what I think is missing that Docpad has:\n1. The config looks like it forces me to use coffee script. I am one of those people that really doesn't like CoffeScript. Docpad lets me write the config in javascript or even json if it is simple.\n2. Accord just makes it a little easier when you start out but that really is it. Docpad just does this with plugins. The plugins way is much better because I don't have to wait till accord supports the library or send you a pull request. Also maybe my library isn't public so it wouldn't make sense for you to put it in Accord. I can just build the Docpad plugin with no other dependencies. In Roots I am guessing I could write my own extension to do this just seems strange having accord and extensions when it could all be done with extensions.\n3. I am concerned that your employee page was dynamic. In Docpad you could easily have done it with collections and then markdown or yaml or what ever you wanted. Unless maybe the employees could update the data themselves. Roots-record requires json Docpad it could be anything. Paging also is no issue in Docpad. It can be easily setup to generate each page. The advantage being that it all gets indexed by google.\n4. Client-templetes was a really nice feature that Docpad is missing though if I needed it for something I don't think it would be hard to add in. I would love to see it done with React vs Jade. My only concern is client-templetes is dependent on Accord.\n5. The Wordpress thing is cool but Docpad does that as well as you can use Tumblr, Medium, MongoDB (Really and DB).\n6. Templetes was nice but Docpad has skeletons which are very close to the exact same thing.\n7. Last, when I played around with the code you end up changing the config so much but then you have to restart the watcher. Doesn't seem like a hard task to add in that the watch auto resets when the config changes.\n\nSo from my point of view you are rebuilding Docpad. You both even like CoffeeScript. Image if you guys would have just worked with Docpad and added maybe client-tempeltes how much farther along both of these would have been. This is why I asked the question because you guys are both doing the same thing. Comparing to Wordpress or Grunt doesn't make sense but Docpad and you do the same thing, almost exactly.\n. ",
    "adampotocki": "almost forgot to ask, is there support for babeljs or es6?\n. now way :smile:! thank you!\n. almost forgot to ask, is there support for babeljs or es6?\n. now way :smile:! thank you!\n. ",
    "christiansakai": "I tried to add `assets/js/main.js` and inside `main.js` I put `console.log(\"heyy\");` but it doesn't work at all, am I missing something?\n. @jenius Yes I did, in fact, main.coffee is automatically converted to main.js am I right? the index.html's main.js is already there from the main.coffee\n. I tried to add `assets/js/main.js` and inside `main.js` I put `console.log(\"heyy\");` but it doesn't work at all, am I missing something?\n. @jenius Yes I did, in fact, main.coffee is automatically converted to main.js am I right? the index.html's main.js is already there from the main.coffee\n. ",
    "ngarland79": "This would be an excellent addition to roots. Manual sitemaps are no fun.\n. Great, thank you! I will look into it as soon as I can.\n. This would be an excellent addition to roots. Manual sitemaps are no fun.\n. Great, thank you! I will look into it as soon as I can.\n. ",
    "juliomarcos": "Any idea if this extension can be written while also using the contentful extension?\n. Woow, thank you for the fast response.\nWhat method should I define to run my extension only after contentful has finished? I've tried to do that using setup but it didn't work. \n. Great thanks. I'm not going to use the contenful object to do that, but instead, I'll inspect our html files because not all content comes from contentful.\n. Any idea if this extension can be written while also using the contentful extension?\n. Woow, thank you for the fast response.\nWhat method should I define to run my extension only after contentful has finished? I've tried to do that using setup but it didn't work. \n. Great thanks. I'm not going to use the contenful object to do that, but instead, I'll inspect our html files because not all content comes from contentful.\n. ",
    "Grenzfrei": "Yes, it happens consistently at certain paths, but only after working there for an while. My app.coffe configuration:\n\n```\naxis         = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture      = require 'rupture'\njeet             = require 'jeet'\nejs          = require 'ejs'\n\n\nmodule.exports =\n    ignores: ['**/layout.*', '**/_*', '.gitignore', '_*', 'readme*', '.DS_Store', 'layout.*', '.git']\n\n    stylus:\n        use: [axis(), rupture(), jeet(), autoprefixer()]\n\n    live_reload: true\n\n    open_browser: false\n```\n. Yes, it happens consistently at certain paths, but only after working there for an while. My app.coffe configuration:\n\n```\naxis         = require 'axis-css'\nautoprefixer = require 'autoprefixer-stylus'\nrupture      = require 'rupture'\njeet             = require 'jeet'\nejs          = require 'ejs'\n\n\nmodule.exports =\n    ignores: ['**/layout.*', '**/_*', '.gitignore', '_*', 'readme*', '.DS_Store', 'layout.*', '.git']\n\n    stylus:\n        use: [axis(), rupture(), jeet(), autoprefixer()]\n\n    live_reload: true\n\n    open_browser: false\n```\n. ",
    "pranaykarodi": "{\n  \"name\": \"tracklabs-angular-client\",\n  \"version\": \"0.0.1\",\n  \"description\": \"AngularJS based client for the truck and load management system\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \".\\node_modules/karma/bin/karma\",\n    \"start\": \".\\node_modules/http-server/bin/http-server\"\n  },\n  \"repository\": \"bitbucket:kamal083/angular-client.git\",\n  \"contributors\": [\n    {\n      \"name\": \"Kamal Mewada\",\n      \"email\": \"kamal.mewada.nitt@gmail.com\"\n    },\n    {\n      \"name\": \"Rishi Rajasekaran\",\n      \"email\": \"rajasekaran.rishi@gmail.com\"\n    },\n    {\n      \"name\": \"Siddarth Iyer\",\n      \"email\": \"mindstormer619@gmail.com\"\n    }\n  ],\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"angular-mocks\": \"^1.3.15\",\n    \"http-server\": \"^0.8.0\",\n    \"karma\": \"^0.12.32\",\n    \"karma-chrome-launcher\": \"^0.1.12\",\n    \"karma-jasmine\": \"^0.3.5\"\n  }\n}\n. I changed the \"\\\" in the 6th and 7th line to \"/\" after posting my query here. Hence the npm install ran successfully but them npm start created the problem. :( \n\nC:\\Pranay\\Cloned_FrontEnd>npm start\n\n> tracklabs-angular-client@0.0.1 start C:\\Pranay\\Cloned_FrontEnd\n> .\n> ode_modules/http-server/bin/http-server\n\n'.' is not recognized as an internal or external command,\noperable program or batch file.\n\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\n\\node_modules\\npm\\bin\\npm-cli.js\" \"start\"\nnpm ERR! node v0.12.4\nnpm ERR! npm  v2.10.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! tracklabs-angular-client@0.0.1 start: `.\nnpm ERR! ode_modules/http-server/bin/http-server`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the tracklabs-angular-client@0.0.1 start script '.\nnpm ERR! ode_modules/http-server/bin/http-server'.\nnpm ERR! This is most likely a problem with the tracklabs-angular-client package\n,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     .\nnpm ERR! ode_modules/http-server/bin/http-server\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls tracklabs-angular-client\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Pranay\\Cloned_FrontEnd\\npm-debug.log\n. And here is my http-server file\n\n#!/usr/bin/env node\n\nvar colors     = require('colors'),\n    httpServer = require('../lib/http-server'),\n    portfinder = require('portfinder'),\n    opener = require('opener'),\n    argv = require('optimist')\n      .boolean('cors')\n      .argv;\n\nif (argv.h || argv.help) {\n  console.log([\n    \"usage: http-server [path] [options]\",\n    \"\",\n    \"options:\",\n    \"  -p                 Port to use [8080]\",\n    \"  -a                 Address to use [0.0.0.0]\",\n    \"  -d                 Show directory listings [true]\",\n    \"  -i                 Display autoIndex [true]\",\n    \"  -e --ext           Default file extension if none supplied [none]\",\n    \"  -s --silent        Suppress log messages from output\",\n    \"  --cors             Enable CORS via the 'Access-Control-Allow-Origin' header\",\n    \"  -o [path]          Open browser window after starting the server\",\n    \"  -c                 Cache time (max-age) in seconds [3600], e.g. -c10 for 10 seconds.\",\n    \"                     To disable caching, use -c-1.\",\n    \"\",\n    \"  -P --proxy         Fallback proxy if the request cannot be resolved. e.g.: http://someurl.com\",\n    \"\",\n    \"  -S --ssl           Enable https.\",\n    \"  -C --cert          Path to ssl cert file (default: cert.pem).\",\n    \"  -K --key           Path to ssl key file (default: key.pem).\",\n    \"\",\n    \"  -r --robots        Respond to /robots.txt [User-agent: *\\nDisallow: /]\",\n    \"  -h --help          Print this list and exit.\"\n  ].join('\\n'));\n  process.exit();\n}\n\nvar port = argv.p || parseInt(process.env.PORT, 10),\n    host = argv.a || '0.0.0.0',\n    log = (argv.s || argv.silent) ? (function () {}) : console.log,\n    ssl = !!argv.S || !!argv.ssl,\n    proxy = argv.P || argv.proxy,\n    requestLogger;\n\nif (!argv.s && !argv.silent) {\n  requestLogger = function(req, res, error) {\n    var date = (new Date).toUTCString();\n    if (error) {\n      log('[%s] \"%s %s\" Error (%s): \"%s\"', date, req.method.red, req.url.red, error.status.toString().red, error.message.red);\n    } else {\n      log('[%s] \"%s %s\" \"%s\"', date, req.method.cyan, req.url.cyan, req.headers['user-agent']);\n    }\n  };\n}\n\nif (!port) {\n  portfinder.basePort = 8080;\n  portfinder.getPort(function (err, port) {\n    if (err) throw err;\n    listen(port);\n  });\n} else {\n  listen(port);\n}\n\nfunction listen(port) {\n  var options = {\n    root: argv._[0],\n    cache: argv.c,\n    showDir: argv.d,\n    autoIndex: argv.i,\n    robots: argv.r || argv.robots,\n    ext: argv.e || argv.ext,\n    logFn: requestLogger,\n    proxy: proxy\n  };\n\n  if (argv.cors) {\n    options.cors = true;\n  }\n\n  if (ssl) {\n    options.https = {\n      cert: argv.C || argv.cert || 'cert.pem',\n      key: argv.K || argv.key || 'key.pem'\n    };\n  }\n\n  var server = httpServer.createServer(options);\n  server.listen(port, host, function () {\n    var canonicalHost = host === '0.0.0.0' ? '127.0.0.1' : host,\n        protocol      = ssl ? 'https:' : 'http:';\n\n```\nlog('Starting up http-server, serving '.yellow\n  + server.root.cyan\n  + (ssl ? (' through'.yellow + ' https'.cyan) : '')\n  + ' on: '.yellow\n  + (protocol + '//' + host + ':' + port).cyan);\n\nif (typeof proxy === 'string') {\n  log('Unhandled requests will be served from: ' + proxy);\n}\n\nlog('Hit CTRL-C to stop the server');\nif (argv.o) {\n  opener(\n    protocol + '//' + canonicalHost + ':' + port,\n    { command: argv.o !== true ? argv.o : null }\n  );\n}\n```\n\n  });\n}\n\nif (process.platform === 'win32') {\n  require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n  }).on('SIGINT', function () {\n    process.emit('SIGINT');\n  });\n}\n\nprocess.on('SIGINT', function() {\n  log('http-server stopped.'.red);\n  process.exit();\n});\n. It should not contain any issue, as this package.json working fine for ubuntu systems. I tried to do it in windows 8.1, hence it is showing error. I am doing it for the first time so can't see which compatability issue i am missing here. npm install has worked. This syntax error in the 'start' script is stranger. Can't see which '.' it is not able to recognize.\n. {\n  \"name\": \"tracklabs-angular-client\",\n  \"version\": \"0.0.1\",\n  \"description\": \"AngularJS based client for the truck and load management system\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \".\\node_modules/karma/bin/karma\",\n    \"start\": \".\\node_modules/http-server/bin/http-server\"\n  },\n  \"repository\": \"bitbucket:kamal083/angular-client.git\",\n  \"contributors\": [\n    {\n      \"name\": \"Kamal Mewada\",\n      \"email\": \"kamal.mewada.nitt@gmail.com\"\n    },\n    {\n      \"name\": \"Rishi Rajasekaran\",\n      \"email\": \"rajasekaran.rishi@gmail.com\"\n    },\n    {\n      \"name\": \"Siddarth Iyer\",\n      \"email\": \"mindstormer619@gmail.com\"\n    }\n  ],\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"angular-mocks\": \"^1.3.15\",\n    \"http-server\": \"^0.8.0\",\n    \"karma\": \"^0.12.32\",\n    \"karma-chrome-launcher\": \"^0.1.12\",\n    \"karma-jasmine\": \"^0.3.5\"\n  }\n}\n. I changed the \"\\\" in the 6th and 7th line to \"/\" after posting my query here. Hence the npm install ran successfully but them npm start created the problem. :( \n\nC:\\Pranay\\Cloned_FrontEnd>npm start\n\n> tracklabs-angular-client@0.0.1 start C:\\Pranay\\Cloned_FrontEnd\n> .\n> ode_modules/http-server/bin/http-server\n\n'.' is not recognized as an internal or external command,\noperable program or batch file.\n\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\Program Files\\nodejs\\\\node.exe\" \"C:\\Program Files\\nodejs\n\\node_modules\\npm\\bin\\npm-cli.js\" \"start\"\nnpm ERR! node v0.12.4\nnpm ERR! npm  v2.10.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! tracklabs-angular-client@0.0.1 start: `.\nnpm ERR! ode_modules/http-server/bin/http-server`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the tracklabs-angular-client@0.0.1 start script '.\nnpm ERR! ode_modules/http-server/bin/http-server'.\nnpm ERR! This is most likely a problem with the tracklabs-angular-client package\n,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     .\nnpm ERR! ode_modules/http-server/bin/http-server\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls tracklabs-angular-client\nnpm ERR! There is likely additional logging output above.\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Pranay\\Cloned_FrontEnd\\npm-debug.log\n. And here is my http-server file\n\n#!/usr/bin/env node\n\nvar colors     = require('colors'),\n    httpServer = require('../lib/http-server'),\n    portfinder = require('portfinder'),\n    opener = require('opener'),\n    argv = require('optimist')\n      .boolean('cors')\n      .argv;\n\nif (argv.h || argv.help) {\n  console.log([\n    \"usage: http-server [path] [options]\",\n    \"\",\n    \"options:\",\n    \"  -p                 Port to use [8080]\",\n    \"  -a                 Address to use [0.0.0.0]\",\n    \"  -d                 Show directory listings [true]\",\n    \"  -i                 Display autoIndex [true]\",\n    \"  -e --ext           Default file extension if none supplied [none]\",\n    \"  -s --silent        Suppress log messages from output\",\n    \"  --cors             Enable CORS via the 'Access-Control-Allow-Origin' header\",\n    \"  -o [path]          Open browser window after starting the server\",\n    \"  -c                 Cache time (max-age) in seconds [3600], e.g. -c10 for 10 seconds.\",\n    \"                     To disable caching, use -c-1.\",\n    \"\",\n    \"  -P --proxy         Fallback proxy if the request cannot be resolved. e.g.: http://someurl.com\",\n    \"\",\n    \"  -S --ssl           Enable https.\",\n    \"  -C --cert          Path to ssl cert file (default: cert.pem).\",\n    \"  -K --key           Path to ssl key file (default: key.pem).\",\n    \"\",\n    \"  -r --robots        Respond to /robots.txt [User-agent: *\\nDisallow: /]\",\n    \"  -h --help          Print this list and exit.\"\n  ].join('\\n'));\n  process.exit();\n}\n\nvar port = argv.p || parseInt(process.env.PORT, 10),\n    host = argv.a || '0.0.0.0',\n    log = (argv.s || argv.silent) ? (function () {}) : console.log,\n    ssl = !!argv.S || !!argv.ssl,\n    proxy = argv.P || argv.proxy,\n    requestLogger;\n\nif (!argv.s && !argv.silent) {\n  requestLogger = function(req, res, error) {\n    var date = (new Date).toUTCString();\n    if (error) {\n      log('[%s] \"%s %s\" Error (%s): \"%s\"', date, req.method.red, req.url.red, error.status.toString().red, error.message.red);\n    } else {\n      log('[%s] \"%s %s\" \"%s\"', date, req.method.cyan, req.url.cyan, req.headers['user-agent']);\n    }\n  };\n}\n\nif (!port) {\n  portfinder.basePort = 8080;\n  portfinder.getPort(function (err, port) {\n    if (err) throw err;\n    listen(port);\n  });\n} else {\n  listen(port);\n}\n\nfunction listen(port) {\n  var options = {\n    root: argv._[0],\n    cache: argv.c,\n    showDir: argv.d,\n    autoIndex: argv.i,\n    robots: argv.r || argv.robots,\n    ext: argv.e || argv.ext,\n    logFn: requestLogger,\n    proxy: proxy\n  };\n\n  if (argv.cors) {\n    options.cors = true;\n  }\n\n  if (ssl) {\n    options.https = {\n      cert: argv.C || argv.cert || 'cert.pem',\n      key: argv.K || argv.key || 'key.pem'\n    };\n  }\n\n  var server = httpServer.createServer(options);\n  server.listen(port, host, function () {\n    var canonicalHost = host === '0.0.0.0' ? '127.0.0.1' : host,\n        protocol      = ssl ? 'https:' : 'http:';\n\n```\nlog('Starting up http-server, serving '.yellow\n  + server.root.cyan\n  + (ssl ? (' through'.yellow + ' https'.cyan) : '')\n  + ' on: '.yellow\n  + (protocol + '//' + host + ':' + port).cyan);\n\nif (typeof proxy === 'string') {\n  log('Unhandled requests will be served from: ' + proxy);\n}\n\nlog('Hit CTRL-C to stop the server');\nif (argv.o) {\n  opener(\n    protocol + '//' + canonicalHost + ':' + port,\n    { command: argv.o !== true ? argv.o : null }\n  );\n}\n```\n\n  });\n}\n\nif (process.platform === 'win32') {\n  require('readline').createInterface({\n    input: process.stdin,\n    output: process.stdout\n  }).on('SIGINT', function () {\n    process.emit('SIGINT');\n  });\n}\n\nprocess.on('SIGINT', function() {\n  log('http-server stopped.'.red);\n  process.exit();\n});\n. It should not contain any issue, as this package.json working fine for ubuntu systems. I tried to do it in windows 8.1, hence it is showing error. I am doing it for the first time so can't see which compatability issue i am missing here. npm install has worked. This syntax error in the 'start' script is stranger. Can't see which '.' it is not able to recognize.\n. ",
    "pjv": "Perfect. Thanks!\n\nNow how about this deprecation warning (last one):\n\n`Transformers.markdown is deprecated, you must replace the :markdown jade filter, with :marked and install jstransformer-marked before you update to jade@2.0.0`\n. thanks all. no more deprecation warnings.\n. Perfect. Thanks!\n\nNow how about this deprecation warning (last one):\n\n`Transformers.markdown is deprecated, you must replace the :markdown jade filter, with :marked and install jstransformer-marked before you update to jade@2.0.0`\n. thanks all. no more deprecation warnings.\n. ",
    "danlin": "same here but with a fresh 3.2.1 project. i move down to 3.1.0 and all works as expected.\n. 3.2.2 Still have this bug.\nRunning in Production works.\nThe bug is based on this middeware https://github.com/samccone/infestor\nWithout content replacement all works fine.\n. @jenius i don't know how other systems handle transfer-encoding: chunked header. On my Mac OS X System with Safari i have broken connections on every Image file and other strange things happening like missing text.\n\nwith my infestor patch i have no issues anymore.\n. same here but with a fresh 3.2.1 project. i move down to 3.1.0 and all works as expected.\n. 3.2.2 Still have this bug.\nRunning in Production works.\nThe bug is based on this middeware https://github.com/samccone/infestor\nWithout content replacement all works fine.\n. @jenius i don't know how other systems handle transfer-encoding: chunked header. On my Mac OS X System with Safari i have broken connections on every Image file and other strange things happening like missing text.\n\nwith my infestor patch i have no issues anymore.\n. ",
    "jag20101": "^ Yup. Running into the same problem :/\n. ^ Yup. Running into the same problem :/\n. ",
    "CalvinLeGassick": "Am experiencing on 3.2.2, can confirm.\n. Am experiencing on 3.2.2, can confirm.\n. ",
    "terusus": "I cannot share the project with you but I can test out the patches myself.\n. I cannot share the project with you but I can test out the patches myself.\n. ",
    "molovo": "@jenius did you get anywhere with this? If you haven't I might take a look under the hood\n. Nice job. Certainly fixed the issues I was having with images.\n\nI did find one slight niggle though, which was introduced somewhere in this PR. When running `roots watch --no-open` the browser window still launches. Setting `open_browser: false` in app.coffee fails as well. Is this something that was dropped deliberately, or something that browsersync handles for us now. (If so, how?)\n. @jenius did you get anywhere with this? If you haven't I might take a look under the hood\n. Nice job. Certainly fixed the issues I was having with images.\n\nI did find one slight niggle though, which was introduced somewhere in this PR. When running `roots watch --no-open` the browser window still launches. Setting `open_browser: false` in app.coffee fails as well. Is this something that was dropped deliberately, or something that browsersync handles for us now. (If so, how?)\n. ",
    "Arshad3": "Update lollipop 5.1.1 resurrection 5.5.1 after root not complete root permission  how to plz help me \n. Update lollipop 5.1.1 resurrection 5.5.1 after root not complete root permission  how to plz help me \n. ",
    "SevereOverfl0w": "@jenius in light of the recent image issue, this seems required.\n\nGulp does this, lines of interest are:\nhttps://github.com/gulpjs/gulp/blob/v3.9.0/bin/gulp.js#L99 this compares the provided version from local, to the known global one.\n\nAs the CLI builds on liftoff, to build the \"modulePackage\" part of the environment, all that does is recursively look up from where it is for package.json, and require it: https://github.com/js-cli/js-liftoff/blob/0226211f1f260b87f9c829971b3f30322435c9c7/index.js#L89\n\nI imagine the place to hook for this is here: https://github.com/jenius/roots/blob/83dce34b86e3b061b7a43c8813a48eb98670538c/lib/cli/index.coffee#L46 but I have no idea if roots.base is accessible at this point, but I imagine a solution can be found.\n\nAlternatively, we could try switching to Liftoff to handle our CLI stuff.\n. Build failing due to manual call to `server.close` in a test: https://github.com/jenius/roots/blob/browsersync/test/cli.coffee#L187 should it be calling `obj.stop()` instead?\n\nAlso, the `stop` method should call `cb()` after `@bs.exit`\n. Well, we either change the docs or roots. I think the `--no-open` should stick, but should just set\n\n```\nbrowser:\n  open: false\n```\n. https://github.com/jenius/roots/pull/693 Now fixed\n. Now tested, safe to PR\n. @jenius in light of the recent image issue, this seems required.\n\nGulp does this, lines of interest are:\nhttps://github.com/gulpjs/gulp/blob/v3.9.0/bin/gulp.js#L99 this compares the provided version from local, to the known global one.\n\nAs the CLI builds on liftoff, to build the \"modulePackage\" part of the environment, all that does is recursively look up from where it is for package.json, and require it: https://github.com/js-cli/js-liftoff/blob/0226211f1f260b87f9c829971b3f30322435c9c7/index.js#L89\n\nI imagine the place to hook for this is here: https://github.com/jenius/roots/blob/83dce34b86e3b061b7a43c8813a48eb98670538c/lib/cli/index.coffee#L46 but I have no idea if roots.base is accessible at this point, but I imagine a solution can be found.\n\nAlternatively, we could try switching to Liftoff to handle our CLI stuff.\n. Build failing due to manual call to `server.close` in a test: https://github.com/jenius/roots/blob/browsersync/test/cli.coffee#L187 should it be calling `obj.stop()` instead?\n\nAlso, the `stop` method should call `cb()` after `@bs.exit`\n. Well, we either change the docs or roots. I think the `--no-open` should stick, but should just set\n\n```\nbrowser:\n  open: false\n```\n. https://github.com/jenius/roots/pull/693 Now fixed\n. Now tested, safe to PR\n. ",
    "kristianmandrup": "Thanks for the info. Makes perfect sense. My setup includes browser sync, so works just fine with live reload. Pretty standard these days... On top of that, I will use Roots.cx to generate Marko templates on the fly, so I need to teach Jade to understand specific Marko and Lasso templates via Pencil :o\nAll good :) super powerful combo!!!\n. Thanks for the info. Makes perfect sense. My setup includes browser sync, so works just fine with live reload. Pretty standard these days... On top of that, I will use Roots.cx to generate Marko templates on the fly, so I need to teach Jade to understand specific Marko and Lasso templates via Pencil :o\nAll good :) super powerful combo!!!\n. ",
    "markphillips100": "I was testing a production compile. Emulating what would happen when my\nsite is generated during a production deploy on Azure website.\nOn 18 Aug 2015 10:57 pm, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Hm, this is interesting. I can see why this has never been files before,\n> usually hash is used only in app.production.coffee for roots compile\n> commands, which are 1 shot and start fresh each time. Are you running hash:\n> true while in development?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/661#issuecomment-132198107.\n. I was testing a production compile. Emulating what would happen when my\nsite is generated during a production deploy on Azure website.\nOn 18 Aug 2015 10:57 pm, \"Jeff Escalante\" notifications@github.com wrote:\n\n> Hm, this is interesting. I can see why this has never been files before,\n> usually hash is used only in app.production.coffee for roots compile\n> commands, which are 1 shot and start fresh each time. Are you running hash:\n> true while in development?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/issues/661#issuecomment-132198107.\n. ",
    "shaekuronen": "Not sure if this is the same issue or not, my app.staging.coffee is\n\n```\nrecords = require 'roots-records'\nsass = require 'node-sass'\njs_pipeline = require 'js-pipeline'\n\nmodule.exports =\n\n    ignores: [\n        '**/_*/**/*', '**/_*', '**/layout.*',\n        'bower_components', 'bower_components/**/*',\n        'data', 'data/**/*',\n        '.gitignore', 'bower.json', 'readme.md',\n        'circle.yml', '.bowerrc', 'README.html',\n        'README.md'\n    ]\n\n    output: 'build'\n\n    debug: true\n\n    locals:\n        images_path: '/img',\n        css_path: '/css',\n        js_path: '/js'\n\n    server:\n        clean_urls: true\n\n    scss:\n        sourceMap: true\n        outFile: '/'\n\n    'coffee-script':\n        sourcemap: true\n\n    extensions: [\n        js_pipeline\n            manifest: \"assets/js/manifest.yml\"\n            out: 'js/main.js'\n            minify: true\n            hash: true\n    ]\n\n    jade:\n        pretty: true\n```\n\nwhen run `roots compile -e staging` everything works except file revving. The main.HASH.js file is in the build dir, but is not referenced correctly in the rendered html.\n\nThe contents of foot.jade are\n\n```\n!= js()\n```\n\nthis works just fine without hash option. But with hash option, the html is `<script src='js/main.js'></script>` instead of `<script src='js/main.HASH.js'></script>`\n\nTried removing the records require (which don't have configured yet anyway), but same behavior.\n\nCurrently using Roots 3.1.0 as per #655 there are some issues with latest release.\n. @declandewet Was not getting much from `roots watch --verbose`, hangs on `compiling...`\n. Not sure if this is the same issue or not, my app.staging.coffee is\n\n```\nrecords = require 'roots-records'\nsass = require 'node-sass'\njs_pipeline = require 'js-pipeline'\n\nmodule.exports =\n\n    ignores: [\n        '**/_*/**/*', '**/_*', '**/layout.*',\n        'bower_components', 'bower_components/**/*',\n        'data', 'data/**/*',\n        '.gitignore', 'bower.json', 'readme.md',\n        'circle.yml', '.bowerrc', 'README.html',\n        'README.md'\n    ]\n\n    output: 'build'\n\n    debug: true\n\n    locals:\n        images_path: '/img',\n        css_path: '/css',\n        js_path: '/js'\n\n    server:\n        clean_urls: true\n\n    scss:\n        sourceMap: true\n        outFile: '/'\n\n    'coffee-script':\n        sourcemap: true\n\n    extensions: [\n        js_pipeline\n            manifest: \"assets/js/manifest.yml\"\n            out: 'js/main.js'\n            minify: true\n            hash: true\n    ]\n\n    jade:\n        pretty: true\n```\n\nwhen run `roots compile -e staging` everything works except file revving. The main.HASH.js file is in the build dir, but is not referenced correctly in the rendered html.\n\nThe contents of foot.jade are\n\n```\n!= js()\n```\n\nthis works just fine without hash option. But with hash option, the html is `<script src='js/main.js'></script>` instead of `<script src='js/main.HASH.js'></script>`\n\nTried removing the records require (which don't have configured yet anyway), but same behavior.\n\nCurrently using Roots 3.1.0 as per #655 there are some issues with latest release.\n. @declandewet Was not getting much from `roots watch --verbose`, hangs on `compiling...`\n. ",
    "kiejo": "Are there any updates or workarounds for this issue? I'm using roots 4.0.1 and roots-records 0.5.1 and this issue is preventing me from using this in production. Would be great to have a fix or workaround for this.\n. Yes, this happens when I run `roots compile` using the following configuration. As I said this only happens in combination with roots-records.\n\n```\njs_pipeline(files: 'assets/js/**', out: 'js/build.js', minify: true, hash: true)\ncss_pipeline(files: 'assets/css/**', out: 'css/build.css', minify: true, hash: true)\n```\n\nThanks for looking into this. I'm deploying to Netlify now which offers its own postprocessing options, which I'm using for the generation of hashes now. This allows me to set the hash option in roots to false as a workaround for this issue.\n. Are there any updates or workarounds for this issue? I'm using roots 4.0.1 and roots-records 0.5.1 and this issue is preventing me from using this in production. Would be great to have a fix or workaround for this.\n. Yes, this happens when I run `roots compile` using the following configuration. As I said this only happens in combination with roots-records.\n\n```\njs_pipeline(files: 'assets/js/**', out: 'js/build.js', minify: true, hash: true)\ncss_pipeline(files: 'assets/css/**', out: 'css/build.css', minify: true, hash: true)\n```\n\nThanks for looking into this. I'm deploying to Netlify now which offers its own postprocessing options, which I'm using for the generation of hashes now. This allows me to set the hash option in roots to false as a workaround for this issue.\n. ",
    "davidmarquis": "I'm experiencing a very similar issue but with the use of the `roots-i18n` extension. \n\nIt's a very small site with only 2 pages. When I disable the `roots-i18n` extension, everything related to hashing works correctly. As soon as I enable the `roots-i18n` extension, the `.js` file reference in  `index.html` gets properly revved, but the reference on the other page (`business.html`) does not get revved.\n\nWorth noting that the issue seems to happen only with the last extension of either `js` or `css` listed in my array of extensions. If I put the `js_pipeline` after `css_pipeline`, the `.js` file does not get revved (hashed). If I put `css_pipeline` after `js_pipeline`, the `.css` file does not get revved (hashed).  \n\nThe `roots-i18n` extension creates new additional output files for each language... my gut feeling is that it appears to be some sort of concurrency issue because some files are properly revved and some not. Is it possible that when an extension uses the `write` compile hook to emit new output files, the rest of the processing is negatively affected from a concurrency standpoint?\n. It is quite simple, the relevant part seems to be this:\n\n```\ncompile_hooks() {\n      return { // TODO use async methods and return Promise\n\n        // Called for every view template\n        write: ({roots, file_options, content}) =>\n\n          // Start iterating over our languages (as defined by the list of langFiles)\n          // Return the translated content and the langFile path\n          this.langFiles.map(langFile => [\n            translate(content, langFile),\n            langFile\n          ]).map(([content, langFile]) => {\n            const p = file_options._path,\n                  dir = path.dirname(p),\n                  ext = path.extname(p),\n                  name = path.basename(p, ext),\n                  lang = getLang(langFile)\n\n            // Redirect Roots to write A FILE FOR EACH LANGUAGE, with 'en' as the default\n            return {\n              content,\n\n              // Old code, may be useful later:\n              //\n              // path: path.join('.', dir, `${name}.${lang}${ext}`),\n              // extension: `${lang}${ext}`\n\n              path: lang === 'en' ?\n                // Put English in the root output\n                path.join('.', dir, `${name}${ext}`) :\n                // And other languages in their subdirectories\n                path.join('.', lang, dir, `${name}${ext}`),\n\n              // Old code, may be useful later:\n              //\n              // path: path.join('.', dir, `${name}${ext}.${lang}`),\n              // extension: `${ext}.${lang}`.substr(1)\n            }\n          })\n      }\n    }\n```\n\nFor every language, the extension will create an object in the form `{path: ..., content: ...}` and return it. This seems to be in line with the description on Roots website: http://roots.cx/docs/extensions#write-hook\n\nNothing very esoteric... this observation combined with the other observations on the current issue seem to lead to something happening in Roots rather than in specific extensions. \n. I had a deeper look and I might have an idea of what's going on but still can't pinpoint where the exact origin would be.\n\nHere's what I think is happening... maybe this combined with your 'insider look' might help progress the issue.\n\nLooking at [the code](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee) of `roots-js-pipeline` (`roots-css-pipeline` probably works very similarly), it is clear that the extension is applied while processing _on source scripts_ (`.js` files)... \n\nThe bulk of the pipeline's processing when using minification and hashing is done [in `category_hooks`](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L80)\n\nAfter combination and minification (a relatively lengthy process) the new file name is computed to add the MD5 hash. Only then is [`opts.out`'s value altered](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L96). \n\nI believe the issue lies in the fact that the [js() method](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L47) that is made available to templates reads the `opts.out` too early in the process, maybe because views are rendered before the `roots-js-pipeline` extension has finished running.\n\nNow the issue seems to show up only when we add specific extensions. These extensions are all extensions that seem to fiddle with views (`roots-i18n`, `roots-contentful`, etc.)... would using extensions that modify views allow the views to render _before_ the CSS/JS pipelines have finished their lengthy process?\n. Reading the documentation of the `process_files` method in `compile.coffee` ([link](https://github.com/jescalan/roots/blob/master/lib/api/compile.coffee#L173)) it _seems_ that maybe a possible way to make all this work is to have `roots-js-pipeline` and `roots-css-pipeline` return `ordered: true` in their fs() methods?\n\nThat would break the benefits of parallel processing for simple cases so maybe their respective `fs()` implementations could inspect the user configuration, if `hash` is true, then they might return `true` for `ordered`... but that would arguably make things a little cryptic for future readers of that code.\n\nI'll try to experiment with this avenue and report back...\n. OK I had consistent success with returning `ordered: true` in the `fs()` function of the `roots-i18n` extension. I'll probably fork that project and tweak it for now because I need to ship...\n\nBut I fear that the issue at hand might be uncovering somewhat of a design flaw in the way Roots processes files in parallel... Let me know your thoughts!\n. Ah crap, had I known that spike existed I would've used it for my project!  :) I'll have a look...\n\nHappy to help!\n. I'm experiencing a very similar issue but with the use of the `roots-i18n` extension. \n\nIt's a very small site with only 2 pages. When I disable the `roots-i18n` extension, everything related to hashing works correctly. As soon as I enable the `roots-i18n` extension, the `.js` file reference in  `index.html` gets properly revved, but the reference on the other page (`business.html`) does not get revved.\n\nWorth noting that the issue seems to happen only with the last extension of either `js` or `css` listed in my array of extensions. If I put the `js_pipeline` after `css_pipeline`, the `.js` file does not get revved (hashed). If I put `css_pipeline` after `js_pipeline`, the `.css` file does not get revved (hashed).  \n\nThe `roots-i18n` extension creates new additional output files for each language... my gut feeling is that it appears to be some sort of concurrency issue because some files are properly revved and some not. Is it possible that when an extension uses the `write` compile hook to emit new output files, the rest of the processing is negatively affected from a concurrency standpoint?\n. It is quite simple, the relevant part seems to be this:\n\n```\ncompile_hooks() {\n      return { // TODO use async methods and return Promise\n\n        // Called for every view template\n        write: ({roots, file_options, content}) =>\n\n          // Start iterating over our languages (as defined by the list of langFiles)\n          // Return the translated content and the langFile path\n          this.langFiles.map(langFile => [\n            translate(content, langFile),\n            langFile\n          ]).map(([content, langFile]) => {\n            const p = file_options._path,\n                  dir = path.dirname(p),\n                  ext = path.extname(p),\n                  name = path.basename(p, ext),\n                  lang = getLang(langFile)\n\n            // Redirect Roots to write A FILE FOR EACH LANGUAGE, with 'en' as the default\n            return {\n              content,\n\n              // Old code, may be useful later:\n              //\n              // path: path.join('.', dir, `${name}.${lang}${ext}`),\n              // extension: `${lang}${ext}`\n\n              path: lang === 'en' ?\n                // Put English in the root output\n                path.join('.', dir, `${name}${ext}`) :\n                // And other languages in their subdirectories\n                path.join('.', lang, dir, `${name}${ext}`),\n\n              // Old code, may be useful later:\n              //\n              // path: path.join('.', dir, `${name}${ext}.${lang}`),\n              // extension: `${ext}.${lang}`.substr(1)\n            }\n          })\n      }\n    }\n```\n\nFor every language, the extension will create an object in the form `{path: ..., content: ...}` and return it. This seems to be in line with the description on Roots website: http://roots.cx/docs/extensions#write-hook\n\nNothing very esoteric... this observation combined with the other observations on the current issue seem to lead to something happening in Roots rather than in specific extensions. \n. I had a deeper look and I might have an idea of what's going on but still can't pinpoint where the exact origin would be.\n\nHere's what I think is happening... maybe this combined with your 'insider look' might help progress the issue.\n\nLooking at [the code](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee) of `roots-js-pipeline` (`roots-css-pipeline` probably works very similarly), it is clear that the extension is applied while processing _on source scripts_ (`.js` files)... \n\nThe bulk of the pipeline's processing when using minification and hashing is done [in `category_hooks`](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L80)\n\nAfter combination and minification (a relatively lengthy process) the new file name is computed to add the MD5 hash. Only then is [`opts.out`'s value altered](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L96). \n\nI believe the issue lies in the fact that the [js() method](https://github.com/carrot/roots-js-pipeline/blob/master/lib/index.coffee#L47) that is made available to templates reads the `opts.out` too early in the process, maybe because views are rendered before the `roots-js-pipeline` extension has finished running.\n\nNow the issue seems to show up only when we add specific extensions. These extensions are all extensions that seem to fiddle with views (`roots-i18n`, `roots-contentful`, etc.)... would using extensions that modify views allow the views to render _before_ the CSS/JS pipelines have finished their lengthy process?\n. Reading the documentation of the `process_files` method in `compile.coffee` ([link](https://github.com/jescalan/roots/blob/master/lib/api/compile.coffee#L173)) it _seems_ that maybe a possible way to make all this work is to have `roots-js-pipeline` and `roots-css-pipeline` return `ordered: true` in their fs() methods?\n\nThat would break the benefits of parallel processing for simple cases so maybe their respective `fs()` implementations could inspect the user configuration, if `hash` is true, then they might return `true` for `ordered`... but that would arguably make things a little cryptic for future readers of that code.\n\nI'll try to experiment with this avenue and report back...\n. OK I had consistent success with returning `ordered: true` in the `fs()` function of the `roots-i18n` extension. I'll probably fork that project and tweak it for now because I need to ship...\n\nBut I fear that the issue at hand might be uncovering somewhat of a design flaw in the way Roots processes files in parallel... Let me know your thoughts!\n. Ah crap, had I known that spike existed I would've used it for my project!  :) I'll have a look...\n\nHappy to help!\n. ",
    "knupska": "That's excellent, thanks for taking a look.\n\nI noticed that the `roots-records` extension also appears to adjust the `roots.config.locals` global state when building single views too, so this little tweak is almost certainly not the solution for preventing collisions in the wider extension ecosystem.\n. As far as I'm aware there wouldn't have to be any reference to `filename` in roots-contentful.\n\nIt's likely roots-contentful is just passing the `roots.config.locals` object down to Jade.\n\nThe `filename` value is currently getting mutated into the `roots.config.locals` object within roots itself, and it's within Jade where it then presents as an error.\n\nTo fix it on the plugin side, you would likely need to sanitize the collision causing values from the config object that is being passed down to Jade.\n. That's excellent, thanks for taking a look.\n\nI noticed that the `roots-records` extension also appears to adjust the `roots.config.locals` global state when building single views too, so this little tweak is almost certainly not the solution for preventing collisions in the wider extension ecosystem.\n. As far as I'm aware there wouldn't have to be any reference to `filename` in roots-contentful.\n\nIt's likely roots-contentful is just passing the `roots.config.locals` object down to Jade.\n\nThe `filename` value is currently getting mutated into the `roots.config.locals` object within roots itself, and it's within Jade where it then presents as an error.\n\nTo fix it on the plugin side, you would likely need to sanitize the collision causing values from the config object that is being passed down to Jade.\n. ",
    "joeyjoejoejr": "This PR fixes the Jade issue on roots-contentful.  I know there might be more to do, let me know if I can help.\n. So,  I'm having this issue with roots-contentful.  It seems that roots-records may be fixed for this already... I was just having trouble tracking down exactly what I could change on the roots-contentful side to fix this.  Right now, I'm running on a patched version or roots.\n. Yeah, I looked for that, and a project search of roots-contentful shows no results for `filename`\n\nhttps://github.com/carrot/roots-contentful/search?utf8=%E2%9C%93&q=filename\n\nIt must be somewhat more indirect than that.\n. @knupska That makes sense.\n. Woo!  I can get back on master!\n\nOn Wed, Oct 28, 2015 at 6:11 PM, Kyle MacDonald notifications@github.com\nwrote:\n\n> great stuff. this helps out on a few projects now too. thanks a ton\n> @knupska https://github.com/knupska !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/662#issuecomment-152013525.\n. This is related to #662 \n. You can try running a patched version of roots.  That's what I had to do in the meantime.\n. This PR fixes the Jade issue on roots-contentful.  I know there might be more to do, let me know if I can help.\n. So,  I'm having this issue with roots-contentful.  It seems that roots-records may be fixed for this already... I was just having trouble tracking down exactly what I could change on the roots-contentful side to fix this.  Right now, I'm running on a patched version or roots.\n. Yeah, I looked for that, and a project search of roots-contentful shows no results for `filename`\n\nhttps://github.com/carrot/roots-contentful/search?utf8=%E2%9C%93&q=filename\n\nIt must be somewhat more indirect than that.\n. @knupska That makes sense.\n. Woo!  I can get back on master!\n\nOn Wed, Oct 28, 2015 at 6:11 PM, Kyle MacDonald notifications@github.com\nwrote:\n\n> great stuff. this helps out on a few projects now too. thanks a ton\n> @knupska https://github.com/knupska !\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenius/roots/pull/662#issuecomment-152013525.\n. This is related to #662 \n. You can try running a patched version of roots.  That's what I had to do in the meantime.\n. ",
    "signorekai": "This issue is actually still happening for me; except it was looking for a layout.jade for my images rather than my json.\n. This issue is actually still happening for me; except it was looking for a layout.jade for my images rather than my json.\n. ",
    "sospedra": "Works like a charm, thanks @Leeds-eBooks \nBtw @jenius , I've notice that only happen when `watch` not with `compile`. Maybe this is some important info. You can close.\n. :( @jenius \n. I understand. Don't worry I just wanted to confirm that you're busy. I'll try find some help in the gitter as you've pointed. Thank you anyway.\n. I'm not sure if something of the implementation changed with this new release but it has some very bad issues (e.g.: #654)\nI'd recommend you to rollback to 3.1.0 (`npm i roots@3.1.0 -g`) and stay in there since the 3.2.0 became more stable. Anyway, you could wait for @jenius to shed some light.\n. @Leeds-eBooks thanks for take the time on this reply. I already have the 3.1.0 because another trouble that I had. Also, I've tried right now to reinstall the whole roots from `npm global` and still broke.\nDo you think my version of node could affect? Which one is the more stable? I'm currently working over 2.0.0.\n\nAbout the other topic, I agree with you in the feeling about the future of Roots. That's because we jump into this framework and not Harp which was the other option in the final round. But I still thinking that lacks of some core contributors. But, of course, this is my humble opinion. As a single developer what I can promise is that when I have enough time I'll PR some bugs that I've found; alike some devflow improvements.\n. I've found the trouble. Isn't roots breaking completely. It is that if I have any kind of mistake in the Javascript `roots` doesn't output me the error logs. It just stay compiling for eternity. Weird. \n. `roots-browserify` for the compiler\nInside the app, mainly `react` and `superagent`\n. Tomorrow is holidays at my city. I'll check the internal pipe compiler of `roots`. It has worked before so somewhat something has broken. I'll figure how to fix it. Really thankful for you help @Leeds-eBooks I'll let this issue opened waiting for the PR \n. I've issolated the problem on `roots-browserify`\n\nWe're moving here: https://github.com/carrot/roots-browserify/issues/26\n. Works like a charm, thanks @Leeds-eBooks \nBtw @jenius , I've notice that only happen when `watch` not with `compile`. Maybe this is some important info. You can close.\n. :( @jenius \n. I understand. Don't worry I just wanted to confirm that you're busy. I'll try find some help in the gitter as you've pointed. Thank you anyway.\n. I'm not sure if something of the implementation changed with this new release but it has some very bad issues (e.g.: #654)\nI'd recommend you to rollback to 3.1.0 (`npm i roots@3.1.0 -g`) and stay in there since the 3.2.0 became more stable. Anyway, you could wait for @jenius to shed some light.\n. @Leeds-eBooks thanks for take the time on this reply. I already have the 3.1.0 because another trouble that I had. Also, I've tried right now to reinstall the whole roots from `npm global` and still broke.\nDo you think my version of node could affect? Which one is the more stable? I'm currently working over 2.0.0.\n\nAbout the other topic, I agree with you in the feeling about the future of Roots. That's because we jump into this framework and not Harp which was the other option in the final round. But I still thinking that lacks of some core contributors. But, of course, this is my humble opinion. As a single developer what I can promise is that when I have enough time I'll PR some bugs that I've found; alike some devflow improvements.\n. I've found the trouble. Isn't roots breaking completely. It is that if I have any kind of mistake in the Javascript `roots` doesn't output me the error logs. It just stay compiling for eternity. Weird. \n. `roots-browserify` for the compiler\nInside the app, mainly `react` and `superagent`\n. Tomorrow is holidays at my city. I'll check the internal pipe compiler of `roots`. It has worked before so somewhat something has broken. I'll figure how to fix it. Really thankful for you help @Leeds-eBooks I'll let this issue opened waiting for the PR \n. I've issolated the problem on `roots-browserify`\n\nWe're moving here: https://github.com/carrot/roots-browserify/issues/26\n. ",
    "danielforsberg": "Thanks for the tip with the rollback, but wierdly I still get the same result. (Since I already was on `3.1.0` I rolled back to `3.0.0`).\n. Thanks @brewingcode - This resolved the issue\n. Thanks for the tip with the rollback, but wierdly I still get the same result. (Since I already was on `3.1.0` I rolled back to `3.0.0`).\n. Thanks @brewingcode - This resolved the issue\n. ",
    "johnpeele": "+1\n\nI am getting this same issue. I am on `3.1.0` as well.\n. +1\n\nI am getting this same issue. I am on `3.1.0` as well.\n. ",
    "brewingcode": "This is fixed in commit carrot/roots-css-pipeline@5c588a8b9b23b292f54c7fd89037dd92e127eaf0 (included in v0.3.0 of css-pipeline), so I've found it easiest to just use `0.3.x`  as my css-pipeline in my package.json:\n\n``` json\n    \"coffee-script\": \"1.9.x\",\n    \"css-pipeline\": \"0.3.x\",\n    \"jade\": \"1.x\",\n```\n\nThis produces properly minified css.\n. This is fixed in commit carrot/roots-css-pipeline@5c588a8b9b23b292f54c7fd89037dd92e127eaf0 (included in v0.3.0 of css-pipeline), so I've found it easiest to just use `0.3.x`  as my css-pipeline in my package.json:\n\n``` json\n    \"coffee-script\": \"1.9.x\",\n    \"css-pipeline\": \"0.3.x\",\n    \"jade\": \"1.x\",\n```\n\nThis produces properly minified css.\n. ",
    "tiktuk": "Sounds good, thanks for working on it, @jenius :) .\n. Sounds good, thanks for working on it, @jenius :) .\n. ",
    "prasutagus": "Yes, it's a bug previously reported. Read back a few issues.\n. Yes, it's a bug previously reported. Read back a few issues.\n. ",
    "michaelkornblum": "Here are the steps I went through to get it to work.\n\n**Install npm depenencies** \nThe ones you want to look at are accord, postcss version 4, and lost. From the command line, enter:\n\n```\n  npm install --save accord postcss@4 lost\n```\n\n**Modify the app.coffee file**\n\nAt the top of the app.coffee file you will want to add these variables.\n\n```\n  accord = require 'accord'\n  postcss = accord.load 'postcss'\n  lost = require 'lost'\n```\n\nNext, you'll want to add the postcss configuration to the bottom of your app.coffee file.  These two lines of code should do the trick.\n\n```\n  postcss:\n    use: [lost()]\n```\n\n**Change css file extension names.**\nIf you're using stylus along with postcss, you'll need to change the file names of all the files living in your assets/css directory from `<filename>.sty`l to `<filename>.css.styl.` If you're not using stylus just change the filenames from `<filename>.styl` to `<filename>.css.`\n\n**Go forth and merrily postprocess :)**\n. Here are the steps I went through to get it to work.\n\n**Install npm depenencies** \nThe ones you want to look at are accord, postcss version 4, and lost. From the command line, enter:\n\n```\n  npm install --save accord postcss@4 lost\n```\n\n**Modify the app.coffee file**\n\nAt the top of the app.coffee file you will want to add these variables.\n\n```\n  accord = require 'accord'\n  postcss = accord.load 'postcss'\n  lost = require 'lost'\n```\n\nNext, you'll want to add the postcss configuration to the bottom of your app.coffee file.  These two lines of code should do the trick.\n\n```\n  postcss:\n    use: [lost()]\n```\n\n**Change css file extension names.**\nIf you're using stylus along with postcss, you'll need to change the file names of all the files living in your assets/css directory from `<filename>.sty`l to `<filename>.css.styl.` If you're not using stylus just change the filenames from `<filename>.styl` to `<filename>.css.`\n\n**Go forth and merrily postprocess :)**\n. ",
    "AleksejDix": "thx worked like a charm, i forgot accord.\nbut i still have problems it compiles the files when i touch them and it should compile them only when i save\n. thx worked like a charm, i forgot accord.\nbut i still have problems it compiles the files when i touch them and it should compile them only when i save\n. ",
    "i8ramin": "works like a charm, thanks!\n. tried passing in a -e production to it as well, but no difference. \n. My knowledge of the testing framework is non-existent and I am not sure how to write the proper test for this. Could use some help there.\n. works like a charm, thanks!\n. tried passing in a -e production to it as well, but no difference. \n. My knowledge of the testing framework is non-existent and I am not sure how to write the proper test for this. Could use some help there.\n. ",
    "ryanAbbott": "Done. Thanks for the quick the response.\n. Done. Thanks for the quick the response.\n. ",
    "FaizShah": "Any update on the dependency graph issue?\n. @jenius Great, thanks for the info. Good luck with v4!\n. Any update on the dependency graph issue?\n. @jenius Great, thanks for the info. Good luck with v4!\n. ",
    "pattyok": "For anyone coming across the postinstall.js error. Update npm to the latest stable version and you should be good to go. \n. For anyone coming across the postinstall.js error. Update npm to the latest stable version and you should be good to go. \n. ",
    "kyotoprotokollet": "I was on MacOS 10.9.5. Anyway, updating Node & NPM seems to have fixed this for me.\n. I was on MacOS 10.9.5. Anyway, updating Node & NPM seems to have fixed this for me.\n. ",
    "pauljakobwhite": "This is incredible, thank you!\n. Thanks @jenius, this works great in returning the file name, and I tried playing around with it to do the following, but with no success:\n\nBasically, I would like to use a function similar to this to expose some json data located elsewhere to that particular page, i.e.:\n\nLets say we are working with `index.html`\n\nThe function you provided, (slightly modified):\n\n``` coffeescript\nlocals:\n  source: (p) -> p.match(/\\/(\\w+)\\.html$/)[1]\n```\n\nwould return `index`, I would then like to take that result and use it to pull in data from `records.data` containing something like the following:\n\n``` json\n\"index\" : {\n  \"title\" :  \"Home\",\n  \"anything\" : \"else\"\n}\n```\n\nso in theory, the data would be coming from `records.data.**locals.source**.title`\n\nI'm having trouble achieving this, but in the end I would like to have something like the following:\n\n``` coffeescript\nlocals:\n  source: (p) -> p.match(/\\/(\\w+)\\.html$/)[1],\n  page: function that grabs any json data from records.data with the key matching \"source\" in locals\n```\n\nand in this way I could reference in my jade layouts `#{page.***}` to grab the title or any other data I've included.\n\nI apologize I'm using your github issues when these questions may be more appropriate for stackoverflow, but I haven't had any success on SO with this functionality specific to roots. \n\nThank you again for your help!\n. My goodness I was so close, I had just written it wrong in jade, I think I had something like:\n\n `#{records.data.{source(_path)}.title}` ... using braces instead of brackets lol ...\n\nThanks again for your help, all is working!\n. This is incredible, thank you!\n. Thanks @jenius, this works great in returning the file name, and I tried playing around with it to do the following, but with no success:\n\nBasically, I would like to use a function similar to this to expose some json data located elsewhere to that particular page, i.e.:\n\nLets say we are working with `index.html`\n\nThe function you provided, (slightly modified):\n\n``` coffeescript\nlocals:\n  source: (p) -> p.match(/\\/(\\w+)\\.html$/)[1]\n```\n\nwould return `index`, I would then like to take that result and use it to pull in data from `records.data` containing something like the following:\n\n``` json\n\"index\" : {\n  \"title\" :  \"Home\",\n  \"anything\" : \"else\"\n}\n```\n\nso in theory, the data would be coming from `records.data.**locals.source**.title`\n\nI'm having trouble achieving this, but in the end I would like to have something like the following:\n\n``` coffeescript\nlocals:\n  source: (p) -> p.match(/\\/(\\w+)\\.html$/)[1],\n  page: function that grabs any json data from records.data with the key matching \"source\" in locals\n```\n\nand in this way I could reference in my jade layouts `#{page.***}` to grab the title or any other data I've included.\n\nI apologize I'm using your github issues when these questions may be more appropriate for stackoverflow, but I haven't had any success on SO with this functionality specific to roots. \n\nThank you again for your help!\n. My goodness I was so close, I had just written it wrong in jade, I think I had something like:\n\n `#{records.data.{source(_path)}.title}` ... using braces instead of brackets lol ...\n\nThanks again for your help, all is working!\n. ",
    "desiredpersona": "Hey Jeff, appreciate the reply. Ok i understand you are busy. Id love to but i don't have the code skills\n. I can use the terminal etc but wouldn't be able to write the plugin myself. Wondering if you could add something to roots website to attract developers interest?\n\nI realise your company wouldn't have use for such a plugin and therefore it wouldn't be a priority \n. Thanks for your help Jeff :smiley: I decided to use Jekyll and write my posts with iA Writer.\n. Hey Jeff, appreciate the reply. Ok i understand you are busy. Id love to but i don't have the code skills\n. I can use the terminal etc but wouldn't be able to write the plugin myself. Wondering if you could add something to roots website to attract developers interest?\n\nI realise your company wouldn't have use for such a plugin and therefore it wouldn't be a priority \n. Thanks for your help Jeff :smiley: I decided to use Jekyll and write my posts with iA Writer.\n. ",
    "orenmizr": "platform: windows 10\n\ni have been using some of the extensions - some were failing for different reasons. roots-collection had mac only path for example. \n\ni want to be able to run roots in debug mode - having the ability to break inside the extensions and figure out what is wrong. \n\nI can't seem to do it since i am not running \"node script.js\" but a \"root watch\" command. \n\nwhen trying to setup webstorm debug node engine or iron-node to run roots - it fails on syntax. i am sure there is an easy way to setup. not sure what it is.\n. i have been using console logs and i have been in contact with authors of extension. that is still being half blind. \n\ni figured since you are the main developer you have a good setup. nevermind.\n. i absolutely did not mean to offend, honestly. you've build something that is beautifully balanced between flexibility and simplicity. the fact you say you did it without the ability to pause execution and debug is admirable. I assumed that wasn't the case since you've written most of the code, hence my question. \n\ni personally need a debug tool. i feel it makes me personally more productive. but that is subjective.  \n\nbtw.\ni did try directing iron-node and intelij to what i thought were the files. but it did not work for me. i do know it is not a roots question per-say :) hashtag shotinthedark\n\nthanks.\n. platform: windows 10\n\ni have been using some of the extensions - some were failing for different reasons. roots-collection had mac only path for example. \n\ni want to be able to run roots in debug mode - having the ability to break inside the extensions and figure out what is wrong. \n\nI can't seem to do it since i am not running \"node script.js\" but a \"root watch\" command. \n\nwhen trying to setup webstorm debug node engine or iron-node to run roots - it fails on syntax. i am sure there is an easy way to setup. not sure what it is.\n. i have been using console logs and i have been in contact with authors of extension. that is still being half blind. \n\ni figured since you are the main developer you have a good setup. nevermind.\n. i absolutely did not mean to offend, honestly. you've build something that is beautifully balanced between flexibility and simplicity. the fact you say you did it without the ability to pause execution and debug is admirable. I assumed that wasn't the case since you've written most of the code, hence my question. \n\ni personally need a debug tool. i feel it makes me personally more productive. but that is subjective.  \n\nbtw.\ni did try directing iron-node and intelij to what i thought were the files. but it did not work for me. i do know it is not a roots question per-say :) hashtag shotinthedark\n\nthanks.\n. ",
    "smuemd": "Thank You @jenius. Very helpful!\n. Thank You @jenius. Very helpful!\n. ",
    "cassianomon": "Yes, if I ctrl-c it gets alright\n. Oh, I am sorry Jeff, you can tag this as spam, I am gonna edit the Issue\n. I had the same error on Mac and also on Linux, it was not just with roots, when I was installing Gulp it happened too, type this on terminal, it worked for me:\n\n`npm config set prefix '~/.npm-packages'`\n\nand adding $HOME/.npm-packages/bin to $PATH\n\n`export PATH=\"$PATH:$HOME/.npm-packages/bin\"`\n. If it doesn't work, check this: https://github.com/jescalan/roots/issues/725\n. Yes, if I ctrl-c it gets alright\n. Oh, I am sorry Jeff, you can tag this as spam, I am gonna edit the Issue\n. I had the same error on Mac and also on Linux, it was not just with roots, when I was installing Gulp it happened too, type this on terminal, it worked for me:\n\n`npm config set prefix '~/.npm-packages'`\n\nand adding $HOME/.npm-packages/bin to $PATH\n\n`export PATH=\"$PATH:$HOME/.npm-packages/bin\"`\n. If it doesn't work, check this: https://github.com/jescalan/roots/issues/725\n. ",
    "Alx-l": "Thx @jenius :)\n. Thx @jenius :)\n. ",
    "newswim": "I talked to someone at Github recently, and confirmed that there have been some changes regarding the rate and file size of deployments. Being that Ship pushes up the entire directory, projects deploying to gh-pages will need to keep a careful eye on the size of their projects.\n\nHopefully, a future version might see some diffing going on so that only changes to files get pushed. Until then, I just have to be really careful about the size of my assets.\n\nIn the mean time, you can always use something like Netlify, which doesn't have a strict of restrictions (and still lets you deploy stuff for free).\n. I talked to someone at Github recently, and confirmed that there have been some changes regarding the rate and file size of deployments. Being that Ship pushes up the entire directory, projects deploying to gh-pages will need to keep a careful eye on the size of their projects.\n\nHopefully, a future version might see some diffing going on so that only changes to files get pushed. Until then, I just have to be really careful about the size of my assets.\n\nIn the mean time, you can always use something like Netlify, which doesn't have a strict of restrictions (and still lets you deploy stuff for free).\n. ",
    "gristel": "I'm afraid I'm too noobish in this matter to try and attempt that :(\nBut maybe somebody reading this might have some ideas :)\n. I'm afraid I'm too noobish in this matter to try and attempt that :(\nBut maybe somebody reading this might have some ideas :)\n. ",
    "adamkiss": "I could try, but I am really just dabbling with node :) Gimme a sec\n. I could try, but I am really just dabbling with node :) Gimme a sec\n. ",
    "EnMod": "Don't mean to butt in, but would either of you like to share your Roots/Vue.js setup?  I'm learning Vue now and am curious as to the optimal setup with Roots.\n. Ah ok, was making sure there weren't any crazy caveats.  Given that roots-mini will be using a Webpack core, I'm assuming Vue single file components might be usable within that ecosystem?\n. Ah I see!  Looks like I need to step it up :+1: \n. Very cool! Now if only I could understand why it is throwing this `Webpack failed to add entry for` error on my files...\n. Don't mean to butt in, but would either of you like to share your Roots/Vue.js setup?  I'm learning Vue now and am curious as to the optimal setup with Roots.\n. Ah ok, was making sure there weren't any crazy caveats.  Given that roots-mini will be using a Webpack core, I'm assuming Vue single file components might be usable within that ecosystem?\n. Ah I see!  Looks like I need to step it up :+1: \n. Very cool! Now if only I could understand why it is throwing this `Webpack failed to add entry for` error on my files...\n. ",
    "axelboc": "Wow, thanks!\n\n`dump_dirs` makes a lot more sense to me now; the concrete example you gave did the trick: `assets/css/index.css` gets compiled to `public/css/index.css` instead of `public/assets/css/index.css`. Also, glad to hear that the watcher's ignores are now separate - it's a shame that the documentation is not up to date, though!\n\nHere are a couple of follow-up questions:\n- I had a look at `roots/config.coffee` and was wondering why `node_modules` is not ignored by default (it's in `watcher_ignores` but not in `ignores`). How does Roots know not to process the folder?\n- You mentioned that partials are ignored by default. Is this still true? If I remove the globs `views/**/_*` and `assets/css/_*` from my own config, Roots compiles them. I think it's good if they're not ignored, by the way, as I have a file that starts with an underscore in the assets folder which I want copied to the output folder, so if `**/_*`  were ignored, that file wouldn't get copied.\n\nRegarding the fact that files have to be ignored in order for them not to be compiled/copied into the output folder; I can't help but wonder whether the other way around would make more sense (i.e. telling Roots which files to process), especially now that the watcher is completely independent.\n\nAnyway, thanks to your clarifications, I was able to fix a few bugs in my configuration. Unfortunately, I'm still facing an infinite compile loop when I run `roots watch`. :cry: Is there a way to see which files the watcher thinks have changed. I tried the `debug` and `verbose` options, but nothing more gets logged to the console; just `compiling... done` over and over again. (Any reason why these options don't work by the way? It'd be so awesome if they printed which files Roots compiles and with which compilers! It'd be really helpful for debugging the config and understanding Roots' internals.)\n. It makes sense, thanks for clarifying all this! I'll take a look at the `verbose` option as you suggest, and try to debug the watcher issue. I've got my config under control now and I understand it, which is awesome! Thanks for your help.\n. Yeah me too, thanks for merging it in! :smile: \n. Wow, thanks!\n\n`dump_dirs` makes a lot more sense to me now; the concrete example you gave did the trick: `assets/css/index.css` gets compiled to `public/css/index.css` instead of `public/assets/css/index.css`. Also, glad to hear that the watcher's ignores are now separate - it's a shame that the documentation is not up to date, though!\n\nHere are a couple of follow-up questions:\n- I had a look at `roots/config.coffee` and was wondering why `node_modules` is not ignored by default (it's in `watcher_ignores` but not in `ignores`). How does Roots know not to process the folder?\n- You mentioned that partials are ignored by default. Is this still true? If I remove the globs `views/**/_*` and `assets/css/_*` from my own config, Roots compiles them. I think it's good if they're not ignored, by the way, as I have a file that starts with an underscore in the assets folder which I want copied to the output folder, so if `**/_*`  were ignored, that file wouldn't get copied.\n\nRegarding the fact that files have to be ignored in order for them not to be compiled/copied into the output folder; I can't help but wonder whether the other way around would make more sense (i.e. telling Roots which files to process), especially now that the watcher is completely independent.\n\nAnyway, thanks to your clarifications, I was able to fix a few bugs in my configuration. Unfortunately, I'm still facing an infinite compile loop when I run `roots watch`. :cry: Is there a way to see which files the watcher thinks have changed. I tried the `debug` and `verbose` options, but nothing more gets logged to the console; just `compiling... done` over and over again. (Any reason why these options don't work by the way? It'd be so awesome if they printed which files Roots compiles and with which compilers! It'd be really helpful for debugging the config and understanding Roots' internals.)\n. It makes sense, thanks for clarifying all this! I'll take a look at the `verbose` option as you suggest, and try to debug the watcher issue. I've got my config under control now and I understand it, which is awesome! Thanks for your help.\n. Yeah me too, thanks for merging it in! :smile: \n. ",
    "felixnielsen": "So Roots is getting \"put on ice\"?\n. The rules makes sense. The file in question is a file from an external library managed through bower. So I am not able to change the name of the file without losing consistency.\nIt is bad naming convention from the library supplier, but it is quite common (also there is no file without the extra dot in the package)\n\n`forceCopy` would work as external lib files usually does not need to be compiled.\n. So Roots is getting \"put on ice\"?\n. The rules makes sense. The file in question is a file from an external library managed through bower. So I am not able to change the name of the file without losing consistency.\nIt is bad naming convention from the library supplier, but it is quite common (also there is no file without the extra dot in the package)\n\n`forceCopy` would work as external lib files usually does not need to be compiled.\n. ",
    "Hoenoe": "Hey @jescalan,\nThank you for your help! \nThis clarified things and changing the extension to `.html` did the trick.\n. Hey @jescalan,\nThank you for your help! \nThis clarified things and changing the extension to `.html` did the trick.\n. ",
    "reubano": "Thanks for your detailed response!\n\n> Unfortunately, if that was the case hardly anyone would opt in for the analytics.\n\nThat's kinda the point ;)\n\n> This is not because people are objected to analytics (we have thousands and thousands of users, less than 1% opt out, and this is the first time anyone has ever opened an issue about it).\n\nIsn't it also possible that people _do_ object to analytics and just aren't aware they are being tracked?\n\n> it's because it offers them no benefit, so they would not put extra work into enabling it.\n\nSo why default in a \"feature\" with no immediate benefit to the user?\n\n> Having some relative numbers as to how many people are using roots is an important way to validate the extra work that goes in to making this publicly available and offering free support to all users.\n\nHow about the download stats offered from npm?\n\n> which, by the way, are also entirely open source, anonymous, and available at http://roots.cx/analytics, including the API key which anyone is welcome to use\n\nA page which isn't linked to anywhere (that I could see) from the roots site.\n\n> This makes roots a better product for our users, since we don't need to pour extra time into unused or rarely used portions, and are encouraged to put more time into features that do matter to people are are getting heavy usage.\n\nRoots is modular, so wouldn't you get the same information from the npm stats of the respective plugins?\n\n> Every single website you visit, including github, tracks you at a much more granular level than roots analytics does...\n\nYes that is true. But open source projects, unlike websites, are installed onto your machine. Following your logic, it would be ok for roots to start serving [malware ridden ads](http://arstechnica.com/security/2016/03/big-name-sites-hit-by-rash-of-malicious-ads-spreading-crypto-ransomware/).\n\n> Same with every single app you use on your phone.\n\nI would hope you hold roots to higher standards than mobile apps, many of which are so full of ads and useless in-app purchases that they aren't even worth downloading in the first place.\n\n> I feel like it's fairly generous in the first place to not only pour hundreds of hours of my personal time into this project and provide it completely free for you...\n\nAs an open source dev myself, I understand the time commitment involved in creating and supporting a project. And I appreciate the work you put into creating and releasing roots. I also understand that devs do need a way to monetize there efforts, lest we fall vulnerable to more and more [security bugs](https://blog.mozilla.org/blog/2016/06/09/help-make-open-source-secure/). As you admitted, your employer sponsors some of your efforts. I'm also sure they get a decent amount of exposure as well by being featured on the roots website. I'm all for creative funding for OSS, but this just [seems sneaky](https://github.com/Homebrew/brew/issues/142)\n\n> ...but also give out the analytics API keys freely to the public, purposefully make the tracking very anonymous to collect the minimal information we need, and offer users a way to easily opt out upfront. \n> \n> That being said, I'm not going to make this change. However, as this is MIT licensed, you are more than welcome to fork it and make the change yourself!\n\nI was already pretty sure you wouldn't make the change :). But at the very least, the analytics page should be prominently linked to from the roots website. As far as forking and changing... let's just say it's on my todo list.\n. Thanks for your detailed response!\n\n> Unfortunately, if that was the case hardly anyone would opt in for the analytics.\n\nThat's kinda the point ;)\n\n> This is not because people are objected to analytics (we have thousands and thousands of users, less than 1% opt out, and this is the first time anyone has ever opened an issue about it).\n\nIsn't it also possible that people _do_ object to analytics and just aren't aware they are being tracked?\n\n> it's because it offers them no benefit, so they would not put extra work into enabling it.\n\nSo why default in a \"feature\" with no immediate benefit to the user?\n\n> Having some relative numbers as to how many people are using roots is an important way to validate the extra work that goes in to making this publicly available and offering free support to all users.\n\nHow about the download stats offered from npm?\n\n> which, by the way, are also entirely open source, anonymous, and available at http://roots.cx/analytics, including the API key which anyone is welcome to use\n\nA page which isn't linked to anywhere (that I could see) from the roots site.\n\n> This makes roots a better product for our users, since we don't need to pour extra time into unused or rarely used portions, and are encouraged to put more time into features that do matter to people are are getting heavy usage.\n\nRoots is modular, so wouldn't you get the same information from the npm stats of the respective plugins?\n\n> Every single website you visit, including github, tracks you at a much more granular level than roots analytics does...\n\nYes that is true. But open source projects, unlike websites, are installed onto your machine. Following your logic, it would be ok for roots to start serving [malware ridden ads](http://arstechnica.com/security/2016/03/big-name-sites-hit-by-rash-of-malicious-ads-spreading-crypto-ransomware/).\n\n> Same with every single app you use on your phone.\n\nI would hope you hold roots to higher standards than mobile apps, many of which are so full of ads and useless in-app purchases that they aren't even worth downloading in the first place.\n\n> I feel like it's fairly generous in the first place to not only pour hundreds of hours of my personal time into this project and provide it completely free for you...\n\nAs an open source dev myself, I understand the time commitment involved in creating and supporting a project. And I appreciate the work you put into creating and releasing roots. I also understand that devs do need a way to monetize there efforts, lest we fall vulnerable to more and more [security bugs](https://blog.mozilla.org/blog/2016/06/09/help-make-open-source-secure/). As you admitted, your employer sponsors some of your efforts. I'm also sure they get a decent amount of exposure as well by being featured on the roots website. I'm all for creative funding for OSS, but this just [seems sneaky](https://github.com/Homebrew/brew/issues/142)\n\n> ...but also give out the analytics API keys freely to the public, purposefully make the tracking very anonymous to collect the minimal information we need, and offer users a way to easily opt out upfront. \n> \n> That being said, I'm not going to make this change. However, as this is MIT licensed, you are more than welcome to fork it and make the change yourself!\n\nI was already pretty sure you wouldn't make the change :). But at the very least, the analytics page should be prominently linked to from the roots website. As far as forking and changing... let's just say it's on my todo list.\n. ",
    "drbe4t": "ya'll are awesome! Thanks for the help\n. Another quick question. I'm just trying to mess around with roots and I got this in one of my watch information. \nTransformers.markdown is deprecated, you must replace the :markdown jade filter, with :marked and install jstransformer-marked before you update to jade@2.0.0.\nis jstransformer-marked not installed by default? \n. ya'll are awesome! Thanks for the help\n. Another quick question. I'm just trying to mess around with roots and I got this in one of my watch information. \nTransformers.markdown is deprecated, you must replace the :markdown jade filter, with :marked and install jstransformer-marked before you update to jade@2.0.0.\nis jstransformer-marked not installed by default? \n. ",
    "kernowjoe": "Brilliant thank you. Brilliant thank you. ",
    "Reinkaos": "Hey @jescalan thanks for getting back to me, I look forward to this issue being fixed :).. Hey @jescalan thanks for getting back to me, I look forward to this issue being fixed :).. ",
    "jonschlinkert": "just checking in to say thanks for using micromatch, and to offer our help if/when you decide to merge this in. \r\n\r\nIf you experience any issues please stop by and let us know on the [micromatch issues](https://github.com/micromatch/micromatch/issues/93). thanks!. just checking in to say thanks for using micromatch, and to offer our help if/when you decide to merge this in. \r\n\r\nIf you experience any issues please stop by and let us know on the [micromatch issues](https://github.com/micromatch/micromatch/issues/93). thanks!. ",
    "Quintisimo": "https://github.com/Quintisimo/HiQ\r\nThis is one of the projects where I'm using roots . I did the verified this by removing the `roots-records` declaration from the `app.production.coffee` but left it in the `app.coffee` and then ran `roots watch`. The site did not compile which told me that the app.coffee file was not being used. I also tried the `console.log` and it gave me the same result.\r\nHow do i force roots to use the `app.coffee` file when I run `roots watch`? Also I am on Windows 10. I think I figured it out. Node is setting the default environment to production and that is why it is using app.production.coffee. If I set the environment to development and then run roots it uses app.coffee. I just need to set the node environment to development by default. https://github.com/Quintisimo/HiQ\r\nThis is one of the projects where I'm using roots . I did the verified this by removing the `roots-records` declaration from the `app.production.coffee` but left it in the `app.coffee` and then ran `roots watch`. The site did not compile which told me that the app.coffee file was not being used. I also tried the `console.log` and it gave me the same result.\r\nHow do i force roots to use the `app.coffee` file when I run `roots watch`? Also I am on Windows 10. I think I figured it out. Node is setting the default environment to production and that is why it is using app.production.coffee. If I set the environment to development and then run roots it uses app.coffee. I just need to set the node environment to development by default. "
}