{
    "lucadegasperi": "Thanks for this one, there was also another typo in the error class, fixed that too.\n. I can only recomend you the one I use: https://github.com/php-loep/oauth2-client\nIt's by the same maintainers of the oauth server this package is using. So far I think it's awesome!\n\nHope it helps\n. Definitively better :)\n\nThanks!\n. Thank you!\n. Awesome! Thanks for this fix.\n. Looks a lot better than before. Thanks!\n. I guess you are doing a `GET` request for the access token when using the `client_credentials` right? Technically the OAuth 2.0 Specification states that an access_token request should be done via `POST`.\nIs that the issue you are having?\n. I see, since this doesn't break things I will accept it. I only hope it doesn't encourage to use the access_token route via GET, since it's wrong.\n. This makes perfect sense, Thank you!\n. Awesome, thanks!\n. This covers only a part on how to access an oauth secured route, and not even the recommended method which is by using the `Authentication` http header.\n\nAnyway, thanks for this, It's a good step forward.\n. Great! this is something that might have caused some issues moving forward.\n. This has been fixed already on my local dev branch, I just need to push it along with some automated database testing. Anyway, thanks for your time.\n. Lovely, thanks!\n. Looks like this error got carried trough from the example docs I used to write the filter, thanks for fixing this, I've also updated the tests to reflect the changes you made.\n. Lovely, thanks!\n. If you want to go ahead with the full refactor and not only a change in the require, I'll merge it.\n. Lovely, merged.\n. Have you tested if this solution works even when the fetch_assoc option is false?\n. Merged. Thanks.\n. Whoops, went straight over this one. I'll merge it now. Thanks @GrahamCampbell \n. The method already calls the Input::all() method on the Input facade, to provide custom input, just override the values inside the Input object.\n. Thanks @JPBetley \n. ResourseServer::getOwnerId() gets populated only once you call the ResourceServer::isValid() method, that's the expected behavior. The resource server has to validate the access token first in order to retrieve who is it associated to.\nYou should not use the AuthorizationServer at the same time as the ResourceServer. think of them as residing in two completely different servers. one (the authorization server) is your html app where you display the login form and issue an access token. the resource server is your api, it has no knowledge of the authorization server, they only share the database.\n\nAlso, do not try to return the user's info to your client application when requesting an access token. The authorization server should give your client the access token to access the user's info on the resource server. keep the responsibilities separated.\n. I've got this worked out for the next version of this package, as for the current version, I don't plan on implementing this PR. I appreciate your contribution though.\n. Once the underlying library this package uses is updated to v4, a week or two later i'll try to release an update\n. Thanks! Would you mind updating the configuration key as well?\n. Perfect! Thanks for contributing!\n. Thanks for pointing this out. Weird that the tests didn't catch this change.\n. wouldn't it be more convenient to set the configuration option once in a class that all the other migrations extend? Plus it should also work on the down() method.\n\nI'll considering merging this only with the changes mentioned above.\n. Yeah, You're right, I haven't considered where to put that class. Let's go for `Support`\n. Sounds fine!\n. Thanks for your time contributing!\n. Closing this pull, I've implemented the changes myself plus made the tests pass.\n\nThanks for contributing Ryan!\n. Thanks Ryan!\n. Thanks!\n. Thanks for contributing!\n. Thanks!\n. You are going all in on this! Again, Thank you!\n. Thanks!\n. Same as #179 \n. The documentation on the website refers to the new version of their library which is used by the rewrite branch of this package, not on the master. Therefore I wouldn't suggest linking to it as it may cause misunderstandings.\n. Was about to do it myself but you were faster!\n\nThanks for contributing, merging it right away!\n. See #179\n. Great!\n\nThanks for the contribution.\n. Is using middleware to catch exceptions the new standard way of doing it in L5? Still haven't given it an in-depth look.\n. Will keep this on hold for now until I get a better picture on how to do it properly.\n\nThanks for contributing!\n. Yes, it is. If you mind making the tests pass as well I'll merge this right away.\n. The check-authorization-parameter filter is better as a filter than it is as a middleware. The JSON error handler has been implemented as a middleware. Thanks.\n. Thanks for contributing, but haven't you just changed the filter and made them middlewares with this changes? Shouldn't they be registered like middlewares as well?\n. Update the tests and will merge this asap.\n. Composer might take a bit to update.\n. Merged manually, fixed. Thanks for contributing!\n. Thanks\n. Thanks. There's still a problem with migration that when copied preserve the timestamp they have and which might cause problems with migrations that should run before this ones.\n. There still a problem with migrations published in a row which would have the same timestamp, thus not preserving the order of this ones. I'll proceed implementing the changes on the weekend. So we should have a L5 \"ready\" package fairly soon.\n. I've taken inspiration from this and rolled my own implementation. Thanks for contributing!\n. Thanks. L5 support is still Work In Progress.\n. Went with my own implementation and updated the tests as well. Thanks for reporting and contributing!\n. Thanks for contributing\n. Was thinking about removing them both. The migrations can be handled by the new vendor:publish command and the controller is just a stub which can be easily copied and pasted (thus avoiding the possible problems derived from L5 controllers now being namespaced)\n. Removed them.\n. Man, this looks ugly. Why don't you implement the storage interfaces specifically for mongo and make a package out of them?\n. This pull request is too dirty and it should be based on the newer version of the package storage interfaces if you want me to merge it.\n. The migrations need to run in order, having them added with the timestamp at the time they were created  is wrong.\n. Every file should be checked for existence before being moved i guess.\n. That command is going to be deprecated. I will see what i can do.\n. No longer actual.\n. Because when I started working on this version L5 was still in early development and stuff changed names too quickly. Putting L5 in the require-dev section doesn't solve the problem.\n. Don't know yet, haven't had the chance to test it. anyways, right now i'm updating the composer.json file to pull in only the illuminate components needed.\n. Improved the composer.json file.\n. It is not, only illuminate components are.\n. True that. Merge once travis returns green\n. The command has been removed, there's no use for adding it back. I'll eventually develop a separate package to offer this kind of functionality.\n. This will eventually be put in a separate package to manage oauth server stuff.\n. There's an IETF spec for token revocation which is in the works and will be implemented here once it gets implemented on league/oauth2-server.\n\nI'll eventually create a separate package to manage these sort of things. For now I'm closing this.\n\nThanks for contributing.\n. Lovely!\n. You're a PR machine\n. Tests aren't passing, once they do, I'll merge this :)\n. It should work as it is right now but it isn't optimized to take advantage of the new L5.1 feature, working on it though.\n. Learned something new today that you could pipe different package versions.\n. @GrahamCampbell The previous version of the composer.json file should be better then?\n. Tagging 4.0.2 right now\n. PR on a branch that is no longer worked on. Closing.\n. Hello and thanks for stopping by. \nJust out of curiosity, do you have a link to the bug you are mentioning?\nFor code climate i'm using scrutinizer witch does the same thing but on a scale from 1 to 10.\n. Agree with all of you. I'm already working on the middleware with parameters.\n. on acceptance testing, right now i have to check on their utility.\n. eventually, yes.\n. Actually, i don't use them anywhere. removing them.\n. I use the other ones on my local machine as I don't need reporting and stuff there.\n. Getting back to this one soon.\n. This already changed on the develop branch\n. You're on the dev branch, I've decided to remove that callback to allow for `php artisan config:cache` to work correctly. It is not a best practice to have logic inside your config files. The new way of doing it is described in the wiki: https://github.com/lucadegasperi/oauth2-server-laravel/wiki/Implementing-an-Authorization-Server-with-the-Password-Grant\n. Just travis acting weirdly.\n. I think the changes we made are not that breaking and thus I would like to release these changes as 4.1. What's your opinion on it @vinkla ?\n. Sounds good to me. Let's merge it.\n. It has problems in general lately. Guess it is due to the configuration being used.\n. not sure about the naming, we're still talking about token ownership and that's important to remember.\n. :+1: \n. Add an intermediate layer that can safely store your client credentials in your application and that acts like a proxy to the api server. http://alexbilbie.com/2014/11/oauth-and-javascript/\nThis package is focused on security, in fact most of the recommendations found in the OAuth2 are implemented here. Making some security parameters optional would mean less secure APIs will spread across the internet.\n. :+1: \n. If it doesn't complicate the configuration file, then just go ahead :+1: \n. @kfuchs Thank you all for contributing, I've decided to merge this as it has no side effects. Any issue arising from supporting L5.4 won't be covered though.\r\n\r\nI wanted to let you know that the reason this package is no longer maintained is because both Vincent and I lack the time to keep up with it. I know Passport ain't perfect but I've judged it good enough for most of the people out there although I don't share some of the decision Taylor made.. Thanks for this one, there was also another typo in the error class, fixed that too.\n. I can only recomend you the one I use: https://github.com/php-loep/oauth2-client\nIt's by the same maintainers of the oauth server this package is using. So far I think it's awesome!\n\nHope it helps\n. Definitively better :)\n\nThanks!\n. Thank you!\n. Awesome! Thanks for this fix.\n. Looks a lot better than before. Thanks!\n. I guess you are doing a `GET` request for the access token when using the `client_credentials` right? Technically the OAuth 2.0 Specification states that an access_token request should be done via `POST`.\nIs that the issue you are having?\n. I see, since this doesn't break things I will accept it. I only hope it doesn't encourage to use the access_token route via GET, since it's wrong.\n. This makes perfect sense, Thank you!\n. Awesome, thanks!\n. This covers only a part on how to access an oauth secured route, and not even the recommended method which is by using the `Authentication` http header.\n\nAnyway, thanks for this, It's a good step forward.\n. Great! this is something that might have caused some issues moving forward.\n. This has been fixed already on my local dev branch, I just need to push it along with some automated database testing. Anyway, thanks for your time.\n. Lovely, thanks!\n. Looks like this error got carried trough from the example docs I used to write the filter, thanks for fixing this, I've also updated the tests to reflect the changes you made.\n. Lovely, thanks!\n. If you want to go ahead with the full refactor and not only a change in the require, I'll merge it.\n. Lovely, merged.\n. Have you tested if this solution works even when the fetch_assoc option is false?\n. Merged. Thanks.\n. Whoops, went straight over this one. I'll merge it now. Thanks @GrahamCampbell \n. The method already calls the Input::all() method on the Input facade, to provide custom input, just override the values inside the Input object.\n. Thanks @JPBetley \n. ResourseServer::getOwnerId() gets populated only once you call the ResourceServer::isValid() method, that's the expected behavior. The resource server has to validate the access token first in order to retrieve who is it associated to.\nYou should not use the AuthorizationServer at the same time as the ResourceServer. think of them as residing in two completely different servers. one (the authorization server) is your html app where you display the login form and issue an access token. the resource server is your api, it has no knowledge of the authorization server, they only share the database.\n\nAlso, do not try to return the user's info to your client application when requesting an access token. The authorization server should give your client the access token to access the user's info on the resource server. keep the responsibilities separated.\n. I've got this worked out for the next version of this package, as for the current version, I don't plan on implementing this PR. I appreciate your contribution though.\n. Once the underlying library this package uses is updated to v4, a week or two later i'll try to release an update\n. Thanks! Would you mind updating the configuration key as well?\n. Perfect! Thanks for contributing!\n. Thanks for pointing this out. Weird that the tests didn't catch this change.\n. wouldn't it be more convenient to set the configuration option once in a class that all the other migrations extend? Plus it should also work on the down() method.\n\nI'll considering merging this only with the changes mentioned above.\n. Yeah, You're right, I haven't considered where to put that class. Let's go for `Support`\n. Sounds fine!\n. Thanks for your time contributing!\n. Closing this pull, I've implemented the changes myself plus made the tests pass.\n\nThanks for contributing Ryan!\n. Thanks Ryan!\n. Thanks!\n. Thanks for contributing!\n. Thanks!\n. You are going all in on this! Again, Thank you!\n. Thanks!\n. Same as #179 \n. The documentation on the website refers to the new version of their library which is used by the rewrite branch of this package, not on the master. Therefore I wouldn't suggest linking to it as it may cause misunderstandings.\n. Was about to do it myself but you were faster!\n\nThanks for contributing, merging it right away!\n. See #179\n. Great!\n\nThanks for the contribution.\n. Is using middleware to catch exceptions the new standard way of doing it in L5? Still haven't given it an in-depth look.\n. Will keep this on hold for now until I get a better picture on how to do it properly.\n\nThanks for contributing!\n. Yes, it is. If you mind making the tests pass as well I'll merge this right away.\n. The check-authorization-parameter filter is better as a filter than it is as a middleware. The JSON error handler has been implemented as a middleware. Thanks.\n. Thanks for contributing, but haven't you just changed the filter and made them middlewares with this changes? Shouldn't they be registered like middlewares as well?\n. Update the tests and will merge this asap.\n. Composer might take a bit to update.\n. Merged manually, fixed. Thanks for contributing!\n. Thanks\n. Thanks. There's still a problem with migration that when copied preserve the timestamp they have and which might cause problems with migrations that should run before this ones.\n. There still a problem with migrations published in a row which would have the same timestamp, thus not preserving the order of this ones. I'll proceed implementing the changes on the weekend. So we should have a L5 \"ready\" package fairly soon.\n. I've taken inspiration from this and rolled my own implementation. Thanks for contributing!\n. Thanks. L5 support is still Work In Progress.\n. Went with my own implementation and updated the tests as well. Thanks for reporting and contributing!\n. Thanks for contributing\n. Was thinking about removing them both. The migrations can be handled by the new vendor:publish command and the controller is just a stub which can be easily copied and pasted (thus avoiding the possible problems derived from L5 controllers now being namespaced)\n. Removed them.\n. Man, this looks ugly. Why don't you implement the storage interfaces specifically for mongo and make a package out of them?\n. This pull request is too dirty and it should be based on the newer version of the package storage interfaces if you want me to merge it.\n. The migrations need to run in order, having them added with the timestamp at the time they were created  is wrong.\n. Every file should be checked for existence before being moved i guess.\n. That command is going to be deprecated. I will see what i can do.\n. No longer actual.\n. Because when I started working on this version L5 was still in early development and stuff changed names too quickly. Putting L5 in the require-dev section doesn't solve the problem.\n. Don't know yet, haven't had the chance to test it. anyways, right now i'm updating the composer.json file to pull in only the illuminate components needed.\n. Improved the composer.json file.\n. It is not, only illuminate components are.\n. True that. Merge once travis returns green\n. The command has been removed, there's no use for adding it back. I'll eventually develop a separate package to offer this kind of functionality.\n. This will eventually be put in a separate package to manage oauth server stuff.\n. There's an IETF spec for token revocation which is in the works and will be implemented here once it gets implemented on league/oauth2-server.\n\nI'll eventually create a separate package to manage these sort of things. For now I'm closing this.\n\nThanks for contributing.\n. Lovely!\n. You're a PR machine\n. Tests aren't passing, once they do, I'll merge this :)\n. It should work as it is right now but it isn't optimized to take advantage of the new L5.1 feature, working on it though.\n. Learned something new today that you could pipe different package versions.\n. @GrahamCampbell The previous version of the composer.json file should be better then?\n. Tagging 4.0.2 right now\n. PR on a branch that is no longer worked on. Closing.\n. Hello and thanks for stopping by. \nJust out of curiosity, do you have a link to the bug you are mentioning?\nFor code climate i'm using scrutinizer witch does the same thing but on a scale from 1 to 10.\n. Agree with all of you. I'm already working on the middleware with parameters.\n. on acceptance testing, right now i have to check on their utility.\n. eventually, yes.\n. Actually, i don't use them anywhere. removing them.\n. I use the other ones on my local machine as I don't need reporting and stuff there.\n. Getting back to this one soon.\n. This already changed on the develop branch\n. You're on the dev branch, I've decided to remove that callback to allow for `php artisan config:cache` to work correctly. It is not a best practice to have logic inside your config files. The new way of doing it is described in the wiki: https://github.com/lucadegasperi/oauth2-server-laravel/wiki/Implementing-an-Authorization-Server-with-the-Password-Grant\n. Just travis acting weirdly.\n. I think the changes we made are not that breaking and thus I would like to release these changes as 4.1. What's your opinion on it @vinkla ?\n. Sounds good to me. Let's merge it.\n. It has problems in general lately. Guess it is due to the configuration being used.\n. not sure about the naming, we're still talking about token ownership and that's important to remember.\n. :+1: \n. Add an intermediate layer that can safely store your client credentials in your application and that acts like a proxy to the api server. http://alexbilbie.com/2014/11/oauth-and-javascript/\nThis package is focused on security, in fact most of the recommendations found in the OAuth2 are implemented here. Making some security parameters optional would mean less secure APIs will spread across the internet.\n. :+1: \n. If it doesn't complicate the configuration file, then just go ahead :+1: \n. @kfuchs Thank you all for contributing, I've decided to merge this as it has no side effects. Any issue arising from supporting L5.4 won't be covered though.\r\n\r\nI wanted to let you know that the reason this package is no longer maintained is because both Vincent and I lack the time to keep up with it. I know Passport ain't perfect but I've judged it good enough for most of the people out there although I don't share some of the decision Taylor made.. ",
    "thylo": "You're welcome, just a little question by the way, what Oauth client would you recommend for laravel ?\n. You're welcome, just a little question by the way, what Oauth client would you recommend for laravel ?\n. ",
    "coveralls": "[![Coverage Status](https://coveralls.io/builds/251155/badge)](https://coveralls.io/builds/251155)\n\nCoverage decreased (-2.88%) when pulling **47eb27433fb0f847c96337a601422d089eb02e0c on thylo:patch-2** into **c11d53070aedcc79abd02c038e9b2be13a80d769 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/258860/badge)](https://coveralls.io/builds/258860)\n\nCoverage remained the same when pulling **8faa6cfbd479397b789cbe889d1113184c4b75a7 on thylo:patch-3** into **fc37daf6afbad29b7f974fe08fa16991e9b3a5b5 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/258873/badge)](https://coveralls.io/builds/258873)\n\nCoverage remained the same when pulling **e7053edca8715ab5f12ce0ceb6696204f9b197c4 on thylo:patch-4** into **fc37daf6afbad29b7f974fe08fa16991e9b3a5b5 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/262961/badge)](https://coveralls.io/builds/262961)\n\nCoverage remained the same when pulling **d20ff61c0fbe10d1ade6716edb6aaf06cf66d5cd on fx88:master** into **4e4f1e015f9e41194d4356552808ec354a74ef99 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/263058/badge)](https://coveralls.io/builds/263058)\n\nCoverage remained the same when pulling **ae60f25353e2b3ec477f2dc93ba103d2dc31fc66 on fx88:patch-1** into **2e7c1ca5349a46b0dce1978bcac4a08144973761 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/279311/badge)](https://coveralls.io/builds/279311)\n\nCoverage increased (+0.01%) when pulling **27a67d16fd588a66db34ea106d69b635c88c0b3c on enginego:bug-fix** into **bc128eefe4e8c771c222b7333786c2aed7f0f39d on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326174/badge)](https://coveralls.io/builds/326174)\n\nCoverage decreased (-23.61%) when pulling **ad3fd7bd263c09aca7a3c282471685e9db58318b on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326387/badge)](https://coveralls.io/builds/326387)\n\nCoverage increased (+0.01%) when pulling **827a34f436c53da95d2eeca4820d7c3f8b946909 on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326657/badge)](https://coveralls.io/builds/326657)\n\nCoverage increased (+0.01%) when pulling **567ecfbfadb78b4bc6c7e1733ead0acfb0c6e56f on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/361526/badge)](https://coveralls.io/builds/361526)\n\nCoverage remained the same when pulling **30808dbe0e5f79b7f723d40fa2150fc52faf4ae0 on jkazimir:master** into **f2ef8b2abedf6c139b8245c9b94255f1c7b31ac7 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/367629/badge)](https://coveralls.io/builds/367629)\n\nCoverage remained the same when pulling **ac403cd50bf7ff5b5e628b5fad4eed90e1d1b442 on Galaxonic:patch-1** into **92691a07cf1748dcae09161360c8b2f9879c55a4 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/367864/badge)](https://coveralls.io/builds/367864)\n\nCoverage remained the same when pulling **60880f6bc04f460be367946e0c5e90eae68fa8e4 on BsWiM:lucadegasperi/master** into **d6292f253611d7d3c82b8f759cc24e6d80489a81 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/379729/badge)](https://coveralls.io/builds/379729)\n\nCoverage remained the same when pulling **120ce46ebfb685e9bb5eff5799f148c2b6bcb2d5 on andizzle:develop** into **9f02f2b18c4e578feb10751072ee10109191cba8 on lucadegasperi:develop**.\n. \n[![Coverage Status](https://coveralls.io/builds/9282958/badge)](https://coveralls.io/builds/9282958)\n\nChanges Unknown when pulling **a807af7c83b4b1662e2b52f8ff2f2f3e44a1f0dd on stristr:session-revoking** into ** on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/251155/badge)](https://coveralls.io/builds/251155)\n\nCoverage decreased (-2.88%) when pulling **47eb27433fb0f847c96337a601422d089eb02e0c on thylo:patch-2** into **c11d53070aedcc79abd02c038e9b2be13a80d769 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/258860/badge)](https://coveralls.io/builds/258860)\n\nCoverage remained the same when pulling **8faa6cfbd479397b789cbe889d1113184c4b75a7 on thylo:patch-3** into **fc37daf6afbad29b7f974fe08fa16991e9b3a5b5 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/258873/badge)](https://coveralls.io/builds/258873)\n\nCoverage remained the same when pulling **e7053edca8715ab5f12ce0ceb6696204f9b197c4 on thylo:patch-4** into **fc37daf6afbad29b7f974fe08fa16991e9b3a5b5 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/262961/badge)](https://coveralls.io/builds/262961)\n\nCoverage remained the same when pulling **d20ff61c0fbe10d1ade6716edb6aaf06cf66d5cd on fx88:master** into **4e4f1e015f9e41194d4356552808ec354a74ef99 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/263058/badge)](https://coveralls.io/builds/263058)\n\nCoverage remained the same when pulling **ae60f25353e2b3ec477f2dc93ba103d2dc31fc66 on fx88:patch-1** into **2e7c1ca5349a46b0dce1978bcac4a08144973761 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/279311/badge)](https://coveralls.io/builds/279311)\n\nCoverage increased (+0.01%) when pulling **27a67d16fd588a66db34ea106d69b635c88c0b3c on enginego:bug-fix** into **bc128eefe4e8c771c222b7333786c2aed7f0f39d on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326174/badge)](https://coveralls.io/builds/326174)\n\nCoverage decreased (-23.61%) when pulling **ad3fd7bd263c09aca7a3c282471685e9db58318b on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326387/badge)](https://coveralls.io/builds/326387)\n\nCoverage increased (+0.01%) when pulling **827a34f436c53da95d2eeca4820d7c3f8b946909 on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/326657/badge)](https://coveralls.io/builds/326657)\n\nCoverage increased (+0.01%) when pulling **567ecfbfadb78b4bc6c7e1733ead0acfb0c6e56f on andizzle:develop** into **002efeec165b670a0320ccdf7c40f4be014cce28 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/361526/badge)](https://coveralls.io/builds/361526)\n\nCoverage remained the same when pulling **30808dbe0e5f79b7f723d40fa2150fc52faf4ae0 on jkazimir:master** into **f2ef8b2abedf6c139b8245c9b94255f1c7b31ac7 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/367629/badge)](https://coveralls.io/builds/367629)\n\nCoverage remained the same when pulling **ac403cd50bf7ff5b5e628b5fad4eed90e1d1b442 on Galaxonic:patch-1** into **92691a07cf1748dcae09161360c8b2f9879c55a4 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/367864/badge)](https://coveralls.io/builds/367864)\n\nCoverage remained the same when pulling **60880f6bc04f460be367946e0c5e90eae68fa8e4 on BsWiM:lucadegasperi/master** into **d6292f253611d7d3c82b8f759cc24e6d80489a81 on lucadegasperi:master**.\n. [![Coverage Status](https://coveralls.io/builds/379729/badge)](https://coveralls.io/builds/379729)\n\nCoverage remained the same when pulling **120ce46ebfb685e9bb5eff5799f148c2b6bcb2d5 on andizzle:develop** into **9f02f2b18c4e578feb10751072ee10109191cba8 on lucadegasperi:develop**.\n. \n[![Coverage Status](https://coveralls.io/builds/9282958/badge)](https://coveralls.io/builds/9282958)\n\nChanges Unknown when pulling **a807af7c83b4b1662e2b52f8ff2f2f3e44a1f0dd on stristr:session-revoking** into ** on lucadegasperi:master**.\n. ",
    "MatthewRuddy": "No, was doing a `POST` request. I'm using the API package `teepluss/api`, which routes directly to the router if it detects and internal request. When doing this, I was getting an error. Turning this into an externel/remote request worked fine.\n\nWith the above changes, both are now working fine. Before, no parameters were being gotten for the internal access token `POST` request.\n. Hm, I see what you mean. Could always put a check in there that limits this to only `POST` requests, thus preventing users from doing this.\n\nI'd imagine any developer using `GET` to request access tokens will have it pointed out to them very quickly as a security issue.\n. No, was doing a `POST` request. I'm using the API package `teepluss/api`, which routes directly to the router if it detects and internal request. When doing this, I was getting an error. Turning this into an externel/remote request worked fine.\n\nWith the above changes, both are now working fine. Before, no parameters were being gotten for the internal access token `POST` request.\n. Hm, I see what you mean. Could always put a check in there that limits this to only `POST` requests, thus preventing users from doing this.\n\nI'd imagine any developer using `GET` to request access tokens will have it pointed out to them very quickly as a security issue.\n. ",
    "maximebeaudoin": "Just little update in documentation\n. Because it's protected method, and the application instance is already into `Illuminate\\Support\\ServiceProvider`, i don't see the purpose of passing the application instance in parameters to the method. \n. However, if the package owner want to stay that way, i'm agree with @GrahamCampbell. Using the Container should do the trick.\n. +1 for this. Even if you not planning to support laravel 5.4 and if the package still work with Laravel 5.4, it's will be convenient for us to have at least the possibility to use this package before doing the transition to laravel/passport or something else.. Just little update in documentation\n. Because it's protected method, and the application instance is already into `Illuminate\\Support\\ServiceProvider`, i don't see the purpose of passing the application instance in parameters to the method. \n. However, if the package owner want to stay that way, i'm agree with @GrahamCampbell. Using the Container should do the trick.\n. +1 for this. Even if you not planning to support laravel 5.4 and if the package still work with Laravel 5.4, it's will be convenient for us to have at least the possibility to use this package before doing the transition to laravel/passport or something else.. ",
    "stephenfrank": "Here's the refactor. The tests pass and so do my application tests... so all should be good.\n. Here's the refactor. The tests pass and so do my application tests... so all should be good.\n. ",
    "mohitmamoria": "Yes. Checked it.\n. Pushed another commit to typecast at one last place. Missed it in the first commit.\n. Yes. Checked it.\n. Pushed another commit to typecast at one last place. Missed it in the first commit.\n. ",
    "mpetkov": "Was this change ever carried over to tag 4.0.0?  I tried using the plugin with FETCH_ASSOC and it's assuming you have it set as object.\n\nThe issue is function hydrateEntity (line 154).  We just need to add the same line as the above fix:\n$result = (object) $result;\n. Was this change ever carried over to tag 4.0.0?  I tried using the plugin with FETCH_ASSOC and it's assuming you have it set as object.\n\nThe issue is function hydrateEntity (line 154).  We just need to add the same line as the above fix:\n$result = (object) $result;\n. ",
    "JPBetley": "Following up with an example to what @lucadegasperi just said:\n\n```\n$oauth = array(\n    'client_id' => 'client_id'\n    'grant' => 'grant'\n);\n\n// Adds array to the information that was posted\nInput::merge($oauth);\n\n// Uses Input:all(), getting posted info and info merged above\nreturn AuthorizationServer::performAccessTokenFlow(); \n```\n. Following up with an example to what @lucadegasperi just said:\n\n```\n$oauth = array(\n    'client_id' => 'client_id'\n    'grant' => 'grant'\n);\n\n// Adds array to the information that was posted\nInput::merge($oauth);\n\n// Uses Input:all(), getting posted info and info merged above\nreturn AuthorizationServer::performAccessTokenFlow(); \n```\n. ",
    "ghost": "I'm aware of `Input::merge()`, however, it doesn't always work. An example:\nI log the user in using the password grant and as part of the response I would like to return the logged in user's object. Using `ResourseServer::getOwnerId()` immediately after `Input::merge(array('access_token' => $token))` **does not** return the id of the user, it is only available on the next request. Why? Isn't `Input::merge()` supposed to provide the access token for the `getOwnerId()` method? I digged in and found out that it is the `isValid()` method that sets the access token and if the method is not called, it is not possible to retrieve the id of the user immediately after logging him in.\n\nWhat would be the recommended way of doing it? Should I log the user in, and then execute the `Input::merge($arr)`, `ResourseServer::isValid()` and `ResourseServer::getOwnerId()` one after another? (I've tried it, it doesn't work as well). As of now, I'm using curl to get the user's id using one of my API's routes, which to be honest is an ugly hackish solution.\n. I'm aware of `Input::merge()`, however, it doesn't always work. An example:\nI log the user in using the password grant and as part of the response I would like to return the logged in user's object. Using `ResourseServer::getOwnerId()` immediately after `Input::merge(array('access_token' => $token))` **does not** return the id of the user, it is only available on the next request. Why? Isn't `Input::merge()` supposed to provide the access token for the `getOwnerId()` method? I digged in and found out that it is the `isValid()` method that sets the access token and if the method is not called, it is not possible to retrieve the id of the user immediately after logging him in.\n\nWhat would be the recommended way of doing it? Should I log the user in, and then execute the `Input::merge($arr)`, `ResourseServer::isValid()` and `ResourseServer::getOwnerId()` one after another? (I've tried it, it doesn't work as well). As of now, I'm using curl to get the user's id using one of my API's routes, which to be honest is an ugly hackish solution.\n. ",
    "airondumael": "Okay. \nIs there estimated release date of the next version? \n. I look forward to it. These package really is helpful. Thanks\n. Okay. \nIs there estimated release date of the next version? \n. I look forward to it. These package really is helpful. Thanks\n. ",
    "kalley": "There you go. Also updated the comment in the config.\n. There you go. Also updated the comment in the config.\n. ",
    "brayniverse": "@lucadegasperi Thanks for the feedback. I'll make the changes you mentioned later today.\n. @lucadegasperi Sorry for the delay, got caught up with work.\n\nI have made the amendments you suggested and am now trying to decide where to put the base migration class. At the moment I have it in `/src/LucaDegasperi/OAuth2Server/` but was thinking of creating a `Migrations` directory but it seems unlikely that you will have anything else migration related, should I create a `Support` directory for miscellaneous work?\n. Thanks. I'll close this PR and make a new one with all the commits consolidated to a single one shortly.\n. Closed to make way for #151 \n. No problem. Thanks for the package, it's proving very useful.\n. @lucadegasperi Thanks for the feedback. I'll make the changes you mentioned later today.\n. @lucadegasperi Sorry for the delay, got caught up with work.\n\nI have made the amendments you suggested and am now trying to decide where to put the base migration class. At the moment I have it in `/src/LucaDegasperi/OAuth2Server/` but was thinking of creating a `Migrations` directory but it seems unlikely that you will have anything else migration related, should I create a `Support` directory for miscellaneous work?\n. Thanks. I'll close this PR and make a new one with all the commits consolidated to a single one shortly.\n. Closed to make way for #151 \n. No problem. Thanks for the package, it's proving very useful.\n. ",
    "rtablada": "Looks like the wiki already shows that you need to return an id. So should just be a mater of this update.\n. Looks like the wiki already shows that you need to return an id. So should just be a mater of this update.\n. ",
    "johanobergman": "No problem!\n. Well, if I'm going to use it I might as well contribute!\n. No problem!\n. Well, if I'm going to use it I might as well contribute!\n. ",
    "summerblue": "Ok, Thank for the Brilliant work. :sun_with_face: \n. Ok, Thank for the Brilliant work. :sun_with_face: \n. ",
    "pulkitjalan": ":) Thanks\n. :) Thanks\n. ",
    "deweller": "Middleware is definitely replacing filters:\n\n> Filters still exist in the codebase, so you can still use them, but middleware is becoming the preferred practice and way of thinking about decorating your routes.\n\nI'm actually new to Laravel.  But I would say yes. You are wanting to intercept the default error response and render it in a different format (JSON).  I think this is exactly what middleware is for.\n\nThe only trick is to make sure this middleware is first - before anything else that might through an OAuthException.\n. Great.  I expect to get to this later this week.  But if someone else wants to move ahead, I won't stop them. :)\n. Middleware is definitely replacing filters:\n\n> Filters still exist in the codebase, so you can still use them, but middleware is becoming the preferred practice and way of thinking about decorating your routes.\n\nI'm actually new to Laravel.  But I would say yes. You are wanting to intercept the default error response and render it in a different format (JSON).  I think this is exactly what middleware is for.\n\nThe only trick is to make sure this middleware is first - before anything else that might through an OAuthException.\n. Great.  I expect to get to this later this week.  But if someone else wants to move ahead, I won't stop them. :)\n. ",
    "hipsterjazzbo": "@lucadegasperi This is definitely the preferred way to do things now. I've spoken to Taylor about it, and he suggested this exact thing: https://larachat.slack.com/archives/laravel5/p1422911244001162.\n\nThis change, plus moving to the new config publishing mechanism will make this L5 ready I think?\n\n**Edit** I've opened a PR for the new publishing mechanism: #291 \n. I think this PR is redundant with #211 \n. Yeah. After some research, I think the only way to do this is to list each migration file individually in `publishes()` and publish them each with the datestamp prepended:\n\n``` php\n$this->publishes([\n    ...\n    $migrationsDir.$migrationFilename => $this->app['path.database'].'/migrations/'.date('Y_m_d_His').'_'.$migrationFilename,\n    ...\n]);\n```\n\nIf that acceptable to you (but obviously a bit cleaner with a loop and stuff), I'll get it done today.\n. @lucadegasperi This is definitely the preferred way to do things now. I've spoken to Taylor about it, and he suggested this exact thing: https://larachat.slack.com/archives/laravel5/p1422911244001162.\n\nThis change, plus moving to the new config publishing mechanism will make this L5 ready I think?\n\n**Edit** I've opened a PR for the new publishing mechanism: #291 \n. I think this PR is redundant with #211 \n. Yeah. After some research, I think the only way to do this is to list each migration file individually in `publishes()` and publish them each with the datestamp prepended:\n\n``` php\n$this->publishes([\n    ...\n    $migrationsDir.$migrationFilename => $this->app['path.database'].'/migrations/'.date('Y_m_d_His').'_'.$migrationFilename,\n    ...\n]);\n```\n\nIf that acceptable to you (but obviously a bit cleaner with a loop and stuff), I'll get it done today.\n. ",
    "mobelio": "Yes should be refactored to middlewares, but this solution is working now. I did not have time to refactor, and I suggested this =)\n. Yes should be refactored to middlewares, but this solution is working now. I did not have time to refactor, and I suggested this =)\n. ",
    "sirsquall": "I don't know why, but with your branch-alias, in the package I don't get the same version of the \"thephpleague/oauth2-server\" as in the project.\n. Everything is ok now you can merge\n. I don't know why, but with your branch-alias, in the package I don't get the same version of the \"thephpleague/oauth2-server\" as in the project.\n. Everything is ok now you can merge\n. ",
    "vinkla": "Merged in 3599a4b65b14d7ce696bac8ecb5d68986665085b\n. Thanks for you contribution. This is quite custom and we want to provide the most simple setup out of the box. Developers can modify this however they want when they have published the migrations. Going to pass on this.\n. Merged in 3599a4b65b14d7ce696bac8ecb5d68986665085b\n. Thanks :)\n. Haha, thanks :)\n. Maybe we could update this as well?\n![screen shot 2015-04-30 at 10 35 09](https://cloud.githubusercontent.com/assets/499192/7409200/98fbcd44-ef24-11e4-8ad3-bf6e3efdf49c.png)\n. Closing this and adding a new one.\n. :+1: \n. Yeah, sorry about that. Added this directly on GitHub in quite a haste. The tests should pass now :)\n. The tests are now passing :)\n. Is this really a good solution? We don't know if Laravel 5.2 will break stuff. That means all current installations updating to 5.2 will break. \n. @lucadegasperi Yes.\n. :+1: \n. Thanks for your contribution! We have added this 949f53b\n. We also need to update the `composer.json` with the new PHP version. Technically it doesn't support Laravel `5.1` yet. I'd argue we should drop Laravel `5.0` support and just go with `5.0`. If we are going to implement middleware parameters #388 they wont work in `5.0` anyway. \n\nWhat do you think @lucadegasperi?\n. :+1: \n. Okay. Maybe we could move them into the tests folder instead?\n. Yeah, thats good! How we are supposed to work. Though, its common to not commit them. Since they are custom for each developer. This will also allow everyone to have custom ones in their installations.\n. Any update on this?\n. :+1: \n. Fixed in #480\n. :+1: \n. :+1: \n. Could you split these two fixes into separate PRs? Though, I don't agree we should rename the migrations. We handle this the same way Laravel does https://github.com/laravel/laravel/tree/master/database/migrations\n. I can see the problem when upgrading. Though, we can't support everyones setup. We publish the migrations as specified in the [Laravel documentation](http://laravel.com/docs/5.1/packages#publishing-file-groups). I'm :-1: on this.\n. Yeah, this should definitely be a feature in Laravel. Setting the date when publishing migrations. Let me know how it goes and if I could help in any way!\n. Maybe you could simplify the description in that issue. I know Taylor has a lot on his plate and if we could only describe the feature in a couple of lines it would be more likely to be considered!\n\nSomething like; prepend date to migrations during package publish or something similar.\n. :+1: \n. The tests seem to fail, works fine locally. Any idea @lucadegasperi ?\n. :+1: \n. @lukasoppermann you can test this by updating the version number for this package to `5.0.*@dev`. \n. I think pushing `5.0` is a good idea. Lets say developers use the old filters and specifies `~4.0` as version in their composer files. When we push a new version their code could break. I think it would be better if we pushed this version as `5.0`. Less people getting confused why their code doesn't work anymore.\n. :+1:\n. Seems there is something up with Travis? Maybe this has something to do with #419?\n. We should try fixing it. I'll try to push a fix when I have time to spare. \n. What about this PR, is it okay to merge this in?\n. Great! Don't forget to register the repo at https://styleci.io/\n. This seems to work fine now. \n\n@lucadegasperi maybe you could take a look and merge if everything seems to be in order?\n. @lucadegasperi Now all tests pass :)\n. :+1: \n. LGTM. Thanks for your contribution. Could you please [squash your commits](http://davidwalsh.name/squash-commits-git)?\n. @jakubriedl The commit history looks weird. Could you have another go at [squashing your commits](http://davidwalsh.name/squash-commits-git)?\n. Merged in 8e40ece92db608985119baebd77423874cf6b89d. Thanks for your contribution!\n. That is true. What about OAuthUserOwnerMiddleware and OAuthClientOwnerMiddleware?\n. Done. Turning green.\n. :+1: \n. :+1: \n. TBH I don't think we should care about this. It is out of scope of this package.\n. Thanks for your contribution. Please cleanup your commit history and then we take a look. \n. Maybe try closing this one and do the updates in another PR starting from scratch?\n. We've discussed this internally and we've decided to not go further with this. Thanks for your suggestion.\n. Thanks!\n. Thanks for your contribution! I've updated the docs.\n. We'll start looking at JWT support once it has been added to the [oauth2-server](https://github.com/thephpleague/oauth2-server) package. In the meantime you can check out [this package](https://github.com/tymondesigns/jwt-auth) by @tymondesigns.\n. Thanks for you contribution. Please try to cleanup the commit history and [squash your commits](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) before we take a look on this.\n. @joaopramos please add tests for this.\n. Closing this due to inactivity.\n. Thanks for your contribution! This looks good to me. \n1. Please see my comments and make adjustment. \n2. Do we really need have the exception within `Exception` directory? IMO we should move this to the root.\n3. Squash your commits.\n\n@lucadegasperi What is your opinion on this PR?\n. Thanks for updating it! Now it is up to @lucadegasperi to decide whether he wants to merge this or not.\n. Thanks!\n. @dongkaipo Please open an issue for this.\n. Okay, great! What was the issue?\n. Okay, thanks for sharing.\n. Thanks @whitefoxy, then we'll have to wait on https://github.com/thephpleague/oauth2-server/pull/391 to get merged. I'll leave this open for now. \n. This will be implemented in the next major version https://github.com/thephpleague/oauth2-server/pull/391#issuecomment-185692796\n. ????\n. Thanks for this, we really appreciate the effort! Though, we have discussed this internally and we've decided to wait with this. We're not saying no, we are saying not right now.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks for your contribution but I think it is fine how it is now. \n. LGTM. What do you think @lucadegasperi?\n. Okay, merged.\n. Thanks @felixkiss!\n. Thanks!\n. Thanks!\n. We're going to start fresh with the develop branch. Sorry for closing.\n. No worries. I think this was closed when we removed the develop branch actually.\n. Added in 5.1.2 https://github.com/lucadegasperi/oauth2-server-laravel/releases/tag/5.1.2\n. Haha, thanks!\n. Added in 5.1.2 https://github.com/lucadegasperi/oauth2-server-laravel/releases/tag/5.1.2\n. @jeffberry @tralves could you guys take a quick look on this before I merge it in?\n. Okay, great! Thanks for helping out guys!\n. Great, thanks!\n. @mstephens could you please squash your commits?\n. @mstephens Thanks!\n. Thanks @mstephens!\n. It is added in 5.1.4\n. Thanks!\n. Thanks for you contribution! We're working on the next major version and we will take a note of this for the future. \n. Thanks for your contribution!\n\n@lucadegasperi could you please check this. It is related to #679 \n. Thanks for your pull request but this package should now be considered deprecated in favour of [Laravel Passport](https://laravel.com/docs/5.3/passport). \n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. The tests fail.\n. Yes, seriously. We'll never merge something that makes the tests fail. \n. Thanks for your pull request but this package should now be considered deprecated in favour of [Laravel Passport](https://laravel.com/docs/5.3/passport). \n. Thanks for this. We'll look at this soon. Could you please fix the syntax.\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks!\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks!\n. Awesome, thank you!\n. Thanks for your pull requests but this is just a syntax update right? \n. Doesn't change behaviour?\n. @od3n please describe why we should merge this.\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. Merged in 3599a4b65b14d7ce696bac8ecb5d68986665085b\n. Thanks for you contribution. This is quite custom and we want to provide the most simple setup out of the box. Developers can modify this however they want when they have published the migrations. Going to pass on this.\n. Merged in 3599a4b65b14d7ce696bac8ecb5d68986665085b\n. Thanks :)\n. Haha, thanks :)\n. Maybe we could update this as well?\n![screen shot 2015-04-30 at 10 35 09](https://cloud.githubusercontent.com/assets/499192/7409200/98fbcd44-ef24-11e4-8ad3-bf6e3efdf49c.png)\n. Closing this and adding a new one.\n. :+1: \n. Yeah, sorry about that. Added this directly on GitHub in quite a haste. The tests should pass now :)\n. The tests are now passing :)\n. Is this really a good solution? We don't know if Laravel 5.2 will break stuff. That means all current installations updating to 5.2 will break. \n. @lucadegasperi Yes.\n. :+1: \n. Thanks for your contribution! We have added this 949f53b\n. We also need to update the `composer.json` with the new PHP version. Technically it doesn't support Laravel `5.1` yet. I'd argue we should drop Laravel `5.0` support and just go with `5.0`. If we are going to implement middleware parameters #388 they wont work in `5.0` anyway. \n\nWhat do you think @lucadegasperi?\n. :+1: \n. Okay. Maybe we could move them into the tests folder instead?\n. Yeah, thats good! How we are supposed to work. Though, its common to not commit them. Since they are custom for each developer. This will also allow everyone to have custom ones in their installations.\n. Any update on this?\n. :+1: \n. Fixed in #480\n. :+1: \n. :+1: \n. Could you split these two fixes into separate PRs? Though, I don't agree we should rename the migrations. We handle this the same way Laravel does https://github.com/laravel/laravel/tree/master/database/migrations\n. I can see the problem when upgrading. Though, we can't support everyones setup. We publish the migrations as specified in the [Laravel documentation](http://laravel.com/docs/5.1/packages#publishing-file-groups). I'm :-1: on this.\n. Yeah, this should definitely be a feature in Laravel. Setting the date when publishing migrations. Let me know how it goes and if I could help in any way!\n. Maybe you could simplify the description in that issue. I know Taylor has a lot on his plate and if we could only describe the feature in a couple of lines it would be more likely to be considered!\n\nSomething like; prepend date to migrations during package publish or something similar.\n. :+1: \n. The tests seem to fail, works fine locally. Any idea @lucadegasperi ?\n. :+1: \n. @lukasoppermann you can test this by updating the version number for this package to `5.0.*@dev`. \n. I think pushing `5.0` is a good idea. Lets say developers use the old filters and specifies `~4.0` as version in their composer files. When we push a new version their code could break. I think it would be better if we pushed this version as `5.0`. Less people getting confused why their code doesn't work anymore.\n. :+1:\n. Seems there is something up with Travis? Maybe this has something to do with #419?\n. We should try fixing it. I'll try to push a fix when I have time to spare. \n. What about this PR, is it okay to merge this in?\n. Great! Don't forget to register the repo at https://styleci.io/\n. This seems to work fine now. \n\n@lucadegasperi maybe you could take a look and merge if everything seems to be in order?\n. @lucadegasperi Now all tests pass :)\n. :+1: \n. LGTM. Thanks for your contribution. Could you please [squash your commits](http://davidwalsh.name/squash-commits-git)?\n. @jakubriedl The commit history looks weird. Could you have another go at [squashing your commits](http://davidwalsh.name/squash-commits-git)?\n. Merged in 8e40ece92db608985119baebd77423874cf6b89d. Thanks for your contribution!\n. That is true. What about OAuthUserOwnerMiddleware and OAuthClientOwnerMiddleware?\n. Done. Turning green.\n. :+1: \n. :+1: \n. TBH I don't think we should care about this. It is out of scope of this package.\n. Thanks for your contribution. Please cleanup your commit history and then we take a look. \n. Maybe try closing this one and do the updates in another PR starting from scratch?\n. We've discussed this internally and we've decided to not go further with this. Thanks for your suggestion.\n. Thanks!\n. Thanks for your contribution! I've updated the docs.\n. We'll start looking at JWT support once it has been added to the [oauth2-server](https://github.com/thephpleague/oauth2-server) package. In the meantime you can check out [this package](https://github.com/tymondesigns/jwt-auth) by @tymondesigns.\n. Thanks for you contribution. Please try to cleanup the commit history and [squash your commits](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) before we take a look on this.\n. @joaopramos please add tests for this.\n. Closing this due to inactivity.\n. Thanks for your contribution! This looks good to me. \n1. Please see my comments and make adjustment. \n2. Do we really need have the exception within `Exception` directory? IMO we should move this to the root.\n3. Squash your commits.\n\n@lucadegasperi What is your opinion on this PR?\n. Thanks for updating it! Now it is up to @lucadegasperi to decide whether he wants to merge this or not.\n. Thanks!\n. @dongkaipo Please open an issue for this.\n. Okay, great! What was the issue?\n. Okay, thanks for sharing.\n. Thanks @whitefoxy, then we'll have to wait on https://github.com/thephpleague/oauth2-server/pull/391 to get merged. I'll leave this open for now. \n. This will be implemented in the next major version https://github.com/thephpleague/oauth2-server/pull/391#issuecomment-185692796\n. ????\n. Thanks for this, we really appreciate the effort! Though, we have discussed this internally and we've decided to wait with this. We're not saying no, we are saying not right now.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks for your contribution but I think it is fine how it is now. \n. LGTM. What do you think @lucadegasperi?\n. Okay, merged.\n. Thanks @felixkiss!\n. Thanks!\n. Thanks!\n. We're going to start fresh with the develop branch. Sorry for closing.\n. No worries. I think this was closed when we removed the develop branch actually.\n. Added in 5.1.2 https://github.com/lucadegasperi/oauth2-server-laravel/releases/tag/5.1.2\n. Haha, thanks!\n. Added in 5.1.2 https://github.com/lucadegasperi/oauth2-server-laravel/releases/tag/5.1.2\n. @jeffberry @tralves could you guys take a quick look on this before I merge it in?\n. Okay, great! Thanks for helping out guys!\n. Great, thanks!\n. @mstephens could you please squash your commits?\n. @mstephens Thanks!\n. Thanks @mstephens!\n. It is added in 5.1.4\n. Thanks!\n. Thanks for you contribution! We're working on the next major version and we will take a note of this for the future. \n. Thanks for your contribution!\n\n@lucadegasperi could you please check this. It is related to #679 \n. Thanks for your pull request but this package should now be considered deprecated in favour of [Laravel Passport](https://laravel.com/docs/5.3/passport). \n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. The tests fail.\n. Yes, seriously. We'll never merge something that makes the tests fail. \n. Thanks for your pull request but this package should now be considered deprecated in favour of [Laravel Passport](https://laravel.com/docs/5.3/passport). \n. Thanks for this. We'll look at this soon. Could you please fix the syntax.\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks!\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks!\n. Awesome, thank you!\n. Thanks for your pull requests but this is just a syntax update right? \n. Doesn't change behaviour?\n. @od3n please describe why we should merge this.\n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. Thanks for your pull request but this package should now be considered deprecated. \n. ",
    "petehouston": "+1, I was thinking the same way.\n. +1, I was thinking the same way.\n. ",
    "swaaj": "Okay, I have implemented storage interfaces specifically for mongo now. And they can be used by using <code>'LucaDegasperi\\OAuth2Server\\Storage\\Mongo\\FluentStorageServiceProvider'</code> instead of <code>'LucaDegasperi\\OAuth2Server\\Storage\\FluentStorageServiceProvider'</code> in app/config.php.\n. Okay, I have implemented storage interfaces specifically for mongo now. And they can be used by using <code>'LucaDegasperi\\OAuth2Server\\Storage\\Mongo\\FluentStorageServiceProvider'</code> instead of <code>'LucaDegasperi\\OAuth2Server\\Storage\\FluentStorageServiceProvider'</code> in app/config.php.\n. ",
    "gauravdave01": "When are you going to merge that Mongo compatible code in your package?\n. Ok, No Issues!\n. When are you going to merge that Mongo compatible code in your package?\n. Ok, No Issues!\n. ",
    "renanwilliam": "thanks @yajra, saved my day. thanks @yajra, saved my day. ",
    "yajra": "I see then we need to rename the files. We should not add timestamps dynamically because it will cause the files to copied every publish command.\n. Yes, but Laravel automatically checks the file and will not copy if it does exists.\n. I see then we need to rename the files. We should not add timestamps dynamically because it will cause the files to copied every publish command.\n. Yes, but Laravel automatically checks the file and will not copy if it does exists.\n. ",
    "tpavlek": "Any possibility of this being merged? It's a pretty frustrating issue.\n. Thanks for the feedback @vinkla - I took care of the changes and squashed.\n. @vinkla Addressed both pieces of your feedback.\n\nWith @lucadegasperi's :+1: now is this good to go? :)\n. Any possibility of this being merged? It's a pretty frustrating issue.\n. Thanks for the feedback @vinkla - I took care of the changes and squashed.\n. @vinkla Addressed both pieces of your feedback.\n\nWith @lucadegasperi's :+1: now is this good to go? :)\n. ",
    "jenky": "I see you have your own command `php artisan oauth2-server:create-client`. Why not create your own migration command instead of using `vendor:publish`, something like `php artisan oauth2-server:migrate`\n. I see you have your own command `php artisan oauth2-server:create-client`. Why not create your own migration command instead of using `vendor:publish`, something like `php artisan oauth2-server:migrate`\n. ",
    "JuanDMeGon": "Thanks alot! Very helpful for L5, save my time. IDK why it is not synced yet\n. Hello guys. Is this pull request will be merged in the repository? It seems to solve the issue. Thanks!\n. Thank you guys! Nice job @mstephens.\nBest wishes :+1: \n. Thanks alot! Very helpful for L5, save my time. IDK why it is not synced yet\n. Hello guys. Is this pull request will be merged in the repository? It seems to solve the issue. Thanks!\n. Thank you guys! Nice job @mstephens.\nBest wishes :+1: \n. ",
    "crisu83": "@lucadegasperi Fair enough. \n\nHow drastic changes would be required to use this library with Lumen?\n. It still seems that laravel is part of the required packages.\n. Oh sorry, must have been the cache. It seems to be fine now.\n. @lucadegasperi Fair enough. \n\nHow drastic changes would be required to use this library with Lumen?\n. It still seems that laravel is part of the required packages.\n. Oh sorry, must have been the cache. It seems to be fine now.\n. ",
    "mvdstam": "Can this be merged?\n. So, even Laravel 5 isn't doing proper semver? That's kinda silly. Minor version bumps shouldn't break backwards compatibility, especially with frameworks. That is kind of the whole point of _minor_ releases.\n. Alright, fair enough. Are there any plans to implement the JWT grant for this package, so I can implement OAuth 2.0 on web-based clients the \"correct\" way?\n. Thank you, @vinkla. I'll look into that and hope to see JWT support added soon. :smile: \n. Can this be merged?\n. So, even Laravel 5 isn't doing proper semver? That's kinda silly. Minor version bumps shouldn't break backwards compatibility, especially with frameworks. That is kind of the whole point of _minor_ releases.\n. Alright, fair enough. Are there any plans to implement the JWT grant for this package, so I can implement OAuth 2.0 on web-based clients the \"correct\" way?\n. Thank you, @vinkla. I'll look into that and hope to see JWT support added soon. :smile: \n. ",
    "stristr": "Hi @lucadegasperi, can this be merged? The failed checks should be re-run\u2014they were timing out but that wasn't because of the code.\n. Hi @lucadegasperi, can this be merged?\n. Hi @lucadegasperi, can this be merged? The failed checks should be re-run\u2014they were timing out but that wasn't because of the code.\n. Hi @lucadegasperi, can this be merged?\n. ",
    "finalight": "are there any guides for install this package on laravel 5.1, or is it the same?\n\ni notice that there might have some changes that we need to made for middle ware\n. ok thanks, i think i will wait for it though haha\n\nOn Thu, Jun 11, 2015 at 4:59 PM, Luca Degasperi notifications@github.com\nwrote:\n\n> It should work as it is right now but it isn't optimized to take advantage\n> of the new L5.1 feature, working on it though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/lucadegasperi/oauth2-server-laravel/pull/379#issuecomment-111050184\n> .\n. are there any guides for install this package on laravel 5.1, or is it the same?\n\ni notice that there might have some changes that we need to made for middle ware\n. ok thanks, i think i will wait for it though haha\n\nOn Thu, Jun 11, 2015 at 4:59 PM, Luca Degasperi notifications@github.com\nwrote:\n\n> It should work as it is right now but it isn't optimized to take advantage\n> of the new L5.1 feature, working on it though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/lucadegasperi/oauth2-server-laravel/pull/379#issuecomment-111050184\n> .\n. ",
    "GrahamCampbell": "Yeh, this commit is wrong.\n. Allowing use with all minor versions is a bad idea, as each minor laravel release is the same as a semver major release.\n. Yeh, the 4.0.1 tag needs deleting.\n. > I use the other ones on my local machine as I don't need reporting and stuff there.\n\nThey belong in a global ignore file.\n. :+1:\n. :-1:\n. This fix is incorrect imo. You should just update to use the container contract.\n. Yeh, this commit is wrong.\n. Allowing use with all minor versions is a bad idea, as each minor laravel release is the same as a semver major release.\n. Yeh, the 4.0.1 tag needs deleting.\n. > I use the other ones on my local machine as I don't need reporting and stuff there.\n\nThey belong in a global ignore file.\n. :+1:\n. :-1:\n. This fix is incorrect imo. You should just update to use the container contract.\n. ",
    "barryvdh": "Well, the release was already tagged so it's still a problem..\nhttps://packagist.org/packages/lucadegasperi/oauth2-server-laravel\n4.0.1 will allow all 5.x versions. So people using L5.2 and requiring 4.x of your package, will be able to get 4.0.1 instead of an error that no package is available.\n\nWhen a new release is made to support 5.2 (and 5.3 and 5.4 etc) it isn't a super big problem, but not really great.\nNot sure if it's easy to fix by re-tagging or something. (Which usually isn't a good idea either)\n. Doesn't matter, the tag remains available. Composer scans all tags to find a match, so 4.0.1 will always match, even if 4.0.2 etc don't.\n. Well, the release was already tagged so it's still a problem..\nhttps://packagist.org/packages/lucadegasperi/oauth2-server-laravel\n4.0.1 will allow all 5.x versions. So people using L5.2 and requiring 4.x of your package, will be able to get 4.0.1 instead of an error that no package is available.\n\nWhen a new release is made to support 5.2 (and 5.3 and 5.4 etc) it isn't a super big problem, but not really great.\nNot sure if it's easy to fix by re-tagging or something. (Which usually isn't a good idea either)\n. Doesn't matter, the tag remains available. Composer scans all tags to find a match, so 4.0.1 will always match, even if 4.0.2 etc don't.\n. ",
    "e3betht": "@lucadegasperi  - I'm not sure what you mean by a link to the bug. The checks that psecio-parse runs are listed in their Readme:\nhttps://github.com/psecio/parse\n\nWhen you run the psecio-parse tool, it gives a bit more explanation on it:\n\nLogicalOperators\nAvoid using AND, OR and XOR (in favor of || and &&) as they may cause subtle precedence bugs\n\nThis is based on the symbols having higher precedence than the word versions:\nhttp://php.net/manual/en/language.operators.precedence.php\n\nLet me know if this answers your question or if I misunderstood what you were looking for. \n\nAlso, Code Climate and Scrutinizer are both analysis tools, but they offer differences in the checks they provide and the information they give you. If you have a chance, I'd love for you to take a look at Code Climate and let me know what you think compared to Scrutinizer which you have already been using. \n. @lucadegasperi  - I'm not sure what you mean by a link to the bug. The checks that psecio-parse runs are listed in their Readme:\nhttps://github.com/psecio/parse\n\nWhen you run the psecio-parse tool, it gives a bit more explanation on it:\n\nLogicalOperators\nAvoid using AND, OR and XOR (in favor of || and &&) as they may cause subtle precedence bugs\n\nThis is based on the symbols having higher precedence than the word versions:\nhttp://php.net/manual/en/language.operators.precedence.php\n\nLet me know if this answers your question or if I misunderstood what you were looking for. \n\nAlso, Code Climate and Scrutinizer are both analysis tools, but they offer differences in the checks they provide and the information they give you. If you have a chance, I'd love for you to take a look at Code Climate and let me know what you think compared to Scrutinizer which you have already been using. \n. ",
    "robinvalk": "Ah yeah I missed that. Also the wiki etc can be updated to use  `::class` now the higher php version is required.\n. Created an issue for the convenience: #415\n. Ah yeah I missed that. Also the wiki etc can be updated to use  `::class` now the higher php version is required.\n. Created an issue for the convenience: #415\n. ",
    "mathiasgrimm": "the reason I did this is because when i migrated from laravel 4 to laravel 5 I had to migrate this package as well. So I created migrations to drop the old oauth tables and installed the new package from scratch. When I published the vendor the migrations got a date prior to my migrations and then when I tried to migrate migrations failed because tried to create the tables before my drop tables.\n. actually there is a problem yet. will fix and send it again\n. Will split.\n\nTo be honest I don't think the way laravel does is the best way.\n\nIn the case of Oauth I had to rename manually 14 files, nobody deserves this, specially when the laravel ecosystem dictates that programming should be a pleasure.\n\nThere is no harm in this approach and sort some edge cases as well.\n\nCould you point any cons? \n. ready to go!!\n. the typo fix is in another PR that i submitted, and is in this PR as well, should be no problem\n. But doest not solve the problem.\n\nAll the migrations will likely be executed before any other migration.\nIn my case I migrated from L4 to L5 and had to drop all oauth tables so I had a migration\n2015_06_05_123143_delete_oauth_tables.php\nand all the oauth migrations were 2015_01_01_\\* which the `php artisan migrate` tried to execute before my migration and therefore caused lots of problems because the tables existed.\n\nMy PR solves completely this problem and gives a name based on the migration pattern which is  date('Y_m_d_His');\n\nBy doing this people don't have to be concerned about the migrations order/name anymore.\nPlug and Play!\n\nJust to clarify, I was using this oauth2-server-laravel package in version 1, so when migrating to L5 I changed to the most recent stable release, which has database changes.\n. Ok, will send the PR firs to laravel.\nThanks\n. https://github.com/laravel/framework/issues/9232\n. ok\n. Thank you.\n\nPlease take a look on my other PR https://github.com/lucadegasperi/oauth2-server-laravel/pull/423\n. the reason I did this is because when i migrated from laravel 4 to laravel 5 I had to migrate this package as well. So I created migrations to drop the old oauth tables and installed the new package from scratch. When I published the vendor the migrations got a date prior to my migrations and then when I tried to migrate migrations failed because tried to create the tables before my drop tables.\n. actually there is a problem yet. will fix and send it again\n. Will split.\n\nTo be honest I don't think the way laravel does is the best way.\n\nIn the case of Oauth I had to rename manually 14 files, nobody deserves this, specially when the laravel ecosystem dictates that programming should be a pleasure.\n\nThere is no harm in this approach and sort some edge cases as well.\n\nCould you point any cons? \n. ready to go!!\n. the typo fix is in another PR that i submitted, and is in this PR as well, should be no problem\n. But doest not solve the problem.\n\nAll the migrations will likely be executed before any other migration.\nIn my case I migrated from L4 to L5 and had to drop all oauth tables so I had a migration\n2015_06_05_123143_delete_oauth_tables.php\nand all the oauth migrations were 2015_01_01_\\* which the `php artisan migrate` tried to execute before my migration and therefore caused lots of problems because the tables existed.\n\nMy PR solves completely this problem and gives a name based on the migration pattern which is  date('Y_m_d_His');\n\nBy doing this people don't have to be concerned about the migrations order/name anymore.\nPlug and Play!\n\nJust to clarify, I was using this oauth2-server-laravel package in version 1, so when migrating to L5 I changed to the most recent stable release, which has database changes.\n. Ok, will send the PR firs to laravel.\nThanks\n. https://github.com/laravel/framework/issues/9232\n. ok\n. Thank you.\n\nPlease take a look on my other PR https://github.com/lucadegasperi/oauth2-server-laravel/pull/423\n. ",
    "lukasoppermann": "When will this be released? Could you do it now? Every time I update composer in my lumen project I get all the yellow stuff. :)\n. When will this be released? Could you do it now? Every time I update composer in my lumen project I get all the yellow stuff. :)\n. ",
    "SArnab": "@vinkla I'm not entirely sure how to go about this using rebase. The initial change was made on a separate branch, merged into master, after which the the style fixes were applied. The relevant commits are fe24216 and 22f3b09. \n. @vinkla I'm not entirely sure how to go about this using rebase. The initial change was made on a separate branch, merged into master, after which the the style fixes were applied. The relevant commits are fe24216 and 22f3b09. \n. ",
    "pashamesh": "There is `setRequireClientSecret` method for `RefreshTokenGrant` already:\nhttps://github.com/thephpleague/oauth2-server/blob/master/src/Grant/RefreshTokenGrant.php#L94\n\nall needed to implement unnecessary `client_secret` is to add something like:\n\n``` php\nif (array_key_exists('require_client_secret', $grantParams)) {\n    $grant->setRefreshTokenRotation($grantParams['require_client_secret']);\n}\n```\n\nto the foreach in `boot` method of `OAuth2ServerServiceProvider.php`\n. There is `setRequireClientSecret` method for `RefreshTokenGrant` already:\nhttps://github.com/thephpleague/oauth2-server/blob/master/src/Grant/RefreshTokenGrant.php#L94\n\nall needed to implement unnecessary `client_secret` is to add something like:\n\n``` php\nif (array_key_exists('require_client_secret', $grantParams)) {\n    $grant->setRefreshTokenRotation($grantParams['require_client_secret']);\n}\n```\n\nto the foreach in `boot` method of `OAuth2ServerServiceProvider.php`\n. ",
    "joaopramos": "I now squashed the commits.\n. I now squashed the commits.\n. ",
    "olegmelnik": ":+1: \n. :+1: \n. ",
    "dongkaipo": "I can still get this error in the new version.How can i fix it?\n When i use`dingo-api` to auth by `oauth2-server-laravel` i will get an error `Call to undefined method Closure::authenticate()` . \nAnd my colleagues will need this service, ORZ.....\nCan anybody help me? Thanks! :)\n\n![1](https://cloud.githubusercontent.com/assets/1720338/10914123/f808193c-828b-11e5-953e-96c09e39243c.png)\n\n![2](https://cloud.githubusercontent.com/assets/1720338/10914058/a11ac7fa-828b-11e5-86ee-0198290b5ca4.png)\n\n![3](https://cloud.githubusercontent.com/assets/1720338/10914060/a1b38e86-828b-11e5-8779-9f3b20aa48cb.png)\n. @vinkla thanks, it work now :)\n. @vinkla thanks , but i get another error (https://github.com/dingo/api/issues/710) . I don`t know where the error configure\n. @vinkla i delete all files and reinstall it , it work.\n. I can still get this error in the new version.How can i fix it?\n When i use`dingo-api` to auth by `oauth2-server-laravel` i will get an error `Call to undefined method Closure::authenticate()` . \nAnd my colleagues will need this service, ORZ.....\nCan anybody help me? Thanks! :)\n\n![1](https://cloud.githubusercontent.com/assets/1720338/10914123/f808193c-828b-11e5-953e-96c09e39243c.png)\n\n![2](https://cloud.githubusercontent.com/assets/1720338/10914058/a11ac7fa-828b-11e5-86ee-0198290b5ca4.png)\n\n![3](https://cloud.githubusercontent.com/assets/1720338/10914060/a1b38e86-828b-11e5-8779-9f3b20aa48cb.png)\n. @vinkla thanks, it work now :)\n. @vinkla thanks , but i get another error (https://github.com/dingo/api/issues/710) . I don`t know where the error configure\n. @vinkla i delete all files and reinstall it , it work.\n. ",
    "lukepolo": "Great, been waiting for this\n. Great, been waiting for this\n. ",
    "whitefoxy": "Waiting for it!\n. @vinkla Check this link https://github.com/thephpleague/oauth2-server/pull/391\n\n> In terms of https://tools.ietf.org/html/rfc6749, since v2-16,\n> PasswordGrant and RefreshGrant are no longer require client secret validation\n> by default. Pleaseread section 4.3.1 and section 6.\n. @vinkla **alexbilbie** has added it to the code. https://github.com/thephpleague/oauth2-server/pull/391\n. Waiting for it!\n. @vinkla Check this link https://github.com/thephpleague/oauth2-server/pull/391\n\n> In terms of https://tools.ietf.org/html/rfc6749, since v2-16,\n> PasswordGrant and RefreshGrant are no longer require client secret validation\n> by default. Pleaseread section 4.3.1 and section 6.\n. @vinkla **alexbilbie** has added it to the code. https://github.com/thephpleague/oauth2-server/pull/391\n. ",
    "Utwo": "Any news on this?\n. Any news on this?\n. ",
    "smgom": "Hi, Can I find documentation that needed to integrate?\n. Thanks for the reply, but where is \"How to use\"? Can you provide me its link.\n. Yeah, Thanks I was able to use it, But there is one problem, How can I make oauth work like, first I request for code using redirect_url then on the redirect url I get code and from that code I get access token. I now can get access_token directly from client_id and client secret? \n. Hi, Can I find documentation that needed to integrate?\n. Thanks for the reply, but where is \"How to use\"? Can you provide me its link.\n. Yeah, Thanks I was able to use it, But there is one problem, How can I make oauth work like, first I request for code using redirect_url then on the redirect url I get code and from that code I get access token. I now can get access_token directly from client_id and client secret? \n. ",
    "pengkong": "Use this repo instead https://github.com/pengkong/laravel-mongodb\nsee: http://snippets.khromov.se/composer-use-your-own-fork-for-a-package/\nAnd follow the \"How to use\" above.\n. scroll up. first comment.\n. read and follow: https://github.com/lucadegasperi/oauth2-server-laravel/tree/master/docs\n\nTo quickly answer your question \"can get access_token directly from client_id and client secret?\"\nYes, you can. That's called \"client_credentials\" grant type. See: https://github.com/lucadegasperi/oauth2-server-laravel/blob/master/docs/authorization-server/client-credentials.md\n\nIf you need specific help on usage of https://github.com/lucadegasperi/oauth2-server-laravel a better place to ask would be https://github.com/lucadegasperi/oauth2-server-laravel/issues or http://stackoverflow.com/search?q=oauth2-server-laravel\n. Use this repo instead https://github.com/pengkong/laravel-mongodb\nsee: http://snippets.khromov.se/composer-use-your-own-fork-for-a-package/\nAnd follow the \"How to use\" above.\n. scroll up. first comment.\n. read and follow: https://github.com/lucadegasperi/oauth2-server-laravel/tree/master/docs\n\nTo quickly answer your question \"can get access_token directly from client_id and client secret?\"\nYes, you can. That's called \"client_credentials\" grant type. See: https://github.com/lucadegasperi/oauth2-server-laravel/blob/master/docs/authorization-server/client-credentials.md\n\nIf you need specific help on usage of https://github.com/lucadegasperi/oauth2-server-laravel a better place to ask would be https://github.com/lucadegasperi/oauth2-server-laravel/issues or http://stackoverflow.com/search?q=oauth2-server-laravel\n. ",
    "marcorivm": "@vinkla \nThe problem with this is that when you are working along with other packages, which is fairly common, by running the command without the --provider option, you are effectively publish all the other packages files, potentially introducing noise and junk for the user. For inexperienced users this might prove confusing.   \n. @vinkla \nThe problem with this is that when you are working along with other packages, which is fairly common, by running the command without the --provider option, you are effectively publish all the other packages files, potentially introducing noise and junk for the user. For inexperienced users this might prove confusing.   \n. ",
    "hannesvdvreken": "No problem. Thanks for the heads up.\n. No problem. Thanks for the heads up.\n. ",
    "tralves": "Thanks. That was my first approach on this. But then I wondered why didn't this break even more packages.\n\nAfter digging through some popular and even Illuminate projects, I saw that everyone just uses `$this->app` everywhere in their providers.\n\nI think I understand your point: people should just start using the Container contract, right?\n. I think it's ok. \n#645 also makes a tiny fix in a test docblock in `tests/functional/bootstrap/FeatureContext.php`.\n. Thanks. That was my first approach on this. But then I wondered why didn't this break even more packages.\n\nAfter digging through some popular and even Illuminate projects, I saw that everyone just uses `$this->app` everywhere in their providers.\n\nI think I understand your point: people should just start using the Container contract, right?\n. I think it's ok. \n#645 also makes a tiny fix in a test docblock in `tests/functional/bootstrap/FeatureContext.php`.\n. ",
    "jeffberry": "Please take a look at #645, let's git a fix merged in so we can all keep workin!\n. Please take a look at #645, let's git a fix merged in so we can all keep workin!\n. ",
    "mrgswift": "@mstephens Great! Thanks!  \n. @mstephens Great! Thanks!  \n. ",
    "mstephens": "PS. If you're now using Middleware groups, make sure this Middleware is the first in your list :]\n. @vinkla, sure there you go\n. ```\n\"lucadegasperi/oauth2-server-laravel\": \"5.1.*\",\n```\n\nOf your composer.json file\n. PS. If you're now using Middleware groups, make sure this Middleware is the first in your list :]\n. @vinkla, sure there you go\n. ```\n\"lucadegasperi/oauth2-server-laravel\": \"5.1.*\",\n```\n\nOf your composer.json file\n. ",
    "cesar-garay": "@mstephens That works fine for me, Thanks so much!!\n. @mstephens That works fine for me, Thanks so much!!\n. ",
    "aninditkarmakar": "When is this commit going to appear in a release? I desperately need this fix in my application. Currently I am using the latest 5.1.3 release and this merge happens after that. :/\n. When is this commit going to appear in a release? I desperately need this fix in my application. Currently I am using the latest 5.1.3 release and this merge happens after that. :/\n. ",
    "oflannabhra": "I'm using v `5.1.4` with Lumen 5.2 and am still having some issues with `grant_type => password`. \n\n[This section](https://github.com/lucadegasperi/oauth2-server-laravel/blob/master/docs/authorization-server/password.md) of the documentation suggests that the `callback` should use `Auth::once()` to check if a request has the proper credentials. \n\nWith the changes to `Authorization` in Laravel / Lumen, `Auth::validate()` requires access to a `$request`, however, the `callback` does not receive a `Request $request` variable. Anyone able to give some direction here?\n\n#654 \n. I'm using v `5.1.4` with Lumen 5.2 and am still having some issues with `grant_type => password`. \n\n[This section](https://github.com/lucadegasperi/oauth2-server-laravel/blob/master/docs/authorization-server/password.md) of the documentation suggests that the `callback` should use `Auth::once()` to check if a request has the proper credentials. \n\nWith the changes to `Authorization` in Laravel / Lumen, `Auth::validate()` requires access to a `$request`, however, the `callback` does not receive a `Request $request` variable. Anyone able to give some direction here?\n\n#654 \n. ",
    "jbrooksuk": "No problem! :)\n. No problem! :)\n. ",
    "heisian": "great, and thank _you_ guys for this wonderful package. \ud83d\udc4d \n. great, and thank _you_ guys for this wonderful package. \ud83d\udc4d \n. ",
    "ManassehZhou": "why not make the redirectUri gettable in all these situations?\nor can i make that available?\n@vinkla \n. Havn't checked yet?\n. why not make the redirectUri gettable in all these situations?\nor can i make that available?\n@vinkla \n. Havn't checked yet?\n. ",
    "PhilKershaw": "@vinkla Seriously dude, 1 test failed and that test was for code style. Updated.\n. @vinkla Seriously dude, 1 test failed and that test was for code style. Updated.\n. ",
    "blakemckeeby": "Styling updated.  \n. Styling updated.  \n. ",
    "mixnetworks": "Can I get an update on this? \n. Can I get an update on this? \n. ",
    "rockymontana": "Deleted two empty lines to satisfy StyleCI\n. Deleted two empty lines to satisfy StyleCI\n. ",
    "od3n": "> Thanks for your pull requests but this is just a syntax update right?\n\nyes\n\n> Doesn't change behaviour?\n\nno\n. > Thanks for your pull requests but this is just a syntax update right?\n\nyes\n\n> Doesn't change behaviour?\n\nno\n. ",
    "kfuchs": "Laravel Passport also still has some short comings. For instance, the client ids are auto-incrementing numbers with no easy way to work around.. Laravel Passport also still has some short comings. For instance, the client ids are auto-incrementing numbers with no easy way to work around.. ",
    "robclancy": "We still use this because when we migrate to passport or other we will be doing a bunch of other authentication work and it isn't a priority right now. This package was dropped so fast after passport the author seemed to be either annoyed or just wanted out.\r\n\r\nEither way we will support https://packagist.org/packages/postedin/oauth2-server-laravel with bug fixes and Laravel updates until we migrate away from it.. We still use this because when we migrate to passport or other we will be doing a bunch of other authentication work and it isn't a priority right now. This package was dropped so fast after passport the author seemed to be either annoyed or just wanted out.\r\n\r\nEither way we will support https://packagist.org/packages/postedin/oauth2-server-laravel with bug fixes and Laravel updates until we migrate away from it.. "
}