{
    "aFarkas": "fixed for 1.0.0beta2\n. add mousewheel support, too\n. The feature-keywords are:\nes5, json-storage, geolocation, canvas, forms. forms-ext\n\nthe profiles-keywords are:\n-lightweight (FF4 doesn't has to load anything. everything is included, except forms-ext)\n-xlightweight (FF4 and IE9 doesn't have to load anything, everything is included except of forms and forms-ext)\n\nIf you have a suggestion how and where I should document this. Currently, it is documented in the several feature description.\n. It would be possible to make the documentation clearer by listing and describing every method by itself with examples, like in the jQuery docs: http://api.jquery.com/jQuery.ajax/\n. You find an example [here](afarkas.github.io/webshim/demos/demos/webforms/3-webforms-widgets.html#date-cfg).\n\nIt's quite simple. If you use positive margin-left styles for the buttons, they are positioned outside. Webshims detects this an will adjust the width calculation autmatically:\n\n```\n.input-buttons.date-input-buttons {\n    margin-left: 2px;\n}\n```\n\nPlease let me know wether this helps.\n. This is in general explained [here](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions)\n\nSo you can write:\n\n```\n$('input').prop('disabled', true);\n```\n\nor with declarative:\n\n```\n<input type=\"number\" disabled />\n```\n\nI guess you tryed:\n\n```\ninput.disabled = true;\n```\n\nWhich is quite hard to implement x-browser. The interesting part of webshims is indeed, that I do not try to invent a new abstraction layer. I simply use jQuery  build in methods and extend those. Especially this makes webshims so special over all shims, which implement new abstractions and therefore have to be loaded in all browsers.\n. don't implement forminput (depreacated)\n. aria-required can be too much a11y. aria-invalid is a must have.\n. fixed for version 1.0.0beta2\n. wait for modernizr 2.0\n. Yes, I have already started to work on this. Due to the fact, that I will change a lot here, it might take a little bit. But I will remove the UI widgets and will write those widgets myself, so they better fit, to HTML5 input elements (performance). I will leave a lot of features, like display multiple months to let you also improve the widgets over the native ones.\n. should be another project\n. it wasn't date-validation it was jQuery's focus method.\n. https://bugs.webkit.org/show_bug.cgi?id=27247\nhttps://docs.google.com/View?id=dch3zh37_0cf8kc8c4&pli=1\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#dom-input-selectedoption\n. createPattern with images isn't supported by excanvas (third party script). I will look wether a newer version can be used here. (Note: I'm using the latest official download version, but there were some changes since then.) You can also fill a bug @ http://code.google.com/p/explorercanvas/issues/list\n. The new version of excanvas has this. I have updated to this version and it will be in the next release of webshim.\n. @codler\nWhich kind of error do you mean? (There are 3 types). If the user denies a geo-lookup, we should respect this decision.\n\nIn other cases, I could implement this behavior, but this needs a configuration (extendNativeGeolocation or something similiar). webshims lib normally does not load a polyfill if native support is detected.\n. Sorry, but I won't recieve geolocation data, after the user has expressly rejected this behavior.\n. Hi,\n\ncan you give me a hint, which browser produces this error? I guess Opera 10-?\n\ncheers\n. Ok, interesting I cannot reproduce this. Is this on the normal demo site? \n\nBut I don't see a compatibility issue, if I add your change.\n\nAnd BTW.: Actually, creating a placeholder polyfill seems to be really easy, but it's more difficult, like valueAsNumber...\n\nPlease also note, that the webshims pre1.5 version is far away from beeing production ready. The version 1.2.3 is quite stable, but I don't like the way some parts work.\n. patch was included\n. 1. helping out\n   This is extremley cool. I will write something about this. \n\nI count you in!!! :-)\n1. Placeholder\n   Technically it is possible, but it's not really my intention/suggestion. webshims feature are already balanced in filesize-/feature. And the placeholder is looked as a module of the form feature. The best way is to add a new polyfill, pointing to the old polyfill:\n   \n   ```\n   //add a new feature called formplaceholder\n   $.webshims.addPolyfill('formplaceholder', {\n           //point the implementation source to the standard placeholder-feature\n           src: 'form-placeholder',\n           //load this polyfill, if placeholder is not supported and the standard placeholder is not loaded\n           test: function(list){\n                return ($.inArray('form-placeholder', list) != -1 || Modernizr.input.placeholder);\n           },\n           //load dom-extend, if needed\n           dependencies: ['dom-extend']\n   });\n   //load only placeholder with dependendcies\n   $.webshims.polyfill('formplaceholder');\n   ```\n\nNote: The new polyfill 'formplaceholder' will still get his configuration from the 'forms-feature'. If you want to change the configuration for the placeholder. Currently only one config-option (use overlabel for all inputs), you have to set the options for the forms - feature:\n\n```\n$.webshims.setOptions('forms', {\n    placeholderType: 'over'\n});\n```\n. https://bugzilla.mozilla.org/show_bug.cgi?id=634004\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=591737\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-details-element\n. thanks\n. This project currently has only 26 watchers, so a little bit noise is very welcome. If you have any problems, ideas, suggestions ... please let know.\n\nIf you have made nice translations: They are welcome, too.\n. Omg, thanks!!! This is so awsome, my english is extremly bad. I will only make one change regarding to the patternMismatch message. From specification: \n\n\"... authors should include a title attribute to give a description of the pattern. User agents may use the contents of this attribute, if it is present, when informing the user that the pattern is not matched, ...\" (http://www.w3.org/TR/html5/common-input-element-attributes.html#the-pattern-attribute)\n\nAnd this is the way FF4 and Opera is doing.\n\nIf you want to compare your validation messages with your browsers messages. You can have a look @ http://jsfiddle.net/trixta/DaDav/\n. I already had this feature (https://github.com/aFarkas/webshim/blob/8ba5d377d6ab3691328c917dd59fa0bfcc7b7ddf/src/polyfiller.js#L403), but I made some performance tests and saw, that the performance gain is only significant in IE6 and IE7. IE8+, FF3.6+ Safari5+ etc. would not benefit from the extra code (increased filesize), so I removed this. But I know this feature request will come some day.\n\nWhat do you think, if I would write a plugin which adds this feature, instead of adding this feature directly into webshims polyfiller.js.\n. aditionally, I talked with some developers in my company about this and they had the fear, that such a feature can simplify DOS attacks\n. I will add this with next version.\n. Hi,\n\nI have now implemented combohandler generation and pushed this to master a short description is also on the index.html of demos. Could you please look, wether the configuration-possibilities are fine with your combohandler service?\n\ncheers\nalex\n. Thanks, I do see two errror here, but not what you mentioned. I will fix those and explain, how this works. I wanted to solve this. It would be great, if you would look, how we can improve documentation.\n. Ok, before I start to fix the issues here some short informations, how it should work:\n1. the customMessage approach (has a minor error see workaround below):\n       $.webshims.setOptions('forms', {customMessages: true});\n       $.webshims.activeLang('zh');  \n       $.webshims.polyfill('forms');\n       $(document).bind('firstinvalid', function(e){\n           $.webshims.validityAlert.showFor( e.target, $(e.target).attr('customValidationMessage'));\n           return false;\n       });\n2. the overrideMessages approach:\n       $.webshims.setOptions('forms', {overrideMessages: true});\n       $.webshims.activeLang('zh');  \n       $.webshims.polyfill('forms');\n\nDue to the fact, that I have moved activeLang from polyfiller.js to dom-extend.js, both approaches will throw an error. The second approach currently only works initially, what is not nice.\n\nHere is how you would do it, with webshims lib 1.5.2:\n        $.webshims.setOptions('forms', {customMessages: true});\n        $.webshims.ready('dom-extend', function(){\n            $.webshims.activeLang('zh');  \n        });\n        $.webshims.polyfill('forms');\n        $(document).bind('firstinvalid', function(e){\n            $.webshims.validityAlert.showFor( e.target, $(e.target).attr('customValidationMessage') );\n            return false;\n        });\n\nTo make the validityMessages bullet proof, you should write something like this:\n        $.webshims.validityMessages.zh = $.extend(true, {}, $.webshims.validityMessages[''], {\n            valueMissing: '\u8bf7\u586b\u5199\u6b64\u5b57\u6bb5\u3002'\n            ,typeMismatch: {\n                email: '\u8bf7\u8f93\u5165\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002'\n            }\n        });\n\nAdditionally, I see some other problems in your code, regarding to $('body').fadeIn(); Am I right, that you are doing this, to remove FOUCs?\n. Ok, I have fixed the issues and pushed them to the master-branch.\n. About the red outline: This is absolutly ok and well stupid. This is a feature of [CSS3 UI module](http://www.w3.org/TR/css3-ui/#pseudo-invalid) and doesn't have to do with webshims lib. You can simply remove this with box-shadow: none. Note that you should also set the border, the background-color and the color. Here is how you could do it:\n        /\\* remove native invalid styles */\n        :invalid {\n            box-shadow: none;\n            border: 1px solid #000;\n            background: #fff;\n            color: #000;\n        }\n\nFF4 adds some nice extra selector, which do the job better this is called: [:-moz-ui-invalid](https://developer.mozilla.org/en/CSS/%3A-moz-ui-invalid). Webshims also adds some extra class, which behave similiar to -moz-ui-invalid (.form-ui-invalid).\n\nSo your style could look, like this:\n        /\\* remove native invalid styles */\n        :invalid {\n            box-shadow: none;\n            border: 1px solid #000;\n            background: #fff;\n            color: #000;\n        }\n\n```\n    //add invalid style for FF4\n    :-moz-ui-invalid {\n        //invalid style\n    }\n\n    //add invalid style for all browsers\n    :-moz-ui-invalid {\n        //invalid style\n    }\n```\n. About the $('body').fadeIn()-Thing:\n\nYou do move your JS at the bottom. Moving JS at the bottom doesn't make loading the whole page faster. Putting JS at the bottom means: Load JS as slow as possible, to reduce the time, where the user doesn't see the page loading (white page). The problem is, that this also causes FOUCs. In your case you hide the whole page and make it visible with JS, which means, the white page loading isn't decreased, it will be increased. This means: You should, put your JS at the top!\n\nAnother thing here is:\n1. Don't rely on JS\n2. Don't hide with display: none (because, this can create some strange issues, if you are using JS)\n\nMy CSS-Code for this (The .js-Class comes with Modernizr):\n\n```\n    .js body {\n        visibility: hidden;\n    }\n```\n\nMy suggested JS Code:\n\n```\n    $(function(){\n        $('body')\n            .css({opacity: 0, visibility: 'visible'})\n            .fadeTo(400, 1)\n        ;\n    });\n```\n\nOne question: I have written, that a developer should prefer 'customMessages' over 'overrideMessages', why did you use overrideMessage? (As you see I'm not really happy with this.)\n. Hi,\n\nI'm not sure, but if you see the following behavior:\n- try to submit\n- submit is aborted\n- first invalid field is focused\n- no error UI\n\nThis is a known bug in old webkit (includes also Safari 5.0.1, but not Safari 5.0.2 and not Safari 4.x). \n\nI decided some time, that I don't fix this bug anymore (you can only do this with browser sniffing + is test intensive), because of the non-existent marketshare of those webkit versions.\n\nWhy are you testing those browsers, is supporting chrome 7 needed???\n. Ok, I have fixed this on my local machine, but needs some extra tests. Only to make my statement above clear. It was a small issue on a browser with very small marketshare and I take x-browser testing very seriously.\n\nThis was the list of browsers, which I did actively test:\n- FF final/latest (4.0)\n- FF -1 (3.6)\n- FF fixed @ 3.0 (no localStorage in Mozilla test)\n- IE6\n- IE7\n- IE8\n- IE9\n- Safari - 1 (4.x)\n- Safari final/latest (5.0.4)\n- Safari for latest iOS (4.3.1)\n- Safari nightly\n- Chrome dev (currently 11)\n- Chrome final (10)\n- Chrome fixed @ 10 (has almost everything right, but one small issue, which has to be browser sniffed)\n- Opera final (11.01)\n- Opera -1 (10.54)\n\nand now I got a new browser to test with each release:\n- Safari fixed to 5.0.1\n\nAlthough, I'm working with a testsuite, this huge list makes it really hard to push a new release.\n. I have fixed, only because I saw, that someone is trying, so this bothers me. I only wanted to make clear, that I already do a lot of x-browser testing and due to the fact, that HTML5 features are really differntly supported, it's really hard, to make it really really good. Now it is fixed (the testsuite already showed, that this fails) and now I have setup my vm using another Webkit version.\n. Is there an error in your JS console? Have you included Modernizr? Do you have a testpage? (You can send me message too.)\n\nI will look tomorrow, wether I can try, to create testcase using modernizr.\n. Hi,\n\nI have tryed to create a testcase using the newest version. And everything works fine. \n\nThis is my JS inside of the head:\n\n```\n    <script src=\"../js-webshim/minified/extras/modernizr-1.7.min.js\"></script>\n    <script src=\"yepnope.1.0.1-min.js\"></script>\n```\n\nAnd this is my implementation Code at the bottom (although, I think you shouldn't include this at bottom):\n\n```\nyepnope([\n    'http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js',\n    {\n        load: '../js-webshim/minified/polyfiller.js',\n        complete: function(){\n            $.webshims.setOptions('forms', { customMessages: true, textareaPlaceholder: true}); \n            $.webshims.loader.basePath = \"../js-webshim/minified/shims/\"\n            //load all defined\n            //or load only a specific feature with $.webshims.polyfill('feature-name');\n            $.webshims.polyfill('forms-ext');\n        }\n    }\n]);\n```\n\nI really need more info (best some code) to help you.\n\ncheers\nalex\n. @bbabics\nI would like to create a new release and want this issue to be fixed. Please could provide a testcase and still can't reproduce this. If you cannot generate a simple testcase, I will close this bug report. You are free to open a new one as soon as you can add more information/ reproducable testcase\n\ncheers \nalex\n. Yes, this is still an issue. valueAsNumber, willValidate validity, validationMessage are properties, there is no content attribute. In current webshims, you have to use attr in future webshims you have to use prop for this. \n\nIn case of required, you can choose, what you want and in case of novalidate, you have to use attr.\n\nI'm working on this. Currently half of the testsuite is running, the other half, will be done in next 2 weeks. My \"internal release date\" is 06.06.11 for a jQuery 1.6.1 compatibel version. This version won'T be compatible with old jQuery, but won't have any new features at this date.\n. @GeekyMonkey\n\nNo need to revert your project. I will try to release 1.6.3 today (not compatible with jQuery 1.6.1) and then I will merge my jQuery 1.6.1 compatible branch into the master branch and push it to the rmeote repository. My hope is, that I get all unit tests pass in all tested browsers today and then to make a release for the jQuery 1.6.1 compatible version on sunday/monday.\n\nI will close this bug, if all tests do pass and this version is available in the remote repo. This can be your time, to make your own tests with this version.\n. I have now pushed the new version to remote/master, but had no time to test all browsers. I noticed some minor issues in IE9 using $(element).val(undefined/null); + one issue with Safari5 and Opera 11 regarding select[required]. In FF4 and Chrome 12 everything seems to be fine.\n\nI haven't updated everything in the demos, so some examples might not work, although everything is implemented right.\n\nIE8/7/6, FF3.x and Safari4 are untestet.\n. All tests now pass in all browsers. only documentation/demos and [custom-validity script](https://github.com/aFarkas/webshim/blob/master/demos/js-webshim/dev/extras/custom-validity.js) has to be updated. \n\nIf you have still issues with google maps and IE9, let me know. I will need a testcase, then.\n. thanks\n. Is your input element inside of a form element?\n. If your input element was outside of a form element. webshims lib 1.6.1 won't validate it. I have changed this with version 1.6.2RC1. I have pushed this version to master and testet it with all supported browser, so it's good to use. Can you confirm, that your problem is solved with version 1.6.2RC1?\n. The line:\n\n```\nif (elem.validity.patternMismatch) { message = $(elem).data('patternmessage') || elem.validationMessage };\n```\n\nis from your script? If yes, you should change this to the following:\n\n```\nif ($(elem).attr('validity').patternMismatch) { message = $(elem).data('patternmessage') || $(elem).attr('validationMessage') };\n```\n\nWebshims lib has never supported direct access to the attributes, because it is very hard to implement real/native crossbrowser DOM-getters/-setters. see also the [documentation about our minor abstractions](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions). All polyfills which try to do this are not save to use.\n\nAlso Note, that you can \"implement\" customValidationMessages. With the following lines:\n\n```\n$.webshims.setOptions('forms', { customMessages: true });\n$.webshims.polyfill('forms');\n```\n\nAnd then use:\n\n```\n<input data-errormessage=\"errormessage\" type=\"email\" />\n\n$(elem).attr('customValidationMessage');\n```\n\nThere are a lot ways to manipulate the errormessages. You find more information in documentation [here](http://afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html)\n. You are right about this issue and it is save to use (not only with chrome). I have tryed to implement the spec very accurate. An older version of the spec sayed, that the element has to \"actively\" associated with a form. The current says, that all elements that are listed form-associated elements and are not barred from validation should be validated. FF4 and Opera11 also support this, so no problem :-).\n. BTW.: your issue is now part of the testsuite: https://github.com/aFarkas/webshim/commit/5d64ce456d309f79735f6257a7ade5e0b480f921#tests/index.html\n. I close this bug, because, I think your code works with the following line?:\n\n```\nif ($(elem).attr('validity').patternMismatch) { message = $(elem).data('patternmessage') || $(elem).attr('validationMessage') };\n```\n\nIf not, please reopen.\n. Honestly, this is not my codestyle. I used to this in past, but from my experience the possibility to forget a \",\" and create unintended globals is higher.\n\nIf you do this for simple filesize optimization. Most script minifiers like closure compiler [already do this automatically](https://github.com/aFarkas/webshim/blob/master/demos/js-webshim/minified/extras/loaders/sssl.js).\n. No, \"2011-06-15 18:40:41\" is not a valid datetime-local format. webshims lib has not implemented value sanitation yet, so we show something here (If we would have added value sanitation the value of the control would be an empty string). \n\nA valid datetime-local format would look like this:  \"2011-06-15T18:40:41\". \n\nIf you want to use datetime-local with seconds, you also have to modify the step attribute, because the default step for datetime-local is 60 and the stepScaleFactor is 1000 (1 Minute).\n\n```\n<input type=\"datetime-local\" step=\"1\" value=\"2011-06-15T18:40:41\" />\n```\n\nDoes this answer your question?\n. You mean inside of the webshims polyfill? If you want to implement it your own, there is already a part where you can hook in. It should be implemented together with the UI. And there is some code which trys to reflect the value and checks, wether it can be parsed. @ https://github.com/aFarkas/webshim/blob/master/src/shims/form-number-date.js#L809 you find the code for the date module. It looks like this:\n\n```\nvalue: function(orig, shim, value){\n    if(!replaceInputUI.date.blockAttr){\n        try {\n            var dateValue = $.datepicker.parseDate('yy-mm-dd', value);\n        } catch(e){var dateValue = false;}\n\n        if(dateValue){\n            lazySetDate($(shim), dateValue);\n        } else {\n            $.prop(shim, 'value', value);\n        }\n    }\n}\n```\n\nIf you would change this to:\n\n```\nvalue: function(orig, shim, value){\n    if(!replaceInputUI.date.blockAttr){\n        try {\n            var dateValue = $.datepicker.parseDate('yy-mm-dd', value);\n        } catch(e){var dateValue = false;}\n        if(dateValue){\n            lazySetDate($(shim), dateValue);\n        } else {\n            //if we can not parse set the shim to an empty string\n            $.prop(shim, 'value', '');\n            if(value){\n                replaceInputUI.date.blockAttr = true;\n                $.prop(orig, 'value', '');\n                replaceInputUI.date.blockAttr = false;\n            } \n        }\n    }\n}\n```\n\nYou would have added basic value sanitation for the date-input.\n. Yes, thanks. Actually the script works, but the tests does test the wrong thing. \n\nAria-attributes should be removed (=undefined), but some IE 8 do return an empty string in this case, which is strange. I will change the check with strictEquals to a simple equals. It would be problematic, if the result would be the string \"false\"/\"true\" or \"list\"\n. Hi jab,\n\nthis is a pure chrome issue (currently not in stable, so no bi problem). I created an [issue for this bug](http://code.google.com/p/chromium/issues/detail?id=89454). Webshims lib can not fix this. There are only two workarounds:\n1. remove the CSS, which triggers the bug (position: relative on body in your case).\n2. replace the native validation ui, with the your own or with webshims build in validation ui (last should be the easiest way)\n\nbut I'm pretty sure tkent will fix this issue, before the bug goes into the beta/final branch.\n. some quick notes:\n1. About position: relative. This seems to be added by googles translate service\n2. Your configuration is right and in my testcase everything works fine, but I will look into this inside of your demo.\n3. wrong positioning of webshims error bubble in case of body relative + top/left: I will fix this very soon.\n. I have fixed the mispositioning done by webshims lib. So this should work now with the newst version. Could you please test? If you have any problems it would be great to see them on the livepage to test against.\n\nThanks for your bugreport.\n. Thanks again, for your bugreport. I have fixed this issue with my [latest commit](https://github.com/aFarkas/webshim/commit/d1661c1c463f65394cf26b13de481f031d4d5ef2). \n\nYou can find some backgroundinformation about the problem, dealing with this issue in issue #16.\n\nThe way, I have fixed this, is now really bulletproof for future safari versions. (Don't ask me, why I have closed issue #16.)\n\nSome informations about the current state of webshims: There were some bigger changes, which aren't crossbrowser testet yet. I try to release a testet version on tuesday.\n. Yeah, I'm currently not sure wether this feature stays. I want to create a way to load and do base configuration of webshims lib without writing a line JS. My problem here, what do you think is better/more \"semantic\" correct. \n\n```\n<meta name=\"polyfill-path\" content=\"/shims/\" />\n<meta name=\"polyfill\" content=\"es5 json-storage forms\" />\n```\n\nOr:\n\n```\n<script src=\"some/script.js\" data-polyfill-cfg='{\"basePath\": \"/shims/\"}' data-polyfill=\"es5 json-storage forms\"></script>\n```\n. Ok, great. Thanks for your feedback: \n\nI will add 2 data- attributes: data-polyfill (starts polyfilling, optional whitespace seperated list of features), data-polyfill-cfg (JSON-Object for configuation).\n- I will add some documentation.\n\nCurrently you can change the path using JS, before you call polyfill:\n\n```\n$.webshims.loader.basePath = \"/shims/\";\n$.webshims.polyfill();\n```\n\nNote: Changing the basePath in webshims lib 1.8+ will be changed to:\n\n```\n$.webshims.setOptions(\"basePath\", \"/shims/\");\n```\n. From version 1.8 the basePath can be changed, either by data-attribute:\n\n```\n<script src=\"some/script.js\" data-polyfill-cfg='{\"basePath\": \"/shims/\"}'></script>\n```\n\nor by Script:\n\n```\n$.webshims.setOptions(\"basePath\", \"/shims/\");\n```\n\nThe old way using meta element or changing loader.basePath isn't supported anymore. The new way is documented. \n. This would be indeed an epic fail, but i can not reproduce this bug. Could you please provide an example. Or describe what you are exactly doing and how you test this.\n\nThe value is reflected in both ways, changing the ui slider value manually (with mouse, touch, keyboard etc.) will set the value of the input element and changing the value of the input element programmatically will change the ui of the slider.\n. Actually the script adds new width and padding-right to type=number/type=time - shadowelement, to make it fit the \"outerWidth\" of the original type=number/type=time element. If you want to make this larger simply add more width to the original input element. Or did the script compute the width wrong? If yes, I would need a testcase.\n\nThere is also a configuration option, to remove this:\n\n```\n$.webshims.setOptions('forms-ext', {calculateWidth: false});\n```\n\nNote: That setting calculateWidth to false will also remove the padding-right calculation.\n. great thanks. i will fix this.\n. Thx, again for the detailed bug report. I have fixed this by using Modernizr.prefixed feature which is optional, but required if you are using box-sizing now. Note: That IE8/9 in IE7 does return a false positive with box-sizing, but in real IE7, everything seems fine. But, I guess you don't support this bad browser anymore :-)\n. How to add dynamic content is a principle of webshims lib, which is not only used with forms, but also with sectioning elements, mediaelements and the canvas-element. I have documented it [here](http://afarkas.github.com/webshim/demos/demos/shiv.html). Does the description/documentation fit your needs? Or should I add more examples/documentation?\n\nIf yes, I will simply add an additionally link from the forms/forms-ext description.\n. The updatePolyfill method is already part of webshims version 1.8.1. The caveat with before jQuery 1.7 is, that it won't work with new HTML5 elements like datalist or output in IE8-. If you only use the new attributes and types and no new elements, it will already work with IE and of course in all other browsers.\n. Hi,\n\nthanks for your bugreport. It is indeed a chrome bug. My newest commit deals with this. But I hope, that this will be fixed before Chrome 16 goes stable. I will observe this in the beta channel and if it's still there, I will file a bug.\n\nAbout the message \"Polyfilling takes a little bit long\". This message comes, if polyfilling takes more than 600ms. I have changed this message from \"warn\" to \"info\", so that it should be only visible, if you do set $.webshims.debug = true;. \n\nIf this message comes only if this error occurs, than everything should be fine. If it's comming in Chrome 14 or FF7 and you are only loading the \"forms\" feature, you really should look into the networkpanel to detect why it takes so much time.\n\nYou can also give me the URL to look into this.\n\ncheers\nAlex\n. Hi mog-labs,\n\nthis is simply not possible with HTML5. the reason, why this works in FF is, that I have not implemented [value sanitization](http://www.w3.org/TR/html5/number-state.html#range-state) algorythm. In Chrome and Safari the behavior is absolute HTML5 comiplant.\n\nBut there is another possible solution, simply use setCustomValidity to implement customErrors. I have created a demo using [input[type=\"range\"] with setCustomValidity](http://jsfiddle.net/trixta/xTTEy/).\n\nI hope this helps.\n\ncheers\nAlex\n. @mog-labs\n\nI have realized, that there was a small issue with my demo, so I have updated this. Please check the new code.\n. Actually, this issue comes from webshims lib, but should be fixed in SS. First of all I'm not sure how this should work. But I see, that SS trys to go through all properties of your declared function test. I don't think, that this is intended. However, in non polyfilled browsers functions do not have listed properties. In case of a polyfilled browser, they have.\n\n@hij1nx should check wether the property is a true member of the object or not, using the hasOwnProperty method. Additionally SS should check wether the for in loop on your test function is really by design or an accident.\n\n```\nfunction regify(routes) { // convert all simple param routes to regex\n    for (var key in routes) {\n        if(routes.hasOwnProperty && routes.hasOwnProperty(key)){\n            regify(routes[key]);\n            if (key.indexOf(':') !== -1) {\n                var newKey = key.replace(/:.*?\\/|:.*?$/g, '([a-z0-9-]+)/').slice(0, -1);\n                routes[newKey] = routes[key];\n                delete routes[key];\n            }\n        }\n    }\n} \n```\n. Hi,\n\nthis is actually not a bug. If you are using (mouse related) events, jQuery copies those properties into a new fake event object. There is nothing I can do against it, but this has no side effects.\n\nYou will see this message on a lot of jQuery sites (http://jqueryui.com/themeroller/, http://jquery.com/) . It might be, that this changes with jQuery 1.7 (They have refactored a lot in events and now they do not copy everything, but I'm not sure).\n\ncheers\nalex\n. Hi.\n\nI don't really want to add a class, simply because, this makes overriding the shim.css more difficult. shim.css is added before all other styles, simply because I wanted to make it easy to override some of the default styles.\n\nI guess you are using the width/height content attribute. Switiching to use CSS (either inside of a stylesheet or inline) to set the dimensions would be an easy solution. In fact using styles will give you more features, like using % or em units. Isn't this a way you could go?\n\ncheers\nAlex\n. Actually scoping is not complicated. It's simply the same problem, but with CSS. If a developer wants to set a baseline dimension for his videos, he will simply use 'video'. If I use a scope '.video-shimed video', I will have this issue. So its complicated.\n. Thanks!!!\n. Hi,\n\nyes webshims 1.7.1 isn't compatible with jQuery 1.7. This should be fixed with 1.8.2. There is only one small problem with 1.8.2 and jQuery 1.7 and it's almost theoretic nature:\n\nIf you would delegate a submit event from a form to the same form, the bug would be triggered, but actually this code wouldn't really make sense and wouldn't work neither, so no big problem.\n\nBUT: There is some really bad news for you. webshims 1.7 has a huge issue with upcomming chrome 16. Webshims has fixed it with 1.8.2 (still one minor issue with Chrome 16). If you have time wait for 1.8.3 final, but if you are using webshims in production you should switch soon (either to 1.8.2 or to 1.8.3RC3 <- it is a real RC, so I don't plan to change anything in the final (only updating testsuite, jQuery, Modernizr...).\n. fixed with version 1.8.3\n. Thanks for your bugreport. Which version of webshims are you using? You can type $.webshims.version into your console. I think this bug should be fixed with version 1.8.2\n. @randycasburn\n\nNo problem. Can you approve that version 1.8.2 has fixed this issue for you?\n. I can't reproduce this error with webshims 1.8.2, anymore. Can you test this with dev version and not minified and tell me the line number of the error?\n. This sounds like more a caching problem. Could you re-check this using a [fresh download](https://github.com/aFarkas/webshim/downloads) and clearing your cache.\n. fixed with version 1.8.3\n. awsome, thanks!\n. I'm not sure, whether I'm seeing the same issue. I can confirm, that there is an Opera bug. Opera is submitting the form, if the form is valid, but it doesn't show the native errormessage. Is this your bug?\n. Can you please try the newest version from master. This should fix your issue. There is still a failing minor issue, but nothing which should be a problem.\n. Hi,\n\nI'm not 100% sure, wether I understand your code/purpose right. If I try your demo page without the changes, everything is fine (short test in IE9/FF8). My hole testsuite is testing webshims by calling polyfill after the load event.\n\nI do generate Special 'Ready' events, which are immediately fired, if you [add a new event-listener](https://github.com/mrohland-at-gannett/webshim/blob/master/src/polyfiller.js#L198-200). This special event handler is [created by overriting the normal jQuery ready method](https://github.com/mrohland-at-gannett/webshim/blob/master/src/polyfiller.js#L604-618). \n\nIn case your using polyfill after DOMReady I always suggest to set waitReady option to false, because it doesn't work as expected. -> Webshims doesn't delay the domready method anymore until all features are loaded and implemented. Could you please explain in more detail, what the problem is. If your code doesn't work right (polyfilling after ready-event), you found a bug, because it should already work, but I have difficulties to reproduce this.\n\ncheers and thanks for working on the code :-)\nalex\n. Ah, I think I understand this now and this is a bug. Instead of modifiying polyfiller.js. Can you try to simply add the following code after jQuery and polyfiller is loaded:\n\n```\njQuery(function($){\n    $.webshims.isReady('DOM', true);\n});\n```\n\nYour code fixes the event API, but doesn't fix the isReady API (which isn't currently used but might be used in the future). If this fixes your issue, I will fix it with next release. I hope, I can do this soon, but I do need to find a better solution for issue #78.\n. @dcmoore-gd\n\nIs this info for me? I don' t really understand. How can I help? Are you using something like custom styleable select elements?\n. This would mean an API change, which I do not want to make. I would suggest to add a new event called changedvaliditystate or something similiar. I made a [gist example](https://gist.github.com/1474461).\n\nI'm currently not totally conviced, wether I want to add this. Could you provide some informations?\n\nSome informations about, when I do add something:\n\nWith webshims, I really only want to add HTML5 capabilities. If there are common and usefull extensions, I don't really want to add them anymore, instead I really would like to see a jQuery-plugin, which might work also without webshims and only in  HTML5 capable browsers. This is the reason why I'm currently working on [JME2](https://github.com/aFarkas/jMediaelement/tree/jme2). This project provides some API extensions to the mediaelements and let's you create custom styleable controls for mediaelements using a declarative markup API. It can be used in all modern browsers without a polyfill and if you are using webshims, you can use it in all browsers. So I really want to seperate extensions/abstractions from polyfilling.\n\nOnly extensions/abstractions, which are a) very usefull, b) can be easily implemented into webshims and c) can't be implemented easily outside of webshims are canditates to go directly into webshims.\n\nThere are so much possibilities to create totally new user interfaces and usefull abstracted APIs on top of the Standard API... I really want to see them, but outside of webshims...\n. I have implemented this, simply because it is more low-level than the other validity-event. Your code should look like this:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n\n$('form').bind('changedvaliditystate', function(e) {\n    $(e.target).next('.error').html( $.prop(e.target, 'validationMessage') );\n});\n```\n\nAnd if you are already using extension here is a little nice abstraction:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n<input type=\"email\" data-errormessage=\"custom errormessage\"><span class=\"error\"></span>\n<input type=\"email\" data-errormessage='{\"typeMismatch\": \"mismatch message\", \"defaultMessage\": \"defaultmessage\"}'><span class=\"error\"></span>\n\n$('form').bind('changedvaliditystate', function(e) {\n    $(e.target).next('.error').html( $.webshims.getContentValidationMessage(e.target) );\n});\n```\n. Hi Matt,\n\nthis is [by Design](https://github.com/aFarkas/webshim/blob/master/src/shims/form-shim-extend.js#L661-668). The reason for this is that [HTML5 does **not** allow a placeholder on input[type=\"date\"]](http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary).\n\nBut you are right, not copying things like tabindex is an issue. I'm asking myself, wether I should use a blacklist or a whitelist for copying things. Do you have any suggestions here?\n\nThanks for filling an issue!!!\n. Oh sorry, I checked [the Spec](http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary) again and placeholder is only allowed on the input types, I do explicitly allow.\n. No currently not, but I have added this feature now. You can get the latests version the custom-validity.js. It should be quite simple to implement manually, too.\n\nThe 4-webforms-custom-validity.html also has an example for this new feature.\n\nAnd thank you, that you like this library :-)\n. @billsaysthis \n\nThanks for your bug report. I think, this is not an issue. I have created a [simplified jsfiddle for you](http://jsfiddle.net/trixta/dFq3F/). I see multiple problems with your markup:\n- The [data-datepicker configuration](http://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#configure-ui) is only used, if there is no HTML5 attribute for this purpose. In case of minDate/maxDate, there are already min/max attributes.\n- The date type only allows using the following date format YYYY-MM-DD. If you enter a different format, webshims might use it for displaying it to the user, but don't use it for calculating. The field is simply invalid. Webshims trys to localize it to the browsers locale, but you can also set a specific locale, using $.webshims.activeLang.\n- The data-datepicker configuration must be a valid JSON string, which means, that you have to use \" instead of ' inside of your attribute.\n\nThis said your initial markup, should look something like this:\n\n```\n    <input type=\"date\" id=\"mbdrFrom\" value=\"2012-01-05\" min=\"2011-11-18\" max=\"2012-01-05\" />\n```\n\nPlease let me know, wether this helps.\n. ##Why label?\nWebshims trys to also implement the HTML5 accessibility/semantics. In case of a non labeled input with a placeholder, the placeholder should become the a11y-name of the input, which is achieved by setting a label element.\n\n##Why is implicit label not recognized\nIn time of writing, I left this out, because of performance reasons, but it's a bug and I will fix it.\n\n##Release/Roadmap\nActually, I wanted to wait until Modernizr is released, but I will make a new tested release on next sunday/monday.\n\nI will push a fix for this issue soon, could you test this? This version won't be fully cross-browser tested, but if later tests do not show any bugs, this version will be the final release.\n. Thanks for the detailed information. It turns out that issue #79 wasn't fully fixed. This is exactly the same problem.\n. Hi,\n\nfirst of all many thanks for reporting the issues. This makes webshims lib better :-).\n\ni have created a new changed test (https://gist.github.com/1636569). You are mixing two things in your test:\n1. the customValidity extension (has nothing todo with HTML5 constraint validation)\n2. the webshims lib HTML5 implementation\n\nAbout 1. customValidity:\n\nThis script does not try to make everything feel native and therefore it has some limitations. If a user changes the value or a developer trys to set the value using $.prop or a developer trys to get the validity using $.prop, the customValidity info is updated. This means, if you want to change the value using $.val or you have changed the constraints ( input.attr('data-minlength', '4') ), the customValidity info isn't updated. There is an undocumented feature, to solve this simply trigger the 'refreshCustomValidityRules' event and evrything works as expected. (sorry, for not documenting this)\n\nAbout 2. the webshims implementation of maxlenth:\n\nwebshims only trys to implement this in IE9 (and of course any older browser) and leaves the standard implementation to the browser vendor. In fact, this part of the spec changed last year. Safari, Opera's and webshims lib implementation do not match the current state of the spec. -> FF9 and Chrome are right. This part of the spec can be only tested manually. There is no way to write a unit test.\n\nSo issues:\n1. better documentation\n2. align maxlength to the spec and normalize Safari and Opera\n\ncheers\nalex\n. Thanks, for the bugreport. To be honest don't understand how this error, could be made. I'm sooo sorry.\n. Thanks, again for this bugreport\n. Hi,\n\nhtml5boilerplate uses all test and extension, but leaves the addTest and the prefix methods out. If you want to have all boilerplate tests + those needed by webshims you have to use the [hole modernizr build](http://www.modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-iepp-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load). I'm pretty sure, that you don't really need everything, but simply just more, what I need. If you want to create a good customized version, which has everything required by webshims, you can follow the [following build url](http://www.modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-iepp-addtest-prefixed-testprop-testallprops-domprefixes-load) and add those things you really need.\n. Yes, this wasn't a requirement and optional. Due to the fact, that I have introduced clientside combohandler, the combos which do include not required packges can be loaded and this creates the problem. \n\nTo workaround this, you can create a custom build of polyfiller.js, which does not include audio/video in this case the combos, which include mediaelement-core are marked.\n\nHere is the [webshims builder](http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs) (look for Customize Webshims lib's polyfiller.js)\n. Thanks for your bugreport. Can you try to load a full polyfiller.js version? There might be a problem with the builder.\n. And to remove the warining messages simply type:\n\n```\n$.webshims.debug = false;\n```\n\nbefore calling webshims.polyfill\n. Can you please try the last checkin. Please note, that I haven't done much cross-browser testing with this version and there is at least one bug regarding the datalist implementation. You can also try the following configuration:\n\n```\n$.webshims.setOptions({\n    waitReady: false,\n    basePath: \"/static/libs/webshims/1.8.7/shims/\",\n    forms: {\n        customMessages: true\n    }\n});\n```\n. @kdonald \n\nCan you please try the current version in trunk (1.8.8RC1). I want to make a release soon.\n. If you still experiencing this issue with 1.8.8final re-open this issue.\n. can you give me markup, browser polyfiller config?\n. Just looked into your jsbin. You forgot to include the dependencies: jquery, modernizr and polyfiller itself. Additionally there where some errors. tr/td without table and an attribute with opening \", but without closing \".\n\nAfter adding the js files and removing the errors, you get the following file:\n\nhttp://jsbin.com/arovaz/\n\nSeems to work in FF 3.6 for me.\n. No, problem, but I really need an example, simply because I can not reproduce your issue.\n. @ AMA3\n\nI have tried to reproduce this bug on your site, using IE9 in IE7/8 mode and in real IE7 and real IE8, but I can not reproduce this error.\n\nDid you use IE10 preview release in IE8/7 mode? Or can you help me with more information to reproduce this?\n. Actually, this should be done automatically. I will look into this. Are you using Ajax or a classic form submit?\n. I tryed to reproduce this issue as well, but couldn't. Can you make a small testcase for this. Note. There shouldn't really be a difference between post and get.\n. If you can reproduce this issue with 1.8.8final and can provide a testcase, please re-open this issue.\n. Thanks for this issue. As you might know, I have removed iOS4 and Safari 5.0.0-5.0.2 from my support table, simply because I don't want to fully support these extrem buggy versions. So I have removed a lot of support code for those browsers (code was a little bit unclean...). But this should not mean, that webshims will create major/critical/blocker issues in those browsers. Therefore, I have partially re-added some of the support code and this should now fix your issue.\n\nBut I couldn't test with iOS4 (My Mac is currently broken.). It would be nice, if you could confirm, that this fix works.\n. Hi,\n\nthis is by Design. Safari fully supports validationMessage, so that this part is not polyfilled. But it is true, that Safaris error messages are really bad, compared to Opera, Chrome and Firefox. If you want to use customized errormessages in Safari. There are multiple possibilities:\n\n## Markup\n\n```\n<input data-errormessage=\"Please fill out this form\" required />\n```\n\n## Config (enable custom messages and replace validation UI)\n\n```\n$.webshims.setOptions('forms', { \n    customMessages: true, \n    replaceValidationUI: true\n});\n```\n\n## Config (replace native validation message, but native validation bubble stays)\n\n```\n$.webshims.setOptions('forms', { \n    overrideMessages: true\n});\n```\n\nThere are a lot more ways to achieve this, but those are the simplest one.\n\nYou can find more informations about custom error messages [here](http://afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html). My english isn't that good, but I hope you understand the ways to change the messages.\n. Yeah, german are as bad as english. But I can't simply test the quality. Safari has full form API support, but no UI support. there is also an upcomming Modernizr test, which will test for the UI existence: https://github.com/Modernizr/Modernizr/issues/266\n. @amercier \n\nThanks for your bug report. This is not a bug, it is by design. Triggering submit by script does not  start the interactive constraint validation. This is specified by the HTML5 spec and webshims doesn't do anything here in case of Chrome/FF.\n\nFrom spec there is no direct way to bring up native validation bubble. The only workaround is to trigger a click event on the submit button. In case of custom messages (config: replaceValidationUI: true), you can trigger the validation constraint by using the checkValidity method, which fires invalid events on invlaid fields and invokes the customized bubbles:\n\n```\n    if($('#myform').checkValidity()){\n        $('#myform').trigger('submit');\n    }\n```\n\nThere are also other ways to do something like this. If you need another way just let me know.\n\n@thomasmaas \n\nThere is no need to fix this, to implement the form attribute. I'm currently working on this, but it's quite complicated to fully support the attribute (including dynamic changes to dom) without having a big performance penalty.\n. @amercier \n\nYeah, you are absolutley right here. Older Opera versions are showing the error UI, if you are using checkValidity (webshims fixes this). There was a discussion to give this method an additional parameter to achieve this. \n\nI think to make it better feature detectable, we need a new method -> elem.showError with an additional argument to decide, wether the field should be focused or not.\n\nIn case of the HTML5 froms chapter, there is a lot room for improvements. I hope some of those things will be addressed.\n. Creating the shadow dom is indeed a problem. Now you have two different fields for one. One field is used for API things and the other for UI. \n\nWhile there are other possibilities, each have thier pro and con. For the way webshims is doing it, there are some workarounds:\n1. Your id problem: Getting reference to the UI element from JS\n   \n   $('#date').getShadowElement();\n2. CSS input[type=\"date\"] won't work, use two selectors:\n   \n   input[type=\"date\"],\n   input.input-date { /\\* ... */ }\n3. calculated width won't work\n\nCan you provide a testcase? This seems to be a bug\n1. placeholder does not work\n\nplaceholder is not allowed for date, time, number etc.. It's not a bug. Webshims follows the spec.\n. 1. The shadow DOM is only for UI. If you want to use the API (i.e.: setCustomValidity), you don't have to touch the shadow element. The shadow element is only for CSS. About your general approach: If you want to set a value, again you don't need to touch the shadowElement. You still should access the element you have added to the DOM. To get this reflected to the shadow element, you have to use the general jQuery methods $.val or $.prop. The reason for this is, that it is technically nearly impossible to create getters and setters. The power of webshims is, that while it is not a real polyfill to the DOM, it is a real polyfill to jQuery. jQuery is always used for abstraction and browser normalization. Webshims only adds some small abstraction parts and uses the same jQuery API for normalization. If you want to use native DOM, you have to do the normalization your own.\n2. Like I said, browsers don't really support this. For example Safari has partial support for type=\"date\" and gives you a bad UI. The only way to remove bad UI x-browser is to either remove/change the type attribute or to create a new DOM element. So you need it. You are already using quite a lot classes (more than you need)\n3. Yes, I see a small bug, here. I will fix it. But your type=\"date\" has no border-box, so it's currently calculated right.\n4. http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary\n. 1. opt-out\n\nYou can now opt-out with:\n\n```\n$.webshims.setOptions('forms-ext', {\n    calculateWidth: false\n});\n```\n\nThis will also remove inline-styles for spinbuttons. So you can write your CSS. The CSS with important can be removed with:\n\n```\n$('html').removeClass('polyfill-important');\n```\n1. Refactoring of form widgets is very important, but it will take a long long time, until I work on this. The current way is good enough. If you have some specific bugs, let me know, I might work on those, before I can do this refactoring.\n. @gossi \n\nAbout the wrong calculation:\n\nThis is a jQuery UI bug. I'm using the outerWidth as a setter. This functionality is provided by jQuery UI core. I would appreciate, if you would fill a bug there, because this is the source of evil. I made a [simple testcase for you](http://jsfiddle.net/trixta/k728W/).\n\nIf your bug report is rejected, open a new bug in the webshims bug tracker.\n. @TiGR \n\nThx, for your bugreport. The paths in your fiddle do not point to a valid source of webshims, therefore your call to $.webshims.polyfill throws an error.\n\nI have reduced and changed your testcase and it seems to work for me (http://jsfiddle.net/trixta/ng9mg/9/).\n\nAlso the call to $.webshims.polyfill('form') doesn't do anything, because the feature is called 'forms'. Actually there is no webshims code loaded.\n. Closing this. If you got a testcase, please re-open.\n. Thanks for your bugreport, I will look into this this weekend.\n. Yeah, Safari 5.0-5.0.2 is really a pain in the ass. Currently, I don't have the time to do a new realease. I think it will take about two weeks. \n. @chrisveness\n\nI had no time to directly look into this. I will do this next 4-7 days. To be sure I have all informations. Has this iPad a Safari 5.0.2 mobile (same iPad as above)? I couldn't see an attachment, can you mail me to my email (info @ corrupt-system .de)? Is there anything special I have to do, to trigger the bug?.\n\nYour code looks indeed correct.\n. @chrisveness \n\nJust tryed your demo and while I can confirm, that the exact same bug happens, it seems, that there was a deployment issue. If I enter:\n\n```\n$.webshims.version\n```\n\ninto the console it gives me still the old webshims version 1.8.9.\n. This is indeed strange. Yes, I'm looking at the dev version. Can you confirm, that your client is getting the new version, if he is seeing the site with his ipad?\n\nI'm pretty sure the bug is fixed with 1.8.10RC2.\n\nBTW.: I have just pushed 1.8.10RC5 and I'm pretty sure, I won't do any changes for the final version comming in 4-7 days. \n. You need to add the [mousewheel plugin](https://github.com/brandonaaron/jquery-mousewheel/) for jQuery to use this. The mousewheel is only handled, if the field is focused. If you want to be also handled, if the field has no focus, you have to additionally add the [mwheelIntent plugin](http://archive.plugins.jquery.com/project/mwheelIntent)\n. @alonisser \n\nI don' t really see much value merging webshims and html5api into one API. Both scripts have different purposes and can be used  side by side.\n\nIf you want this feature. You can simply duck punch webshims polyfill method. I have created a [simple gist](https://gist.github.com/2549577), which merges both APIs without touching the core file. So you can simply add this feature yourself.\n. Simply add the [formnovalidate attribute](http://www.w3.org/TR/html5/attributes-common-to-form-controls.html#attr-fs-formnovalidate) to this button:\n\n```\n<input type=\"submit\" value=\"save\" formnovalidate /> <input type=\"submit\" value=\"send\" />\n```\n. I know, that jquery mobile can have some problems with jQuery UI and therefore jQuery mobile is not compatible with the webshims \"forms-ext\" feature (type=range, type=\"date\"...). But I can not reproduce your specific bug. Do you have any information. Here is a project which uses jqery mobile and webshims \"mediaelement\" feature: https://github.com/aFarkas/jMediaelement/blob/jme2/demo/jme-jqm.html\n. please re-open, if you have more information or a testcase\n. You can create a custom Modernizr build, but you need at least the following test, to work with webshims:\n\nhttp://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-addtest-prefixed-testprop-testallprops-domprefixes-load\n. Does this help?:\nhttp://jsfiddle.net/trixta/gNrgG/\n. Wow, you found a new webkit bug. I will try to detect this bug and fix this inside of webshims + fill an issue in the webkit bugtracker.\n\nHere is how you can workaround this issue:\n\nCurrently you are setting an input disabled and then reset the value. Simply change this order. First reset the value second disable the input.\n\nhere is your changed fiddle: http://jsfiddle.net/dj3vw/14/\n. https://bugs.webkit.org/show_bug.cgi?id=85704\n. @jhartikainen \n\nThx, for your bugreport. This is by design. Webshims trys to polyfill and normalize features through the jQuery API. While this isn't 100% native, it is a better solution, then most other scriptable shims provide, because we do not implement a new abstraction API, but use an already existing abstraction layer (jQuery). This is explained in the [docs](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions).\n\nThis means everything should work as expected, if you are using $.attr/$.prop or $.val.\n\n```\n//set empty string (shows placeholder)\n$('input').prop('value', '');\n\n//set value (hides plyaceholder)\n$('input').prop('value', 'some value');\n\n//get value (does not return placeholder text)\n$('input').prop('value');\n```\n\nSorry, that this answer might not satisfy you.\n. Yeah, this is exactly the way,I would use, if I would not support IE6, 7 and 8. (IE8 has partial support for this, but can crash if used in combination with htc behaviors).\n\nWebshims uses a very similiar API to extend jQuery properties. A pure idl attribute accessor implementation looks like this:\n\n```\n$.webshims.defineNodeNamesProperty('audio, video', 'currentTime', { \n    prop: { \n        get: function(){ \n            //your getter implementation (\"this\" refers to the element) \n        }, \n        set: function(value){\n             //your setter implementation (\"this\" refers to the element) \n        } \n    } \n});\n```\n\nA content attribute implementation, which is reflected by an idl attribute:\n\n```\n$.webshims.defineNodeNamesProperty('input, textarea', 'placeholder', { \n    attr: { \n        get: function(){ \n            //your getter implementation (\"this\" refers to the element) \n        }, \n        set: function(value){\n             //your setter implementation (\"this\" refers to the element) \n        } \n    },\n    reflect: true, //true = default but there are different type for number, references to other elements, urls etc.\n    initAttr: true // should the setter be invoked initially, if attribute is available\n});\n```\n. Yes, you can. The ratio of shim.css is to provide a general basic style for all polyfilled things. Therefore most styles have a low specifity and you can simply override it, inside of your own stylesheet. But you are also free to directly change the stylesheet. \n\nWhat rules are a little bit too much?\n. This is a known issue and has to do with the odd way of changing the errormessages in HTML5 in conjunction with a non-standard FF extension. (see: https://bugzilla.mozilla.org/show_bug.cgi?id=655677)\n\nThe best way to workaround this:\n\n```\n/* remove error box-shadow in FF */\ninput, textarea, select { box-shadow: none; }\n\n/* re-add error-box-shadow */\n.form-ui-invalid { box-shadow: 0 0 1.5px 1px red }\n```\n. @doits \n\nSorry for closing this bug to early. Did this answer your question?\n. Can you please try the following:\n\n```\n$(\"#select\").prop( \"disabled\", false).val(\"\");\n```\n\nIf this works this should be fixed with the next release. see also: https://github.com/aFarkas/webshim/issues/114 and https://bugs.webkit.org/show_bug.cgi?id=85704\n. many thanks for your tests!!!\n. @doits\n\nyes, this was fixed by [this line](https://github.com/aFarkas/webshim/blob/master/src/shims/form-core.js#L360). But I'm not really happy with this.\n\nIf you write code like the following:\n\n```\n$('input').bind('input', function(){\n    //you should throttle this function for performance\n    if( $(this).is(':invalid') ){\n        //do something\n    }\n});\n```\n\nThe custom validation isn't taken into account. You have to write something like this:\n\n```\n$('input').bind('input', function(){\n    //you should throttle this function for performance\n    if( $(this).trigger('refreshCustomValidityRules').is(':invalid') ){\n        //do something\n    }\n});\n```\n\nI'm currently not sure, wether I want to only recalculate on change event and leave the rest to the developer. Or to do some extra magic.\n\nSome additional information about the current version (1.8.11beta3). There is a known issue in iOS5 for all forms-ext validity features. rangeOverlflow, rangeUnderflow and stepMismatch is always false. This version isn't also heavily cross-browser tested. I'm doing all my tests only right before releasing a new final.\n. Sorry, I can't take this one. The stopPropagation should be removed, because it stops the event to bubble to the window object. The useCapture argument before was important. So that the custom validation is run before other change event handlers run. The following commit destroyed the script in IE and older browsers: https://github.com/aFarkas/webshim/commit/8b8bd7b54878ab9703b2d0461c5385b5e879d7f0#diff-3\n\nI'm currently not sure how I want to fix this. It might be possible to re-add the old code.\n. I have re-thought this. I would take your PR, if you switch from .on to .bind (we have to be compatible with jQuery 1.6.x) and remove 'stopPropagation' call.\n. Do you mean the changedvalid/changedinvalid event? This is only an extension by webshims, which comes for free for implementing the .form-ui-valid/.form-ui-invalid classes. You can write your own custom event, if you want:\n\n```\n$(document).bind('change invalid', function(e){\n    if(!$.prop(e.target, 'willValidate')){return;}\n    var isValid = $(e.target).is(':valid');\n    if(isValid && !$(e.target).is('.valid')){\n        $(e.target).addClass('valid').removeClass('invalid').trigger('validchange');\n    } else if(!isValid && !$(e.target).is('.invalid')) {\n        $(e.target).addClass('invalid').removeClass('valid').trigger('invalidchange');\n    }\n});\n```\n. This is now possible:\n\n```\n$.webshims.setOptions('forms', {\n    validityUIEvents: 'change refreshvalidityui'\n });\n```\n. The easiest way to achieve this, would be the following code. Some other ways are explained [here](afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html):\n\n```\n$.webshims.setOptions('forms', { \n    //Use customizeable validation messages \n    customMessages: true, \n    //replace validation UI in all browsers \n    replaceValidationUI: true \n});\n\n$.webshims.polyfill('forms');\n```\n. @doits\n\nIs there a PR comming here? Note you do not need to change the combos themself. If you want to test the \"uncompiled\" sources you can set $.webshims.debug = 'noCombo'; before calling polyfill.\n. I have changed those attributes, but I couldn't run the testsuite, because qunit is not XHTML compilant.\n. @doits \n\nIs your last comment related to issue #132? Can I close this now? \n\nPlease also note the following. If you are handling the validation UI your own. For example through the replaceValidationUI configuration or by (always) calling e.preventDefault inside of an invalid listener. You should set overrideMessages to false and use customMessages. overrideMessage should be really only used in the case, where you want custom messages inside of native error bubbles.\n. Thanks, I will have a look into this, next couple of days\n. @doit and @rahearn \n\nI couldn't reproduce the bug with the newst webshims version, anymore. One element is now tested by the following line https://github.com/aFarkas/webshim/blob/master/src/extras/custom-validity.js#L82 and the \"masterelement[s]\" by those lines: https://github.com/aFarkas/webshim/blob/master/src/extras/custom-validity.js#L231-240\n\nThe only thing I found, was that getting multiple radiogroups was busted [fixed here](https://github.com/aFarkas/webshim/commit/c6d40ec9b8ea9d6bc3a078e2ed8f7c58cdf29d09) and that the UI wasn't fully updated, which was [fixed here](https://github.com/aFarkas/webshim/commit/7c1c333f4a2b977d5e645c192d1744638a020993).\n\nCan you now confirm, that his bug is fixed?\n. I had no time, to look into this. But if you can identify the \"regression\" commit, I would be quite happy.\n. I haven't looked into this for month. As I understood, this problem is only there, if you are building a native app + using a complex form. Starting with webshims 1.8.11, iOS is handeld totally different then before. If you are still experiencing issues using jQuery 1.8.2 and webshims 1.9.1, please let me know. Is this problem only there if you are using the forms-ext feature or also only using the forms feature? Which iOS versions are affected? If you could provide me with a simplyfied testcase (including sourcefiles to build the app, it would really help me).\n. You can still bind to the slide event using bind/on/delegate:\n\n```\n$('.input-range').bind('slide', function(e){\n    if(window.console){\n        console.log(arguments);\n    }\n});\n```\n\nBut it would be a lot nicer, if you would use pure HTML, CSS and JavaScript to achieve this. I created a fiddle, which [might be a good starting point](http://jsfiddle.net/trixta/s9gW5/)\n. Thanks, I understood your problem. But I don't really saw this as a bug. Because 1. working with the full jQuery UI API is kind of deprecated and 2. you can still bind to the slide event.\n\nhttp://jsfiddle.net/TXU2v/3/ : slide bound inside create\nhttp://jsfiddle.net/TXU2v/4/ : slide bound global on document\n\nIs this issue still a big deal for you?\n. Thanks for your issue. I can't really reproduce this. Actually the hole webshims scripts are [tested inside an iframe](https://github.com/aFarkas/webshim/blob/master/tests/iframe.html) before I release a new version.\n\nI tried a simply iframe test, but couldn't get your error. Can you please try to give me a most simple testpage.\n\n(http://jsfiddle.net/trixta/uBMzU/1/)\n. @agross \n\nSorry for the delay. I tryed to test this with an android simulator (2.2 and 4.0.3), but couldn't repdroduce the problem. Both do not fully support input[type=\"date\"], therefore webshims will implement the jQuery UI datepicker, including some localizations. (What browser-based date selector is used there???)\n\n If you are using a german browser and do not override the locale using $.webshims.activeLang, you have to enter dd.mm.yyyy (or d.m.yy), for example.\n\nIf I set the locale to 'en', the default date format is yyyy-mm-dd. But you can still enter yyyy-m-d. You find here a simple gist to try it yourself: http://jsfiddle.net/trixta/vZuLv/\n\nIf you enter 2012-1-1 and wait for the change event, you will get the normalized value '2012-01-01' for the input. Can you help me to reproduce the bug?\n. Just tryed the official samsung emulator (http://innovator.samsungmobile.com/cms/cnts/knowledge.detail.view.do?platformId=1&cntsId=9500). But can not reproduce. I will try to get a real device tommorow\n. I have added some logs for the fiddle (http://jsfiddle.net/trixta/vZuLv/17/). It would really help me, if you could copy those here.\n. Just forgot somthing can you please give info on this http://jsfiddle.net/trixta/Htfxh/2/ and this one http://jsfiddle.net/trixta/Htfxh/5/\n\nLater should load at least form-core. Many thanks\n. ok, thanks. This helps a lot, found a way to detect this bug.\n. @agross \n\nI couldn't get a samsung android, today. The hole code is only tested with different other browsers. I hope the hole code fixes your issue. Can you give me some feedback?\n. I looked over the code and found out, that the fix is never run, because of a busted version of the bug detection code. (Some copy error and looks really stupid :-) ).\n. @agross \nyou can now.\n. No, you should still expect the normal datepicker, but in case of a validity check, getting the value or on submit the value format is corrected. I could test this bug now with different andorid's. All andorids with this bug haven't loaded the form-native-fix, but have loaded the form-shim-extend. I have fixed this bug for those samsung androids (but haven't yet compiled the source.)\n\nI hope this will also fix your bug.\n. @agross \n\nReady for testing the new fix. I'm pretty sure your bug should be fixed with this.\n. From my testing, this seems to be a bug in excanvas itself and does only appear in IE7 not IE8. I do not maintain excanvas, so I can't really fix this bug. I would suggest to change the rendering engine from excanvas to flashcanvas. flashcanvas has much better canvas support. Simply set this before you call the polyfill method.\n\n```\n$.webshims.setOptions('canvas', { type: 'flash' });\n```\n. @McWatt\n\nYou can use the [] notation in this case:\n\n```\n$.webshims.customErrorMessages['group-required'][''] = \"One option from this group is required.\";\n```\n. @McWatt \n\nJust tried and it works. It seems, that you have put this line of code, before including the custom validity script. The best way to use this, is to configure the errormessage before dom ready, but after including the custom-validity script.\n. This is currently not possible. You can only use a simple string. But I just have added this as a [new feature](https://github.com/aFarkas/webshim/commit/8e036cbddc3b812013dd0e60d36ebdd4bee6a1cc)\n. I have difficulties to replicate this issue. It might be, that FF is caching some data. Does this also happen, if you do a \"hard refresh\" (ctrl + f5/shift + reload button)?\n\nDo you have a simplified testcase, which you can mail to my address?\n. @rfarris2000 \n\nThis feature was implemented in version 1.8.11. Please try 1.8.12. If it doesn't work. Reopen this issue.\n. I have tried to install Windows 8 Release Preview as a virtual machine using virtual pc by microsoft. As it turns out, this is not possible. From what is happening, I know that this is a stupid bug in IE10 (in IE7 mode) and might also affect jQuery/sizzle. Therefore if Microsoft is not able to fix this issue, this bug has to fixed in jQuery/Sizzle.\n\nI will look into this issue again, as soon as a IE10beta is released.\n. @AMA3\nI don't really want to do anything about this now. The best thing is to fill an issue in MS bugtracker. I will re-open this issue, if it still exists in IE10beta.\n. wow, thanks\n. @AMA3 \n\nJust tested IE10 in IE7 mode and there are some other issues in jQuery/Sizzle which do not appear in real IE7 or in IE9 in IE7mode...\n\nBut I have fixed this issue, because this can be fixed by webshims + it's the most obvious one. All other things have to be changed in jQuery/Sizzle.\n. @AMA3\n\nI can't really take this patch nor the script in #142, because they are not generic enough and those patches can break other things. Hope you understand :-). \n. Yes this is possible and explained [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html). \n\nSimply use jQuery.fn.htmlPolyfill instead of jQuery.fn.html. You can also use jQuery.fn.updatePolyfill on the element, which is dynamically added.\n. Just wanted to let you know, that I'm working on month/week integration\n. I have just uploaded the new widgets to gh-pages. I will release the next version soon. Feedback is welcome :-D\n\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#month-cfg\n. @AMA3 \n\nThanks, yes I would like to know all issues/problems. \n1. IE7 mode: While the css on the demo page is busted for IE7. The calendar widget works just fine for me in real IE7. Are you testing with IE10 in his browser modes? If yes: I can't support IE10' browser modes with webshims, because those are totally busted and different from the original IE7/IE8/IE9. You can use IETester or a real IE7/8/9 instead\n2. This was never supported. Webshims hides the original element and shows a custom UI. I can add a configuration option, that adds support for this, but this also means, that the number of invalid elements will be higher if you polyfill (original + the UI inputs). Additionally, this will never work in IE9/8. \n\nWebshims instead implements/shims the much better CSS4 selector :user-error (shim is .user-error). An easy workaround for you would be the following selector:\n\n```\n:invalid + .ws-month,\n:invalid + .ws-date {\n\n}\n```\n. @mathieul \n\nI just have [landed support for this](https://github.com/aFarkas/webshim/commit/bf389cde789b359913569040ca21b15ff413f8b0). Although it is a spec violation. The reason for this spec violation is... \n1. input[type=\"date\"] should behave more like a select element, but jQuery UI is more an free input element and a dateformat hint is very important\n2. placeholder has better support and it is a good fallback for JS off sites, to let the user know the dateformat.\n\nUsage:\n\n```\n<input type=\"date\" placeholder=\"year-month-day\" />\n```\n\nIf the placeholder can split into 3 parts using \"-\", this is transfered to the localized format i.e. day.month.year\n. This feature is already included, it is part of the 'dom-support' extension (not a polyfill, but the base of all polyfills). Here is a [simple shadowDom demo](http://jsfiddle.net/trixta/Artst/) and here is a [shadowDom demo with extra options](http://jsfiddle.net/trixta/KJymQ/).\n. @tomascassidy \n\nI just released a new cross-browser tested version, which fixes the issue. Please note, that the dateformat you see is still different from 1.8.10 and is dependent from the locale of your browser. (It's a feature not a bug). The default for 'en' is mm/dd/yy (https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js#L56). If you want to change this, you have two possibilities.\n\nSimply change the locale manually. It'is recommended to do this before calling the polyfill method:\n\n```\n$.webshims.activeLang('ja'); //change to japanese\n```\n\nOr by using the datepicker option:\n\n```\n$.webshims.setOptions('forms-ext', {\n    datepicker: { \n        dateFormat: 'yy-mm-dd'\n    } \n});\n```\n\nYou can find more informations here:\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html\n. I don't think, that this is a webshims issue. Webshims already calls handlers immediately, if a feature was already loaded and implemented. The hole dependency system is built on top of this behavior. \n\nI see two callbacks (1 webshims and 1 yepnope/Modernizr). Are you sure, that the complete callback is called by yepnope/Modernizr? So that the webshims events can even register?\n\nYou can also test readyness by writing the following in to your console:\n\n```\nconsole.log(jQuery.webshims.isReady('json-storage') && jQuery.webshims.isReady('forms'));\n```\n\nor:\n\n```\njQuery.webshims.ready(\"forms json-storage\", function($) {\n    console.log('ready callback called');\n});\n```\n\nCan you run both snippets in your console, if this bug occurs, to check wether webshims has detected the readyness right?\n\nIs this behavior browser specific? Do you have a public testcase? (You can mail me too)\n. @thirdender \n\nDo you have any information or a testcase for this issue?\n. thanks, i will look into this.\n. Yeah, I know and it is really annoying. I already [filled a bug](http://code.google.com/p/chromium/issues/detail?id=126386) and it was confirmed, but nothing happened since then. I can workaround this, but tkent from google is normally extremley fast in fixing form bugs. Don't know why this isn't currently worked on. \n\nYou could ask, whether this bug is fixed any time soon, if not, I will handle it.\n. Just in case you want to fix it, your own:\n\n```\n$.webshims.ready('form-core', function($, webshims){\n    if($.browser.webkit && Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity){\n        var elems = /^(?:textarea|input)$/i;\n        var form = false;\n        document.addEventListener('mouseup', function(e){\n            if(e.which == 3 && elems.test( e.target.nodeName || '') && (form = e.target.form)){\n                setTimeout(function(){\n                    form = false;\n                }, 1);\n            }\n        }, true);\n        $(document).bind('invalid', function(e){\n            if(form && form == e.target.form){\n                e.wrongWebkitInvalid = true;\n                e.stopImmediatePropagation();\n            }\n        });\n    }\n});\n```\n. @doits\n\nYou are loading webshims async or with waitReady false config, right? This fix has to be bound before replaceValidationUI handlers are bound, but after detecting Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity features/bugs. (Because of e.stopImmediatePropagation();). Both things are happening in the same file, so it's quite difficult to achieve.\n\nTry to change the following line:\n\nform:\n     $(document).bind('invalid', function(e){\n\nto:\n     $(window).bind('invalid', function(e){\n\nI haven't tested this, but hope this works for you. Due to the fact that replaceValidationUI binds to the document, but the false invalid should start to be propagated at the window object, you can stop it there a little bit earlier.\n. Ok, try the following code. Note you can also leave the webkit test, the code should not harm other browsers with document.addEventListener support.\n\n```\nif(document.addEventListener){\n    jQuery.webshims.ready('form-core', function($){\n        var elems = /^(?:textarea|input)$/i;\n        var form = false;\n        document.addEventListener('mouseup', function(e){\n            if(e.which == 3 && elems.test( e.target.nodeName || '') && (form = e.target.form)){\n                setTimeout(function(){\n                    form = false;\n                }, 1);\n            }\n        }, true);\n        $(window).bind('invalid', function(e){\n            if(e.originalEvent && form && form == e.target.form){\n                e.wrongWebkitInvalid = true;\n                e.stopImmediatePropagation();\n            }\n        });\n    });\n}\n```\n. Ok, I'm now a little bit concerned. There shouldn't be a chrome property on $.browser and there should be a $.browser.webkit property + mouseup should work. Are you using any browser sniffing plugins + can you give me your chrome version?\n. I don't think so. I'm using 21.0.1180.83 beta-m and Version 23.0.1241.0 canary on Win7.\n\nSomething, we have to get work is the mouseup event. I will check google chrome on Mac, now. Can you check my latest checkin, I tryed to setup my fix.\n. Thx, this helps much. Do you have a non-ssl site, because your ssl-settings make it very heavy to fiddle this site.\n. yeah this will help. thanks.\n. Many thanks, the problem was, that chrome is behaving differently on mac vs pc. The cause for the invalid event is not a right single mouseup, it is opening the contextmenu.\n\nMy fix was partial also for PC. Openeing the contextmenu with keyboard still showed this bad behavior. It should be fine now.\n. The placeholder part of this fix can be a little bit errorprone, because I have removed the placeholder-box wrapper. The best thing todo is to try to set the parent or at least a near ancestor to position: relative/position: absolute.\n\nAdditionally you can trigger recalculation of \"shadowelements\" by script:\n\n```\n$.event.trigger('updateshadowdom');\n```\n\nwill recalculate the position/height/width of all shadowelements.\n. @doits\n\nMany thanks for testing the current dev version. I plan to release a cross browser tested release in about two weeks, until then the dev version can be a little bit rough, so don't use in production. But developing/testing with this version really helps me to find bugs :-) so thanks\n. I told you :-). Until then everything can be a little bit rough.\n. This would be easy, please read how to [implement a new feature](http://afarkas.github.com/webshim/demos/index.html#implement-polyfill). But I won't do this my own.\n\nmediaelementjs doesn't really follow the principles of a polyfill, because it mixes polyfilling with extending, without providing some of the base features.\n\nWhat do you think are the problems with webshims medialement implementation? My opinion is that webshims mediaelement implementation is the most accurate implementation, you can currently get.\n\n### accurate DOM API\n\nIf you are testing [following fiddle](http://jsfiddle.net/trixta/VvmmC/), you can see that a mediaelement is connected to some form elements including input[type=\"range\"] and vice versa. If you are using a HTML5 capable browser, which supports both [type=\"range\"] and mediaelements (for example chrome/safari/opera), you can simply remove modernizr and polyfiller from the resource panel and the hole code still works as expected. Currently webshims lib is the only \"shim/polyfill\", which gives you this experience. All other polyfills are using an abstraction layer, so you can't use the HTML5 DOM API. (Wesbhims is also using an abstraction, but we do not introduce a new abstraction layer, we are simply using an existing one -> jQuery and this makes webshims so powerfull). I'm really proud about this.\n\n### still simply styleable\n\nWhile webshims doesn't extend the mediaelement feature with styling features, it's quite easy, to build some. And if you don't want to build stylable controls for mediaelement yourself, you can simply use [JME2](https://github.com/aFarkas/jMediaelement). The intersting part here is also, in HTML5 capable browsers JME2 works without webshims. This is just so impressive.\n\n### the only problem: no free and open source flash player\n\nThe only problem I have with my implementation is, that I don't use a free and open source flash player. But I don't know any good one. But JW player is a really good tradeoff between price and stability and features.\n. Could you give me some feedback? What things need to be done to improve webshims mediaelement implementation.\n. There is an option, which you can use to disable the spinbuttons for type=\"number\".\n\n```\n$.webshims.setOptions('forms-ext', { \n    stepArrows: {number: false} \n});\n```\n\nIn webkit you can also hide spinbuttons with the following CSS:\n\n```\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\ninput::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n```\n\nBut there is no help for Opera and in case FF/IE implement type=\"number\" (IE10 has partial not full implementation). You still will see spinbuttons in those browsers. I'm not sure, wether you really want this. The input[type=\"number\"] is really just for numbers. If you are setting up a field for digits (i.e. bank account, zip codes and so), input[type=\"number\"] is not right and you should use type=\"text\" with an additional pattern.\n\nSee also [inputmode](http://www.brucelawson.co.uk/2012/credit-card-bank-account-numbers-in-html5-forms/)\n. Yeah, I know. I have changed this to data-placeholder, simply because it's invalid HTML to use placeholder on type=\"date\", although, I thought, it would be a good fallback for JS-off. Also note, that you should always use YYYY-MM-DD to inform abouth dateformat. This is localized automatically.\n\nhttp://jsfiddle.net/w7WeS/2/\nand\nhttp://jsfiddle.net/w7WeS/3/\n. changing Options path to shims folder\n\nShims folder is computed automatically. If the name of polyfiller.js is changed and the polyfill-script is loaded async, this computation can be wrong and you have to set the folder manually. \n\nThis generated path can be changed by changing the basePath configuration with the setOptions method.\n\n```\n$.webshims.setOptions(\"basePath\", \"/yourFolderTo/shims/\"); \n//or: \n$.webshims.setOptions({ basePath: \"/yourFolderTo/shims/\" });\n```\n\nIf you do not load it async and/or didn't re-name polyfiller.js, it's a bug and I need a test case. Is this happening in all browsers?\n. wait\n. This should be fixed with next version (1.10.4)\n. I couldn't reproduce this. Can you give a testcase? You can also mail me.\n. Yes, there might be some issues with other scripts, but I need to see it, to know, wether it is a bug in webshims or not. It would really help me to get this testcase, even if it is a little bit more code.\n. Ok, thanks, could you still give me a testcase. It doesn't need to be simplified and if you mail me it stays private :-).\n. Thanks for adding a new locale.\n\nThe steps are:\n1. fork the project \n2. add a new file called errormessages-sv.js in src/shims/i18n\n3. add the following code into the head before calling polyfill:\n   \n   $.webshims.cfg.forms.availabeLangs.push('se');\n   $.webshims.activeLang('se');\n\nInstead of doing 3. you can also directly modify the polyfiller.js in src.\n\nNote, that I'm building the code from the src path, but the demos normally point to js-webshim/minified. To test you can also simply add this file into the minified/shims/i18n folder. In case you have ant you can build webshims yourself. But as soon as your pr is here, I will pull and build myself.\n. Thanks\n. Acutally, I don't have any knowledge about .Net and Nuget. So I'm not really able to do this right :-).\n. Yeah, I'm interested in this. I will mail you in a few days.\n. Yes, please use the input event, instead:\n\n```\n$('input[type=\"number\"]').bind('input', function(e){\n    console.log($.prop(this, 'value'));\n});\n```\n. Change event is not triggered if keypress/keydown/mousewheel is used. Need to implement ui with commit action.\n. This is by design. The problem is that we don't have real shadow dom. Your fix generates a few little problems and is only partial. For example: Now you have two different invalid fields instead of one. Additionally the visible date field is only red in case of valueMissing not in case of a typeMismatch or rangeOverflow/rangeUnderflow. \n\nWebshims provides you some additional helper classes to solve your problem (.form-ui-invalid/.form-ui-valid):\n\n```\n.form-ui-invalid {\n    box-shadow: 0 0 1.5px 1px red;\n}\n```\n\nPlease close this issue if it helps, if not provide more information about your problem.\n. @rocktrond \n\nI would like to close this issue. Could you please give me feedback to my answer above?\n. I tried to reproduce this issue, using the files provided by rails-webshims (simply added statically without rails/ruby) and adding your html/js code, but couldn't reproduce.\n\nCan you look, which shims files are loaded? If you have a testcase online it would help me. I will try to further reproduce it, but could be difficult. You can als mail me.\n. Could you please re-send your information. I can not find your mail :-)\n. Thanks for the testcase. Somehow my normal account eats your mails as spam. the other address (@aperto) worked.\n\nI could track down the bug. You are adding the form dynamically and webshims doesn't track dynamic changes to the DOM automatically. To inform webshims about changes to the DOM, you should use special methods instead of the normal jQuery manipulation methods.:\n\n```\n//append -> appendPolyfill; html -> htmlPolyfill; appendTo -> appendPolyfillTo;\n$('div.main').htmlPolyfill('<div>my new content</div>');\n```\n\nIf the code of your manipulation script can't or shouldn't be changed to one of those methods (for example it is a third party script), you can also hook into a callback/event of this script and call updatePolyfill on the ancestor of the new content.\n\n```\n$('#my-dynamic-container').load('ajax/test.html', function(){ \n    $(this).updatePolyfill(); \n});\n```\n\nYou can find more information about this [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic).\n\nalthough, I didn't find the code, where I should hook into, calling the following line from the script console in IE8/IE9, after loading the form into the dialog did the trick:\n\n```\n$('.wa-modal-body').updatePolyfill();\n```\n\nCould you please close the bug, if this answer resolves your problem?\n. @drewB \n1. While polyfilling elements can take some time (in case of video/input[type=\"date\"]), finding those elements is quite fast. So it wouldn't be bad for performance to call updatePolyfill multiple times. Unfortuantley webshims doesn't detect if an element was already polyfilled, which can create problems, so you can't call updatePolyfill multiple times, sorry (I try to work on this).\n2. It would only possible in modern browsers, so I haven't implemented it. I could think of a debug mode, which helps you to detect this in modern browsers. \n\nIn short nothing of this is currently possible. I'm closing this, please feel free, to open new issues for your new feature requests. I'm not fully sure, but implementing point 1 might take some time and can be buggy in early implementations. (I really need to go through all my code, to add polyfill flags + filter those elements out for the next polyfill round.)\n. @earvinbryanco \n\nI also can't reproduce this issue, can you give me a testcase or more feedback?\n. @earvinbryanco \n\nI can't see your image, it seems somehow broken, can you please re-add your picture?\n\nAbout adding elements dynamically:\nTo inform webshims about changes to the DOM, you should use special methods instead of the normal jQuery manipulation methods.:\n\n```\n//append -> appendPolyfill; html -> htmlPolyfill; appendTo -> appendPolyfillTo;\n$('div.main').htmlPolyfill('<div>my new content</div>');\n```\n\nIf the code of your manipulation script can't or shouldn't be changed to one of those methods (for example it is a third party script), you can also hook into a callback/event of this script and call updatePolyfill on the ancestor of the new content.\n\n```\n$('#my-dynamic-container').load('ajax/test.html', function(){ \n    $(this).updatePolyfill(); \n});\n```\n\nYou can find more information about this [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic).\n. @earvinbryanco \n\nI can't really say for sure, what is happening with your spinbutton controls. However it is possible, that some styles of your site are applied to the step-control. There are some points about the step-controls, which make them a little bit errorprone, but also flexible to add custom styles. Therefore, there might be cases, where I wouldn't fix a misplacement and would suggest, that the developer is using CSS to correct the misplacement. Here is an [example](http://jsfiddle.net/trixta/WJxFe/).\n\nTherefore, I need a testcase to decide, wether this is a fixable bug.\n. Is the position corrected, if you resize the window? (slideDown -> mispositioned elements -> resize -> correct position)\n. I couldn't reproduce your issue. Can you please give me somehow access to your testside? (you can also mail me)\n. @MosheBP \n\nCan you please give me access to your testcase. I really need more to get this fixed.\n. Simply add modernizr/webshims using the \"Manage Resources\" panel. You can simply for the following fiddle:\nhttp://jsfiddle.net/trixta/SWQme/\n. I can reproduce your bug. I saw, that you are using jQuery 1.8.0 in conjunction with webshims 1.8.13. Webshims 1.8.13 is compatible with jQuery 1.6.1+ and 1.7.1+ and webshims 1.9.2 is compatible with 1.7.1+ and jQuery 1.8.1+. jQuery 1.8.0 was never fully supported. Could you please either update both jQuery to 1.8.2 and webshims 1.9.2. Or downgrade jQuery to version 1.7.2? If this bug still appears, I can have a deeper look.\n. I know this is odd, but I have multiple reasons for doing this. The problem is, that we would need shadow dom features to get this right. First webshims [type=\"date\"] polyfill is seperated into UI and API. \n- detection can go wrong (in case of a false negative,the user gets a busted input)\n- datepicker should always show localized formats (i.e. MM/DD/YYYY), while the value should be always in specified format (YYYY-MM-DD)\n- replace the UI even in good browsers, but still use the API of the native implementation \n\nYour example with required isn't right. Actually webshims leverages the native implementation of required in supporting browsers. The only thing, is that webshims detects the error on the native element and shows the polyfill UI on the replaced element. Something to know, while we have this separation on the UI-side. Scripting should be fine to use, means: To get/set properties like value/valueAsNumber/valueAsDate etc. always use $('#date-input').prop('valueAsnumber'/'value'). Even most events like change/input are transferred.\n. @stucox \n\nI hope, you can live with this. I know it is odd and creates some unwanted abstractions, but it's currently the only way - I know - to replace the UI in modern browsers, without destroying the native API.\n\nStill open for improvements\n. Just tested Chrome 22.0.1229.96 m on Win8 and it works for me. Please try to update and test again. If it's working on Win7 on Chrome and not on Win8, it should be a hard to fix bug.\n. thanks for the bugreport!\n. Yeah, you are right, will do a quickfix. Here is the table http://www.w3.org/TR/html5/the-input-element.html#input-type-attr-summary\n\nI think/hope that this was changed sometime, because I tryed to be very accurate.\n. thx, again\n. This depends  on the browser, if you are using the native widget. In the polyfilled/enhaced version, it should work cross-browser:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number\n. I can't reproduce this bug. See here: http://jsfiddle.net/trixta/7u4jf5wf/\n\nAbout the type switch. It is technically not possible to remove specific type UI and behavior in x-browser way. In case you want to have native type=number don't use `replaceUI: true` and only do the polyfill. \n. Yes this is possible. I have this simple [jsfiddle to demonstrate the API](http://jsfiddle.net/trixta/Artst/).\n. Yes, you can try the following build tool:\n\nOpen http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs and watch out for: Customize Webshims lib's polyfiller.js\n. @mreinstein \n\nThere is already a simple build tool:\n- open http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs\n- and search for: Customize Webshims lib's polyfiller.js\n\nDoes this help?\n. Wow, this would be nice. \n\nI want to change my dev build tool from ant to gruntjs and to generate the grunt task combo automatically. (Currently, I have to maintain the combo list in polyfiller.js and in the build.xml).\n\nAdditionally @xiel wanted to create a new/better/nicer demo/documentation site. I let you know, if those things are started. If you still have time to help out then, I really would appreciate.\n. You can not detect the dependencies from the ant file. This file is just for making the combos. It's quite complicated. To get an idea:\n1. Go to the http://afarkas.github.com/webshim/demos/index.html\n2. enter $.webshims.modules into your console\n\nNow you see all modules. Normally each module is represented by one file. Now you can look into a module. There are 3 different interesting properties:\n1. c: represents the combos\n2. d: represensts the dependencies\n3. f: represents the feature (if there is no f. the file itself is the only needed feature file).\n\nBut I don't think, that the build script has to exclude unsued files/combos, because we only have to make sure, that this combo isn't loaded. This is where feature-dummy comes into play. This \"feature\" is a \"non-feature\", which is always supported and get's all combos, which shouldn't be loaded, if we remove a feature from the polyfiller.js\n\nI would try to write a simple version of a new webshims builder next week. Also look into the [builder](https://github.com/aFarkas/webshim/blob/master/demos/demo-js/demo.js#L66) + the polyfiller.js script\n. In my last commits, I made some bigger changes and I'm done with those. If you want to build something better on this, you can take this issue :-)\n\nAnd yes, grunt rocks.\n. @gionaf \nThe builder uses XHR in the background. which means you have to run it over the http/https protocol in Chrome. (file:// isn't supported by Chrome).\n. Indeed this is intersting for both things:\n- using it as a base for DOM polyfills\n- implementing a polyfill\n\nWebshims already has some very similiar helper methods, to implement elements and thier attributes/properties. You can find [some information here](http://afarkas.github.com/webshim/demos/index.html#implement-polyfill).\n\nThe problem with x-tag is, that it doesn't work in IE8- and you can't really polyfill this feature. (Just think of shadowdom and so on)\n\nBUT: I honestly think, webdevelopers should start to use such techniques to write re-usable HTML-components. You won't always need to use \"x-elements\". You can also use markup like this:\n\n```\n<div class=\"accordion\" data-config='{\"toggle\": true, \"multiple\": true}'>\n```\n\nWhich would create an accordion, where the elements can be opened and closed on click (normally only opened) and there are multiple open elements allowed.\n\nI'm trying to use this technique in a project called jme. In this project the following markup creates a time display associated to a audio/video element:\n\n```\n<div class=\"mediaplayer\">\n    <video src=\"...\"></video>\n    <span class=\"currenttime-display\"></span>\n</div>\n```\n\nIf you want to change the time format (default mm:ss), you can write something like this:\n\n```\n<div class=\"mediaplayer\">\n    <video src=\"...\"></video>\n    <span class=\"currenttime-display\"  data-jme='{\"format\": \"hh:mm:ss\"}'></span>\n</div>\n```\n\nAll data-jme attributes can be changed also by calling, jmeProp:\n\n```\n$('.currenttime-display').jmeProp({\n    format: \"hh:mm:ss\",\n    countdown: true\n});\n```\n. can you give me your config polyfill call?. Are you loading mediaelement feature?. Do you have Modernizr.texttrackapi installed?\n. Ok, that's the problem:\nHere is the right config link:\nhttp://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-touch-printshiv-cssclasses-addtest-teststyles-prefixes-elem_track-load\n\nThe feature itself is called elem-track. I try to improve those things. The reason for your issue. webshims isn't implementing mediaelement feature but trys to load a combo, which includes this feature. As soon as you are using the right Modernizr build webshims won't try to load the 17.js file.\n\nI will try to improve this somehow.\n. I don't think, that any of those behavior is wrong. 3em simply means the hole input including the arrow UI shoul be 3em long, it doesn't mean that you have room for exactly 3 charakters. (Try for example <input type=\"text\" style=\"width: 3em;\" />)\n. @doits\n\nSo 3em is always 3em. A browser will render an input with spinbuttons and 3em and an input without spinbuttons and 3em the same size. This can be between 2-4 characters depending on the size of spinbuttons and the specific width of a given character.\n\nWhat you indeed want is the attribute `size`. Here is the [spec for size](http://www.w3.org/html/wg/drafts/html/master/forms.html#attr-input-size). \n\nNote: \n- webshims doesn't take the size attribute into account (and it is impossible, because we can not detect the style \"width: auto\" with JavaScript).\n- browser vendors with spinbutton control, do not seem to make a difference between `<input type=\"number\" size=\"3\" />` and  `<input type=\"text\" size=\"3\" />`\n. The UI of the HTML5 constraint validation is pretty simple and should be customized in most cases. There are some examples demonstrating the API:\n- [example using only CSS](http://jsfiddle.net/trixta/NnNKv/)\n- [example using the JS-API](http://jsfiddle.net/trixta/tLXXN/)\n\nTo give you full control, you always need to use the JS-API to get the Job down. Here is a [good article explaining the API](http://www.html5rocks.com/en/tutorials/forms/constraintvalidation/). If you still have problems, let me know your full requirements, I can try to build a simple example on that.\n. Thanks, I have just changed the way, how I'm handling the child elements of the video and audio element. It now follows the normal principles of HTML. You can add your own fallback messages. Here is an example:\n\n```\n<video controls preload=\"none\" poster=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.png\" style=\"width: 630px; height: 356px;\">\n    <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\" type=\"video/mp4\" />\n    <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\" type=\"video/webm\" />\n    <track src=\"subtitle.vtt\" srclang=\"en\" label=\"some description\" kind=\"subtitles\" default />\n    <p>You need a modern Browser or install the Flash Plugin or simply download the video (<a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\">mp4</a>, <a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\">webm</a>)</p>\n</video>\n```\n. Really good catch, thanks a lot.\n. No not anymore. Many thanks again for this bug report. You really find the worst bugs.\n. Beside some security holes IE6 didn't support that. IE8 and IE9 had the xdomainrequest object. It will be tough, but it's a quite important feature. I will add this using xdomainrequest and flash.\n\nsee also: https://github.com/flensed/flXHR\n. @HenriPodolski \nThx, but this is not a clientside cors polyfill. It simply routes all external AJAX calls to a cors enabled server. With other words it depends on cors enabled browsers without polyfilling incapable ones.\n. Yes, I was actually thinking, that I will use this simple [script](https://github.com/jaubourg/ajaxHooks/blob/master/src/xdr.js), which already hooks into jQuery's ajax protocoll in conjunction with [flxhr](https://github.com/flensed/flXHR) to get the best results.\n\nHere is an article with some limitations of xdomainrequest:\nhttp://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n. Yeah, good point, I will do this. Here is the current list: \n\nAll non listed scripts/files are direct part of webshims and licensed under MIT\n- shims/flashcanvas             MIT                                         http://code.google.com/p/flashcanvas/\n- shims/FlashCanvasPro          FlashCanvas Pro License (closed)            http://flashcanvas.net/\n- shims/jwplayer                    Creative Commons                            http://www.longtailvideo.com/\n                              Attribution-NonCommercial-ShareAlike 3.0\n- shims/swf/JarisFLVPlayer.swf  GPL 3.0                                     http://jarisflvplayer.org\n- shims/excanvas.js             Apache License 2.0\n. great catch, thanks\n. I have fixed this issue (Commit messages are a little bit off). Please note: If you are using replcaeValidationUI and you checkValidity you do not need to call the validation bubble, because checkValidity will trigger an invalid event.\n. Oh man. This is a [chrome bug](http://code.google.com/p/chromium/issues/detail?id=113352). As soon as you replace the validation UI with those of webshims everything works. The reason for this is a overflow hidden on the parent div (should have used a different technique to create a block formatting content).\n\nWill fix this.\n. thanks for reporting\n. @benlancaster \n\nI couldn't reproduce your bug. My first guess was the stylesheet loading. Try to load webhshims without styles:\n\n```\n$.webshims.setOptions('loadStyles', false);\n$.webshims.polyfill('forms');\n```\n. @dohomi \n\nDoes this happen with the uncustomized polyfiller.js version? The form-extend module was split/renamed with 1.9.4 (into form-shim-extend and form-native-extend). Therefore there shouldn't be any calls to load form-extend. Is it possible, that you have some older files inside  of your shims directory.\n. You are describing two different problems:\n1. dynamic DOM creation:\n   In case you are creating HTML5 content dynamically after polyfill is called, you have to inform webshims about this. This is described [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic) and here(https://github.com/aFarkas/webshim/issues/166#issuecomment-9207336) you find a similiar issue with a short explanation\n2. In case you have included jQuery UI, webshims doesn't load the jQuery UI dependency. To implement datepicker, webshims needs jQuery UI widget, core and datepicker and for slider, webshims needs widget, core, mouse and slider.\n\nSo if you have for example included widget and core, but not datepicker, mouse and slider. Get those files, merge them into one file. And configure $.webshims.modules[\"input-widgets\"].src to point to this file (you have to use a relative path from the shims directory or an absolute path). You can find some information about this [here](afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#partial-ui-loading)\n\n```\n$.webshims.modules[\"input-widgets\"].src = \"../jquery-ui.slider-datepicker.min.js\";\n```\n. About the calls: They are not expensive, because webshims always uses simple selectors. Either just input or more specific input[type=\"date\"] and so on. So they are pretty fast even in IE7. However, webshims currently does not always properly detect, wether an element already was \"shim-med\". So if you  call updatePolyfill multiple times on an element, which hasn't changed, it might lead to some other problems (events are bound twice and so on). I will open a ticket for this.\n\nAbout the other problem, it might be possible, that partial jQuery UI is loaded after webshims and if you delay the polyfill call, it is there, if not, webshims will load the full jQuery UI. However for performance it is always best to configure the jQuery UI module and only include the files you need.\n. sorry, got really sick.\n\nsounds, could you look wether [this](https://github.com/aFarkas/webshim/issues/166#issuecomment-9207336) solves your issue?\n. @czachor\n\nDid the comment above help you? Do you need any further help? If not I will close this issue.\n. @czachor \n\nDo you have a testcase? Webshims should hide the original input using JS/inline style. Sorry, for taking so long to answer.\n. @czachor \n\nThanks for the testcase. This is a more complex problem (for me). But I need to improve this behavior in the future. Currently you can fix your issue by changing your div#add-sample-helper to a script element with a special type attribute:\n\n```\n<script type=\"template/html\" id=\"add-sample-helper\">\n    //your form html\n</script>\n```\n\nNote: You need to set the type attribute to something like \"template/...\"\n\nAnother thing about your placeholder. The normal format of date is yyyy-mm-dd and a placeholder is not allowed on type=\"date\". However webshims will read the data-placeholder attribute and sets it on the shimed element.\n\nTry the following:\n\n```\n<input type=\"date\" data-placeholder=\"RRRR-MM-DD\" />\n```\n\nNote that, I'm using the normal W3C format and webshims automatically converts it to your locale.\n. @xyu \n\nThanks for your PR. And sorry for the delay, I was very sick, jQuery UI is overloading outerWidth for a while and jQuery 1.8 has implemented the feature to use outerWidth also as a setter. \n\nNeither jQuery UI nor jQuery want to change the signature of outerWidth. I think you are either using an incompatible combination of jQuery and jQuery UI (You are using jQuery edge with jQuery UI 1.8.x in your fiddle. But you have to use jQuery UI 1.9.2+ inconjunction with jQuery 1.8.2+) or it is a bug in jQuery edge. But I'm pretty sure the code changes aren't needed.\n. @cori\n\nMany thanks for your contribution. The hideDelay is already exposed as global object. But it's not really documented.\n\nYou can set/change it with the following code:\n\n```\n$(function(){\n    //remove hide delay\n    //$.webshims.validityAlert.hideDelay = 0; //false\n\n    //set hideDelay \n    //$.webshims.validityAlert.hideDelay = 8000;\n});\n```\n\nI don't want to add to much config options to webshims. Also note, that next webshims version will be a simple compatibility update. The webshims version, which will include many new good features is developed in the [dev branch](https://github.com/aFarkas/webshim/tree/dev)\n. @rpk103\n\nThx for the bugreport. I can reproduce this bug and also found the cause. I will fix this weekend.\n. I can't really reproduce your bug. But webshims focuses on polyfilling DOM-APIs by extending jQuery. It does no implement CSS features like gradients.\n. @tomascassidy \n\noh, sorry. Yeah, github has removed this feature, so I couldn't update the download site. I have removed the download links and yeah later is almost better.\n. @tomascassidy \n\nthx, for the information.\n. sorry, that this is taking so long. will look into this soon.\n. thx.\n. Thx, for the bugreport. Bootstrap is using invalid/bad jQuery code here. Here is a simplified testcase:\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Test</title>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js\"></script>\n    <script>\n        $(document).on('.dropdown-menu', function (e) { e.stopPropagation() }); // $(document).on('', $.noop);\n        $(document).off('.bar'); //$(document).off('.dropdown-menu');\n        console.log($._data(document, 'events'))\n    </script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThe following code: `$(document).on('.dropdown-menu', function (e) { e.stopPropagation() });` does not mean bind a handler and execute it, whenever an event with the namespace `'.dropdown-menu'` is triggered. It simply means bind to an event with name `\"\"` (empty string). Using an empty string as an event name is neither supported nor a good idea.\n\nSo bootstrap has to change thier code.\n. The bug seems to be already known, see twitter/bootstrap#6887 and twitter/bootstrap#6835\n. Hi,\n\nI think this is by Design. If a browser supports form validation. Webshims doesn't add any messages. They come from the browser.\n\nIf you want to control those messages, you can use either the following config:\n\n```\n$.webshims.setOptions({\n    forms: {\n        customMessages: true,\n        replaceValidationUI: true\n    }\n});\n```\n\nor the more obtrusive way (not recommended):\n\n```\n$.webshims.setOptions({\n    forms: {\n        overrideMessages: true\n    }\n});\n```\n\nDoes this help?\n. Works for me. Please see http://jsfiddle.net/PGZsm/2/\n\nCan you give me more information on this?\n. Both methods of defining options should be fine.\n. It seems, that you somehow have used an older version of webshims with jQuery 1.9.x. Either you can use jQuery 1.8.x or download [webshims 1.9.6](http://corrupt-system.de/webshims-1.9.6.zip). Did this help? I can only guess. Or you have updated and something went wrong and the files weren't overwritten.\n. Thx, for your bugreport. It seems, that this behavior is caused by two different (new) Chrome bugs, yeah.\n\nI'm trying to investigate this further and write a workaround for this. You can remove this strange behavior by changing the following option:\n\n```\n$.webshims.setOptions({\n    forms: {\n        validityUIEvents: 'focusout refreshvalidityui'\n    }\n});\n```\n. Here is a simplified testcase for those two bugs: http://jsfiddle.net/trixta/jXVvP/\n1. change bug\n   The time-control dispatches the change event to often\n2. Changing the className property influences the user input\n\nDo you want to [fill a chromium bug](http://code.google.com/p/chromium/issues/list)? \n. Bug is reported: http://code.google.com/p/chromium/issues/detail?id=179708\n. Yes, if you grab the new version you don't need that change.\n\nThe bug should be also fixed in a future Chrome version. Unfortunately, the chrome developer refused to accept, that the change event is triggered to early/often. Although the specification states that a \"text input might not have an explicit commit step\". This makes the difference between the input event and the change event totally useless. \n. thx for your report!\n. @maletor \n\nCan you give me some more informations? What have you done? What are you expecting? What happened? Are you using a real IE8 or just an IE8mode, in which IE version?\n\nWhich version are you using? The demo site is using jQuery 1.8.3 (not 1.9) and webshims 1.9.6.\n. If you are using IE8mode, which is the real IE version? I assume you have switched to IE10 recently. Actually the IE modes in IE10 are totally busted and it's not a webshims bug, it's a general MSIE/jQuery issue.\n\nThe following code returns an empty string (\"\") in IE10 in IE8mode\n\n```\n$('<form />').attr('novalidate'); //should return undefined, but returns \"\" in IE8mode of IE10, but not in real IE8 or IE8mode of IE9\n```\n\nThis is the reason, why the script fails. It might be possible, that I can fix this with webshims, but...\n- it's a jQuery bug and should be fixed there\n- it's a IE10 mode bug and you shouldn't test your app/site using IE10 browser modes, anymore. \n\nCould you fill a bug in jQuery's bugtracker for me? As said the code above should return undefined. There might be other busted attributes as well. In most cases jQuery has to use getAttributeNode or attributes[name].specified to fix this issue.\n\nAgain this isn't happening in real IE8 or IE8mode of IE9!\n. @DanielNill \n\nI'm pretty sure, that this is a different issue with a similiar behavior. But I can't reproduce it. I have special code to move the validation before any bound submit events. Do you have a testcase for me?\n. @maletor \n\nThanks, I can not reproduce this behavior on the demo site. Do you have another testcase for me? What is returned, if you get the noValidate on the form?\n\n```\n$('form').prop('noValidate');\n```\n. @maletor and @DanielNill \n\nI really want to fix this issue, but I can not reproduce it. Can you help me?\n. @maletor \n\nOk this is is really strange. I also tested native IE8 on XP. Have you tested IETester? Still hope I can get a simplified testcase.\n. Have you any new information on this? Can you test current gh-page version and look into your script console. Are there any console / error messages?\n. Please re-open, if this bug still exists in 1.11.2RC\n. In case you want to use DOM-APIs, it is always best to load webshims as fast as possible a delay the ready event, (webshims delays the ready event by default, if it is called before DOM-Ready) until everything is implemented. (DOM-APIs are all $.prop methods or special methods like play/checkValidity).\n\nIn case you only want to use Markup-API (i.e. simple HTML or $.attr), you won't need to delay the ready event.\n\nFrom your code I assume, you are only using Markup-APIs and your problem is, that the new dynamic content isn't \"polyfilled\". To get this done, simply call updatePolyfill on the container of the new content. A short description is documented [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic) and [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions):\n\n```\n$.webshims.polyfill('forms forms-ext');\n$(function() {\n    $(\"#load-div\").load('myfile.html', function() { // callback for after load is done\n        $(this).updatePolyfill();\n    });\n});\n```\n\nIn case you don't want the ready event delayed, you can use the following options (This means, that DOM might be faster ready, but it's not safe to use HTML5 DOM-APIs), which is documented [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-options):\n\n```\n$.webshims.setOptions({ \n    waitReady: false\n});\n$.webshims.polyfill('forms forms-ext');\n$(function() {\n    //load after DOM-READY but before new content is arrived (better against FOUC)\n    $(\"#load-div\").load('myfile.html', function() { // callback for after load is done\n        $(this).updatePolyfill();\n    });\n});\n```\n\nCould you please close this issue, if this answers your question(s).\n. Webshims is a collection of many scripts. You need to download the [full package ](http://corrupt-system.de/webshims-stable.zip), but only reference polyfiller and its dependencies (jQuery/Modernizr). \n\nHope this helps\n. In general I like those dependency/packaging tools. But I couldn't look deeper into this. Does it have an advantage over [bower](https://github.com/twitter/bower)? Can it handle Modernizr tests?\n. The reason for this, is that webshims uses some clientside combos to minimize http-requests. If a webshims test is not testable, you might get a wrong combo file. \n\nBut yeah, I can improve this. Should be a little bit tricky and if it doesn't result in a much bigger polyfiller.js, I will add this to next version.\n. Just improved. Thanks for your report.\n. Many thanks for your contributions. Please note, that the development for the next major release is done in the [dev-branch](https://github.com/aFarkas/webshim/tree/dev). I hope, I can merge those changes into the master branch soon.\n. Thanks this should be fixed in the dev branch. I'm using totally new input widgets there. Would be really great, if you could have a look and could be give some feedback abouth missing features. They are currently undocumented and unstyled, but you can get a good overview over the current feature-set on the '3-webforms-widgets.html' page.\n. do you have a testcase? or can I see the page somewhere???\n. many thanks. sorry for this bug.\n. Webshims range polyfill implements WAI-ARIA and is tested with screenreaders. Using WAI-ARIA [roles](https://github.com/aFarkas/webshim/blob/master/src/shims/range-ui.js#L19), [states](https://github.com/aFarkas/webshim/blob/master/src/shims/range-ui.js#L80-83) and [names](https://github.com/aFarkas/webshim/blob/master/src/shims/form-number-date-ui.js#L75) already provides the information that assistive technology requires. The range polyfill already gives the current value as feedback to a11y users, while he is changing the value. It already has a quite good UX for a11y users. And implementing this \"feedback\" feature would destroy the WAI-ARIA feature. \n\nI also haven't found further discussion about this feautre.\n. @brucelawson \n\nJust saw your comment. \n\nNo problem. It's quite hard to fool me with a11y issues. Webshims has quite good support a11y using WAI-ARIA. Webshims' datepicker for example is implemented according to the [WAI-ARIA 1.0 Authoring Practices](http://www.w3.org/WAI/PF/aria-practices/#datepicker). An [input[type=\"range\"] with labeled datalist options](http://jsfiddle.net/trixta/qxCcz/) does not only render range ticks, but also enhances the spoken value in screenreaders using aria-valuetext.\n. No webshims implements novalidate and does  not ignore novalidate. Can you give me more information?\n. works for me, see here:\nhttp://jsfiddle.net/DTqxA/98/\ndon't know what you mean. Can you give me an example?\n. Try the following code:\n\n```\n$('.chosen').each(function () {\n    var shadowElement = $(this).next().closest(\"chzn-container\");\n    if (shadowElement[0]) {\n        webshims.addShadowDom(this, shadowElement);\n    }\n});\n```\n\nYou don't need to bind to special events. And note, that I'm testing shadowElement[0] / shadowElement.length\n. The code for this is still working as expected. You can find an example here: http://jsfiddle.net/trixta/Artst/\n\nIf it still doessn't work. I would need a simple testcase with some code.\n. @dohomi \n\ndoes this work for you now?\n. Please re-open, if the example code above doesn't work for you.\n. Do you have a testcase/example for your issue?\n. I would think, this has something to do with dynamic creation of DOM elements. See [documentation](http://afarkas.github.io/webshim/demos/demos/shiv.html#dynamic). But in this case placeholder would work.\n. @hejjahejja \n\nIf you still have problems, please re-open this issue.\n. @hejjahejja \n\nI don't really see code here. And yes, IE10 modes are busted.\n. Ok, you are using extra features, which are not a direct part of a polyfill. If you want to get those features, you have to include the custom-validity.js file located in the extras folder.\n. Thx, fot the bugreport. Can you close this issue if this fixes your bug?\n. please re-open, if this doesn't fix your issue\n. I'm not sure, what you actually mean. The form behaves like it is specified. If a user invokes an invalid submit or you do a scripted click on a submit button of an invalid form, the submit is aborted and there is no submit event. Triggering a submit event by script will abort the submit and dispatches a submit event, but does not invoke the validation UI.\n\nBut I also found a bug in webshims in conjunction with jQuery 1.8.3. I just uploaded a fixed version. Please let me know wether this fixes your bug.\n. Many thanks. This (obvious) bug came from a big rewrite/refactoring in version 1.10.x. You can add the following code to fix this, until I release a stable version:\n\n```\nif(Modernizr.formvalidation && !webshims.bugs.bustedValidity){\n    $('input').each(function(){\n        $.prop(this, 'validity');\n    });\n}\n```\n. Can you close this issue, if this fixes your bug?\n. Are you using IE8mode of IE10? Are there any script errors console messages?\n. shouldn't be a problem. i will make this an option. but currently i need to stabilize the current version and i have a feature stop.\n. ok, i implement it. and you test :-D\n. Try the newest master-version.\n. Yes, but currently not a high priority.\n. Yes, this is possible and documented [here](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions) (see **no shadowdom**)\n\nI have updated your example:\nhttp://jsfiddle.net/trixta/aC5pk/3/\n. Many thanks for your contribution. I added some line notes.\n. thanks again\n. wow, thanks. This is a blocker. Can your try the [1.10.7RC1](https://github.com/aFarkas/webshim/tree/1.10.7RC1) version and confirm that all your problems are fixed?\n. Thx, will look into this. But implementation will take 1-2month\n. The truncation was fixed [here](https://github.com/aFarkas/webshim/commit/fe886105a7543f991f4f00f1eb0ba100e4e9209e). About the locale, I added the clear locale, but thier are still missing some french translations.\n\nIt would be very kind of you, if you could look trough and correct/enhance and translate those values. You find it here: https://github.com/aFarkas/webshim/blob/master/src/shims/i18n/formcfg-fr.js\n. Yeah seems fine. But you forgot two keys month.currentText/week.currentText :-). I will take another PR, if you want to change this.\n. thanks again\n. Just saw. There is still:\n\n```\nmonth: {\n    currentText: 'This month'\n},\nweek: {\n    currentText: 'This week'\n}\n```\n. thx!!!\n. I do not really understand, what you mean. From my testing. If a user types in an invalid dateformat. This value isn't transferred to the \"real\" input, therefore it's an empty string. The only thing I can should do is, to also clear the visual input, instead of leaving the invalid/partial date.\n\nMight it be possible, that you are adding a name attribute to the visual input and are using this one???\n. Please re-open, as soon as you can provide a testcase.\n. @joeybaker \n\nthanks, I'm currently not sure, wether I'm allowed to specifiy a hole directory (i.e.: 'demos/js-webshim/minified') for this. Additionally it's currently not possible to add all Modernizr dependencies via bower.\n. @joeybaker \n\nJust added bower.json. Please report any new bugs regarding bower support in a new issue.\n. This is fixed now.\n. Yes, this is possible, but you don't really need it (and it is not straight forward). Webshims is already checking it. the only thing is, that it looks like a bad usage and therefore this \"error/warning\" message. If you want to remove all warnings simply set in production:\n\n`webshims.debug = false;`\n. Yes, changing W3C standard attributes/properties (step/value/max/min/required) always works dynamically using $.prop/$.attr or with thier content attributes. \n\nThe configuration options for the widgets have to be configured differenty and they can't be configured dynamically. To get what you want, you have to use the following markup:\n\n`<input data-date='{\"startView\": 2}' type=\"date\" value=\"2009-06-12\" id=\"date\" />`\n\nHere you find some other examples for markup configurations: http://jsfiddle.net/trixta/VNuct/\n\nIf this doesn't help, please re-open this ticket\n. sorry, fixed it.\n. This seems to work for me. See http://jsfiddle.net/trixta/smqaL/\n. @AMA3 \n\nUnfortunatley the problem is quite more complex and it is impossible for me to do the right thing. You want to make it feel as native as possible, so do I. If you run the following code `alert($(':invalid').length)` inside the jsfiddle above you will see, that the length of invalid elements is higher than in the same jsfiddle with mirrorValidity turned off. The key problem is, we don't have shadow dom in all browsers yet and therefore webshims' UI components can be reached with JS/CSS. With other words `mirrorValidity = true` makes CSS feel more native and `mirrorValidity = false` makes JS feel more native.\n\nSo I have to decide, which is more important. And these are some of the points:\n- :invalid selector is considered bad for CSS usage (more important here: :user-error),  but quite good for JS, i.e.: QSA and matchesSelector\n- :invalid selector can never ever work in IE-7-9 or FF 3.6, which are also supported by webshims. Why should I make an option on by default, which can't work in 50% of supported browsers?\n- mirrorValidity is using setCustomValdity behind the scenes. setCustomValidity is a quite obtrusive method and can result in some unexpected problems/errors. For me I would appreciate it, if the WhatWG/W3C would add a addCustomValidationRule/RemoveCustomValidationRule API instead.\n. I have a very strong opinion on this and you couldn't convice me. \n\n### 1. CSS more important than JS\n\nMaybe, but not in case of :invalid. See here:\n\n> Tantek: More background here: one of the reasons for :-moz-ui-invalid was a short-term fix to be able to build UI because :invalid wasn't reasonable for UI.\n> http://logs.csswg.org/irc.w3.org/css/?date=2012-08-13\n\nor\n\n> UX concerns with the current approach...\n> http://alistapart.com/article/forward-thinking-form-validation#section5\n\nThere are more, believe me.\n\n### 2. :invalid has to be right in JS in the first place\n\na) It's important for JS\nHere is a small demo, which breaks with mirrorValidity: http://jsfiddle.net/trixta/B8pBA/\nAs you can see, the small script can really add much more meaning to the invalid form. And this is a key point about HTML5 form validation. The validation UI of HTML5 was designed to be compatible with all forms, which is good, but it wasn't designed with good UX. If you want to achieve this, you have to learn the DOM-API to improve it. Please teach this your students (see also http://www.html5rocks.com/en/tutorials/forms/constraintvalidation).\n\nI have added a simple but powerfull instant/real-time validation into webshims (see http://jsfiddle.net/trixta/XqPhQ/), but I think people should learn how to this themself.\n\nb) Webshims always behaved this way\nYou really need to have extrem strong arguments to change a behavior, which will break existing scripts\n\n### 3. setCustomValidity is in use\n\nsetCustomValidity is used, which means you have to keep track all kind of possible changes. This is quite unrealistic. Just think of a form autocomplete plugin (or next generation autocomplete attribute feature, soon in chrome).\n\nIn general: I'm always open to all kind of feature requests and options, but if I can't do it right, I simply can't do it right. You wanted this feature, here it is. But especially because of 2 and 3 I have decided to make it an opt-in. And myself will never ever opt-in.\n. You are doing everything right, you just have to put the formcfg-pl.js in to the shims/i18n/ directory.\n\nHere is a short explanation:\n1. Create a file formcfg-pl.js in schims/i18n/ take the [english version as a template](https://github.com/aFarkas/webshim/blob/master/src/shims/i18n/formcfg-en.txt) (don't forget to change `jQuery.webshims.formcfg.en` -> `jQuery.webshims.formcfg.pl` for example\n2. Register your locale\n   `webshims.cfg.forms.availabeLangs.push('pl');`\n3. Set activeLang to 'pl'\n\nDon't forget to make a PR with your polish cfg/locale :-D\n. Are you updating from a 1.9.x version? All input widgets are re-written with 1.10.x version and this module is gone. You can simply remove this line and everything should be fine.\n. @hejjahejja could you provide an online example or mail me one?\n. This actually is a jQuery mobile issue produced by the textinput widget. The best thing you can do: \"Disable it.\" The main feature of the textinput widget is to wrap all input elements in a container. To be honest, I don't understand, that a libary for mobile devices is heavily altering the DOM only for layout issues. \n\nHere is a quick workaround, which has to run before domready/pagecreate whatever:\n\n```\n$.mobile.textinput.prototype.options.initSelector = $.map($.mobile.textinput.prototype.options.initSelector.split(', '), function(sel){\n    return sel+':not(.ws-important-hide)';\n}).join(', ');\n\n$(document).on('textinputinit', function(e){\n    var parent = $(e.target).parent()\n    parent.next('.input-buttons').appendTo(parent);\n    parent.prev('.ws-important-hide').addClass('ui-input-text').prependTo(parent);\n});\n```\n\nOf course you need to attach right styles to the input button element itself.\n\nI couldn't reproduce the IE10 bug, so I really need a testcase for that.\n. @hejjahejja,\n\nyou might find this interesting: http://afarkas.github.io/webshim/demos/demos/webforms/jquery-mobile.html\n\nOnly works with webshims 1.11.4-RC1+\n. I'm not sure, what you want to achieve. I would need to see some code. If you change the value programmatically you can update the validation ui with the event refreshvalidityui on the form field. If you want to reset the ui, you can either trigger a reset event on the form or resetvalidityui on the form field\n\n```\n$('input').val('foo').trigger('refreshvalidityui');\n```\n\nor\n\n```\n$('input').val('foo').trigger('resetvalidityui');\n```\n\nIf this doesn't help, please provide a testcase.\n. If you want to change the format for en, you should do the following:\n\n```\n$.webshims.formcfg = {\n    en: {\n        dFormat: '-',\n        dateSigns: '-',\n        patterns: {\n                 d:\"yy-mm-dd\"\n             }\n        }\n  };\n\n  $.webshims.activeLang('en');\n```\n\nI don't really understand your second problem. I need more information about this. The dateformat, which can be entered, depends on the of your browser (you can get the current lang by calling webshims.activeLang() and set it with webshims.activeLang('en') .\n\nThe format for your Backend and your JS is always yyyy-mm-dd.\n. datetime is not supported. dateteime-local is. I don't want to add styling for type=tel or type=search. This is not part of the spec.\n. This depends on your browser and the locale of your browser. Usually you only see customized messages in polyfilled browsers. If you want to see custom messages in all browsers you have to do two things (see also: http://afarkas.github.io/webshim/demos/demos/webforms.html#custom-error):\n1. add customMessages to true:\n   $.webshims.setOptions('forms', { customMessages: true });\n\nor (better for performance but messages are not ready on DOM-ready):\n\n```\n$.webshims.setOptions('forms', { lazyCustomMessages: true });\n```\n1. replace native UI with custom UI\n\nThere are a lot of ways to do this. The most easiest way is by config:\n\n```\n$.webshims.setOptions('forms', { replaceValidationUI: true });\n```\n\nIf you want to see a specific language you should set activeLang:\n\n```\nwebshims.activeLang('ja');\n```\n\nAll config should be called before you invoke the webshims.polyfill method.\n\nHope this helps.\n. Here is another nice feature, you might want to use. http://jsfiddle.net/trixta/XqPhQ/\n. @prasanthkc \n\nIn case you want to use the DOM-API to modify the following properties disable, readonly, max, min, step, list and value, you should always use the polyfilled $.prop method.\n\n```\n$('input.rangeSlider').prop('disabled', true);\n```\n\nDoes this help? What do you want to achieve?\n. Seems to work for me. Here is a simple jsfiddle: http://jsfiddle.net/trixta/PxeSd/\n\nCan you give me a testcase?\n. Thx, should be fixed now.\n. @Ineluki \n\nIf you look into the validityState object, you will see, that Chrome also reports a valueMissing error and that the value is indeed an empty string.\n\nI can improve this, but this means, that you have to add validationsMessages for the badInput case and not for typeMismatch.\n. thx\n. @djesse \n\nI have changed my z-index, but normally this is something, you can and should correct yourself in your stylesheet. What should I do, if someone now opens a bug. Datalist is placed over jQuery UI dialog? If you don't use overflow: hidden in your page/webapp it might be a good thing to place all popovers relative to the opener-element and not to the body element:\n\nThis way you can use a very low z-index for your popover, but the popover is always inside of the z-index stacking:\n\n```\nwebshims.setOptions('wspopover', {\n    appendTo: 'element'\n});\n```\n. Yeah, I will implement datetime-local first. But this will take 1-2 month. Untill then you can combine date and time input elements.\n. @oddityoverseer13 \n\nI have implemented the datetime-local input type. Additionally, you can mix date and time. You find  [some input widget examples here](http://jsfiddle.net/trixta/VNuct/).\n\nDoes this fit your needs? Do you need a special feature on top of this?\n. @terinjokes \n\nThanks. Yes this should fix all meridian time locales\n. Thanks a lot!\n. Yes: If the readonly attribute is specified on an input element, the element is barred from constraint validation. (http://www.w3.org/TR/html5/forms.html#the-readonly-attribute)\n\nWhy don't you use the webshims date picker???  ( `webshims.polyfill('forms forms-ext');`/`<input type=\"date\" />`).\n\nThere are [many different config options for input type=\"date\"](http://jsfiddle.net/trixta/VNuct/). Do you need a special feature?\n. @JvilleDjango \n\nI really would like to know, why you don't use the build-in datepicker.\n. Yes this is possible: http://jsfiddle.net/wFUF9/38/\n\nSimply trigger an 'updateshadowdom' event.\n\n`$(document).trigger('updateshadowdom');`\n. Thx, it's fixed now. \n. The filereader-feature is ready to use. It's just a documentation problem :-D.\n\nThe code is based on the following plugin: https://github.com/Jahdrien/FileReader (need to add some legal notice?!?\n\nChanges to the plugin:\n- No need for jQuery UI\n- no need to include swfobject\n- fileList property can be accesed through the DOM-Element using $.prop `$('input[type=\"file\"]').prop('fileList')`\n- no need to execute the $.fn.fileReader plugin\n- Due to the obtrusiveness of the used method an author hast to add the class `ws-filereader` to all input elements, which should have the fileList feature.\n. Many thanks for your help. I made some small changes. Feel free to enahnce it further.\n. I think this bug/restriction in Magnolia was already fixed. Are you using an older version? I would suggest to patch this version instead of trying to change, how webshims works.\n\nHowever you can disable loading the stylesheet:\n\n`$.webshims.setOptions(\"loadStyles\", false);`\n\nAnd embed the a modified stylesheet your own.\n. What do you mean exactly here. Do you mean the follwoing:\n\nIf we have the follwoing HTML:\n\n```\n<input type=\"date\" data-foo=\"bar\" />\n```\n\nWebshims creates sometimes:\n\n```\n<input type=\"date\" data-foo=\"bar\" class=\"ws-important-hide\" /> <input type=\"text\" class=\"ws-date ...\" />\n```\n\nWithout copying the `data-foo=\"bar\"` to the generated element? Although this might be sometimes appreciated sometimes it is not. I would like to see, what you want to achieve here or what your problem is, to make a descision, how to handle this problem.\n. Please re-open, with a testcase explanation of what you want to achieve.\n. Hope this is ok for you. I see this as a won't fix\n. +1\n. thx.\n. I can not reproduce this. Do you have a simplified testcase or can you point me to a website. You can also mail me to keep it private.\n. @peterhartmann \n\nYes, please give me access to your site as soon as possible.\n. @peterhartmann \n\nI'm closing this. But if the issue remains and site is online, you can send me a message.\n. Seems to be the same Issue #163. Please comment in this [original issue](https://github.com/aFarkas/webshim/issues/163)\n\n@Dreamwalker666 or @devlife can you explain me, what I have to do, to create a nuget package?\n. Yes, this is a known issue. It simply means, that neither you nor I have configured a default text for the current button. In this case webshims falls back to the currentText for the type=\"date\" input. \n\nThis should be fixed now for the [en](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/i18n/formcfg-en.js#L61) and de locales. Feel free to fix this also for other locales.\n. I have just put bootstrap 3.0 and webshims together and it works for me (input type=\"date\", type=\"number\", input[type=\"range\"]). Can you give me an example/testcase to reproduce this issue?\n. Thx, didn't spot this issue. Will fix it soon.\n. Yes, you should bind to the original element. \n\nThe change event is triggered if a a) value was changed by the user and b) commit action (mouseup or keyup in case of a range input) or a activation/blur behavior happened. The behavior in FF is correct, while the behavior in Chrome is busted. Actually Chrome-Dev doesn't want to change this.\n- http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#event-input-input\n- http://code.google.com/p/chromium/issues/detail?id=155747\n\nIs this just a question or do you think there is something wrong with webshims implementation. Please re-open, if there is a bug.\n. The input event is already fixed by webshims in IE10/11. I have just added some code to fix the change event in IE10/11, chrome and Safari. The fix is currently turned off by default. You can turn it on by setting the fixRangeChange to true:\n\n```\nwebshims.setOptions('forms', {fixRangeChange: true});\n```\n. I'm not sure, what you mean here. Webshims is already reading the navigator's locale (`navigator.browserLanguage || navigator.language`) to render date inputs in the locale of the browser.\n\nIf you want to change the locale to the locale of the page, you can simply use:\n\n`webshims.activeLang( $('html').prop('lang') );`\n. Unfortunatley, I can't take this PR. All locale's should be added in a different JS-File (see: https://github.com/aFarkas/webshim/tree/gh-pages/src/shims/i18n). Called formcfg-[language-code].js. Take the [formcfg-en.js](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/i18n/formcfg-en.js) (includes all needed locales and the formcfg-pt-PT.js has a starting point.\n. This is a bigger issue. Will release a new version soon.\n. Thx, for testing\n. Made some improvements for Chrome/Safari (https://github.com/aFarkas/webshim/commit/184b47d3bdafaf1becfbf4194fe34b2d7e50a992)\n. @hparra \n\nNice work. Could you test the new webkit fixes for Webkit/Blink? I really would appreciate your work on this. It's really a pain in the ass, that Chrome/Safari have a wrong implementation for the change event. This is not only true for input[type=\"range\"]. The implementation is wrong in case of all new HTML5 input types (date, number, month etc.).\n. about range styling: http://afarkas.github.io/webshim/demos/demos/webforms/styler/index.html\n. I'm closing this, feel free to make some more tests with webshims 1.11.5\n. hey @mreinstein \n\nThis would be awsome. I'm sure I would use a refactored more usable documentation. If you want you can reuse this logo: http://dribbble.com/shots/925734-webshims-logo\n\nping @xiel \n. looks great!!!\n. @mreinstein \n\nSorry for taking so long to answer. Yeah you are right. The documentation should only have a shorter intro, a quick intall guide, explain the principles and then only short API linking to other examples. The last three Accordion items can be skipped entirely.\n. It's already part of [master](http://rawgithub.com/aFarkas/webshim/master/demos/index.html). But still needs some more work to really switch. There are some missing parts. Especially for webform widgets and mediaelement. \n\nBut of course you can use it now. Or help to improve it.\n. Just made some changes to the new docs. Please look here: http://rawgithub.com/aFarkas/webshim/master/demos/index.html\n\nWhile documentation isn't fully ready yet. I would like to switch in the next couple of days. Please look if you find something, that absolutley needs to be done before. \n. @HenriPodolski \n\nYou should be able to use both. Here is a common example:\n\n``` html\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-text\">\n            <label>Input</label>\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 1\" pattern=\"[0-9]*\" required=\"required\" />\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 2\" pattern=\"[0-9]*\" required=\"required\" />\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n```\n\nFrom this example, it's also obvious that data-errormessage is more specific and should be treated with higher priority.\n. @hannesjohansson \n\nCurrently no there is no configuration for this. But let's fix this bug first.\n\nI'm using jQuery's position method, which should position the placeholder right. I think it's either a small CSS problem or a jQuery position bug. Can you provide me with a testcase.\n\nCould you also run the following code:\n\n```\n$(function(){\n    $('input[type=\"password\"][placeholder]').offsetParent().css('zoom', '1');\n});\n```\n. Yes, this pretty normal. But from the inline-style I see that positioning isn't executed (we need a top/left value here, which means that there seems to a script error.\n\nDoes the follwoing code do something?\n\n```\n$(function(){\n    $(document).trigger('updateshadowdom');\n});\n```\n\nCan you look into the script console. I'm pretty sure\n. You can also mail me a (simplified) testcase.\n. Ok, thanks. This is not really a bug. Simply use `$(document).trigger('updateshadowdom');`:\n\n```\n$('#showform').click(function() {\n    $('.hiddenform-wrapper').toggleClass('active');\n    $(document).trigger('updateshadowdom');\n});\n```\n\nSee also [re-rendering shadowelements](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions)\n. I'm not totally sure what you mean here. To me a datepicker in a bootstrap modal looks like this:\n\n![modal-bootstrap](https://f.cloud.github.com/assets/188254/1482749/76b701f2-46e9-11e3-89ac-d5412e887e9e.jpg)\n\nFor me this is fine. I think you want to configure the placing of the datepicker dialog. This can be achieved with the popover configuration.\n\nHere is an example:\n\n```\n<input type=\"date\" data-wspopover='{\"appendTo\": \"body\"}' />\n```\n\nThis will place the modal to the body element. You can add any selector or the keywords 'auto' or 'element'. Can you give me an example. I would try to improve the 'auto' algorythm then.\n. @bertBruynooghe \n\nIf this is is still a bug with webshims 1.11.3. I really would like to investigate this issue.\n. This bug should still exist in 1.11.3, I fixed it with https://github.com/aFarkas/webshim/commit/a0c6358842d96977515ba1de20cf3e8c18841768\n. @mreinstein \n\nYeah, I know. There was no pubplic 1.11.4 and I have started to document the changes here: https://github.com/aFarkas/webshim/releases\n\nsee also: https://github.com/aFarkas/webshim/commit/bcf502b0487e38eb41235b2a62fe1626a240e9bb\n. @mreinstein \nWell, I thought the location @ https://github.com/aFarkas/webshim/releases would be the right place for this (in the future). But I'm not sure anymore. Currently changelog.md is removed from master, but might have a comeback. Some people might load webshims over bower or similiar.\n\nHave you seen some of the changes, I have done? (https://github.com/aFarkas/webshim/blob/master/demos/demos/forms.html and https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html)\n\nLast one will be removed, if it's documented. I have started to remove all JS config, which should be done with CSS (i. e. [showWeeks](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L159-162), [navSelect](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L152-156)) and added some default styling to some [hidden elements](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L81-83), which can simply turned [on/off](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L138-140) to configure a widget without any JS.\n. Ok, those are lot of small issues.\n\nStart here. Your configuration is a little bit wrong:\n\nRemove all webshims config code and use the following.\n\n```\n$.webshims.setOptions('forms-ext', {\n    replaceUI: true,\n    types: 'time',\n    time: {\n        widgetPosition: {\n            my: 'left center',\n            at: \"right center\",\n            collision: \"fit\"\n        }\n    }\n});\n\n//load all defined\n//or load only a specific feature with $.webshims.polyfill('feature-name');\n$.webshims.polyfill('forms forms-ext');\n```\n\nNow include jQuery UI position:\nYou do not need to include the hole libary.\n\nConfigure input type=\"time\" popover (This will only work in conjunction with jQuery UI position):\n\n```\n<input type=\"time\" data-wspopover='{\"position\": {\"my\": \"center\", \"at\": \"center\", \"collision\": \"fit\"}}' />\n```\n\nImprove style for time-picker:\n\n```\n.input-picker.time-popover .ws-picker-body {\n    padding-top: 0;\n}\n```\n\nI can not reproduce your scroll issue. And can also not reproduce your Chrome/Mac issue. But I'm trying.\n. Yes this one is now included directly into the package (see [documentation](http://afarkas.github.io/webshim/demos/demos/webforms/4-webforms-custom-validity.html)):\n\n```\n$.webshims.setOptions('forms', { addValidators: true });\n```\n\nAlso check out the [instant validation feature](http://afarkas.github.io/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html#instant-validation). \n. Are you using webshims to polyfill the filereader API or to access input.files? If not, do not load the feature! The problem is, that jquery-fileupload trys to use the API, which is not fully polyfilled, but does not need it to work.\n. This should work with a real IE9 or a real IE10. IE10/11 browser modes are busted. If you open your console you should see a warning. Please use a real IE9 to test IE9 (With IE9 you can still test IE8) or at least [IETester](http://my-debugbar.com/wiki/IETester/HomePage).\n. Yes this right. As soon as you fix this the basic check can be removed:\n\nFrom\n\n```\nif(webCFG.loadStyles){\n    loader.loadCSS('styles/shim.css');\n}\n```\n\nTo:\n\n```\nloader.loadCSS('styles/shim.css');\n```\n\nHappy to see a PR. Please to all changes in master not gh-pages, Thanks!!!\n. The problem you have is already printed into your console:\n\n`extendNative configuration was set to false by default with this release. In case you rely on it set it to 'true' otherwise to 'false'. See http://bit.ly/16OOTQO`\n\nThis means you have to options:\n\nI. Either set extendNative to true:\n\n```\n//  Polyfill everything we need for legacy browsers\nwebshims.setOptions('extendNative', true);\n$.webshims.polyfill('forms forms-ext json-storage');\n```\n\nII. Or you use one of the 3 different jQuery wrappers to call setCustomValidity:\n\noption A:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n    var setCustomValidity = $.prop(confirm, 'setCustomValidity');\n    if (confirm.value!=document.getElementById('pass').value)\n      setCustomValidity.call(confirm, 'passwords do not match');\n    else\n      setCustomValidity.call(confirm, '');\n}\n```\n\noption B:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n\n    if (confirm.value!=document.getElementById('pass').value)\n      $(confirm).callProp('setCustomValidity', ['passwords do not match']);\n    else\n      $(confirm).callProp('setCustomValidity', ['']);\n}\n```\n\nOption C:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n\n    if (confirm.value!=document.getElementById('pass').value)\n      $(confirm).setCustomValidity('passwords do not match');\n    else\n      $(confirm).setCustomValidity('');\n}\n```\n\nHope this helps.\n. @AMA3 \n\nAbout your code in this example. Do not use keyup event. The user can change the value by using cut or paste for example. Best would be to use input event.  And do not use inline event handler use $.on. \n\nAlso note, that webshims ha some nice extensions to make this easy: http://jsfiddle.net/trixta/YL5RY/\n. @hejjahejja \n\nI had a bug in the auto appending detection code. If you don't want to update. You can simply try the follwoing configuration: `webshims.setOptions('wspopover', {appendTo: 'body'});`\n. Here is a working fiddle: http://jsfiddle.net/8qgK9/3/\n. I'm not sure about this. Because, I'm not sure about the name. What's better webshims vs. webshim? Something I want to do is to use only `webshims.polyfill`or `webshim.polyfill` (without $.) in future docs and all examples. (See the doc refactor).\n\nI want to make webhim's polyfiller.js independent from jQuery. So that people can start downloading polyfills from the document's head and embed jQuery at the end of the body, which is not the best option for perfomance, but better than the default setup of most developers. \n\nI think this will add about 3-4kb compressed and will remove support of IE7. I'm not sure wether I should have 2 different polyfiller.js files for this or the filesize/no IE7 support is negligible. Actually it is, but some people might see it different.\n. Here I made those changes: https://github.com/aFarkas/webshim/commit/979a6ec2040557d8f067f6ab267dde138962708f.\n\nBtw. I want to move the new doc as soon as possible into the master-branch. I really like it. I would generate some files in subcategories with examples and more documentation.\n. `webshim` is already there for a long time. I just have additionally added `$.webshim` to the List. I'm indeed open to only use `webshim` in future and will change docs and examples.\n. Try to use: `webshim.polyfill()`with one \"l\". Here is the code: https://github.com/aFarkas/webshim/blob/gh-pages/src/polyfiller.js#L80\n\nBut your are right about `$.webshim` I forgot this one.\n. The current official way is `webshims.polyfill` but I will change this in the future to `webshim.polyfill`. So if you prefer `webshim.polyfill` you can start using it. I will keep all aliases alive for a long time.\n. soon ;-)\n. First of all your code looks good.\n\nFor the demo page please clear your browser cache. For me it works on the demo site. Which browser are you trying? Can you please try `webshims.activeLang('de');`. And wich version of webshims are you using (see with `webshims.version`).\n. Could you also try to directly link to the french locale:\n\n```\n<script src=\"/assets/js-webshim/minified/polyfiller.js\"></script>\n<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js.js\"></script>\n<script>\n  $.webshims.activeLang('fr');\n  $.webshims.polyfill('forms forms-ext');\n</script>\n```\n\nNote also, that I recently made some changes to locale loading. (Just in case you made an update (make sure every file is new) or you haven't loaded a stable release).\n. @DanielJomphe \n\nI'm not sure, wether I understand everything correctly. Unfortunatley, you can't switch the locale of native datepickers. So if you want to change the locale you have to use `replaceUI` for Chrome and Safari mobile. Normally, I'm using `replaceUI: true` on Desktop and `replaceUI: false` on mobile browsers. About your validation problem. What do you have to do? Can I help. If it's not a bug just some questions, use http://stackoverflow.com/questions/tagged/webshim\n. This is done with grunt (http://gruntjs.com/). You need node and for the sass task you will also need ruby.\n. But the language packs are so small and they do not have any combos. You will be also fine to simply copy them into the compiled path.\n. done. \n\nSomething, I often thought about, is to create a bridge between the [Jaris videoplayer](https://github.com/aFarkas/webshim/tree/gh-pages/swfs/jaris) and your flashcanvas pro. I haven't looked into, what I need to do, but could you mail me some information (info at corrupt-system.de), how I would do this? It would be a great thing!\n. @kumarharsh \nYou are right bower workflow is just less than perfect. From my understanding you will only need everything, what is in the following folder: https://github.com/aFarkas/webshim/tree/gh-pages/demos/js-webshim\n\nI just have added bower.json with last release. I will improve this. with future releases you will only get one directory called `js-webshim`.\n. Thx, will fix this soon.\n. It seems that I have broke some old code with last release. I have fixed it here https://github.com/aFarkas/webshim/commit/cee6e682fb297a0f09138e66ff55503dacfd511e\n\nOption you have:\n1. rollback to previous version\n2. try the newest version (https://github.com/aFarkas/webshim/commit/f496853d08cd76929eadd7723463b9579bb30cc7) on [master](https://github.com/aFarkas/webshim/tree/master) (Just compiled and tested)\n3. Satisfy the new getOptions method by creating a JSON string:\n   \n   `data-erromressage='{\"defaultMessage\": \"Enter something\"}'`\n. In short, use appenPolyfillTo instead of appendTo.\n\nPlease look into the [abstraction section](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions). There are two important points. \n1. dynamically creating dom elements: You have sepcial methods for dynamic adding elements. appendPolyfill/htmlPolyfill/insertPolyfillAfter/updatePolyfill and so on.\n2. no shadowdom. webshims sometimes has to alter the dom, to create the HTML5 UI.\n   Unfortunatley I haven't created a clonePolyfill method, so you clone isn't that simple\n\nhttp://jsfiddle.net/CnnWC/16/\n. Yeah, thanks. If you need a quick fix, just add:\n\n``` css\n.placeholder-text {\n    text-align: left !important;\n}\n```\n\nI will fix this with next release.\n. thx\n. It's fixed. Chrome trigger a blur event, if a focused element is removed from dom. Note, that noSubmitCheck was changed and can be configured with `submitCheck` instead.\n. Actually the code doesn't make sense. I think you test with FF. You have to distinguish between Chrome, Firefox and IE < 10. \n\nIn case you load the forms polyfill IE will behave exactly the same like FF without any polyfill. (pattern seems to work).\n\nIn case you load the forms and the forms-ext polyfill IE will work exactly the same like chrome. But FF will behave a little bit different here. The reason is simple: FF does implement pattern, but not type=number. (And I do not check wether pattern attribute is used correctly in FF).\n\nBy definition pattern does **not** apply to type=\"number\", your pattern is a spec violation and isn't taken into account by IE (if fully polyfilled) or in Chrome (fully capable). Additionally you can simply skip $ and ^ those are automatically added.\n\nI think you want to have something like this:\n\n```\n<input type=\"number\" step=\"0.01\" />\n```\n\nor\n\n```\n<input type=\"number\" step=\"0.01\" min=\"0\" />\n```\n\nDoes this help? Or what do you want to achieve exactly?\n. With next release you can write something like this:\n\n``` html\n<input\n min=\"0\"\n step=\"0.01\"\n value=\"1\"\n type=\"number\"\n data-number-to-fixed=\"2\"\n data-number-fix-only-float=\"true\"\n />\n\n```\n. Yeah, I know this error. It is already fixed in master. But this shouldn't affect you. It's a very small UX feature, which is only important, if the datepicker doesn't open on focus (Datepicker opens on mousedown if the form control is already focused). You can simply ignore it or update to the latest unstable version.\n\nI will have a look into your second issue. Try the following code, maybe it helps:\n\n``` js\n$(document).on('popupafteropen', function(e){\n    $(document).trigger('updatelayout');\n});\n```\n. For your second problem you can simply add:\n\n``` js\n$(document).on('popupafteropen', function(e){\n    $(document).trigger('updatelayout');\n});\n```\n. @hejjahejja \n\nCould you tell me wether the last code worked for you?\n. @hejjahejja \nWether this is heavy or not really depends on how much widgets you have on your site. You can measure the exact performance with the following code:\n\n``` js\nconsole.time('updateshadowdom');\n$(document).triggerHandler('updateshadowdom');\nconsole.timeEnd('updateshadowdom');\n```\n\nBut you simply should look how responsive your site feels using this. It's not werid at all. JS can not get positions and real dimension on hidden elements (display: none) (see also documentation [re-rendering shadowdom](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions). Therefore webshims needs to re-calculate this. I might improve performance here with future releases. If you see that performance is really bad. You can fully disable width calculation:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    widgets: {\n        calculateWidth: false\n    }\n});\n```\n\nIn this case you have to set width/margins for native **and** polyfilled elements your own.\n. Yeah, this is already possible, but not documented yet...\n\nTry this:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    replaceUI: {range: true}\n});\n```\n. @davidwebster48 \n\nYeah, the dateFormat option is gone and can be controlled over the locale-settings. There is already a working en-AU locale. So you don't have to do anything here:\n\n``` js\nwebshims.activeLang(\"en-AU\");\nwebshims.polyfill('forms forms-ext');\n```\n\nhttp://jsfiddle.net/trixta/72hQB/3/\n. Thanks, this should be fixed now. Although this seems as a simple issue, it isn't that easy. Consider the following markup:\n\n``` html\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-text\">\n            <label>Input</label>\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 1\" pattern=\"[0-9]*\" required=\"required\" />\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 2\" pattern=\"[0-9]*\" required=\"required\" />\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-radio ff-group\"  role=\"group\" aria-labelledby=\"single-joint-application\">\n            <strong id=\"single-joint-application\" class=\"label-replacement\">Verwacht u een inkomensdaling?</strong>\n            <div class=\"ff-group-inline\">\n                <label>\n                    <input id=\"ref-0-4-5-a\" type=\"radio\" name=\"ref-0-4-5\"   required=\"required\" />\n                    <span>Ja</span>\n                </label>\n                <label>\n                    <input id=\"ref-0-4-5-b\" type=\"radio\" name=\"ref-0-4-5\"   required=\"required\" />\n                    <span>Nee</span>\n                </label>\n            </div>\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n```\n. Yes, this is currently impossible. And the main reason, why you have to add an additional class to the input[type=\"file\"]. I want to look into it, but this will take at least 1-2 month. Here is the issue: https://github.com/aFarkas/webshim/issues/319\n. Thanks, this isn't that easy, because you have to write action script. I'm currently not sure, wether everything I want is possible.\n\nFirst of all, here is what we have:\nFlash has to fully intercept the input[type=file] user interaction to get the data for the filereader api. Which means the file isn't in your HTML and only in the swf plugin world. \n\nGoing from there, it should be easy to intercept JS calls and delegate those to swf to mimic/shim an AJAX form/AJAX upload.\n\nSomething I don't know about, but what would be great is, wether it is possible that we can transfer the data from flash directly into the markup/dom world, so that a normal unfancy form submit works as expected. (I know that the object element is also a submittable form element, but don't know how this works and if swf is capable of doing this. If not we have to go the way that, we intercept a form submit and let flash submit the hole data using the AJAX shim and then somehow handle the response.\n\nBut yeah, we have to write a lot of action script for this. If you investigate on this a little bit, it would be great.\n. Yes, this looks good better: excellent. BUT: webshims has a strong opinion on how to handle shims vs. polyfills and the fileAPI project is more a shim + extensions, than a polyfill. Which means: To include this, I have to match the shim API to native or jQueryfied methods and to sperate the extension part from the shim part.\n\nThis might take some time. But, I'm eager to start (Note: First I want to finish the documentation refactor! then I will add cors support (shouldn't take more than 2-4 days).\n. No this is a totaly new embarrassing issue. Thx, for reporting. I'm currently sick. So it will take 2-4 days.\n. Thx, this is already fixed in master. \n. @anselm-urban \n\nWhich version of webshims do you use? `webshims.version`in your console will give you the right version back. I think this is a simple CSS issue. Try the following:\n\n``` css\n.input-picker {max-width: none;}\n```\n\nIf this doesn't help I really need the CSS which is applyed to .input-picker. Note, if you have very general CSS like: `form div` this can conflict with webshims. If such conflicting CSS is typically used or makes sense, I will fix this, if not you have to fix it inside your CSS your own.\n. yes, but jquery shouldn't be a problem. This [demo is also using 1.11.0](http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html). It's a CSS thing. Can you give your markup / CSS. Or generate a simplified testcase?\n\nBTW.: \n1. jquery is very good in managing compatibiliy between 1.x branch and 2.x branch.\n2. webshims even supports custom builds of jquery (https://raw.github.com/jgallen23/jquery-builder/0.5.0/dist/2.0.3/jquery-ajax-deprecated-effects-event-alias-sizzle-wrap.js)\n. @anselm-urban \n\nDo you have any further information on this. I would like to fix it in webshim or help you to fix, depending what'S the cause for this\n. I have copied your code to jsfiddle and it's working just fine: http://jsfiddle.net/trixta/at76g/2/\n\nThere must be some extra HTML or CSS involved here.\n\nAdditionally, there is no seperate datalist feature. datalist is part of the normal forms feature see here:\nhttp://jsfiddle.net/trixta/at76g/4/\n. No, I haven't it is not needed for webshims. It's only an example for the jQuery mobile template and this template refers to another version of modernizr:\nhttp://afarkas.github.io/webshim/demos/demo-js/src/modernizr-special.js\n\nse also: \nhttps://github.com/aFarkas/webshim/blob/gh-pages/demos/demos/webforms/jquery-mobile.html#L58-59\n. Thanks\n. @Arthedian \nSounds quite intersting. I would really appreciate any help here :-)\n. Well, I have just added an enlgish file in JSON. While I still want to deliver as script, because it's simple even cross-domain works withput JSON-P or CORS. It should be easy to run a grunt task/build tast to transform JSON into JS.\n. please test yourself\n. Could you please give me the full html. I can not reproduce this. This is my test markup:\n\n``` html\n<form action=\"#\" class=\"ws-validate\">\n    <div class=\"form-row\">\n        <input type=\"number\" value=\"-2\" min=\"0\" />\n        <div class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n    <div class=\"form-row\">\n        <input type=\"number\" value=\"0\" min=\"5\" />\n        <div class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n</form>\n```\n. many thanks!!!\n. Closing this. Duplicate of https://github.com/aFarkas/webshim/issues/319\n\nWatch out for version 1.14.0. Something nice will be there for you :-)\n. I have now released the new version of filereader. A simple demo is included in the demo package: http://afarkas.github.io/webshim/demos/demos/filereader/ \n\nThe filepicker now fully supports multiple and accept attribute. \n\nUnfortunatley, for the submit proccess we need php, why this demo does only patially work on gh-pages.\n\nBut this demo showcases one simple usecase of filereader: Creating a simple multi-upload with a small preview.\n\nHave fun.\n. Hi,\n\ncan't see the screenshot. Please re-upload here. \n\nregards\nalex\n. I would need the markup and css to see wether this is a webshims bug. It should be easy to simply inspect the css applied to the errormessage to check from where this is comming. \n\nSimply add the following js to your js code and inspect the border with your dev tools:\n\n``` js\n$('html').on('wspopoverbeforehide', false);\n```\n. @cebola2 \n\nThis isn't really an issue, which I can fix. your `#editor_seminarios > div` is generating these styles. Either you can/should use a different selector i.e. `.seminario-element` or you can change the part were webshims is putting the popovers:\n\n``` js\nwebshims.setOptions('wspopover', {appendTo: 'body'});\n```\n. I really need a testpage for this. You can also mail me info [at] corrupt-system.de\n. I have just added webshim and it isn't nearly that slow to me. In fact most performance decrease is comming from bootstrap here: \n\nhttp://fiddle.jshell.net/trixta/9Tdh7/3/show/\n\nOr is it slow to you on your machine? Are you testing with a real IE8? Maybe there is something else? Do you use additional JS?\n. No, you are doing it right. I fixed it. Only thing you are adding the options twice. You should also only polyfill the features you need. (i.e.: `webshims.polyfill('forms forms-ext mediaelement');`)\n\nIn case you are using sass. Simply import the _api-forms-ext.scss form dev/styles/scss and write:\n\n```\n.input-picker {\n  @extend %show-selectnav;\n}\n```\n. I will provide a workaround for this. Could you please fill an issue in [mozilla bugtracker](https://bugzilla.mozilla.org/). It's a FF bug.\n\nhttp://jsfiddle.net/trixta/3Xa4g/12/\n. From my testing webshims implementation handles this right (i.e.: http://jsfiddle.net/3Xa4g/2/). \n\nhttp://jsfiddle.net/trixta/3Xa4g/12/ can not work in Safari 7.x because Safari doesn't support constraint validation UI.\n\nNote: Safari is the new IE :-D\n. Ok, I haven't fixed this issue directly, but made it possible to override native validation API with polyfilled one. This also means, that the browser has to load more. So you can write your own feature detection, browser sniff or whatever. You can do something like this:\n\n``` js\nwebshims.bugs.bustedValidity = !('minLength' in document.createElement('input'));\nwebshims.polyfill('forms');\n```\n\nNote: Currently there is no browser which supports the tooShort constraint, but webshims has already implemented it, without forcing to polyfill it.\n. Here is a working example: http://jsfiddle.net/3Xa4g/16/\n\ncode:\n\n``` js\nwebshims.bugs.bustedValidity = !('minLength' in document.createElement('input'));\nwebshims.polyfill('forms');\n```\n. I'm pretty sure. You can simply leave out the $ajax.js file. It is currently only loaded, if you are using a special build of jQuery without AJAX + use the track feature. I will rename it.\n. You have a small error in your code, I think. Instead of `$(e.target).updatePolyfill();`you should use `$(selector).updatePolyfill();`.\n\nBut unfortunatley cloning polyfilled elements isn't fully supported, if some fake shadowdom is created.\n\nHere are two examples, how you can deal with it:\n1. [removing webshim trash after cloning](http://jsfiddle.net/trixta/2k5gT/)\n2. [use a simple template to be more dynamic](http://jsfiddle.net/trixta/QJ7Ef/) (Better solution)\n. Actually this is non-standard. But quite good. Only for a patternmismatch a title attribute has to be used by the browser. While Safari indeed needs a polyfill, FF doesn't need one here. \n\nFortunatley, webshims supports already [customizing errormessages](http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-validityMessages) with placeholders for different things (i.e. value, min, max, minlength, valuelength and also title). Try the following code:\n\n``` js\nwebshims.setOptions('forms', {\n    //show custom styleable validation bubble\n    replaceValidationUI: true,\n    lazyCustomMessages: true\n});\n\n//override valueMissing defaultMessage\nwebshims.validityMessages.en = {\n    valueMissing: {\n        defaultMessage: 'Please fill out this field. {%title}'\n    }\n};\nwebshims.activeLang('en');\n//start polyfilling\nwebshims.polyfill('forms');\n```\n\nOr a little bit more sophisticated automatically add title placeholder to all errormessages as soon as they load:\n\n``` js\n(function(){\n\n    var titleEnhanced = {};\n    function addTitlePlaceholder(){\n        var addTitleToString, currentObj;\n        if(this.__active && !titleEnhanced[this.__activeName]){\n            addTitleToString = function(prop, value){\n                if(typeof value == 'string'){\n                    if(value.indexOf('{%title}') == -1){\n                        currentObj[prop] += ' <span class=\"title-attr\">{%title}</span>';\n                    }\n                } else if($.isPlainObject(value)){\n                    currentObj = value;\n                    $.each(value, addTitleToString);\n                }\n            };\n            currentObj = this.__active;\n            titleEnhanced[this.__activeName] = true;\n            $.each(currentObj, addTitleToString);\n        }\n    }\n    $(webshims.validityMessages)\n        .on('change', addTitlePlaceholder)\n        .each(addTitlePlaceholder);\n})();\n```\n\nDoes this help?\n. @shefik \nDid this help? Or do you think, I should add the {%title} placeholder to all errormessages by default?\n. @shefik \n\nYes, I think I will add it. About the x-moz-errormessage extension. It is already supported, but not as a placeholder. Simply because it already includes the full errormessage.\n. Although, this would be easy to fix, I'm not really sure wether I want to fix this. Due to the nature of webshims and especially the fact, that we can not use real shadowdom to build the widgets it's always possible to break the UI. If this happens, the developer always can and should write some additional CSS to fix the problem. In your case you [simply have to write](http://jsfiddle.net/trixta/4cLT2/2/):\n\n``` css\ninput,\ninput + .input-buttons {\n    margin-bottom: 30px;\n}\n```\n\n If I would test for every specific possible conflicting style my JS/CSS would be more and more bloated and page performance would be decreased. In case, I would \"fix\" this, I would more likley write the following CSS than dynamically reading the computed style to adjust the buttons position:\n\n``` css\n.has-input-buttons, html > body input.ws-inputreplace.has-input-buttons, span.has-input-buttons {\n    margin-top: 0;\n    margin-bottom: 0;\n}\n```\n\nIs this really so **needed** to fix in webshims?\n. Yes, I often think about it. Give me some time to answer :-D\n. Unfortunatley, I have not so much time to answer it how I want. Here are some points: I'm not 100% sure, wether I will do an absolute new version with new API, but if I do, here are some thoughts:\n1. Drop jQuery and Modernizr\n2. Drop IE8 Support\n3. Use defineProperty  instead of  the current solution $.prop proxying \n4. MutationObserver (and other techniques) instead of the current solution $.updatePolyfill, $.appendPolyfill\n5. Development and documentation have to be done parallel\n\nAbout your two other points, I'm not 100% sure, what you want here, especially your second point. You say for example: \"I dont need to dynamically load my shims over the internet.\" What do you mean here exactly? Comming from capability based loading. We always want to / have to conditionally load script A for device y and load script B for device x. How would adopting commonjs/AMD/UMD change this exactly? How would a project setup look like? Actually I want to create a selfcontained library without any dependencies, so only UMD would be possible.\n\nThere is a common request to only have those files and code needed in the project, which are indeed used. I will setup a github repo with a new file/directory structure in the future. But I might make this atomic inside of the project setup, I don't know wether I would expose this on the build site. I know, that some people see this as an overhead, but actually I packed those features into reasonable groups. The filesize overhead is considered and tested as mostly irrelevant. Additionally if I still want to be able of conditionally loading things, I have to thing about the amount of initial requests. A lot of features like fieldset[disabled] are especially important for building complex forms with conditionally validating fields depending on the checkedness/selectedness of an option/radiobutton/checkbox... It's just good, that it is part of the standard form features. People just need to know about this and how to use it.\n\nOne thing that I really still want to have in next version is the separation of polyfill <-> extension on the one hand and the UI <-> and API on the other hand in conjunction with a conditionally and deferred loading system. \n\nHere is one small example: If you load the following site http://afarkas.github.io/webshim/demos/demos/mediaelement/responsive-mediaelement.html with a modern desktop browser, you will see something like this in your network panel:\n\n![modern](https://cloud.githubusercontent.com/assets/188254/2840578/f884b916-d057-11e3-9d25-70205a77c664.png)\nAs you see, webshim will load 9 files with total of 38kb. If you compare this to a solution like videojs just 1file with 20kb) you would think, \"oh my god\". \n\nThe filesize difference of 38kb vs 20 is mainly because of 3 things:\n1. webshims already includes more features like youtube or the full textTrack API\n2. webshims extends the native API with all features (needs more code to be 100% accurate)\n3. some boilerplate code mainly dom-extend.js\n\nBut if you look deeper, how those things are loaded you will see, that webshim has only loaded about 8kb initially and the rest is deferred mostly after the onload event. Although those files are deferred, the UI for the user looks \"fully ready\" and the API is fully implemented with the 9kb.\n\nBut if you use a smartphone to load the exact same page, you will get the following picture in your network panel:\n\n![smarthphone](https://cloud.githubusercontent.com/assets/188254/2840726/cbe38c86-d05a-11e3-916e-55067adecb36.png)\n\nAs you see, we now only load 4.5kb initially to have a full unified API for HTML5, flash and youtube.\n\nAnd if I would use the same setup, but wouldn't have a video element on the site the loading of features would also adopt to this scenario.\n\nThis is one great thing about webshim among others, because a developer just don't has to care about lazy loading or conditionally loading, webshim automatically does this for him. So I can implement larger feature sets without slowing down the network performance and a developer simply can use those features.\n. I will add some ideas including examples by time here. But to be clear here: Webshim 2.x is really something for 2015. Maybe I will start earlier, but this won't be stable. And don't get to passioned ;-).\n. Something I can not resist: Although the current webshim-repo is treated as a monolithic package, the architecture isn't and webshim 1.x is developed with modules in mind. Webshim doesn't use amd or commonjs as a module format, because normal optimization tools for those module formats are extremly bad if it comes to capability based/conditionlally loading. This is something you can't blame webshim for. It's a tool problem. Develope in small pieces and then concat everything into one big file is just a bad performance workaround by most build systems. I think webpack seems intersting here, but as you said, webshim should not force a developer to use certain tools, it should simply work. In fact es6 packages are another \"workaround\" for the es6 modules performance problem, but would be better suited for webshim, because they can work much more like a combohandler service (which is the way, how optimizing webshim would work best). By the way jsdeliver supports combohandling and it would be intersting to create a polyfiller.js which would support it.\n\nThis means, I invented a different format, because it's much simpler to pre-optimize it. You are right webshim dictates some loading strategies, but this doesn't mean, that it doesn't work with amd/commonjs, it's simply just works side by side. And it works better how it is done now, than leaving it to the normal r.js optimizer for example.\n\nAs a small pro tipp: There are files in webshim depending on feature and/or configuration, which are not loaded conditionally and don't need to be loaded deferred. For example: If you use `mediaelement`  feature you can simply directly include or require 'mediaelement-core' and 'swfimini'. In case you are using the `froms` feature you can directly include 'form-core'. There are some other files, depending on your configuation (especially with `replaceUI: true` and `customMessages: true`). You can have a look in [optimize-polyfiller.js](https://github.com/aFarkas/webshim/blob/gh-pages/grunt-tasks/optimize-polyfiller.js). If you do this, those files are going into your normal \"optimization pipline\", which can give you indeed a speed boost (if the optimization is done well), but all other files are better handled by the predefined webshim way.\n. @mreinstein \n\nYour image argument is indeed a strong one. Will come back to this later. ;-)\n. I'm currently developing something, that might be interesting for you, but progress is slow, so don't expect this to be ready soon. I think first version will be there in 6 month.\n\nThis said, webshim doesn't really add much complexity. The only problem I know of is, that there are cm systems messing around with URLs. And to be clear, those systems often have workarounds or exceptions for the most often used relative asset referencing and loading (i.e.: loading background images from a stylesheet). Those systems do not work with amd modules either, if the modules aren't pre-packaged by another build system. \n\nTo be clear here, it's quite annoying and a big fail by those \"systems\" every web standard that needs to load assets uses relative referencing i.e. it is built upon this standard. And if you think on ES6 modules or HTML imports you know, that there are comming new standards involving asset loading. \n. webshim automatically reads the html[lang] attribute. If this is not set the browser locale is used. You can simply override this, with `webshims.activeLang('de')`;\n\nDocumentation: http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-activeLang\nDemo (scroll down the page): http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html\n. Did this help?\n. Will look into this on monday.\n. thanks a lot. fixed it.\n. Here is the relevant change: https://github.com/aFarkas/webshim/commit/f366d073db84a5b3f73757874d394206a31ea527#diff-498b595e458372036f1d939fc0827477\n. Not sure, but a simple guess. Could you dispatch a change event on your last input then wait for 10ms and then click submit.\n. Ok, this makes sense. You could also trigger a change event? The IE11 and Firefox behavior is standard conform. See also the sizzle test for :focus (it tests, wether the document itself also has focus: https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L1302). \n\nBut I think this is a selenium issue here. It is impossible for a user to type something in a field, that is not focued.\n. Just added, it would be soo nice, if you could write one small paragraph in the documentation in the master branch\n. @dmromanov \nYou are aware, that you can control them already? The coumentation for the [custom validation](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity) has a section \"Controlling the errormessages of custom errors\".\n. Just added, it would be soo nice, if you could write one small paragraph in the documentation in the master branch.\n. THX!\n. You can try something like this:\n\n``` js\nwebshims.modules['form-number-date-ui'].test = function(){return true};\nwebshims.polyfill('forms forms-ext');\n```\n\nOr simply configure the widgets to not showup:\n\n[number](http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#hide-inputbtns=on)\n[date](http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#nopicker=on&hide-inputbtns=on)\n. Are you sure. What version are you using? The nopicker option is available only in version 1.12.8-RC2 and up. But the \"classes\": \"hide-inputbtns\" should always hide the dropdown button. If you mean the config demo. The options for the demo is only applyed to the output area and not to configuration area. \n\nWhat is your special usecase?\n. Here is another demo using this [technique on date](http://jsfiddle.net/trixta/fLBes/embedded/result,html,js,css/) and here a mixed one for [type=number](http://jsfiddle.net/trixta/UC6tG/embedded/result,html,js,css/)\n. @mreinstein \nyes, will do.\n\n@nlenkowski \nI don't often do add new features. Main development is in master branch, sometimes I push quite stable versions to gh-pages. Will do an update soon.\n. Yes, you are right. This is a longtime issue though. I could manage to get something 99% working, but not 100%. What I think is quite simple:\n\nFirst, there should be a $.clonePolyfill method and the already implemented htmlPolyfill method should also return a cleaned string. \n\nIn most cases you can workaround this issue by using a template. Similiar to something like this: http://jsfiddle.net/trixta/QJ7Ef/\n. I have added a new method called clonePolyfill (https://github.com/aFarkas/webshim/commit/ee8988e27bd95147d78d113a503e93ce80d25cb6). Will be there in version 1.13.1\n. About usage:\n\nYou can do something like this:\n\n``` js\n$new = $old.clonePolyfill();\n$.new.appendTo('body');\n```\n\nIn case you insert it immediately into the document, there is no need to call updatePolyfill.\n. thx\n. Do you mean something like this: http://jsfiddle.net/trixta/VNuct/?\n. Yes the demopage uses:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    replaceUI: 'auto'\n});\n```\n\nwhich means, that input widgets are not replaced on smartphone, but on desktop/tablets. I don't really understand your usecase for webshims here. Most people want to see what the webshim work is, if they implement webshims. Additionally, they do use a modern browser to do the first test. So it's most likley, they want to see, how the polyfills look like and not how the native implementation is looking like.\n\nI have added an enhance switch to some of my demos, which showcases the different states of \"enhancements\". Here is a simple demo for this:\nhttp://afarkas.github.io/webshim/demos/demos/mediaelement/track-demo.html\n\nOr here is another example:\nhttp://afarkas.github.io/webshim/demos/demos/webforms/datalist-experiment.html\n. Will fix this.\n. Just added the fix, but this will only work if you ad an id to your element.\n. Actually I don't get your usecase here. Indeed webshims won't load any shims/polyfills for Chrome, so there is already no need to remove anything. Additionally updatePolyfill behaves similiar to a noop in Chrome so there is nothing to optimize further. \n\nIf you want to make something smaller, then you might want to create a custom build of jquery. webshims for example does not need sizzle (but polyfills IE8 and brings CSS3 selectors into $), ajax, effects, event-alias, deprecated and wrap.\n\nIf you want to know, which modules are loaded you need to look into `webshims.modules`. But this only the intertnal data.\n. `\"false\"` is not `false` ;-)\n\n``` js\nwebshims.setOptions('forms-ext', {\n        replaceUI: false,\n        types: 'datetime-local range date time number month color'\n});\n```\n. OMG, thx!!!\n. Wow, nice!!!\n\nI haven't looked into all your research, but will do this. It's great, thank you. \n\nAbout your Android research regarding that Andorid seems to support input widgets. You are partially right here and what webshims is doing with Andorid is: If Andorid is detected and this browser does not support progress element and fieldset disabled, webshims assumes, that input widgets are not implemented right, even if Modernizr is reporting, that this input is implemented (see also here: https://github.com/Modernizr/Modernizr/issues/769). The reason for this is quite simple: I also made a lot of tests with a lot of Android versions and the result is heavy to got this 100% right. Some versions got it right and some had some problems. Additionally not only the version but also the manufacturer of the smarthpone had influence. The problems were: 1. Datepicker does not offer a clear button/UI, 2. datepicker enters the value in wrong format (some do not add leading zeros, some other use format of OS configuration instead of yyyy-mm-dd), 3. some version do neither trigger blur nor change (Note: I implement missing change event in iOS and others, if at least blur is working) and 4. on older versions not even a datepicker is shown.\n\nThis said, while webshims way to handle this is indeed not very \"distinctive\"/\"precise\", it is a) fail proof and b) future orientated, if a future version of andorid has those named features (progress element and fieldset[disabled] it will also only use the Modernizr tests. And I think I'm right here, because beginning form Andorid 4.4 the input widgets shouldn't be replaced on Andorid anymore by webshims. With other words: Although webshims could be work more granular with older Android versions, you should not remove it, I had my reasons for this!\n\nAbout your two concrete issues:\n**`splitInput`**\nThis splitInput feature uses scripted focusing, which can't be done on all devices. My question here: Does this feature not exist or does it something strange and bad with the UI/UX. (I can't fix, that it does not work, but I can fix, that there are not other side effects.)\n\n**`datalist`**\nWill look into this and fix as soon as possible\n. As already said datalist will be fixed soon. Additionally native datalist is comming for Android. ;-).\n\nAbout postcode, pincode and credit card number, those kind of inputs are \"numeric\" or \"digits\", but not type=\"number\". The right markup for this would be:\n\n```\n<input type=\"text\" inputmode=\"numeric\" pattern=\"[0-9]*\" maxlength=\"\" minlength=\"\" />\n```\n\nThis should work with iOS and Firefox for Android. Chrome is working to get this feature soon into Chrome for Android. You should not turn it into type=\"number\", because some browsers will remove leading zeros and other stupid things.\n\nAs a workaround you could detect, wether inputmode is supported and if not replace it with type \"tel\", it's also semantically wrong, but won't have so much side effects. \n\nThis said I will also add a new class called `ws-noreplace` with next release.\n. Ok, I wanted to look into your datalist issue and tryed the following [demo page](http://afarkas.github.io/webshim/demos/demos/cfgs/list-datalist.html) with Anrdoid 4.3. And it worked pretty good. So I can't reproduce your issue. Can you test or help with some more information?\n. @davidelrizzo \nI would like to make a new release, because the [following fixed bug](https://github.com/aFarkas/webshim/issues/382) really needs a new stable.\n\nBut before releasing, I also want to look into your datalist issue. As you see above, I can't really reproduce it. Can you help here? Additionally, from your spreadsheets I see, that you mention type number validation does not work in IE8. For me this is working. Can you help me here, too???\n. Ok, this was enough information for me :-D. Just fixed it.\n. @davidelrizzo \n\nI just added some small inputmode=\"numeric\" support for mobile browsers: http://jsfiddle.net/trixta/7NEBb/. Note: This only works with the newst \"unstable\" version of webshim!\n. Hi,\n\nI made same observation, but my conclusion is a little bit different here. To sumarize it:\n\ninputmode=\"numeric\" should give us the following charckters: +-.,0123456789\ntype=\"tel\" depends on the device, but there are devices, which will give you only: +0123456789\n\nWhich means a switch between inputmode=\"numeric\" to type=\"tel\" is obtrusive.\nA switch from inputmode=\"numeric\" to type=\"number\" might give you the right keyboard, but there is always the possibility of value sanitatzation, which will change/remove values like: +01231 to 1231 or an empty string. Means that this is also obtrusiv.\nThere is actually no usecase for inputmode=\"tel\" on an input. It's more for a textarea and for the completeness of the spec. \n\nMy current approach is therefore to always look for both: pattern=\"[0-9]+\" and inputmode=\"numeric\" (The first pattern already works on iOS...). Maybe I will improve this to detect things like [0-9]{3,9} and so on and do the fix also on iOS. \n\nYou are right, that sometimes an inputmode=\"numeric\" to type=\"number\" would be better or sometimes also an inputmode=\"numeric\" to type=\"tel\" without an explicit pattern is appreciated by a developer, but those kind of switches are obtrusive and need to be guarded by an option or a specific class/attribute on the element. -> The developer has to explictly opt-in for this + I have to document it somewhere/somehow.\n\nAny suggestions? Maybe:\n\n``` html\n<input inputmode=\"numeric\" data-wsmode=\"tel\" />\n<input inputmode=\"numeric\" data-wsmode=\"number\" />\n```\n\nAbout native support. There is a way to detect it and I'm using this detection already. Interestingly inputMode is already supported on Chrome Desktop. Don't understand why :-D. And on Firefox it is hidden behind a flag: \"dom.forms.inputmode\" + something different/similiar \"dom.mozInputMethod.enabled\"\n. Ok, you are right about this being messy, but I will never ever do a switch to `[type=\"number\"]` without an explixit opt-in by a developer.\n\nMy current work on this, can be seen here: http://fiddle.jshell.net/trixta/7NEBb/show/\n\nThe first example simply shows, why I won't use the type=\"number\" it's simply to obrtusive. All other examples show how `inputmode=\"numeric\"` is polyfilled. In summary: On Android and iPad inputmode is always polyfilled and on iPhone, the developer has to add a pattern. While iOS only detects `[0-9]*` and `\\d*`, webshim will detect more (but not all suiteable) patterns.\n\nI think this is the best way to do this automatic. As already said, in some situations, there might be a better different approach, but those approaches are obtrusive and needs to be hidden behind a configuration. If you want such a configuration please open a new ticket.\n. Wow, thanks. Kind words.\n. Unfortunatley, I can not reproduce this. Here is a simple fiddle: \nhttp://jsfiddle.net/trixta/C9bmE/\n\nAbout your investigations. The val should be an empty string there. If you get the value using $.prop or $.val and it is actually the placeholder something strange is happening.\n\nFrom my feeling some other script is setting the value in IE9. Maybe another \"placeholder\" polyfill?\n\nPlease try to change config and see what happens:\n\n``` js\nwebshims.setOptions('forms', {\n    placeholderType: 'over'\n});\n```\n. The code you should look for is inside of form-shim-extend2.js in line about 1050. Here is the code for value getter and setter: I have added a line to check wether someone is setting the placeholder value as an input value. (Note: you have to start js debugging in IE9):\n\n``` js\npolyfillElements.forEach(function(name){\n    var placeholderValueDesc =  {};\n    var desc;\n    ['attr', 'prop'].forEach(function(propType){\n        placeholderValueDesc[propType] = {\n            set: function(val){\n                var elem = this;\n                var placeholder;\n                if(bustedPlaceholder){\n                    placeholder = webshims.data(elem, 'bustedPlaceholder');\n                }\n                if(!placeholder){\n                    placeholder = webshims.contentAttr(elem, 'placeholder');\n                }\n                $.removeData(elem, 'cachedValidity');\n                var ret = desc[propType]._supset.call(elem, val);\n\n                //debugger statement\n                if(val == placeholder){\n                    console.log('something strange is happening. get call stack');\n                    debugger;\n                }\n\n                if(placeholder && 'value' in elem){\n                    changePlaceholderVisibility(elem, val, placeholder);\n                }\n                return ret;\n            },\n            get: function(){\n                var elem = this;\n                return $(elem).hasClass('placeholder-visible') ? '' : desc[propType]._supget.call(elem);\n            }\n        };\n    });\n    desc = webshims.defineNodeNameProperty(name, 'value', placeholderValueDesc);\n});\n```\n\nQuestion: Is this a real IE9 or IE10/IE11 in IE9 mode?\n. @bkdotcom \nThanks for your answer: Something to know about type=\"tel\" on iphone. The iphone will give you only the following charckters without the possibility to switch the keyboard: +0123456789\n\nThis means it will be hard to satisfy your pattern for an iphone user. On ipad there is no problem...\n. Ok, thanks. \n. There is an option (`noPlaceholderPolyfill`), but first of all: Why would you do this? Are you still using another placeholder-polyfill? Why not webshims integrated solution?\n\nI really start to cry now ;-)\n. Yeah, I know this also. Funny part, I was the author of the first media queries polyfill (something very simple/limited) in 2006/2007! More than 3 years before the term responsive webdesign was introduced.\n\nWhile I always had my issues with CSS polyfills (performance). Those kind of polyfills work good, but you have to respect one thing, you should add them blocking right after your CSS or at least with `document.write` everything else, is a) bad for performance (because it causes unnecessary reflows/repaints) and b) create FOCUs.\n\nI think with current browser landscape, it's easy to add them with a conditional comment.\n. This can be done natively. IE7 was the last browser without support and I removed IE6/7 support in this year.\n. Thanks! Yes, there are none :-). Active development is in master, while gh-pages holds the more stable branch. So, yes it would be much better to create a PR for master.\n. Thanks\n. Thanks, too.\n. It's avtually not about filesize nor jQuery. Currrently no browser has implemented menu the right way. Currently it is not sure wether this feature will be removed from the spec. I will close this issue, but as soon as FF or any other browser adds this feature nativeley, I will add a polyfill.\n. Thx\n. Thx, if you search for debug or dev/, you will see that the documentation mentions the difference between those two versions. \n. Many thx. jsfiddle doesn't provide a ssl content. very bad.\n. Thanks, added\n. Oh, thanks. I'm not that organized, that I could say something concrete, but help is always appreciated! Might comeback to it later.\n. Unfortunatley this isn't possible, due to performance concerns. You can use the `addCustomValidity` API:\n\n``` js\n//wait until form-validators are implemented \nwebshim.ready('form-validators', function () {\n    //add bar constraint\n    webshim.addCustomValidityRule(\"foo\", function(elem, value, data){\n        //only test if elem has a value and a key 'foo' in its data\n        if(value && 'foo' in data){\n            return value != 'bar';\n        }\n    }, \"enter 'bar' please\");\n});\n```\n\nhttp://jsfiddle.net/trixta/KdFB2/embedded/js,result,html,css\n. There is currently indeed no solution for this one. Despite the fact, that this could be indeed improved, I don't think, that I want to add a \"new\" method to make this possible. In my abstraction section, I already state, that I don't have real shadowdom and that the UI elements/shadow elements do not reflect special states like `float` or `display`. My proposed workaround for those style issues is, to either use a wrapper element or to simply use some additional CSS and target the \"shadowelements\".\n\nI would propose something like this, to get this task done:\nhttp://jsfiddle.net/trixta/47Uz4/3/\n\nBut to make a decision here, I would need to know your actual usecase.\n\nThere is currently also a very similiar stackoverflow question going on, which I will try to answer in next 48 hours:\nhttp://stackoverflow.com/questions/24660666/deactivate-or-undo-webshims-polyfill-to-use-my-own-instead\n. @doits and @HenriPodolski \nThis is exactly, what I'm proposing in the abstraction section.\n. I will change this. But don't expect to be a in the next one or two releases.\n. This by design. Webshim lazyloads some specific scripts. The load happens normally right after window onload. But in case a user starts to interact with a form element the download is started immediately.\n\nSo this is a feature not a bug ;-).\n. I have just updated webshim to improve the window loaded and the form interaction detection. Please try this one: https://github.com/aFarkas/webshim/archive/gh-pages.zip\n. @isaackwan \nPlease let me know, if the current version of gh-pages solves your problem. In that case, I would put a new release together.\n. Yes, this should work. Can you use the dev folder instead of the minified folder and extend your config with:\n\n```\nwebshim.setOptions({debug: true});\n```\n\nAnd look what a) your script console says and b) what your network panel says. It would be also nice to use the latest version, but an RC version should work/be tested...\n. @tdd \nI couldn't reproduce this issue. Can you give me more information? Does log or network panel has more informations? You can also mail me your project files/url.\n. Thanks!\n. This is still a seroious issue and it's quite weird. Can you try to remove other JS files and look, wether there are multiple version of polyfiller or other libraries do  interfere the loading proccess.\n\nAs a workaround you can also try to set `webshim.setOptions('debug', 'noCombo');`. This isn't ideal, but at least you won't load duplicate scripts. \n. Well, it's often a mix between combos and non-combined files, but loading form-core.js and combo 3 or 15 is clearly an error.\n\nIn case you have no time or don't find the error, you can mail me the prototype, url or a reduced testcase. This can also happen later, even if the project is already launchend.\n. @homeloan \n\nThx, from your description the dev version already give you two bugs:\n1. this is just a formal warning:\n   `need to load forms feature to use forms-ext feature.`\n\nAnd can be fixed by writing:\n\n```\nwebshim.polyfill('forms-ext');\n```\n1. The X-UA-Compatibility:\n\n`IE browser modes are busted in IE10+. Please test your HTML/CSS/JS with a real IE version or at least IETester or similiar tools`\n\nCan you provide me with more information what exactly does not work as expected, after you have fixed the second part? Do you have a testcase? Or can you mail me your project?\n. @homeloan \n\nHere is a configuration example:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover={\"position\"%3A+{\"at\"%3A+\"right+bottom\"}}\n\n```\n\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"startView\": 2,\n        \"popover\": {\n            \"position\": {\n                \"at\": \"right bottom\"\n            }\n        }\n    }\n});\n\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n value=\"2005-02-09\"\n type=\"date\"\n />\n```\n\nYou can use `startView` and the `popover.position` option. The popover.position option takes the same arguments as the jQuery UI position util (http://jqueryui.com/position/)\n. @tdd \n\nThanks, for your testcase. I think it's working fine.The list of loaded files shows, that the right combo and non-combo mix of files are loaded. \n\nI don't believe that the red/bold marked aren't always loaded. For example, Chrome load form-core.js (bold, sometimes) and form-validation.js always, can't be true, because form-validation is referenced only in form-core.js so form-core has to be loaded.\n\nI think the dev tools weren't showing the hole picture in your case.\n\nThe only thing, that I saw, is that brunch has destroyed detection of the currentScript script detection (i.e.: finding the right basePath) automatically, but you are already configuring it manually, so this shouldn't be a problem.\n\nHave you encountered any issues in your app?\n. Ah, ok, this was a misunderstanding. I meant, that form-core.js should be never loaded, if combo 15 is also loaded in the same browser enviroment. But this isn't the case.\n\nAbout the detection: This detection has to be handeld right away, it can not be handeld if polyfill/configuration starts, because this could be inside of a callback and this destroys the test. It simply runs and if you configure it after everything is ok.\n\nAnd yes, I do not test, wether you are setting it, because this part is only inside of the dev-folder, which shouldn't be used in production. I only added it to inform you and me, that there is something happening wrong in my script (Actually, I have partially fixed it https://github.com/aFarkas/webshim/commit/c192d4049f9f7af5d11e830e8b935b9d292c0e6e), but due to the fact, that brunch is calling this code inside of a callback, which can be async, the detection won't work in all browsers). I.e.: It's based on the [document.currentScript](https://developer.mozilla.org/en/docs/Web/API/document.currentScript) property.\n. Yeah. Very sorry for the false alarm\n. No webshim hasn't such a feature. What webshim has is the conversion from input placeholder to select with placeholder options. This looks something like this:\n\n``` html\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"yearSelect\": true,\n        \"monthSelect\": true,\n        \"daySelect\": true\n    }\n});\n\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n placeholder=\"year-month-day\"\n type=\"date\"\n />\n```\n\nDemo: http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#placeholder=year-month-day&yearSelect=on&monthSelect=on&daySelect=on\n\nActually HTML5 explicitly has a definition, what a placeholder option means and it's pretty simple HTML4:\n\n``` html\n<select>\n    <option value=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nor:\n\n``` html\n<select>\n    <option value=\"\" disabled=\"\" selected=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nYou can even do something like this:\n\n``` html\n<style>\noption:disabled {\n    display: none !important;\n}\n</style>\n<select>\n    <option value=\"\" disabled=\"\" selected=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nNote: A select with size > 1 or a multiple select can't have placeholder option. \n. Nice information, didn't knew. This bug is now fixed without replaceUI option, but you still need to request the forms-ext feature.\n\n@stucox\n\nThis is the way for your issue: https://github.com/Modernizr/Modernizr/issues/1376\n. Just fixed the CSS bug in rtl direction\n. Can you try to reproduce this error. Started to try it here: http://jsfiddle.net/trixta/4zaCU/\n\nBut couldn't.\n. This should work now: http://jsfiddle.net/trixta/4zaCU/13/\n. Just fixed it. Thanks\n. This is because webshim's UI components also need to know, if you change something, this is done by simply using jQuery's prop method. But KnockoutJS, doesn't use jQuery:\n\nIf you change Knockout code, it would work:\n\nOld version:\n\n```\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n```\n\nNew version:\n\n```\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            $.prop(element, 'disabled', false);\n        else if ((!value) && (!element.disabled))\n            $.prop(element, 'disabled', true);\n    }\n};\n```\n\nI don't develop with Knockout, but if they provide some Hooks for thier bindings, you can hook into and simply write somecode like this:\n\n```\n//set disabled property to it's current disabled state using $.prop to update UI component\n$.prop(element, 'disabled', element.disabled );\n```\n\nI'm pretty sure a knockout developer knows some workarounds for this. In case you are using select replacements like select2 or other you will get similiar issues, with updating the UI to properties like disabled, value, selected etc.\n. I have just written some binding extension for disable, enable and value bindings. You need the newst webshim version for this and then add the following code to your project\n\n``` js\nwebshim.ready('dom-support', function(){\n\n    if(!webshim.xProps){\n        webshim.error('you need webshim version 1.14.6 for knockout integration.');\n        return;\n    }\n\n\n    $.each({enable: 'disabled', disable: 'disabled', value: ''}, function(name, prop){\n        var origFn = ko.bindingHandlers[name].update;\n        if(!prop){\n            prop = name;\n        }\n        ko.bindingHandlers[name].update = function(element){\n            var ret = origFn.apply(this, arguments);\n            if(webshim.xProps[prop]){\n                $.prop(element, prop, element[prop]);\n            }\n            return ret;\n        };\n    });\n});\n```\n. Always use jQuery's prop method:\n\n```\nwebshim.polyfill('mediaelement track');\n\n$(function()\n{\n  //  If the browser supports switching tracks...\n\n\n    var $video = $('video').eq(0);\n\n    // For each track object...\n\n    $.each(\n      $video.prop('textTracks'),\n      function(i)\n      {\n        $.prop(this, 'mode', 'disabled');\n\n        // Add a div containing each track label and a checkbox.\n        // When clicked, show or hide the corresponding track.\n\n        $('<div class=\"TrackSelection\"> '+this.label+'</div>').\n          appendTo('.MediaContainer').\n          prepend(\n            $('<input type=\"checkbox\" value=\"'+i+'\"/>').\n              change(\n                function()\n                {\n                  $.prop($video.prop('textTracks')[ this.value ], 'mode', \n                    this.checked ? 'showing' : 'hidden');\n                })\n            );\n      });\n\n});\n```\n\nNote FF's implementation is overwritten, because it is simply still buggy and not complete. It won't be overwritten as soon as this bug is fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\nHere is the feature detection code: https://github.com/aFarkas/webshim/blob/gh-pages/src/polyfiller.js#L1257\n\nI think we will see this feature in FF33.\n. As long as I have to support IE8, the $.prop stays. IE8 doesn't support property accessors therefore, we need a wrapper function/abstraction for this.\n\nAs soon as we drop IE8 we can use `Object.defineProperty` to implement new features. But the shift won't be so easy and neither soon....\n. Thanks, for reporting. Fixed most of them (not all). Could you test wether this is good enough for you?\n\nThanks\n. Thanks. Actually I have excluded this file from the release (https://github.com/aFarkas/webshim/blob/gh-pages/.gitattributes#L5-6). I only wanted to still serve this file via gh-pages, because some old fiddles are using it. A cleaner solution would be to remove this file from my repo. What do you think?\n. Ok, so you are fine, if I simply remove this file with next release?\n. You know that, webshim already implements the progress element. It also gives developers a [sass mixin to style the progress element x-browser](https://github.com/aFarkas/webshim/blob/gh-pages/js-webshim/dev/shims/styles/scss/_api-shim.scss#L49-82).\n\nThemed demo: http://afarkas.github.io/webshim/demos/demos/themes/themes.html\n\nFrom my experience this element isn't used much and therefore, I haven't worked on the meter element.\n. I will add this feature. But might take one-two months.\n. Yes the tooltip is exactly designed how the errormessage do appear in HTML5 browsers, if you want more, you can use the [`iVal`-feature](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival).\n\nHere is [small demo](http://jsfiddle.net/trixta/9859C/). In case you don't need live validation and only want to check validity on submit and if value becomes valid you can change the `events` option of the iVal feature. Here is [another demo](http://jsfiddle.net/trixta/6jpxpm5e/). You can also change the styling to make them appear similiar to tooltips (i.e.: position absolute), but in most cases you don't want to do this, because this might interfere with your normal styles.\n. Please re-open, if this doesn't help.\n. This is by design/spec: http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#the-select-element:attr-select-required-2\n\nIf you think about it, it totally makes sense. You as an author, should not give an invalid option to the user only if the first option is used as a placeholder-option/label, the required attribute makes sense.\n. Yes, it's a firefox bug/simplification, but they won't fix it.\n. Intersting i opened this bug 4years ago and the developer (mounir) Set IT to won't fix. If they do fix it. I will force old ff to use the webshim implementation\n. Webshim has an implementation of the minLength property and the tooShort constraint, but webshim does not force \"good\" browsers to implement it (Chrome and Firefox). You will see, that IE and Safari, which are using the webshim implementation do support minlength.\n\nCurrently no browser has an implementation of this property and therefore I don't force this implementation.\n\nYou can simply use the `pattern` attribute to get the minlength validation:\n\n```\n<input pattern=\".{3,}\" required title=\"3 characters minimum\" />\n```\n\nIf you really need the minlength validation using the minlength attribute, you still have two other options:\n1. set [`addValidators` to true](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity)\n\n```\nwebshim.setOptions('forms', { addValidators: true });\n```\n1. Or set `webshim.bugs.bustedValidity`to true:\n\n```\nwebshim.bugs.bustedValidity = !('minLength' in document.createElement('input'));\n```\n\nI would prefer the `pattern-attribute`solution until neither chrome nor firefox has implemented this property.\n. Please re-open, if this doesn't help.\n. @AMA3 \n\nNo `extendNative` is a general option, that decides how a features are implemented, not what features are implemented. An option for the `forms` feeature, which could be called `edge`, could be added.\n. Looks fine to me: https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/styles/shim.css#L292-293\n\nMaybe you have an overriding selector with higher priority? This is something I can't fix.\n. Yes this is fixed since 1.14.6\n. First try on this feature. Here is a demo: http://jsfiddle.net/trixta/5kjrtLvw/\n\nIf you want to play with it: It's currently only on master not in the gh-pages branch.\n. Technically it is possible if the css is in the same origin or cors is used, but this really doesn't scale (performance!). Additionally the polyfill only supports about 50% of the sticky property. If you want to use the property on some elements as an progressive enhancement, attaching the polyfill to such an element will be a big problem.\n\nIf you don't like the descriptive markup API:\n\n``` html\n<header class=\"ws-sticky\">\n    <!-- ... -->\n</header>\n```\n\nYou can use the JS API:\n\n``` js\n$('header').trigger('wssticky');\n```\n. This is not an IE11 issue, but belongs to the fact, that the focus event is \"normalized\" by webshim, while the select method is not. Therefore the element, which is dispatching the focus event is the native element, while in fact the \"shadowElement\" is focused, you can find some description about this main problem of webshim's abstraction here: http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n\nTo workaround this issue, simply use `getShadowElement`:\n\n``` js\n$(this).getShadowElement().select();\n```\n\nHere is a working fiddle:\n\nhttp://jsfiddle.net/trixta/34e2h09t/8/\n. Thx, I will look into this later this week.\n. Nice work, thx a lot.\n. Thanks!\n. Hi,\n\nactually this is already there, but the way is a little bit different. See [documentation](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity) and watch for the part \"Controlling the errormessages of custom errors\".\n\nThere are two examples:\nGeneral message controlled by JS:\nhttp://jsfiddle.net/trixta/2CyEr/\n\nand specific messages controlled by markup:\nhttp://jsfiddle.net/trixta/3A2DF/light/\n\nIsn't this what you need?\n. @aurfon \n\nCan I close this issue?\n. omg, thx. \n. Many thanks for your report and your work. Unfortunatley, I can't take this PR. The true reason for the error is that I have splitted the filereader feature into two parts in version 1.15.1. filereader-xhr and canvas-blob and therefore the module filereader became 'filereader-xhr' somehow my refactoring tool didn't catch the usage there.\n\nAnd no forms and forms-ext do not have a dependency to filereader. This is only a related feature and gets lazyloaded, if requested by markup.\n. @ioquatix \n\nThanks, for your issue your fiddle doesn't really show your issue, because it doesn't a) doesn't include webshim and b) the checkPasswordsMatch is wrapped inside a function and therefore isn't found executed.\n\nI have changed this in this fiddle:\nhttp://jsfiddle.net/trixta/x84bar07/3/ and there it is working in chrome for me.\n\nBut this fiddle isn't really workable x-browser and still has some issues.\n1. Calling native methods:\n   This is explained here: http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n   This means either you use a):\n\n``` js\n$(this).setCustomValidity('message'); // instead of this.setCustomValidity('message');\n```\n\nor b) you use:\n\n``` js\nwebshim.setOptions('extendNative', true);\n```\n\nAlthough option a) is an abstraction I would use a).\n1. Use $.on instead of inline handlers\n\nA fiddle, that shows the code changes is here:\nhttp://jsfiddle.net/trixta/x84bar07/6/\n\n---\n\nBut there are still some errors about your code: \n1. setCustomValidity and 2. code style.\n\nAbout setCustomValidity:\n1. setCustomValidity\na) If you don't use noValidate on your form you need to call it initially (in case it is prefilled) and on input or at least on change\nb) Writing interoberable setCustomValidity code isn't easy. Although you only use one setCustomValidity you always should \"guard\" your calls to not override another setCustomValidity call.\nc) What happens with your code, if someone has used the right password in the second field and adjust the first field? (i.e.: You have to test also a change in the first field)\nd) Especially in case of passwords, a passwordmanager could hook in and there is no input or change event\n1. Code style:\n   Try to create re-usable components, you can do this, by creating hooks inside of your markup.\n\n``` html\n<input data-repeat=\"password\" data-repeat-message=\"The two passwords must match.\" />\n```\n\nHere is a fiddle that, trys to meet every points. (But not 2. d)):\nhttp://jsfiddle.net/trixta/x84bar07/10/\n\nLast but not least, webshim comes with some customValidators, which makes this quite easy:\nhttp://jsfiddle.net/trixta/Ev5G4/light/\n\nPlease let me know wether this helps.\n. Yeah, and sorry for my english ;-)\n. Yeah, I didn't wanted to do too much work here. To get this automatically done you can write something like this:\n\n``` html\n<script>\n    //filereader is lazyLoaded\n    webshim.polyfill('forms');\n    //or with filereader initial loading\n    webshim.polyfill('forms filereader');\n</script>\n<div class=\"ws-custom-file\">\n    <!-- add ws-filereader class to all shimable type=\"file\" inputs -->\n    <input type=\"file\" class=\"ws-filereader\" multiple=\"\" accept=\"image/*\" />\n\n    <!-- button and .ws-file-value for custom filepicker UI -->\n    <button type=\"button\">Browse</button>\n    <span class=\"ws-file-value\">...</span>\n</div>\n```\n\nHope this helps, it is documented at the end of the [filereader documentation](http://afarkas.github.io/webshim/demos/index.html#FileReader) and here is a [filereader demo](http://afarkas.github.io/webshim/demos/demos/filereader/).\n\nHope this helps, also note, that the style of this widget can and should be tweaked to your needs.\n. Thanks, a lot. Could you please make a PR to the master branch? This would help me, to keep everything sync.\n. Thanks!\n. This is simpy my fault, nothing to configure ;-).\n. Hi, \n\npretty sure it's a phantomjs problem. On mac it works like a charm on windows sometimes not so good. Will compile it for you.\n\nThanks\n. Yeah, there were problems in the past and this is simply the failproof solution, with those little files filesize shouldn't matter.\n\nA pro tip: in case you are always using or almost using the ru lang file you can directly include it after the webshim's polyfiller file into your bundled js and you save one http request for a small file.\n. Hi,\n\nUnfortunatley, I can't reproduce this. See here a demo: http://jsfiddle.net/trixta/h249hhyx/.\n\nNormally this happens, if an invalid field is hidden and the invalid event isn't handeld. (i.e. `event.preventDefault()`). Webshim normally automatically handles the invalid event, if a form field was hidden by webshim.\n\nAlthough this is no fix. You can use [`replaceValidationUI`](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-replaceValidationUI) or [`iVal`](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival) to tell webshim to handle all invalids.\n\nCan you provide a testcase or does the explanation help you?\n. Thx, will look into this today.\n. or, tomorrow. Was a heavy day. Sorry\n. wow,  thanks. Could you please make a PR for the master branch. This actually where I develop and then I do push to gh-pages. It would be a lot simpler for me with the merging.\n. Not yet tested but:\nhttp://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity\n\n``` js\nwebshim.setOptions('forms', { addValidators: true });\n```\n. @paytonk \nDoes this work with the configuration above? The `data-grouprequired` is none-standard and all none-things have to be configured.\n. Hi,\n\nactually this is already integrated into webshim. Currently, I only haven't added the right feature tests to load it, if it's not supported. Currently this is the test: `Math.imul && Number.MIN_SAFE_INTEGER && Object.is && window.Promise && Promise.all`\n. Fortunatley, this already directly included. There is simply no HTML5 browser, because HTML5 is a living standard.\n\nYou only have to embed the `polyfiller.js` and then call the features you want:\n\n``` js\nwebshim.polyfill('forms forms-ext');\n```\n\nAnd then only the features are loaded in those browsers, which do not support them.\n. Can not confirm this one: http://jsfiddle.net/trixta/gxLjh3hs/\nMaybe you have set the following option, which tells webshim to override the native implementation:\n\n``` js\nwebshim.setOptions('forms-ext', {\n    replaceUI: 'auto'\n});\n```\n. Thx, for this one. Will release a tested stable version, soon.\n. I sorry for not answering. I somehow overlooked this issue. The transformation is indeed a little bit off. But the value is already limited constrained. If someone enters a and it is tranformed to \"0A:00 AM\" this is an invalid value (i.e.: badInput).  What do you expect exactly?\n\nIf someone enters a -> nothing but an error\n. Just changed it. I do not limit it, but in case the user enteres something that doesn't seem to look like a time input, I do not format it and mark the field as invalid. (i.e: validityState.badInput)\n. Sorry for letting you wait so long. Will fix this untill monday.\n. The reason for this is, that turbolinks removes the body element, not only its content and some events are bound to the body. While I can change this in your particular case, there are still other events bound to body, that I can't change this easy. Is there a way to configure  turbolinks to change the content of the body and not the body itself?\n. It is hard to know what is happening there.\n\nWould you like to configured it with:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"calculateWidth\": false\n    }\n});\n```\n\nThis means, that you might need to adjust some small things with css, but it will give you additionally a small speed boost.\n\nIn case you are using JQM you should look into this example:\nhttp://afarkas.github.io/webshim/demos/demos/webforms/jquery-mobile.html\n. To answer this, I really need to see your site. You can also mail me if you want ;-).\n. Thx, I can look into this on saturday.\n. In short no. The types string constraints only the feature test to run, what you want is `replaceUI`option:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: {date: true, range: true, number: 'auto'},\n    types: \"date range number datetime-local\"\n});\n```\n. thx\n. Currently no, I wanted to add this. But type=\"week\" is on the list of maybe removed input types for future versions of html, therefore i wanted to wait for this.\n. Thx.\n. Sorry, for taking so long. Reason for this is that I'm using the native stepUp and stepDown methods. And it seems that Chrome has changed here something. Will look into this this weekend. I think it's a Chrome bug, but maybe they changed the spec again.\n. yeah but I mean the `stepUp` method:\n\n``` js\ndocument.querySelector('input[type=\"number\"]').stepUp(1);\n```\n. Thx, will look into this, this weekend.\n. thx!\n. @simonox \nThx, can you request this change into the master branch instead of gh-pages. So I can fix this issue before the i18n changes, which trigger this issue are applied.\n. Sorry, I only can do one project at a time ;-). Answer is: IE has bugs and therefore I fully re-implement the constraint validation feature.\n. Thx\n. You are so right. I'm a (little bit) embarrassed.\n. Not 100% sure what you want but does this help:\n- http://jsfiddle.net/trixta/ycL0bwns/\n  or this one:\n- http://jsfiddle.net/trixta/puaumsja/\n\nI woul prefer the later. In any case the fieldWrapper option can also consume a function.\n. Yes and no. As we don't have shadowdom we need to influence the styles. And I can't fix this, you can simply fix this your own by adding: \n\n``` css\n.control-label {\n    display: block;\n}\n```\n\nWhich is also better from UX standpoint (larger label to click). See http://jsfiddle.net/9n118znw/5/\n. We can not copy the name attribute, because this would give wrong values to the backend, not validating invisible elements is not standard compliant.\n\nwebshim is coming with a standard compliant validation engine: http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival\n\nConsider to use this instead of jquery-validation.\n. @thejuan \nThe spec you are referring is talking about `type=\"hidden\"`, it does not talk about `display: none`, big difference.\n\nIf you really really want to use jQuery validation, you can do so. There is an option to validate invisible elements too.\n\nBut again, you already have a quite good validation inside of webshim/the native browser implementation. It doesn't make sense to add another script on top of it.\n\nIsn't this easy enough for you? \nhttp://jsfiddle.net/trixta/9859C/embedded/result,html/\n. There are multiple possibilities:\n\n``` js\n//The checkValidiy method return true/false, but also triggers invalid events on all invalid input, which means the validation UI is also invoked\n$('form').checkValidity();\n\n// check whether form has valid elements:\n$('form :invalid').length\n\n//get validity info about a specific element:\nconsole.log($(':invalid').prop('validity'));\n\n//while this is already implemented as a polyfill / it is currently not enforced (chrome doesn't support this yet)\n$('form').is(':invalid');\n```\n\nAlso note: In case you want to do some AJAX things. You don't have to do anything. Just bind to the submit event. As long as a form is invalid the submit event is never fired.\n. In case you want to get the `$('form').is(':invalid')` feature into all browsers you can do this:\n\n``` js\n//has to be run before calling webshim.polyfill\ntry {\nwebshim,bugs.bustedValidity = !$('<fieldset />').is(':valid');\n} catch(e){}\n\nwebshim.polyfill('forms forms-ext');\n```\n\nNote: I will add this feature detect as soon as Chrome has this in its stable version (i.e: 41 supports this).\n. @katzenmayer \nThx, I think I have fixed it in the master branch. I will check later. But you can try your own.\n. This also should be fixed with 1.15.6-RC1.\n. I have fixed this issue. Hope you won't find another one. Also created a new pre-release. Many thanks!\n. Thank you very much!\n. @0gust1 \n\nGood catch, this is definitely the bug. Thank you. Note you can shorten the code by doing \"self-closing\" thing:\n\n``` js\n$('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\" />');\n```\n. thx!\n. Thank you very much!!!\n. jQuery is used to fetch those resources. You can use:\n\n``` js\nwebshim.setOptions('ajax', {\n    crossDomain: true\n});\n```\n. Something you can do:\n1. Seperate jquery + polyfiller.js + your polyfiller initialization code (options + polyfill call) from the rest of your JS and include this package directly in your HTML with a higher priority.\n2. make sure to not call `polyfill` after domready, call it as soon as possible\n3. inline the scripts, which are always downloaded. (you can use this grunt-task: https://github.com/aFarkas/webshim/blob/gh-pages/grunt-tasks/optimize-polyfiller.js (note you can only build from dev not from minified) or you can use this builder: http://afarkas.github.io/webshim/demos/demos/cfgs/builder.html (those tasks give you a new polyfiller.js)\n4. in case you are not using JS apis but only markup apis set `webshim.setOptions('waitReady', false);`\n5. keep in mind `onload` event means nothing to perceived performance\n. In short: you can't type=\"url\" is defined by spec. Either you use type=\"text\" with pattern or you write a script and add http in front of it, if this is missing.\n. Try something like this:\n\n``` html\n<input pattern=\"(https?:\\/\\/)?([\\da-z.-]+).([a-z.]{2,6})([\\/\\w .-])\\/?\" />\n```\n. I think this should fix your problem.\n. You can disable this with the following option:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        noSpinbtn: true\n    }\n});\n```\n. In short: IE8+\n. This is a webcomponents issue, just run this code, with and without webcomponents:\n\n``` html\n<form id=\"form\" class=\"ws-validate\">\n    <input required=\"\"  />\n    <input type=\"submit\" />\n</form>\n<script>\n    $(document).on('special', function(){\n        console.log('document');\n    });\n    $(document.body).on('special', function(){\n        console.log('body');\n    });\n    $('form').on('special', function(){\n        console.log('form');\n    });\n    $('input').eq(0).trigger('special');\n</script>\n```\n. This is by design and [explained here](http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions). Please read carefully.\n\nThe technical problem here is that if Safari implements a feature, they make it never configurable. This means, if they have an implementation, but this implementation is only partial, you can't fix it using the native API and must write some kind of minimal abstraction layer.\n\nHere is a test for you:\n\n``` js\nObject.getOwnPropertyDescriptor(document.createElement('input'), 'validity') || Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'validity');\n```\n. Please blame apple. The most annoying browser on earth.\n. You can do this:\n\n``` js\nwebshim.bugs.bustedValidity = !('minLength' in document.createElement('input'));\n\nwebshim.polyfill('forms');\n```\n. I can't confirm this.\n\nIf you go to this site:\nhttp://afarkas.github.io/webshim/demos/demos/mediaelement/responsive-mediaelement.html\n\nYou will see, that `https://www.youtube.com/player_api` is not loaded until you run the following code in your console:\n\n``` js\n$('video').eq(0).prop('src', 'http://www.youtube.com/watch?v=H6IrUUDboZo');\n```\n\nMaybe you are using a very old version?\n. While I can see some inconsistence between native error bubble and customized error bubble. I can't see any difference between with `callProp` and `setCustomValidity`.\n\nCould you create a testcase for me?\n. @shefik \n\nCould you try the following things:\n\n``` js\nwebshims.setOptions('ajax', {\n    method: 'GET'\n});\n```\n\nIf above does not work, try the following option:\n\n``` js\nwebshims.setOptions('ajax', {\n    crossDomain: true\n});\n```\n\nCould you also check whether the file is loaded via _POST_ (in case of an error) and if yes, why? Is there a global ajaxSetup setting ajax request to POST or is there something with the server?\n. Try the following instead: `pattern=\"[(]{0,1}[0-9]{3}[)]{0,1}[-\\s.]{0,1}[0-9]{3}[-\\s.]{0,1}[0-9]{4}\"`. HTML5 pattern already transform the string into a regular expression, which must match from start to end.\n. It's there, it is only not part of the feature detection. You can do this:\nhttps://github.com/aFarkas/webshim/issues/499#issuecomment-87378449\n. Thx for all your PRs\n. Everything what thirdender said. Here is a better pattern to be used in conjunction type email:\n\n``` html\n<input type=\"email\" pattern=\".+\\.[a-zA-Z]{2,6}\" />\n```\n. You can build this easily your own. Here is an example:\n\n``` html\n<form novalidate=\"\" class=\"ws-validate\">\n    <fieldset class=\"pseudo-form\">\n\n        <input required  />\n\n        <input type=\"submit\" />\n    </fieldset>\n    <fieldset class=\"pseudo-form\">\n\n        <input required  />\n\n        <input type=\"submit\" />\n    </fieldset>\n</form>\n\n<script>\n    $(function(){\n        $('body').on('click', function(e){\n            var pseudoForm;\n            if(e.target.type == 'submit' && (pseudoForm = $(e.target).closest('.pseudo-form')[0])){\n                var invalids = $('input:invalid, select:invalid, textarea:invalid', pseudoForm);\n                if(invalids.length){\n                    invalids.trigger('updatevalidation');\n                    e.preventDefault();\n                    return false;\n                }\n            }\n        });\n    });\n</script>\n```\n\nAbout the way how ASP.NET is handling these things. In general I think it's just stupid, while it is perfectly fine to use just one action, a form has its own semantics, that is defined by WHATWG or W3C and this should not be changed. Developers should extend HTML not abuse it.\n\nPlease close this issue, if this answers your question.\n. You can also easily change my solution to anything you want. Here is an example using using your `data-validation-group` attribute:\n\n``` html\n<form novalidate=\"\" class=\"ws-validate\">\n    <fieldset>\n\n        <input data-validation-group=\"group-1\" required  />\n\n        <input data-validation-group=\"group-1\" type=\"submit\" />\n    </fieldset>\n    <fieldset>\n\n        <input data-validation-group=\"group-2\" required  />\n\n        <input data-validation-group=\"group-2\" type=\"submit\" />\n    </fieldset>\n</form>\n\n<script>\n    $(function(){\n        $('body').on('click', function(e){\n            var validationGroup;\n            if(e.target.type == 'submit' && (validationGroup = e.target.getAttribute('data-validation-group'))){\n                var filter = '[data-validation-group=\"'+ validationGroup + '\"]:invalid';\n                var invalids = $('input' + filter +', select' + filter +', textarea' + filter);\n                if(invalids.length){\n                    invalids.trigger('updatevalidation');\n                    e.preventDefault();\n                    return false;\n                }\n            }\n        });\n    });\n</script>\n```\n\nIn case you have buttons, that are doing different things HTML5 has added the `form*` attributes (`formtarget`, `formaction`, `formnovalidate` and so on).\n\nSo you can do this without any scripting:\n\n``` html\n<form class=\"ws-validate\">\n    <fieldset>\n        <input required  />\n        <input formnovalidate=\"\" value=\"save\" type=\"submit\" />\n        <input value=\"submit\" type=\"submit\" />\n    </fieldset>\n</form>\n```\n\nBut your request is quite special and therefore you always need to extend it with some little JS. As shown above you can write it pretty general so that you will be able to re-use them in all your ASP.Net projects, but I can't add something, that is only a special case. It's nice that we have an API for this.\n\nAnd about the approach of ASP.NET. This is not busted due to HTML5, it already was against semantics in HTML3.2. \n\nFor example screenreader users can jump from form to form. Making it easy to jump to search form, login form and/or contact form. This feature is busted. \n\nAnother HTML4 feature is, that if you hit enter in a text-ish input the form get's submitted (by clicking the first submitter automatically). I don't know ASP webforms, but in case this might still work \"magically\", they had to re-implement this native feature by script, because the native feature is busted. At least at this point it should have become clear, that every feature that directly hooks into the semantics or extends the behavior of a form element is busted by this approach.\n\nIn general I like technologies, where you write some code and then your HTML/CSS/JS is scaffolded for you, but it has to be made the right way (with standards in mind). Extend it instead of break it!\n. Not sure, what you mean. Normally the errormessage is placed right after the form element and normally the user scrolls the hole viewport. I need an example.\n. This is a very specific feature request. That does not follow the spec, however you can built it your own. Here is how: https://github.com/aFarkas/webshim/issues/148\n. You can try this:\n\n``` css\n.ws-range,\n input[type=\"range\"] {\n    width: 0.61538em;\n    height: 199px;\n}\n```\n\nBut this CSS should be in sync with this js config:\n\n``` js\nwebshim.setOptions('forms-ext', {\n    replaceUI: true\n});\n```\n\n[Demo http://jsfiddle.net/trixta/2v1vmgyx/](http://jsfiddle.net/trixta/2v1vmgyx/)\n. No, but the idea of the inline margin-left/margin-top is that it always tries to center the thumg inside the range. In case you don't want to center it, you can/should use top/left instead:\n\n``` css\n .ws-range-thumb {\n     left: 8px;\n}\n```\n\n[Demo: http://jsfiddle.net/trixta/f6rt1nzw/2/](http://jsfiddle.net/trixta/f6rt1nzw/2/)\n. webshim follows the HTML5 form spec. You have basically 3 options:\n- set all `input[type=\"file\"]` with at least one file to invalid\n- set first  `input[type=\"file\"]` with at least one file to invalid\n- create a hidden ``input[type=\"checkbox\"] and toggle it's validity according to the your group constrain\n\nIt really depends, how/where you want to display the errormessage(s)\n. will fix this sunday.\n. Your problem is mainly described in this chapter:\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\nSearch for:\nno shadowdom: .... Some styles like float or display: none/block are not reflected by the shadowdom ...\n\nand \n\nre-rendering shadowelements:\n...\n\n``` js\n$(document).trigger('updateshadowdom');\n```\n\nPlease close this issue, if this helped.\n. Yeah, reason for this is that the fieldset element itself now also fires an invalid event, if there are invalid elements inside. Additionally also the `:invalid` selector also applies to `fieldset` elements. The same is also true for `form` elements.\n\nWhich is basically a great feature. For example you can do this:\n\n``` css\nform:invalid [type=\"submit\"] { cursor: not-allowed;}\n```\n\nBut I really don't understand, why the semantics of an existing event and an selector is extended, instead of inventing a new one. (This really hurts web compat).\n\nPlease update with my fix.\n. This is fixed in master. I will do an release very soon. For more information:\nhttps://github.com/aFarkas/webshim/issues/527\n. thx\n. Yeah, it seems there was an error with the embedded examples. Just try to use without https. This should work:\nhttp://afarkas.github.io/webshim/demos/demos/forms.html#UI-replaceValidationUI\n. This is explained on http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival search for \"**Grouping multiple form fields to one validation group**\". Here is a demo: https://jsfiddle.net/trixta/uMA9d/embedded/result/\n\nPlease close if this helps otherwise please provide a testcase.\n. Can you still give me a testcase. I don't really understand what you mean. There is only one bubble visible at the time. What exactly isn't working?\n\nHere is a fiddle to start from:\nhttp://jsfiddle.net/trixta/Xp3Vb/light/\n. Grouping error messages is a special feature of the instant validation. I actually don't know what you expect how the bubble should look like grouped?\n\nYou should also use http instead of https, because the script is linked via http and might not work in Chrome/FF and IE.\n\nIn Safari the bubbles are used to polyfill the browser, what do you expect there? Nothing?\n. I normally solve this (similar how @kraz) in the deploy step. At the time of a deploy a new timestamp is generated and every static asset (js, css, background images, fonts) are referencing these assets through this timestamp. You can see this in action here:\nhttp://www.sos-kinderdorf.de/portal/\n\nHere is an example asset:\nhttp://www.sos-kinderdorf.de/blueprint/1436883923024/css/content.css\n\nBut as you can see, the number can be simply changed to any other number:\nhttp://www.sos-kinderdorf.de/blueprint/121/css/content.css\n\nAbout the `addCacheBuster`: You should be able to use `addCacheBuster` for your purpose.\n\nYou can do this:\n\n``` js\nwebshim.setOptions('addCacheBuster', '?v='+webshim.version);\n```\n. If you pre-define `webshims.formcfg.en`/`webshims.formcfg['en-US']` and `webshims.formcfg['en-GB']` and include this in your JS, than this will be used instead of the included version.\n. Another example:\n\nCreate a file with this content:\n\n``` js\nwebshims.validityMessages['en-CUSTOM'] = {\n    \"typeMismatch\": {\n        \"defaultMessage\": \"Please enter a valid value.\",\n        \"email\": \"Please enter an email address.\",\n        \"url\": \"Please enter a URL.\"\n    },\n    \"badInput\": {\n        \"defaultMessage\": \"Please enter a valid value.\",\n        \"number\": \"Please enter a number.\",\n        \"date\": \"Please enter a date.\",\n        \"time\": \"Please enter a time.\",\n        \"range\": \"Invalid input.\",\n        \"month\": \"Please enter a valid value.\",\n        \"datetime-local\": \"Please enter a datetime.\"\n    },\n    \"rangeUnderflow\": {\n        \"defaultMessage\": \"Value must be greater than or equal to {%min}.\",\n        \"date\": \"Value must be at or after {%min}.\",\n        \"time\": \"Value must be at or after {%min}.\",\n        \"datetime-local\": \"Value must be at or after {%min}.\",\n        \"month\": \"Value must be at or after {%min}.\"\n    },\n    \"rangeOverflow\": {\n        \"defaultMessage\": \"Value must be less than or equal to {%max}.\",\n        \"date\": \"Value must be at or before {%max}.\",\n        \"time\": \"Value must be at or before {%max}.\",\n        \"datetime-local\": \"Value must be at or before {%max}.\",\n        \"month\": \"Value must be at or before {%max}.\"\n    },\n    \"stepMismatch\": \"Invalid input.\",\n    \"tooLong\": \"Please enter at most {%maxlength} character(s). You entered {%valueLen}.\",\n    \"tooShort\": \"Please enter at least {%minlength} character(s). You entered {%valueLen}.\",\n    \"patternMismatch\": \"Invalid input. {%title}\",\n    \"valueMissing\": {\n        \"defaultMessage\": \"Please fill out this field.\",\n        \"checkbox\": \"Please check this box if you want to proceed.\",\n        \"select\": \"Please select an option.\",\n        \"radio\": \"Please select an option.\"\n    }\n};\nwebshims.formcfg['en-CUSTOM'] = {\n    \"numberFormat\": {\n        \".\": \".\",\n        \",\": \",\"\n    },\n    \"numberSigns\": \".\",\n    \"dateSigns\": \"-\",\n    \"timeSigns\": \":. \",\n    \"dFormat\": \"-\",\n    \"patterns\": {\n        \"d\": \"yy-mm-dd\"\n    },\n    \"month\": {\n        \"currentText\": \"This month\"\n    },\n    \"time\": {\n        \"currentText\": \"Now\"\n    },\n    \"date\": {\n        \"closeText\": \"Done\",\n        \"clear\": \"Clear\",\n        \"prevText\": \"Prev\",\n        \"nextText\": \"Next\",\n        \"currentText\": \"Today\",\n        \"monthNames\": [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ],\n        \"monthNamesShort\": [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ],\n        \"dayNames\": [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ],\n        \"dayNamesShort\": [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ],\n        \"dayNamesMin\": [\n            \"Su\",\n            \"Mo\",\n            \"Tu\",\n            \"We\",\n            \"Th\",\n            \"Fr\",\n            \"Sa\"\n        ],\n        \"weekHeader\": \"Wk\",\n        \"firstDay\": 1,\n        \"isRTL\": false,\n        \"showMonthAfterYear\": false,\n        \"yearSuffix\": \"\"\n    }\n};\n```\n\nAdd it after your polyfiller.js. and then call:\n\n``` js\nwebshim.activeLang('en-CUSTOM');\n```\n\nSee also http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-activeLang\n. Are you using the latest version of webshim? I can't reproduce your error:\nhttp://jsfiddle.net/trixta/4p1xq7qf/4/\n\nCould you please provide a testcase.\n. Use `clonePolyfill` and read https://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n. please create a testcase with jsfiddle jsbin or something similar.\n. You should be able to fix it with CSS. The date configurator also uses BS3 and has no problems (without doing anything).\n\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html\n\nYou might also try to disable auto calculation (`calculateWidth: false`) and handle it via CSS.\n. No it doesn't this is by design:\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n\n**no shadowdom:** Webshims lib sometimes has to add additional DOM elements to mimic the UI of HTML5 elements. This can sometimes create differences, between polyfilled and non polyfilled browsers. Webshims lib gives you a method called 'getShadowElement' to access the shadowelement from the native element and a method called 'getNativeElement' to access the native element from the shadowelement. If the element has no shadowelement the element itself is returned.\n\n``` js\n$('input[type=\"date\"]').getShadowElement();\n```\n\nYou can write a mutationobserver for your self if you need to.\n. This is documented:\nhttp://afarkas.github.io/webshim/demos/index.html#Forms-forms-ext\n\ntypes string A white space separated string. Possible values are 'datetime-local range date time number month color' . If one of the listed input types is not supported, Webshim will load the forms-ext API and UI package and implement all types. \ndefault: 'date time range number'\n\nYou can change it to:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    types: 'datetime-local date time range number'\n});\n```\n. Lol, ok I didn't know this ;-). The only thing is that Apple always made more trouble than any other browser. \n\nUnfortunately you can't feature detect this and you need to browser sniff here. You will have to argument the `replaceUI` option.\n\nYou can do so by doing this:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: isSafariMobile()\n});\n```\n\nor this:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: {\n        'datetime-local': isSafariMobile()\n    }\n});\n```\n. @tleunen \n\nThe overrideMessages option is gone. It caused many many problems. I recommend, that you live with the customMessages option in combination with replaceValidationUI or the iVal. \n\nAs an alternative you try something like this:\n\n``` js\nvar overrideMessage = function(){\n    var changeMessage = function(){\n        if(!this.title || $.data(this, 'validationTitle')){\n            $.data(this, 'validationTitle', true);\n            this.title = $(this).getErrorMessage();\n        }\n    };\n\n    $(document).on('changedvaliditystate', function(e){\n        changeMessage.call(e.target);\n    });\n\n    $('input:invalid:not([title]), select:invalid:not([title]), textarea:invalid:not([title])').each(changeMessage);\n};\n```\n. `.day-6` and `.day-0`\n. ```\nwebshim.setOptions({\n    'debug': true,\n    'forms': {\n        replaceValidationUI: true,\n        lazyCustomMessages: true,\n        iVal: {\n            fieldWrapper: '.form_fields__field',\n            errorWrapperClass: 'form_fields__field--has_warning',\n            errorBoxClass: 'form_fields__field_warning'\n        },\n        addValidators: true\n    },\n    'forms-ext': {\n        replaceUI: {number: 'auto'},\n        types: 'number'\n    }\n});\n```\n. Please also note, that webshim is actually deprecated.\n. @eraserqueen \nI will do so. Give me this weekend.\n. fixed for 1.0.0beta2\n. add mousewheel support, too\n. The feature-keywords are:\nes5, json-storage, geolocation, canvas, forms. forms-ext\n\nthe profiles-keywords are:\n-lightweight (FF4 doesn't has to load anything. everything is included, except forms-ext)\n-xlightweight (FF4 and IE9 doesn't have to load anything, everything is included except of forms and forms-ext)\n\nIf you have a suggestion how and where I should document this. Currently, it is documented in the several feature description.\n. It would be possible to make the documentation clearer by listing and describing every method by itself with examples, like in the jQuery docs: http://api.jquery.com/jQuery.ajax/\n. You find an example [here](afarkas.github.io/webshim/demos/demos/webforms/3-webforms-widgets.html#date-cfg).\n\nIt's quite simple. If you use positive margin-left styles for the buttons, they are positioned outside. Webshims detects this an will adjust the width calculation autmatically:\n\n```\n.input-buttons.date-input-buttons {\n    margin-left: 2px;\n}\n```\n\nPlease let me know wether this helps.\n. This is in general explained [here](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions)\n\nSo you can write:\n\n```\n$('input').prop('disabled', true);\n```\n\nor with declarative:\n\n```\n<input type=\"number\" disabled />\n```\n\nI guess you tryed:\n\n```\ninput.disabled = true;\n```\n\nWhich is quite hard to implement x-browser. The interesting part of webshims is indeed, that I do not try to invent a new abstraction layer. I simply use jQuery  build in methods and extend those. Especially this makes webshims so special over all shims, which implement new abstractions and therefore have to be loaded in all browsers.\n. don't implement forminput (depreacated)\n. aria-required can be too much a11y. aria-invalid is a must have.\n. fixed for version 1.0.0beta2\n. wait for modernizr 2.0\n. Yes, I have already started to work on this. Due to the fact, that I will change a lot here, it might take a little bit. But I will remove the UI widgets and will write those widgets myself, so they better fit, to HTML5 input elements (performance). I will leave a lot of features, like display multiple months to let you also improve the widgets over the native ones.\n. should be another project\n. it wasn't date-validation it was jQuery's focus method.\n. https://bugs.webkit.org/show_bug.cgi?id=27247\nhttps://docs.google.com/View?id=dch3zh37_0cf8kc8c4&pli=1\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#dom-input-selectedoption\n. createPattern with images isn't supported by excanvas (third party script). I will look wether a newer version can be used here. (Note: I'm using the latest official download version, but there were some changes since then.) You can also fill a bug @ http://code.google.com/p/explorercanvas/issues/list\n. The new version of excanvas has this. I have updated to this version and it will be in the next release of webshim.\n. @codler\nWhich kind of error do you mean? (There are 3 types). If the user denies a geo-lookup, we should respect this decision.\n\nIn other cases, I could implement this behavior, but this needs a configuration (extendNativeGeolocation or something similiar). webshims lib normally does not load a polyfill if native support is detected.\n. Sorry, but I won't recieve geolocation data, after the user has expressly rejected this behavior.\n. Hi,\n\ncan you give me a hint, which browser produces this error? I guess Opera 10-?\n\ncheers\n. Ok, interesting I cannot reproduce this. Is this on the normal demo site? \n\nBut I don't see a compatibility issue, if I add your change.\n\nAnd BTW.: Actually, creating a placeholder polyfill seems to be really easy, but it's more difficult, like valueAsNumber...\n\nPlease also note, that the webshims pre1.5 version is far away from beeing production ready. The version 1.2.3 is quite stable, but I don't like the way some parts work.\n. patch was included\n. 1. helping out\n   This is extremley cool. I will write something about this. \n\nI count you in!!! :-)\n1. Placeholder\n   Technically it is possible, but it's not really my intention/suggestion. webshims feature are already balanced in filesize-/feature. And the placeholder is looked as a module of the form feature. The best way is to add a new polyfill, pointing to the old polyfill:\n   \n   ```\n   //add a new feature called formplaceholder\n   $.webshims.addPolyfill('formplaceholder', {\n           //point the implementation source to the standard placeholder-feature\n           src: 'form-placeholder',\n           //load this polyfill, if placeholder is not supported and the standard placeholder is not loaded\n           test: function(list){\n                return ($.inArray('form-placeholder', list) != -1 || Modernizr.input.placeholder);\n           },\n           //load dom-extend, if needed\n           dependencies: ['dom-extend']\n   });\n   //load only placeholder with dependendcies\n   $.webshims.polyfill('formplaceholder');\n   ```\n\nNote: The new polyfill 'formplaceholder' will still get his configuration from the 'forms-feature'. If you want to change the configuration for the placeholder. Currently only one config-option (use overlabel for all inputs), you have to set the options for the forms - feature:\n\n```\n$.webshims.setOptions('forms', {\n    placeholderType: 'over'\n});\n```\n. https://bugzilla.mozilla.org/show_bug.cgi?id=634004\n\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=591737\n\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-details-element\n. thanks\n. This project currently has only 26 watchers, so a little bit noise is very welcome. If you have any problems, ideas, suggestions ... please let know.\n\nIf you have made nice translations: They are welcome, too.\n. Omg, thanks!!! This is so awsome, my english is extremly bad. I will only make one change regarding to the patternMismatch message. From specification: \n\n\"... authors should include a title attribute to give a description of the pattern. User agents may use the contents of this attribute, if it is present, when informing the user that the pattern is not matched, ...\" (http://www.w3.org/TR/html5/common-input-element-attributes.html#the-pattern-attribute)\n\nAnd this is the way FF4 and Opera is doing.\n\nIf you want to compare your validation messages with your browsers messages. You can have a look @ http://jsfiddle.net/trixta/DaDav/\n. I already had this feature (https://github.com/aFarkas/webshim/blob/8ba5d377d6ab3691328c917dd59fa0bfcc7b7ddf/src/polyfiller.js#L403), but I made some performance tests and saw, that the performance gain is only significant in IE6 and IE7. IE8+, FF3.6+ Safari5+ etc. would not benefit from the extra code (increased filesize), so I removed this. But I know this feature request will come some day.\n\nWhat do you think, if I would write a plugin which adds this feature, instead of adding this feature directly into webshims polyfiller.js.\n. aditionally, I talked with some developers in my company about this and they had the fear, that such a feature can simplify DOS attacks\n. I will add this with next version.\n. Hi,\n\nI have now implemented combohandler generation and pushed this to master a short description is also on the index.html of demos. Could you please look, wether the configuration-possibilities are fine with your combohandler service?\n\ncheers\nalex\n. Thanks, I do see two errror here, but not what you mentioned. I will fix those and explain, how this works. I wanted to solve this. It would be great, if you would look, how we can improve documentation.\n. Ok, before I start to fix the issues here some short informations, how it should work:\n1. the customMessage approach (has a minor error see workaround below):\n       $.webshims.setOptions('forms', {customMessages: true});\n       $.webshims.activeLang('zh');  \n       $.webshims.polyfill('forms');\n       $(document).bind('firstinvalid', function(e){\n           $.webshims.validityAlert.showFor( e.target, $(e.target).attr('customValidationMessage'));\n           return false;\n       });\n2. the overrideMessages approach:\n       $.webshims.setOptions('forms', {overrideMessages: true});\n       $.webshims.activeLang('zh');  \n       $.webshims.polyfill('forms');\n\nDue to the fact, that I have moved activeLang from polyfiller.js to dom-extend.js, both approaches will throw an error. The second approach currently only works initially, what is not nice.\n\nHere is how you would do it, with webshims lib 1.5.2:\n        $.webshims.setOptions('forms', {customMessages: true});\n        $.webshims.ready('dom-extend', function(){\n            $.webshims.activeLang('zh');  \n        });\n        $.webshims.polyfill('forms');\n        $(document).bind('firstinvalid', function(e){\n            $.webshims.validityAlert.showFor( e.target, $(e.target).attr('customValidationMessage') );\n            return false;\n        });\n\nTo make the validityMessages bullet proof, you should write something like this:\n        $.webshims.validityMessages.zh = $.extend(true, {}, $.webshims.validityMessages[''], {\n            valueMissing: '\u8bf7\u586b\u5199\u6b64\u5b57\u6bb5\u3002'\n            ,typeMismatch: {\n                email: '\u8bf7\u8f93\u5165\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002'\n            }\n        });\n\nAdditionally, I see some other problems in your code, regarding to $('body').fadeIn(); Am I right, that you are doing this, to remove FOUCs?\n. Ok, I have fixed the issues and pushed them to the master-branch.\n. About the red outline: This is absolutly ok and well stupid. This is a feature of [CSS3 UI module](http://www.w3.org/TR/css3-ui/#pseudo-invalid) and doesn't have to do with webshims lib. You can simply remove this with box-shadow: none. Note that you should also set the border, the background-color and the color. Here is how you could do it:\n        /\\* remove native invalid styles */\n        :invalid {\n            box-shadow: none;\n            border: 1px solid #000;\n            background: #fff;\n            color: #000;\n        }\n\nFF4 adds some nice extra selector, which do the job better this is called: [:-moz-ui-invalid](https://developer.mozilla.org/en/CSS/%3A-moz-ui-invalid). Webshims also adds some extra class, which behave similiar to -moz-ui-invalid (.form-ui-invalid).\n\nSo your style could look, like this:\n        /\\* remove native invalid styles */\n        :invalid {\n            box-shadow: none;\n            border: 1px solid #000;\n            background: #fff;\n            color: #000;\n        }\n\n```\n    //add invalid style for FF4\n    :-moz-ui-invalid {\n        //invalid style\n    }\n\n    //add invalid style for all browsers\n    :-moz-ui-invalid {\n        //invalid style\n    }\n```\n. About the $('body').fadeIn()-Thing:\n\nYou do move your JS at the bottom. Moving JS at the bottom doesn't make loading the whole page faster. Putting JS at the bottom means: Load JS as slow as possible, to reduce the time, where the user doesn't see the page loading (white page). The problem is, that this also causes FOUCs. In your case you hide the whole page and make it visible with JS, which means, the white page loading isn't decreased, it will be increased. This means: You should, put your JS at the top!\n\nAnother thing here is:\n1. Don't rely on JS\n2. Don't hide with display: none (because, this can create some strange issues, if you are using JS)\n\nMy CSS-Code for this (The .js-Class comes with Modernizr):\n\n```\n    .js body {\n        visibility: hidden;\n    }\n```\n\nMy suggested JS Code:\n\n```\n    $(function(){\n        $('body')\n            .css({opacity: 0, visibility: 'visible'})\n            .fadeTo(400, 1)\n        ;\n    });\n```\n\nOne question: I have written, that a developer should prefer 'customMessages' over 'overrideMessages', why did you use overrideMessage? (As you see I'm not really happy with this.)\n. Hi,\n\nI'm not sure, but if you see the following behavior:\n- try to submit\n- submit is aborted\n- first invalid field is focused\n- no error UI\n\nThis is a known bug in old webkit (includes also Safari 5.0.1, but not Safari 5.0.2 and not Safari 4.x). \n\nI decided some time, that I don't fix this bug anymore (you can only do this with browser sniffing + is test intensive), because of the non-existent marketshare of those webkit versions.\n\nWhy are you testing those browsers, is supporting chrome 7 needed???\n. Ok, I have fixed this on my local machine, but needs some extra tests. Only to make my statement above clear. It was a small issue on a browser with very small marketshare and I take x-browser testing very seriously.\n\nThis was the list of browsers, which I did actively test:\n- FF final/latest (4.0)\n- FF -1 (3.6)\n- FF fixed @ 3.0 (no localStorage in Mozilla test)\n- IE6\n- IE7\n- IE8\n- IE9\n- Safari - 1 (4.x)\n- Safari final/latest (5.0.4)\n- Safari for latest iOS (4.3.1)\n- Safari nightly\n- Chrome dev (currently 11)\n- Chrome final (10)\n- Chrome fixed @ 10 (has almost everything right, but one small issue, which has to be browser sniffed)\n- Opera final (11.01)\n- Opera -1 (10.54)\n\nand now I got a new browser to test with each release:\n- Safari fixed to 5.0.1\n\nAlthough, I'm working with a testsuite, this huge list makes it really hard to push a new release.\n. I have fixed, only because I saw, that someone is trying, so this bothers me. I only wanted to make clear, that I already do a lot of x-browser testing and due to the fact, that HTML5 features are really differntly supported, it's really hard, to make it really really good. Now it is fixed (the testsuite already showed, that this fails) and now I have setup my vm using another Webkit version.\n. Is there an error in your JS console? Have you included Modernizr? Do you have a testpage? (You can send me message too.)\n\nI will look tomorrow, wether I can try, to create testcase using modernizr.\n. Hi,\n\nI have tryed to create a testcase using the newest version. And everything works fine. \n\nThis is my JS inside of the head:\n\n```\n    <script src=\"../js-webshim/minified/extras/modernizr-1.7.min.js\"></script>\n    <script src=\"yepnope.1.0.1-min.js\"></script>\n```\n\nAnd this is my implementation Code at the bottom (although, I think you shouldn't include this at bottom):\n\n```\nyepnope([\n    'http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js',\n    {\n        load: '../js-webshim/minified/polyfiller.js',\n        complete: function(){\n            $.webshims.setOptions('forms', { customMessages: true, textareaPlaceholder: true}); \n            $.webshims.loader.basePath = \"../js-webshim/minified/shims/\"\n            //load all defined\n            //or load only a specific feature with $.webshims.polyfill('feature-name');\n            $.webshims.polyfill('forms-ext');\n        }\n    }\n]);\n```\n\nI really need more info (best some code) to help you.\n\ncheers\nalex\n. @bbabics\nI would like to create a new release and want this issue to be fixed. Please could provide a testcase and still can't reproduce this. If you cannot generate a simple testcase, I will close this bug report. You are free to open a new one as soon as you can add more information/ reproducable testcase\n\ncheers \nalex\n. Yes, this is still an issue. valueAsNumber, willValidate validity, validationMessage are properties, there is no content attribute. In current webshims, you have to use attr in future webshims you have to use prop for this. \n\nIn case of required, you can choose, what you want and in case of novalidate, you have to use attr.\n\nI'm working on this. Currently half of the testsuite is running, the other half, will be done in next 2 weeks. My \"internal release date\" is 06.06.11 for a jQuery 1.6.1 compatibel version. This version won'T be compatible with old jQuery, but won't have any new features at this date.\n. @GeekyMonkey\n\nNo need to revert your project. I will try to release 1.6.3 today (not compatible with jQuery 1.6.1) and then I will merge my jQuery 1.6.1 compatible branch into the master branch and push it to the rmeote repository. My hope is, that I get all unit tests pass in all tested browsers today and then to make a release for the jQuery 1.6.1 compatible version on sunday/monday.\n\nI will close this bug, if all tests do pass and this version is available in the remote repo. This can be your time, to make your own tests with this version.\n. I have now pushed the new version to remote/master, but had no time to test all browsers. I noticed some minor issues in IE9 using $(element).val(undefined/null); + one issue with Safari5 and Opera 11 regarding select[required]. In FF4 and Chrome 12 everything seems to be fine.\n\nI haven't updated everything in the demos, so some examples might not work, although everything is implemented right.\n\nIE8/7/6, FF3.x and Safari4 are untestet.\n. All tests now pass in all browsers. only documentation/demos and [custom-validity script](https://github.com/aFarkas/webshim/blob/master/demos/js-webshim/dev/extras/custom-validity.js) has to be updated. \n\nIf you have still issues with google maps and IE9, let me know. I will need a testcase, then.\n. thanks\n. Is your input element inside of a form element?\n. If your input element was outside of a form element. webshims lib 1.6.1 won't validate it. I have changed this with version 1.6.2RC1. I have pushed this version to master and testet it with all supported browser, so it's good to use. Can you confirm, that your problem is solved with version 1.6.2RC1?\n. The line:\n\n```\nif (elem.validity.patternMismatch) { message = $(elem).data('patternmessage') || elem.validationMessage };\n```\n\nis from your script? If yes, you should change this to the following:\n\n```\nif ($(elem).attr('validity').patternMismatch) { message = $(elem).data('patternmessage') || $(elem).attr('validationMessage') };\n```\n\nWebshims lib has never supported direct access to the attributes, because it is very hard to implement real/native crossbrowser DOM-getters/-setters. see also the [documentation about our minor abstractions](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions). All polyfills which try to do this are not save to use.\n\nAlso Note, that you can \"implement\" customValidationMessages. With the following lines:\n\n```\n$.webshims.setOptions('forms', { customMessages: true });\n$.webshims.polyfill('forms');\n```\n\nAnd then use:\n\n```\n<input data-errormessage=\"errormessage\" type=\"email\" />\n\n$(elem).attr('customValidationMessage');\n```\n\nThere are a lot ways to manipulate the errormessages. You find more information in documentation [here](http://afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html)\n. You are right about this issue and it is save to use (not only with chrome). I have tryed to implement the spec very accurate. An older version of the spec sayed, that the element has to \"actively\" associated with a form. The current says, that all elements that are listed form-associated elements and are not barred from validation should be validated. FF4 and Opera11 also support this, so no problem :-).\n. BTW.: your issue is now part of the testsuite: https://github.com/aFarkas/webshim/commit/5d64ce456d309f79735f6257a7ade5e0b480f921#tests/index.html\n. I close this bug, because, I think your code works with the following line?:\n\n```\nif ($(elem).attr('validity').patternMismatch) { message = $(elem).data('patternmessage') || $(elem).attr('validationMessage') };\n```\n\nIf not, please reopen.\n. Honestly, this is not my codestyle. I used to this in past, but from my experience the possibility to forget a \",\" and create unintended globals is higher.\n\nIf you do this for simple filesize optimization. Most script minifiers like closure compiler [already do this automatically](https://github.com/aFarkas/webshim/blob/master/demos/js-webshim/minified/extras/loaders/sssl.js).\n. No, \"2011-06-15 18:40:41\" is not a valid datetime-local format. webshims lib has not implemented value sanitation yet, so we show something here (If we would have added value sanitation the value of the control would be an empty string). \n\nA valid datetime-local format would look like this:  \"2011-06-15T18:40:41\". \n\nIf you want to use datetime-local with seconds, you also have to modify the step attribute, because the default step for datetime-local is 60 and the stepScaleFactor is 1000 (1 Minute).\n\n```\n<input type=\"datetime-local\" step=\"1\" value=\"2011-06-15T18:40:41\" />\n```\n\nDoes this answer your question?\n. You mean inside of the webshims polyfill? If you want to implement it your own, there is already a part where you can hook in. It should be implemented together with the UI. And there is some code which trys to reflect the value and checks, wether it can be parsed. @ https://github.com/aFarkas/webshim/blob/master/src/shims/form-number-date.js#L809 you find the code for the date module. It looks like this:\n\n```\nvalue: function(orig, shim, value){\n    if(!replaceInputUI.date.blockAttr){\n        try {\n            var dateValue = $.datepicker.parseDate('yy-mm-dd', value);\n        } catch(e){var dateValue = false;}\n\n        if(dateValue){\n            lazySetDate($(shim), dateValue);\n        } else {\n            $.prop(shim, 'value', value);\n        }\n    }\n}\n```\n\nIf you would change this to:\n\n```\nvalue: function(orig, shim, value){\n    if(!replaceInputUI.date.blockAttr){\n        try {\n            var dateValue = $.datepicker.parseDate('yy-mm-dd', value);\n        } catch(e){var dateValue = false;}\n        if(dateValue){\n            lazySetDate($(shim), dateValue);\n        } else {\n            //if we can not parse set the shim to an empty string\n            $.prop(shim, 'value', '');\n            if(value){\n                replaceInputUI.date.blockAttr = true;\n                $.prop(orig, 'value', '');\n                replaceInputUI.date.blockAttr = false;\n            } \n        }\n    }\n}\n```\n\nYou would have added basic value sanitation for the date-input.\n. Yes, thanks. Actually the script works, but the tests does test the wrong thing. \n\nAria-attributes should be removed (=undefined), but some IE 8 do return an empty string in this case, which is strange. I will change the check with strictEquals to a simple equals. It would be problematic, if the result would be the string \"false\"/\"true\" or \"list\"\n. Hi jab,\n\nthis is a pure chrome issue (currently not in stable, so no bi problem). I created an [issue for this bug](http://code.google.com/p/chromium/issues/detail?id=89454). Webshims lib can not fix this. There are only two workarounds:\n1. remove the CSS, which triggers the bug (position: relative on body in your case).\n2. replace the native validation ui, with the your own or with webshims build in validation ui (last should be the easiest way)\n\nbut I'm pretty sure tkent will fix this issue, before the bug goes into the beta/final branch.\n. some quick notes:\n1. About position: relative. This seems to be added by googles translate service\n2. Your configuration is right and in my testcase everything works fine, but I will look into this inside of your demo.\n3. wrong positioning of webshims error bubble in case of body relative + top/left: I will fix this very soon.\n. I have fixed the mispositioning done by webshims lib. So this should work now with the newst version. Could you please test? If you have any problems it would be great to see them on the livepage to test against.\n\nThanks for your bugreport.\n. Thanks again, for your bugreport. I have fixed this issue with my [latest commit](https://github.com/aFarkas/webshim/commit/d1661c1c463f65394cf26b13de481f031d4d5ef2). \n\nYou can find some backgroundinformation about the problem, dealing with this issue in issue #16.\n\nThe way, I have fixed this, is now really bulletproof for future safari versions. (Don't ask me, why I have closed issue #16.)\n\nSome informations about the current state of webshims: There were some bigger changes, which aren't crossbrowser testet yet. I try to release a testet version on tuesday.\n. Yeah, I'm currently not sure wether this feature stays. I want to create a way to load and do base configuration of webshims lib without writing a line JS. My problem here, what do you think is better/more \"semantic\" correct. \n\n```\n<meta name=\"polyfill-path\" content=\"/shims/\" />\n<meta name=\"polyfill\" content=\"es5 json-storage forms\" />\n```\n\nOr:\n\n```\n<script src=\"some/script.js\" data-polyfill-cfg='{\"basePath\": \"/shims/\"}' data-polyfill=\"es5 json-storage forms\"></script>\n```\n. Ok, great. Thanks for your feedback: \n\nI will add 2 data- attributes: data-polyfill (starts polyfilling, optional whitespace seperated list of features), data-polyfill-cfg (JSON-Object for configuation).\n- I will add some documentation.\n\nCurrently you can change the path using JS, before you call polyfill:\n\n```\n$.webshims.loader.basePath = \"/shims/\";\n$.webshims.polyfill();\n```\n\nNote: Changing the basePath in webshims lib 1.8+ will be changed to:\n\n```\n$.webshims.setOptions(\"basePath\", \"/shims/\");\n```\n. From version 1.8 the basePath can be changed, either by data-attribute:\n\n```\n<script src=\"some/script.js\" data-polyfill-cfg='{\"basePath\": \"/shims/\"}'></script>\n```\n\nor by Script:\n\n```\n$.webshims.setOptions(\"basePath\", \"/shims/\");\n```\n\nThe old way using meta element or changing loader.basePath isn't supported anymore. The new way is documented. \n. This would be indeed an epic fail, but i can not reproduce this bug. Could you please provide an example. Or describe what you are exactly doing and how you test this.\n\nThe value is reflected in both ways, changing the ui slider value manually (with mouse, touch, keyboard etc.) will set the value of the input element and changing the value of the input element programmatically will change the ui of the slider.\n. Actually the script adds new width and padding-right to type=number/type=time - shadowelement, to make it fit the \"outerWidth\" of the original type=number/type=time element. If you want to make this larger simply add more width to the original input element. Or did the script compute the width wrong? If yes, I would need a testcase.\n\nThere is also a configuration option, to remove this:\n\n```\n$.webshims.setOptions('forms-ext', {calculateWidth: false});\n```\n\nNote: That setting calculateWidth to false will also remove the padding-right calculation.\n. great thanks. i will fix this.\n. Thx, again for the detailed bug report. I have fixed this by using Modernizr.prefixed feature which is optional, but required if you are using box-sizing now. Note: That IE8/9 in IE7 does return a false positive with box-sizing, but in real IE7, everything seems fine. But, I guess you don't support this bad browser anymore :-)\n. How to add dynamic content is a principle of webshims lib, which is not only used with forms, but also with sectioning elements, mediaelements and the canvas-element. I have documented it [here](http://afarkas.github.com/webshim/demos/demos/shiv.html). Does the description/documentation fit your needs? Or should I add more examples/documentation?\n\nIf yes, I will simply add an additionally link from the forms/forms-ext description.\n. The updatePolyfill method is already part of webshims version 1.8.1. The caveat with before jQuery 1.7 is, that it won't work with new HTML5 elements like datalist or output in IE8-. If you only use the new attributes and types and no new elements, it will already work with IE and of course in all other browsers.\n. Hi,\n\nthanks for your bugreport. It is indeed a chrome bug. My newest commit deals with this. But I hope, that this will be fixed before Chrome 16 goes stable. I will observe this in the beta channel and if it's still there, I will file a bug.\n\nAbout the message \"Polyfilling takes a little bit long\". This message comes, if polyfilling takes more than 600ms. I have changed this message from \"warn\" to \"info\", so that it should be only visible, if you do set $.webshims.debug = true;. \n\nIf this message comes only if this error occurs, than everything should be fine. If it's comming in Chrome 14 or FF7 and you are only loading the \"forms\" feature, you really should look into the networkpanel to detect why it takes so much time.\n\nYou can also give me the URL to look into this.\n\ncheers\nAlex\n. Hi mog-labs,\n\nthis is simply not possible with HTML5. the reason, why this works in FF is, that I have not implemented [value sanitization](http://www.w3.org/TR/html5/number-state.html#range-state) algorythm. In Chrome and Safari the behavior is absolute HTML5 comiplant.\n\nBut there is another possible solution, simply use setCustomValidity to implement customErrors. I have created a demo using [input[type=\"range\"] with setCustomValidity](http://jsfiddle.net/trixta/xTTEy/).\n\nI hope this helps.\n\ncheers\nAlex\n. @mog-labs\n\nI have realized, that there was a small issue with my demo, so I have updated this. Please check the new code.\n. Actually, this issue comes from webshims lib, but should be fixed in SS. First of all I'm not sure how this should work. But I see, that SS trys to go through all properties of your declared function test. I don't think, that this is intended. However, in non polyfilled browsers functions do not have listed properties. In case of a polyfilled browser, they have.\n\n@hij1nx should check wether the property is a true member of the object or not, using the hasOwnProperty method. Additionally SS should check wether the for in loop on your test function is really by design or an accident.\n\n```\nfunction regify(routes) { // convert all simple param routes to regex\n    for (var key in routes) {\n        if(routes.hasOwnProperty && routes.hasOwnProperty(key)){\n            regify(routes[key]);\n            if (key.indexOf(':') !== -1) {\n                var newKey = key.replace(/:.*?\\/|:.*?$/g, '([a-z0-9-]+)/').slice(0, -1);\n                routes[newKey] = routes[key];\n                delete routes[key];\n            }\n        }\n    }\n} \n```\n. Hi,\n\nthis is actually not a bug. If you are using (mouse related) events, jQuery copies those properties into a new fake event object. There is nothing I can do against it, but this has no side effects.\n\nYou will see this message on a lot of jQuery sites (http://jqueryui.com/themeroller/, http://jquery.com/) . It might be, that this changes with jQuery 1.7 (They have refactored a lot in events and now they do not copy everything, but I'm not sure).\n\ncheers\nalex\n. Hi.\n\nI don't really want to add a class, simply because, this makes overriding the shim.css more difficult. shim.css is added before all other styles, simply because I wanted to make it easy to override some of the default styles.\n\nI guess you are using the width/height content attribute. Switiching to use CSS (either inside of a stylesheet or inline) to set the dimensions would be an easy solution. In fact using styles will give you more features, like using % or em units. Isn't this a way you could go?\n\ncheers\nAlex\n. Actually scoping is not complicated. It's simply the same problem, but with CSS. If a developer wants to set a baseline dimension for his videos, he will simply use 'video'. If I use a scope '.video-shimed video', I will have this issue. So its complicated.\n. Thanks!!!\n. Hi,\n\nyes webshims 1.7.1 isn't compatible with jQuery 1.7. This should be fixed with 1.8.2. There is only one small problem with 1.8.2 and jQuery 1.7 and it's almost theoretic nature:\n\nIf you would delegate a submit event from a form to the same form, the bug would be triggered, but actually this code wouldn't really make sense and wouldn't work neither, so no big problem.\n\nBUT: There is some really bad news for you. webshims 1.7 has a huge issue with upcomming chrome 16. Webshims has fixed it with 1.8.2 (still one minor issue with Chrome 16). If you have time wait for 1.8.3 final, but if you are using webshims in production you should switch soon (either to 1.8.2 or to 1.8.3RC3 <- it is a real RC, so I don't plan to change anything in the final (only updating testsuite, jQuery, Modernizr...).\n. fixed with version 1.8.3\n. Thanks for your bugreport. Which version of webshims are you using? You can type $.webshims.version into your console. I think this bug should be fixed with version 1.8.2\n. @randycasburn\n\nNo problem. Can you approve that version 1.8.2 has fixed this issue for you?\n. I can't reproduce this error with webshims 1.8.2, anymore. Can you test this with dev version and not minified and tell me the line number of the error?\n. This sounds like more a caching problem. Could you re-check this using a [fresh download](https://github.com/aFarkas/webshim/downloads) and clearing your cache.\n. fixed with version 1.8.3\n. awsome, thanks!\n. I'm not sure, whether I'm seeing the same issue. I can confirm, that there is an Opera bug. Opera is submitting the form, if the form is valid, but it doesn't show the native errormessage. Is this your bug?\n. Can you please try the newest version from master. This should fix your issue. There is still a failing minor issue, but nothing which should be a problem.\n. Hi,\n\nI'm not 100% sure, wether I understand your code/purpose right. If I try your demo page without the changes, everything is fine (short test in IE9/FF8). My hole testsuite is testing webshims by calling polyfill after the load event.\n\nI do generate Special 'Ready' events, which are immediately fired, if you [add a new event-listener](https://github.com/mrohland-at-gannett/webshim/blob/master/src/polyfiller.js#L198-200). This special event handler is [created by overriting the normal jQuery ready method](https://github.com/mrohland-at-gannett/webshim/blob/master/src/polyfiller.js#L604-618). \n\nIn case your using polyfill after DOMReady I always suggest to set waitReady option to false, because it doesn't work as expected. -> Webshims doesn't delay the domready method anymore until all features are loaded and implemented. Could you please explain in more detail, what the problem is. If your code doesn't work right (polyfilling after ready-event), you found a bug, because it should already work, but I have difficulties to reproduce this.\n\ncheers and thanks for working on the code :-)\nalex\n. Ah, I think I understand this now and this is a bug. Instead of modifiying polyfiller.js. Can you try to simply add the following code after jQuery and polyfiller is loaded:\n\n```\njQuery(function($){\n    $.webshims.isReady('DOM', true);\n});\n```\n\nYour code fixes the event API, but doesn't fix the isReady API (which isn't currently used but might be used in the future). If this fixes your issue, I will fix it with next release. I hope, I can do this soon, but I do need to find a better solution for issue #78.\n. @dcmoore-gd\n\nIs this info for me? I don' t really understand. How can I help? Are you using something like custom styleable select elements?\n. This would mean an API change, which I do not want to make. I would suggest to add a new event called changedvaliditystate or something similiar. I made a [gist example](https://gist.github.com/1474461).\n\nI'm currently not totally conviced, wether I want to add this. Could you provide some informations?\n\nSome informations about, when I do add something:\n\nWith webshims, I really only want to add HTML5 capabilities. If there are common and usefull extensions, I don't really want to add them anymore, instead I really would like to see a jQuery-plugin, which might work also without webshims and only in  HTML5 capable browsers. This is the reason why I'm currently working on [JME2](https://github.com/aFarkas/jMediaelement/tree/jme2). This project provides some API extensions to the mediaelements and let's you create custom styleable controls for mediaelements using a declarative markup API. It can be used in all modern browsers without a polyfill and if you are using webshims, you can use it in all browsers. So I really want to seperate extensions/abstractions from polyfilling.\n\nOnly extensions/abstractions, which are a) very usefull, b) can be easily implemented into webshims and c) can't be implemented easily outside of webshims are canditates to go directly into webshims.\n\nThere are so much possibilities to create totally new user interfaces and usefull abstracted APIs on top of the Standard API... I really want to see them, but outside of webshims...\n. I have implemented this, simply because it is more low-level than the other validity-event. Your code should look like this:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n\n$('form').bind('changedvaliditystate', function(e) {\n    $(e.target).next('.error').html( $.prop(e.target, 'validationMessage') );\n});\n```\n\nAnd if you are already using extension here is a little nice abstraction:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n<input type=\"email\" data-errormessage=\"custom errormessage\"><span class=\"error\"></span>\n<input type=\"email\" data-errormessage='{\"typeMismatch\": \"mismatch message\", \"defaultMessage\": \"defaultmessage\"}'><span class=\"error\"></span>\n\n$('form').bind('changedvaliditystate', function(e) {\n    $(e.target).next('.error').html( $.webshims.getContentValidationMessage(e.target) );\n});\n```\n. Hi Matt,\n\nthis is [by Design](https://github.com/aFarkas/webshim/blob/master/src/shims/form-shim-extend.js#L661-668). The reason for this is that [HTML5 does **not** allow a placeholder on input[type=\"date\"]](http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary).\n\nBut you are right, not copying things like tabindex is an issue. I'm asking myself, wether I should use a blacklist or a whitelist for copying things. Do you have any suggestions here?\n\nThanks for filling an issue!!!\n. Oh sorry, I checked [the Spec](http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary) again and placeholder is only allowed on the input types, I do explicitly allow.\n. No currently not, but I have added this feature now. You can get the latests version the custom-validity.js. It should be quite simple to implement manually, too.\n\nThe 4-webforms-custom-validity.html also has an example for this new feature.\n\nAnd thank you, that you like this library :-)\n. @billsaysthis \n\nThanks for your bug report. I think, this is not an issue. I have created a [simplified jsfiddle for you](http://jsfiddle.net/trixta/dFq3F/). I see multiple problems with your markup:\n- The [data-datepicker configuration](http://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#configure-ui) is only used, if there is no HTML5 attribute for this purpose. In case of minDate/maxDate, there are already min/max attributes.\n- The date type only allows using the following date format YYYY-MM-DD. If you enter a different format, webshims might use it for displaying it to the user, but don't use it for calculating. The field is simply invalid. Webshims trys to localize it to the browsers locale, but you can also set a specific locale, using $.webshims.activeLang.\n- The data-datepicker configuration must be a valid JSON string, which means, that you have to use \" instead of ' inside of your attribute.\n\nThis said your initial markup, should look something like this:\n\n```\n    <input type=\"date\" id=\"mbdrFrom\" value=\"2012-01-05\" min=\"2011-11-18\" max=\"2012-01-05\" />\n```\n\nPlease let me know, wether this helps.\n. ##Why label?\nWebshims trys to also implement the HTML5 accessibility/semantics. In case of a non labeled input with a placeholder, the placeholder should become the a11y-name of the input, which is achieved by setting a label element.\n\n##Why is implicit label not recognized\nIn time of writing, I left this out, because of performance reasons, but it's a bug and I will fix it.\n\n##Release/Roadmap\nActually, I wanted to wait until Modernizr is released, but I will make a new tested release on next sunday/monday.\n\nI will push a fix for this issue soon, could you test this? This version won't be fully cross-browser tested, but if later tests do not show any bugs, this version will be the final release.\n. Thanks for the detailed information. It turns out that issue #79 wasn't fully fixed. This is exactly the same problem.\n. Hi,\n\nfirst of all many thanks for reporting the issues. This makes webshims lib better :-).\n\ni have created a new changed test (https://gist.github.com/1636569). You are mixing two things in your test:\n1. the customValidity extension (has nothing todo with HTML5 constraint validation)\n2. the webshims lib HTML5 implementation\n\nAbout 1. customValidity:\n\nThis script does not try to make everything feel native and therefore it has some limitations. If a user changes the value or a developer trys to set the value using $.prop or a developer trys to get the validity using $.prop, the customValidity info is updated. This means, if you want to change the value using $.val or you have changed the constraints ( input.attr('data-minlength', '4') ), the customValidity info isn't updated. There is an undocumented feature, to solve this simply trigger the 'refreshCustomValidityRules' event and evrything works as expected. (sorry, for not documenting this)\n\nAbout 2. the webshims implementation of maxlenth:\n\nwebshims only trys to implement this in IE9 (and of course any older browser) and leaves the standard implementation to the browser vendor. In fact, this part of the spec changed last year. Safari, Opera's and webshims lib implementation do not match the current state of the spec. -> FF9 and Chrome are right. This part of the spec can be only tested manually. There is no way to write a unit test.\n\nSo issues:\n1. better documentation\n2. align maxlength to the spec and normalize Safari and Opera\n\ncheers\nalex\n. Thanks, for the bugreport. To be honest don't understand how this error, could be made. I'm sooo sorry.\n. Thanks, again for this bugreport\n. Hi,\n\nhtml5boilerplate uses all test and extension, but leaves the addTest and the prefix methods out. If you want to have all boilerplate tests + those needed by webshims you have to use the [hole modernizr build](http://www.modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-iepp-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load). I'm pretty sure, that you don't really need everything, but simply just more, what I need. If you want to create a good customized version, which has everything required by webshims, you can follow the [following build url](http://www.modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-iepp-addtest-prefixed-testprop-testallprops-domprefixes-load) and add those things you really need.\n. Yes, this wasn't a requirement and optional. Due to the fact, that I have introduced clientside combohandler, the combos which do include not required packges can be loaded and this creates the problem. \n\nTo workaround this, you can create a custom build of polyfiller.js, which does not include audio/video in this case the combos, which include mediaelement-core are marked.\n\nHere is the [webshims builder](http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs) (look for Customize Webshims lib's polyfiller.js)\n. Thanks for your bugreport. Can you try to load a full polyfiller.js version? There might be a problem with the builder.\n. And to remove the warining messages simply type:\n\n```\n$.webshims.debug = false;\n```\n\nbefore calling webshims.polyfill\n. Can you please try the last checkin. Please note, that I haven't done much cross-browser testing with this version and there is at least one bug regarding the datalist implementation. You can also try the following configuration:\n\n```\n$.webshims.setOptions({\n    waitReady: false,\n    basePath: \"/static/libs/webshims/1.8.7/shims/\",\n    forms: {\n        customMessages: true\n    }\n});\n```\n. @kdonald \n\nCan you please try the current version in trunk (1.8.8RC1). I want to make a release soon.\n. If you still experiencing this issue with 1.8.8final re-open this issue.\n. can you give me markup, browser polyfiller config?\n. Just looked into your jsbin. You forgot to include the dependencies: jquery, modernizr and polyfiller itself. Additionally there where some errors. tr/td without table and an attribute with opening \", but without closing \".\n\nAfter adding the js files and removing the errors, you get the following file:\n\nhttp://jsbin.com/arovaz/\n\nSeems to work in FF 3.6 for me.\n. No, problem, but I really need an example, simply because I can not reproduce your issue.\n. @ AMA3\n\nI have tried to reproduce this bug on your site, using IE9 in IE7/8 mode and in real IE7 and real IE8, but I can not reproduce this error.\n\nDid you use IE10 preview release in IE8/7 mode? Or can you help me with more information to reproduce this?\n. Actually, this should be done automatically. I will look into this. Are you using Ajax or a classic form submit?\n. I tryed to reproduce this issue as well, but couldn't. Can you make a small testcase for this. Note. There shouldn't really be a difference between post and get.\n. If you can reproduce this issue with 1.8.8final and can provide a testcase, please re-open this issue.\n. Thanks for this issue. As you might know, I have removed iOS4 and Safari 5.0.0-5.0.2 from my support table, simply because I don't want to fully support these extrem buggy versions. So I have removed a lot of support code for those browsers (code was a little bit unclean...). But this should not mean, that webshims will create major/critical/blocker issues in those browsers. Therefore, I have partially re-added some of the support code and this should now fix your issue.\n\nBut I couldn't test with iOS4 (My Mac is currently broken.). It would be nice, if you could confirm, that this fix works.\n. Hi,\n\nthis is by Design. Safari fully supports validationMessage, so that this part is not polyfilled. But it is true, that Safaris error messages are really bad, compared to Opera, Chrome and Firefox. If you want to use customized errormessages in Safari. There are multiple possibilities:\n\n## Markup\n\n```\n<input data-errormessage=\"Please fill out this form\" required />\n```\n\n## Config (enable custom messages and replace validation UI)\n\n```\n$.webshims.setOptions('forms', { \n    customMessages: true, \n    replaceValidationUI: true\n});\n```\n\n## Config (replace native validation message, but native validation bubble stays)\n\n```\n$.webshims.setOptions('forms', { \n    overrideMessages: true\n});\n```\n\nThere are a lot more ways to achieve this, but those are the simplest one.\n\nYou can find more informations about custom error messages [here](http://afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html). My english isn't that good, but I hope you understand the ways to change the messages.\n. Yeah, german are as bad as english. But I can't simply test the quality. Safari has full form API support, but no UI support. there is also an upcomming Modernizr test, which will test for the UI existence: https://github.com/Modernizr/Modernizr/issues/266\n. @amercier \n\nThanks for your bug report. This is not a bug, it is by design. Triggering submit by script does not  start the interactive constraint validation. This is specified by the HTML5 spec and webshims doesn't do anything here in case of Chrome/FF.\n\nFrom spec there is no direct way to bring up native validation bubble. The only workaround is to trigger a click event on the submit button. In case of custom messages (config: replaceValidationUI: true), you can trigger the validation constraint by using the checkValidity method, which fires invalid events on invlaid fields and invokes the customized bubbles:\n\n```\n    if($('#myform').checkValidity()){\n        $('#myform').trigger('submit');\n    }\n```\n\nThere are also other ways to do something like this. If you need another way just let me know.\n\n@thomasmaas \n\nThere is no need to fix this, to implement the form attribute. I'm currently working on this, but it's quite complicated to fully support the attribute (including dynamic changes to dom) without having a big performance penalty.\n. @amercier \n\nYeah, you are absolutley right here. Older Opera versions are showing the error UI, if you are using checkValidity (webshims fixes this). There was a discussion to give this method an additional parameter to achieve this. \n\nI think to make it better feature detectable, we need a new method -> elem.showError with an additional argument to decide, wether the field should be focused or not.\n\nIn case of the HTML5 froms chapter, there is a lot room for improvements. I hope some of those things will be addressed.\n. Creating the shadow dom is indeed a problem. Now you have two different fields for one. One field is used for API things and the other for UI. \n\nWhile there are other possibilities, each have thier pro and con. For the way webshims is doing it, there are some workarounds:\n1. Your id problem: Getting reference to the UI element from JS\n   \n   $('#date').getShadowElement();\n2. CSS input[type=\"date\"] won't work, use two selectors:\n   \n   input[type=\"date\"],\n   input.input-date { /\\* ... */ }\n3. calculated width won't work\n\nCan you provide a testcase? This seems to be a bug\n1. placeholder does not work\n\nplaceholder is not allowed for date, time, number etc.. It's not a bug. Webshims follows the spec.\n. 1. The shadow DOM is only for UI. If you want to use the API (i.e.: setCustomValidity), you don't have to touch the shadow element. The shadow element is only for CSS. About your general approach: If you want to set a value, again you don't need to touch the shadowElement. You still should access the element you have added to the DOM. To get this reflected to the shadow element, you have to use the general jQuery methods $.val or $.prop. The reason for this is, that it is technically nearly impossible to create getters and setters. The power of webshims is, that while it is not a real polyfill to the DOM, it is a real polyfill to jQuery. jQuery is always used for abstraction and browser normalization. Webshims only adds some small abstraction parts and uses the same jQuery API for normalization. If you want to use native DOM, you have to do the normalization your own.\n2. Like I said, browsers don't really support this. For example Safari has partial support for type=\"date\" and gives you a bad UI. The only way to remove bad UI x-browser is to either remove/change the type attribute or to create a new DOM element. So you need it. You are already using quite a lot classes (more than you need)\n3. Yes, I see a small bug, here. I will fix it. But your type=\"date\" has no border-box, so it's currently calculated right.\n4. http://dev.w3.org/html5/spec/Overview.html#input-type-attr-summary\n. 1. opt-out\n\nYou can now opt-out with:\n\n```\n$.webshims.setOptions('forms-ext', {\n    calculateWidth: false\n});\n```\n\nThis will also remove inline-styles for spinbuttons. So you can write your CSS. The CSS with important can be removed with:\n\n```\n$('html').removeClass('polyfill-important');\n```\n1. Refactoring of form widgets is very important, but it will take a long long time, until I work on this. The current way is good enough. If you have some specific bugs, let me know, I might work on those, before I can do this refactoring.\n. @gossi \n\nAbout the wrong calculation:\n\nThis is a jQuery UI bug. I'm using the outerWidth as a setter. This functionality is provided by jQuery UI core. I would appreciate, if you would fill a bug there, because this is the source of evil. I made a [simple testcase for you](http://jsfiddle.net/trixta/k728W/).\n\nIf your bug report is rejected, open a new bug in the webshims bug tracker.\n. @TiGR \n\nThx, for your bugreport. The paths in your fiddle do not point to a valid source of webshims, therefore your call to $.webshims.polyfill throws an error.\n\nI have reduced and changed your testcase and it seems to work for me (http://jsfiddle.net/trixta/ng9mg/9/).\n\nAlso the call to $.webshims.polyfill('form') doesn't do anything, because the feature is called 'forms'. Actually there is no webshims code loaded.\n. Closing this. If you got a testcase, please re-open.\n. Thanks for your bugreport, I will look into this this weekend.\n. Yeah, Safari 5.0-5.0.2 is really a pain in the ass. Currently, I don't have the time to do a new realease. I think it will take about two weeks. \n. @chrisveness\n\nI had no time to directly look into this. I will do this next 4-7 days. To be sure I have all informations. Has this iPad a Safari 5.0.2 mobile (same iPad as above)? I couldn't see an attachment, can you mail me to my email (info @ corrupt-system .de)? Is there anything special I have to do, to trigger the bug?.\n\nYour code looks indeed correct.\n. @chrisveness \n\nJust tryed your demo and while I can confirm, that the exact same bug happens, it seems, that there was a deployment issue. If I enter:\n\n```\n$.webshims.version\n```\n\ninto the console it gives me still the old webshims version 1.8.9.\n. This is indeed strange. Yes, I'm looking at the dev version. Can you confirm, that your client is getting the new version, if he is seeing the site with his ipad?\n\nI'm pretty sure the bug is fixed with 1.8.10RC2.\n\nBTW.: I have just pushed 1.8.10RC5 and I'm pretty sure, I won't do any changes for the final version comming in 4-7 days. \n. You need to add the [mousewheel plugin](https://github.com/brandonaaron/jquery-mousewheel/) for jQuery to use this. The mousewheel is only handled, if the field is focused. If you want to be also handled, if the field has no focus, you have to additionally add the [mwheelIntent plugin](http://archive.plugins.jquery.com/project/mwheelIntent)\n. @alonisser \n\nI don' t really see much value merging webshims and html5api into one API. Both scripts have different purposes and can be used  side by side.\n\nIf you want this feature. You can simply duck punch webshims polyfill method. I have created a [simple gist](https://gist.github.com/2549577), which merges both APIs without touching the core file. So you can simply add this feature yourself.\n. Simply add the [formnovalidate attribute](http://www.w3.org/TR/html5/attributes-common-to-form-controls.html#attr-fs-formnovalidate) to this button:\n\n```\n<input type=\"submit\" value=\"save\" formnovalidate /> <input type=\"submit\" value=\"send\" />\n```\n. I know, that jquery mobile can have some problems with jQuery UI and therefore jQuery mobile is not compatible with the webshims \"forms-ext\" feature (type=range, type=\"date\"...). But I can not reproduce your specific bug. Do you have any information. Here is a project which uses jqery mobile and webshims \"mediaelement\" feature: https://github.com/aFarkas/jMediaelement/blob/jme2/demo/jme-jqm.html\n. please re-open, if you have more information or a testcase\n. You can create a custom Modernizr build, but you need at least the following test, to work with webshims:\n\nhttp://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-addtest-prefixed-testprop-testallprops-domprefixes-load\n. Does this help?:\nhttp://jsfiddle.net/trixta/gNrgG/\n. Wow, you found a new webkit bug. I will try to detect this bug and fix this inside of webshims + fill an issue in the webkit bugtracker.\n\nHere is how you can workaround this issue:\n\nCurrently you are setting an input disabled and then reset the value. Simply change this order. First reset the value second disable the input.\n\nhere is your changed fiddle: http://jsfiddle.net/dj3vw/14/\n. https://bugs.webkit.org/show_bug.cgi?id=85704\n. @jhartikainen \n\nThx, for your bugreport. This is by design. Webshims trys to polyfill and normalize features through the jQuery API. While this isn't 100% native, it is a better solution, then most other scriptable shims provide, because we do not implement a new abstraction API, but use an already existing abstraction layer (jQuery). This is explained in the [docs](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions).\n\nThis means everything should work as expected, if you are using $.attr/$.prop or $.val.\n\n```\n//set empty string (shows placeholder)\n$('input').prop('value', '');\n\n//set value (hides plyaceholder)\n$('input').prop('value', 'some value');\n\n//get value (does not return placeholder text)\n$('input').prop('value');\n```\n\nSorry, that this answer might not satisfy you.\n. Yeah, this is exactly the way,I would use, if I would not support IE6, 7 and 8. (IE8 has partial support for this, but can crash if used in combination with htc behaviors).\n\nWebshims uses a very similiar API to extend jQuery properties. A pure idl attribute accessor implementation looks like this:\n\n```\n$.webshims.defineNodeNamesProperty('audio, video', 'currentTime', { \n    prop: { \n        get: function(){ \n            //your getter implementation (\"this\" refers to the element) \n        }, \n        set: function(value){\n             //your setter implementation (\"this\" refers to the element) \n        } \n    } \n});\n```\n\nA content attribute implementation, which is reflected by an idl attribute:\n\n```\n$.webshims.defineNodeNamesProperty('input, textarea', 'placeholder', { \n    attr: { \n        get: function(){ \n            //your getter implementation (\"this\" refers to the element) \n        }, \n        set: function(value){\n             //your setter implementation (\"this\" refers to the element) \n        } \n    },\n    reflect: true, //true = default but there are different type for number, references to other elements, urls etc.\n    initAttr: true // should the setter be invoked initially, if attribute is available\n});\n```\n. Yes, you can. The ratio of shim.css is to provide a general basic style for all polyfilled things. Therefore most styles have a low specifity and you can simply override it, inside of your own stylesheet. But you are also free to directly change the stylesheet. \n\nWhat rules are a little bit too much?\n. This is a known issue and has to do with the odd way of changing the errormessages in HTML5 in conjunction with a non-standard FF extension. (see: https://bugzilla.mozilla.org/show_bug.cgi?id=655677)\n\nThe best way to workaround this:\n\n```\n/* remove error box-shadow in FF */\ninput, textarea, select { box-shadow: none; }\n\n/* re-add error-box-shadow */\n.form-ui-invalid { box-shadow: 0 0 1.5px 1px red }\n```\n. @doits \n\nSorry for closing this bug to early. Did this answer your question?\n. Can you please try the following:\n\n```\n$(\"#select\").prop( \"disabled\", false).val(\"\");\n```\n\nIf this works this should be fixed with the next release. see also: https://github.com/aFarkas/webshim/issues/114 and https://bugs.webkit.org/show_bug.cgi?id=85704\n. many thanks for your tests!!!\n. @doits\n\nyes, this was fixed by [this line](https://github.com/aFarkas/webshim/blob/master/src/shims/form-core.js#L360). But I'm not really happy with this.\n\nIf you write code like the following:\n\n```\n$('input').bind('input', function(){\n    //you should throttle this function for performance\n    if( $(this).is(':invalid') ){\n        //do something\n    }\n});\n```\n\nThe custom validation isn't taken into account. You have to write something like this:\n\n```\n$('input').bind('input', function(){\n    //you should throttle this function for performance\n    if( $(this).trigger('refreshCustomValidityRules').is(':invalid') ){\n        //do something\n    }\n});\n```\n\nI'm currently not sure, wether I want to only recalculate on change event and leave the rest to the developer. Or to do some extra magic.\n\nSome additional information about the current version (1.8.11beta3). There is a known issue in iOS5 for all forms-ext validity features. rangeOverlflow, rangeUnderflow and stepMismatch is always false. This version isn't also heavily cross-browser tested. I'm doing all my tests only right before releasing a new final.\n. Sorry, I can't take this one. The stopPropagation should be removed, because it stops the event to bubble to the window object. The useCapture argument before was important. So that the custom validation is run before other change event handlers run. The following commit destroyed the script in IE and older browsers: https://github.com/aFarkas/webshim/commit/8b8bd7b54878ab9703b2d0461c5385b5e879d7f0#diff-3\n\nI'm currently not sure how I want to fix this. It might be possible to re-add the old code.\n. I have re-thought this. I would take your PR, if you switch from .on to .bind (we have to be compatible with jQuery 1.6.x) and remove 'stopPropagation' call.\n. Do you mean the changedvalid/changedinvalid event? This is only an extension by webshims, which comes for free for implementing the .form-ui-valid/.form-ui-invalid classes. You can write your own custom event, if you want:\n\n```\n$(document).bind('change invalid', function(e){\n    if(!$.prop(e.target, 'willValidate')){return;}\n    var isValid = $(e.target).is(':valid');\n    if(isValid && !$(e.target).is('.valid')){\n        $(e.target).addClass('valid').removeClass('invalid').trigger('validchange');\n    } else if(!isValid && !$(e.target).is('.invalid')) {\n        $(e.target).addClass('invalid').removeClass('valid').trigger('invalidchange');\n    }\n});\n```\n. This is now possible:\n\n```\n$.webshims.setOptions('forms', {\n    validityUIEvents: 'change refreshvalidityui'\n });\n```\n. The easiest way to achieve this, would be the following code. Some other ways are explained [here](afarkas.github.com/webshim/demos/demos/webforms.html#custom-error) and [here](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html):\n\n```\n$.webshims.setOptions('forms', { \n    //Use customizeable validation messages \n    customMessages: true, \n    //replace validation UI in all browsers \n    replaceValidationUI: true \n});\n\n$.webshims.polyfill('forms');\n```\n. @doits\n\nIs there a PR comming here? Note you do not need to change the combos themself. If you want to test the \"uncompiled\" sources you can set $.webshims.debug = 'noCombo'; before calling polyfill.\n. I have changed those attributes, but I couldn't run the testsuite, because qunit is not XHTML compilant.\n. @doits \n\nIs your last comment related to issue #132? Can I close this now? \n\nPlease also note the following. If you are handling the validation UI your own. For example through the replaceValidationUI configuration or by (always) calling e.preventDefault inside of an invalid listener. You should set overrideMessages to false and use customMessages. overrideMessage should be really only used in the case, where you want custom messages inside of native error bubbles.\n. Thanks, I will have a look into this, next couple of days\n. @doit and @rahearn \n\nI couldn't reproduce the bug with the newst webshims version, anymore. One element is now tested by the following line https://github.com/aFarkas/webshim/blob/master/src/extras/custom-validity.js#L82 and the \"masterelement[s]\" by those lines: https://github.com/aFarkas/webshim/blob/master/src/extras/custom-validity.js#L231-240\n\nThe only thing I found, was that getting multiple radiogroups was busted [fixed here](https://github.com/aFarkas/webshim/commit/c6d40ec9b8ea9d6bc3a078e2ed8f7c58cdf29d09) and that the UI wasn't fully updated, which was [fixed here](https://github.com/aFarkas/webshim/commit/7c1c333f4a2b977d5e645c192d1744638a020993).\n\nCan you now confirm, that his bug is fixed?\n. I had no time, to look into this. But if you can identify the \"regression\" commit, I would be quite happy.\n. I haven't looked into this for month. As I understood, this problem is only there, if you are building a native app + using a complex form. Starting with webshims 1.8.11, iOS is handeld totally different then before. If you are still experiencing issues using jQuery 1.8.2 and webshims 1.9.1, please let me know. Is this problem only there if you are using the forms-ext feature or also only using the forms feature? Which iOS versions are affected? If you could provide me with a simplyfied testcase (including sourcefiles to build the app, it would really help me).\n. You can still bind to the slide event using bind/on/delegate:\n\n```\n$('.input-range').bind('slide', function(e){\n    if(window.console){\n        console.log(arguments);\n    }\n});\n```\n\nBut it would be a lot nicer, if you would use pure HTML, CSS and JavaScript to achieve this. I created a fiddle, which [might be a good starting point](http://jsfiddle.net/trixta/s9gW5/)\n. Thanks, I understood your problem. But I don't really saw this as a bug. Because 1. working with the full jQuery UI API is kind of deprecated and 2. you can still bind to the slide event.\n\nhttp://jsfiddle.net/TXU2v/3/ : slide bound inside create\nhttp://jsfiddle.net/TXU2v/4/ : slide bound global on document\n\nIs this issue still a big deal for you?\n. Thanks for your issue. I can't really reproduce this. Actually the hole webshims scripts are [tested inside an iframe](https://github.com/aFarkas/webshim/blob/master/tests/iframe.html) before I release a new version.\n\nI tried a simply iframe test, but couldn't get your error. Can you please try to give me a most simple testpage.\n\n(http://jsfiddle.net/trixta/uBMzU/1/)\n. @agross \n\nSorry for the delay. I tryed to test this with an android simulator (2.2 and 4.0.3), but couldn't repdroduce the problem. Both do not fully support input[type=\"date\"], therefore webshims will implement the jQuery UI datepicker, including some localizations. (What browser-based date selector is used there???)\n\n If you are using a german browser and do not override the locale using $.webshims.activeLang, you have to enter dd.mm.yyyy (or d.m.yy), for example.\n\nIf I set the locale to 'en', the default date format is yyyy-mm-dd. But you can still enter yyyy-m-d. You find here a simple gist to try it yourself: http://jsfiddle.net/trixta/vZuLv/\n\nIf you enter 2012-1-1 and wait for the change event, you will get the normalized value '2012-01-01' for the input. Can you help me to reproduce the bug?\n. Just tryed the official samsung emulator (http://innovator.samsungmobile.com/cms/cnts/knowledge.detail.view.do?platformId=1&cntsId=9500). But can not reproduce. I will try to get a real device tommorow\n. I have added some logs for the fiddle (http://jsfiddle.net/trixta/vZuLv/17/). It would really help me, if you could copy those here.\n. Just forgot somthing can you please give info on this http://jsfiddle.net/trixta/Htfxh/2/ and this one http://jsfiddle.net/trixta/Htfxh/5/\n\nLater should load at least form-core. Many thanks\n. ok, thanks. This helps a lot, found a way to detect this bug.\n. @agross \n\nI couldn't get a samsung android, today. The hole code is only tested with different other browsers. I hope the hole code fixes your issue. Can you give me some feedback?\n. I looked over the code and found out, that the fix is never run, because of a busted version of the bug detection code. (Some copy error and looks really stupid :-) ).\n. @agross \nyou can now.\n. No, you should still expect the normal datepicker, but in case of a validity check, getting the value or on submit the value format is corrected. I could test this bug now with different andorid's. All andorids with this bug haven't loaded the form-native-fix, but have loaded the form-shim-extend. I have fixed this bug for those samsung androids (but haven't yet compiled the source.)\n\nI hope this will also fix your bug.\n. @agross \n\nReady for testing the new fix. I'm pretty sure your bug should be fixed with this.\n. From my testing, this seems to be a bug in excanvas itself and does only appear in IE7 not IE8. I do not maintain excanvas, so I can't really fix this bug. I would suggest to change the rendering engine from excanvas to flashcanvas. flashcanvas has much better canvas support. Simply set this before you call the polyfill method.\n\n```\n$.webshims.setOptions('canvas', { type: 'flash' });\n```\n. @McWatt\n\nYou can use the [] notation in this case:\n\n```\n$.webshims.customErrorMessages['group-required'][''] = \"One option from this group is required.\";\n```\n. @McWatt \n\nJust tried and it works. It seems, that you have put this line of code, before including the custom validity script. The best way to use this, is to configure the errormessage before dom ready, but after including the custom-validity script.\n. This is currently not possible. You can only use a simple string. But I just have added this as a [new feature](https://github.com/aFarkas/webshim/commit/8e036cbddc3b812013dd0e60d36ebdd4bee6a1cc)\n. I have difficulties to replicate this issue. It might be, that FF is caching some data. Does this also happen, if you do a \"hard refresh\" (ctrl + f5/shift + reload button)?\n\nDo you have a simplified testcase, which you can mail to my address?\n. @rfarris2000 \n\nThis feature was implemented in version 1.8.11. Please try 1.8.12. If it doesn't work. Reopen this issue.\n. I have tried to install Windows 8 Release Preview as a virtual machine using virtual pc by microsoft. As it turns out, this is not possible. From what is happening, I know that this is a stupid bug in IE10 (in IE7 mode) and might also affect jQuery/sizzle. Therefore if Microsoft is not able to fix this issue, this bug has to fixed in jQuery/Sizzle.\n\nI will look into this issue again, as soon as a IE10beta is released.\n. @AMA3\nI don't really want to do anything about this now. The best thing is to fill an issue in MS bugtracker. I will re-open this issue, if it still exists in IE10beta.\n. wow, thanks\n. @AMA3 \n\nJust tested IE10 in IE7 mode and there are some other issues in jQuery/Sizzle which do not appear in real IE7 or in IE9 in IE7mode...\n\nBut I have fixed this issue, because this can be fixed by webshims + it's the most obvious one. All other things have to be changed in jQuery/Sizzle.\n. @AMA3\n\nI can't really take this patch nor the script in #142, because they are not generic enough and those patches can break other things. Hope you understand :-). \n. Yes this is possible and explained [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html). \n\nSimply use jQuery.fn.htmlPolyfill instead of jQuery.fn.html. You can also use jQuery.fn.updatePolyfill on the element, which is dynamically added.\n. Just wanted to let you know, that I'm working on month/week integration\n. I have just uploaded the new widgets to gh-pages. I will release the next version soon. Feedback is welcome :-D\n\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#month-cfg\n. @AMA3 \n\nThanks, yes I would like to know all issues/problems. \n1. IE7 mode: While the css on the demo page is busted for IE7. The calendar widget works just fine for me in real IE7. Are you testing with IE10 in his browser modes? If yes: I can't support IE10' browser modes with webshims, because those are totally busted and different from the original IE7/IE8/IE9. You can use IETester or a real IE7/8/9 instead\n2. This was never supported. Webshims hides the original element and shows a custom UI. I can add a configuration option, that adds support for this, but this also means, that the number of invalid elements will be higher if you polyfill (original + the UI inputs). Additionally, this will never work in IE9/8. \n\nWebshims instead implements/shims the much better CSS4 selector :user-error (shim is .user-error). An easy workaround for you would be the following selector:\n\n```\n:invalid + .ws-month,\n:invalid + .ws-date {\n\n}\n```\n. @mathieul \n\nI just have [landed support for this](https://github.com/aFarkas/webshim/commit/bf389cde789b359913569040ca21b15ff413f8b0). Although it is a spec violation. The reason for this spec violation is... \n1. input[type=\"date\"] should behave more like a select element, but jQuery UI is more an free input element and a dateformat hint is very important\n2. placeholder has better support and it is a good fallback for JS off sites, to let the user know the dateformat.\n\nUsage:\n\n```\n<input type=\"date\" placeholder=\"year-month-day\" />\n```\n\nIf the placeholder can split into 3 parts using \"-\", this is transfered to the localized format i.e. day.month.year\n. This feature is already included, it is part of the 'dom-support' extension (not a polyfill, but the base of all polyfills). Here is a [simple shadowDom demo](http://jsfiddle.net/trixta/Artst/) and here is a [shadowDom demo with extra options](http://jsfiddle.net/trixta/KJymQ/).\n. @tomascassidy \n\nI just released a new cross-browser tested version, which fixes the issue. Please note, that the dateformat you see is still different from 1.8.10 and is dependent from the locale of your browser. (It's a feature not a bug). The default for 'en' is mm/dd/yy (https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js#L56). If you want to change this, you have two possibilities.\n\nSimply change the locale manually. It'is recommended to do this before calling the polyfill method:\n\n```\n$.webshims.activeLang('ja'); //change to japanese\n```\n\nOr by using the datepicker option:\n\n```\n$.webshims.setOptions('forms-ext', {\n    datepicker: { \n        dateFormat: 'yy-mm-dd'\n    } \n});\n```\n\nYou can find more informations here:\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html\n. I don't think, that this is a webshims issue. Webshims already calls handlers immediately, if a feature was already loaded and implemented. The hole dependency system is built on top of this behavior. \n\nI see two callbacks (1 webshims and 1 yepnope/Modernizr). Are you sure, that the complete callback is called by yepnope/Modernizr? So that the webshims events can even register?\n\nYou can also test readyness by writing the following in to your console:\n\n```\nconsole.log(jQuery.webshims.isReady('json-storage') && jQuery.webshims.isReady('forms'));\n```\n\nor:\n\n```\njQuery.webshims.ready(\"forms json-storage\", function($) {\n    console.log('ready callback called');\n});\n```\n\nCan you run both snippets in your console, if this bug occurs, to check wether webshims has detected the readyness right?\n\nIs this behavior browser specific? Do you have a public testcase? (You can mail me too)\n. @thirdender \n\nDo you have any information or a testcase for this issue?\n. thanks, i will look into this.\n. Yeah, I know and it is really annoying. I already [filled a bug](http://code.google.com/p/chromium/issues/detail?id=126386) and it was confirmed, but nothing happened since then. I can workaround this, but tkent from google is normally extremley fast in fixing form bugs. Don't know why this isn't currently worked on. \n\nYou could ask, whether this bug is fixed any time soon, if not, I will handle it.\n. Just in case you want to fix it, your own:\n\n```\n$.webshims.ready('form-core', function($, webshims){\n    if($.browser.webkit && Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity){\n        var elems = /^(?:textarea|input)$/i;\n        var form = false;\n        document.addEventListener('mouseup', function(e){\n            if(e.which == 3 && elems.test( e.target.nodeName || '') && (form = e.target.form)){\n                setTimeout(function(){\n                    form = false;\n                }, 1);\n            }\n        }, true);\n        $(document).bind('invalid', function(e){\n            if(form && form == e.target.form){\n                e.wrongWebkitInvalid = true;\n                e.stopImmediatePropagation();\n            }\n        });\n    }\n});\n```\n. @doits\n\nYou are loading webshims async or with waitReady false config, right? This fix has to be bound before replaceValidationUI handlers are bound, but after detecting Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity features/bugs. (Because of e.stopImmediatePropagation();). Both things are happening in the same file, so it's quite difficult to achieve.\n\nTry to change the following line:\n\nform:\n     $(document).bind('invalid', function(e){\n\nto:\n     $(window).bind('invalid', function(e){\n\nI haven't tested this, but hope this works for you. Due to the fact that replaceValidationUI binds to the document, but the false invalid should start to be propagated at the window object, you can stop it there a little bit earlier.\n. Ok, try the following code. Note you can also leave the webkit test, the code should not harm other browsers with document.addEventListener support.\n\n```\nif(document.addEventListener){\n    jQuery.webshims.ready('form-core', function($){\n        var elems = /^(?:textarea|input)$/i;\n        var form = false;\n        document.addEventListener('mouseup', function(e){\n            if(e.which == 3 && elems.test( e.target.nodeName || '') && (form = e.target.form)){\n                setTimeout(function(){\n                    form = false;\n                }, 1);\n            }\n        }, true);\n        $(window).bind('invalid', function(e){\n            if(e.originalEvent && form && form == e.target.form){\n                e.wrongWebkitInvalid = true;\n                e.stopImmediatePropagation();\n            }\n        });\n    });\n}\n```\n. Ok, I'm now a little bit concerned. There shouldn't be a chrome property on $.browser and there should be a $.browser.webkit property + mouseup should work. Are you using any browser sniffing plugins + can you give me your chrome version?\n. I don't think so. I'm using 21.0.1180.83 beta-m and Version 23.0.1241.0 canary on Win7.\n\nSomething, we have to get work is the mouseup event. I will check google chrome on Mac, now. Can you check my latest checkin, I tryed to setup my fix.\n. Thx, this helps much. Do you have a non-ssl site, because your ssl-settings make it very heavy to fiddle this site.\n. yeah this will help. thanks.\n. Many thanks, the problem was, that chrome is behaving differently on mac vs pc. The cause for the invalid event is not a right single mouseup, it is opening the contextmenu.\n\nMy fix was partial also for PC. Openeing the contextmenu with keyboard still showed this bad behavior. It should be fine now.\n. The placeholder part of this fix can be a little bit errorprone, because I have removed the placeholder-box wrapper. The best thing todo is to try to set the parent or at least a near ancestor to position: relative/position: absolute.\n\nAdditionally you can trigger recalculation of \"shadowelements\" by script:\n\n```\n$.event.trigger('updateshadowdom');\n```\n\nwill recalculate the position/height/width of all shadowelements.\n. @doits\n\nMany thanks for testing the current dev version. I plan to release a cross browser tested release in about two weeks, until then the dev version can be a little bit rough, so don't use in production. But developing/testing with this version really helps me to find bugs :-) so thanks\n. I told you :-). Until then everything can be a little bit rough.\n. This would be easy, please read how to [implement a new feature](http://afarkas.github.com/webshim/demos/index.html#implement-polyfill). But I won't do this my own.\n\nmediaelementjs doesn't really follow the principles of a polyfill, because it mixes polyfilling with extending, without providing some of the base features.\n\nWhat do you think are the problems with webshims medialement implementation? My opinion is that webshims mediaelement implementation is the most accurate implementation, you can currently get.\n\n### accurate DOM API\n\nIf you are testing [following fiddle](http://jsfiddle.net/trixta/VvmmC/), you can see that a mediaelement is connected to some form elements including input[type=\"range\"] and vice versa. If you are using a HTML5 capable browser, which supports both [type=\"range\"] and mediaelements (for example chrome/safari/opera), you can simply remove modernizr and polyfiller from the resource panel and the hole code still works as expected. Currently webshims lib is the only \"shim/polyfill\", which gives you this experience. All other polyfills are using an abstraction layer, so you can't use the HTML5 DOM API. (Wesbhims is also using an abstraction, but we do not introduce a new abstraction layer, we are simply using an existing one -> jQuery and this makes webshims so powerfull). I'm really proud about this.\n\n### still simply styleable\n\nWhile webshims doesn't extend the mediaelement feature with styling features, it's quite easy, to build some. And if you don't want to build stylable controls for mediaelement yourself, you can simply use [JME2](https://github.com/aFarkas/jMediaelement). The intersting part here is also, in HTML5 capable browsers JME2 works without webshims. This is just so impressive.\n\n### the only problem: no free and open source flash player\n\nThe only problem I have with my implementation is, that I don't use a free and open source flash player. But I don't know any good one. But JW player is a really good tradeoff between price and stability and features.\n. Could you give me some feedback? What things need to be done to improve webshims mediaelement implementation.\n. There is an option, which you can use to disable the spinbuttons for type=\"number\".\n\n```\n$.webshims.setOptions('forms-ext', { \n    stepArrows: {number: false} \n});\n```\n\nIn webkit you can also hide spinbuttons with the following CSS:\n\n```\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\ninput::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n```\n\nBut there is no help for Opera and in case FF/IE implement type=\"number\" (IE10 has partial not full implementation). You still will see spinbuttons in those browsers. I'm not sure, wether you really want this. The input[type=\"number\"] is really just for numbers. If you are setting up a field for digits (i.e. bank account, zip codes and so), input[type=\"number\"] is not right and you should use type=\"text\" with an additional pattern.\n\nSee also [inputmode](http://www.brucelawson.co.uk/2012/credit-card-bank-account-numbers-in-html5-forms/)\n. Yeah, I know. I have changed this to data-placeholder, simply because it's invalid HTML to use placeholder on type=\"date\", although, I thought, it would be a good fallback for JS-off. Also note, that you should always use YYYY-MM-DD to inform abouth dateformat. This is localized automatically.\n\nhttp://jsfiddle.net/w7WeS/2/\nand\nhttp://jsfiddle.net/w7WeS/3/\n. changing Options path to shims folder\n\nShims folder is computed automatically. If the name of polyfiller.js is changed and the polyfill-script is loaded async, this computation can be wrong and you have to set the folder manually. \n\nThis generated path can be changed by changing the basePath configuration with the setOptions method.\n\n```\n$.webshims.setOptions(\"basePath\", \"/yourFolderTo/shims/\"); \n//or: \n$.webshims.setOptions({ basePath: \"/yourFolderTo/shims/\" });\n```\n\nIf you do not load it async and/or didn't re-name polyfiller.js, it's a bug and I need a test case. Is this happening in all browsers?\n. wait\n. This should be fixed with next version (1.10.4)\n. I couldn't reproduce this. Can you give a testcase? You can also mail me.\n. Yes, there might be some issues with other scripts, but I need to see it, to know, wether it is a bug in webshims or not. It would really help me to get this testcase, even if it is a little bit more code.\n. Ok, thanks, could you still give me a testcase. It doesn't need to be simplified and if you mail me it stays private :-).\n. Thanks for adding a new locale.\n\nThe steps are:\n1. fork the project \n2. add a new file called errormessages-sv.js in src/shims/i18n\n3. add the following code into the head before calling polyfill:\n   \n   $.webshims.cfg.forms.availabeLangs.push('se');\n   $.webshims.activeLang('se');\n\nInstead of doing 3. you can also directly modify the polyfiller.js in src.\n\nNote, that I'm building the code from the src path, but the demos normally point to js-webshim/minified. To test you can also simply add this file into the minified/shims/i18n folder. In case you have ant you can build webshims yourself. But as soon as your pr is here, I will pull and build myself.\n. Thanks\n. Acutally, I don't have any knowledge about .Net and Nuget. So I'm not really able to do this right :-).\n. Yeah, I'm interested in this. I will mail you in a few days.\n. Yes, please use the input event, instead:\n\n```\n$('input[type=\"number\"]').bind('input', function(e){\n    console.log($.prop(this, 'value'));\n});\n```\n. Change event is not triggered if keypress/keydown/mousewheel is used. Need to implement ui with commit action.\n. This is by design. The problem is that we don't have real shadow dom. Your fix generates a few little problems and is only partial. For example: Now you have two different invalid fields instead of one. Additionally the visible date field is only red in case of valueMissing not in case of a typeMismatch or rangeOverflow/rangeUnderflow. \n\nWebshims provides you some additional helper classes to solve your problem (.form-ui-invalid/.form-ui-valid):\n\n```\n.form-ui-invalid {\n    box-shadow: 0 0 1.5px 1px red;\n}\n```\n\nPlease close this issue if it helps, if not provide more information about your problem.\n. @rocktrond \n\nI would like to close this issue. Could you please give me feedback to my answer above?\n. I tried to reproduce this issue, using the files provided by rails-webshims (simply added statically without rails/ruby) and adding your html/js code, but couldn't reproduce.\n\nCan you look, which shims files are loaded? If you have a testcase online it would help me. I will try to further reproduce it, but could be difficult. You can als mail me.\n. Could you please re-send your information. I can not find your mail :-)\n. Thanks for the testcase. Somehow my normal account eats your mails as spam. the other address (@aperto) worked.\n\nI could track down the bug. You are adding the form dynamically and webshims doesn't track dynamic changes to the DOM automatically. To inform webshims about changes to the DOM, you should use special methods instead of the normal jQuery manipulation methods.:\n\n```\n//append -> appendPolyfill; html -> htmlPolyfill; appendTo -> appendPolyfillTo;\n$('div.main').htmlPolyfill('<div>my new content</div>');\n```\n\nIf the code of your manipulation script can't or shouldn't be changed to one of those methods (for example it is a third party script), you can also hook into a callback/event of this script and call updatePolyfill on the ancestor of the new content.\n\n```\n$('#my-dynamic-container').load('ajax/test.html', function(){ \n    $(this).updatePolyfill(); \n});\n```\n\nYou can find more information about this [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic).\n\nalthough, I didn't find the code, where I should hook into, calling the following line from the script console in IE8/IE9, after loading the form into the dialog did the trick:\n\n```\n$('.wa-modal-body').updatePolyfill();\n```\n\nCould you please close the bug, if this answer resolves your problem?\n. @drewB \n1. While polyfilling elements can take some time (in case of video/input[type=\"date\"]), finding those elements is quite fast. So it wouldn't be bad for performance to call updatePolyfill multiple times. Unfortuantley webshims doesn't detect if an element was already polyfilled, which can create problems, so you can't call updatePolyfill multiple times, sorry (I try to work on this).\n2. It would only possible in modern browsers, so I haven't implemented it. I could think of a debug mode, which helps you to detect this in modern browsers. \n\nIn short nothing of this is currently possible. I'm closing this, please feel free, to open new issues for your new feature requests. I'm not fully sure, but implementing point 1 might take some time and can be buggy in early implementations. (I really need to go through all my code, to add polyfill flags + filter those elements out for the next polyfill round.)\n. @earvinbryanco \n\nI also can't reproduce this issue, can you give me a testcase or more feedback?\n. @earvinbryanco \n\nI can't see your image, it seems somehow broken, can you please re-add your picture?\n\nAbout adding elements dynamically:\nTo inform webshims about changes to the DOM, you should use special methods instead of the normal jQuery manipulation methods.:\n\n```\n//append -> appendPolyfill; html -> htmlPolyfill; appendTo -> appendPolyfillTo;\n$('div.main').htmlPolyfill('<div>my new content</div>');\n```\n\nIf the code of your manipulation script can't or shouldn't be changed to one of those methods (for example it is a third party script), you can also hook into a callback/event of this script and call updatePolyfill on the ancestor of the new content.\n\n```\n$('#my-dynamic-container').load('ajax/test.html', function(){ \n    $(this).updatePolyfill(); \n});\n```\n\nYou can find more information about this [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions) and [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic).\n. @earvinbryanco \n\nI can't really say for sure, what is happening with your spinbutton controls. However it is possible, that some styles of your site are applied to the step-control. There are some points about the step-controls, which make them a little bit errorprone, but also flexible to add custom styles. Therefore, there might be cases, where I wouldn't fix a misplacement and would suggest, that the developer is using CSS to correct the misplacement. Here is an [example](http://jsfiddle.net/trixta/WJxFe/).\n\nTherefore, I need a testcase to decide, wether this is a fixable bug.\n. Is the position corrected, if you resize the window? (slideDown -> mispositioned elements -> resize -> correct position)\n. I couldn't reproduce your issue. Can you please give me somehow access to your testside? (you can also mail me)\n. @MosheBP \n\nCan you please give me access to your testcase. I really need more to get this fixed.\n. Simply add modernizr/webshims using the \"Manage Resources\" panel. You can simply for the following fiddle:\nhttp://jsfiddle.net/trixta/SWQme/\n. I can reproduce your bug. I saw, that you are using jQuery 1.8.0 in conjunction with webshims 1.8.13. Webshims 1.8.13 is compatible with jQuery 1.6.1+ and 1.7.1+ and webshims 1.9.2 is compatible with 1.7.1+ and jQuery 1.8.1+. jQuery 1.8.0 was never fully supported. Could you please either update both jQuery to 1.8.2 and webshims 1.9.2. Or downgrade jQuery to version 1.7.2? If this bug still appears, I can have a deeper look.\n. I know this is odd, but I have multiple reasons for doing this. The problem is, that we would need shadow dom features to get this right. First webshims [type=\"date\"] polyfill is seperated into UI and API. \n- detection can go wrong (in case of a false negative,the user gets a busted input)\n- datepicker should always show localized formats (i.e. MM/DD/YYYY), while the value should be always in specified format (YYYY-MM-DD)\n- replace the UI even in good browsers, but still use the API of the native implementation \n\nYour example with required isn't right. Actually webshims leverages the native implementation of required in supporting browsers. The only thing, is that webshims detects the error on the native element and shows the polyfill UI on the replaced element. Something to know, while we have this separation on the UI-side. Scripting should be fine to use, means: To get/set properties like value/valueAsNumber/valueAsDate etc. always use $('#date-input').prop('valueAsnumber'/'value'). Even most events like change/input are transferred.\n. @stucox \n\nI hope, you can live with this. I know it is odd and creates some unwanted abstractions, but it's currently the only way - I know - to replace the UI in modern browsers, without destroying the native API.\n\nStill open for improvements\n. Just tested Chrome 22.0.1229.96 m on Win8 and it works for me. Please try to update and test again. If it's working on Win7 on Chrome and not on Win8, it should be a hard to fix bug.\n. thanks for the bugreport!\n. Yeah, you are right, will do a quickfix. Here is the table http://www.w3.org/TR/html5/the-input-element.html#input-type-attr-summary\n\nI think/hope that this was changed sometime, because I tryed to be very accurate.\n. thx, again\n. This depends  on the browser, if you are using the native widget. In the polyfilled/enhaced version, it should work cross-browser:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number\n. I can't reproduce this bug. See here: http://jsfiddle.net/trixta/7u4jf5wf/\n\nAbout the type switch. It is technically not possible to remove specific type UI and behavior in x-browser way. In case you want to have native type=number don't use `replaceUI: true` and only do the polyfill. \n. Yes this is possible. I have this simple [jsfiddle to demonstrate the API](http://jsfiddle.net/trixta/Artst/).\n. Yes, you can try the following build tool:\n\nOpen http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs and watch out for: Customize Webshims lib's polyfiller.js\n. @mreinstein \n\nThere is already a simple build tool:\n- open http://afarkas.github.com/webshim/demos/index.html#polyfill-foucs\n- and search for: Customize Webshims lib's polyfiller.js\n\nDoes this help?\n. Wow, this would be nice. \n\nI want to change my dev build tool from ant to gruntjs and to generate the grunt task combo automatically. (Currently, I have to maintain the combo list in polyfiller.js and in the build.xml).\n\nAdditionally @xiel wanted to create a new/better/nicer demo/documentation site. I let you know, if those things are started. If you still have time to help out then, I really would appreciate.\n. You can not detect the dependencies from the ant file. This file is just for making the combos. It's quite complicated. To get an idea:\n1. Go to the http://afarkas.github.com/webshim/demos/index.html\n2. enter $.webshims.modules into your console\n\nNow you see all modules. Normally each module is represented by one file. Now you can look into a module. There are 3 different interesting properties:\n1. c: represents the combos\n2. d: represensts the dependencies\n3. f: represents the feature (if there is no f. the file itself is the only needed feature file).\n\nBut I don't think, that the build script has to exclude unsued files/combos, because we only have to make sure, that this combo isn't loaded. This is where feature-dummy comes into play. This \"feature\" is a \"non-feature\", which is always supported and get's all combos, which shouldn't be loaded, if we remove a feature from the polyfiller.js\n\nI would try to write a simple version of a new webshims builder next week. Also look into the [builder](https://github.com/aFarkas/webshim/blob/master/demos/demo-js/demo.js#L66) + the polyfiller.js script\n. In my last commits, I made some bigger changes and I'm done with those. If you want to build something better on this, you can take this issue :-)\n\nAnd yes, grunt rocks.\n. @gionaf \nThe builder uses XHR in the background. which means you have to run it over the http/https protocol in Chrome. (file:// isn't supported by Chrome).\n. Indeed this is intersting for both things:\n- using it as a base for DOM polyfills\n- implementing a polyfill\n\nWebshims already has some very similiar helper methods, to implement elements and thier attributes/properties. You can find [some information here](http://afarkas.github.com/webshim/demos/index.html#implement-polyfill).\n\nThe problem with x-tag is, that it doesn't work in IE8- and you can't really polyfill this feature. (Just think of shadowdom and so on)\n\nBUT: I honestly think, webdevelopers should start to use such techniques to write re-usable HTML-components. You won't always need to use \"x-elements\". You can also use markup like this:\n\n```\n<div class=\"accordion\" data-config='{\"toggle\": true, \"multiple\": true}'>\n```\n\nWhich would create an accordion, where the elements can be opened and closed on click (normally only opened) and there are multiple open elements allowed.\n\nI'm trying to use this technique in a project called jme. In this project the following markup creates a time display associated to a audio/video element:\n\n```\n<div class=\"mediaplayer\">\n    <video src=\"...\"></video>\n    <span class=\"currenttime-display\"></span>\n</div>\n```\n\nIf you want to change the time format (default mm:ss), you can write something like this:\n\n```\n<div class=\"mediaplayer\">\n    <video src=\"...\"></video>\n    <span class=\"currenttime-display\"  data-jme='{\"format\": \"hh:mm:ss\"}'></span>\n</div>\n```\n\nAll data-jme attributes can be changed also by calling, jmeProp:\n\n```\n$('.currenttime-display').jmeProp({\n    format: \"hh:mm:ss\",\n    countdown: true\n});\n```\n. can you give me your config polyfill call?. Are you loading mediaelement feature?. Do you have Modernizr.texttrackapi installed?\n. Ok, that's the problem:\nHere is the right config link:\nhttp://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-touch-printshiv-cssclasses-addtest-teststyles-prefixes-elem_track-load\n\nThe feature itself is called elem-track. I try to improve those things. The reason for your issue. webshims isn't implementing mediaelement feature but trys to load a combo, which includes this feature. As soon as you are using the right Modernizr build webshims won't try to load the 17.js file.\n\nI will try to improve this somehow.\n. I don't think, that any of those behavior is wrong. 3em simply means the hole input including the arrow UI shoul be 3em long, it doesn't mean that you have room for exactly 3 charakters. (Try for example <input type=\"text\" style=\"width: 3em;\" />)\n. @doits\n\nSo 3em is always 3em. A browser will render an input with spinbuttons and 3em and an input without spinbuttons and 3em the same size. This can be between 2-4 characters depending on the size of spinbuttons and the specific width of a given character.\n\nWhat you indeed want is the attribute `size`. Here is the [spec for size](http://www.w3.org/html/wg/drafts/html/master/forms.html#attr-input-size). \n\nNote: \n- webshims doesn't take the size attribute into account (and it is impossible, because we can not detect the style \"width: auto\" with JavaScript).\n- browser vendors with spinbutton control, do not seem to make a difference between `<input type=\"number\" size=\"3\" />` and  `<input type=\"text\" size=\"3\" />`\n. The UI of the HTML5 constraint validation is pretty simple and should be customized in most cases. There are some examples demonstrating the API:\n- [example using only CSS](http://jsfiddle.net/trixta/NnNKv/)\n- [example using the JS-API](http://jsfiddle.net/trixta/tLXXN/)\n\nTo give you full control, you always need to use the JS-API to get the Job down. Here is a [good article explaining the API](http://www.html5rocks.com/en/tutorials/forms/constraintvalidation/). If you still have problems, let me know your full requirements, I can try to build a simple example on that.\n. Thanks, I have just changed the way, how I'm handling the child elements of the video and audio element. It now follows the normal principles of HTML. You can add your own fallback messages. Here is an example:\n\n```\n<video controls preload=\"none\" poster=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.png\" style=\"width: 630px; height: 356px;\">\n    <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\" type=\"video/mp4\" />\n    <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\" type=\"video/webm\" />\n    <track src=\"subtitle.vtt\" srclang=\"en\" label=\"some description\" kind=\"subtitles\" default />\n    <p>You need a modern Browser or install the Flash Plugin or simply download the video (<a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\">mp4</a>, <a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\">webm</a>)</p>\n</video>\n```\n. Really good catch, thanks a lot.\n. No not anymore. Many thanks again for this bug report. You really find the worst bugs.\n. Beside some security holes IE6 didn't support that. IE8 and IE9 had the xdomainrequest object. It will be tough, but it's a quite important feature. I will add this using xdomainrequest and flash.\n\nsee also: https://github.com/flensed/flXHR\n. @HenriPodolski \nThx, but this is not a clientside cors polyfill. It simply routes all external AJAX calls to a cors enabled server. With other words it depends on cors enabled browsers without polyfilling incapable ones.\n. Yes, I was actually thinking, that I will use this simple [script](https://github.com/jaubourg/ajaxHooks/blob/master/src/xdr.js), which already hooks into jQuery's ajax protocoll in conjunction with [flxhr](https://github.com/flensed/flXHR) to get the best results.\n\nHere is an article with some limitations of xdomainrequest:\nhttp://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n. Yeah, good point, I will do this. Here is the current list: \n\nAll non listed scripts/files are direct part of webshims and licensed under MIT\n- shims/flashcanvas             MIT                                         http://code.google.com/p/flashcanvas/\n- shims/FlashCanvasPro          FlashCanvas Pro License (closed)            http://flashcanvas.net/\n- shims/jwplayer                    Creative Commons                            http://www.longtailvideo.com/\n                              Attribution-NonCommercial-ShareAlike 3.0\n- shims/swf/JarisFLVPlayer.swf  GPL 3.0                                     http://jarisflvplayer.org\n- shims/excanvas.js             Apache License 2.0\n. great catch, thanks\n. I have fixed this issue (Commit messages are a little bit off). Please note: If you are using replcaeValidationUI and you checkValidity you do not need to call the validation bubble, because checkValidity will trigger an invalid event.\n. Oh man. This is a [chrome bug](http://code.google.com/p/chromium/issues/detail?id=113352). As soon as you replace the validation UI with those of webshims everything works. The reason for this is a overflow hidden on the parent div (should have used a different technique to create a block formatting content).\n\nWill fix this.\n. thanks for reporting\n. @benlancaster \n\nI couldn't reproduce your bug. My first guess was the stylesheet loading. Try to load webhshims without styles:\n\n```\n$.webshims.setOptions('loadStyles', false);\n$.webshims.polyfill('forms');\n```\n. @dohomi \n\nDoes this happen with the uncustomized polyfiller.js version? The form-extend module was split/renamed with 1.9.4 (into form-shim-extend and form-native-extend). Therefore there shouldn't be any calls to load form-extend. Is it possible, that you have some older files inside  of your shims directory.\n. You are describing two different problems:\n1. dynamic DOM creation:\n   In case you are creating HTML5 content dynamically after polyfill is called, you have to inform webshims about this. This is described [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic) and here(https://github.com/aFarkas/webshim/issues/166#issuecomment-9207336) you find a similiar issue with a short explanation\n2. In case you have included jQuery UI, webshims doesn't load the jQuery UI dependency. To implement datepicker, webshims needs jQuery UI widget, core and datepicker and for slider, webshims needs widget, core, mouse and slider.\n\nSo if you have for example included widget and core, but not datepicker, mouse and slider. Get those files, merge them into one file. And configure $.webshims.modules[\"input-widgets\"].src to point to this file (you have to use a relative path from the shims directory or an absolute path). You can find some information about this [here](afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#partial-ui-loading)\n\n```\n$.webshims.modules[\"input-widgets\"].src = \"../jquery-ui.slider-datepicker.min.js\";\n```\n. About the calls: They are not expensive, because webshims always uses simple selectors. Either just input or more specific input[type=\"date\"] and so on. So they are pretty fast even in IE7. However, webshims currently does not always properly detect, wether an element already was \"shim-med\". So if you  call updatePolyfill multiple times on an element, which hasn't changed, it might lead to some other problems (events are bound twice and so on). I will open a ticket for this.\n\nAbout the other problem, it might be possible, that partial jQuery UI is loaded after webshims and if you delay the polyfill call, it is there, if not, webshims will load the full jQuery UI. However for performance it is always best to configure the jQuery UI module and only include the files you need.\n. sorry, got really sick.\n\nsounds, could you look wether [this](https://github.com/aFarkas/webshim/issues/166#issuecomment-9207336) solves your issue?\n. @czachor\n\nDid the comment above help you? Do you need any further help? If not I will close this issue.\n. @czachor \n\nDo you have a testcase? Webshims should hide the original input using JS/inline style. Sorry, for taking so long to answer.\n. @czachor \n\nThanks for the testcase. This is a more complex problem (for me). But I need to improve this behavior in the future. Currently you can fix your issue by changing your div#add-sample-helper to a script element with a special type attribute:\n\n```\n<script type=\"template/html\" id=\"add-sample-helper\">\n    //your form html\n</script>\n```\n\nNote: You need to set the type attribute to something like \"template/...\"\n\nAnother thing about your placeholder. The normal format of date is yyyy-mm-dd and a placeholder is not allowed on type=\"date\". However webshims will read the data-placeholder attribute and sets it on the shimed element.\n\nTry the following:\n\n```\n<input type=\"date\" data-placeholder=\"RRRR-MM-DD\" />\n```\n\nNote that, I'm using the normal W3C format and webshims automatically converts it to your locale.\n. @xyu \n\nThanks for your PR. And sorry for the delay, I was very sick, jQuery UI is overloading outerWidth for a while and jQuery 1.8 has implemented the feature to use outerWidth also as a setter. \n\nNeither jQuery UI nor jQuery want to change the signature of outerWidth. I think you are either using an incompatible combination of jQuery and jQuery UI (You are using jQuery edge with jQuery UI 1.8.x in your fiddle. But you have to use jQuery UI 1.9.2+ inconjunction with jQuery 1.8.2+) or it is a bug in jQuery edge. But I'm pretty sure the code changes aren't needed.\n. @cori\n\nMany thanks for your contribution. The hideDelay is already exposed as global object. But it's not really documented.\n\nYou can set/change it with the following code:\n\n```\n$(function(){\n    //remove hide delay\n    //$.webshims.validityAlert.hideDelay = 0; //false\n\n    //set hideDelay \n    //$.webshims.validityAlert.hideDelay = 8000;\n});\n```\n\nI don't want to add to much config options to webshims. Also note, that next webshims version will be a simple compatibility update. The webshims version, which will include many new good features is developed in the [dev branch](https://github.com/aFarkas/webshim/tree/dev)\n. @rpk103\n\nThx for the bugreport. I can reproduce this bug and also found the cause. I will fix this weekend.\n. I can't really reproduce your bug. But webshims focuses on polyfilling DOM-APIs by extending jQuery. It does no implement CSS features like gradients.\n. @tomascassidy \n\noh, sorry. Yeah, github has removed this feature, so I couldn't update the download site. I have removed the download links and yeah later is almost better.\n. @tomascassidy \n\nthx, for the information.\n. sorry, that this is taking so long. will look into this soon.\n. thx.\n. Thx, for the bugreport. Bootstrap is using invalid/bad jQuery code here. Here is a simplified testcase:\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Test</title>\n    <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js\"></script>\n    <script>\n        $(document).on('.dropdown-menu', function (e) { e.stopPropagation() }); // $(document).on('', $.noop);\n        $(document).off('.bar'); //$(document).off('.dropdown-menu');\n        console.log($._data(document, 'events'))\n    </script>\n</head>\n<body>\n</body>\n</html>\n```\n\nThe following code: `$(document).on('.dropdown-menu', function (e) { e.stopPropagation() });` does not mean bind a handler and execute it, whenever an event with the namespace `'.dropdown-menu'` is triggered. It simply means bind to an event with name `\"\"` (empty string). Using an empty string as an event name is neither supported nor a good idea.\n\nSo bootstrap has to change thier code.\n. The bug seems to be already known, see twitter/bootstrap#6887 and twitter/bootstrap#6835\n. Hi,\n\nI think this is by Design. If a browser supports form validation. Webshims doesn't add any messages. They come from the browser.\n\nIf you want to control those messages, you can use either the following config:\n\n```\n$.webshims.setOptions({\n    forms: {\n        customMessages: true,\n        replaceValidationUI: true\n    }\n});\n```\n\nor the more obtrusive way (not recommended):\n\n```\n$.webshims.setOptions({\n    forms: {\n        overrideMessages: true\n    }\n});\n```\n\nDoes this help?\n. Works for me. Please see http://jsfiddle.net/PGZsm/2/\n\nCan you give me more information on this?\n. Both methods of defining options should be fine.\n. It seems, that you somehow have used an older version of webshims with jQuery 1.9.x. Either you can use jQuery 1.8.x or download [webshims 1.9.6](http://corrupt-system.de/webshims-1.9.6.zip). Did this help? I can only guess. Or you have updated and something went wrong and the files weren't overwritten.\n. Thx, for your bugreport. It seems, that this behavior is caused by two different (new) Chrome bugs, yeah.\n\nI'm trying to investigate this further and write a workaround for this. You can remove this strange behavior by changing the following option:\n\n```\n$.webshims.setOptions({\n    forms: {\n        validityUIEvents: 'focusout refreshvalidityui'\n    }\n});\n```\n. Here is a simplified testcase for those two bugs: http://jsfiddle.net/trixta/jXVvP/\n1. change bug\n   The time-control dispatches the change event to often\n2. Changing the className property influences the user input\n\nDo you want to [fill a chromium bug](http://code.google.com/p/chromium/issues/list)? \n. Bug is reported: http://code.google.com/p/chromium/issues/detail?id=179708\n. Yes, if you grab the new version you don't need that change.\n\nThe bug should be also fixed in a future Chrome version. Unfortunately, the chrome developer refused to accept, that the change event is triggered to early/often. Although the specification states that a \"text input might not have an explicit commit step\". This makes the difference between the input event and the change event totally useless. \n. thx for your report!\n. @maletor \n\nCan you give me some more informations? What have you done? What are you expecting? What happened? Are you using a real IE8 or just an IE8mode, in which IE version?\n\nWhich version are you using? The demo site is using jQuery 1.8.3 (not 1.9) and webshims 1.9.6.\n. If you are using IE8mode, which is the real IE version? I assume you have switched to IE10 recently. Actually the IE modes in IE10 are totally busted and it's not a webshims bug, it's a general MSIE/jQuery issue.\n\nThe following code returns an empty string (\"\") in IE10 in IE8mode\n\n```\n$('<form />').attr('novalidate'); //should return undefined, but returns \"\" in IE8mode of IE10, but not in real IE8 or IE8mode of IE9\n```\n\nThis is the reason, why the script fails. It might be possible, that I can fix this with webshims, but...\n- it's a jQuery bug and should be fixed there\n- it's a IE10 mode bug and you shouldn't test your app/site using IE10 browser modes, anymore. \n\nCould you fill a bug in jQuery's bugtracker for me? As said the code above should return undefined. There might be other busted attributes as well. In most cases jQuery has to use getAttributeNode or attributes[name].specified to fix this issue.\n\nAgain this isn't happening in real IE8 or IE8mode of IE9!\n. @DanielNill \n\nI'm pretty sure, that this is a different issue with a similiar behavior. But I can't reproduce it. I have special code to move the validation before any bound submit events. Do you have a testcase for me?\n. @maletor \n\nThanks, I can not reproduce this behavior on the demo site. Do you have another testcase for me? What is returned, if you get the noValidate on the form?\n\n```\n$('form').prop('noValidate');\n```\n. @maletor and @DanielNill \n\nI really want to fix this issue, but I can not reproduce it. Can you help me?\n. @maletor \n\nOk this is is really strange. I also tested native IE8 on XP. Have you tested IETester? Still hope I can get a simplified testcase.\n. Have you any new information on this? Can you test current gh-page version and look into your script console. Are there any console / error messages?\n. Please re-open, if this bug still exists in 1.11.2RC\n. In case you want to use DOM-APIs, it is always best to load webshims as fast as possible a delay the ready event, (webshims delays the ready event by default, if it is called before DOM-Ready) until everything is implemented. (DOM-APIs are all $.prop methods or special methods like play/checkValidity).\n\nIn case you only want to use Markup-API (i.e. simple HTML or $.attr), you won't need to delay the ready event.\n\nFrom your code I assume, you are only using Markup-APIs and your problem is, that the new dynamic content isn't \"polyfilled\". To get this done, simply call updatePolyfill on the container of the new content. A short description is documented [here](http://afarkas.github.com/webshim/demos/demos/shiv.html#dynamic) and [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-abstractions):\n\n```\n$.webshims.polyfill('forms forms-ext');\n$(function() {\n    $(\"#load-div\").load('myfile.html', function() { // callback for after load is done\n        $(this).updatePolyfill();\n    });\n});\n```\n\nIn case you don't want the ready event delayed, you can use the following options (This means, that DOM might be faster ready, but it's not safe to use HTML5 DOM-APIs), which is documented [here](http://afarkas.github.com/webshim/demos/index.html#polyfill-options):\n\n```\n$.webshims.setOptions({ \n    waitReady: false\n});\n$.webshims.polyfill('forms forms-ext');\n$(function() {\n    //load after DOM-READY but before new content is arrived (better against FOUC)\n    $(\"#load-div\").load('myfile.html', function() { // callback for after load is done\n        $(this).updatePolyfill();\n    });\n});\n```\n\nCould you please close this issue, if this answers your question(s).\n. Webshims is a collection of many scripts. You need to download the [full package ](http://corrupt-system.de/webshims-stable.zip), but only reference polyfiller and its dependencies (jQuery/Modernizr). \n\nHope this helps\n. In general I like those dependency/packaging tools. But I couldn't look deeper into this. Does it have an advantage over [bower](https://github.com/twitter/bower)? Can it handle Modernizr tests?\n. The reason for this, is that webshims uses some clientside combos to minimize http-requests. If a webshims test is not testable, you might get a wrong combo file. \n\nBut yeah, I can improve this. Should be a little bit tricky and if it doesn't result in a much bigger polyfiller.js, I will add this to next version.\n. Just improved. Thanks for your report.\n. Many thanks for your contributions. Please note, that the development for the next major release is done in the [dev-branch](https://github.com/aFarkas/webshim/tree/dev). I hope, I can merge those changes into the master branch soon.\n. Thanks this should be fixed in the dev branch. I'm using totally new input widgets there. Would be really great, if you could have a look and could be give some feedback abouth missing features. They are currently undocumented and unstyled, but you can get a good overview over the current feature-set on the '3-webforms-widgets.html' page.\n. do you have a testcase? or can I see the page somewhere???\n. many thanks. sorry for this bug.\n. Webshims range polyfill implements WAI-ARIA and is tested with screenreaders. Using WAI-ARIA [roles](https://github.com/aFarkas/webshim/blob/master/src/shims/range-ui.js#L19), [states](https://github.com/aFarkas/webshim/blob/master/src/shims/range-ui.js#L80-83) and [names](https://github.com/aFarkas/webshim/blob/master/src/shims/form-number-date-ui.js#L75) already provides the information that assistive technology requires. The range polyfill already gives the current value as feedback to a11y users, while he is changing the value. It already has a quite good UX for a11y users. And implementing this \"feedback\" feature would destroy the WAI-ARIA feature. \n\nI also haven't found further discussion about this feautre.\n. @brucelawson \n\nJust saw your comment. \n\nNo problem. It's quite hard to fool me with a11y issues. Webshims has quite good support a11y using WAI-ARIA. Webshims' datepicker for example is implemented according to the [WAI-ARIA 1.0 Authoring Practices](http://www.w3.org/WAI/PF/aria-practices/#datepicker). An [input[type=\"range\"] with labeled datalist options](http://jsfiddle.net/trixta/qxCcz/) does not only render range ticks, but also enhances the spoken value in screenreaders using aria-valuetext.\n. No webshims implements novalidate and does  not ignore novalidate. Can you give me more information?\n. works for me, see here:\nhttp://jsfiddle.net/DTqxA/98/\ndon't know what you mean. Can you give me an example?\n. Try the following code:\n\n```\n$('.chosen').each(function () {\n    var shadowElement = $(this).next().closest(\"chzn-container\");\n    if (shadowElement[0]) {\n        webshims.addShadowDom(this, shadowElement);\n    }\n});\n```\n\nYou don't need to bind to special events. And note, that I'm testing shadowElement[0] / shadowElement.length\n. The code for this is still working as expected. You can find an example here: http://jsfiddle.net/trixta/Artst/\n\nIf it still doessn't work. I would need a simple testcase with some code.\n. @dohomi \n\ndoes this work for you now?\n. Please re-open, if the example code above doesn't work for you.\n. Do you have a testcase/example for your issue?\n. I would think, this has something to do with dynamic creation of DOM elements. See [documentation](http://afarkas.github.io/webshim/demos/demos/shiv.html#dynamic). But in this case placeholder would work.\n. @hejjahejja \n\nIf you still have problems, please re-open this issue.\n. @hejjahejja \n\nI don't really see code here. And yes, IE10 modes are busted.\n. Ok, you are using extra features, which are not a direct part of a polyfill. If you want to get those features, you have to include the custom-validity.js file located in the extras folder.\n. Thx, fot the bugreport. Can you close this issue if this fixes your bug?\n. please re-open, if this doesn't fix your issue\n. I'm not sure, what you actually mean. The form behaves like it is specified. If a user invokes an invalid submit or you do a scripted click on a submit button of an invalid form, the submit is aborted and there is no submit event. Triggering a submit event by script will abort the submit and dispatches a submit event, but does not invoke the validation UI.\n\nBut I also found a bug in webshims in conjunction with jQuery 1.8.3. I just uploaded a fixed version. Please let me know wether this fixes your bug.\n. Many thanks. This (obvious) bug came from a big rewrite/refactoring in version 1.10.x. You can add the following code to fix this, until I release a stable version:\n\n```\nif(Modernizr.formvalidation && !webshims.bugs.bustedValidity){\n    $('input').each(function(){\n        $.prop(this, 'validity');\n    });\n}\n```\n. Can you close this issue, if this fixes your bug?\n. Are you using IE8mode of IE10? Are there any script errors console messages?\n. shouldn't be a problem. i will make this an option. but currently i need to stabilize the current version and i have a feature stop.\n. ok, i implement it. and you test :-D\n. Try the newest master-version.\n. Yes, but currently not a high priority.\n. Yes, this is possible and documented [here](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions) (see **no shadowdom**)\n\nI have updated your example:\nhttp://jsfiddle.net/trixta/aC5pk/3/\n. Many thanks for your contribution. I added some line notes.\n. thanks again\n. wow, thanks. This is a blocker. Can your try the [1.10.7RC1](https://github.com/aFarkas/webshim/tree/1.10.7RC1) version and confirm that all your problems are fixed?\n. Thx, will look into this. But implementation will take 1-2month\n. The truncation was fixed [here](https://github.com/aFarkas/webshim/commit/fe886105a7543f991f4f00f1eb0ba100e4e9209e). About the locale, I added the clear locale, but thier are still missing some french translations.\n\nIt would be very kind of you, if you could look trough and correct/enhance and translate those values. You find it here: https://github.com/aFarkas/webshim/blob/master/src/shims/i18n/formcfg-fr.js\n. Yeah seems fine. But you forgot two keys month.currentText/week.currentText :-). I will take another PR, if you want to change this.\n. thanks again\n. Just saw. There is still:\n\n```\nmonth: {\n    currentText: 'This month'\n},\nweek: {\n    currentText: 'This week'\n}\n```\n. thx!!!\n. I do not really understand, what you mean. From my testing. If a user types in an invalid dateformat. This value isn't transferred to the \"real\" input, therefore it's an empty string. The only thing I can should do is, to also clear the visual input, instead of leaving the invalid/partial date.\n\nMight it be possible, that you are adding a name attribute to the visual input and are using this one???\n. Please re-open, as soon as you can provide a testcase.\n. @joeybaker \n\nthanks, I'm currently not sure, wether I'm allowed to specifiy a hole directory (i.e.: 'demos/js-webshim/minified') for this. Additionally it's currently not possible to add all Modernizr dependencies via bower.\n. @joeybaker \n\nJust added bower.json. Please report any new bugs regarding bower support in a new issue.\n. This is fixed now.\n. Yes, this is possible, but you don't really need it (and it is not straight forward). Webshims is already checking it. the only thing is, that it looks like a bad usage and therefore this \"error/warning\" message. If you want to remove all warnings simply set in production:\n\n`webshims.debug = false;`\n. Yes, changing W3C standard attributes/properties (step/value/max/min/required) always works dynamically using $.prop/$.attr or with thier content attributes. \n\nThe configuration options for the widgets have to be configured differenty and they can't be configured dynamically. To get what you want, you have to use the following markup:\n\n`<input data-date='{\"startView\": 2}' type=\"date\" value=\"2009-06-12\" id=\"date\" />`\n\nHere you find some other examples for markup configurations: http://jsfiddle.net/trixta/VNuct/\n\nIf this doesn't help, please re-open this ticket\n. sorry, fixed it.\n. This seems to work for me. See http://jsfiddle.net/trixta/smqaL/\n. @AMA3 \n\nUnfortunatley the problem is quite more complex and it is impossible for me to do the right thing. You want to make it feel as native as possible, so do I. If you run the following code `alert($(':invalid').length)` inside the jsfiddle above you will see, that the length of invalid elements is higher than in the same jsfiddle with mirrorValidity turned off. The key problem is, we don't have shadow dom in all browsers yet and therefore webshims' UI components can be reached with JS/CSS. With other words `mirrorValidity = true` makes CSS feel more native and `mirrorValidity = false` makes JS feel more native.\n\nSo I have to decide, which is more important. And these are some of the points:\n- :invalid selector is considered bad for CSS usage (more important here: :user-error),  but quite good for JS, i.e.: QSA and matchesSelector\n- :invalid selector can never ever work in IE-7-9 or FF 3.6, which are also supported by webshims. Why should I make an option on by default, which can't work in 50% of supported browsers?\n- mirrorValidity is using setCustomValdity behind the scenes. setCustomValidity is a quite obtrusive method and can result in some unexpected problems/errors. For me I would appreciate it, if the WhatWG/W3C would add a addCustomValidationRule/RemoveCustomValidationRule API instead.\n. I have a very strong opinion on this and you couldn't convice me. \n\n### 1. CSS more important than JS\n\nMaybe, but not in case of :invalid. See here:\n\n> Tantek: More background here: one of the reasons for :-moz-ui-invalid was a short-term fix to be able to build UI because :invalid wasn't reasonable for UI.\n> http://logs.csswg.org/irc.w3.org/css/?date=2012-08-13\n\nor\n\n> UX concerns with the current approach...\n> http://alistapart.com/article/forward-thinking-form-validation#section5\n\nThere are more, believe me.\n\n### 2. :invalid has to be right in JS in the first place\n\na) It's important for JS\nHere is a small demo, which breaks with mirrorValidity: http://jsfiddle.net/trixta/B8pBA/\nAs you can see, the small script can really add much more meaning to the invalid form. And this is a key point about HTML5 form validation. The validation UI of HTML5 was designed to be compatible with all forms, which is good, but it wasn't designed with good UX. If you want to achieve this, you have to learn the DOM-API to improve it. Please teach this your students (see also http://www.html5rocks.com/en/tutorials/forms/constraintvalidation).\n\nI have added a simple but powerfull instant/real-time validation into webshims (see http://jsfiddle.net/trixta/XqPhQ/), but I think people should learn how to this themself.\n\nb) Webshims always behaved this way\nYou really need to have extrem strong arguments to change a behavior, which will break existing scripts\n\n### 3. setCustomValidity is in use\n\nsetCustomValidity is used, which means you have to keep track all kind of possible changes. This is quite unrealistic. Just think of a form autocomplete plugin (or next generation autocomplete attribute feature, soon in chrome).\n\nIn general: I'm always open to all kind of feature requests and options, but if I can't do it right, I simply can't do it right. You wanted this feature, here it is. But especially because of 2 and 3 I have decided to make it an opt-in. And myself will never ever opt-in.\n. You are doing everything right, you just have to put the formcfg-pl.js in to the shims/i18n/ directory.\n\nHere is a short explanation:\n1. Create a file formcfg-pl.js in schims/i18n/ take the [english version as a template](https://github.com/aFarkas/webshim/blob/master/src/shims/i18n/formcfg-en.txt) (don't forget to change `jQuery.webshims.formcfg.en` -> `jQuery.webshims.formcfg.pl` for example\n2. Register your locale\n   `webshims.cfg.forms.availabeLangs.push('pl');`\n3. Set activeLang to 'pl'\n\nDon't forget to make a PR with your polish cfg/locale :-D\n. Are you updating from a 1.9.x version? All input widgets are re-written with 1.10.x version and this module is gone. You can simply remove this line and everything should be fine.\n. @hejjahejja could you provide an online example or mail me one?\n. This actually is a jQuery mobile issue produced by the textinput widget. The best thing you can do: \"Disable it.\" The main feature of the textinput widget is to wrap all input elements in a container. To be honest, I don't understand, that a libary for mobile devices is heavily altering the DOM only for layout issues. \n\nHere is a quick workaround, which has to run before domready/pagecreate whatever:\n\n```\n$.mobile.textinput.prototype.options.initSelector = $.map($.mobile.textinput.prototype.options.initSelector.split(', '), function(sel){\n    return sel+':not(.ws-important-hide)';\n}).join(', ');\n\n$(document).on('textinputinit', function(e){\n    var parent = $(e.target).parent()\n    parent.next('.input-buttons').appendTo(parent);\n    parent.prev('.ws-important-hide').addClass('ui-input-text').prependTo(parent);\n});\n```\n\nOf course you need to attach right styles to the input button element itself.\n\nI couldn't reproduce the IE10 bug, so I really need a testcase for that.\n. @hejjahejja,\n\nyou might find this interesting: http://afarkas.github.io/webshim/demos/demos/webforms/jquery-mobile.html\n\nOnly works with webshims 1.11.4-RC1+\n. I'm not sure, what you want to achieve. I would need to see some code. If you change the value programmatically you can update the validation ui with the event refreshvalidityui on the form field. If you want to reset the ui, you can either trigger a reset event on the form or resetvalidityui on the form field\n\n```\n$('input').val('foo').trigger('refreshvalidityui');\n```\n\nor\n\n```\n$('input').val('foo').trigger('resetvalidityui');\n```\n\nIf this doesn't help, please provide a testcase.\n. If you want to change the format for en, you should do the following:\n\n```\n$.webshims.formcfg = {\n    en: {\n        dFormat: '-',\n        dateSigns: '-',\n        patterns: {\n                 d:\"yy-mm-dd\"\n             }\n        }\n  };\n\n  $.webshims.activeLang('en');\n```\n\nI don't really understand your second problem. I need more information about this. The dateformat, which can be entered, depends on the of your browser (you can get the current lang by calling webshims.activeLang() and set it with webshims.activeLang('en') .\n\nThe format for your Backend and your JS is always yyyy-mm-dd.\n. datetime is not supported. dateteime-local is. I don't want to add styling for type=tel or type=search. This is not part of the spec.\n. This depends on your browser and the locale of your browser. Usually you only see customized messages in polyfilled browsers. If you want to see custom messages in all browsers you have to do two things (see also: http://afarkas.github.io/webshim/demos/demos/webforms.html#custom-error):\n1. add customMessages to true:\n   $.webshims.setOptions('forms', { customMessages: true });\n\nor (better for performance but messages are not ready on DOM-ready):\n\n```\n$.webshims.setOptions('forms', { lazyCustomMessages: true });\n```\n1. replace native UI with custom UI\n\nThere are a lot of ways to do this. The most easiest way is by config:\n\n```\n$.webshims.setOptions('forms', { replaceValidationUI: true });\n```\n\nIf you want to see a specific language you should set activeLang:\n\n```\nwebshims.activeLang('ja');\n```\n\nAll config should be called before you invoke the webshims.polyfill method.\n\nHope this helps.\n. Here is another nice feature, you might want to use. http://jsfiddle.net/trixta/XqPhQ/\n. @prasanthkc \n\nIn case you want to use the DOM-API to modify the following properties disable, readonly, max, min, step, list and value, you should always use the polyfilled $.prop method.\n\n```\n$('input.rangeSlider').prop('disabled', true);\n```\n\nDoes this help? What do you want to achieve?\n. Seems to work for me. Here is a simple jsfiddle: http://jsfiddle.net/trixta/PxeSd/\n\nCan you give me a testcase?\n. Thx, should be fixed now.\n. @Ineluki \n\nIf you look into the validityState object, you will see, that Chrome also reports a valueMissing error and that the value is indeed an empty string.\n\nI can improve this, but this means, that you have to add validationsMessages for the badInput case and not for typeMismatch.\n. thx\n. @djesse \n\nI have changed my z-index, but normally this is something, you can and should correct yourself in your stylesheet. What should I do, if someone now opens a bug. Datalist is placed over jQuery UI dialog? If you don't use overflow: hidden in your page/webapp it might be a good thing to place all popovers relative to the opener-element and not to the body element:\n\nThis way you can use a very low z-index for your popover, but the popover is always inside of the z-index stacking:\n\n```\nwebshims.setOptions('wspopover', {\n    appendTo: 'element'\n});\n```\n. Yeah, I will implement datetime-local first. But this will take 1-2 month. Untill then you can combine date and time input elements.\n. @oddityoverseer13 \n\nI have implemented the datetime-local input type. Additionally, you can mix date and time. You find  [some input widget examples here](http://jsfiddle.net/trixta/VNuct/).\n\nDoes this fit your needs? Do you need a special feature on top of this?\n. @terinjokes \n\nThanks. Yes this should fix all meridian time locales\n. Thanks a lot!\n. Yes: If the readonly attribute is specified on an input element, the element is barred from constraint validation. (http://www.w3.org/TR/html5/forms.html#the-readonly-attribute)\n\nWhy don't you use the webshims date picker???  ( `webshims.polyfill('forms forms-ext');`/`<input type=\"date\" />`).\n\nThere are [many different config options for input type=\"date\"](http://jsfiddle.net/trixta/VNuct/). Do you need a special feature?\n. @JvilleDjango \n\nI really would like to know, why you don't use the build-in datepicker.\n. Yes this is possible: http://jsfiddle.net/wFUF9/38/\n\nSimply trigger an 'updateshadowdom' event.\n\n`$(document).trigger('updateshadowdom');`\n. Thx, it's fixed now. \n. The filereader-feature is ready to use. It's just a documentation problem :-D.\n\nThe code is based on the following plugin: https://github.com/Jahdrien/FileReader (need to add some legal notice?!?\n\nChanges to the plugin:\n- No need for jQuery UI\n- no need to include swfobject\n- fileList property can be accesed through the DOM-Element using $.prop `$('input[type=\"file\"]').prop('fileList')`\n- no need to execute the $.fn.fileReader plugin\n- Due to the obtrusiveness of the used method an author hast to add the class `ws-filereader` to all input elements, which should have the fileList feature.\n. Many thanks for your help. I made some small changes. Feel free to enahnce it further.\n. I think this bug/restriction in Magnolia was already fixed. Are you using an older version? I would suggest to patch this version instead of trying to change, how webshims works.\n\nHowever you can disable loading the stylesheet:\n\n`$.webshims.setOptions(\"loadStyles\", false);`\n\nAnd embed the a modified stylesheet your own.\n. What do you mean exactly here. Do you mean the follwoing:\n\nIf we have the follwoing HTML:\n\n```\n<input type=\"date\" data-foo=\"bar\" />\n```\n\nWebshims creates sometimes:\n\n```\n<input type=\"date\" data-foo=\"bar\" class=\"ws-important-hide\" /> <input type=\"text\" class=\"ws-date ...\" />\n```\n\nWithout copying the `data-foo=\"bar\"` to the generated element? Although this might be sometimes appreciated sometimes it is not. I would like to see, what you want to achieve here or what your problem is, to make a descision, how to handle this problem.\n. Please re-open, with a testcase explanation of what you want to achieve.\n. Hope this is ok for you. I see this as a won't fix\n. +1\n. thx.\n. I can not reproduce this. Do you have a simplified testcase or can you point me to a website. You can also mail me to keep it private.\n. @peterhartmann \n\nYes, please give me access to your site as soon as possible.\n. @peterhartmann \n\nI'm closing this. But if the issue remains and site is online, you can send me a message.\n. Seems to be the same Issue #163. Please comment in this [original issue](https://github.com/aFarkas/webshim/issues/163)\n\n@Dreamwalker666 or @devlife can you explain me, what I have to do, to create a nuget package?\n. Yes, this is a known issue. It simply means, that neither you nor I have configured a default text for the current button. In this case webshims falls back to the currentText for the type=\"date\" input. \n\nThis should be fixed now for the [en](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/i18n/formcfg-en.js#L61) and de locales. Feel free to fix this also for other locales.\n. I have just put bootstrap 3.0 and webshims together and it works for me (input type=\"date\", type=\"number\", input[type=\"range\"]). Can you give me an example/testcase to reproduce this issue?\n. Thx, didn't spot this issue. Will fix it soon.\n. Yes, you should bind to the original element. \n\nThe change event is triggered if a a) value was changed by the user and b) commit action (mouseup or keyup in case of a range input) or a activation/blur behavior happened. The behavior in FF is correct, while the behavior in Chrome is busted. Actually Chrome-Dev doesn't want to change this.\n- http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#event-input-input\n- http://code.google.com/p/chromium/issues/detail?id=155747\n\nIs this just a question or do you think there is something wrong with webshims implementation. Please re-open, if there is a bug.\n. The input event is already fixed by webshims in IE10/11. I have just added some code to fix the change event in IE10/11, chrome and Safari. The fix is currently turned off by default. You can turn it on by setting the fixRangeChange to true:\n\n```\nwebshims.setOptions('forms', {fixRangeChange: true});\n```\n. I'm not sure, what you mean here. Webshims is already reading the navigator's locale (`navigator.browserLanguage || navigator.language`) to render date inputs in the locale of the browser.\n\nIf you want to change the locale to the locale of the page, you can simply use:\n\n`webshims.activeLang( $('html').prop('lang') );`\n. Unfortunatley, I can't take this PR. All locale's should be added in a different JS-File (see: https://github.com/aFarkas/webshim/tree/gh-pages/src/shims/i18n). Called formcfg-[language-code].js. Take the [formcfg-en.js](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/i18n/formcfg-en.js) (includes all needed locales and the formcfg-pt-PT.js has a starting point.\n. This is a bigger issue. Will release a new version soon.\n. Thx, for testing\n. Made some improvements for Chrome/Safari (https://github.com/aFarkas/webshim/commit/184b47d3bdafaf1becfbf4194fe34b2d7e50a992)\n. @hparra \n\nNice work. Could you test the new webkit fixes for Webkit/Blink? I really would appreciate your work on this. It's really a pain in the ass, that Chrome/Safari have a wrong implementation for the change event. This is not only true for input[type=\"range\"]. The implementation is wrong in case of all new HTML5 input types (date, number, month etc.).\n. about range styling: http://afarkas.github.io/webshim/demos/demos/webforms/styler/index.html\n. I'm closing this, feel free to make some more tests with webshims 1.11.5\n. hey @mreinstein \n\nThis would be awsome. I'm sure I would use a refactored more usable documentation. If you want you can reuse this logo: http://dribbble.com/shots/925734-webshims-logo\n\nping @xiel \n. looks great!!!\n. @mreinstein \n\nSorry for taking so long to answer. Yeah you are right. The documentation should only have a shorter intro, a quick intall guide, explain the principles and then only short API linking to other examples. The last three Accordion items can be skipped entirely.\n. It's already part of [master](http://rawgithub.com/aFarkas/webshim/master/demos/index.html). But still needs some more work to really switch. There are some missing parts. Especially for webform widgets and mediaelement. \n\nBut of course you can use it now. Or help to improve it.\n. Just made some changes to the new docs. Please look here: http://rawgithub.com/aFarkas/webshim/master/demos/index.html\n\nWhile documentation isn't fully ready yet. I would like to switch in the next couple of days. Please look if you find something, that absolutley needs to be done before. \n. @HenriPodolski \n\nYou should be able to use both. Here is a common example:\n\n``` html\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-text\">\n            <label>Input</label>\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 1\" pattern=\"[0-9]*\" required=\"required\" />\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 2\" pattern=\"[0-9]*\" required=\"required\" />\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n```\n\nFrom this example, it's also obvious that data-errormessage is more specific and should be treated with higher priority.\n. @hannesjohansson \n\nCurrently no there is no configuration for this. But let's fix this bug first.\n\nI'm using jQuery's position method, which should position the placeholder right. I think it's either a small CSS problem or a jQuery position bug. Can you provide me with a testcase.\n\nCould you also run the following code:\n\n```\n$(function(){\n    $('input[type=\"password\"][placeholder]').offsetParent().css('zoom', '1');\n});\n```\n. Yes, this pretty normal. But from the inline-style I see that positioning isn't executed (we need a top/left value here, which means that there seems to a script error.\n\nDoes the follwoing code do something?\n\n```\n$(function(){\n    $(document).trigger('updateshadowdom');\n});\n```\n\nCan you look into the script console. I'm pretty sure\n. You can also mail me a (simplified) testcase.\n. Ok, thanks. This is not really a bug. Simply use `$(document).trigger('updateshadowdom');`:\n\n```\n$('#showform').click(function() {\n    $('.hiddenform-wrapper').toggleClass('active');\n    $(document).trigger('updateshadowdom');\n});\n```\n\nSee also [re-rendering shadowelements](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions)\n. I'm not totally sure what you mean here. To me a datepicker in a bootstrap modal looks like this:\n\n![modal-bootstrap](https://f.cloud.github.com/assets/188254/1482749/76b701f2-46e9-11e3-89ac-d5412e887e9e.jpg)\n\nFor me this is fine. I think you want to configure the placing of the datepicker dialog. This can be achieved with the popover configuration.\n\nHere is an example:\n\n```\n<input type=\"date\" data-wspopover='{\"appendTo\": \"body\"}' />\n```\n\nThis will place the modal to the body element. You can add any selector or the keywords 'auto' or 'element'. Can you give me an example. I would try to improve the 'auto' algorythm then.\n. @bertBruynooghe \n\nIf this is is still a bug with webshims 1.11.3. I really would like to investigate this issue.\n. This bug should still exist in 1.11.3, I fixed it with https://github.com/aFarkas/webshim/commit/a0c6358842d96977515ba1de20cf3e8c18841768\n. @mreinstein \n\nYeah, I know. There was no pubplic 1.11.4 and I have started to document the changes here: https://github.com/aFarkas/webshim/releases\n\nsee also: https://github.com/aFarkas/webshim/commit/bcf502b0487e38eb41235b2a62fe1626a240e9bb\n. @mreinstein \nWell, I thought the location @ https://github.com/aFarkas/webshim/releases would be the right place for this (in the future). But I'm not sure anymore. Currently changelog.md is removed from master, but might have a comeback. Some people might load webshims over bower or similiar.\n\nHave you seen some of the changes, I have done? (https://github.com/aFarkas/webshim/blob/master/demos/demos/forms.html and https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html)\n\nLast one will be removed, if it's documented. I have started to remove all JS config, which should be done with CSS (i. e. [showWeeks](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L159-162), [navSelect](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L152-156)) and added some default styling to some [hidden elements](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L81-83), which can simply turned [on/off](https://github.com/aFarkas/webshim/blob/master/demos/widget-configs.html#L138-140) to configure a widget without any JS.\n. Ok, those are lot of small issues.\n\nStart here. Your configuration is a little bit wrong:\n\nRemove all webshims config code and use the following.\n\n```\n$.webshims.setOptions('forms-ext', {\n    replaceUI: true,\n    types: 'time',\n    time: {\n        widgetPosition: {\n            my: 'left center',\n            at: \"right center\",\n            collision: \"fit\"\n        }\n    }\n});\n\n//load all defined\n//or load only a specific feature with $.webshims.polyfill('feature-name');\n$.webshims.polyfill('forms forms-ext');\n```\n\nNow include jQuery UI position:\nYou do not need to include the hole libary.\n\nConfigure input type=\"time\" popover (This will only work in conjunction with jQuery UI position):\n\n```\n<input type=\"time\" data-wspopover='{\"position\": {\"my\": \"center\", \"at\": \"center\", \"collision\": \"fit\"}}' />\n```\n\nImprove style for time-picker:\n\n```\n.input-picker.time-popover .ws-picker-body {\n    padding-top: 0;\n}\n```\n\nI can not reproduce your scroll issue. And can also not reproduce your Chrome/Mac issue. But I'm trying.\n. Yes this one is now included directly into the package (see [documentation](http://afarkas.github.io/webshim/demos/demos/webforms/4-webforms-custom-validity.html)):\n\n```\n$.webshims.setOptions('forms', { addValidators: true });\n```\n\nAlso check out the [instant validation feature](http://afarkas.github.io/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html#instant-validation). \n. Are you using webshims to polyfill the filereader API or to access input.files? If not, do not load the feature! The problem is, that jquery-fileupload trys to use the API, which is not fully polyfilled, but does not need it to work.\n. This should work with a real IE9 or a real IE10. IE10/11 browser modes are busted. If you open your console you should see a warning. Please use a real IE9 to test IE9 (With IE9 you can still test IE8) or at least [IETester](http://my-debugbar.com/wiki/IETester/HomePage).\n. Yes this right. As soon as you fix this the basic check can be removed:\n\nFrom\n\n```\nif(webCFG.loadStyles){\n    loader.loadCSS('styles/shim.css');\n}\n```\n\nTo:\n\n```\nloader.loadCSS('styles/shim.css');\n```\n\nHappy to see a PR. Please to all changes in master not gh-pages, Thanks!!!\n. The problem you have is already printed into your console:\n\n`extendNative configuration was set to false by default with this release. In case you rely on it set it to 'true' otherwise to 'false'. See http://bit.ly/16OOTQO`\n\nThis means you have to options:\n\nI. Either set extendNative to true:\n\n```\n//  Polyfill everything we need for legacy browsers\nwebshims.setOptions('extendNative', true);\n$.webshims.polyfill('forms forms-ext json-storage');\n```\n\nII. Or you use one of the 3 different jQuery wrappers to call setCustomValidity:\n\noption A:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n    var setCustomValidity = $.prop(confirm, 'setCustomValidity');\n    if (confirm.value!=document.getElementById('pass').value)\n      setCustomValidity.call(confirm, 'passwords do not match');\n    else\n      setCustomValidity.call(confirm, '');\n}\n```\n\noption B:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n\n    if (confirm.value!=document.getElementById('pass').value)\n      $(confirm).callProp('setCustomValidity', ['passwords do not match']);\n    else\n      $(confirm).callProp('setCustomValidity', ['']);\n}\n```\n\nOption C:\n\n```\nfunction passwordMatchCheck()\n{\n    var confirm = document.getElementById('confirm');\n\n    if (confirm.value!=document.getElementById('pass').value)\n      $(confirm).setCustomValidity('passwords do not match');\n    else\n      $(confirm).setCustomValidity('');\n}\n```\n\nHope this helps.\n. @AMA3 \n\nAbout your code in this example. Do not use keyup event. The user can change the value by using cut or paste for example. Best would be to use input event.  And do not use inline event handler use $.on. \n\nAlso note, that webshims ha some nice extensions to make this easy: http://jsfiddle.net/trixta/YL5RY/\n. @hejjahejja \n\nI had a bug in the auto appending detection code. If you don't want to update. You can simply try the follwoing configuration: `webshims.setOptions('wspopover', {appendTo: 'body'});`\n. Here is a working fiddle: http://jsfiddle.net/8qgK9/3/\n. I'm not sure about this. Because, I'm not sure about the name. What's better webshims vs. webshim? Something I want to do is to use only `webshims.polyfill`or `webshim.polyfill` (without $.) in future docs and all examples. (See the doc refactor).\n\nI want to make webhim's polyfiller.js independent from jQuery. So that people can start downloading polyfills from the document's head and embed jQuery at the end of the body, which is not the best option for perfomance, but better than the default setup of most developers. \n\nI think this will add about 3-4kb compressed and will remove support of IE7. I'm not sure wether I should have 2 different polyfiller.js files for this or the filesize/no IE7 support is negligible. Actually it is, but some people might see it different.\n. Here I made those changes: https://github.com/aFarkas/webshim/commit/979a6ec2040557d8f067f6ab267dde138962708f.\n\nBtw. I want to move the new doc as soon as possible into the master-branch. I really like it. I would generate some files in subcategories with examples and more documentation.\n. `webshim` is already there for a long time. I just have additionally added `$.webshim` to the List. I'm indeed open to only use `webshim` in future and will change docs and examples.\n. Try to use: `webshim.polyfill()`with one \"l\". Here is the code: https://github.com/aFarkas/webshim/blob/gh-pages/src/polyfiller.js#L80\n\nBut your are right about `$.webshim` I forgot this one.\n. The current official way is `webshims.polyfill` but I will change this in the future to `webshim.polyfill`. So if you prefer `webshim.polyfill` you can start using it. I will keep all aliases alive for a long time.\n. soon ;-)\n. First of all your code looks good.\n\nFor the demo page please clear your browser cache. For me it works on the demo site. Which browser are you trying? Can you please try `webshims.activeLang('de');`. And wich version of webshims are you using (see with `webshims.version`).\n. Could you also try to directly link to the french locale:\n\n```\n<script src=\"/assets/js-webshim/minified/polyfiller.js\"></script>\n<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js.js\"></script>\n<script>\n  $.webshims.activeLang('fr');\n  $.webshims.polyfill('forms forms-ext');\n</script>\n```\n\nNote also, that I recently made some changes to locale loading. (Just in case you made an update (make sure every file is new) or you haven't loaded a stable release).\n. @DanielJomphe \n\nI'm not sure, wether I understand everything correctly. Unfortunatley, you can't switch the locale of native datepickers. So if you want to change the locale you have to use `replaceUI` for Chrome and Safari mobile. Normally, I'm using `replaceUI: true` on Desktop and `replaceUI: false` on mobile browsers. About your validation problem. What do you have to do? Can I help. If it's not a bug just some questions, use http://stackoverflow.com/questions/tagged/webshim\n. This is done with grunt (http://gruntjs.com/). You need node and for the sass task you will also need ruby.\n. But the language packs are so small and they do not have any combos. You will be also fine to simply copy them into the compiled path.\n. done. \n\nSomething, I often thought about, is to create a bridge between the [Jaris videoplayer](https://github.com/aFarkas/webshim/tree/gh-pages/swfs/jaris) and your flashcanvas pro. I haven't looked into, what I need to do, but could you mail me some information (info at corrupt-system.de), how I would do this? It would be a great thing!\n. @kumarharsh \nYou are right bower workflow is just less than perfect. From my understanding you will only need everything, what is in the following folder: https://github.com/aFarkas/webshim/tree/gh-pages/demos/js-webshim\n\nI just have added bower.json with last release. I will improve this. with future releases you will only get one directory called `js-webshim`.\n. Thx, will fix this soon.\n. It seems that I have broke some old code with last release. I have fixed it here https://github.com/aFarkas/webshim/commit/cee6e682fb297a0f09138e66ff55503dacfd511e\n\nOption you have:\n1. rollback to previous version\n2. try the newest version (https://github.com/aFarkas/webshim/commit/f496853d08cd76929eadd7723463b9579bb30cc7) on [master](https://github.com/aFarkas/webshim/tree/master) (Just compiled and tested)\n3. Satisfy the new getOptions method by creating a JSON string:\n   \n   `data-erromressage='{\"defaultMessage\": \"Enter something\"}'`\n. In short, use appenPolyfillTo instead of appendTo.\n\nPlease look into the [abstraction section](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions). There are two important points. \n1. dynamically creating dom elements: You have sepcial methods for dynamic adding elements. appendPolyfill/htmlPolyfill/insertPolyfillAfter/updatePolyfill and so on.\n2. no shadowdom. webshims sometimes has to alter the dom, to create the HTML5 UI.\n   Unfortunatley I haven't created a clonePolyfill method, so you clone isn't that simple\n\nhttp://jsfiddle.net/CnnWC/16/\n. Yeah, thanks. If you need a quick fix, just add:\n\n``` css\n.placeholder-text {\n    text-align: left !important;\n}\n```\n\nI will fix this with next release.\n. thx\n. It's fixed. Chrome trigger a blur event, if a focused element is removed from dom. Note, that noSubmitCheck was changed and can be configured with `submitCheck` instead.\n. Actually the code doesn't make sense. I think you test with FF. You have to distinguish between Chrome, Firefox and IE < 10. \n\nIn case you load the forms polyfill IE will behave exactly the same like FF without any polyfill. (pattern seems to work).\n\nIn case you load the forms and the forms-ext polyfill IE will work exactly the same like chrome. But FF will behave a little bit different here. The reason is simple: FF does implement pattern, but not type=number. (And I do not check wether pattern attribute is used correctly in FF).\n\nBy definition pattern does **not** apply to type=\"number\", your pattern is a spec violation and isn't taken into account by IE (if fully polyfilled) or in Chrome (fully capable). Additionally you can simply skip $ and ^ those are automatically added.\n\nI think you want to have something like this:\n\n```\n<input type=\"number\" step=\"0.01\" />\n```\n\nor\n\n```\n<input type=\"number\" step=\"0.01\" min=\"0\" />\n```\n\nDoes this help? Or what do you want to achieve exactly?\n. With next release you can write something like this:\n\n``` html\n<input\n min=\"0\"\n step=\"0.01\"\n value=\"1\"\n type=\"number\"\n data-number-to-fixed=\"2\"\n data-number-fix-only-float=\"true\"\n />\n\n```\n. Yeah, I know this error. It is already fixed in master. But this shouldn't affect you. It's a very small UX feature, which is only important, if the datepicker doesn't open on focus (Datepicker opens on mousedown if the form control is already focused). You can simply ignore it or update to the latest unstable version.\n\nI will have a look into your second issue. Try the following code, maybe it helps:\n\n``` js\n$(document).on('popupafteropen', function(e){\n    $(document).trigger('updatelayout');\n});\n```\n. For your second problem you can simply add:\n\n``` js\n$(document).on('popupafteropen', function(e){\n    $(document).trigger('updatelayout');\n});\n```\n. @hejjahejja \n\nCould you tell me wether the last code worked for you?\n. @hejjahejja \nWether this is heavy or not really depends on how much widgets you have on your site. You can measure the exact performance with the following code:\n\n``` js\nconsole.time('updateshadowdom');\n$(document).triggerHandler('updateshadowdom');\nconsole.timeEnd('updateshadowdom');\n```\n\nBut you simply should look how responsive your site feels using this. It's not werid at all. JS can not get positions and real dimension on hidden elements (display: none) (see also documentation [re-rendering shadowdom](http://afarkas.github.io/webshim/demos/index.html#polyfill-abstractions). Therefore webshims needs to re-calculate this. I might improve performance here with future releases. If you see that performance is really bad. You can fully disable width calculation:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    widgets: {\n        calculateWidth: false\n    }\n});\n```\n\nIn this case you have to set width/margins for native **and** polyfilled elements your own.\n. Yeah, this is already possible, but not documented yet...\n\nTry this:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    replaceUI: {range: true}\n});\n```\n. @davidwebster48 \n\nYeah, the dateFormat option is gone and can be controlled over the locale-settings. There is already a working en-AU locale. So you don't have to do anything here:\n\n``` js\nwebshims.activeLang(\"en-AU\");\nwebshims.polyfill('forms forms-ext');\n```\n\nhttp://jsfiddle.net/trixta/72hQB/3/\n. Thanks, this should be fixed now. Although this seems as a simple issue, it isn't that easy. Consider the following markup:\n\n``` html\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-text\">\n            <label>Input</label>\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 1\" pattern=\"[0-9]*\" required=\"required\" />\n            <input type=\"tel\" data-errormessage-pattern-mismatch=\"specific message 2\" pattern=\"[0-9]*\" required=\"required\" />\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"form-row\">\n    <div class=\"form-box form-width-xl\">\n        <div class=\"form-field ff-radio ff-group\"  role=\"group\" aria-labelledby=\"single-joint-application\">\n            <strong id=\"single-joint-application\" class=\"label-replacement\">Verwacht u een inkomensdaling?</strong>\n            <div class=\"ff-group-inline\">\n                <label>\n                    <input id=\"ref-0-4-5-a\" type=\"radio\" name=\"ref-0-4-5\"   required=\"required\" />\n                    <span>Ja</span>\n                </label>\n                <label>\n                    <input id=\"ref-0-4-5-b\" type=\"radio\" name=\"ref-0-4-5\"   required=\"required\" />\n                    <span>Nee</span>\n                </label>\n            </div>\n            <div class=\"error-box\" hidden=\"hidden\">\n                <p>common errormessage</p>\n            </div>\n        </div>\n    </div>\n</div>\n```\n. Yes, this is currently impossible. And the main reason, why you have to add an additional class to the input[type=\"file\"]. I want to look into it, but this will take at least 1-2 month. Here is the issue: https://github.com/aFarkas/webshim/issues/319\n. Thanks, this isn't that easy, because you have to write action script. I'm currently not sure, wether everything I want is possible.\n\nFirst of all, here is what we have:\nFlash has to fully intercept the input[type=file] user interaction to get the data for the filereader api. Which means the file isn't in your HTML and only in the swf plugin world. \n\nGoing from there, it should be easy to intercept JS calls and delegate those to swf to mimic/shim an AJAX form/AJAX upload.\n\nSomething I don't know about, but what would be great is, wether it is possible that we can transfer the data from flash directly into the markup/dom world, so that a normal unfancy form submit works as expected. (I know that the object element is also a submittable form element, but don't know how this works and if swf is capable of doing this. If not we have to go the way that, we intercept a form submit and let flash submit the hole data using the AJAX shim and then somehow handle the response.\n\nBut yeah, we have to write a lot of action script for this. If you investigate on this a little bit, it would be great.\n. Yes, this looks good better: excellent. BUT: webshims has a strong opinion on how to handle shims vs. polyfills and the fileAPI project is more a shim + extensions, than a polyfill. Which means: To include this, I have to match the shim API to native or jQueryfied methods and to sperate the extension part from the shim part.\n\nThis might take some time. But, I'm eager to start (Note: First I want to finish the documentation refactor! then I will add cors support (shouldn't take more than 2-4 days).\n. No this is a totaly new embarrassing issue. Thx, for reporting. I'm currently sick. So it will take 2-4 days.\n. Thx, this is already fixed in master. \n. @anselm-urban \n\nWhich version of webshims do you use? `webshims.version`in your console will give you the right version back. I think this is a simple CSS issue. Try the following:\n\n``` css\n.input-picker {max-width: none;}\n```\n\nIf this doesn't help I really need the CSS which is applyed to .input-picker. Note, if you have very general CSS like: `form div` this can conflict with webshims. If such conflicting CSS is typically used or makes sense, I will fix this, if not you have to fix it inside your CSS your own.\n. yes, but jquery shouldn't be a problem. This [demo is also using 1.11.0](http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html). It's a CSS thing. Can you give your markup / CSS. Or generate a simplified testcase?\n\nBTW.: \n1. jquery is very good in managing compatibiliy between 1.x branch and 2.x branch.\n2. webshims even supports custom builds of jquery (https://raw.github.com/jgallen23/jquery-builder/0.5.0/dist/2.0.3/jquery-ajax-deprecated-effects-event-alias-sizzle-wrap.js)\n. @anselm-urban \n\nDo you have any further information on this. I would like to fix it in webshim or help you to fix, depending what'S the cause for this\n. I have copied your code to jsfiddle and it's working just fine: http://jsfiddle.net/trixta/at76g/2/\n\nThere must be some extra HTML or CSS involved here.\n\nAdditionally, there is no seperate datalist feature. datalist is part of the normal forms feature see here:\nhttp://jsfiddle.net/trixta/at76g/4/\n. No, I haven't it is not needed for webshims. It's only an example for the jQuery mobile template and this template refers to another version of modernizr:\nhttp://afarkas.github.io/webshim/demos/demo-js/src/modernizr-special.js\n\nse also: \nhttps://github.com/aFarkas/webshim/blob/gh-pages/demos/demos/webforms/jquery-mobile.html#L58-59\n. Thanks\n. @Arthedian \nSounds quite intersting. I would really appreciate any help here :-)\n. Well, I have just added an enlgish file in JSON. While I still want to deliver as script, because it's simple even cross-domain works withput JSON-P or CORS. It should be easy to run a grunt task/build tast to transform JSON into JS.\n. please test yourself\n. Could you please give me the full html. I can not reproduce this. This is my test markup:\n\n``` html\n<form action=\"#\" class=\"ws-validate\">\n    <div class=\"form-row\">\n        <input type=\"number\" value=\"-2\" min=\"0\" />\n        <div class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n    <div class=\"form-row\">\n        <input type=\"number\" value=\"0\" min=\"5\" />\n        <div class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n</form>\n```\n. many thanks!!!\n. Closing this. Duplicate of https://github.com/aFarkas/webshim/issues/319\n\nWatch out for version 1.14.0. Something nice will be there for you :-)\n. I have now released the new version of filereader. A simple demo is included in the demo package: http://afarkas.github.io/webshim/demos/demos/filereader/ \n\nThe filepicker now fully supports multiple and accept attribute. \n\nUnfortunatley, for the submit proccess we need php, why this demo does only patially work on gh-pages.\n\nBut this demo showcases one simple usecase of filereader: Creating a simple multi-upload with a small preview.\n\nHave fun.\n. Hi,\n\ncan't see the screenshot. Please re-upload here. \n\nregards\nalex\n. I would need the markup and css to see wether this is a webshims bug. It should be easy to simply inspect the css applied to the errormessage to check from where this is comming. \n\nSimply add the following js to your js code and inspect the border with your dev tools:\n\n``` js\n$('html').on('wspopoverbeforehide', false);\n```\n. @cebola2 \n\nThis isn't really an issue, which I can fix. your `#editor_seminarios > div` is generating these styles. Either you can/should use a different selector i.e. `.seminario-element` or you can change the part were webshims is putting the popovers:\n\n``` js\nwebshims.setOptions('wspopover', {appendTo: 'body'});\n```\n. I really need a testpage for this. You can also mail me info [at] corrupt-system.de\n. I have just added webshim and it isn't nearly that slow to me. In fact most performance decrease is comming from bootstrap here: \n\nhttp://fiddle.jshell.net/trixta/9Tdh7/3/show/\n\nOr is it slow to you on your machine? Are you testing with a real IE8? Maybe there is something else? Do you use additional JS?\n. No, you are doing it right. I fixed it. Only thing you are adding the options twice. You should also only polyfill the features you need. (i.e.: `webshims.polyfill('forms forms-ext mediaelement');`)\n\nIn case you are using sass. Simply import the _api-forms-ext.scss form dev/styles/scss and write:\n\n```\n.input-picker {\n  @extend %show-selectnav;\n}\n```\n. I will provide a workaround for this. Could you please fill an issue in [mozilla bugtracker](https://bugzilla.mozilla.org/). It's a FF bug.\n\nhttp://jsfiddle.net/trixta/3Xa4g/12/\n. From my testing webshims implementation handles this right (i.e.: http://jsfiddle.net/3Xa4g/2/). \n\nhttp://jsfiddle.net/trixta/3Xa4g/12/ can not work in Safari 7.x because Safari doesn't support constraint validation UI.\n\nNote: Safari is the new IE :-D\n. Ok, I haven't fixed this issue directly, but made it possible to override native validation API with polyfilled one. This also means, that the browser has to load more. So you can write your own feature detection, browser sniff or whatever. You can do something like this:\n\n``` js\nwebshims.bugs.bustedValidity = !('minLength' in document.createElement('input'));\nwebshims.polyfill('forms');\n```\n\nNote: Currently there is no browser which supports the tooShort constraint, but webshims has already implemented it, without forcing to polyfill it.\n. Here is a working example: http://jsfiddle.net/3Xa4g/16/\n\ncode:\n\n``` js\nwebshims.bugs.bustedValidity = !('minLength' in document.createElement('input'));\nwebshims.polyfill('forms');\n```\n. I'm pretty sure. You can simply leave out the $ajax.js file. It is currently only loaded, if you are using a special build of jQuery without AJAX + use the track feature. I will rename it.\n. You have a small error in your code, I think. Instead of `$(e.target).updatePolyfill();`you should use `$(selector).updatePolyfill();`.\n\nBut unfortunatley cloning polyfilled elements isn't fully supported, if some fake shadowdom is created.\n\nHere are two examples, how you can deal with it:\n1. [removing webshim trash after cloning](http://jsfiddle.net/trixta/2k5gT/)\n2. [use a simple template to be more dynamic](http://jsfiddle.net/trixta/QJ7Ef/) (Better solution)\n. Actually this is non-standard. But quite good. Only for a patternmismatch a title attribute has to be used by the browser. While Safari indeed needs a polyfill, FF doesn't need one here. \n\nFortunatley, webshims supports already [customizing errormessages](http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-validityMessages) with placeholders for different things (i.e. value, min, max, minlength, valuelength and also title). Try the following code:\n\n``` js\nwebshims.setOptions('forms', {\n    //show custom styleable validation bubble\n    replaceValidationUI: true,\n    lazyCustomMessages: true\n});\n\n//override valueMissing defaultMessage\nwebshims.validityMessages.en = {\n    valueMissing: {\n        defaultMessage: 'Please fill out this field. {%title}'\n    }\n};\nwebshims.activeLang('en');\n//start polyfilling\nwebshims.polyfill('forms');\n```\n\nOr a little bit more sophisticated automatically add title placeholder to all errormessages as soon as they load:\n\n``` js\n(function(){\n\n    var titleEnhanced = {};\n    function addTitlePlaceholder(){\n        var addTitleToString, currentObj;\n        if(this.__active && !titleEnhanced[this.__activeName]){\n            addTitleToString = function(prop, value){\n                if(typeof value == 'string'){\n                    if(value.indexOf('{%title}') == -1){\n                        currentObj[prop] += ' <span class=\"title-attr\">{%title}</span>';\n                    }\n                } else if($.isPlainObject(value)){\n                    currentObj = value;\n                    $.each(value, addTitleToString);\n                }\n            };\n            currentObj = this.__active;\n            titleEnhanced[this.__activeName] = true;\n            $.each(currentObj, addTitleToString);\n        }\n    }\n    $(webshims.validityMessages)\n        .on('change', addTitlePlaceholder)\n        .each(addTitlePlaceholder);\n})();\n```\n\nDoes this help?\n. @shefik \nDid this help? Or do you think, I should add the {%title} placeholder to all errormessages by default?\n. @shefik \n\nYes, I think I will add it. About the x-moz-errormessage extension. It is already supported, but not as a placeholder. Simply because it already includes the full errormessage.\n. Although, this would be easy to fix, I'm not really sure wether I want to fix this. Due to the nature of webshims and especially the fact, that we can not use real shadowdom to build the widgets it's always possible to break the UI. If this happens, the developer always can and should write some additional CSS to fix the problem. In your case you [simply have to write](http://jsfiddle.net/trixta/4cLT2/2/):\n\n``` css\ninput,\ninput + .input-buttons {\n    margin-bottom: 30px;\n}\n```\n\n If I would test for every specific possible conflicting style my JS/CSS would be more and more bloated and page performance would be decreased. In case, I would \"fix\" this, I would more likley write the following CSS than dynamically reading the computed style to adjust the buttons position:\n\n``` css\n.has-input-buttons, html > body input.ws-inputreplace.has-input-buttons, span.has-input-buttons {\n    margin-top: 0;\n    margin-bottom: 0;\n}\n```\n\nIs this really so **needed** to fix in webshims?\n. Yes, I often think about it. Give me some time to answer :-D\n. Unfortunatley, I have not so much time to answer it how I want. Here are some points: I'm not 100% sure, wether I will do an absolute new version with new API, but if I do, here are some thoughts:\n1. Drop jQuery and Modernizr\n2. Drop IE8 Support\n3. Use defineProperty  instead of  the current solution $.prop proxying \n4. MutationObserver (and other techniques) instead of the current solution $.updatePolyfill, $.appendPolyfill\n5. Development and documentation have to be done parallel\n\nAbout your two other points, I'm not 100% sure, what you want here, especially your second point. You say for example: \"I dont need to dynamically load my shims over the internet.\" What do you mean here exactly? Comming from capability based loading. We always want to / have to conditionally load script A for device y and load script B for device x. How would adopting commonjs/AMD/UMD change this exactly? How would a project setup look like? Actually I want to create a selfcontained library without any dependencies, so only UMD would be possible.\n\nThere is a common request to only have those files and code needed in the project, which are indeed used. I will setup a github repo with a new file/directory structure in the future. But I might make this atomic inside of the project setup, I don't know wether I would expose this on the build site. I know, that some people see this as an overhead, but actually I packed those features into reasonable groups. The filesize overhead is considered and tested as mostly irrelevant. Additionally if I still want to be able of conditionally loading things, I have to thing about the amount of initial requests. A lot of features like fieldset[disabled] are especially important for building complex forms with conditionally validating fields depending on the checkedness/selectedness of an option/radiobutton/checkbox... It's just good, that it is part of the standard form features. People just need to know about this and how to use it.\n\nOne thing that I really still want to have in next version is the separation of polyfill <-> extension on the one hand and the UI <-> and API on the other hand in conjunction with a conditionally and deferred loading system. \n\nHere is one small example: If you load the following site http://afarkas.github.io/webshim/demos/demos/mediaelement/responsive-mediaelement.html with a modern desktop browser, you will see something like this in your network panel:\n\n![modern](https://cloud.githubusercontent.com/assets/188254/2840578/f884b916-d057-11e3-9d25-70205a77c664.png)\nAs you see, webshim will load 9 files with total of 38kb. If you compare this to a solution like videojs just 1file with 20kb) you would think, \"oh my god\". \n\nThe filesize difference of 38kb vs 20 is mainly because of 3 things:\n1. webshims already includes more features like youtube or the full textTrack API\n2. webshims extends the native API with all features (needs more code to be 100% accurate)\n3. some boilerplate code mainly dom-extend.js\n\nBut if you look deeper, how those things are loaded you will see, that webshim has only loaded about 8kb initially and the rest is deferred mostly after the onload event. Although those files are deferred, the UI for the user looks \"fully ready\" and the API is fully implemented with the 9kb.\n\nBut if you use a smartphone to load the exact same page, you will get the following picture in your network panel:\n\n![smarthphone](https://cloud.githubusercontent.com/assets/188254/2840726/cbe38c86-d05a-11e3-916e-55067adecb36.png)\n\nAs you see, we now only load 4.5kb initially to have a full unified API for HTML5, flash and youtube.\n\nAnd if I would use the same setup, but wouldn't have a video element on the site the loading of features would also adopt to this scenario.\n\nThis is one great thing about webshim among others, because a developer just don't has to care about lazy loading or conditionally loading, webshim automatically does this for him. So I can implement larger feature sets without slowing down the network performance and a developer simply can use those features.\n. I will add some ideas including examples by time here. But to be clear here: Webshim 2.x is really something for 2015. Maybe I will start earlier, but this won't be stable. And don't get to passioned ;-).\n. Something I can not resist: Although the current webshim-repo is treated as a monolithic package, the architecture isn't and webshim 1.x is developed with modules in mind. Webshim doesn't use amd or commonjs as a module format, because normal optimization tools for those module formats are extremly bad if it comes to capability based/conditionlally loading. This is something you can't blame webshim for. It's a tool problem. Develope in small pieces and then concat everything into one big file is just a bad performance workaround by most build systems. I think webpack seems intersting here, but as you said, webshim should not force a developer to use certain tools, it should simply work. In fact es6 packages are another \"workaround\" for the es6 modules performance problem, but would be better suited for webshim, because they can work much more like a combohandler service (which is the way, how optimizing webshim would work best). By the way jsdeliver supports combohandling and it would be intersting to create a polyfiller.js which would support it.\n\nThis means, I invented a different format, because it's much simpler to pre-optimize it. You are right webshim dictates some loading strategies, but this doesn't mean, that it doesn't work with amd/commonjs, it's simply just works side by side. And it works better how it is done now, than leaving it to the normal r.js optimizer for example.\n\nAs a small pro tipp: There are files in webshim depending on feature and/or configuration, which are not loaded conditionally and don't need to be loaded deferred. For example: If you use `mediaelement`  feature you can simply directly include or require 'mediaelement-core' and 'swfimini'. In case you are using the `froms` feature you can directly include 'form-core'. There are some other files, depending on your configuation (especially with `replaceUI: true` and `customMessages: true`). You can have a look in [optimize-polyfiller.js](https://github.com/aFarkas/webshim/blob/gh-pages/grunt-tasks/optimize-polyfiller.js). If you do this, those files are going into your normal \"optimization pipline\", which can give you indeed a speed boost (if the optimization is done well), but all other files are better handled by the predefined webshim way.\n. @mreinstein \n\nYour image argument is indeed a strong one. Will come back to this later. ;-)\n. I'm currently developing something, that might be interesting for you, but progress is slow, so don't expect this to be ready soon. I think first version will be there in 6 month.\n\nThis said, webshim doesn't really add much complexity. The only problem I know of is, that there are cm systems messing around with URLs. And to be clear, those systems often have workarounds or exceptions for the most often used relative asset referencing and loading (i.e.: loading background images from a stylesheet). Those systems do not work with amd modules either, if the modules aren't pre-packaged by another build system. \n\nTo be clear here, it's quite annoying and a big fail by those \"systems\" every web standard that needs to load assets uses relative referencing i.e. it is built upon this standard. And if you think on ES6 modules or HTML imports you know, that there are comming new standards involving asset loading. \n. webshim automatically reads the html[lang] attribute. If this is not set the browser locale is used. You can simply override this, with `webshims.activeLang('de')`;\n\nDocumentation: http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-activeLang\nDemo (scroll down the page): http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html\n. Did this help?\n. Will look into this on monday.\n. thanks a lot. fixed it.\n. Here is the relevant change: https://github.com/aFarkas/webshim/commit/f366d073db84a5b3f73757874d394206a31ea527#diff-498b595e458372036f1d939fc0827477\n. Not sure, but a simple guess. Could you dispatch a change event on your last input then wait for 10ms and then click submit.\n. Ok, this makes sense. You could also trigger a change event? The IE11 and Firefox behavior is standard conform. See also the sizzle test for :focus (it tests, wether the document itself also has focus: https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L1302). \n\nBut I think this is a selenium issue here. It is impossible for a user to type something in a field, that is not focued.\n. Just added, it would be soo nice, if you could write one small paragraph in the documentation in the master branch\n. @dmromanov \nYou are aware, that you can control them already? The coumentation for the [custom validation](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity) has a section \"Controlling the errormessages of custom errors\".\n. Just added, it would be soo nice, if you could write one small paragraph in the documentation in the master branch.\n. THX!\n. You can try something like this:\n\n``` js\nwebshims.modules['form-number-date-ui'].test = function(){return true};\nwebshims.polyfill('forms forms-ext');\n```\n\nOr simply configure the widgets to not showup:\n\n[number](http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#hide-inputbtns=on)\n[date](http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#nopicker=on&hide-inputbtns=on)\n. Are you sure. What version are you using? The nopicker option is available only in version 1.12.8-RC2 and up. But the \"classes\": \"hide-inputbtns\" should always hide the dropdown button. If you mean the config demo. The options for the demo is only applyed to the output area and not to configuration area. \n\nWhat is your special usecase?\n. Here is another demo using this [technique on date](http://jsfiddle.net/trixta/fLBes/embedded/result,html,js,css/) and here a mixed one for [type=number](http://jsfiddle.net/trixta/UC6tG/embedded/result,html,js,css/)\n. @mreinstein \nyes, will do.\n\n@nlenkowski \nI don't often do add new features. Main development is in master branch, sometimes I push quite stable versions to gh-pages. Will do an update soon.\n. Yes, you are right. This is a longtime issue though. I could manage to get something 99% working, but not 100%. What I think is quite simple:\n\nFirst, there should be a $.clonePolyfill method and the already implemented htmlPolyfill method should also return a cleaned string. \n\nIn most cases you can workaround this issue by using a template. Similiar to something like this: http://jsfiddle.net/trixta/QJ7Ef/\n. I have added a new method called clonePolyfill (https://github.com/aFarkas/webshim/commit/ee8988e27bd95147d78d113a503e93ce80d25cb6). Will be there in version 1.13.1\n. About usage:\n\nYou can do something like this:\n\n``` js\n$new = $old.clonePolyfill();\n$.new.appendTo('body');\n```\n\nIn case you insert it immediately into the document, there is no need to call updatePolyfill.\n. thx\n. Do you mean something like this: http://jsfiddle.net/trixta/VNuct/?\n. Yes the demopage uses:\n\n``` js\nwebshims.setOptions('forms-ext', {\n    replaceUI: 'auto'\n});\n```\n\nwhich means, that input widgets are not replaced on smartphone, but on desktop/tablets. I don't really understand your usecase for webshims here. Most people want to see what the webshim work is, if they implement webshims. Additionally, they do use a modern browser to do the first test. So it's most likley, they want to see, how the polyfills look like and not how the native implementation is looking like.\n\nI have added an enhance switch to some of my demos, which showcases the different states of \"enhancements\". Here is a simple demo for this:\nhttp://afarkas.github.io/webshim/demos/demos/mediaelement/track-demo.html\n\nOr here is another example:\nhttp://afarkas.github.io/webshim/demos/demos/webforms/datalist-experiment.html\n. Will fix this.\n. Just added the fix, but this will only work if you ad an id to your element.\n. Actually I don't get your usecase here. Indeed webshims won't load any shims/polyfills for Chrome, so there is already no need to remove anything. Additionally updatePolyfill behaves similiar to a noop in Chrome so there is nothing to optimize further. \n\nIf you want to make something smaller, then you might want to create a custom build of jquery. webshims for example does not need sizzle (but polyfills IE8 and brings CSS3 selectors into $), ajax, effects, event-alias, deprecated and wrap.\n\nIf you want to know, which modules are loaded you need to look into `webshims.modules`. But this only the intertnal data.\n. `\"false\"` is not `false` ;-)\n\n``` js\nwebshims.setOptions('forms-ext', {\n        replaceUI: false,\n        types: 'datetime-local range date time number month color'\n});\n```\n. OMG, thx!!!\n. Wow, nice!!!\n\nI haven't looked into all your research, but will do this. It's great, thank you. \n\nAbout your Android research regarding that Andorid seems to support input widgets. You are partially right here and what webshims is doing with Andorid is: If Andorid is detected and this browser does not support progress element and fieldset disabled, webshims assumes, that input widgets are not implemented right, even if Modernizr is reporting, that this input is implemented (see also here: https://github.com/Modernizr/Modernizr/issues/769). The reason for this is quite simple: I also made a lot of tests with a lot of Android versions and the result is heavy to got this 100% right. Some versions got it right and some had some problems. Additionally not only the version but also the manufacturer of the smarthpone had influence. The problems were: 1. Datepicker does not offer a clear button/UI, 2. datepicker enters the value in wrong format (some do not add leading zeros, some other use format of OS configuration instead of yyyy-mm-dd), 3. some version do neither trigger blur nor change (Note: I implement missing change event in iOS and others, if at least blur is working) and 4. on older versions not even a datepicker is shown.\n\nThis said, while webshims way to handle this is indeed not very \"distinctive\"/\"precise\", it is a) fail proof and b) future orientated, if a future version of andorid has those named features (progress element and fieldset[disabled] it will also only use the Modernizr tests. And I think I'm right here, because beginning form Andorid 4.4 the input widgets shouldn't be replaced on Andorid anymore by webshims. With other words: Although webshims could be work more granular with older Android versions, you should not remove it, I had my reasons for this!\n\nAbout your two concrete issues:\n**`splitInput`**\nThis splitInput feature uses scripted focusing, which can't be done on all devices. My question here: Does this feature not exist or does it something strange and bad with the UI/UX. (I can't fix, that it does not work, but I can fix, that there are not other side effects.)\n\n**`datalist`**\nWill look into this and fix as soon as possible\n. As already said datalist will be fixed soon. Additionally native datalist is comming for Android. ;-).\n\nAbout postcode, pincode and credit card number, those kind of inputs are \"numeric\" or \"digits\", but not type=\"number\". The right markup for this would be:\n\n```\n<input type=\"text\" inputmode=\"numeric\" pattern=\"[0-9]*\" maxlength=\"\" minlength=\"\" />\n```\n\nThis should work with iOS and Firefox for Android. Chrome is working to get this feature soon into Chrome for Android. You should not turn it into type=\"number\", because some browsers will remove leading zeros and other stupid things.\n\nAs a workaround you could detect, wether inputmode is supported and if not replace it with type \"tel\", it's also semantically wrong, but won't have so much side effects. \n\nThis said I will also add a new class called `ws-noreplace` with next release.\n. Ok, I wanted to look into your datalist issue and tryed the following [demo page](http://afarkas.github.io/webshim/demos/demos/cfgs/list-datalist.html) with Anrdoid 4.3. And it worked pretty good. So I can't reproduce your issue. Can you test or help with some more information?\n. @davidelrizzo \nI would like to make a new release, because the [following fixed bug](https://github.com/aFarkas/webshim/issues/382) really needs a new stable.\n\nBut before releasing, I also want to look into your datalist issue. As you see above, I can't really reproduce it. Can you help here? Additionally, from your spreadsheets I see, that you mention type number validation does not work in IE8. For me this is working. Can you help me here, too???\n. Ok, this was enough information for me :-D. Just fixed it.\n. @davidelrizzo \n\nI just added some small inputmode=\"numeric\" support for mobile browsers: http://jsfiddle.net/trixta/7NEBb/. Note: This only works with the newst \"unstable\" version of webshim!\n. Hi,\n\nI made same observation, but my conclusion is a little bit different here. To sumarize it:\n\ninputmode=\"numeric\" should give us the following charckters: +-.,0123456789\ntype=\"tel\" depends on the device, but there are devices, which will give you only: +0123456789\n\nWhich means a switch between inputmode=\"numeric\" to type=\"tel\" is obtrusive.\nA switch from inputmode=\"numeric\" to type=\"number\" might give you the right keyboard, but there is always the possibility of value sanitatzation, which will change/remove values like: +01231 to 1231 or an empty string. Means that this is also obtrusiv.\nThere is actually no usecase for inputmode=\"tel\" on an input. It's more for a textarea and for the completeness of the spec. \n\nMy current approach is therefore to always look for both: pattern=\"[0-9]+\" and inputmode=\"numeric\" (The first pattern already works on iOS...). Maybe I will improve this to detect things like [0-9]{3,9} and so on and do the fix also on iOS. \n\nYou are right, that sometimes an inputmode=\"numeric\" to type=\"number\" would be better or sometimes also an inputmode=\"numeric\" to type=\"tel\" without an explicit pattern is appreciated by a developer, but those kind of switches are obtrusive and need to be guarded by an option or a specific class/attribute on the element. -> The developer has to explictly opt-in for this + I have to document it somewhere/somehow.\n\nAny suggestions? Maybe:\n\n``` html\n<input inputmode=\"numeric\" data-wsmode=\"tel\" />\n<input inputmode=\"numeric\" data-wsmode=\"number\" />\n```\n\nAbout native support. There is a way to detect it and I'm using this detection already. Interestingly inputMode is already supported on Chrome Desktop. Don't understand why :-D. And on Firefox it is hidden behind a flag: \"dom.forms.inputmode\" + something different/similiar \"dom.mozInputMethod.enabled\"\n. Ok, you are right about this being messy, but I will never ever do a switch to `[type=\"number\"]` without an explixit opt-in by a developer.\n\nMy current work on this, can be seen here: http://fiddle.jshell.net/trixta/7NEBb/show/\n\nThe first example simply shows, why I won't use the type=\"number\" it's simply to obrtusive. All other examples show how `inputmode=\"numeric\"` is polyfilled. In summary: On Android and iPad inputmode is always polyfilled and on iPhone, the developer has to add a pattern. While iOS only detects `[0-9]*` and `\\d*`, webshim will detect more (but not all suiteable) patterns.\n\nI think this is the best way to do this automatic. As already said, in some situations, there might be a better different approach, but those approaches are obtrusive and needs to be hidden behind a configuration. If you want such a configuration please open a new ticket.\n. Wow, thanks. Kind words.\n. Unfortunatley, I can not reproduce this. Here is a simple fiddle: \nhttp://jsfiddle.net/trixta/C9bmE/\n\nAbout your investigations. The val should be an empty string there. If you get the value using $.prop or $.val and it is actually the placeholder something strange is happening.\n\nFrom my feeling some other script is setting the value in IE9. Maybe another \"placeholder\" polyfill?\n\nPlease try to change config and see what happens:\n\n``` js\nwebshims.setOptions('forms', {\n    placeholderType: 'over'\n});\n```\n. The code you should look for is inside of form-shim-extend2.js in line about 1050. Here is the code for value getter and setter: I have added a line to check wether someone is setting the placeholder value as an input value. (Note: you have to start js debugging in IE9):\n\n``` js\npolyfillElements.forEach(function(name){\n    var placeholderValueDesc =  {};\n    var desc;\n    ['attr', 'prop'].forEach(function(propType){\n        placeholderValueDesc[propType] = {\n            set: function(val){\n                var elem = this;\n                var placeholder;\n                if(bustedPlaceholder){\n                    placeholder = webshims.data(elem, 'bustedPlaceholder');\n                }\n                if(!placeholder){\n                    placeholder = webshims.contentAttr(elem, 'placeholder');\n                }\n                $.removeData(elem, 'cachedValidity');\n                var ret = desc[propType]._supset.call(elem, val);\n\n                //debugger statement\n                if(val == placeholder){\n                    console.log('something strange is happening. get call stack');\n                    debugger;\n                }\n\n                if(placeholder && 'value' in elem){\n                    changePlaceholderVisibility(elem, val, placeholder);\n                }\n                return ret;\n            },\n            get: function(){\n                var elem = this;\n                return $(elem).hasClass('placeholder-visible') ? '' : desc[propType]._supget.call(elem);\n            }\n        };\n    });\n    desc = webshims.defineNodeNameProperty(name, 'value', placeholderValueDesc);\n});\n```\n\nQuestion: Is this a real IE9 or IE10/IE11 in IE9 mode?\n. @bkdotcom \nThanks for your answer: Something to know about type=\"tel\" on iphone. The iphone will give you only the following charckters without the possibility to switch the keyboard: +0123456789\n\nThis means it will be hard to satisfy your pattern for an iphone user. On ipad there is no problem...\n. Ok, thanks. \n. There is an option (`noPlaceholderPolyfill`), but first of all: Why would you do this? Are you still using another placeholder-polyfill? Why not webshims integrated solution?\n\nI really start to cry now ;-)\n. Yeah, I know this also. Funny part, I was the author of the first media queries polyfill (something very simple/limited) in 2006/2007! More than 3 years before the term responsive webdesign was introduced.\n\nWhile I always had my issues with CSS polyfills (performance). Those kind of polyfills work good, but you have to respect one thing, you should add them blocking right after your CSS or at least with `document.write` everything else, is a) bad for performance (because it causes unnecessary reflows/repaints) and b) create FOCUs.\n\nI think with current browser landscape, it's easy to add them with a conditional comment.\n. This can be done natively. IE7 was the last browser without support and I removed IE6/7 support in this year.\n. Thanks! Yes, there are none :-). Active development is in master, while gh-pages holds the more stable branch. So, yes it would be much better to create a PR for master.\n. Thanks\n. Thanks, too.\n. It's avtually not about filesize nor jQuery. Currrently no browser has implemented menu the right way. Currently it is not sure wether this feature will be removed from the spec. I will close this issue, but as soon as FF or any other browser adds this feature nativeley, I will add a polyfill.\n. Thx\n. Thx, if you search for debug or dev/, you will see that the documentation mentions the difference between those two versions. \n. Many thx. jsfiddle doesn't provide a ssl content. very bad.\n. Thanks, added\n. Oh, thanks. I'm not that organized, that I could say something concrete, but help is always appreciated! Might comeback to it later.\n. Unfortunatley this isn't possible, due to performance concerns. You can use the `addCustomValidity` API:\n\n``` js\n//wait until form-validators are implemented \nwebshim.ready('form-validators', function () {\n    //add bar constraint\n    webshim.addCustomValidityRule(\"foo\", function(elem, value, data){\n        //only test if elem has a value and a key 'foo' in its data\n        if(value && 'foo' in data){\n            return value != 'bar';\n        }\n    }, \"enter 'bar' please\");\n});\n```\n\nhttp://jsfiddle.net/trixta/KdFB2/embedded/js,result,html,css\n. There is currently indeed no solution for this one. Despite the fact, that this could be indeed improved, I don't think, that I want to add a \"new\" method to make this possible. In my abstraction section, I already state, that I don't have real shadowdom and that the UI elements/shadow elements do not reflect special states like `float` or `display`. My proposed workaround for those style issues is, to either use a wrapper element or to simply use some additional CSS and target the \"shadowelements\".\n\nI would propose something like this, to get this task done:\nhttp://jsfiddle.net/trixta/47Uz4/3/\n\nBut to make a decision here, I would need to know your actual usecase.\n\nThere is currently also a very similiar stackoverflow question going on, which I will try to answer in next 48 hours:\nhttp://stackoverflow.com/questions/24660666/deactivate-or-undo-webshims-polyfill-to-use-my-own-instead\n. @doits and @HenriPodolski \nThis is exactly, what I'm proposing in the abstraction section.\n. I will change this. But don't expect to be a in the next one or two releases.\n. This by design. Webshim lazyloads some specific scripts. The load happens normally right after window onload. But in case a user starts to interact with a form element the download is started immediately.\n\nSo this is a feature not a bug ;-).\n. I have just updated webshim to improve the window loaded and the form interaction detection. Please try this one: https://github.com/aFarkas/webshim/archive/gh-pages.zip\n. @isaackwan \nPlease let me know, if the current version of gh-pages solves your problem. In that case, I would put a new release together.\n. Yes, this should work. Can you use the dev folder instead of the minified folder and extend your config with:\n\n```\nwebshim.setOptions({debug: true});\n```\n\nAnd look what a) your script console says and b) what your network panel says. It would be also nice to use the latest version, but an RC version should work/be tested...\n. @tdd \nI couldn't reproduce this issue. Can you give me more information? Does log or network panel has more informations? You can also mail me your project files/url.\n. Thanks!\n. This is still a seroious issue and it's quite weird. Can you try to remove other JS files and look, wether there are multiple version of polyfiller or other libraries do  interfere the loading proccess.\n\nAs a workaround you can also try to set `webshim.setOptions('debug', 'noCombo');`. This isn't ideal, but at least you won't load duplicate scripts. \n. Well, it's often a mix between combos and non-combined files, but loading form-core.js and combo 3 or 15 is clearly an error.\n\nIn case you have no time or don't find the error, you can mail me the prototype, url or a reduced testcase. This can also happen later, even if the project is already launchend.\n. @homeloan \n\nThx, from your description the dev version already give you two bugs:\n1. this is just a formal warning:\n   `need to load forms feature to use forms-ext feature.`\n\nAnd can be fixed by writing:\n\n```\nwebshim.polyfill('forms-ext');\n```\n1. The X-UA-Compatibility:\n\n`IE browser modes are busted in IE10+. Please test your HTML/CSS/JS with a real IE version or at least IETester or similiar tools`\n\nCan you provide me with more information what exactly does not work as expected, after you have fixed the second part? Do you have a testcase? Or can you mail me your project?\n. @homeloan \n\nHere is a configuration example:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover={\"position\"%3A+{\"at\"%3A+\"right+bottom\"}}\n\n```\n\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"startView\": 2,\n        \"popover\": {\n            \"position\": {\n                \"at\": \"right bottom\"\n            }\n        }\n    }\n});\n\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n value=\"2005-02-09\"\n type=\"date\"\n />\n```\n\nYou can use `startView` and the `popover.position` option. The popover.position option takes the same arguments as the jQuery UI position util (http://jqueryui.com/position/)\n. @tdd \n\nThanks, for your testcase. I think it's working fine.The list of loaded files shows, that the right combo and non-combo mix of files are loaded. \n\nI don't believe that the red/bold marked aren't always loaded. For example, Chrome load form-core.js (bold, sometimes) and form-validation.js always, can't be true, because form-validation is referenced only in form-core.js so form-core has to be loaded.\n\nI think the dev tools weren't showing the hole picture in your case.\n\nThe only thing, that I saw, is that brunch has destroyed detection of the currentScript script detection (i.e.: finding the right basePath) automatically, but you are already configuring it manually, so this shouldn't be a problem.\n\nHave you encountered any issues in your app?\n. Ah, ok, this was a misunderstanding. I meant, that form-core.js should be never loaded, if combo 15 is also loaded in the same browser enviroment. But this isn't the case.\n\nAbout the detection: This detection has to be handeld right away, it can not be handeld if polyfill/configuration starts, because this could be inside of a callback and this destroys the test. It simply runs and if you configure it after everything is ok.\n\nAnd yes, I do not test, wether you are setting it, because this part is only inside of the dev-folder, which shouldn't be used in production. I only added it to inform you and me, that there is something happening wrong in my script (Actually, I have partially fixed it https://github.com/aFarkas/webshim/commit/c192d4049f9f7af5d11e830e8b935b9d292c0e6e), but due to the fact, that brunch is calling this code inside of a callback, which can be async, the detection won't work in all browsers). I.e.: It's based on the [document.currentScript](https://developer.mozilla.org/en/docs/Web/API/document.currentScript) property.\n. Yeah. Very sorry for the false alarm\n. No webshim hasn't such a feature. What webshim has is the conversion from input placeholder to select with placeholder options. This looks something like this:\n\n``` html\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"yearSelect\": true,\n        \"monthSelect\": true,\n        \"daySelect\": true\n    }\n});\n\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n placeholder=\"year-month-day\"\n type=\"date\"\n />\n```\n\nDemo: http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#placeholder=year-month-day&yearSelect=on&monthSelect=on&daySelect=on\n\nActually HTML5 explicitly has a definition, what a placeholder option means and it's pretty simple HTML4:\n\n``` html\n<select>\n    <option value=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nor:\n\n``` html\n<select>\n    <option value=\"\" disabled=\"\" selected=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nYou can even do something like this:\n\n``` html\n<style>\noption:disabled {\n    display: none !important;\n}\n</style>\n<select>\n    <option value=\"\" disabled=\"\" selected=\"\">Palceholder option</option>\n    <option value=\"something\">text</option>\n</select>\n```\n\nNote: A select with size > 1 or a multiple select can't have placeholder option. \n. Nice information, didn't knew. This bug is now fixed without replaceUI option, but you still need to request the forms-ext feature.\n\n@stucox\n\nThis is the way for your issue: https://github.com/Modernizr/Modernizr/issues/1376\n. Just fixed the CSS bug in rtl direction\n. Can you try to reproduce this error. Started to try it here: http://jsfiddle.net/trixta/4zaCU/\n\nBut couldn't.\n. This should work now: http://jsfiddle.net/trixta/4zaCU/13/\n. Just fixed it. Thanks\n. This is because webshim's UI components also need to know, if you change something, this is done by simply using jQuery's prop method. But KnockoutJS, doesn't use jQuery:\n\nIf you change Knockout code, it would work:\n\nOld version:\n\n```\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n```\n\nNew version:\n\n```\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            $.prop(element, 'disabled', false);\n        else if ((!value) && (!element.disabled))\n            $.prop(element, 'disabled', true);\n    }\n};\n```\n\nI don't develop with Knockout, but if they provide some Hooks for thier bindings, you can hook into and simply write somecode like this:\n\n```\n//set disabled property to it's current disabled state using $.prop to update UI component\n$.prop(element, 'disabled', element.disabled );\n```\n\nI'm pretty sure a knockout developer knows some workarounds for this. In case you are using select replacements like select2 or other you will get similiar issues, with updating the UI to properties like disabled, value, selected etc.\n. I have just written some binding extension for disable, enable and value bindings. You need the newst webshim version for this and then add the following code to your project\n\n``` js\nwebshim.ready('dom-support', function(){\n\n    if(!webshim.xProps){\n        webshim.error('you need webshim version 1.14.6 for knockout integration.');\n        return;\n    }\n\n\n    $.each({enable: 'disabled', disable: 'disabled', value: ''}, function(name, prop){\n        var origFn = ko.bindingHandlers[name].update;\n        if(!prop){\n            prop = name;\n        }\n        ko.bindingHandlers[name].update = function(element){\n            var ret = origFn.apply(this, arguments);\n            if(webshim.xProps[prop]){\n                $.prop(element, prop, element[prop]);\n            }\n            return ret;\n        };\n    });\n});\n```\n. Always use jQuery's prop method:\n\n```\nwebshim.polyfill('mediaelement track');\n\n$(function()\n{\n  //  If the browser supports switching tracks...\n\n\n    var $video = $('video').eq(0);\n\n    // For each track object...\n\n    $.each(\n      $video.prop('textTracks'),\n      function(i)\n      {\n        $.prop(this, 'mode', 'disabled');\n\n        // Add a div containing each track label and a checkbox.\n        // When clicked, show or hide the corresponding track.\n\n        $('<div class=\"TrackSelection\"> '+this.label+'</div>').\n          appendTo('.MediaContainer').\n          prepend(\n            $('<input type=\"checkbox\" value=\"'+i+'\"/>').\n              change(\n                function()\n                {\n                  $.prop($video.prop('textTracks')[ this.value ], 'mode', \n                    this.checked ? 'showing' : 'hidden');\n                })\n            );\n      });\n\n});\n```\n\nNote FF's implementation is overwritten, because it is simply still buggy and not complete. It won't be overwritten as soon as this bug is fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\nHere is the feature detection code: https://github.com/aFarkas/webshim/blob/gh-pages/src/polyfiller.js#L1257\n\nI think we will see this feature in FF33.\n. As long as I have to support IE8, the $.prop stays. IE8 doesn't support property accessors therefore, we need a wrapper function/abstraction for this.\n\nAs soon as we drop IE8 we can use `Object.defineProperty` to implement new features. But the shift won't be so easy and neither soon....\n. Thanks, for reporting. Fixed most of them (not all). Could you test wether this is good enough for you?\n\nThanks\n. Thanks. Actually I have excluded this file from the release (https://github.com/aFarkas/webshim/blob/gh-pages/.gitattributes#L5-6). I only wanted to still serve this file via gh-pages, because some old fiddles are using it. A cleaner solution would be to remove this file from my repo. What do you think?\n. Ok, so you are fine, if I simply remove this file with next release?\n. You know that, webshim already implements the progress element. It also gives developers a [sass mixin to style the progress element x-browser](https://github.com/aFarkas/webshim/blob/gh-pages/js-webshim/dev/shims/styles/scss/_api-shim.scss#L49-82).\n\nThemed demo: http://afarkas.github.io/webshim/demos/demos/themes/themes.html\n\nFrom my experience this element isn't used much and therefore, I haven't worked on the meter element.\n. I will add this feature. But might take one-two months.\n. Yes the tooltip is exactly designed how the errormessage do appear in HTML5 browsers, if you want more, you can use the [`iVal`-feature](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival).\n\nHere is [small demo](http://jsfiddle.net/trixta/9859C/). In case you don't need live validation and only want to check validity on submit and if value becomes valid you can change the `events` option of the iVal feature. Here is [another demo](http://jsfiddle.net/trixta/6jpxpm5e/). You can also change the styling to make them appear similiar to tooltips (i.e.: position absolute), but in most cases you don't want to do this, because this might interfere with your normal styles.\n. Please re-open, if this doesn't help.\n. This is by design/spec: http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#the-select-element:attr-select-required-2\n\nIf you think about it, it totally makes sense. You as an author, should not give an invalid option to the user only if the first option is used as a placeholder-option/label, the required attribute makes sense.\n. Yes, it's a firefox bug/simplification, but they won't fix it.\n. Intersting i opened this bug 4years ago and the developer (mounir) Set IT to won't fix. If they do fix it. I will force old ff to use the webshim implementation\n. Webshim has an implementation of the minLength property and the tooShort constraint, but webshim does not force \"good\" browsers to implement it (Chrome and Firefox). You will see, that IE and Safari, which are using the webshim implementation do support minlength.\n\nCurrently no browser has an implementation of this property and therefore I don't force this implementation.\n\nYou can simply use the `pattern` attribute to get the minlength validation:\n\n```\n<input pattern=\".{3,}\" required title=\"3 characters minimum\" />\n```\n\nIf you really need the minlength validation using the minlength attribute, you still have two other options:\n1. set [`addValidators` to true](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity)\n\n```\nwebshim.setOptions('forms', { addValidators: true });\n```\n1. Or set `webshim.bugs.bustedValidity`to true:\n\n```\nwebshim.bugs.bustedValidity = !('minLength' in document.createElement('input'));\n```\n\nI would prefer the `pattern-attribute`solution until neither chrome nor firefox has implemented this property.\n. Please re-open, if this doesn't help.\n. @AMA3 \n\nNo `extendNative` is a general option, that decides how a features are implemented, not what features are implemented. An option for the `forms` feeature, which could be called `edge`, could be added.\n. Looks fine to me: https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/styles/shim.css#L292-293\n\nMaybe you have an overriding selector with higher priority? This is something I can't fix.\n. Yes this is fixed since 1.14.6\n. First try on this feature. Here is a demo: http://jsfiddle.net/trixta/5kjrtLvw/\n\nIf you want to play with it: It's currently only on master not in the gh-pages branch.\n. Technically it is possible if the css is in the same origin or cors is used, but this really doesn't scale (performance!). Additionally the polyfill only supports about 50% of the sticky property. If you want to use the property on some elements as an progressive enhancement, attaching the polyfill to such an element will be a big problem.\n\nIf you don't like the descriptive markup API:\n\n``` html\n<header class=\"ws-sticky\">\n    <!-- ... -->\n</header>\n```\n\nYou can use the JS API:\n\n``` js\n$('header').trigger('wssticky');\n```\n. This is not an IE11 issue, but belongs to the fact, that the focus event is \"normalized\" by webshim, while the select method is not. Therefore the element, which is dispatching the focus event is the native element, while in fact the \"shadowElement\" is focused, you can find some description about this main problem of webshim's abstraction here: http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n\nTo workaround this issue, simply use `getShadowElement`:\n\n``` js\n$(this).getShadowElement().select();\n```\n\nHere is a working fiddle:\n\nhttp://jsfiddle.net/trixta/34e2h09t/8/\n. Thx, I will look into this later this week.\n. Nice work, thx a lot.\n. Thanks!\n. Hi,\n\nactually this is already there, but the way is a little bit different. See [documentation](http://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity) and watch for the part \"Controlling the errormessages of custom errors\".\n\nThere are two examples:\nGeneral message controlled by JS:\nhttp://jsfiddle.net/trixta/2CyEr/\n\nand specific messages controlled by markup:\nhttp://jsfiddle.net/trixta/3A2DF/light/\n\nIsn't this what you need?\n. @aurfon \n\nCan I close this issue?\n. omg, thx. \n. Many thanks for your report and your work. Unfortunatley, I can't take this PR. The true reason for the error is that I have splitted the filereader feature into two parts in version 1.15.1. filereader-xhr and canvas-blob and therefore the module filereader became 'filereader-xhr' somehow my refactoring tool didn't catch the usage there.\n\nAnd no forms and forms-ext do not have a dependency to filereader. This is only a related feature and gets lazyloaded, if requested by markup.\n. @ioquatix \n\nThanks, for your issue your fiddle doesn't really show your issue, because it doesn't a) doesn't include webshim and b) the checkPasswordsMatch is wrapped inside a function and therefore isn't found executed.\n\nI have changed this in this fiddle:\nhttp://jsfiddle.net/trixta/x84bar07/3/ and there it is working in chrome for me.\n\nBut this fiddle isn't really workable x-browser and still has some issues.\n1. Calling native methods:\n   This is explained here: http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n   This means either you use a):\n\n``` js\n$(this).setCustomValidity('message'); // instead of this.setCustomValidity('message');\n```\n\nor b) you use:\n\n``` js\nwebshim.setOptions('extendNative', true);\n```\n\nAlthough option a) is an abstraction I would use a).\n1. Use $.on instead of inline handlers\n\nA fiddle, that shows the code changes is here:\nhttp://jsfiddle.net/trixta/x84bar07/6/\n\n---\n\nBut there are still some errors about your code: \n1. setCustomValidity and 2. code style.\n\nAbout setCustomValidity:\n1. setCustomValidity\na) If you don't use noValidate on your form you need to call it initially (in case it is prefilled) and on input or at least on change\nb) Writing interoberable setCustomValidity code isn't easy. Although you only use one setCustomValidity you always should \"guard\" your calls to not override another setCustomValidity call.\nc) What happens with your code, if someone has used the right password in the second field and adjust the first field? (i.e.: You have to test also a change in the first field)\nd) Especially in case of passwords, a passwordmanager could hook in and there is no input or change event\n1. Code style:\n   Try to create re-usable components, you can do this, by creating hooks inside of your markup.\n\n``` html\n<input data-repeat=\"password\" data-repeat-message=\"The two passwords must match.\" />\n```\n\nHere is a fiddle that, trys to meet every points. (But not 2. d)):\nhttp://jsfiddle.net/trixta/x84bar07/10/\n\nLast but not least, webshim comes with some customValidators, which makes this quite easy:\nhttp://jsfiddle.net/trixta/Ev5G4/light/\n\nPlease let me know wether this helps.\n. Yeah, and sorry for my english ;-)\n. Yeah, I didn't wanted to do too much work here. To get this automatically done you can write something like this:\n\n``` html\n<script>\n    //filereader is lazyLoaded\n    webshim.polyfill('forms');\n    //or with filereader initial loading\n    webshim.polyfill('forms filereader');\n</script>\n<div class=\"ws-custom-file\">\n    <!-- add ws-filereader class to all shimable type=\"file\" inputs -->\n    <input type=\"file\" class=\"ws-filereader\" multiple=\"\" accept=\"image/*\" />\n\n    <!-- button and .ws-file-value for custom filepicker UI -->\n    <button type=\"button\">Browse</button>\n    <span class=\"ws-file-value\">...</span>\n</div>\n```\n\nHope this helps, it is documented at the end of the [filereader documentation](http://afarkas.github.io/webshim/demos/index.html#FileReader) and here is a [filereader demo](http://afarkas.github.io/webshim/demos/demos/filereader/).\n\nHope this helps, also note, that the style of this widget can and should be tweaked to your needs.\n. Thanks, a lot. Could you please make a PR to the master branch? This would help me, to keep everything sync.\n. Thanks!\n. This is simpy my fault, nothing to configure ;-).\n. Hi, \n\npretty sure it's a phantomjs problem. On mac it works like a charm on windows sometimes not so good. Will compile it for you.\n\nThanks\n. Yeah, there were problems in the past and this is simply the failproof solution, with those little files filesize shouldn't matter.\n\nA pro tip: in case you are always using or almost using the ru lang file you can directly include it after the webshim's polyfiller file into your bundled js and you save one http request for a small file.\n. Hi,\n\nUnfortunatley, I can't reproduce this. See here a demo: http://jsfiddle.net/trixta/h249hhyx/.\n\nNormally this happens, if an invalid field is hidden and the invalid event isn't handeld. (i.e. `event.preventDefault()`). Webshim normally automatically handles the invalid event, if a form field was hidden by webshim.\n\nAlthough this is no fix. You can use [`replaceValidationUI`](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-replaceValidationUI) or [`iVal`](http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival) to tell webshim to handle all invalids.\n\nCan you provide a testcase or does the explanation help you?\n. Thx, will look into this today.\n. or, tomorrow. Was a heavy day. Sorry\n. wow,  thanks. Could you please make a PR for the master branch. This actually where I develop and then I do push to gh-pages. It would be a lot simpler for me with the merging.\n. Not yet tested but:\nhttp://afarkas.github.io/webshim/demos/demos/forms.html#Custom-validity\n\n``` js\nwebshim.setOptions('forms', { addValidators: true });\n```\n. @paytonk \nDoes this work with the configuration above? The `data-grouprequired` is none-standard and all none-things have to be configured.\n. Hi,\n\nactually this is already integrated into webshim. Currently, I only haven't added the right feature tests to load it, if it's not supported. Currently this is the test: `Math.imul && Number.MIN_SAFE_INTEGER && Object.is && window.Promise && Promise.all`\n. Fortunatley, this already directly included. There is simply no HTML5 browser, because HTML5 is a living standard.\n\nYou only have to embed the `polyfiller.js` and then call the features you want:\n\n``` js\nwebshim.polyfill('forms forms-ext');\n```\n\nAnd then only the features are loaded in those browsers, which do not support them.\n. Can not confirm this one: http://jsfiddle.net/trixta/gxLjh3hs/\nMaybe you have set the following option, which tells webshim to override the native implementation:\n\n``` js\nwebshim.setOptions('forms-ext', {\n    replaceUI: 'auto'\n});\n```\n. Thx, for this one. Will release a tested stable version, soon.\n. I sorry for not answering. I somehow overlooked this issue. The transformation is indeed a little bit off. But the value is already limited constrained. If someone enters a and it is tranformed to \"0A:00 AM\" this is an invalid value (i.e.: badInput).  What do you expect exactly?\n\nIf someone enters a -> nothing but an error\n. Just changed it. I do not limit it, but in case the user enteres something that doesn't seem to look like a time input, I do not format it and mark the field as invalid. (i.e: validityState.badInput)\n. Sorry for letting you wait so long. Will fix this untill monday.\n. The reason for this is, that turbolinks removes the body element, not only its content and some events are bound to the body. While I can change this in your particular case, there are still other events bound to body, that I can't change this easy. Is there a way to configure  turbolinks to change the content of the body and not the body itself?\n. It is hard to know what is happening there.\n\nWould you like to configured it with:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"calculateWidth\": false\n    }\n});\n```\n\nThis means, that you might need to adjust some small things with css, but it will give you additionally a small speed boost.\n\nIn case you are using JQM you should look into this example:\nhttp://afarkas.github.io/webshim/demos/demos/webforms/jquery-mobile.html\n. To answer this, I really need to see your site. You can also mail me if you want ;-).\n. Thx, I can look into this on saturday.\n. In short no. The types string constraints only the feature test to run, what you want is `replaceUI`option:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: {date: true, range: true, number: 'auto'},\n    types: \"date range number datetime-local\"\n});\n```\n. thx\n. Currently no, I wanted to add this. But type=\"week\" is on the list of maybe removed input types for future versions of html, therefore i wanted to wait for this.\n. Thx.\n. Sorry, for taking so long. Reason for this is that I'm using the native stepUp and stepDown methods. And it seems that Chrome has changed here something. Will look into this this weekend. I think it's a Chrome bug, but maybe they changed the spec again.\n. yeah but I mean the `stepUp` method:\n\n``` js\ndocument.querySelector('input[type=\"number\"]').stepUp(1);\n```\n. Thx, will look into this, this weekend.\n. thx!\n. @simonox \nThx, can you request this change into the master branch instead of gh-pages. So I can fix this issue before the i18n changes, which trigger this issue are applied.\n. Sorry, I only can do one project at a time ;-). Answer is: IE has bugs and therefore I fully re-implement the constraint validation feature.\n. Thx\n. You are so right. I'm a (little bit) embarrassed.\n. Not 100% sure what you want but does this help:\n- http://jsfiddle.net/trixta/ycL0bwns/\n  or this one:\n- http://jsfiddle.net/trixta/puaumsja/\n\nI woul prefer the later. In any case the fieldWrapper option can also consume a function.\n. Yes and no. As we don't have shadowdom we need to influence the styles. And I can't fix this, you can simply fix this your own by adding: \n\n``` css\n.control-label {\n    display: block;\n}\n```\n\nWhich is also better from UX standpoint (larger label to click). See http://jsfiddle.net/9n118znw/5/\n. We can not copy the name attribute, because this would give wrong values to the backend, not validating invisible elements is not standard compliant.\n\nwebshim is coming with a standard compliant validation engine: http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival\n\nConsider to use this instead of jquery-validation.\n. @thejuan \nThe spec you are referring is talking about `type=\"hidden\"`, it does not talk about `display: none`, big difference.\n\nIf you really really want to use jQuery validation, you can do so. There is an option to validate invisible elements too.\n\nBut again, you already have a quite good validation inside of webshim/the native browser implementation. It doesn't make sense to add another script on top of it.\n\nIsn't this easy enough for you? \nhttp://jsfiddle.net/trixta/9859C/embedded/result,html/\n. There are multiple possibilities:\n\n``` js\n//The checkValidiy method return true/false, but also triggers invalid events on all invalid input, which means the validation UI is also invoked\n$('form').checkValidity();\n\n// check whether form has valid elements:\n$('form :invalid').length\n\n//get validity info about a specific element:\nconsole.log($(':invalid').prop('validity'));\n\n//while this is already implemented as a polyfill / it is currently not enforced (chrome doesn't support this yet)\n$('form').is(':invalid');\n```\n\nAlso note: In case you want to do some AJAX things. You don't have to do anything. Just bind to the submit event. As long as a form is invalid the submit event is never fired.\n. In case you want to get the `$('form').is(':invalid')` feature into all browsers you can do this:\n\n``` js\n//has to be run before calling webshim.polyfill\ntry {\nwebshim,bugs.bustedValidity = !$('<fieldset />').is(':valid');\n} catch(e){}\n\nwebshim.polyfill('forms forms-ext');\n```\n\nNote: I will add this feature detect as soon as Chrome has this in its stable version (i.e: 41 supports this).\n. @katzenmayer \nThx, I think I have fixed it in the master branch. I will check later. But you can try your own.\n. This also should be fixed with 1.15.6-RC1.\n. I have fixed this issue. Hope you won't find another one. Also created a new pre-release. Many thanks!\n. Thank you very much!\n. @0gust1 \n\nGood catch, this is definitely the bug. Thank you. Note you can shorten the code by doing \"self-closing\" thing:\n\n``` js\n$('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\" />');\n```\n. thx!\n. Thank you very much!!!\n. jQuery is used to fetch those resources. You can use:\n\n``` js\nwebshim.setOptions('ajax', {\n    crossDomain: true\n});\n```\n. Something you can do:\n1. Seperate jquery + polyfiller.js + your polyfiller initialization code (options + polyfill call) from the rest of your JS and include this package directly in your HTML with a higher priority.\n2. make sure to not call `polyfill` after domready, call it as soon as possible\n3. inline the scripts, which are always downloaded. (you can use this grunt-task: https://github.com/aFarkas/webshim/blob/gh-pages/grunt-tasks/optimize-polyfiller.js (note you can only build from dev not from minified) or you can use this builder: http://afarkas.github.io/webshim/demos/demos/cfgs/builder.html (those tasks give you a new polyfiller.js)\n4. in case you are not using JS apis but only markup apis set `webshim.setOptions('waitReady', false);`\n5. keep in mind `onload` event means nothing to perceived performance\n. In short: you can't type=\"url\" is defined by spec. Either you use type=\"text\" with pattern or you write a script and add http in front of it, if this is missing.\n. Try something like this:\n\n``` html\n<input pattern=\"(https?:\\/\\/)?([\\da-z.-]+).([a-z.]{2,6})([\\/\\w .-])\\/?\" />\n```\n. I think this should fix your problem.\n. You can disable this with the following option:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        noSpinbtn: true\n    }\n});\n```\n. In short: IE8+\n. This is a webcomponents issue, just run this code, with and without webcomponents:\n\n``` html\n<form id=\"form\" class=\"ws-validate\">\n    <input required=\"\"  />\n    <input type=\"submit\" />\n</form>\n<script>\n    $(document).on('special', function(){\n        console.log('document');\n    });\n    $(document.body).on('special', function(){\n        console.log('body');\n    });\n    $('form').on('special', function(){\n        console.log('form');\n    });\n    $('input').eq(0).trigger('special');\n</script>\n```\n. This is by design and [explained here](http://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions). Please read carefully.\n\nThe technical problem here is that if Safari implements a feature, they make it never configurable. This means, if they have an implementation, but this implementation is only partial, you can't fix it using the native API and must write some kind of minimal abstraction layer.\n\nHere is a test for you:\n\n``` js\nObject.getOwnPropertyDescriptor(document.createElement('input'), 'validity') || Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'validity');\n```\n. Please blame apple. The most annoying browser on earth.\n. You can do this:\n\n``` js\nwebshim.bugs.bustedValidity = !('minLength' in document.createElement('input'));\n\nwebshim.polyfill('forms');\n```\n. I can't confirm this.\n\nIf you go to this site:\nhttp://afarkas.github.io/webshim/demos/demos/mediaelement/responsive-mediaelement.html\n\nYou will see, that `https://www.youtube.com/player_api` is not loaded until you run the following code in your console:\n\n``` js\n$('video').eq(0).prop('src', 'http://www.youtube.com/watch?v=H6IrUUDboZo');\n```\n\nMaybe you are using a very old version?\n. While I can see some inconsistence between native error bubble and customized error bubble. I can't see any difference between with `callProp` and `setCustomValidity`.\n\nCould you create a testcase for me?\n. @shefik \n\nCould you try the following things:\n\n``` js\nwebshims.setOptions('ajax', {\n    method: 'GET'\n});\n```\n\nIf above does not work, try the following option:\n\n``` js\nwebshims.setOptions('ajax', {\n    crossDomain: true\n});\n```\n\nCould you also check whether the file is loaded via _POST_ (in case of an error) and if yes, why? Is there a global ajaxSetup setting ajax request to POST or is there something with the server?\n. Try the following instead: `pattern=\"[(]{0,1}[0-9]{3}[)]{0,1}[-\\s.]{0,1}[0-9]{3}[-\\s.]{0,1}[0-9]{4}\"`. HTML5 pattern already transform the string into a regular expression, which must match from start to end.\n. It's there, it is only not part of the feature detection. You can do this:\nhttps://github.com/aFarkas/webshim/issues/499#issuecomment-87378449\n. Thx for all your PRs\n. Everything what thirdender said. Here is a better pattern to be used in conjunction type email:\n\n``` html\n<input type=\"email\" pattern=\".+\\.[a-zA-Z]{2,6}\" />\n```\n. You can build this easily your own. Here is an example:\n\n``` html\n<form novalidate=\"\" class=\"ws-validate\">\n    <fieldset class=\"pseudo-form\">\n\n        <input required  />\n\n        <input type=\"submit\" />\n    </fieldset>\n    <fieldset class=\"pseudo-form\">\n\n        <input required  />\n\n        <input type=\"submit\" />\n    </fieldset>\n</form>\n\n<script>\n    $(function(){\n        $('body').on('click', function(e){\n            var pseudoForm;\n            if(e.target.type == 'submit' && (pseudoForm = $(e.target).closest('.pseudo-form')[0])){\n                var invalids = $('input:invalid, select:invalid, textarea:invalid', pseudoForm);\n                if(invalids.length){\n                    invalids.trigger('updatevalidation');\n                    e.preventDefault();\n                    return false;\n                }\n            }\n        });\n    });\n</script>\n```\n\nAbout the way how ASP.NET is handling these things. In general I think it's just stupid, while it is perfectly fine to use just one action, a form has its own semantics, that is defined by WHATWG or W3C and this should not be changed. Developers should extend HTML not abuse it.\n\nPlease close this issue, if this answers your question.\n. You can also easily change my solution to anything you want. Here is an example using using your `data-validation-group` attribute:\n\n``` html\n<form novalidate=\"\" class=\"ws-validate\">\n    <fieldset>\n\n        <input data-validation-group=\"group-1\" required  />\n\n        <input data-validation-group=\"group-1\" type=\"submit\" />\n    </fieldset>\n    <fieldset>\n\n        <input data-validation-group=\"group-2\" required  />\n\n        <input data-validation-group=\"group-2\" type=\"submit\" />\n    </fieldset>\n</form>\n\n<script>\n    $(function(){\n        $('body').on('click', function(e){\n            var validationGroup;\n            if(e.target.type == 'submit' && (validationGroup = e.target.getAttribute('data-validation-group'))){\n                var filter = '[data-validation-group=\"'+ validationGroup + '\"]:invalid';\n                var invalids = $('input' + filter +', select' + filter +', textarea' + filter);\n                if(invalids.length){\n                    invalids.trigger('updatevalidation');\n                    e.preventDefault();\n                    return false;\n                }\n            }\n        });\n    });\n</script>\n```\n\nIn case you have buttons, that are doing different things HTML5 has added the `form*` attributes (`formtarget`, `formaction`, `formnovalidate` and so on).\n\nSo you can do this without any scripting:\n\n``` html\n<form class=\"ws-validate\">\n    <fieldset>\n        <input required  />\n        <input formnovalidate=\"\" value=\"save\" type=\"submit\" />\n        <input value=\"submit\" type=\"submit\" />\n    </fieldset>\n</form>\n```\n\nBut your request is quite special and therefore you always need to extend it with some little JS. As shown above you can write it pretty general so that you will be able to re-use them in all your ASP.Net projects, but I can't add something, that is only a special case. It's nice that we have an API for this.\n\nAnd about the approach of ASP.NET. This is not busted due to HTML5, it already was against semantics in HTML3.2. \n\nFor example screenreader users can jump from form to form. Making it easy to jump to search form, login form and/or contact form. This feature is busted. \n\nAnother HTML4 feature is, that if you hit enter in a text-ish input the form get's submitted (by clicking the first submitter automatically). I don't know ASP webforms, but in case this might still work \"magically\", they had to re-implement this native feature by script, because the native feature is busted. At least at this point it should have become clear, that every feature that directly hooks into the semantics or extends the behavior of a form element is busted by this approach.\n\nIn general I like technologies, where you write some code and then your HTML/CSS/JS is scaffolded for you, but it has to be made the right way (with standards in mind). Extend it instead of break it!\n. Not sure, what you mean. Normally the errormessage is placed right after the form element and normally the user scrolls the hole viewport. I need an example.\n. This is a very specific feature request. That does not follow the spec, however you can built it your own. Here is how: https://github.com/aFarkas/webshim/issues/148\n. You can try this:\n\n``` css\n.ws-range,\n input[type=\"range\"] {\n    width: 0.61538em;\n    height: 199px;\n}\n```\n\nBut this CSS should be in sync with this js config:\n\n``` js\nwebshim.setOptions('forms-ext', {\n    replaceUI: true\n});\n```\n\n[Demo http://jsfiddle.net/trixta/2v1vmgyx/](http://jsfiddle.net/trixta/2v1vmgyx/)\n. No, but the idea of the inline margin-left/margin-top is that it always tries to center the thumg inside the range. In case you don't want to center it, you can/should use top/left instead:\n\n``` css\n .ws-range-thumb {\n     left: 8px;\n}\n```\n\n[Demo: http://jsfiddle.net/trixta/f6rt1nzw/2/](http://jsfiddle.net/trixta/f6rt1nzw/2/)\n. webshim follows the HTML5 form spec. You have basically 3 options:\n- set all `input[type=\"file\"]` with at least one file to invalid\n- set first  `input[type=\"file\"]` with at least one file to invalid\n- create a hidden ``input[type=\"checkbox\"] and toggle it's validity according to the your group constrain\n\nIt really depends, how/where you want to display the errormessage(s)\n. will fix this sunday.\n. Your problem is mainly described in this chapter:\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\nSearch for:\nno shadowdom: .... Some styles like float or display: none/block are not reflected by the shadowdom ...\n\nand \n\nre-rendering shadowelements:\n...\n\n``` js\n$(document).trigger('updateshadowdom');\n```\n\nPlease close this issue, if this helped.\n. Yeah, reason for this is that the fieldset element itself now also fires an invalid event, if there are invalid elements inside. Additionally also the `:invalid` selector also applies to `fieldset` elements. The same is also true for `form` elements.\n\nWhich is basically a great feature. For example you can do this:\n\n``` css\nform:invalid [type=\"submit\"] { cursor: not-allowed;}\n```\n\nBut I really don't understand, why the semantics of an existing event and an selector is extended, instead of inventing a new one. (This really hurts web compat).\n\nPlease update with my fix.\n. This is fixed in master. I will do an release very soon. For more information:\nhttps://github.com/aFarkas/webshim/issues/527\n. thx\n. Yeah, it seems there was an error with the embedded examples. Just try to use without https. This should work:\nhttp://afarkas.github.io/webshim/demos/demos/forms.html#UI-replaceValidationUI\n. This is explained on http://afarkas.github.io/webshim/demos/demos/forms.html#UI-ival search for \"**Grouping multiple form fields to one validation group**\". Here is a demo: https://jsfiddle.net/trixta/uMA9d/embedded/result/\n\nPlease close if this helps otherwise please provide a testcase.\n. Can you still give me a testcase. I don't really understand what you mean. There is only one bubble visible at the time. What exactly isn't working?\n\nHere is a fiddle to start from:\nhttp://jsfiddle.net/trixta/Xp3Vb/light/\n. Grouping error messages is a special feature of the instant validation. I actually don't know what you expect how the bubble should look like grouped?\n\nYou should also use http instead of https, because the script is linked via http and might not work in Chrome/FF and IE.\n\nIn Safari the bubbles are used to polyfill the browser, what do you expect there? Nothing?\n. I normally solve this (similar how @kraz) in the deploy step. At the time of a deploy a new timestamp is generated and every static asset (js, css, background images, fonts) are referencing these assets through this timestamp. You can see this in action here:\nhttp://www.sos-kinderdorf.de/portal/\n\nHere is an example asset:\nhttp://www.sos-kinderdorf.de/blueprint/1436883923024/css/content.css\n\nBut as you can see, the number can be simply changed to any other number:\nhttp://www.sos-kinderdorf.de/blueprint/121/css/content.css\n\nAbout the `addCacheBuster`: You should be able to use `addCacheBuster` for your purpose.\n\nYou can do this:\n\n``` js\nwebshim.setOptions('addCacheBuster', '?v='+webshim.version);\n```\n. If you pre-define `webshims.formcfg.en`/`webshims.formcfg['en-US']` and `webshims.formcfg['en-GB']` and include this in your JS, than this will be used instead of the included version.\n. Another example:\n\nCreate a file with this content:\n\n``` js\nwebshims.validityMessages['en-CUSTOM'] = {\n    \"typeMismatch\": {\n        \"defaultMessage\": \"Please enter a valid value.\",\n        \"email\": \"Please enter an email address.\",\n        \"url\": \"Please enter a URL.\"\n    },\n    \"badInput\": {\n        \"defaultMessage\": \"Please enter a valid value.\",\n        \"number\": \"Please enter a number.\",\n        \"date\": \"Please enter a date.\",\n        \"time\": \"Please enter a time.\",\n        \"range\": \"Invalid input.\",\n        \"month\": \"Please enter a valid value.\",\n        \"datetime-local\": \"Please enter a datetime.\"\n    },\n    \"rangeUnderflow\": {\n        \"defaultMessage\": \"Value must be greater than or equal to {%min}.\",\n        \"date\": \"Value must be at or after {%min}.\",\n        \"time\": \"Value must be at or after {%min}.\",\n        \"datetime-local\": \"Value must be at or after {%min}.\",\n        \"month\": \"Value must be at or after {%min}.\"\n    },\n    \"rangeOverflow\": {\n        \"defaultMessage\": \"Value must be less than or equal to {%max}.\",\n        \"date\": \"Value must be at or before {%max}.\",\n        \"time\": \"Value must be at or before {%max}.\",\n        \"datetime-local\": \"Value must be at or before {%max}.\",\n        \"month\": \"Value must be at or before {%max}.\"\n    },\n    \"stepMismatch\": \"Invalid input.\",\n    \"tooLong\": \"Please enter at most {%maxlength} character(s). You entered {%valueLen}.\",\n    \"tooShort\": \"Please enter at least {%minlength} character(s). You entered {%valueLen}.\",\n    \"patternMismatch\": \"Invalid input. {%title}\",\n    \"valueMissing\": {\n        \"defaultMessage\": \"Please fill out this field.\",\n        \"checkbox\": \"Please check this box if you want to proceed.\",\n        \"select\": \"Please select an option.\",\n        \"radio\": \"Please select an option.\"\n    }\n};\nwebshims.formcfg['en-CUSTOM'] = {\n    \"numberFormat\": {\n        \".\": \".\",\n        \",\": \",\"\n    },\n    \"numberSigns\": \".\",\n    \"dateSigns\": \"-\",\n    \"timeSigns\": \":. \",\n    \"dFormat\": \"-\",\n    \"patterns\": {\n        \"d\": \"yy-mm-dd\"\n    },\n    \"month\": {\n        \"currentText\": \"This month\"\n    },\n    \"time\": {\n        \"currentText\": \"Now\"\n    },\n    \"date\": {\n        \"closeText\": \"Done\",\n        \"clear\": \"Clear\",\n        \"prevText\": \"Prev\",\n        \"nextText\": \"Next\",\n        \"currentText\": \"Today\",\n        \"monthNames\": [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ],\n        \"monthNamesShort\": [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ],\n        \"dayNames\": [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ],\n        \"dayNamesShort\": [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ],\n        \"dayNamesMin\": [\n            \"Su\",\n            \"Mo\",\n            \"Tu\",\n            \"We\",\n            \"Th\",\n            \"Fr\",\n            \"Sa\"\n        ],\n        \"weekHeader\": \"Wk\",\n        \"firstDay\": 1,\n        \"isRTL\": false,\n        \"showMonthAfterYear\": false,\n        \"yearSuffix\": \"\"\n    }\n};\n```\n\nAdd it after your polyfiller.js. and then call:\n\n``` js\nwebshim.activeLang('en-CUSTOM');\n```\n\nSee also http://afarkas.github.io/webshim/demos/demos/forms.html#Locale-activeLang\n. Are you using the latest version of webshim? I can't reproduce your error:\nhttp://jsfiddle.net/trixta/4p1xq7qf/4/\n\nCould you please provide a testcase.\n. Use `clonePolyfill` and read https://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n. please create a testcase with jsfiddle jsbin or something similar.\n. You should be able to fix it with CSS. The date configurator also uses BS3 and has no problems (without doing anything).\n\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html\n\nYou might also try to disable auto calculation (`calculateWidth: false`) and handle it via CSS.\n. No it doesn't this is by design:\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-dom-abstractions\n\n**no shadowdom:** Webshims lib sometimes has to add additional DOM elements to mimic the UI of HTML5 elements. This can sometimes create differences, between polyfilled and non polyfilled browsers. Webshims lib gives you a method called 'getShadowElement' to access the shadowelement from the native element and a method called 'getNativeElement' to access the native element from the shadowelement. If the element has no shadowelement the element itself is returned.\n\n``` js\n$('input[type=\"date\"]').getShadowElement();\n```\n\nYou can write a mutationobserver for your self if you need to.\n. This is documented:\nhttp://afarkas.github.io/webshim/demos/index.html#Forms-forms-ext\n\ntypes string A white space separated string. Possible values are 'datetime-local range date time number month color' . If one of the listed input types is not supported, Webshim will load the forms-ext API and UI package and implement all types. \ndefault: 'date time range number'\n\nYou can change it to:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    types: 'datetime-local date time range number'\n});\n```\n. Lol, ok I didn't know this ;-). The only thing is that Apple always made more trouble than any other browser. \n\nUnfortunately you can't feature detect this and you need to browser sniff here. You will have to argument the `replaceUI` option.\n\nYou can do so by doing this:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: isSafariMobile()\n});\n```\n\nor this:\n\n``` js\nwebshim.setOptions(\"forms-ext\", {\n    replaceUI: {\n        'datetime-local': isSafariMobile()\n    }\n});\n```\n. @tleunen \n\nThe overrideMessages option is gone. It caused many many problems. I recommend, that you live with the customMessages option in combination with replaceValidationUI or the iVal. \n\nAs an alternative you try something like this:\n\n``` js\nvar overrideMessage = function(){\n    var changeMessage = function(){\n        if(!this.title || $.data(this, 'validationTitle')){\n            $.data(this, 'validationTitle', true);\n            this.title = $(this).getErrorMessage();\n        }\n    };\n\n    $(document).on('changedvaliditystate', function(e){\n        changeMessage.call(e.target);\n    });\n\n    $('input:invalid:not([title]), select:invalid:not([title]), textarea:invalid:not([title])').each(changeMessage);\n};\n```\n. `.day-6` and `.day-0`\n. ```\nwebshim.setOptions({\n    'debug': true,\n    'forms': {\n        replaceValidationUI: true,\n        lazyCustomMessages: true,\n        iVal: {\n            fieldWrapper: '.form_fields__field',\n            errorWrapperClass: 'form_fields__field--has_warning',\n            errorBoxClass: 'form_fields__field_warning'\n        },\n        addValidators: true\n    },\n    'forms-ext': {\n        replaceUI: {number: 'auto'},\n        types: 'number'\n    }\n});\n```\n. Please also note, that webshim is actually deprecated.\n. @eraserqueen \nI will do so. Give me this weekend.\n. ",
    "codler": "Which feature keywords can be used in \"$.webshims.polyfill()\" ?\n. You could write under \"Embedding and configuring the script\". There you describe lightweight but not what \"all\" is.\n. It would be nice if a browser support geolocation but gets an error from getCurrentPosition then the polyfill will try instead.\n. I was thinking of all 3 error types :P\n. Which feature keywords can be used in \"$.webshims.polyfill()\" ?\n. You could write under \"Embedding and configuring the script\". There you describe lightweight but not what \"all\" is.\n. It would be nice if a browser support geolocation but gets an error from getCurrentPosition then the polyfill will try instead.\n. I was thinking of all 3 error types :P\n. ",
    "sarahamandus": "How do I style the widget buttons to be outside my date control? \n\nSo far I have this working:\n\n$.webshims.setOptions(\"forms-ext\", {\n  replaceUI: true,\n  date: {\n    startView: 2\n  }\n});\n\nI need to know how to set the button styles.\n. How do I style the widget buttons to be outside my date control? \n\nSo far I have this working:\n\n$.webshims.setOptions(\"forms-ext\", {\n  replaceUI: true,\n  date: {\n    startView: 2\n  }\n});\n\nI need to know how to set the button styles.\n. ",
    "dcardosods": "How do I disable number input spinner?\n\nThere is an example [here](http://afarkas.github.io/webshim/demos/demos/webforms/3-webforms-widgets.html#number-cfg]), but i don't understand how it was implemented...\n. Thanks for the answer.\nActually I don't know that setting 'disabled' to true, the controls would be disabled.\n. How do I disable number input spinner?\n\nThere is an example [here](http://afarkas.github.io/webshim/demos/demos/webforms/3-webforms-widgets.html#number-cfg]), but i don't understand how it was implemented...\n. Thanks for the answer.\nActually I don't know that setting 'disabled' to true, the controls would be disabled.\n. ",
    "xiel": "-> make replaceUI possible for spinbutton-controlled types\n\nare u still working on this? :)\n. Could you please send a testcase or at least a screenshot? For me everything seems fine with the spinbuttons.\n. how do you insert the forms into your markup?\n\nyou should use eg. .appendPolyfill() - so the polyfills get applied appropriately \n\nor $('.ajax-content-container').updatePolyfill();\n\nother manipulation methods can be found here:\nhttp://afarkas.github.com/webshim/demos/demos/shiv.html\n\ndoes it help?\n. i would prefer a left-aligned navigation, but just my two cents :) \n\n@mreinstein can u provide me an email address, so i can send u the new logo? formats: ai, svg, png\n. -> make replaceUI possible for spinbutton-controlled types\n\nare u still working on this? :)\n. Could you please send a testcase or at least a screenshot? For me everything seems fine with the spinbuttons.\n. how do you insert the forms into your markup?\n\nyou should use eg. .appendPolyfill() - so the polyfills get applied appropriately \n\nor $('.ajax-content-container').updatePolyfill();\n\nother manipulation methods can be found here:\nhttp://afarkas.github.com/webshim/demos/demos/shiv.html\n\ndoes it help?\n. i would prefer a left-aligned navigation, but just my two cents :) \n\n@mreinstein can u provide me an email address, so i can send u the new logo? formats: ai, svg, png\n. ",
    "ZeeAgency": "Oh yeah sure, IE7&8 and FF3 as far as I saw\n. Great, thanks :-)\n\nAbout reproducing :\nI've just re-try on my VM with IE7 with [your demo](http://afarkas.github.com/webshim/demos/demos/webforms.html)\nEven if the first click is hiding the placeholder, it's not focusing it, you can't type anything, you need a second click.\nI made a try with a personal implementation and same thing happened.\nI've also re-try with FF3 and maybe I was wrong, it seems to be working\u2026 I'm not on the same Mac than earlier but I'll retry tomorrow, anyway\u2026\n\nAbout placeholder polyfill :\nLike I said, I tried 4 different jQuery plugins and all of them has at least 1 big default, the [best I saw](https://github.com/mathiasbynens/Placeholder-jQuery-Plugin) was returning the placeholder value when I asked $('#password').val() without filling the field, so I supposed it was \"unvalidatable\" :-) So i know that's not an easy thing to do...\n\nAbout webshim itself :\nYou seem to be alone on this project and honestly I'm pretty impressed on what you did and interested to help on it. I needed and planned to work on something very similar mostly on the form validation part, as far as I saw you made it just like I would do so why re-doing it :-)\nSo, if you have plans/roadmap for the 1.5, count me in and tell me more ;-)\n\nCheers\n. btw, I'm finding the way to load only the placeholder feature. Is it possible without doing $.webshims.polyfill('forms'); ?\n. Oh yeah sure, IE7&8 and FF3 as far as I saw\n. Great, thanks :-)\n\nAbout reproducing :\nI've just re-try on my VM with IE7 with [your demo](http://afarkas.github.com/webshim/demos/demos/webforms.html)\nEven if the first click is hiding the placeholder, it's not focusing it, you can't type anything, you need a second click.\nI made a try with a personal implementation and same thing happened.\nI've also re-try with FF3 and maybe I was wrong, it seems to be working\u2026 I'm not on the same Mac than earlier but I'll retry tomorrow, anyway\u2026\n\nAbout placeholder polyfill :\nLike I said, I tried 4 different jQuery plugins and all of them has at least 1 big default, the [best I saw](https://github.com/mathiasbynens/Placeholder-jQuery-Plugin) was returning the placeholder value when I asked $('#password').val() without filling the field, so I supposed it was \"unvalidatable\" :-) So i know that's not an easy thing to do...\n\nAbout webshim itself :\nYou seem to be alone on this project and honestly I'm pretty impressed on what you did and interested to help on it. I needed and planned to work on something very similar mostly on the form validation part, as far as I saw you made it just like I would do so why re-doing it :-)\nSo, if you have plans/roadmap for the 1.5, count me in and tell me more ;-)\n\nCheers\n. btw, I'm finding the way to load only the placeholder feature. Is it possible without doing $.webshims.polyfill('forms'); ?\n. ",
    "jab": "Oops, just saw how to do this in the [docs](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html), closing. Sorry for the noise!\n. Aw, thanks for the welcoming reply! I'll be on the lookout for patches to contribute, and will spread the word about webshim to my friends. Meanwhile, thanks again and keep up the good work!\n. My pleasure! And your English isn't extremely bad! You get your point across no problem. :) Happy to be able to help.\n\nAs for the title attribute, for the sake of generality I was actually going to ask if it might make sense to append {%title} to every validity message if given. I haven't read the entire spec though, so apologies if this doesn't make sense for other input types.\n\nThanks for the jsfiddle link, neat!\n. Users with high-latency connections suffer with more requests, especially when keep-alive connections (HTTP 1.1) are not possible. For these users, the difference between making 1 request and n requests is significant. The web site I'm developing needs to be optimized for people all over the world, especially those with little or no access to modern browsers and fast networks.\n\nIf webshims lib gets enough uptake, it could be hosted on Microsoft's or Google's CDNs, which have measures in place against DOS attacks. In the meantime, any developers concerned about vulnerability could just choose not to use the feature.\n\nI'd vote for this to be a core feature, but defer to further community discussion as necessary.\n\nThanks for listening. =)\n. looks like modernizr 2 will also support only detecting required features, in case it might make sense to develop this feature in parallel with that:\nhttp://www.modernizr.com/news/\n. Hey Alex, sorry for the late reply, and thanks so much for the tips! I've upgraded to webshims 1.6.0RC3 and incorporated your suggestions [commit](https://github.com/jab/bravenewsoftware.org/commit/1a6f41fa2853debf3c134aaa1f7236dc1b38cfa8). Things are looking much better now all around, except for one small thing I noticed: In Firefox 4, the form is validated before anything is input, so basically it starts out with the email input outlined in red ([example](http://1.bravenewsoftware.appspot.com/)). I can dig into this when I get a chance but feel free to close this ticket in the meantime.\n\nThanks again!\n\nJosh\n. P.S. As far as I know the $('body').fadeIn() is in there just for style's sake, and not to avoid any FOUC (I didn't put it there originally). If you get a chance, I'd love to know what the other problems were you saw in the code. I can probably get rid of that $('body').fadeIn() too.\n. re red outline in firefox, if you save the following in test.html:\n\n```\n<form>\n<input type=\"email\" required placeholder=\"email\" /><input type=\"submit\" value=\"+\" />\n</form>\n```\n\nand open it in firefox, it doesn't get the red outline until you actually enter something in the text input. So something additional in my page must be triggering Firefox's validation before the user enters input. This may or may not be webshims. But the fix for the wrong behavior on my page is not CSS.\n\nThanks for pointing out those nice invalid selectors though, good to know!\n. re fadeIn thing: thanks for the advice about how to do that the right way! I moved all the script to the top like you suggested and decided to just ditch the fadeIn effect, but if I have to add it back I'll do it like you said. As for the script at the bottom, I was just following a recommendation I think the Firefox YSlow plugin made to me years ago, and hadn't tested the differences out. Thanks for the explanation, and I'll certainly report back if I find anything else interesting.\n. re customMessages vs overrideMessages, I chose the latter because it required writing less code. ;) When a library provides two ways of doing the same thing, I usually assume the one where I have to write less code is the preferred way, since presumably it means changing less stuff from its default behavior. If this isn't the case here, would it be possible to make it so you can use customMessages without having to write custom event handlers and binding them to various validation events?\n\nI know the [docs page](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html) says customMessages is less obtrusive, but it doesn't explain why, or if it does I wasn't able to follow it.\n\nThanks!\n. Uh oh, just tested my page out in Chrome 7 and webshims is not rendering the validity messages. Can you take a peek at http://1.bravenewsoftware.appspot.com in Chrome 7 and see if you can reproduce?\n\nMany thanks,\nJosh\n. Hey Alex, sorry for the noise! I had no idea about all that. I only tried Chrome 7 because it was the only old version of Chrome I had lying around on my computer and I figured I'd give it a whirl. It sounds like it makes no sense though to support it. You give lots of good reasons not to fix this, so please don't bother on my account! Sorry if I caused you any trouble!\n. Well, thanks for fixing, and again, definitely don't spend precious time on this kind of thing if it goes against your better instincts. I just noticed it says very clearly on the [demo page](http://afarkas.github.com/webshim/demos/index.html) that Chrome 9.0+ is supported, so a bug submitted for Chrome 7 can very fairly be closed as invalid!\n\nIn other news, I haven't yet had a chance to put any more time into looking into the validation being triggered too early in Firefox 4 or the customMessages vs overrideMessages. Probably any extra time I get to put into webshims in the future will go toward helping with translations and looking at using Modernizr 2's ability to just test for the features you need. Ideally some day there'd just be a webshims API hosted on a CDN which you could use to only request script that tests for and polyfills just the features you need. That would be awesome!\n. Hey Alex, thanks for responding so fast. I starred the Chromium issue you created in case it helps. Just wanted to let you know it's not just a pure Chrome issue though; I can reproduce in Safari 5.0.5 as well ([screenshot](https://img.skitch.com/20110716-p9r9m22a7m3gb6cpejndaa9rt6.jpg)). Can you reproduce in Safari too?\n. As for the workarounds:\n1. I'm not specifying position: relative on the body myself -- you can check my [css](http://www.getlantern.org/static/css/compass/screen.css) or [sass](https://github.com/jab/getlantern.org/blob/master/compass/sass/screen.sass). It's being added I believe by modernizr after the page is loaded. If I set position: static on the body, modernizr still overrides it with position: relative. :\\\n2. I tried simply adding the line $.webshims.setOptions('forms', {replaceValidationUI: true}); right before I call     $.webshims.polyfill('forms'); and it had no effect. Am I doing it wrong?\n\nThanks.\n. Oh, it's the Google Translate widget's fault, I should have known! I was hitting my head against the wall one time a while back with [qTip2](http://craigsworks.com/projects/qtip2/) balloons' mispositioning until I commented out the translate widget. So doubtless webshims isn't the only library affected by this.\n\nI upgraded to the latest revision and it fixed it! ([demo](http://www.getlantern.org/)) Thanks for the great work!\n. btw, found a pretty cool [html5 form demo](http://www.bradshawenterprises.com/tests/formdemo.php) (also demonstrates the [chromium bug](https://bugs.webkit.org/show_bug.cgi?id=54814) -- that guy should use webshims:)\n. > Thanks again, for your bugreport. I have fixed this issue with my latest commit.\n\nWorks now! Thank you for fixing so fast!\n\n> Some informations about the current state of webshims: There were some bigger changes, which aren't crossbrowser testet yet. I try to release a testet version on tuesday.\n\nCool, thanks for the update. Will keep my eyes on it.\n. confirmed, 30b1002 fixed the error and the warning. thanks for the super quick turnaround and great explanation as usual!\n. After upgrading to 1.16.0 I was still able to reproduce this sometimes in Safari. Since this is the only thing I was using webshims for, I decided to ditch webshims in favor of a few lines of js based on http://codepen.io/ngault/pen/PqmyQE, and that's working better for me. (Now I'm free to upgrade to jQuery 3 too.) In case this helps anyone else here.. Oops, just saw how to do this in the [docs](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html), closing. Sorry for the noise!\n. Aw, thanks for the welcoming reply! I'll be on the lookout for patches to contribute, and will spread the word about webshim to my friends. Meanwhile, thanks again and keep up the good work!\n. My pleasure! And your English isn't extremely bad! You get your point across no problem. :) Happy to be able to help.\n\nAs for the title attribute, for the sake of generality I was actually going to ask if it might make sense to append {%title} to every validity message if given. I haven't read the entire spec though, so apologies if this doesn't make sense for other input types.\n\nThanks for the jsfiddle link, neat!\n. Users with high-latency connections suffer with more requests, especially when keep-alive connections (HTTP 1.1) are not possible. For these users, the difference between making 1 request and n requests is significant. The web site I'm developing needs to be optimized for people all over the world, especially those with little or no access to modern browsers and fast networks.\n\nIf webshims lib gets enough uptake, it could be hosted on Microsoft's or Google's CDNs, which have measures in place against DOS attacks. In the meantime, any developers concerned about vulnerability could just choose not to use the feature.\n\nI'd vote for this to be a core feature, but defer to further community discussion as necessary.\n\nThanks for listening. =)\n. looks like modernizr 2 will also support only detecting required features, in case it might make sense to develop this feature in parallel with that:\nhttp://www.modernizr.com/news/\n. Hey Alex, sorry for the late reply, and thanks so much for the tips! I've upgraded to webshims 1.6.0RC3 and incorporated your suggestions [commit](https://github.com/jab/bravenewsoftware.org/commit/1a6f41fa2853debf3c134aaa1f7236dc1b38cfa8). Things are looking much better now all around, except for one small thing I noticed: In Firefox 4, the form is validated before anything is input, so basically it starts out with the email input outlined in red ([example](http://1.bravenewsoftware.appspot.com/)). I can dig into this when I get a chance but feel free to close this ticket in the meantime.\n\nThanks again!\n\nJosh\n. P.S. As far as I know the $('body').fadeIn() is in there just for style's sake, and not to avoid any FOUC (I didn't put it there originally). If you get a chance, I'd love to know what the other problems were you saw in the code. I can probably get rid of that $('body').fadeIn() too.\n. re red outline in firefox, if you save the following in test.html:\n\n```\n<form>\n<input type=\"email\" required placeholder=\"email\" /><input type=\"submit\" value=\"+\" />\n</form>\n```\n\nand open it in firefox, it doesn't get the red outline until you actually enter something in the text input. So something additional in my page must be triggering Firefox's validation before the user enters input. This may or may not be webshims. But the fix for the wrong behavior on my page is not CSS.\n\nThanks for pointing out those nice invalid selectors though, good to know!\n. re fadeIn thing: thanks for the advice about how to do that the right way! I moved all the script to the top like you suggested and decided to just ditch the fadeIn effect, but if I have to add it back I'll do it like you said. As for the script at the bottom, I was just following a recommendation I think the Firefox YSlow plugin made to me years ago, and hadn't tested the differences out. Thanks for the explanation, and I'll certainly report back if I find anything else interesting.\n. re customMessages vs overrideMessages, I chose the latter because it required writing less code. ;) When a library provides two ways of doing the same thing, I usually assume the one where I have to write less code is the preferred way, since presumably it means changing less stuff from its default behavior. If this isn't the case here, would it be possible to make it so you can use customMessages without having to write custom event handlers and binding them to various validation events?\n\nI know the [docs page](http://afarkas.github.com/webshim/demos/demos/webforms/1-webforms-lang-custom-bubble.html) says customMessages is less obtrusive, but it doesn't explain why, or if it does I wasn't able to follow it.\n\nThanks!\n. Uh oh, just tested my page out in Chrome 7 and webshims is not rendering the validity messages. Can you take a peek at http://1.bravenewsoftware.appspot.com in Chrome 7 and see if you can reproduce?\n\nMany thanks,\nJosh\n. Hey Alex, sorry for the noise! I had no idea about all that. I only tried Chrome 7 because it was the only old version of Chrome I had lying around on my computer and I figured I'd give it a whirl. It sounds like it makes no sense though to support it. You give lots of good reasons not to fix this, so please don't bother on my account! Sorry if I caused you any trouble!\n. Well, thanks for fixing, and again, definitely don't spend precious time on this kind of thing if it goes against your better instincts. I just noticed it says very clearly on the [demo page](http://afarkas.github.com/webshim/demos/index.html) that Chrome 9.0+ is supported, so a bug submitted for Chrome 7 can very fairly be closed as invalid!\n\nIn other news, I haven't yet had a chance to put any more time into looking into the validation being triggered too early in Firefox 4 or the customMessages vs overrideMessages. Probably any extra time I get to put into webshims in the future will go toward helping with translations and looking at using Modernizr 2's ability to just test for the features you need. Ideally some day there'd just be a webshims API hosted on a CDN which you could use to only request script that tests for and polyfills just the features you need. That would be awesome!\n. Hey Alex, thanks for responding so fast. I starred the Chromium issue you created in case it helps. Just wanted to let you know it's not just a pure Chrome issue though; I can reproduce in Safari 5.0.5 as well ([screenshot](https://img.skitch.com/20110716-p9r9m22a7m3gb6cpejndaa9rt6.jpg)). Can you reproduce in Safari too?\n. As for the workarounds:\n1. I'm not specifying position: relative on the body myself -- you can check my [css](http://www.getlantern.org/static/css/compass/screen.css) or [sass](https://github.com/jab/getlantern.org/blob/master/compass/sass/screen.sass). It's being added I believe by modernizr after the page is loaded. If I set position: static on the body, modernizr still overrides it with position: relative. :\\\n2. I tried simply adding the line $.webshims.setOptions('forms', {replaceValidationUI: true}); right before I call     $.webshims.polyfill('forms'); and it had no effect. Am I doing it wrong?\n\nThanks.\n. Oh, it's the Google Translate widget's fault, I should have known! I was hitting my head against the wall one time a while back with [qTip2](http://craigsworks.com/projects/qtip2/) balloons' mispositioning until I commented out the translate widget. So doubtless webshims isn't the only library affected by this.\n\nI upgraded to the latest revision and it fixed it! ([demo](http://www.getlantern.org/)) Thanks for the great work!\n. btw, found a pretty cool [html5 form demo](http://www.bradshawenterprises.com/tests/formdemo.php) (also demonstrates the [chromium bug](https://bugs.webkit.org/show_bug.cgi?id=54814) -- that guy should use webshims:)\n. > Thanks again, for your bugreport. I have fixed this issue with my latest commit.\n\nWorks now! Thank you for fixing so fast!\n\n> Some informations about the current state of webshims: There were some bigger changes, which aren't crossbrowser testet yet. I try to release a testet version on tuesday.\n\nCool, thanks for the update. Will keep my eyes on it.\n. confirmed, 30b1002 fixed the error and the warning. thanks for the super quick turnaround and great explanation as usual!\n. After upgrading to 1.16.0 I was still able to reproduce this sometimes in Safari. Since this is the only thing I was using webshims for, I decided to ditch webshims in favor of a few lines of js based on http://codepen.io/ngault/pen/PqmyQE, and that's working better for me. (Now I'm free to upgrade to jQuery 3 too.) In case this helps anyone else here.. ",
    "doubleclickdetroit": "Hi Alex,\n\nI really appreciate the time you've taken to reply. I realize you can't just blindly \"debug\" something you cannot replicated. :) My plan is to spend some time later this evening hosting an example and/or provide a code on jsfiddle.\n\nI will reply again with the links and an explanation later this evening.\n\nThanks again for your help. :)\n- Ben Babics\n\n## \n\nBen Babics\nSent with Sparrow\nOn Wednesday, April 13, 2011 at 10:00 AM, aFarkas wrote: \n\n> Hi,\n> \n> I have tryed to create a testcase using the newest version. And everything works fine. \n> \n> This is my JS inside of the head:\n> \n> <script src=\"../js-webshim/minified/extras/modernizr-1.7.min.js\"></script>\n> \n> <script src=\"yepnope.1.0.1-min.js\"></script>\n> \n> \n> And this is my implementation Code at the bottom (although, I think you shouldn't include this at bottom):\n> \n>  yepnope([\n>  'http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js',\n>  {\n>  load: '../js-webshim/minified/polyfiller.js',\n>  complete: function(){\n>  $.webshims.setOptions('forms', { customMessages: true, textareaPlaceholder: true}); \n>  $.webshims.loader.basePath = \"../js-webshim/minified/shims/\"\n>  //load all defined\n>  //or load only a specific feature with $.webshims.polyfill('feature-name');\n>  $.webshims.polyfill('forms-ext');\n>  }\n>  }\n>  ]);\n> \n> I really need more info (best some code) to help you.\n> \n> cheers\n> alex\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/49#comment_995537\n. I apologize for not dealing with this sooner. I've been busy with a release. Let's close this issue and I will try again with your new release. \n\nSorry again for the inconvenience. \n\nRegards,\nBen Babics\n\nSent from my iPhone\n\nOn May 1, 2011, at 6:22 AM, aFarkasreply@reply.github.com wrote:\n\n> @bbabics\n> I would like to create a new release and want this issue to be fixed. Please could provide a testcase and still can't reproduce this. If you cannot generate a simple testcase, I will close this bug report. You are free to open a new one as soon as you can add more information/ reproducable testcase\n> \n> cheers \n> alex\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/49#comment_1082936\n. Hi Alex,\n\nI really appreciate the time you've taken to reply. I realize you can't just blindly \"debug\" something you cannot replicated. :) My plan is to spend some time later this evening hosting an example and/or provide a code on jsfiddle.\n\nI will reply again with the links and an explanation later this evening.\n\nThanks again for your help. :)\n- Ben Babics\n\n## \n\nBen Babics\nSent with Sparrow\nOn Wednesday, April 13, 2011 at 10:00 AM, aFarkas wrote: \n\n> Hi,\n> \n> I have tryed to create a testcase using the newest version. And everything works fine. \n> \n> This is my JS inside of the head:\n> \n> <script src=\"../js-webshim/minified/extras/modernizr-1.7.min.js\"></script>\n> \n> <script src=\"yepnope.1.0.1-min.js\"></script>\n> \n> \n> And this is my implementation Code at the bottom (although, I think you shouldn't include this at bottom):\n> \n>  yepnope([\n>  'http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js',\n>  {\n>  load: '../js-webshim/minified/polyfiller.js',\n>  complete: function(){\n>  $.webshims.setOptions('forms', { customMessages: true, textareaPlaceholder: true}); \n>  $.webshims.loader.basePath = \"../js-webshim/minified/shims/\"\n>  //load all defined\n>  //or load only a specific feature with $.webshims.polyfill('feature-name');\n>  $.webshims.polyfill('forms-ext');\n>  }\n>  }\n>  ]);\n> \n> I really need more info (best some code) to help you.\n> \n> cheers\n> alex\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/49#comment_995537\n. I apologize for not dealing with this sooner. I've been busy with a release. Let's close this issue and I will try again with your new release. \n\nSorry again for the inconvenience. \n\nRegards,\nBen Babics\n\nSent from my iPhone\n\nOn May 1, 2011, at 6:22 AM, aFarkasreply@reply.github.com wrote:\n\n> @bbabics\n> I would like to create a new release and want this issue to be fixed. Please could provide a testcase and still can't reproduce this. If you cannot generate a simple testcase, I will close this bug report. You are free to open a new one as soon as you can add more information/ reproducable testcase\n> \n> cheers \n> alex\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/49#comment_1082936\n. ",
    "tobaco": "is this still an issue with the changes in jQuery 1.6.1?\n. wow, that was fast!\n\nthanks!\n. is this still an issue with the changes in jQuery 1.6.1?\n. wow, that was fast!\n\nthanks!\n. ",
    "GeekyMonkey": "Hope things are going well.  My project is relying on this before I can release, so if it's not going to be done, then I'm going to have to revert back to jQuery 1.5 and do some rework.  I'd be happy to help you test and fix bugs to get this done, that'd be a more productive use of my time.\n. Great news!  Thanks for the update.\n. I got those changes and applied to my site.  On IE9 it is causing google maps to stop working on my site (I get blank area where map should appear).  I'll try tracking it down and let you know what I find.  Chrome is fine.\n. Got latest as of today and maps problem has gone away.  Thanks for the update.\n. Hope things are going well.  My project is relying on this before I can release, so if it's not going to be done, then I'm going to have to revert back to jQuery 1.5 and do some rework.  I'd be happy to help you test and fix bugs to get this done, that'd be a more productive use of my time.\n. Great news!  Thanks for the update.\n. I got those changes and applied to my site.  On IE9 it is causing google maps to stop working on my site (I get blank area where map should appear).  I'll try tracking it down and let you know what I find.  Chrome is fine.\n. Got latest as of today and maps problem has gone away.  Thanks for the update.\n. ",
    "maletor": "What happened with this one?\n. > What have you done? \n\nTrying to submit form on IE8.\n\n> What are you expecting? \n\nI am expecting the form to be bound by javascript and prevent the default behavior of submitting so that I may submit it via ajax. This worked nicely in webshims 1.8.\n\n> What happened?\n\nThe form (e.g. `<form action=\"#\">`) submits using the default method of GET. \n\n> Are you using a real IE8 or just an IE8mode, in which IE version?\n\nThis is in IE8 mode. jQuery version is 1.7.1.\n. I'm sorry, but I am able to reproduce this on Windows XP's IE8. It is not a problem with IE10's IE8 mode.\n. I can try. All I did was try to use the forms on that demo page from\nWindows XP on IE8 and it failed.\n\nOn Tue, Mar 12, 2013 at 4:31 AM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @maletor https://github.com/maletor and @DanielNillhttps://github.com/DanielNill\n> \n> I really want to fix this issue, but I can not reproduce it. Can you help\n> me?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/216#issuecomment-14770230\n> .\n. What happened with this one?\n. > What have you done? \n\nTrying to submit form on IE8.\n\n> What are you expecting? \n\nI am expecting the form to be bound by javascript and prevent the default behavior of submitting so that I may submit it via ajax. This worked nicely in webshims 1.8.\n\n> What happened?\n\nThe form (e.g. `<form action=\"#\">`) submits using the default method of GET. \n\n> Are you using a real IE8 or just an IE8mode, in which IE version?\n\nThis is in IE8 mode. jQuery version is 1.7.1.\n. I'm sorry, but I am able to reproduce this on Windows XP's IE8. It is not a problem with IE10's IE8 mode.\n. I can try. All I did was try to use the forms on that demo page from\nWindows XP on IE8 and it failed.\n\nOn Tue, Mar 12, 2013 at 4:31 AM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @maletor https://github.com/maletor and @DanielNillhttps://github.com/DanielNill\n> \n> I really want to fix this issue, but I can not reproduce it. Can you help\n> me?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/216#issuecomment-14770230\n> .\n. ",
    "lukeholder": "no problem.\n. no problem.\n. ",
    "abelta": "You are right: the elements I'm trying to validate are not inside a form element but at least Chrome lets you validate any input so I guess the validation should be attached to these input elements as well as the form which would validate as a whole.\nAnyway, I just replaced my webshims with the version you just packed and now I'm getting this error in Firefox:\n\nelem.validity is undefined\n\nwhich I wasn't getting before. It's like the shims aren't loading now or at least not all form functions are being rewritten. BTW, this is the line that rises the error:\n\nif (elem.validity.patternMismatch) { message = $(elem).data('patternmessage') || elem.validationMessage };\n. I'm glad I was of help.\n. Yes, I finally got it working. Thanks!\n. You are right: the elements I'm trying to validate are not inside a form element but at least Chrome lets you validate any input so I guess the validation should be attached to these input elements as well as the form which would validate as a whole.\nAnyway, I just replaced my webshims with the version you just packed and now I'm getting this error in Firefox:\n\nelem.validity is undefined\n\nwhich I wasn't getting before. It's like the shims aren't loading now or at least not all form functions are being rewritten. BTW, this is the line that rises the error:\n\nif (elem.validity.patternMismatch) { message = $(elem).data('patternmessage') || elem.validationMessage };\n. I'm glad I was of help.\n. Yes, I finally got it working. Thanks!\n. ",
    "jebaird": "Alright, I understand. Thanks for taking a look at the pull request.\n. Alright, I understand. Thanks for taking a look at the pull request.\n. ",
    "rbanffy": "Thanks. Answers perfectly.\n\nWould it be wise to do sanitizing without waiting to see what browsers implementing it actually do?\n. Thanks. Answers perfectly.\n\nWould it be wise to do sanitizing without waiting to see what browsers implementing it actually do?\n. ",
    "nnnnathann": "That's what I figured.\n\nThanks so much for this library, and keep up the great work!!\n\nFYI the test passes changing:\n\n`badAria  ? '' : undefined`\nto\n\n``` undefined```\n```\n. That's what I figured.\n\nThanks so much for this library, and keep up the great work!!\n\nFYI the test passes changing:\n\n`badAria  ? '' : undefined`\nto\n\n``` undefined```\n```\n. ",
    "mreinstein": "2 years and no responses from anyone. This doesn't seem to be a problem for the community as far as I can tell. \n. Ah, nevermind about the modernizr customization, I found the link at the bottom of the quick install instructions. I'm still curious about the customized webshim packaging though.\n. @aFarkas  If you could help me understand which polyfillls require which resources in the library, I'd like to take a stab at creating a build customizer, assuming this is something people would find useful. For example I'm only using the form validation shims. I'd like to roll a build without the other assets.\n. @aFarkas ah, that's great! Exactly what I was looking for. If you have any interest in having a more prominent customizer utility, I\"m happy to volunteer taking that logic and whipping up a small interface for it.\n. Agreed on using gruntjs, it's pretty awesome. I have my own custom thing but I'd much rather use grunt. I'm definitely interested in updating the demos and docs. I foresee the cusomizer tool as a part of this. \n\nI think what I'll do is take a look at your build script, and maybe draw inspiration from modernizr' and jquery UI's custom build wizards. \n. These options are currently in the build customization form:\n- es5\n- canvas\n- forms/forms-ext\n- mediaelement\n- json-storage\n- geolocation\n- details\n\nIs there a way for me to correlate the javascript files that must be included for each checked option? I looked at the ant file in build.xml but couldnt determine the dependencies to build polyfiller.js based on the above options. It looks like it packages everything with the WebExtlib target. Is there a web service that you're using elsewhere to customize what gets included? \n. based on the form behavior I'm assuming that the only dependency in the above options is\n- geolocation _requires_ json-storage\n. @aFarkas \n\n`I would try to write a simple version of a new webshims builder next week. Also look into the builder + the polyfiller.js script`\n\nI'm not sure what you mean. Are you saying that you're planning to write a simple version of webshims builder, or are you saying I should make an attempt at building one? I'm happy to do this ( I have allocated time for it) but I'm not sure from your comment if you're saying you're already working on this, or inviting me to. :)\n. @aFarkas  It seems that I missed your last 2 commits, and you're already working on this. :) Is there anything you'd like help with related to this builder/customizer? Love the grunt usage btw.\n. shims/filereader.js MIT https://github.com/Jahdrien/FileReader\n. shims/es5.js MIT https://github.com/280north/narwhal\nshims/json-storage.js MIT https://gist.github.com/remy/350433\n. shims/swfmini.js MIT https://code.google.com/p/swfobject/\nshims/track.js  captionator BSD 2 clause https://github.com/cgiffard/Captionator\n. shims/forms-picker.js takes parts of jquery ui  MIT http://jqueryui.com\nshims/form-validators.js **UNKNOWN LICENSE** takes parts of code snippets from https://sites.google.com/site/abapexamples/javascript/luhn-validation \n. shims/color-picker.js MIT http://johndyer.name/post/2007/09/PhotoShop-like-JavaScript-Color-Picker.aspx\n. That should be all of them. @aFarkas do you see any that I missed?\n. It seems to be gaining quite a bit of traction, lots of supported components: \n\nhttps://github.com/component/component/wiki/Components\n. > Does it have an advantage over bower?\n> I think at the moment, probably not. Bower and component.io have very different goals. \n\nBower is meant to provide a repository to full libraries, so things like jquery, it's plugins, modernizr, etc would go into bower as-is. \n\ncomponent.io has much more ambitious goals; to break up large monolithic libraries into their subcomponents. So the idea is that front end libraries could be structured more like node modules; small pieces with clear dependencies. If your code only uses 6 functions from jquery, you'd only pull in those 6 relevant modules by declaring them as dependencies the way npm's package.json file does.\n\n> Can it handle Modernizr tests?\n\nI think the biggest weakness of component.io in it's current form is that it depends on large projects being broken up into pieces and that hasn't happened. yet.\n. Ah ok. I guess it's not really a big deal since I usually just have the full modernizr library present anyway. Thanks for the clarification.\n. nice! \n. @joeybaker do you have an example of how to invoke this library via browserify? I'm trying to do this but not having much luck so far.\n. @joeybaker thanks for writing this up. I'm wondering how modernizr is installed. It looks like it's being required like a normal npm module. Are you using 2 package managers in your app for frontend? (Bower and npm?) I messed around with https://github.com/jnordberg/browsernizr but it doesnt seem to work.\n. Do you have a sample repo I could take a look at? I must be missing something, maybe it's not seeing the path layout of the project. \n\n `jquery` and `modernizr` both look like they're being required as npm modules given the syntax. But you mentioned using the modernizr build that ships with `webshim`. I expected the require for puling  in `modernizr` to look more like the require you have for `polyfiller` since they are both relative directories.\n. Thanks man, that helps! I'll see if I can get this working now.\n. @joeybaker I'm running into a few problems. In your code snippet you have `require('./lib/polyfiller.js')`  I'm assuming this code snippet is from the file `js/main.js`. It references `lib/polyfiller.js` but there's no `js/lib/polyfiller.js in the tree.\n\n@joeybaker  I've created a public repo to represent a bare-bones webshims and browserify integration, using the bits of our conversation from above. Would you be willing to take a look?  https://github.com/mreinstein/webshim-browserify-example\n. happy to help, this library rocks :)\n. Yeah I was able to use this feature successfully in my project by reading the source. It works great!\n\nI'll see if I can find some time today to write up a bit of documentation on using the API.\n. @AMA3 love the idea. @aFarkas what do you think? I'm happy to help with submitting a build to cdnjs for 1.11.3. We'd probably need to do some kind of uglify step on this before being able to package it, as per the requirements outlined here: https://github.com/cdnjs/cdnjs#pull-requests-steps\n. @aFarkas sorry this took so long. It's a rough 1st pass but better than nothing I think. Let me know if you'd like me to make any changes.\n. nice looking logo!  One question: I noticed that the repo is actually named \"webshim\", but some of the docs and the logo calls its \"webshims\". Very minor, but it would be nice to standardize on one of them. How would you feel about calling it webshim, since it's the repo name? Probably more important to maintain that than the other names.\n. Also in terms of style, I'm looking at 2 nice doc sites:\n\nhttp://component.io/component/dom\n\nhttp://backbonejs.org\n\nI think either of these would provide a really nice starting point for improving the doc structure/presentation.\n\nthoughts? care to weigh in on style preferences?\n. reinstein.mike at gmail\n. @aFarkas do you have a twitter account? I was thinking in the docs I'd mention that people could tweet bugs to you if they want to.\n. @aFarkas  @xiel  Here's the initial style/format that I've got so far, using backbone's documentation as a starting point. Is this acceptable? I want to get feedback on this style before I pour a bunch of time into this.\n\n![screen shot 2013-10-31 at 08 52 40](https://f.cloud.github.com/assets/718067/1447297/d2b9661a-4244-11e3-9bd4-bf47202d721d.png)\n. @aFarkas I've been working on the documentation some more. One thing that strikes me: there is a _lot_ of text on the landing page. It's a lot to read to get started.\n\nIf we limited the up-front reading to the basic use cases and moved the sophisticated explanations and examples elsewhere, I think it'd make the library more approachable. Maybe we could collect the more advanced usage examples in another repo or place, like webshim-cookbook? What do you think?\n. @aFarkas I'm curious about this sentence from the docs:\n\n> Due to the fact that we cannot extend accessors of elements in all browsers, we always use jQuery as an extension-wrapper.\n\nCan you elaborate on this a bit more? I don't understand. :(\n. @aFarkas I've got an initial version of the refactored docs ready for review. If you checkout the `doc-refactor` branch you'll see my changes.\n\nKnown issues:\n- examples should be consolidated somewhere so that's easy to browse all of them\n- some of the code examples overflow the margin and look odd\n\nI'm going to wait until I hear some feedback from you and get your thoughts on the current work I've done before I invest more time in this.\n\nthanks!\n. looks good!\n. The reasoning behind this is all the other options are accessible via  setOptions so for the sake of consistency this would be nice.\n. @aFarkas awesome! One question; would it be better to leave the old `.debug` capability in place, to prevent it being a breaking change? Maybe for now we just spit out a console warning when `.debug` is referenced, and update all the docs to only show the new way (via `.setOptions`) this way it follows semver a little more closely (I wouldn't expect an update from 1.11.2 to 1.11.3 to break the existing api.)\n. the changelog doesn't have details for 1.11.4, 1.11.5, 1.11.6\n. @aFarkas are these going to make it into https://github.com/aFarkas/webshim/blob/gh-pages/changelog.md ? My original thinking with creating changelog.md is there'd be one place to see all the changes for the public releases. If we skip versions that's no problem (i.e., going from 1.11.3 -> 1.11.6) but it'd still be nice to have one consistent place where the changelog is located.\n. @aFarkas  the changes looks good. I take it tha `$.webshims`will be deprecated anyways, and `webshim.polyfill` is the new recommended way? If no one has started using `webshims.polyfill` yet, maybe we could name with `webshim.polyfill` instead? My thoughts are that your github repo is already named webshim. \n. > Btw. I want to move the new doc as soon as possible into the master-branch. I really like it. \n\nGlad to hear it! It took a long time. I think the biggest remaining task is to collect _all_ the usage examples somewhere, and have an examples link from the documentation page. Assuming this sounds good I'll come up with another mockup for that.\n. wow, great write-up, thanks Alexander! I'll add notes inline to hopefully clarify some of the things I mentioned.\n\n> Drop jQuery and Modernizr\n> Drop IE8 Support\n> Use defineProperty instead of the current solution $.prop proxying\n> MutationObserver (and other techniques) instead of the current \n>     solution $.updatePolyfill,  $.appendPolyfill\n> Development and documentation have to be done parallel\n\nAll great ideas IMO! :)\n\n>  \"I dont need to dynamically load my shims over the internet.\" What do you mean here \n\nwebshim expects to load things at run time, based on the capabilities of the browser. This is complicated in production, where the code goes through an optimization pipleine (minification, serving assets from a CDN, etc.) \n\nIn my experience, the most heavy use of bandwidth on production sites (desktop and mobile) are images. 2-3 images on a page outweigh all of the combined, minified, compressed javascript by a lot. Because of this, I think serving optimized code bundles for my specific user agent is overkill.  The download time difference isn't that significant because the \"elephant in the room\" are the images. It results in much simpler run time logic. It might even be more performant to have a bundled pile of javascript code that is fetched all at once, rather than load, check capabilities, and load the rest. It means 1 request instead of having to do 2 in series. \n\n> How would adopting commonjs/AMD/UMD change this exactly?\n\nI'd prefer that any polyfill doesn't declare its own module loading strategy, and instead uses the facilities in the project. This differs from project to project. I've worked on some projects that use requireJS, some that use browserify, and on the old fashioned javascript code that puts everything in the global namespace. They pretty much all have their own loading strategy, but webshim defines it's own. I think removing this would ease integration and simplify the project architecture.\n\n> How would a project setup look like?\n\nI'd love to see webshim split into several (perhaps dozens) of tiny modules. Each would be responsible for doing just one thing, and would be published on npm. They'd use UMD, so regardless of whether your project is commonjs, amd, or window globals, the modules would be usable and interoperable.\n\nThe first step would be figuring out how to decompose webshim into these small pieces. For example, could form support be split up? If I wanted to only shim the required attribute on form elements, perhaps that could be one module. Perhaps the pattern attribute could be another module. Maybe both of those modules rely on several other common modules related to form checking/processing. The nice thing about this approach is you can pick and choose various pieces of webshim and include only the features relevant to your app. It suspect it would also make maintaining the app easier because small modules that do one thing are much easier to replace, improve, document, etc.\n. > I prefer that Webshim NOT require npm\n\n@AMA3 I think you misunderstand. No one is saying we should require npm to **use** webshim, only to build it from source. Webshim should be comprised of small components, each handling one thing. We can then publish those modules on npm for use individually, or you can download a distro off of the main webshim website.\n\n> I'd also like Webshim to never drop support for IE6 or any outdated browser. \n\nI think supporting old browsers is fine, but there's also a cutoff point where it becomes too much baggage to support. I think the right way to do this is to do something like jquery does; keep older browser support in 1.x, and have a leaner 2.x branch that supports newer browsers but is much smaller.\n\n> The whole point of a polyfill is support the dinosaurs.\n\nThe purpose of polyfilling is to support a feature using the native specification for **whatever browsers your audience uses.**\n. >  I think Webshim already solves that problem by conditionally loading only the necessary polyfills, no separate versions a la jQuery 1.9/2.0 required\n\nYes, that's true. My problem with this approach is two-fold:\n1. it re-invents a module format that is similar to an existing pattern (requirejs/amd)\n2. it's dictating how my apps load. webshim works great if I don't use requirejs or browserify, etc. But if I do use those module loading strategies, I now have to deal with webshim's separate loader. Makes things like optimization tough. \n\nI'm not the maintainer and it's not my call but I want to see webshim move away from being a large monolithic package. It's designed the way jquery was 8 years ago. Not to say that's bad, but we shouldn't build apps that way any more. Things like es6 module loading/browserify/requirejs are a testament to this.  I want this library to remain relevant into the future and I think this simplication/modularization is one way to make the package more useful in modern web development.\n\nWebshim is an amazing polyfill library, but it's value comes from the quality of the polyfills, **not** the plumbing it uses to load itself into memory. I want to see a way to modularize it into small, re-usable pieces, each of which do one thing well.\n. > Webshim 2.x is really something for 2015. Maybe I will start earlier, but this won't be stable. \n\nI'm not implying any urgency or intend to push a schedule. Just wanted to collect some thoughts on what a 2.x _could_ look like, and give feedback on what I'd personally love to see from my own selfish perspective. :)\n\n> webshim 1.x is developed with modules in mind\n\nIt was also developed before there was a viable mainstream module system. Now that there are several (es6 modules, commonjs, amd) would you consider moving to one/some of those? requirejs is already very similar to your strategy.\n\n>  This is something you can't blame webshim for.\n\nI definitely don't mean to imply any blame, at all. Webshim was created before several of these semi-standards were developed. I think it's a really clever system. \n\n> Develop in small pieces and then concat everything into one big file is just a bad \n> performance workaround by most build systems\n\nI used to think that too, which is why requirejs/AMD seemed more appealing at first. The idea that my dependencies load at run time as needed is appealing on the surface. But for most production web sites, the total download of images dwarfs the javascript payload. Having a fancy dependency loader that pulls in modules at runtime is overkill when a site has 600kb of image data and 40kb of compressed, minified javascript. In that case, it's far better to just load the extra data up front, even if half of it (20kb?) isn't even used.\n\n> but this doesn't mean, that it doesn't work with amd/commonjs, it's simply just works side by side.\n> And it works better how it is done now, than leaving it to the normal r.js optimizer for example.\n\nyes, r.js is a pain, but don't you think having to deal with 2 side-by-side loader strategies is kind of painful? Webshim's loader is well designed but I still have to deal with it, and it's solving a problem that I don't have. I don't need all of that infrastructure to conditionally load 40kb of javascript, even on a mobile experience. requirejs and webshim both have opinions about the best loading strategy and I just have to live with them or rip out the guts to work with my stuff.\n. @aFarkas just wanted to add I really admire all the work you've put into this library. It's people like you that keep the web running. I'm sure whatever you decide in terms of architecture/changes will be an improvement either way. Just giving my thoughts from a very limited perspective.\n. That's what I was thinking too. I've run into similar problems with integration testing; you have to wait for the validation logic to run which happens asynchronously.\n. @doits \n\n> But now comes the weird part: I run a few tests, sometimes it worked, sometimes webshim was again skipped\n\nYou're likely running into a race condition; sometimes the additional time spent waiting is enough, and sometimes it's not. It's possible that after a few attempts, the browser is caching stuff internally which makes the wait time decrease, which causes the tests to fail. try putting a manual sleep in there, and wait for 100ms. do you get consistent results if you wait longer?\n. did you read the documentation?\n\nhttp://afarkas.github.io/webshim/demos/index.html#FileReader\n\nIf that doesn't work, re-open the ticket and describe the error(s) please.\n. >  that isn't clear in the very limited documentation.\n\npull requests welcome! ;)\n\nIt seems pretty clear to me if you at least read the docs. It's very near the top under \"configuration\" \n\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-configuration\n. and I will repeat one last time, pull requests welcome. If you have a suggestion for how to improve the docs, we will be happy to update them with more details. Simply complaining that the docs aren't good isn't constructive.\n. @nlenkowski agreed, that is weird. We should create another release that includes these features. \n\n@aFarkas shall we bump the version to 1.13.0? \n. I would definitely like to figure out how to make webshim run in jsfiddle. that would be a good step towards building several dozen (maybe hundred) examples and link them to the documentation.\n. @aFarkas would you be able to provide a minimal webshim bootstrap demo in jsfiddle to get this started? I can spend some time expanding various demos for each feature.\n. yikes, 80kb for a context menu shim...\n. 2 years and no responses from anyone. This doesn't seem to be a problem for the community as far as I can tell. \n. Ah, nevermind about the modernizr customization, I found the link at the bottom of the quick install instructions. I'm still curious about the customized webshim packaging though.\n. @aFarkas  If you could help me understand which polyfillls require which resources in the library, I'd like to take a stab at creating a build customizer, assuming this is something people would find useful. For example I'm only using the form validation shims. I'd like to roll a build without the other assets.\n. @aFarkas ah, that's great! Exactly what I was looking for. If you have any interest in having a more prominent customizer utility, I\"m happy to volunteer taking that logic and whipping up a small interface for it.\n. Agreed on using gruntjs, it's pretty awesome. I have my own custom thing but I'd much rather use grunt. I'm definitely interested in updating the demos and docs. I foresee the cusomizer tool as a part of this. \n\nI think what I'll do is take a look at your build script, and maybe draw inspiration from modernizr' and jquery UI's custom build wizards. \n. These options are currently in the build customization form:\n- es5\n- canvas\n- forms/forms-ext\n- mediaelement\n- json-storage\n- geolocation\n- details\n\nIs there a way for me to correlate the javascript files that must be included for each checked option? I looked at the ant file in build.xml but couldnt determine the dependencies to build polyfiller.js based on the above options. It looks like it packages everything with the WebExtlib target. Is there a web service that you're using elsewhere to customize what gets included? \n. based on the form behavior I'm assuming that the only dependency in the above options is\n- geolocation _requires_ json-storage\n. @aFarkas \n\n`I would try to write a simple version of a new webshims builder next week. Also look into the builder + the polyfiller.js script`\n\nI'm not sure what you mean. Are you saying that you're planning to write a simple version of webshims builder, or are you saying I should make an attempt at building one? I'm happy to do this ( I have allocated time for it) but I'm not sure from your comment if you're saying you're already working on this, or inviting me to. :)\n. @aFarkas  It seems that I missed your last 2 commits, and you're already working on this. :) Is there anything you'd like help with related to this builder/customizer? Love the grunt usage btw.\n. shims/filereader.js MIT https://github.com/Jahdrien/FileReader\n. shims/es5.js MIT https://github.com/280north/narwhal\nshims/json-storage.js MIT https://gist.github.com/remy/350433\n. shims/swfmini.js MIT https://code.google.com/p/swfobject/\nshims/track.js  captionator BSD 2 clause https://github.com/cgiffard/Captionator\n. shims/forms-picker.js takes parts of jquery ui  MIT http://jqueryui.com\nshims/form-validators.js **UNKNOWN LICENSE** takes parts of code snippets from https://sites.google.com/site/abapexamples/javascript/luhn-validation \n. shims/color-picker.js MIT http://johndyer.name/post/2007/09/PhotoShop-like-JavaScript-Color-Picker.aspx\n. That should be all of them. @aFarkas do you see any that I missed?\n. It seems to be gaining quite a bit of traction, lots of supported components: \n\nhttps://github.com/component/component/wiki/Components\n. > Does it have an advantage over bower?\n> I think at the moment, probably not. Bower and component.io have very different goals. \n\nBower is meant to provide a repository to full libraries, so things like jquery, it's plugins, modernizr, etc would go into bower as-is. \n\ncomponent.io has much more ambitious goals; to break up large monolithic libraries into their subcomponents. So the idea is that front end libraries could be structured more like node modules; small pieces with clear dependencies. If your code only uses 6 functions from jquery, you'd only pull in those 6 relevant modules by declaring them as dependencies the way npm's package.json file does.\n\n> Can it handle Modernizr tests?\n\nI think the biggest weakness of component.io in it's current form is that it depends on large projects being broken up into pieces and that hasn't happened. yet.\n. Ah ok. I guess it's not really a big deal since I usually just have the full modernizr library present anyway. Thanks for the clarification.\n. nice! \n. @joeybaker do you have an example of how to invoke this library via browserify? I'm trying to do this but not having much luck so far.\n. @joeybaker thanks for writing this up. I'm wondering how modernizr is installed. It looks like it's being required like a normal npm module. Are you using 2 package managers in your app for frontend? (Bower and npm?) I messed around with https://github.com/jnordberg/browsernizr but it doesnt seem to work.\n. Do you have a sample repo I could take a look at? I must be missing something, maybe it's not seeing the path layout of the project. \n\n `jquery` and `modernizr` both look like they're being required as npm modules given the syntax. But you mentioned using the modernizr build that ships with `webshim`. I expected the require for puling  in `modernizr` to look more like the require you have for `polyfiller` since they are both relative directories.\n. Thanks man, that helps! I'll see if I can get this working now.\n. @joeybaker I'm running into a few problems. In your code snippet you have `require('./lib/polyfiller.js')`  I'm assuming this code snippet is from the file `js/main.js`. It references `lib/polyfiller.js` but there's no `js/lib/polyfiller.js in the tree.\n\n@joeybaker  I've created a public repo to represent a bare-bones webshims and browserify integration, using the bits of our conversation from above. Would you be willing to take a look?  https://github.com/mreinstein/webshim-browserify-example\n. happy to help, this library rocks :)\n. Yeah I was able to use this feature successfully in my project by reading the source. It works great!\n\nI'll see if I can find some time today to write up a bit of documentation on using the API.\n. @AMA3 love the idea. @aFarkas what do you think? I'm happy to help with submitting a build to cdnjs for 1.11.3. We'd probably need to do some kind of uglify step on this before being able to package it, as per the requirements outlined here: https://github.com/cdnjs/cdnjs#pull-requests-steps\n. @aFarkas sorry this took so long. It's a rough 1st pass but better than nothing I think. Let me know if you'd like me to make any changes.\n. nice looking logo!  One question: I noticed that the repo is actually named \"webshim\", but some of the docs and the logo calls its \"webshims\". Very minor, but it would be nice to standardize on one of them. How would you feel about calling it webshim, since it's the repo name? Probably more important to maintain that than the other names.\n. Also in terms of style, I'm looking at 2 nice doc sites:\n\nhttp://component.io/component/dom\n\nhttp://backbonejs.org\n\nI think either of these would provide a really nice starting point for improving the doc structure/presentation.\n\nthoughts? care to weigh in on style preferences?\n. reinstein.mike at gmail\n. @aFarkas do you have a twitter account? I was thinking in the docs I'd mention that people could tweet bugs to you if they want to.\n. @aFarkas  @xiel  Here's the initial style/format that I've got so far, using backbone's documentation as a starting point. Is this acceptable? I want to get feedback on this style before I pour a bunch of time into this.\n\n![screen shot 2013-10-31 at 08 52 40](https://f.cloud.github.com/assets/718067/1447297/d2b9661a-4244-11e3-9bd4-bf47202d721d.png)\n. @aFarkas I've been working on the documentation some more. One thing that strikes me: there is a _lot_ of text on the landing page. It's a lot to read to get started.\n\nIf we limited the up-front reading to the basic use cases and moved the sophisticated explanations and examples elsewhere, I think it'd make the library more approachable. Maybe we could collect the more advanced usage examples in another repo or place, like webshim-cookbook? What do you think?\n. @aFarkas I'm curious about this sentence from the docs:\n\n> Due to the fact that we cannot extend accessors of elements in all browsers, we always use jQuery as an extension-wrapper.\n\nCan you elaborate on this a bit more? I don't understand. :(\n. @aFarkas I've got an initial version of the refactored docs ready for review. If you checkout the `doc-refactor` branch you'll see my changes.\n\nKnown issues:\n- examples should be consolidated somewhere so that's easy to browse all of them\n- some of the code examples overflow the margin and look odd\n\nI'm going to wait until I hear some feedback from you and get your thoughts on the current work I've done before I invest more time in this.\n\nthanks!\n. looks good!\n. The reasoning behind this is all the other options are accessible via  setOptions so for the sake of consistency this would be nice.\n. @aFarkas awesome! One question; would it be better to leave the old `.debug` capability in place, to prevent it being a breaking change? Maybe for now we just spit out a console warning when `.debug` is referenced, and update all the docs to only show the new way (via `.setOptions`) this way it follows semver a little more closely (I wouldn't expect an update from 1.11.2 to 1.11.3 to break the existing api.)\n. the changelog doesn't have details for 1.11.4, 1.11.5, 1.11.6\n. @aFarkas are these going to make it into https://github.com/aFarkas/webshim/blob/gh-pages/changelog.md ? My original thinking with creating changelog.md is there'd be one place to see all the changes for the public releases. If we skip versions that's no problem (i.e., going from 1.11.3 -> 1.11.6) but it'd still be nice to have one consistent place where the changelog is located.\n. @aFarkas  the changes looks good. I take it tha `$.webshims`will be deprecated anyways, and `webshim.polyfill` is the new recommended way? If no one has started using `webshims.polyfill` yet, maybe we could name with `webshim.polyfill` instead? My thoughts are that your github repo is already named webshim. \n. > Btw. I want to move the new doc as soon as possible into the master-branch. I really like it. \n\nGlad to hear it! It took a long time. I think the biggest remaining task is to collect _all_ the usage examples somewhere, and have an examples link from the documentation page. Assuming this sounds good I'll come up with another mockup for that.\n. wow, great write-up, thanks Alexander! I'll add notes inline to hopefully clarify some of the things I mentioned.\n\n> Drop jQuery and Modernizr\n> Drop IE8 Support\n> Use defineProperty instead of the current solution $.prop proxying\n> MutationObserver (and other techniques) instead of the current \n>     solution $.updatePolyfill,  $.appendPolyfill\n> Development and documentation have to be done parallel\n\nAll great ideas IMO! :)\n\n>  \"I dont need to dynamically load my shims over the internet.\" What do you mean here \n\nwebshim expects to load things at run time, based on the capabilities of the browser. This is complicated in production, where the code goes through an optimization pipleine (minification, serving assets from a CDN, etc.) \n\nIn my experience, the most heavy use of bandwidth on production sites (desktop and mobile) are images. 2-3 images on a page outweigh all of the combined, minified, compressed javascript by a lot. Because of this, I think serving optimized code bundles for my specific user agent is overkill.  The download time difference isn't that significant because the \"elephant in the room\" are the images. It results in much simpler run time logic. It might even be more performant to have a bundled pile of javascript code that is fetched all at once, rather than load, check capabilities, and load the rest. It means 1 request instead of having to do 2 in series. \n\n> How would adopting commonjs/AMD/UMD change this exactly?\n\nI'd prefer that any polyfill doesn't declare its own module loading strategy, and instead uses the facilities in the project. This differs from project to project. I've worked on some projects that use requireJS, some that use browserify, and on the old fashioned javascript code that puts everything in the global namespace. They pretty much all have their own loading strategy, but webshim defines it's own. I think removing this would ease integration and simplify the project architecture.\n\n> How would a project setup look like?\n\nI'd love to see webshim split into several (perhaps dozens) of tiny modules. Each would be responsible for doing just one thing, and would be published on npm. They'd use UMD, so regardless of whether your project is commonjs, amd, or window globals, the modules would be usable and interoperable.\n\nThe first step would be figuring out how to decompose webshim into these small pieces. For example, could form support be split up? If I wanted to only shim the required attribute on form elements, perhaps that could be one module. Perhaps the pattern attribute could be another module. Maybe both of those modules rely on several other common modules related to form checking/processing. The nice thing about this approach is you can pick and choose various pieces of webshim and include only the features relevant to your app. It suspect it would also make maintaining the app easier because small modules that do one thing are much easier to replace, improve, document, etc.\n. > I prefer that Webshim NOT require npm\n\n@AMA3 I think you misunderstand. No one is saying we should require npm to **use** webshim, only to build it from source. Webshim should be comprised of small components, each handling one thing. We can then publish those modules on npm for use individually, or you can download a distro off of the main webshim website.\n\n> I'd also like Webshim to never drop support for IE6 or any outdated browser. \n\nI think supporting old browsers is fine, but there's also a cutoff point where it becomes too much baggage to support. I think the right way to do this is to do something like jquery does; keep older browser support in 1.x, and have a leaner 2.x branch that supports newer browsers but is much smaller.\n\n> The whole point of a polyfill is support the dinosaurs.\n\nThe purpose of polyfilling is to support a feature using the native specification for **whatever browsers your audience uses.**\n. >  I think Webshim already solves that problem by conditionally loading only the necessary polyfills, no separate versions a la jQuery 1.9/2.0 required\n\nYes, that's true. My problem with this approach is two-fold:\n1. it re-invents a module format that is similar to an existing pattern (requirejs/amd)\n2. it's dictating how my apps load. webshim works great if I don't use requirejs or browserify, etc. But if I do use those module loading strategies, I now have to deal with webshim's separate loader. Makes things like optimization tough. \n\nI'm not the maintainer and it's not my call but I want to see webshim move away from being a large monolithic package. It's designed the way jquery was 8 years ago. Not to say that's bad, but we shouldn't build apps that way any more. Things like es6 module loading/browserify/requirejs are a testament to this.  I want this library to remain relevant into the future and I think this simplication/modularization is one way to make the package more useful in modern web development.\n\nWebshim is an amazing polyfill library, but it's value comes from the quality of the polyfills, **not** the plumbing it uses to load itself into memory. I want to see a way to modularize it into small, re-usable pieces, each of which do one thing well.\n. > Webshim 2.x is really something for 2015. Maybe I will start earlier, but this won't be stable. \n\nI'm not implying any urgency or intend to push a schedule. Just wanted to collect some thoughts on what a 2.x _could_ look like, and give feedback on what I'd personally love to see from my own selfish perspective. :)\n\n> webshim 1.x is developed with modules in mind\n\nIt was also developed before there was a viable mainstream module system. Now that there are several (es6 modules, commonjs, amd) would you consider moving to one/some of those? requirejs is already very similar to your strategy.\n\n>  This is something you can't blame webshim for.\n\nI definitely don't mean to imply any blame, at all. Webshim was created before several of these semi-standards were developed. I think it's a really clever system. \n\n> Develop in small pieces and then concat everything into one big file is just a bad \n> performance workaround by most build systems\n\nI used to think that too, which is why requirejs/AMD seemed more appealing at first. The idea that my dependencies load at run time as needed is appealing on the surface. But for most production web sites, the total download of images dwarfs the javascript payload. Having a fancy dependency loader that pulls in modules at runtime is overkill when a site has 600kb of image data and 40kb of compressed, minified javascript. In that case, it's far better to just load the extra data up front, even if half of it (20kb?) isn't even used.\n\n> but this doesn't mean, that it doesn't work with amd/commonjs, it's simply just works side by side.\n> And it works better how it is done now, than leaving it to the normal r.js optimizer for example.\n\nyes, r.js is a pain, but don't you think having to deal with 2 side-by-side loader strategies is kind of painful? Webshim's loader is well designed but I still have to deal with it, and it's solving a problem that I don't have. I don't need all of that infrastructure to conditionally load 40kb of javascript, even on a mobile experience. requirejs and webshim both have opinions about the best loading strategy and I just have to live with them or rip out the guts to work with my stuff.\n. @aFarkas just wanted to add I really admire all the work you've put into this library. It's people like you that keep the web running. I'm sure whatever you decide in terms of architecture/changes will be an improvement either way. Just giving my thoughts from a very limited perspective.\n. That's what I was thinking too. I've run into similar problems with integration testing; you have to wait for the validation logic to run which happens asynchronously.\n. @doits \n\n> But now comes the weird part: I run a few tests, sometimes it worked, sometimes webshim was again skipped\n\nYou're likely running into a race condition; sometimes the additional time spent waiting is enough, and sometimes it's not. It's possible that after a few attempts, the browser is caching stuff internally which makes the wait time decrease, which causes the tests to fail. try putting a manual sleep in there, and wait for 100ms. do you get consistent results if you wait longer?\n. did you read the documentation?\n\nhttp://afarkas.github.io/webshim/demos/index.html#FileReader\n\nIf that doesn't work, re-open the ticket and describe the error(s) please.\n. >  that isn't clear in the very limited documentation.\n\npull requests welcome! ;)\n\nIt seems pretty clear to me if you at least read the docs. It's very near the top under \"configuration\" \n\nhttp://afarkas.github.io/webshim/demos/index.html#Guide-configuration\n. and I will repeat one last time, pull requests welcome. If you have a suggestion for how to improve the docs, we will be happy to update them with more details. Simply complaining that the docs aren't good isn't constructive.\n. @nlenkowski agreed, that is weird. We should create another release that includes these features. \n\n@aFarkas shall we bump the version to 1.13.0? \n. I would definitely like to figure out how to make webshim run in jsfiddle. that would be a good step towards building several dozen (maybe hundred) examples and link them to the documentation.\n. @aFarkas would you be able to provide a minimal webshim bootstrap demo in jsfiddle to get this started? I can spend some time expanding various demos for each feature.\n. yikes, 80kb for a context menu shim...\n. ",
    "phoenix-scitent": "Given the spec for the data-\\* attributes (http://dev.w3.org/html5/spec/elements.html#embedding-custom-non-visible-data-with-the-data-attributes), I think it makes a lot of sense to use them over the meta tags. Using data-\\* also has a nice side-effect of being more concise.\n. I experienced a stack overflow error in IE7/8 when using webshims 1.7.1 with jQuery 1.7. I'm assuming these two issues are related.\n. Given the spec for the data-\\* attributes (http://dev.w3.org/html5/spec/elements.html#embedding-custom-non-visible-data-with-the-data-attributes), I think it makes a lot of sense to use them over the meta tags. Using data-\\* also has a nice side-effect of being more concise.\n. I experienced a stack overflow error in IE7/8 when using webshims 1.7.1 with jQuery 1.7. I'm assuming these two issues are related.\n. ",
    "ambasta": "Thank you for the fast reply.\n\nAh, in which case I assume its a bug with firebug where the inspect html window does not reflect the change wrt input box. I was using the demo on the site itself to test it and as you've pointed out, calling $(element).val() does indeed reflect updated values as does submitting the form. I apologize for the incorrect bug and not testing it thoroughly before reporting it.\n. Thank you for the fast reply.\n\nAh, in which case I assume its a bug with firebug where the inspect html window does not reflect the change wrt input box. I was using the demo on the site itself to test it and as you've pointed out, calling $(element).val() does indeed reflect updated values as does submitting the form. I apologize for the incorrect bug and not testing it thoroughly before reporting it.\n. ",
    "matiaslarsson": "I believe the calculation is wrong since my original element was wider than 50px. Will prepare a test case on monday.\n. Test case as promised. The culprit is box-sizing: border-box. http://jsfiddle.net/FCfQM/5/\n. Excellent! I'm lucky enough to have IE9 as the baseline and Chrome Frame for the rest of the IE's ;)\n. Hmm... I must have missed that page. The updatePolyFill seems to be exactly what I'm looking for. Better wait for jQuery 1.7 then!\n. Ah, perfect, thanks!\n\nIt would be possible to make the documentation clearer by listing and describing every method by itself with examples, like in the jQuery docs: http://api.jquery.com/jQuery.ajax/\n. I believe the calculation is wrong since my original element was wider than 50px. Will prepare a test case on monday.\n. Test case as promised. The culprit is box-sizing: border-box. http://jsfiddle.net/FCfQM/5/\n. Excellent! I'm lucky enough to have IE9 as the baseline and Chrome Frame for the rest of the IE's ;)\n. Hmm... I must have missed that page. The updatePolyFill seems to be exactly what I'm looking for. Better wait for jQuery 1.7 then!\n. Ah, perfect, thanks!\n\nIt would be possible to make the documentation clearer by listing and describing every method by itself with examples, like in the jQuery docs: http://api.jquery.com/jQuery.ajax/\n. ",
    "waiting-for-dev": "+1 to have an API. Great library!.\n. +1 to have an API. Great library!.\n. ",
    "zackd": "thanks thats really helpful! :) \n. thanks thats really helpful! :) \n. ",
    "heapwolf": "sorry, im not sure i understand your comment, the regify function does not operate on a function, it operates on an object literal. can you try to rephrase your question?\n. never mind.\n. sorry, im not sure i understand your comment, the regify function does not operate on a function, it operates on an object literal. can you try to rephrase your question?\n. never mind.\n. ",
    "lanterndev": "Hey Alex, thanks for the info. I'm not using mouse related events directly, but perhaps what I am using (`webshims.polyfill('forms')`) uses them. I'll ignore it for now, and check if it goes away after upgrading to jQuery 1.7 once it's released.\n\nThanks again!\n. Hey Alex, thanks for the info. I'm not using mouse related events directly, but perhaps what I am using (`webshims.polyfill('forms')`) uses them. I'll ignore it for now, and check if it goes away after upgrading to jQuery 1.7 once it's released.\n\nThanks again!\n. ",
    "whatcould": "Ok, you're right, I was specifying the <video> dimensions with width= and height= attributes -- for some reason that's the way the embed code at videojs.com does it.\n\nSo this fixes my issue, thanks. Others may run into similar problems though; it might be nice to document the CSS changes somewhere. For example, if someone is setting video {width: 100%} in their own CSS (not inline), I'm guessing it will be overridden by shims, since it's added dynamically. I'm not sure how adding a body class would make overriding the CSS more difficult... but maybe there's more complexity there I don't understand.\n\nthanks for your help.\n. Ah, that's so weird, Safari does not actually validate the form. but it has the validationMessage property on elements? But has bad error messages?! Are the messages as bad in German as they are in English?\n\nThanks for the tip, setting overrideMessages does exactly what I want. The docs are good, don't worry about your english!\n. Ok, you're right, I was specifying the <video> dimensions with width= and height= attributes -- for some reason that's the way the embed code at videojs.com does it.\n\nSo this fixes my issue, thanks. Others may run into similar problems though; it might be nice to document the CSS changes somewhere. For example, if someone is setting video {width: 100%} in their own CSS (not inline), I'm guessing it will be overridden by shims, since it's added dynamically. I'm not sure how adding a body class would make overriding the CSS more difficult... but maybe there's more complexity there I don't understand.\n\nthanks for your help.\n. Ah, that's so weird, Safari does not actually validate the form. but it has the validationMessage property on elements? But has bad error messages?! Are the messages as bad in German as they are in English?\n\nThanks for the tip, setting overrideMessages does exactly what I want. The docs are good, don't worry about your english!\n. ",
    "randycasburn": "The one thing you _really_ needed to know and I didn't tell you!\n\nrunner v 1.7.2 of webshims\n. Apparently 1.8.2 has corrected the error and works.  No long getting faults.\n\nThanks for your quick fix Alexander!!\n. Was premature...this is not fixed yet!  I was checking a stable version of the browser and not the beta.\n. Interesting.  Chrome beta works with dev branch but not min branch.\n. The one thing you _really_ needed to know and I didn't tell you!\n\nrunner v 1.7.2 of webshims\n. Apparently 1.8.2 has corrected the error and works.  No long getting faults.\n\nThanks for your quick fix Alexander!!\n. Was premature...this is not fixed yet!  I was checking a stable version of the browser and not the beta.\n. Interesting.  Chrome beta works with dev branch but not min branch.\n. ",
    "dcmoore-gd": "You're welcome!  And thanks for your work on this great library!\n. @aFarkas No, I'm sorry about that.  Outlook address completion had somehow decided that the GitHub email for this thread was the same as the corporate email address of a colleague.  Sorry again!\n. Your solution is indeed much better than mine - allows for much finer grained event handling!\n\nMy use case is effectively this, given your updated gist version of core-form.js:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n\n$('form').bind('changedinvalid changedvaliditystate', function(e) {\n  $(e.target).next('.error').html(e.target.validationMessage);\n});\n```\n\nI want that span to always contain the validation message, if any.  Right now, if that field is initially left empty (giving a \"Please fill out this field.\" message in FF), then the user enters something that isn't a valid email address like \"asdfasdfasdf\", which would give the \"Please enter an email address.\" error in FF, without your proposed new \"changedvaliditystate\" event I'd have no way to update the validationMessage.\n\nAlso, I certainly agree with your philosophy of keeping webshims as slim as possible, and that's one of the reasons I like it.  This \"changedvaliditystate\" seems to me like it belongs along next to your existing \"changedinvalid\" event, but of course that's up to you not me!\n\nThanks again for considering this and your speedy response!\n. That's fantastic, thank you so much @aFarkas!\n. Do you happen to know when you might release the next version (1.8.5?) with this change?\n\nThanks!\n. ## Why label?\n\nThat's what I figured, but I was thinking you could always add that as a label instead of conditionally since multiple labels for an element are fine.  However, I now see your point about only adding that when there's no real label.\n\n## Why is implicit label not recognized\n\nMakes sense.  Thanks!  For now I'm just making sure all my input elements have title attributes to get around this.\n\n## Release/Roadmap\n\nThank you so much, that's fantastic!  We have a code freeze on Tuesday so that should work out great for us.  Yes, I should be able to help test those fixes - let me know what and when and how I can help!\n. You're welcome, and thanks so much for addressing it!\n. Just updated to this version and verified it fixes this problem.  Thanks again!\n. You're welcome!  And thanks for your work on this great library!\n. @aFarkas No, I'm sorry about that.  Outlook address completion had somehow decided that the GitHub email for this thread was the same as the corporate email address of a colleague.  Sorry again!\n. Your solution is indeed much better than mine - allows for much finer grained event handling!\n\nMy use case is effectively this, given your updated gist version of core-form.js:\n\n```\n<input type=\"email\"><span class=\"error\"></span>\n\n$('form').bind('changedinvalid changedvaliditystate', function(e) {\n  $(e.target).next('.error').html(e.target.validationMessage);\n});\n```\n\nI want that span to always contain the validation message, if any.  Right now, if that field is initially left empty (giving a \"Please fill out this field.\" message in FF), then the user enters something that isn't a valid email address like \"asdfasdfasdf\", which would give the \"Please enter an email address.\" error in FF, without your proposed new \"changedvaliditystate\" event I'd have no way to update the validationMessage.\n\nAlso, I certainly agree with your philosophy of keeping webshims as slim as possible, and that's one of the reasons I like it.  This \"changedvaliditystate\" seems to me like it belongs along next to your existing \"changedinvalid\" event, but of course that's up to you not me!\n\nThanks again for considering this and your speedy response!\n. That's fantastic, thank you so much @aFarkas!\n. Do you happen to know when you might release the next version (1.8.5?) with this change?\n\nThanks!\n. ## Why label?\n\nThat's what I figured, but I was thinking you could always add that as a label instead of conditionally since multiple labels for an element are fine.  However, I now see your point about only adding that when there's no real label.\n\n## Why is implicit label not recognized\n\nMakes sense.  Thanks!  For now I'm just making sure all my input elements have title attributes to get around this.\n\n## Release/Roadmap\n\nThank you so much, that's fantastic!  We have a code freeze on Tuesday so that should work out great for us.  Yes, I should be able to help test those fixes - let me know what and when and how I can help!\n. You're welcome, and thanks so much for addressing it!\n. Just updated to this version and verified it fixes this problem.  Thanks again!\n. ",
    "solvpilen": "Wow, thanks for your quick respond!\nAnd you where right about the issue, Opera was submitting the form, if the form was valid, but it doesn't show native error message.\nNow it work like a charm!\nThanks, I really appreciate your work on this.\n. Wow, thanks for your quick respond!\nAnd you where right about the issue, Opera was submitting the form, if the form was valid, but it doesn't show native error message.\nNow it work like a charm!\nThanks, I really appreciate your work on this.\n. ",
    "ghost": "Sorry about the confusion. The demo file I submitted wasn't the correct scenario (I had been testing something else and submitted that by mistake).\n\nThe change I made in polyfiller.js fixes an issue I was having when attempting to dynamically load webshims. Here's what I went through:\n\nTo get the webforms portion of webshim to work I had to follow your instructions on Stack Overflow pertaining to yepnope (http://stackoverflow.com/questions/5433126/html5-modernizr-yepnope-webforms2-issue) to get the library to load without any errors. Of course the \"You should call $.webshims.polyfill before DOM-Ready\" message still appears.\n\nThen the validation polyfills wouldn't appear because .validity-alert-wrapper was still waiting for a DOMReady event, before appending to the body. (line 347 of shim/form-core.js)\n\nThe change I made insures that callbacks in a webshims.ready('DOM') call fire immediately if DOMReady has already occurred. I could have just added my fix just to form-core.js but I figured this would resolve the issue if other shims functioned similarly.\n\nI'm sure you're more intimately aware of any ramifications my change could have so if there's a more elegant solution you can suggest I'm eager to hear it.\n. That seems to do the trick. Thank you so much for the quick response.\n. Just a heads up - it seems that the problem is NOT with webshim.  I just did a test using your demo form and I could get the value just fine.\n. One more follow up - it seems to be some sort of conflict with Wordpress.  I just did a test on Wordpress using the TwentyTwelve theme and I'm having the same problem (before I had the problem on a different Wordpress theme).  \n\nHere's the code I used to test it out. \n\nRight before the </head> tag I added the following:\n\n```\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\n<script src=\"http://localhost/bp2/wp-content/themes/method/custom/js/modernizr.custom.65840.js\"></script>\n<script src=\"http://localhost/bp2/wp-content/themes/method/custom/js/webshims/polyfiller.js\"></script>\n<script>\njQuery.webshims.polyfill('forms forms-ext');\njQuery(document).ready(function($) {\n    $('select, input', window.parent.document).change(function() {\n        var test135 = $('#test135').val();\n        console.log(test135);\n    }).trigger('change');\n});\n\n</script>\n```\n\nAnd in the content section I added the following:\n\n```\n<input id=\"test135\" type=\"number\" placeholder=\"Test2\" max=\"360\" min=\"0\" step=\"30\">\n```\n\nAny ideas?\n. Hi there,\n\nI'm sorry I haven't responded in the last few days, I was busier than usual.  I tried to set up a test case on jfiddle, but had difficulty including the webshims files.  If you could perhaps show me how to do that, then I could recreate the case and send you a link to it.  \n. (different account, same person)\nThx alot for your reply. Yes, in the new 5.0-Verison it's possible to mix such file types. It is, however, not production ready yet and upgrading within the next year (completely different UI, all custom models need to be upgraded, etc. ) is not an option.\n\nFurthermore i don't like the approach of putting css, js and imgs together. This structure feels so \"messy\" :)\n\nPS: Great work though - after comparing several solutions, I've come to the conclusion that webshims lib is by far the best / most stable.\n. Thx!\n. Ok, i have given the form field as below.\n type=\"text\"  pattern=\"/^(https?:\\/\\/)?([\\da-z.-]+).([a-z.]{2,6})([\\/\\w .-]_)_\\/?$/\"  class=\"form-control\" placeholder=\"your website address \"   but it still not working, showing as \"Please match the requested format.\" \nIf  u have any exact pattern about my req, please suggest me\n\nThanks for advance !...\n. Hi Afarkas,\n\nI have checked the above pattern, but it is not working, one thing i have find in this ,whatever patterns are working in normal javascript testing , those are not working in this library ex : /(http(s)?:\\)?([\\w-]+.)+[\\w-]+[.com|.in|.org]+([\\?%&=]*)?/  , showing message like \" Please match the requested format.\"\n\nCopied the above pattern from http://www.aspdotnet-suresh.com/2013/09/regular-expression-to-validate-url-without-http.html.\n\nSo can u check once & suggest the exact pattern.\n\nThank you very much!...\n. Working fine for the above formats, but i need to check these types of phone nos also \n+1 702 123 4567, how to validate?\n. Sorry about the confusion. The demo file I submitted wasn't the correct scenario (I had been testing something else and submitted that by mistake).\n\nThe change I made in polyfiller.js fixes an issue I was having when attempting to dynamically load webshims. Here's what I went through:\n\nTo get the webforms portion of webshim to work I had to follow your instructions on Stack Overflow pertaining to yepnope (http://stackoverflow.com/questions/5433126/html5-modernizr-yepnope-webforms2-issue) to get the library to load without any errors. Of course the \"You should call $.webshims.polyfill before DOM-Ready\" message still appears.\n\nThen the validation polyfills wouldn't appear because .validity-alert-wrapper was still waiting for a DOMReady event, before appending to the body. (line 347 of shim/form-core.js)\n\nThe change I made insures that callbacks in a webshims.ready('DOM') call fire immediately if DOMReady has already occurred. I could have just added my fix just to form-core.js but I figured this would resolve the issue if other shims functioned similarly.\n\nI'm sure you're more intimately aware of any ramifications my change could have so if there's a more elegant solution you can suggest I'm eager to hear it.\n. That seems to do the trick. Thank you so much for the quick response.\n. Just a heads up - it seems that the problem is NOT with webshim.  I just did a test using your demo form and I could get the value just fine.\n. One more follow up - it seems to be some sort of conflict with Wordpress.  I just did a test on Wordpress using the TwentyTwelve theme and I'm having the same problem (before I had the problem on a different Wordpress theme).  \n\nHere's the code I used to test it out. \n\nRight before the </head> tag I added the following:\n\n```\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"></script>\n<script src=\"http://localhost/bp2/wp-content/themes/method/custom/js/modernizr.custom.65840.js\"></script>\n<script src=\"http://localhost/bp2/wp-content/themes/method/custom/js/webshims/polyfiller.js\"></script>\n<script>\njQuery.webshims.polyfill('forms forms-ext');\njQuery(document).ready(function($) {\n    $('select, input', window.parent.document).change(function() {\n        var test135 = $('#test135').val();\n        console.log(test135);\n    }).trigger('change');\n});\n\n</script>\n```\n\nAnd in the content section I added the following:\n\n```\n<input id=\"test135\" type=\"number\" placeholder=\"Test2\" max=\"360\" min=\"0\" step=\"30\">\n```\n\nAny ideas?\n. Hi there,\n\nI'm sorry I haven't responded in the last few days, I was busier than usual.  I tried to set up a test case on jfiddle, but had difficulty including the webshims files.  If you could perhaps show me how to do that, then I could recreate the case and send you a link to it.  \n. (different account, same person)\nThx alot for your reply. Yes, in the new 5.0-Verison it's possible to mix such file types. It is, however, not production ready yet and upgrading within the next year (completely different UI, all custom models need to be upgraded, etc. ) is not an option.\n\nFurthermore i don't like the approach of putting css, js and imgs together. This structure feels so \"messy\" :)\n\nPS: Great work though - after comparing several solutions, I've come to the conclusion that webshims lib is by far the best / most stable.\n. Thx!\n. Ok, i have given the form field as below.\n type=\"text\"  pattern=\"/^(https?:\\/\\/)?([\\da-z.-]+).([a-z.]{2,6})([\\/\\w .-]_)_\\/?$/\"  class=\"form-control\" placeholder=\"your website address \"   but it still not working, showing as \"Please match the requested format.\" \nIf  u have any exact pattern about my req, please suggest me\n\nThanks for advance !...\n. Hi Afarkas,\n\nI have checked the above pattern, but it is not working, one thing i have find in this ,whatever patterns are working in normal javascript testing , those are not working in this library ex : /(http(s)?:\\)?([\\w-]+.)+[\\w-]+[.com|.in|.org]+([\\?%&=]*)?/  , showing message like \" Please match the requested format.\"\n\nCopied the above pattern from http://www.aspdotnet-suresh.com/2013/09/regular-expression-to-validate-url-without-http.html.\n\nSo can u check once & suggest the exact pattern.\n\nThank you very much!...\n. Working fine for the above formats, but i need to check these types of phone nos also \n+1 702 123 4567, how to validate?\n. ",
    "mderting": "Thanks Alexander, I totally read the html5 spec wrong, sorry about that.\n\nCheers,\nMatt\n. Thanks Alexander, I totally read the html5 spec wrong, sorry about that.\n\nCheers,\nMatt\n. ",
    "billsaysthis": "I also tried a variation of the code in the dynamic min/max date field pair example, but had no better result:\n\n``` javascript\n\nvar initDateBounds = function() {\n  $('#mbdrFrom').prop('min', $('#analyticsValues').data('earliest'));\n  $('#mbdrFrom').prop('max', $('#mbdrTo').val());\n  $('#mbdrTo').prop('min', $('#mbdrFrom').val());\n}\n\n$(function() {\n  initDateBounds();\n}\n```\n. Thanks, that was exactly what I needed to know. To get full value for future users, maybe you can add this to the docs?\n. My issue isn't quite the same, I'm not setting overrideMessages, but I get the red form-ui-invalid class as soon as focus goes to a required input. Here's my initialization code:\n\n``` javascript\n    $.webshims.setOptions('forms-ext', {\n        replaceUI: false,\n        datepicker: {\n            dateFormat: 'mm/dd/yy'\n        }\n    });\n    $.webshims.modules[\"jquery-ui\"].src = \"../js/jquery-ui.1.8.16.custom.min.js\";\n    $.webshims.polyfill('es5 forms forms-ext');\n```\n\nAnd a sample of the HTML\n\n``` html\n<input id=\"firstName\" class=\"span3 h5-alphaNumeric\" required=\"\" type=\"text\" name=\"adminAccount.firstName\" value=\"\" maxlength=\"255\" title=\"Please provide your first name.\" placeholder=\"First name\">\n\n```\n. @dolts thanks for the suggestion but it had no effect (we're running Webshims v1.8.9) and in fact searching the source doesn't turn up the string validityUIEvents--same result for a JS site search on Github.\n. I also tried a variation of the code in the dynamic min/max date field pair example, but had no better result:\n\n``` javascript\n\nvar initDateBounds = function() {\n  $('#mbdrFrom').prop('min', $('#analyticsValues').data('earliest'));\n  $('#mbdrFrom').prop('max', $('#mbdrTo').val());\n  $('#mbdrTo').prop('min', $('#mbdrFrom').val());\n}\n\n$(function() {\n  initDateBounds();\n}\n```\n. Thanks, that was exactly what I needed to know. To get full value for future users, maybe you can add this to the docs?\n. My issue isn't quite the same, I'm not setting overrideMessages, but I get the red form-ui-invalid class as soon as focus goes to a required input. Here's my initialization code:\n\n``` javascript\n    $.webshims.setOptions('forms-ext', {\n        replaceUI: false,\n        datepicker: {\n            dateFormat: 'mm/dd/yy'\n        }\n    });\n    $.webshims.modules[\"jquery-ui\"].src = \"../js/jquery-ui.1.8.16.custom.min.js\";\n    $.webshims.polyfill('es5 forms forms-ext');\n```\n\nAnd a sample of the HTML\n\n``` html\n<input id=\"firstName\" class=\"span3 h5-alphaNumeric\" required=\"\" type=\"text\" name=\"adminAccount.firstName\" value=\"\" maxlength=\"255\" title=\"Please provide your first name.\" placeholder=\"First name\">\n\n```\n. @dolts thanks for the suggestion but it had no effect (we're running Webshims v1.8.9) and in fact searching the source doesn't turn up the string validityUIEvents--same result for a JS site search on Github.\n. ",
    "benfrain": "Well, it seems it must be something to do with the version of Modernizer I was using. If I link to the version included with Webshim it displays fine...\n. Well, it seems it must be something to do with the version of Modernizer I was using. If I link to the version included with Webshim it displays fine...\n. ",
    "btaitelb": "Thanks! These suggestions helped me get my tests passing in all browsers. I had to use both `pattern` and `data-partial-pattern` attributes to get validation (with a custom error message set by `data-errormessage`) to work in all browsers, as I think this is another place where native validation and webshims validation may be butting heads.\n\nI really appreciate your help, and thank you for providing such a useful community resource!\n. Thanks! These suggestions helped me get my tests passing in all browsers. I had to use both `pattern` and `data-partial-pattern` attributes to get validation (with a custom error message set by `data-errormessage`) to work in all browsers, as I think this is another place where native validation and webshims validation may be butting heads.\n\nI really appreciate your help, and thank you for providing such a useful community resource!\n. ",
    "diegolaciar": "Thanks! :)\n. Thanks! :)\n. ",
    "kdonald": "In my testing the console warnings are visible in Safari 5, IE8, and Firefox 3...\n. I do have a custom build of Modernizr that does not have the audio/video tests included, as I didn't think I needed them. This seems to be the reason why the mediaelement-core and mediaelement-swf modules aren't registered. But I thought they were designed to be optional and the tests weren't required... not sure why loading the 'forms' feature would try to load the mediaelement modules...\n. Adding the audio and video tests to my custom Modernizr build caused the console warnings to go away, so I'm going to keep the tests in for now. Still puzzled as to why forms is trying to load those modules, though...\n. I tried to do what the build does manually, but I guess I didn't do it correctly (I went down to the \"Start Feature\" section and starting removing the optional feature registrations). The reason I didn't just use the builder is it produces a minified version, and  I'd like a development version for development because I rely on the RequireJS optimizer to minify (I also need wrap the library in the AMD module format which is somewhat more difficult when working with pre-minified code). Any suggestions?\n. Well, it appears you've already got AMD support built in, so no wrapping would be necessary then...\n. I was successfully at plugging in a custom polyfiller build with AMD/requirejs without having to modify the source. The console warnings are also no longer present even without Modernizer.audio/video. I'll close out this issue. Thanks.\n. I disabled the initialization of webshims(1)--after that there are no JS errors in the console and the ajax submit works as expected.\n\n(1)   /*\n  $.webshims.setOptions({\n    waitReady: false,\n    basePath: \"/static/libs/webshims/1.8.7/shims/\"\n  });\n  $.webshims.polyfill(\"forms\");\n  */\n\nI then tried accessing the demo page at: http://afarkas.github.com/webshim/demos/demos/webforms.html on iOS 4.3.5 iPhone 3gs and it actually works fine with no errors. Can't explain that yet. Differences are I'm using requirejs to load webshims asynchronously, I'm using a custom polyfiller build (no canvas, mediaelement, json storage, details, or geolocation), and I'm only asking for the 'forms' feature.\n. Alright, if I change... $.webshims.polyfill(\"forms\"); to just $.webshims.polyfill();, form validation starts working on iOS 4.3.5 and I get no JS errors. My ajax submit works as well.\n. A side effect of this for me has been a Warning that:\n\"jQuery UI Widget factory is already included, but not datepicker or slider. configure src of $.webshims.modules[\"input-widgets\"].src\"\n\nOn my page I've only loaded jqueryui/dialog, which is intentional...  I don't need datepicker or slider. There doesn't seem to be away to surpress this warning so I just commented it out of the various shims and combos. I would load just the forms feature but since that doesn't work on iOS 4 I have to load everything.\n. No luck.:( I put in the full 1.8.7 polyfiller.js development version and tried loading just the \"forms\" feature and still receive the same 1 error on iOS 4.3. If I call polyfill() and load everything, it works.\n\nThanks for the tip about webshims.debug.\n. Alexander,\nYour customMessages tip allowed me to work around the problem. I'm now loading just the 'forms' feature with no errors on iOS 4. I'll also try your latest checkin and let you know how that goes.\n. Will check this week - sorry for delay, been on out of town on vacation last week.\n\nKeith\n\nOn Feb 12, 2012, at 9:12 AM, Alexander Farkas wrote:\n\n> If you still experiencing this issue with 1.8.8final re-open this issue.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/97#issuecomment-3927953\n. I attempted an upgrade to 1.8.8. I tested on Chrome 17, Firefox 10, Safari 5.1, IE 8, Firefox 3.6, Android 2.1 loading only 'forms' with customMessages true removed. Things worked fine with these browsers.\n\nUnfortunately, I am running into a problem testing on my iPhone 3gs running IOS 4. The problem is different than before. No errors are reported in the Safari Mobile console. Form validation works fine in terms of reporting errors for required fields and email fields. However, once I complete the form and all inputs appear valid, the form does not submit. No validation error messages are displayed, which is expected - what is not expected is the form simply does not submit and no request is sent to the server. If I navigate away from the page via another link and go back to the page where the form fields are still filled out, I can then submit the form with no problem.\n\nIt's puzzling and I'm not sure how to debug this further. I'm not seeing any JavaScript errors in the console so my assumption is document ready is firing and my submit event handler is attached as it should be. My best guess is that in this environment even after entering valid inputs Webshims still thinks the form is invalid and is suppressing the submit event. Whatever flag is used to denote an invalid form state seems to be cleared when going back to the page with all the input filled out.\n\nI tried setting customMessages=true again and it didn't make a difference. I tried loading all polyfills and it didn't make a difference. This seems to be a new issue and the only environment I've reproduced it in so far is IOS 4.\n\nSo close, but unfortunately I'm unable upgrade to 1.8.8 in production until I'm able to resolve this problem.\n. I tried reopening this issue but don't have permission. I assume you still get notifications on closed issues. Let me know if you need me to open a new issue.\n. One difference in my environment worth noting: I've since upgraded to Modernizr 2.5.2 from 2.0.6.\n. Some more information on this:\n- If I remove the HTML5 'required' constraints from ALL fields and complete the form, the submit works. I can leave the 'email' constraint on my email fields, it doesn't hurt unless I trigger an email validation error by submitting the form with an invalid email address (at which, I can't submit the form after that, even after I correct the mistake). In summary, once I add one 'required' constraint to any field, or trigger an 'email' validation error, I can't get a valid form to submit without navigating away from the page and back to it.\n. Confirmed reverting to 1.8.7 with forms { customMessages: true } reapplied resolved the problem. So this seems specific to 1.8.8 and a new issue. I'll open a new issue.\n. In my testing the console warnings are visible in Safari 5, IE8, and Firefox 3...\n. I do have a custom build of Modernizr that does not have the audio/video tests included, as I didn't think I needed them. This seems to be the reason why the mediaelement-core and mediaelement-swf modules aren't registered. But I thought they were designed to be optional and the tests weren't required... not sure why loading the 'forms' feature would try to load the mediaelement modules...\n. Adding the audio and video tests to my custom Modernizr build caused the console warnings to go away, so I'm going to keep the tests in for now. Still puzzled as to why forms is trying to load those modules, though...\n. I tried to do what the build does manually, but I guess I didn't do it correctly (I went down to the \"Start Feature\" section and starting removing the optional feature registrations). The reason I didn't just use the builder is it produces a minified version, and  I'd like a development version for development because I rely on the RequireJS optimizer to minify (I also need wrap the library in the AMD module format which is somewhat more difficult when working with pre-minified code). Any suggestions?\n. Well, it appears you've already got AMD support built in, so no wrapping would be necessary then...\n. I was successfully at plugging in a custom polyfiller build with AMD/requirejs without having to modify the source. The console warnings are also no longer present even without Modernizer.audio/video. I'll close out this issue. Thanks.\n. I disabled the initialization of webshims(1)--after that there are no JS errors in the console and the ajax submit works as expected.\n\n(1)   /*\n  $.webshims.setOptions({\n    waitReady: false,\n    basePath: \"/static/libs/webshims/1.8.7/shims/\"\n  });\n  $.webshims.polyfill(\"forms\");\n  */\n\nI then tried accessing the demo page at: http://afarkas.github.com/webshim/demos/demos/webforms.html on iOS 4.3.5 iPhone 3gs and it actually works fine with no errors. Can't explain that yet. Differences are I'm using requirejs to load webshims asynchronously, I'm using a custom polyfiller build (no canvas, mediaelement, json storage, details, or geolocation), and I'm only asking for the 'forms' feature.\n. Alright, if I change... $.webshims.polyfill(\"forms\"); to just $.webshims.polyfill();, form validation starts working on iOS 4.3.5 and I get no JS errors. My ajax submit works as well.\n. A side effect of this for me has been a Warning that:\n\"jQuery UI Widget factory is already included, but not datepicker or slider. configure src of $.webshims.modules[\"input-widgets\"].src\"\n\nOn my page I've only loaded jqueryui/dialog, which is intentional...  I don't need datepicker or slider. There doesn't seem to be away to surpress this warning so I just commented it out of the various shims and combos. I would load just the forms feature but since that doesn't work on iOS 4 I have to load everything.\n. No luck.:( I put in the full 1.8.7 polyfiller.js development version and tried loading just the \"forms\" feature and still receive the same 1 error on iOS 4.3. If I call polyfill() and load everything, it works.\n\nThanks for the tip about webshims.debug.\n. Alexander,\nYour customMessages tip allowed me to work around the problem. I'm now loading just the 'forms' feature with no errors on iOS 4. I'll also try your latest checkin and let you know how that goes.\n. Will check this week - sorry for delay, been on out of town on vacation last week.\n\nKeith\n\nOn Feb 12, 2012, at 9:12 AM, Alexander Farkas wrote:\n\n> If you still experiencing this issue with 1.8.8final re-open this issue.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/aFarkas/webshim/issues/97#issuecomment-3927953\n. I attempted an upgrade to 1.8.8. I tested on Chrome 17, Firefox 10, Safari 5.1, IE 8, Firefox 3.6, Android 2.1 loading only 'forms' with customMessages true removed. Things worked fine with these browsers.\n\nUnfortunately, I am running into a problem testing on my iPhone 3gs running IOS 4. The problem is different than before. No errors are reported in the Safari Mobile console. Form validation works fine in terms of reporting errors for required fields and email fields. However, once I complete the form and all inputs appear valid, the form does not submit. No validation error messages are displayed, which is expected - what is not expected is the form simply does not submit and no request is sent to the server. If I navigate away from the page via another link and go back to the page where the form fields are still filled out, I can then submit the form with no problem.\n\nIt's puzzling and I'm not sure how to debug this further. I'm not seeing any JavaScript errors in the console so my assumption is document ready is firing and my submit event handler is attached as it should be. My best guess is that in this environment even after entering valid inputs Webshims still thinks the form is invalid and is suppressing the submit event. Whatever flag is used to denote an invalid form state seems to be cleared when going back to the page with all the input filled out.\n\nI tried setting customMessages=true again and it didn't make a difference. I tried loading all polyfills and it didn't make a difference. This seems to be a new issue and the only environment I've reproduced it in so far is IOS 4.\n\nSo close, but unfortunately I'm unable upgrade to 1.8.8 in production until I'm able to resolve this problem.\n. I tried reopening this issue but don't have permission. I assume you still get notifications on closed issues. Let me know if you need me to open a new issue.\n. One difference in my environment worth noting: I've since upgraded to Modernizr 2.5.2 from 2.0.6.\n. Some more information on this:\n- If I remove the HTML5 'required' constraints from ALL fields and complete the form, the submit works. I can leave the 'email' constraint on my email fields, it doesn't hurt unless I trigger an email validation error by submitting the form with an invalid email address (at which, I can't submit the form after that, even after I correct the mistake). In summary, once I add one 'required' constraint to any field, or trigger an 'email' validation error, I can't get a valid form to submit without navigating away from the page and back to it.\n. Confirmed reverting to 1.8.7 with forms { customMessages: true } reapplied resolved the problem. So this seems specific to 1.8.8 and a new issue. I'll open a new issue.\n. ",
    "jbrooksuk": "http://jsbin.com/alogin\n\nIs all I have. The browser is Mozilla 3.6 which will later be running Mozilla Prism.\n. Sorry, I already have those included.\n. Your example works but my working code doesn't, even though all of the dependencies are there.\n\nAlso I didn't include the whole `table` markup because there is far too much to cut out for a quick example.\n. I have no idea what happened but it worked.\n. It's a classic form submit, however it gets cancelled by jQuery if the validation isn't met. Then, if everything is a-OK jQuery will send the `submit` event.\n. http://jsbin.com/alogin\n\nIs all I have. The browser is Mozilla 3.6 which will later be running Mozilla Prism.\n. Sorry, I already have those included.\n. Your example works but my working code doesn't, even though all of the dependencies are there.\n\nAlso I didn't include the whole `table` markup because there is far too much to cut out for a quick example.\n. I have no idea what happened but it worked.\n. It's a classic form submit, however it gets cancelled by jQuery if the validation isn't met. Then, if everything is a-OK jQuery will send the `submit` event.\n. ",
    "AMA3": "I am having this issue now, also.  Visit http://www.dealingtree.com/join/  in IE7 or IE8 standards mode.\n. Hi Alex, yes I have the problem using IE10.0.8400.0 w/update KB2702844.  The problem does not exist when I test using IE9 on a VM in those modes, so I would understand if you do not want to address this now.\n. Thanks for the quick fix!\n. Although I no longer detect the problem using the test file specified above, It still happens frequently at http://www.dealingtree.com/savings/ (which includes many more resources) even after installing the new polyfiller.js and all of the combo/*.js files.  :/\n. Thank you, this seems to have fixed the problem.  Unfortunately, a new problem has appeared.  I have opened a new ticket for it: https://github.com/aFarkas/webshim/issues/135\n. Thanks Alex, I've done further research and it does in fact appear to be an ExCanvas problem with IE7.  I changed my code to use flash instead, and it's working correctly.  Previously I got better results from ExCanvas than FlashCanvasPro, which is why I had switched.\n. I've developed a very rudimentary fix for both the ExCanvas image placement problem and the FlashCanvas images-missing problem.  If anyone needs either, you can write some code similar to this.  It does not account for cropping:\n\n``` javascript\nvar canvas = $('whatever selector gets your canvas element');\nvar context = canvas.getContext();\n$('body').css('position','relative');\ncontext.drawImage =\n   function( img, x, y, w, h )\n   {\n      $('<img src=\"'+img.src+'\"/>').appendTo('body').css( {\n          height: h+'px',\n          left: (x+canvas.offset().left)+'px',\n          position: 'absolute',\n          top: (y+canvas.offset().top)+'px',\n          width: w+'px',\n          zIndex: 1+canvas.css('zIndex') } )\n   }\n\n```\n\nBasically, the code places an HTML <img> element on top of the canvas whenever drawImage is called.  Note that because the image appears over the canvas, it will hide any subsequent changes to the canvas at the image location.\n. BTW, I would also like to reopen https://github.com/aFarkas/webshim/issues/98\n. Alex, couldn't this be addressed by comparing the return value against the string \"null\" and eliminating it if true?  The odds of someone using \"null\" as a placeholder are virtually, well, null  :)\n\nI realize that it's not a big deal in the real world, but if people are evaluating Webshims for their sites, and they test the behavior in IE10 using IE7 mode and see these \"null\" placeholders, it might discourage them from using the library, which I believe would be a shame.\n. Understood. Thanks.\n. I have submitted this problem to Microsoft Connect here:\nhttps://connect.microsoft.com/IE/feedback/details/755306/ie10-in-ie7-standards-mode-input-placeholder-null-but-ie9-in-ie7-mode-is-ok\n. Hi Alex, I agree that this solution (and that one) are not suitable for inclusion in Webshims.  The reason I posted them (and left them open) is, to allow other users to find them, and decide whether they want to use this code as a fix for the (perhaps unfixable) issues.\n. Hi Alex, I agree that this solution (and that one) are not suitable for inclusion in Webshims. The reason I posted them (and left them open) is, to allow other users to find them, and decide whether they want to use this code as a fix for the (perhaps unfixable) issues.\n. Awesome, I can't wait to show it off :)\n. Hi Alex,\n\nThanks for this.  I was just able to download and test webshims-master.zip and encountered the following problems:\n\n(1)  in IE7 mode, clicking the calendar budget does not display the popup.  It works fine in IE8, IE9 and IE10 mode.  I am using a custom Modernizr 2.6.2 which includes all of the feature tests from the link on your home page, and jQuery 1.9.1.\n\n(2)  in IE10 and Firefox 20.0.1 (which both use date and month shims), the CSS for the :invalid pseudoclass is not applied to the field when it is empty and the required attribute is set.\n\nYou can see this behavior at http://beta.dealingtree.com/join/\n\nI've found a couple of other unrelated problems, but I will report those using the issue tracker.  Let me know if you want me to list these two bugs there, also.\n\nThanks again for your hard work and for sharing Webshims Lib with the community!\n\nAndrew\n\n----- Original Message ----- \nFrom: Alexander Farkas \nTo: aFarkas/webshim \nCc: Andrew M. Andrews III \nSent: Friday, April 5, 2013 6:37 AM\nSubject: Re: [webshim] feature request: support for <input type=\"month\"> (#145)\n\nI have just uploaded the new widgets to gh-pages. I will release the next version soon. Feedback is welcome :-D\n\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#month-cfg\n\n\u2014\nReply to this email directly or view it on GitHub.\n. I tested in a real IE7 and the calendar buttons _do_ display the popups.\n\nAlso, your selector suggestion worked well, thank you!  That said, I believe that Webshims Lib would be even better if it supported :invalid directly without requiring the adjacent sibling selectors.  One of the reasons I love Webshims Lib so much is that it makes everything seem so \"automatic\"--just include the scripts and write one line of JS code, and no other special handling is usually required.  The lack of direct support for :invalid contradicts this.\n\nI do notice that the replacement date widget is a bit too narrow in FF20; I can't see the entire date string.  It looks fine in IE7 and IE10.\n\nThanks again for everything, Webshims Lib is a much-appreciated contribution to the web community.\n. Hi Alex... sorry, I have a deadline that I am rushing to meet... I will respond to this soon.  I wasn't aware that you already had a media polyfill, so I have to read up on it before I can share my thoughts.  Thank you!\n. Hi Alex, I just had a brief look at the polyfill, and it seems to fit the bill.  I will test it further in the future.  Meanwhile, I notice that JWPlayer 5.10 is free/open source, so if you switch to use it, that should overcome your own problem with it :) \n. I upgraded jQuery to 1.82 and webshims to 1.9.2, and it seems to have fixed the problem!  Thanks for the quick response and thanks for all of your hard work on webshims!\n. Chrome isn't offering me .96... I did just test it on a Win7 VM running the same .94 version, and it works fine there, so I guess it's something with my box or Win8 preview.  Thanks for checking!\n. Adding CORS support is a tough one because pre-CORS, SOP was a security feature.  However, I think IE6 provided cross-origin Ajax without CORS via the original XHR object?\n. Thanks for this!  Any idea when it will be included in webshims.stable.zip?  Or, is it already?\n. The Chrome Team released a polyfill that you might want to merge into Webshims Lib:\n\nhttps://github.com/GoogleChrome/dialog-polyfill\n. Hi Alex, thanks for your prompt attention to this.  I see that your fiddle is calling setOptions w/ mirrorValidity:true to make this work.  Why is that necessary?  I would expect the shim to behave like the real thing by default.  As I've said before, what makes Webshims Lib so awesome is that you write one like of JS code ($.webshims.polyfill(\"...\")) and everything works as expected in deficient browsers... so requiring the extra step of calling setOptions to make the form work as expected isn't really any better (and might actually be more work) than adding .ws-date, etc to the CSS.  Would you please turn on mirrorValidity by default?\n. Hi Alex, I can appreciate the need to decide which features take priority.  I don't think that you can say that :invalid is always bad for CSS and that :user-error is always good; rather, that there are situations when one is preferable over the other.  :invalid is useful for when a form is initially displayed, to help the user know which fields require their attention.  And although legacy browser support is certainly important, I think that modern-yet-incomplete browser support is equally important.  In the case of FF, is a site more likely to have users coming in with FF3.6 or with FF21?  FF users tend to update their browsers more frequently than IE users.  But even IE10 users deserve the best experience that we can give them.\n\nMaybe the optimal solution is for Webshims Lib to test whether the browser will support mirrorValidity and turn it on for those that do.  In answering the question, is it more important for CSS to feel more native or JS, I think that more sites will need the CSS to feel native than the JS, and again, detecting browser support can help in both regards.\n\nUltimately, though, I think this introduces a bigger concern:  the reason that I use Webshims Lib and teach it as the best solution in all of my HTML5 classes is that it's very much a drop-in solution with virtually no customization required.  Other polyfills I've seen require too much setup/customization just to get them to work.  Right now we're only discussing one issue, but I'm afraid that if we make exceptions for the :invalid selector, then it's a slippery slope to make other exceptions as well.\n\nAlex, you do such a wonderful job making Webshims Lib the easiest, most encompassing polyfill I've ever seen, and I feel very confident teaching it to the hundreds of students who attend my HTML5 course every year.  Please keep up the good work, and be careful to maintain its ease-of-use as you continue to improve it.\n. Have no fear, we do teach them the Constraint Validation API :)  Thanks for your consideration and thanks again for sharing all of your hard work with the rest of us!\n. BTW the page mentioned uses an older version of Webshims Lib but I have the same problem on my development website on localhost using the stable zip from 11/20.\n. Thanks for the quick response, Alex!\n. Thanks for the quick turnaround, Alex.  I'll try it with oninput and verify that it works.  We're using inline handlers because it's in an introductory example to Webshims Lib for students with little JavaScript experience who don't know jQuery.\n. Hi Alex, I'd just like to chime in that I agree with mreinstein that consistency would be a Good Thing(TM).  I don't have a preference between webshim and webshims.\n. Hi Alex, I just tested using webshim.pollyfill() and it fails \"webshim is not defined\".  I looked in polyfiller.js and cannot find webshim defined there. webshims (with an S) is defined.  I just want to be clear as to whether a global/window webshim object is supposed to be defined and, if not, what is the official preferred way to invoke webshim.\n. I see, I was using the code from the download 1.13.1 button on the demos page.  Any idea when you'll be releasing 1.13.2?\n. IRT @mreinstein 's clarification, I'd just like to sat that, although I use nodejs for my own work, I prefer that Webshim NOT _require_ npm.  Not all web developers are willing/able to use Node, and it would be difficult to sell Webshim to those folks.  Part of what makes Webshim so great is that a developer can just download and extract the ZIP, include polyfiller.js, and write a single webshim.polyfill() cal to include what they need on a page.  Anything more complicated than that discourages the noobs and reduces the Webshim audience.\n\nWhile I'm chiming in, I'd also like Webshim to _never_ drop support for IE6 or any outdated browser.  The whole point of a polyfill is support the dinosaurs.  It might be ideal to add an _option_ that specifies which browsers to support, but I feel that the default should be to go back as far as possible.\n. @mreinstein You're right, I misunderstood.  I'm certainly OK with adding NPM support if it's not required. I also suggest making certain that the easiest path is clearly stated first in all docs :)\n\nI agree about the baggage but I think Webshim already solves that problem by conditionally loading only the necessary polyfills, no separate versions a la jQuery 1.9/2.0 required.\n\nOf course there is no point to supporting browsers that the audience doesn't use, but again, if the support is conditionally loaded and was already there from the beginnings of Webshim, then I don't see a penalty to retaining that support, and I see a certain benefit.\n. Hmmm I think I disagree:  I think the plumbing _is_ what makes Webshim so wonderful.  Most task-specific polyfills that I've encountered require a lot of configuration or at least a lot of separate scripts and links to load.  The beautiful thing about Webshim is that it requires only one script (in addition to its dependencies on modernizr/jquery) and one single JS command (webshim.polyfill()) and you're done.\n\nNow, under the covers, I'm not opposed to allowing different loader modules and other low-level customizations, and I'm also not opposed to allowing power users to select which Webshim polyfills to include in their own projects, and to decide how to include them.  I also support the notion that Webshim have a little of logic to detect if a loader is already present, and use the appropriate mechanism to use or load its own, and even to load modernizr.js and/or jquery.js if needed.\n. Thanks!  I will do that, but I have to warn you, I've been a slacker when it comes to learning GitHub so it might take me a while to figure it out!\n. Sounds like a good idea to me.\n. I just saw this and thought I should mention:  according the spec, the pattern attribute is only allowed on input type=text, not type=tel.  Some browsers will support pattern on other input types, but not all of them.  It sucks, because ideally we would like the customized-virtual-keyboard/keypad behavior of type=tel (or type=number) along with pattern restriction, but again, that is not allowed per HTML5.\n. Hmmmm doesn't relying on $.prop go against your goal of eliminating Webshim's dependency on jQuery?\n. PS - thanks for refactoring my code :)\n. Alex, I tried rewriting my script to use VanillaJS, and this problem reappeared.  I put the $.prop code back in, and wrapped it all in a jQuery ready handler, but the default caption is still showing and does not go away.  Can you please look at the problem at http://beta.dealingtree.com/demo/ ?\n. Oops, never mind, I figured out that I missed the $.prop to get the textTracks from the video\n. Alex, wouldn't extendNative:true be a good way to add this for browsers with partial forms support? \n\n[sent from my MacBook Wheel]\n\n----- Reply message -----\nFrom: \"Samuel Williams\" notifications@github.com\nTo: \"aFarkas/webshim\" webshim@noreply.github.com\nSubject: [webshim] <input minlength=\"x\" /> not supported? (#425)\nDate: Wed, Aug 13, 2014 9:53 AM\n\nThanks for the very helpful and quick response.\n\nI found 1 didn't seem to work on Chromium for some reason. In the end I used the pattern and wrote custom logic for the validation.\n\n&mdash;\nReply to this email directly or view it on GitHub.\n. Looks cool, thanks!  Is there any way to auto-detect the position:sticky in the CSS and apply the styles without needing the .ws-sticky class?\n. @gouch The devil here, as usual, is IE8!  @thirdender Maybe svgweb is not the right polyfill, or maybe it could be adapted somehow, or maybe there's a better fit using a \"lesser\" polyfill... I don't know, I'd just love to see a good SVG polyfill in webshim :)\n. Sweet, thanks! :)\n. I am having this issue now, also.  Visit http://www.dealingtree.com/join/  in IE7 or IE8 standards mode.\n. Hi Alex, yes I have the problem using IE10.0.8400.0 w/update KB2702844.  The problem does not exist when I test using IE9 on a VM in those modes, so I would understand if you do not want to address this now.\n. Thanks for the quick fix!\n. Although I no longer detect the problem using the test file specified above, It still happens frequently at http://www.dealingtree.com/savings/ (which includes many more resources) even after installing the new polyfiller.js and all of the combo/*.js files.  :/\n. Thank you, this seems to have fixed the problem.  Unfortunately, a new problem has appeared.  I have opened a new ticket for it: https://github.com/aFarkas/webshim/issues/135\n. Thanks Alex, I've done further research and it does in fact appear to be an ExCanvas problem with IE7.  I changed my code to use flash instead, and it's working correctly.  Previously I got better results from ExCanvas than FlashCanvasPro, which is why I had switched.\n. I've developed a very rudimentary fix for both the ExCanvas image placement problem and the FlashCanvas images-missing problem.  If anyone needs either, you can write some code similar to this.  It does not account for cropping:\n\n``` javascript\nvar canvas = $('whatever selector gets your canvas element');\nvar context = canvas.getContext();\n$('body').css('position','relative');\ncontext.drawImage =\n   function( img, x, y, w, h )\n   {\n      $('<img src=\"'+img.src+'\"/>').appendTo('body').css( {\n          height: h+'px',\n          left: (x+canvas.offset().left)+'px',\n          position: 'absolute',\n          top: (y+canvas.offset().top)+'px',\n          width: w+'px',\n          zIndex: 1+canvas.css('zIndex') } )\n   }\n\n```\n\nBasically, the code places an HTML <img> element on top of the canvas whenever drawImage is called.  Note that because the image appears over the canvas, it will hide any subsequent changes to the canvas at the image location.\n. BTW, I would also like to reopen https://github.com/aFarkas/webshim/issues/98\n. Alex, couldn't this be addressed by comparing the return value against the string \"null\" and eliminating it if true?  The odds of someone using \"null\" as a placeholder are virtually, well, null  :)\n\nI realize that it's not a big deal in the real world, but if people are evaluating Webshims for their sites, and they test the behavior in IE10 using IE7 mode and see these \"null\" placeholders, it might discourage them from using the library, which I believe would be a shame.\n. Understood. Thanks.\n. I have submitted this problem to Microsoft Connect here:\nhttps://connect.microsoft.com/IE/feedback/details/755306/ie10-in-ie7-standards-mode-input-placeholder-null-but-ie9-in-ie7-mode-is-ok\n. Hi Alex, I agree that this solution (and that one) are not suitable for inclusion in Webshims.  The reason I posted them (and left them open) is, to allow other users to find them, and decide whether they want to use this code as a fix for the (perhaps unfixable) issues.\n. Hi Alex, I agree that this solution (and that one) are not suitable for inclusion in Webshims. The reason I posted them (and left them open) is, to allow other users to find them, and decide whether they want to use this code as a fix for the (perhaps unfixable) issues.\n. Awesome, I can't wait to show it off :)\n. Hi Alex,\n\nThanks for this.  I was just able to download and test webshims-master.zip and encountered the following problems:\n\n(1)  in IE7 mode, clicking the calendar budget does not display the popup.  It works fine in IE8, IE9 and IE10 mode.  I am using a custom Modernizr 2.6.2 which includes all of the feature tests from the link on your home page, and jQuery 1.9.1.\n\n(2)  in IE10 and Firefox 20.0.1 (which both use date and month shims), the CSS for the :invalid pseudoclass is not applied to the field when it is empty and the required attribute is set.\n\nYou can see this behavior at http://beta.dealingtree.com/join/\n\nI've found a couple of other unrelated problems, but I will report those using the issue tracker.  Let me know if you want me to list these two bugs there, also.\n\nThanks again for your hard work and for sharing Webshims Lib with the community!\n\nAndrew\n\n----- Original Message ----- \nFrom: Alexander Farkas \nTo: aFarkas/webshim \nCc: Andrew M. Andrews III \nSent: Friday, April 5, 2013 6:37 AM\nSubject: Re: [webshim] feature request: support for <input type=\"month\"> (#145)\n\nI have just uploaded the new widgets to gh-pages. I will release the next version soon. Feedback is welcome :-D\n\nhttp://afarkas.github.com/webshim/demos/demos/webforms/3-webforms-widgets.html#month-cfg\n\n\u2014\nReply to this email directly or view it on GitHub.\n. I tested in a real IE7 and the calendar buttons _do_ display the popups.\n\nAlso, your selector suggestion worked well, thank you!  That said, I believe that Webshims Lib would be even better if it supported :invalid directly without requiring the adjacent sibling selectors.  One of the reasons I love Webshims Lib so much is that it makes everything seem so \"automatic\"--just include the scripts and write one line of JS code, and no other special handling is usually required.  The lack of direct support for :invalid contradicts this.\n\nI do notice that the replacement date widget is a bit too narrow in FF20; I can't see the entire date string.  It looks fine in IE7 and IE10.\n\nThanks again for everything, Webshims Lib is a much-appreciated contribution to the web community.\n. Hi Alex... sorry, I have a deadline that I am rushing to meet... I will respond to this soon.  I wasn't aware that you already had a media polyfill, so I have to read up on it before I can share my thoughts.  Thank you!\n. Hi Alex, I just had a brief look at the polyfill, and it seems to fit the bill.  I will test it further in the future.  Meanwhile, I notice that JWPlayer 5.10 is free/open source, so if you switch to use it, that should overcome your own problem with it :) \n. I upgraded jQuery to 1.82 and webshims to 1.9.2, and it seems to have fixed the problem!  Thanks for the quick response and thanks for all of your hard work on webshims!\n. Chrome isn't offering me .96... I did just test it on a Win7 VM running the same .94 version, and it works fine there, so I guess it's something with my box or Win8 preview.  Thanks for checking!\n. Adding CORS support is a tough one because pre-CORS, SOP was a security feature.  However, I think IE6 provided cross-origin Ajax without CORS via the original XHR object?\n. Thanks for this!  Any idea when it will be included in webshims.stable.zip?  Or, is it already?\n. The Chrome Team released a polyfill that you might want to merge into Webshims Lib:\n\nhttps://github.com/GoogleChrome/dialog-polyfill\n. Hi Alex, thanks for your prompt attention to this.  I see that your fiddle is calling setOptions w/ mirrorValidity:true to make this work.  Why is that necessary?  I would expect the shim to behave like the real thing by default.  As I've said before, what makes Webshims Lib so awesome is that you write one like of JS code ($.webshims.polyfill(\"...\")) and everything works as expected in deficient browsers... so requiring the extra step of calling setOptions to make the form work as expected isn't really any better (and might actually be more work) than adding .ws-date, etc to the CSS.  Would you please turn on mirrorValidity by default?\n. Hi Alex, I can appreciate the need to decide which features take priority.  I don't think that you can say that :invalid is always bad for CSS and that :user-error is always good; rather, that there are situations when one is preferable over the other.  :invalid is useful for when a form is initially displayed, to help the user know which fields require their attention.  And although legacy browser support is certainly important, I think that modern-yet-incomplete browser support is equally important.  In the case of FF, is a site more likely to have users coming in with FF3.6 or with FF21?  FF users tend to update their browsers more frequently than IE users.  But even IE10 users deserve the best experience that we can give them.\n\nMaybe the optimal solution is for Webshims Lib to test whether the browser will support mirrorValidity and turn it on for those that do.  In answering the question, is it more important for CSS to feel more native or JS, I think that more sites will need the CSS to feel native than the JS, and again, detecting browser support can help in both regards.\n\nUltimately, though, I think this introduces a bigger concern:  the reason that I use Webshims Lib and teach it as the best solution in all of my HTML5 classes is that it's very much a drop-in solution with virtually no customization required.  Other polyfills I've seen require too much setup/customization just to get them to work.  Right now we're only discussing one issue, but I'm afraid that if we make exceptions for the :invalid selector, then it's a slippery slope to make other exceptions as well.\n\nAlex, you do such a wonderful job making Webshims Lib the easiest, most encompassing polyfill I've ever seen, and I feel very confident teaching it to the hundreds of students who attend my HTML5 course every year.  Please keep up the good work, and be careful to maintain its ease-of-use as you continue to improve it.\n. Have no fear, we do teach them the Constraint Validation API :)  Thanks for your consideration and thanks again for sharing all of your hard work with the rest of us!\n. BTW the page mentioned uses an older version of Webshims Lib but I have the same problem on my development website on localhost using the stable zip from 11/20.\n. Thanks for the quick response, Alex!\n. Thanks for the quick turnaround, Alex.  I'll try it with oninput and verify that it works.  We're using inline handlers because it's in an introductory example to Webshims Lib for students with little JavaScript experience who don't know jQuery.\n. Hi Alex, I'd just like to chime in that I agree with mreinstein that consistency would be a Good Thing(TM).  I don't have a preference between webshim and webshims.\n. Hi Alex, I just tested using webshim.pollyfill() and it fails \"webshim is not defined\".  I looked in polyfiller.js and cannot find webshim defined there. webshims (with an S) is defined.  I just want to be clear as to whether a global/window webshim object is supposed to be defined and, if not, what is the official preferred way to invoke webshim.\n. I see, I was using the code from the download 1.13.1 button on the demos page.  Any idea when you'll be releasing 1.13.2?\n. IRT @mreinstein 's clarification, I'd just like to sat that, although I use nodejs for my own work, I prefer that Webshim NOT _require_ npm.  Not all web developers are willing/able to use Node, and it would be difficult to sell Webshim to those folks.  Part of what makes Webshim so great is that a developer can just download and extract the ZIP, include polyfiller.js, and write a single webshim.polyfill() cal to include what they need on a page.  Anything more complicated than that discourages the noobs and reduces the Webshim audience.\n\nWhile I'm chiming in, I'd also like Webshim to _never_ drop support for IE6 or any outdated browser.  The whole point of a polyfill is support the dinosaurs.  It might be ideal to add an _option_ that specifies which browsers to support, but I feel that the default should be to go back as far as possible.\n. @mreinstein You're right, I misunderstood.  I'm certainly OK with adding NPM support if it's not required. I also suggest making certain that the easiest path is clearly stated first in all docs :)\n\nI agree about the baggage but I think Webshim already solves that problem by conditionally loading only the necessary polyfills, no separate versions a la jQuery 1.9/2.0 required.\n\nOf course there is no point to supporting browsers that the audience doesn't use, but again, if the support is conditionally loaded and was already there from the beginnings of Webshim, then I don't see a penalty to retaining that support, and I see a certain benefit.\n. Hmmm I think I disagree:  I think the plumbing _is_ what makes Webshim so wonderful.  Most task-specific polyfills that I've encountered require a lot of configuration or at least a lot of separate scripts and links to load.  The beautiful thing about Webshim is that it requires only one script (in addition to its dependencies on modernizr/jquery) and one single JS command (webshim.polyfill()) and you're done.\n\nNow, under the covers, I'm not opposed to allowing different loader modules and other low-level customizations, and I'm also not opposed to allowing power users to select which Webshim polyfills to include in their own projects, and to decide how to include them.  I also support the notion that Webshim have a little of logic to detect if a loader is already present, and use the appropriate mechanism to use or load its own, and even to load modernizr.js and/or jquery.js if needed.\n. Thanks!  I will do that, but I have to warn you, I've been a slacker when it comes to learning GitHub so it might take me a while to figure it out!\n. Sounds like a good idea to me.\n. I just saw this and thought I should mention:  according the spec, the pattern attribute is only allowed on input type=text, not type=tel.  Some browsers will support pattern on other input types, but not all of them.  It sucks, because ideally we would like the customized-virtual-keyboard/keypad behavior of type=tel (or type=number) along with pattern restriction, but again, that is not allowed per HTML5.\n. Hmmmm doesn't relying on $.prop go against your goal of eliminating Webshim's dependency on jQuery?\n. PS - thanks for refactoring my code :)\n. Alex, I tried rewriting my script to use VanillaJS, and this problem reappeared.  I put the $.prop code back in, and wrapped it all in a jQuery ready handler, but the default caption is still showing and does not go away.  Can you please look at the problem at http://beta.dealingtree.com/demo/ ?\n. Oops, never mind, I figured out that I missed the $.prop to get the textTracks from the video\n. Alex, wouldn't extendNative:true be a good way to add this for browsers with partial forms support? \n\n[sent from my MacBook Wheel]\n\n----- Reply message -----\nFrom: \"Samuel Williams\" notifications@github.com\nTo: \"aFarkas/webshim\" webshim@noreply.github.com\nSubject: [webshim] <input minlength=\"x\" /> not supported? (#425)\nDate: Wed, Aug 13, 2014 9:53 AM\n\nThanks for the very helpful and quick response.\n\nI found 1 didn't seem to work on Chromium for some reason. In the end I used the pattern and wrote custom logic for the validation.\n\n&mdash;\nReply to this email directly or view it on GitHub.\n. Looks cool, thanks!  Is there any way to auto-detect the position:sticky in the CSS and apply the styles without needing the .ws-sticky class?\n. @gouch The devil here, as usual, is IE8!  @thirdender Maybe svgweb is not the right polyfill, or maybe it could be adapted somehow, or maybe there's a better fit using a \"lesser\" polyfill... I don't know, I'd just love to see a good SVG polyfill in webshim :)\n. Sweet, thanks! :)\n. ",
    "thomasmaas": "Related: Support html5 form attribute. Makes it possible to have form elements outside the form by referencing the form id. Works natively in all modern browsers except IE. See http://www.impressivewebs.com/html5-form-attribute/\n\nI'm guessing that a polyfill for the form attribute first has to fix the submit event bug described above\n. Related: Support html5 form attribute. Makes it possible to have form elements outside the form by referencing the form id. Works natively in all modern browsers except IE. See http://www.impressivewebs.com/html5-form-attribute/\n\nI'm guessing that a polyfill for the form attribute first has to fix the submit event bug described above\n. ",
    "amercier": "Thanks for your advice Thomas. \n\nThe problem here is that I **need** to be able to use the \"trigger\" event. In this example I'm using a button to trigger it, but what I need is that it could be triggered by anything else (AJAX callback, whatever...).\n. Thanks @aFarkas, I will use the `checkValidity()` method as I'm always using custom validation messages.\n\nI understand and agree that webshims role is to stick as close as possible with the spec. But IMHO, the HTML5 spec should cover the ability to trigger validation programatically :'(\n. Thanks for your advice Thomas. \n\nThe problem here is that I **need** to be able to use the \"trigger\" event. In this example I'm using a button to trigger it, but what I need is that it could be triggered by anything else (AJAX callback, whatever...).\n. Thanks @aFarkas, I will use the `checkValidity()` method as I'm always using custom validation messages.\n\nI understand and agree that webshims role is to stick as close as possible with the spec. But IMHO, the HTML5 spec should cover the ability to trigger validation programatically :'(\n. ",
    "gossi": "I'm currently writing a php lib that generates a html5 form (https://github.com/gossi/webform). I will want to use webshim to polyfill the html5 features.\n1. The ID problem. Well, even if webshim works with jquery, I'm thinking about creating javascript code, e.g. for additional validation. A good example here would be two passwords fields and if they don't match, mark them invalid. I will stick with standard javascript (= document.getElementById()) and so, .getShadowElement() is from my point inconsistent and unreliable and I think not even for me. Like placing a `&lt;input type=\"date\" id=\"my_id\"&gt;` and you can't access it through document.getElementById('my_id') seems weird.\n2. Yes, I'm already planning on using additional classes but only where I need them. I don't see a reason to use them on that case, because browser already support that.\n3. Checkout my project, open webform/demo/webform.php\n4. Ah - my fault to not carefully read it. I checked back the specs:\n   - http://dev.w3.org/html5/spec/Overview.html#the-placeholder-attribute and\n   - http://developers.whatwg.org/common-input-element-attributes.html#the-placeholder-attribute\n\nbut couldn't find it, can you point me to the spec?\n\nLooking forward on your comments.\n\nThanks.\n. 1. Thanks for clearifying that :)\n2. OK\n3. Hmm, Firefox Inspector tells me, -moz-box-sizing is border-box. I can see its shadow width misses the padding: 2px directive (without the padding: 21px; from the image indent). I'm on Aurora maybe that's a difference (I committed my new stuff here).\n4. Nice overview, thanks for that. Now I can't wait php 5.4 (with traits) goes mainstream ;)\n. I've worked on with webshims, which is a pleasure to work with. As so, I come around some bugs, which I will report as individual issues.\n\nBut with shadow elements, it would be cool to have an opt-out option off automatically scaling the control. Due to its css-classes its easy to add them to your already defined rules. Anyway one needs to use !important which isn't a good practice thing. I updated my source code, so if you turn off the element-style-width, it works perfectly :)\n\nBy the way, there is a problem with step-controls positioning in chrome and firefox. But I already see in issue #23, this is a top priority and subject to change?\n. Thanks for the opt-out, works great.\n\nFor the jquery bug, their tracker seems down. Need to wait on that, thanks for the testcase on that.\n. I'm currently writing a php lib that generates a html5 form (https://github.com/gossi/webform). I will want to use webshim to polyfill the html5 features.\n1. The ID problem. Well, even if webshim works with jquery, I'm thinking about creating javascript code, e.g. for additional validation. A good example here would be two passwords fields and if they don't match, mark them invalid. I will stick with standard javascript (= document.getElementById()) and so, .getShadowElement() is from my point inconsistent and unreliable and I think not even for me. Like placing a `&lt;input type=\"date\" id=\"my_id\"&gt;` and you can't access it through document.getElementById('my_id') seems weird.\n2. Yes, I'm already planning on using additional classes but only where I need them. I don't see a reason to use them on that case, because browser already support that.\n3. Checkout my project, open webform/demo/webform.php\n4. Ah - my fault to not carefully read it. I checked back the specs:\n   - http://dev.w3.org/html5/spec/Overview.html#the-placeholder-attribute and\n   - http://developers.whatwg.org/common-input-element-attributes.html#the-placeholder-attribute\n\nbut couldn't find it, can you point me to the spec?\n\nLooking forward on your comments.\n\nThanks.\n. 1. Thanks for clearifying that :)\n2. OK\n3. Hmm, Firefox Inspector tells me, -moz-box-sizing is border-box. I can see its shadow width misses the padding: 2px directive (without the padding: 21px; from the image indent). I'm on Aurora maybe that's a difference (I committed my new stuff here).\n4. Nice overview, thanks for that. Now I can't wait php 5.4 (with traits) goes mainstream ;)\n. I've worked on with webshims, which is a pleasure to work with. As so, I come around some bugs, which I will report as individual issues.\n\nBut with shadow elements, it would be cool to have an opt-out option off automatically scaling the control. Due to its css-classes its easy to add them to your already defined rules. Anyway one needs to use !important which isn't a good practice thing. I updated my source code, so if you turn off the element-style-width, it works perfectly :)\n\nBy the way, there is a problem with step-controls positioning in chrome and firefox. But I already see in issue #23, this is a top priority and subject to change?\n. Thanks for the opt-out, works great.\n\nFor the jquery bug, their tracker seems down. Need to wait on that, thanks for the testcase on that.\n. ",
    "TiGR": "On one project order change does not help, but code there is much complicated, so it's hard to reduce it to simple reproduceable version.\n. On one project order change does not help, but code there is much complicated, so it's hard to reduce it to simple reproduceable version.\n. ",
    "chrisveness": "Alexander,\n\nThanks for doing that fix - looks like Safari caused you something of a \nheadache there, from what sense I can make of the github changes!\n\nDo you have any idea when you hope to release 1.8.10? My client would like \nto have that fix, so if it will be a long time, I'll try to use 1.8.10RC2, \nbut I would prefer to wait for a final release if it won't be too far away.\n\nThanks again,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Wednesday, March 28, 2012 7:45 AM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\nThanks for your bugreport, I will look into this this weekend.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-4749647\n. Alexander,\n\nThanks for this information.\n\nI've decided to try with the 1.8.10RC2 - the client is now testing it on a \ndevelopment site.\n\nI'll let you know if I receive any feedback!\n\nThanks again,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Sunday, April 15, 2012 11:13 AM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\nYeah, Safari 5.0-5.0.2 is really a pain in the ass. Currently, I don't have \nthe time to do a new realease. I think it will take about two weeks.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-5138274\n. Alexander,\n\nI'm afraid it seems that there are still validation problems with 1.8.10RC2 on the iPad.\n\nMy client has sent me the attached screenshot.\n\nYou should be able to replicate it by going to \n    dev.smallshopsunited.com/register.php\nand clicking the 'register now' button which will take you to the page of the screenshot. I guess you'll be able to check I've done everything correctly just by viewing source - I think the server-side coding is of no relevance?\n\nMany thanks for you efforts,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas \nSent: Sunday, April 15, 2012 11:13 AM \nTo: Chris Veness \nSubject: Re: [webshim] Validation pattern problem on iPad (#107) \n\nYeah, Safari 5.0-5.0.2 is really a pain in the ass.\n. Alexander,\n\nThis is very strange.\n\nWhen I do the same thing (go to \nhttp://dev.smallshopsunited.com/register.php, click 'Register Now' to go to \nhttp://dev.smallshopsunited.com/register2.php) and enter $.webshims.version \ninto the console, I see \"1.8.10RC2\".\n\nI can't think how you could be seeing something different! (You are going to \nthe dev site, aren't you?).\n\nI'm using Chrome 18.0.1025.151, if it affects anything.\n\nThanks, Chris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Wednesday, April 18, 2012 7:41 PM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\n@chrisveness\n\nJust tryed your demo and while I can confirm, that the exact same bug \nhappens, it seems, that there was a deployment issue. If I enter:\n\n```\n$.webshims.version\n```\n\ninto the console it gives me still the old webshims version 1.8.9.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-5205649\n. Alexander,\n\nThanks for doing that fix - looks like Safari caused you something of a \nheadache there, from what sense I can make of the github changes!\n\nDo you have any idea when you hope to release 1.8.10? My client would like \nto have that fix, so if it will be a long time, I'll try to use 1.8.10RC2, \nbut I would prefer to wait for a final release if it won't be too far away.\n\nThanks again,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Wednesday, March 28, 2012 7:45 AM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\nThanks for your bugreport, I will look into this this weekend.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-4749647\n. Alexander,\n\nThanks for this information.\n\nI've decided to try with the 1.8.10RC2 - the client is now testing it on a \ndevelopment site.\n\nI'll let you know if I receive any feedback!\n\nThanks again,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Sunday, April 15, 2012 11:13 AM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\nYeah, Safari 5.0-5.0.2 is really a pain in the ass. Currently, I don't have \nthe time to do a new realease. I think it will take about two weeks.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-5138274\n. Alexander,\n\nI'm afraid it seems that there are still validation problems with 1.8.10RC2 on the iPad.\n\nMy client has sent me the attached screenshot.\n\nYou should be able to replicate it by going to \n    dev.smallshopsunited.com/register.php\nand clicking the 'register now' button which will take you to the page of the screenshot. I guess you'll be able to check I've done everything correctly just by viewing source - I think the server-side coding is of no relevance?\n\nMany thanks for you efforts,\n\nChris\n\n-----Original Message----- \nFrom: Alexander Farkas \nSent: Sunday, April 15, 2012 11:13 AM \nTo: Chris Veness \nSubject: Re: [webshim] Validation pattern problem on iPad (#107) \n\nYeah, Safari 5.0-5.0.2 is really a pain in the ass.\n. Alexander,\n\nThis is very strange.\n\nWhen I do the same thing (go to \nhttp://dev.smallshopsunited.com/register.php, click 'Register Now' to go to \nhttp://dev.smallshopsunited.com/register2.php) and enter $.webshims.version \ninto the console, I see \"1.8.10RC2\".\n\nI can't think how you could be seeing something different! (You are going to \nthe dev site, aren't you?).\n\nI'm using Chrome 18.0.1025.151, if it affects anything.\n\nThanks, Chris\n\n-----Original Message----- \nFrom: Alexander Farkas\nSent: Wednesday, April 18, 2012 7:41 PM\nTo: Chris Veness\nSubject: Re: [webshim] Validation pattern problem on iPad (#107)\n\n@chrisveness\n\nJust tryed your demo and while I can confirm, that the exact same bug \nhappens, it seems, that there was a deployment issue. If I enter:\n\n```\n$.webshims.version\n```\n\ninto the console it gives me still the old webshims version 1.8.9.\n\n---\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aFarkas/webshim/issues/107#issuecomment-5205649\n. ",
    "joeybaker": "I'm not entirely sure I understand what you have in mind here? It seems like the purpose of webshims is very different from the [html5please api](http://api.html5please.com/).\n\nwebshims' purpose it to make available otherwise unavailable features. Near as I can tell, the html5please API is simply popping up a notice when features are unavailable.\n. Ah, I see \u2013 the idea is to patch what can't be patched by providing a notice to the user.\n\nI think I'd vote against. Webshims should polyfill a problem, HTML5please should notify users when the problem isn't/can't be polyfilled. My need to for each approach varies by project, and I'd rarely want to mix the two.\n. @aFarkas https://github.com/mapbox/corslite might be a possiblity?\n. @aFarkas That script looks great!\n. Good point. I think what you can do is specify require.js as a dependency, then specify `polyfill.js` as your \"main\" file?\n. @aFarkas #321 by @derduher :) \n. Sure:\n\n``` js\nvar $ = require('jquery')\n\nrequire('modernizr')\nrequire('./lib/polyfiller.js')\n\n// polyfill forms for old browsers\n$.webshims.setOptions({basePath: '/js/lib/shims/'})\n$.webshims.setOptions('forms', {addValidators: true})\n$.webshims.polyfill('forms es5')\n```\n\nModernizr has to be run through [thlorenz/browserify-shim](https://github.com/thlorenz/browserify-shim) to make it CommonJS compatible. FWIW, here's what my Gruntfile looks like for the [jmreidy/grunt-browserify](https://github.com/jmreidy/grunt-browserify) task:\n\n``` js\n    , browserify: {\n      main: {\n        src: './js/main.js'\n        , dest: './public/js/main.js'\n        , options: {\n          debug: true\n          , shim: {\n            jquery: {\n              path: './bower_components/jquery/jquery.js'\n              , exports: '$'\n            }\n            , modernizr: {\n              path: './bower_components/webshim/demos/js-webshim/dev/extras/modernizr-custom.js'\n              , exports: 'Modernizr'\n            }\n          }\n        }\n      }\n```\n\nAlso worth noting: my `polyfiller.js` a [custom build](http://afarkas.github.io/webshim/demos/#polyfill-foucs), you could instead point to the `polyfiller.js` included with webshims.\n. Yea, I'm using both bower and npm. Something about installing CSS via npm just doesn't sit right with me. \u2026plus, I like that bower takes care of version conflicts by forcing you to choose one, instead of just including both.\n\nIt's not super ideal, but the rule is simple: client side code gets installed via bower, server-side via NPM. If it's being used in both places, use judgement, but NPM should probably win.\n\nI took a look at browsernizr, but it looked like a lot of complexity for something that is both a) going through a [major rewrite](http://modernizr.com/news/modernizr-v3-stickers-diversity/) and b) the online build tool is so easy to use. Basically, I'm willing to put up with \"the wrong\" way of doing things for a while :)\n\nUsually, I just use the build of modernizr included with webshims. If I need something more custom, I'll use webshims [build as a base, and then use modernizr's build tool on top of that](http://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-shiv-cssclasses-addtest-prefixed-testprop-testallprops-prefixes-domprefixes-elem_track-load).\n. Ah, yes, I see your confusion: I'm using Grunt to run both jquery and modernizr through a shim to make them commonJS compatible and allow them to be required via just a name instead of a path.\n\nThis wasn't perfectly clear in the original section of the Gruntfile I copy/pasted, so I've updated it.\n. oh\u2026\u00a0one more thing worth noting: I have to manually copy/past the `js/lib/shims` directory from webshims. Here's the part of the Gruntfile that does that:\n\n``` js\nshell: {\n  cpShims: {\n    command: 'rm -rf public/js/shims && cp -r bower_components/webshim/demos/js-webshim/dev/shims public/js/lib'\n  }\n}\n```\n. I changed that precise line above. It's now: `'./bower_components/jquery/jquery.js'` :)\n\nProject structure:\n\n```\n|- js/\n|  `- main.js      // app entry point source code\n|- bower_components/\n|  `-webshim/\n|  `-jquery/\n|- public/\n|  `- js/\n|     |- lib/\n|     |  `- shims/  \n|      `- main.js   // bundled source code via browserify\n```\n. see: mreinstein/webshim-browserify-example#1\n. I'm not entirely sure I understand what you have in mind here? It seems like the purpose of webshims is very different from the [html5please api](http://api.html5please.com/).\n\nwebshims' purpose it to make available otherwise unavailable features. Near as I can tell, the html5please API is simply popping up a notice when features are unavailable.\n. Ah, I see \u2013 the idea is to patch what can't be patched by providing a notice to the user.\n\nI think I'd vote against. Webshims should polyfill a problem, HTML5please should notify users when the problem isn't/can't be polyfilled. My need to for each approach varies by project, and I'd rarely want to mix the two.\n. @aFarkas https://github.com/mapbox/corslite might be a possiblity?\n. @aFarkas That script looks great!\n. Good point. I think what you can do is specify require.js as a dependency, then specify `polyfill.js` as your \"main\" file?\n. @aFarkas #321 by @derduher :) \n. Sure:\n\n``` js\nvar $ = require('jquery')\n\nrequire('modernizr')\nrequire('./lib/polyfiller.js')\n\n// polyfill forms for old browsers\n$.webshims.setOptions({basePath: '/js/lib/shims/'})\n$.webshims.setOptions('forms', {addValidators: true})\n$.webshims.polyfill('forms es5')\n```\n\nModernizr has to be run through [thlorenz/browserify-shim](https://github.com/thlorenz/browserify-shim) to make it CommonJS compatible. FWIW, here's what my Gruntfile looks like for the [jmreidy/grunt-browserify](https://github.com/jmreidy/grunt-browserify) task:\n\n``` js\n    , browserify: {\n      main: {\n        src: './js/main.js'\n        , dest: './public/js/main.js'\n        , options: {\n          debug: true\n          , shim: {\n            jquery: {\n              path: './bower_components/jquery/jquery.js'\n              , exports: '$'\n            }\n            , modernizr: {\n              path: './bower_components/webshim/demos/js-webshim/dev/extras/modernizr-custom.js'\n              , exports: 'Modernizr'\n            }\n          }\n        }\n      }\n```\n\nAlso worth noting: my `polyfiller.js` a [custom build](http://afarkas.github.io/webshim/demos/#polyfill-foucs), you could instead point to the `polyfiller.js` included with webshims.\n. Yea, I'm using both bower and npm. Something about installing CSS via npm just doesn't sit right with me. \u2026plus, I like that bower takes care of version conflicts by forcing you to choose one, instead of just including both.\n\nIt's not super ideal, but the rule is simple: client side code gets installed via bower, server-side via NPM. If it's being used in both places, use judgement, but NPM should probably win.\n\nI took a look at browsernizr, but it looked like a lot of complexity for something that is both a) going through a [major rewrite](http://modernizr.com/news/modernizr-v3-stickers-diversity/) and b) the online build tool is so easy to use. Basically, I'm willing to put up with \"the wrong\" way of doing things for a while :)\n\nUsually, I just use the build of modernizr included with webshims. If I need something more custom, I'll use webshims [build as a base, and then use modernizr's build tool on top of that](http://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-shiv-cssclasses-addtest-prefixed-testprop-testallprops-prefixes-domprefixes-elem_track-load).\n. Ah, yes, I see your confusion: I'm using Grunt to run both jquery and modernizr through a shim to make them commonJS compatible and allow them to be required via just a name instead of a path.\n\nThis wasn't perfectly clear in the original section of the Gruntfile I copy/pasted, so I've updated it.\n. oh\u2026\u00a0one more thing worth noting: I have to manually copy/past the `js/lib/shims` directory from webshims. Here's the part of the Gruntfile that does that:\n\n``` js\nshell: {\n  cpShims: {\n    command: 'rm -rf public/js/shims && cp -r bower_components/webshim/demos/js-webshim/dev/shims public/js/lib'\n  }\n}\n```\n. I changed that precise line above. It's now: `'./bower_components/jquery/jquery.js'` :)\n\nProject structure:\n\n```\n|- js/\n|  `- main.js      // app entry point source code\n|- bower_components/\n|  `-webshim/\n|  `-jquery/\n|- public/\n|  `- js/\n|     |- lib/\n|     |  `- shims/  \n|      `- main.js   // bundled source code via browserify\n```\n. see: mreinstein/webshim-browserify-example#1\n. ",
    "alonisser": "of course the purpose is different. what I suggested is using html5please api for unsupported (yet) html5 features. so the web developer doesn't need to integrate both..\n. thanks! I'll try that\n. of course the purpose is different. what I suggested is using html5please api for unsupported (yet) html5 features. so the web developer doesn't need to integrate both..\n. thanks! I'll try that\n. ",
    "rfarris2000": "I figured this out.  For asp.net change the behavior of the button to UseSubmitBehavior=false\n. I upgraded from 1.8.9 to 1.8.10 but I'm still not seeing this working.  When I tab out of a field it adds the form-ui-invalid class right away.\n. I figured this out.  For asp.net change the behavior of the button to UseSubmitBehavior=false\n. I upgraded from 1.8.9 to 1.8.10 but I'm still not seeing this working.  When I tab out of a field it adds the form-ui-invalid class right away.\n. ",
    "tdeluca": "Thanks so much Alexander.  I didn't realize you had to also check some of the \"Extensibility\" boxes also.  I got it working now.  Thanks for your help.\n. Thanks so much Alexander.  I didn't realize you had to also check some of the \"Extensibility\" boxes also.  I got it working now.  Thanks for your help.\n. ",
    "tinyfly": "Not exactly but as I was creating a jsFiddle to show you the problem I figured out what the issue was. \n\nI have a `clearForm` plugin where I clear all the form fields and that was causing the validation to stop working. I know this is a bit outside the scope of your plugin but could you take a look and see if you know why the clearForm bits would cause this?\n\nSee clearForm being called in the disableFields function:\nhttp://jsfiddle.net/tinyfly/dj3vw/\n. Perfect. Thank you very much. \n\nBy the way, thanks for creating Webshims. It is extremely useful and has made my current project much easier.\n. Not exactly but as I was creating a jsFiddle to show you the problem I figured out what the issue was. \n\nI have a `clearForm` plugin where I clear all the form fields and that was causing the validation to stop working. I know this is a bit outside the scope of your plugin but could you take a look and see if you know why the clearForm bits would cause this?\n\nSee clearForm being called in the disableFields function:\nhttp://jsfiddle.net/tinyfly/dj3vw/\n. Perfect. Thank you very much. \n\nBy the way, thanks for creating Webshims. It is extremely useful and has made my current project much easier.\n. ",
    "jhartikainen": "No problem, I was looking into hacking this into the script myself anyway. Besides this case, the placeholder fix in this was the best I found.\n. For posterity, here's something that makes accessing 'value' directly work - note that this was only tested in IE9, as that was the only browser I wanted to patch. Might work in some others as well.\n\nEssentially what this does is make sure that all access to 'value' is routed via jQuery's methods, and as such, the polyfill will work its magic.\n\nNote: It's probably kind of hacky... ;)\n\n```\n(function() {\n    var originalProp = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    var settingProp = false;\n    var gettingProp = false;\n    Object.defineProperty(HTMLInputElement.prototype, 'value', {\n        set: function(val) {\n            if(settingProp) {\n                originalProp.set.call(this, val);\n                return;\n            }\n\n            settingProp = true;\n            $(this).prop('value', val);\n\n\n            settingProp = false;\n        },\n\n        get: function() {\n            if(gettingProp) {\n                return originalProp.get.call(this);\n            }\n\n            gettingProp = true;\n            var val = $(this).prop('value');\n            gettingProp = false;\n\n            return val;\n        }\n    });\n\n})();\n```\n. No problem, I was looking into hacking this into the script myself anyway. Besides this case, the placeholder fix in this was the best I found.\n. For posterity, here's something that makes accessing 'value' directly work - note that this was only tested in IE9, as that was the only browser I wanted to patch. Might work in some others as well.\n\nEssentially what this does is make sure that all access to 'value' is routed via jQuery's methods, and as such, the polyfill will work its magic.\n\nNote: It's probably kind of hacky... ;)\n\n```\n(function() {\n    var originalProp = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    var settingProp = false;\n    var gettingProp = false;\n    Object.defineProperty(HTMLInputElement.prototype, 'value', {\n        set: function(val) {\n            if(settingProp) {\n                originalProp.set.call(this, val);\n                return;\n            }\n\n            settingProp = true;\n            $(this).prop('value', val);\n\n\n            settingProp = false;\n        },\n\n        get: function() {\n            if(gettingProp) {\n                return originalProp.get.call(this);\n            }\n\n            gettingProp = true;\n            var val = $(this).prop('value');\n            gettingProp = false;\n\n            return val;\n        }\n    });\n\n})();\n```\n. ",
    "qvsinh": "you can code like this:\n\n$(this).attr('value','').blur();\n. you can code like this:\n\n$(this).attr('value','').blur();\n. ",
    "didip": "In short, It's just my incompetence in doing CSS.\n\nYesterday, i was struggling on styling the border: 1px solid #333. But I've figured it out by using more specified rules (as you just said).\n\nI'm closing this pull request, sorry for taking your time. \n. In short, It's just my incompetence in doing CSS.\n\nYesterday, i was struggling on styling the border: 1px solid #333. But I've figured it out by using more specified rules (as you just said).\n\nI'm closing this pull request, sorry for taking your time. \n. ",
    "doits": "yes, it fixes it. thanks for the info.\n\nshouldn't this be included in the plugin then? so users not have to apply this manually?\n\nAt least it should be documented somewhere in the wiki.\n\nAnyway, it works now for me, so I'll close this.\n. try to change `validityUIEvents` - afaik it defines the events on which to validate the input. I've set it to the following to only listen to `change` and `refreshvalidityui` (used internally by shims).\n\n```\n$.webshims.setOptions('forms', {\n    validityUIEvents: 'change refreshvalidityui',\n});\n```\n. I was referring to trunk version, see [definition in form-core.js](https://github.com/aFarkas/webshim/blob/15ab9f2e60e16f46f919f28c9c646c417e3b2344/src/shims/form-core.js#L425). Looks like you have to wait for a final release.\n. nope, does not solve it. I have to manually change the entry and then select the empty one again to make it work.\n. i found the source of error at the code of `webshims/extras/custom-validity.js`:\n\n```\n83         if(document.addEventListener && document.createElement('form').checkValidity){\n84             document.addEventListener('change', onEventTest, true);\n85         }\n```\n\n`document.addEventListener` is not available in IE? Maybe change it to something jquery-like `$(document).on('change', ... );`? Or is it `checkValidity`?\n. closing this in favor of #121\n. reopen since pull request is invalid.\n. I'm not sure what fixed it, but with the latest version (even WITHOUT pull request #125), it works in IE8 now. So at least for this issue, the pull request is not necessary.\n. All right, whatever is needed to fix IE is appropriate. So I'll close this.\n. there you go! updated my commit.\n. thanks, exactly what I wanted!\n. I didn't know it can be used with xml, too ... sorry\n\nand I t raced it down to the initialization of attributes without values. So this seems wrong in xhtml (done at line 925 of `polyfiller.js`):\n\n```\n<select required name=\"a\"><option disabled /></select>\n```\n\nyou have to include an empty value at least:\n\n```\n<select required=\"\" name=\"a\"><option disabled=\"\" /></select>\n```\n\nI'm not sure if this is the only case - I just got it to initialize correctly. You can try to use it then in your app with this fix, maybe that was all?\n. including this should be easy, I'll open a pull request soon.\n\nis this all needed to fix it?\n. I guess from testing several options I got this \"wrong\" combination ... changed it now, using\n\n```\n$.webshims.setOptions('forms', {\n    customMessages: true,\n    overrideMessages: false,\n    validityUIEvents: 'change refreshvalidityui',\n    replaceValidationUI: true\n});\n```\n\nbut this pr is about the following example (at least what I understand from \"Binds change listener to both sides of a dependent validation\"):\n\n```\n<input type=\"password\" name=\"pw\" id=\"pw\">\n<input type=\"password\" name=\"pw_again\" id=\"pw_again\" data-dependent-validation=\"pw\">\n```\n1. Enter something into `#pw`, e.g. \"aaa\"\n2. Enter something other into `#pw_again`, e.g. \"bbb\"\n3. `#pw_again` is marked as invalid (like it should)\n4. Change `#pw` to \"bbb\"\n5. `#pw_again` is still marked as invalid (even though the inputs are the same)\n. yeah, looks good, thx\n. just discovered this: to prevent loading of `shim.css` simply do this before `polyfill`:\n\n```\n$.webshims.setOptions({\n    loadStyles: false\n});\n```\n\nThen you can include that file in your `.s(c|a)ss` files.\n. very nice, exactly what I was looking for! Missed it in documentation ...\n. I tested the fix, but for me it does not work. Using following configuration, maybe that's why it does not fix it?\n\n```\n$.webshims.setOptions('forms', { \n     customMessages: true,\n     overrideMessages: false,\n     validityUIEvents: 'change refreshvalidityui',\n     replaceValidationUI: true\n});\n```\n. I just checked it, but for my chrome the following is already false:\n\n```\nif($.browser.webkit && Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity){\n```\n\nso the fix after does not kick in at all. `$.browser.webkit` is undefined.\n\nedit: it goes on with `$.browser.chrome`, but then `e.which` is always `1` on left click. On right click it does not even trigger `mouseup`.\n. I'm using `Version 21.0.1180.81 beta` of `Google Chrome` on OS X Mountain Lion. Maybe the problem is the beta version?\n. I just updated it, still no luck.\n\nI've a site running live with the dev version, see https://tub.stellenticket.de/en/my_account/start/. When right clicking on the \"password\" input, validation goes off on my chrome (and says I should fill out the e-mail).\n. Sorry, non-ssl not available at all. I'll temporary enable a non-ssl version tomorrow (in 12-14 hours) if it helps.\n. ok, here's a non-ssl test-version: http://test.markus.stellenticket.de/en/my_account/start/\n. thanks, updated it - worked!\n. my way of cross browser testing is to go live with it ;-) just kidding, there were some fixes I needed in trunk version, so I pushed that live. Quality of trunk is good in general afaik.\n. btw: are you sure this is fixed? Still having this error on IE8.\n. ah not that error, but `required` is not working (form is getting submitted with empty input).\n. ;-) just to be sure you are aware of it: it sill submits the form without required input (see jsfiddle above).\n. updated to latest dev version, works now, thanks!\n. Ah ok, now I understand it ... I thought `placeholder` and `data-placeholder` were two different things ...\n\nAnyway, looks like `appendPolyfillTo` is not working with it (eg. on http://afarkas.github.com/webshim/demos/demos/webforms.html ):\n\n```\n>>> $(\"<input type='date' data-placeholder='test' id='testdate'>\").appendPolyfillTo('body')\n[input#testdate] // no placeholder visible on new input at the bottom of page\n```\n. so if the width is '3em' and I can input numbers with 3 chars without clipping and see the arrows, the field is wider than 3em (at least for a monotype font) - which means that safari does it wrong.\n\nBecause widths are definately different on safari (wider) and firefox (narrower, with webshims).\n\nSo webshims does it right if that's the case (is there some spec defining the right behaviour?)\n. thanks, exactly what I searched for!\n. Thanks for the info. Reported it at mozilla: https://bugzilla.mozilla.org/show_bug.cgi?id=982039\n. just tested again and safari 7.0.2 **has the same bug** as ff - so only chrome does it right atm.\n. Good idea, I made some progress by just changing the order of the `fill_in`:\n\n```\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n```\n\nThis makes the `password_confirmation` field blur and trigger the change event, because the `user_name` is filled in last (and filling in the field adds some ms so I suspect webshim has enough time to validate the inputs).\n\nBut now comes the weird part: I run a few tests, sometimes it worked, sometimes webshim was again skipped. It was totally weird, until I discovered: it depends on whether the browser has focus or not during the test run!\n\nSo when I start the test from my console, the browser opens a few seconds later and I manually focus the browser, then everything works.\n\nIf I do not focus the browser window and it is in the background (I stay in my console), it does not work. And it does not depend on whether I delay the tests after filling in the inputs or not. Even after sleeping 5 seconds webshim does not kick in.\n\nI even did the two tests in a row with a 5 second sleep between them:\n\n```\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n\n    sleep 5\n\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n```\n\nSo the browser pops up, I do not focus it, it does the first click and webshim does not prevent it, then it sleeps 5 seconds during which I have time to focus the window, and then with the same test but with browser focue webshim kicks in and it works. If I do not focus the browser during that period of time, the second tests fails, too.\n\nI repeated if 20 times or so with expected results.\n\nFirst I thought about these two possibilities:\n- webshim has some sort of optimization to detect whether the browser window has focus or not and sleeps if it has not?\n- maybe my OS (OSX 10.9) somehow limits background programs in a way and therefore some javascript does not execute correctly? [App Nap](https://www.apple.com/osx/advanced-technologies/) (second topic)?\n\nBut I traced it down to: The `blur` event is not triggered when the browser is in background! And it looks webshims depends on it to validate the password confirmation.\n\n```\n$(function() {\n      # this shows only an alert when browser has focus\n      $('input').on('blur', function() {\n          alert('blur');\n      });\n});\n```\n\nSo when `selenium` fills in the fields when the browser is in the background, no `blur` is triggered. (The same goes for `focus` btw., maybe other events, too)\n\nIs this a browser/firefox bug? Or is this how it should be?\n. See http://fiddle.jshell.net/WPpPy/30/ for a demo. Looks like browser behave differently here. The question is: what is the correct behavior?\n. @mreinstein time was definitely an issue with my first tries, too (where the password validation was filled in last), but still even with those sleeps it does not work when the browser window is not focused:\n\n```\nvisit '/some/web/page'\nsleep 1 # <-- wait one second\nfill_in \"user_password\", :with => 'password'\nsleep 1\nfill_in \"user_password_confirmation\", :with => 'different_password'\nsleep 1\nfill_in \"user_name\", :with => 'username'\nsleep 1\nclick_button \"submit\"\n```\n\nIt simply looks like the `blur` event is not thrown and webshim cannot react on it. When I trigger it manually:\n\n```\nvisit '/some/web/page'\nfill_in \"user_password\", :with => 'password'\nfill_in \"user_password_confirmation\", :with => 'different_password'\nfill_in \"user_name\", :with => 'username'\n\npage.execute_script '$(\"input\").trigger(\"blur\");'\n\nclick_button \"submit\"\n```\n\nIt works, even without any wait time and when the browser is not focused.\n\nLater I'll spin up some virtual machines to see whether this problem exists solely on OSX, you can test by yourself in the fiddle http://fiddle.jshell.net/WPpPy/30/ whether `blur` works without focus - I'm not sure what the correct behavior should be, but atm I think browser's javascript should not behave differently whether the window is focused or not. I'll contact the browser vendors, too, maybe they can explain it and maybe there is a thought behind it.\n\nAt least it looks like this all is not a bug in webshim ;-)\n. I did some more testing, and IE 11 and FF on windows 8.1 do not trigger the `blur` event, either, when the window is not focused. So only Safari always triggers the `blur` event.\n\nBut I think I got the reason behind all this is: If the browser is not focused, you cannot focus an input with `$('input').focus();`. If the input is not focused, an `$('input').blur();` cannot blur it, so no blur event is triggered. Only our new IE 6 (Safari) behaves differently and always triggers the event, even if the input wasn't really focused or blurred. See http://fiddle.jshell.net/WPpPy/34/ for testing.\n\nA workaround for the testing framework might be to trigger the events with `$('input').trigger('focus')` etc. - or the browser simply must stay focused during the test run.\n. Yeah, [I reported it to selenium](https://code.google.com/p/selenium/issues/detail?id=7346) so let's see what they make out of it. This is no webshim issue, so this issue can be closed.\n. I basically just want to do things on the input like hiding, fading in or out, etc.\n\nFor now I simply had a wrapper for `hide` and `show` like this:\n\n``` javascript\nfunction hide($input) {\n    $input.getShadowElement().hide()\n}\n```\n\nThis got me either the real input (if it was not shadowed) or the shadow element.\n\nThe solution with a container for shadow elements is really good, because then there would be only one element to work with. So one input would always be replaced by one shadow element (with possible child elements).\n. I still think webshim should add a wrapper by itself around a shadow dom with multiple elements. This way there would always be just one shadow dom element and one could work with it. And it would make `getShadowElement()` really return the complete shadow element (not just one part).\n\nMy use case is really that simple: I want to hide one single input (polyfilled or not).\n\nFor now (and in case everything stays like it is now) I will add wrappers around the input manually and do it that way. But still I think it is a little bit too complicated and unclean, too, that `getShadowElement()` does not return the complete shadow element.\n. Thanks. No need to hurry, since I can work around this for now with manual wrappers.\n. All right, thanks for the information. Looks like I got it wrong with the select placeholder and webshim, I'll do i the html4 way then.\n. ah ok I was mislead by the firefox behaviour and thought of simply it is invalid if the value is blank. Does this mean firefox is doing it wrong --> firefox bug?\n. for reference: they're working on it at firefox at least now: https://bugzilla.mozilla.org/show_bug.cgi?id=1052045\n. yes, it fixes it. thanks for the info.\n\nshouldn't this be included in the plugin then? so users not have to apply this manually?\n\nAt least it should be documented somewhere in the wiki.\n\nAnyway, it works now for me, so I'll close this.\n. try to change `validityUIEvents` - afaik it defines the events on which to validate the input. I've set it to the following to only listen to `change` and `refreshvalidityui` (used internally by shims).\n\n```\n$.webshims.setOptions('forms', {\n    validityUIEvents: 'change refreshvalidityui',\n});\n```\n. I was referring to trunk version, see [definition in form-core.js](https://github.com/aFarkas/webshim/blob/15ab9f2e60e16f46f919f28c9c646c417e3b2344/src/shims/form-core.js#L425). Looks like you have to wait for a final release.\n. nope, does not solve it. I have to manually change the entry and then select the empty one again to make it work.\n. i found the source of error at the code of `webshims/extras/custom-validity.js`:\n\n```\n83         if(document.addEventListener && document.createElement('form').checkValidity){\n84             document.addEventListener('change', onEventTest, true);\n85         }\n```\n\n`document.addEventListener` is not available in IE? Maybe change it to something jquery-like `$(document).on('change', ... );`? Or is it `checkValidity`?\n. closing this in favor of #121\n. reopen since pull request is invalid.\n. I'm not sure what fixed it, but with the latest version (even WITHOUT pull request #125), it works in IE8 now. So at least for this issue, the pull request is not necessary.\n. All right, whatever is needed to fix IE is appropriate. So I'll close this.\n. there you go! updated my commit.\n. thanks, exactly what I wanted!\n. I didn't know it can be used with xml, too ... sorry\n\nand I t raced it down to the initialization of attributes without values. So this seems wrong in xhtml (done at line 925 of `polyfiller.js`):\n\n```\n<select required name=\"a\"><option disabled /></select>\n```\n\nyou have to include an empty value at least:\n\n```\n<select required=\"\" name=\"a\"><option disabled=\"\" /></select>\n```\n\nI'm not sure if this is the only case - I just got it to initialize correctly. You can try to use it then in your app with this fix, maybe that was all?\n. including this should be easy, I'll open a pull request soon.\n\nis this all needed to fix it?\n. I guess from testing several options I got this \"wrong\" combination ... changed it now, using\n\n```\n$.webshims.setOptions('forms', {\n    customMessages: true,\n    overrideMessages: false,\n    validityUIEvents: 'change refreshvalidityui',\n    replaceValidationUI: true\n});\n```\n\nbut this pr is about the following example (at least what I understand from \"Binds change listener to both sides of a dependent validation\"):\n\n```\n<input type=\"password\" name=\"pw\" id=\"pw\">\n<input type=\"password\" name=\"pw_again\" id=\"pw_again\" data-dependent-validation=\"pw\">\n```\n1. Enter something into `#pw`, e.g. \"aaa\"\n2. Enter something other into `#pw_again`, e.g. \"bbb\"\n3. `#pw_again` is marked as invalid (like it should)\n4. Change `#pw` to \"bbb\"\n5. `#pw_again` is still marked as invalid (even though the inputs are the same)\n. yeah, looks good, thx\n. just discovered this: to prevent loading of `shim.css` simply do this before `polyfill`:\n\n```\n$.webshims.setOptions({\n    loadStyles: false\n});\n```\n\nThen you can include that file in your `.s(c|a)ss` files.\n. very nice, exactly what I was looking for! Missed it in documentation ...\n. I tested the fix, but for me it does not work. Using following configuration, maybe that's why it does not fix it?\n\n```\n$.webshims.setOptions('forms', { \n     customMessages: true,\n     overrideMessages: false,\n     validityUIEvents: 'change refreshvalidityui',\n     replaceValidationUI: true\n});\n```\n. I just checked it, but for my chrome the following is already false:\n\n```\nif($.browser.webkit && Modernizr.bugfreeformvalidation && !webshims.bugs.bustedValidity){\n```\n\nso the fix after does not kick in at all. `$.browser.webkit` is undefined.\n\nedit: it goes on with `$.browser.chrome`, but then `e.which` is always `1` on left click. On right click it does not even trigger `mouseup`.\n. I'm using `Version 21.0.1180.81 beta` of `Google Chrome` on OS X Mountain Lion. Maybe the problem is the beta version?\n. I just updated it, still no luck.\n\nI've a site running live with the dev version, see https://tub.stellenticket.de/en/my_account/start/. When right clicking on the \"password\" input, validation goes off on my chrome (and says I should fill out the e-mail).\n. Sorry, non-ssl not available at all. I'll temporary enable a non-ssl version tomorrow (in 12-14 hours) if it helps.\n. ok, here's a non-ssl test-version: http://test.markus.stellenticket.de/en/my_account/start/\n. thanks, updated it - worked!\n. my way of cross browser testing is to go live with it ;-) just kidding, there were some fixes I needed in trunk version, so I pushed that live. Quality of trunk is good in general afaik.\n. btw: are you sure this is fixed? Still having this error on IE8.\n. ah not that error, but `required` is not working (form is getting submitted with empty input).\n. ;-) just to be sure you are aware of it: it sill submits the form without required input (see jsfiddle above).\n. updated to latest dev version, works now, thanks!\n. Ah ok, now I understand it ... I thought `placeholder` and `data-placeholder` were two different things ...\n\nAnyway, looks like `appendPolyfillTo` is not working with it (eg. on http://afarkas.github.com/webshim/demos/demos/webforms.html ):\n\n```\n>>> $(\"<input type='date' data-placeholder='test' id='testdate'>\").appendPolyfillTo('body')\n[input#testdate] // no placeholder visible on new input at the bottom of page\n```\n. so if the width is '3em' and I can input numbers with 3 chars without clipping and see the arrows, the field is wider than 3em (at least for a monotype font) - which means that safari does it wrong.\n\nBecause widths are definately different on safari (wider) and firefox (narrower, with webshims).\n\nSo webshims does it right if that's the case (is there some spec defining the right behaviour?)\n. thanks, exactly what I searched for!\n. Thanks for the info. Reported it at mozilla: https://bugzilla.mozilla.org/show_bug.cgi?id=982039\n. just tested again and safari 7.0.2 **has the same bug** as ff - so only chrome does it right atm.\n. Good idea, I made some progress by just changing the order of the `fill_in`:\n\n```\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n```\n\nThis makes the `password_confirmation` field blur and trigger the change event, because the `user_name` is filled in last (and filling in the field adds some ms so I suspect webshim has enough time to validate the inputs).\n\nBut now comes the weird part: I run a few tests, sometimes it worked, sometimes webshim was again skipped. It was totally weird, until I discovered: it depends on whether the browser has focus or not during the test run!\n\nSo when I start the test from my console, the browser opens a few seconds later and I manually focus the browser, then everything works.\n\nIf I do not focus the browser window and it is in the background (I stay in my console), it does not work. And it does not depend on whether I delay the tests after filling in the inputs or not. Even after sleeping 5 seconds webshim does not kick in.\n\nI even did the two tests in a row with a 5 second sleep between them:\n\n```\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n\n    sleep 5\n\n    visit '/some/web/page'\n    fill_in \"user_password\", :with => 'password'\n    fill_in \"user_password_confirmation\", :with => 'different_password'\n    fill_in \"user_name\", :with => 'username'\n    click_button \"submit\"\n```\n\nSo the browser pops up, I do not focus it, it does the first click and webshim does not prevent it, then it sleeps 5 seconds during which I have time to focus the window, and then with the same test but with browser focue webshim kicks in and it works. If I do not focus the browser during that period of time, the second tests fails, too.\n\nI repeated if 20 times or so with expected results.\n\nFirst I thought about these two possibilities:\n- webshim has some sort of optimization to detect whether the browser window has focus or not and sleeps if it has not?\n- maybe my OS (OSX 10.9) somehow limits background programs in a way and therefore some javascript does not execute correctly? [App Nap](https://www.apple.com/osx/advanced-technologies/) (second topic)?\n\nBut I traced it down to: The `blur` event is not triggered when the browser is in background! And it looks webshims depends on it to validate the password confirmation.\n\n```\n$(function() {\n      # this shows only an alert when browser has focus\n      $('input').on('blur', function() {\n          alert('blur');\n      });\n});\n```\n\nSo when `selenium` fills in the fields when the browser is in the background, no `blur` is triggered. (The same goes for `focus` btw., maybe other events, too)\n\nIs this a browser/firefox bug? Or is this how it should be?\n. See http://fiddle.jshell.net/WPpPy/30/ for a demo. Looks like browser behave differently here. The question is: what is the correct behavior?\n. @mreinstein time was definitely an issue with my first tries, too (where the password validation was filled in last), but still even with those sleeps it does not work when the browser window is not focused:\n\n```\nvisit '/some/web/page'\nsleep 1 # <-- wait one second\nfill_in \"user_password\", :with => 'password'\nsleep 1\nfill_in \"user_password_confirmation\", :with => 'different_password'\nsleep 1\nfill_in \"user_name\", :with => 'username'\nsleep 1\nclick_button \"submit\"\n```\n\nIt simply looks like the `blur` event is not thrown and webshim cannot react on it. When I trigger it manually:\n\n```\nvisit '/some/web/page'\nfill_in \"user_password\", :with => 'password'\nfill_in \"user_password_confirmation\", :with => 'different_password'\nfill_in \"user_name\", :with => 'username'\n\npage.execute_script '$(\"input\").trigger(\"blur\");'\n\nclick_button \"submit\"\n```\n\nIt works, even without any wait time and when the browser is not focused.\n\nLater I'll spin up some virtual machines to see whether this problem exists solely on OSX, you can test by yourself in the fiddle http://fiddle.jshell.net/WPpPy/30/ whether `blur` works without focus - I'm not sure what the correct behavior should be, but atm I think browser's javascript should not behave differently whether the window is focused or not. I'll contact the browser vendors, too, maybe they can explain it and maybe there is a thought behind it.\n\nAt least it looks like this all is not a bug in webshim ;-)\n. I did some more testing, and IE 11 and FF on windows 8.1 do not trigger the `blur` event, either, when the window is not focused. So only Safari always triggers the `blur` event.\n\nBut I think I got the reason behind all this is: If the browser is not focused, you cannot focus an input with `$('input').focus();`. If the input is not focused, an `$('input').blur();` cannot blur it, so no blur event is triggered. Only our new IE 6 (Safari) behaves differently and always triggers the event, even if the input wasn't really focused or blurred. See http://fiddle.jshell.net/WPpPy/34/ for testing.\n\nA workaround for the testing framework might be to trigger the events with `$('input').trigger('focus')` etc. - or the browser simply must stay focused during the test run.\n. Yeah, [I reported it to selenium](https://code.google.com/p/selenium/issues/detail?id=7346) so let's see what they make out of it. This is no webshim issue, so this issue can be closed.\n. I basically just want to do things on the input like hiding, fading in or out, etc.\n\nFor now I simply had a wrapper for `hide` and `show` like this:\n\n``` javascript\nfunction hide($input) {\n    $input.getShadowElement().hide()\n}\n```\n\nThis got me either the real input (if it was not shadowed) or the shadow element.\n\nThe solution with a container for shadow elements is really good, because then there would be only one element to work with. So one input would always be replaced by one shadow element (with possible child elements).\n. I still think webshim should add a wrapper by itself around a shadow dom with multiple elements. This way there would always be just one shadow dom element and one could work with it. And it would make `getShadowElement()` really return the complete shadow element (not just one part).\n\nMy use case is really that simple: I want to hide one single input (polyfilled or not).\n\nFor now (and in case everything stays like it is now) I will add wrappers around the input manually and do it that way. But still I think it is a little bit too complicated and unclean, too, that `getShadowElement()` does not return the complete shadow element.\n. Thanks. No need to hurry, since I can work around this for now with manual wrappers.\n. All right, thanks for the information. Looks like I got it wrong with the select placeholder and webshim, I'll do i the html4 way then.\n. ah ok I was mislead by the firefox behaviour and thought of simply it is invalid if the value is blank. Does this mean firefox is doing it wrong --> firefox bug?\n. for reference: they're working on it at firefox at least now: https://bugzilla.mozilla.org/show_bug.cgi?id=1052045\n. ",
    "taolong": "I have tried this already. I realize the issue is with Safari's default error message which is much different from others. Now, I am writing my own messages and load it for all browsers.\n. I have tried this already. I realize the issue is with Safari's default error message which is much different from others. Now, I am writing my own messages and load it for all browsers.\n. ",
    "captone": "XML syntax is part of the HTML5 standard:\nhttp://www.w3.org/TR/html5-diff/#syntax \nAnd it states:\nNote that XML documents must be served with an XML media type such as application/xhtml+xml or application/xml.\n\nSo I don't understand your point. Can you explain why you say \"it's wrong\"?\n. You're right. Changing line 925 fixed the issue. Can you change the source code on the repository accordingly?\n\nThanks for your help\n. A quick search in the source code leads to the following lines that need at least one modification \n16.js:1256\n17.js:1256\n19.js:1500\n2.js:1852\n2.js:6\n21.js:1234\n23.js:1641\n24.js:1500\n3.js:6\n3.js:1852\n4.js:6\n5.js:261\n59.js:261\n\nThanks a lot\n. XML syntax is part of the HTML5 standard:\nhttp://www.w3.org/TR/html5-diff/#syntax \nAnd it states:\nNote that XML documents must be served with an XML media type such as application/xhtml+xml or application/xml.\n\nSo I don't understand your point. Can you explain why you say \"it's wrong\"?\n. You're right. Changing line 925 fixed the issue. Can you change the source code on the repository accordingly?\n\nThanks for your help\n. A quick search in the source code leads to the following lines that need at least one modification \n16.js:1256\n17.js:1256\n19.js:1500\n2.js:1852\n2.js:6\n21.js:1234\n23.js:1641\n24.js:1500\n3.js:6\n3.js:1852\n4.js:6\n5.js:261\n59.js:261\n\nThanks a lot\n. ",
    "rahearn": "This should address issue gh-120\n. This should address issue gh-120\n. ",
    "jokeyrhyme": "Urgh, this is really hard to reproduce in Mobile Safari. Why does UI WebView have different performance characteristics!??!?\n\nOh well, guess I'm going to have to check each commit one by one...\n. Yep, it's basically my number 1 priority when I get back to work this week. I noticed that there were some iOS and Safari fixes in 1.8.10... I think 1.8.9 still had the issue, but I'll be sure to try and give you something constructive before I let this matter rest. :)\n. Damn, 1.8.10 doesn't address the issue. Guess that means I'm back to trying out commit by commit since 1.8.1. :P\n\nWill hopefully have some results for you later today.\n. Okay, I basically did a binary search on the commits between 1.8.1 and 1.8.2, and I think I've narrowed the problem down to the commit that introduced the performance issues (on 2011-10-08):\n- SHA: 5055db014db70e60c72e988bdeb351b994e40179 was smooth, then\n- SHA: ae049ba7e2cb99e237f8f2355f92b7d546e0b87f was jerky\n\nFor completeness, I did some webshim package comparisons with SHA: 3a956277f52362a24c57c5b946761b70c51acc35, to see how \"forms\" versus \"forms-ext\" performed once data-list support had been completely moved into \"forms-ext\".\nIt's weird, but using \"forms\" doesn't seem to fix the problem, even though data-list should only be included with \"forms-ext\".\n\nI also tried that with \"es5\", and the problem went away.\n\nTo sum up, I believe the following statements are true:\n- `$.webshims.polyfill('es5');` never caused any jerkiness\n- `$.webshims.polyfill('forms');` and `$.webshims.polyfill('forms-ext');` introduced jerkiness with SHA: ae049ba7e2cb99e237f8f2355f92b7d546e0b87f\n- problem is demonstrable with complex forms in a native iOS app with embedded WebKit\n- performance in pure Mobile Safari is too good to properly demonstrate issue\n\nI don't know what conclusions we can draw from this at this stage. Given the actual cost in trying to figure this out (must own an OS X device, an iOS device and have a free Apple developer account) I would forgive you if you said you couldn't help me further.\n\nIf you have more tests you can think of to narrow this down, I'd be delighted to help. At this stage, we will be rolling back to 1.8.1 until this situation is resolved, however we may end up dropping webshims in the longterm (which means I'll have to manage all of these poly-fills myself, yuck).\n. Sorry, I was in a hurry (this was a mission-critical application) so I ended up just dropping webshims.\n\nAre you experiencing this issue too?\n\nIf I was going to debug this, I'd look at each of the components that \"forms\" and \"forms-ext\" pull in, and selectively enable them one by one. You'd have to modify the webshims source temporarily to do this.\n\nUpdating to the latest jQuery and experimenting with different event handling approaches might also help: e.g. attaching events to `document` or `body` with bubbling versus attaching events directly to each element instance.\n. Urgh, this is really hard to reproduce in Mobile Safari. Why does UI WebView have different performance characteristics!??!?\n\nOh well, guess I'm going to have to check each commit one by one...\n. Yep, it's basically my number 1 priority when I get back to work this week. I noticed that there were some iOS and Safari fixes in 1.8.10... I think 1.8.9 still had the issue, but I'll be sure to try and give you something constructive before I let this matter rest. :)\n. Damn, 1.8.10 doesn't address the issue. Guess that means I'm back to trying out commit by commit since 1.8.1. :P\n\nWill hopefully have some results for you later today.\n. Okay, I basically did a binary search on the commits between 1.8.1 and 1.8.2, and I think I've narrowed the problem down to the commit that introduced the performance issues (on 2011-10-08):\n- SHA: 5055db014db70e60c72e988bdeb351b994e40179 was smooth, then\n- SHA: ae049ba7e2cb99e237f8f2355f92b7d546e0b87f was jerky\n\nFor completeness, I did some webshim package comparisons with SHA: 3a956277f52362a24c57c5b946761b70c51acc35, to see how \"forms\" versus \"forms-ext\" performed once data-list support had been completely moved into \"forms-ext\".\nIt's weird, but using \"forms\" doesn't seem to fix the problem, even though data-list should only be included with \"forms-ext\".\n\nI also tried that with \"es5\", and the problem went away.\n\nTo sum up, I believe the following statements are true:\n- `$.webshims.polyfill('es5');` never caused any jerkiness\n- `$.webshims.polyfill('forms');` and `$.webshims.polyfill('forms-ext');` introduced jerkiness with SHA: ae049ba7e2cb99e237f8f2355f92b7d546e0b87f\n- problem is demonstrable with complex forms in a native iOS app with embedded WebKit\n- performance in pure Mobile Safari is too good to properly demonstrate issue\n\nI don't know what conclusions we can draw from this at this stage. Given the actual cost in trying to figure this out (must own an OS X device, an iOS device and have a free Apple developer account) I would forgive you if you said you couldn't help me further.\n\nIf you have more tests you can think of to narrow this down, I'd be delighted to help. At this stage, we will be rolling back to 1.8.1 until this situation is resolved, however we may end up dropping webshims in the longterm (which means I'll have to manage all of these poly-fills myself, yuck).\n. Sorry, I was in a hurry (this was a mission-critical application) so I ended up just dropping webshims.\n\nAre you experiencing this issue too?\n\nIf I was going to debug this, I'd look at each of the components that \"forms\" and \"forms-ext\" pull in, and selectively enable them one by one. You'd have to modify the webshims source temporarily to do this.\n\nUpdating to the latest jQuery and experimenting with different event handling approaches might also help: e.g. attaching events to `document` or `body` with bubbling versus attaching events directly to each element instance.\n. ",
    "benbabics": "bump. has there been any progress made?\n. bump. has there been any progress made?\n. ",
    "McWatt": "Thanks for the tip!\n. I tried that, but get a different error:\n\nUncaught TypeError: Cannot set property '' of undefined\n. Thanks for the tip!\n. I tried that, but get a different error:\n\nUncaught TypeError: Cannot set property '' of undefined\n. ",
    "jrencz": "@aFarkas It still may not show entire placeholder in certain circumstances https://bugs.webkit.org/show_bug.cgi?id=156399\n. @aFarkas It still may not show entire placeholder in certain circumstances https://bugs.webkit.org/show_bug.cgi?id=156399\n. ",
    "whjvenyl": "I might not have been specific enough when I opened that issue. \n\nThe problem I'm faced with is as follows:\n- using webshim to render an input-range with replaceUI : true\n- webshim uses jquery-ui to render the slider\n- the slide event callback that should get triggered by jquery-ui doesn't get triggered anymore due to an overwrite in webshim (http://jqueryui.com/demos/slider/#event-slide)\n\nFiddle showing the problem: http://jsfiddle.net/TXU2v/\n\nCause of the problem:\n- the slide function defined as param in 'jQuery.webshims.setOptions' gets overwritten in 'form-number-date-ui', line 504 \n\nrange.slider($.extend({}, options.slider, elem.data('slider'), {\n  slide: change\n}));\n\ninstead of merged, thus not getting executed anymore.\n. Well, what I'm really irritated with is that I can't bind a slide event to the slider itself anymore but rather have to bind it onto the global document to have it trigger. (inside create isn't applicable for my use-case)\n. I might not have been specific enough when I opened that issue. \n\nThe problem I'm faced with is as follows:\n- using webshim to render an input-range with replaceUI : true\n- webshim uses jquery-ui to render the slider\n- the slide event callback that should get triggered by jquery-ui doesn't get triggered anymore due to an overwrite in webshim (http://jqueryui.com/demos/slider/#event-slide)\n\nFiddle showing the problem: http://jsfiddle.net/TXU2v/\n\nCause of the problem:\n- the slide function defined as param in 'jQuery.webshims.setOptions' gets overwritten in 'form-number-date-ui', line 504 \n\nrange.slider($.extend({}, options.slider, elem.data('slider'), {\n  slide: change\n}));\n\ninstead of merged, thus not getting executed anymore.\n. Well, what I'm really irritated with is that I can't bind a slide event to the slider itself anymore but rather have to bind it onto the global document to have it trigger. (inside create isn't applicable for my use-case)\n. ",
    "subhan-git": "First I like to thank for your response and for the great library. \n\nI tried the link(in IE9) http://jsfiddle.net/trixta/uBMzU/1/  and it is working fine, when it is loading very first time in iframe . But when I tried to refresh the iframe I am getting the same error( unspecified error in IE9) and polyfill for input types like number, range, date etc., are not working.\n\nI tested the same file (webforms.html in iframe) in my local machine the error is throwing on very first time itself.\n\nThanks\n. you need to overwrite the position on CSS for IE7only.\n\nif you are using modernizr then add  this below css rule in you style sheet \n\n \".lt-ie8 .step-controls{position:absolute} \"\n\n(or)\n\n\"<!--[if IE 7]> <style>.step-controls{position:absolute}</style> <![endif]-->\"\n\nHope this may solve your issue\n. First I like to thank for your response and for the great library. \n\nI tried the link(in IE9) http://jsfiddle.net/trixta/uBMzU/1/  and it is working fine, when it is loading very first time in iframe . But when I tried to refresh the iframe I am getting the same error( unspecified error in IE9) and polyfill for input types like number, range, date etc., are not working.\n\nI tested the same file (webforms.html in iframe) in my local machine the error is throwing on very first time itself.\n\nThanks\n. you need to overwrite the position on CSS for IE7only.\n\nif you are using modernizr then add  this below css rule in you style sheet \n\n \".lt-ie8 .step-controls{position:absolute} \"\n\n(or)\n\n\"<!--[if IE 7]> <style>.step-controls{position:absolute}</style> <![endif]-->\"\n\nHope this may solve your issue\n. ",
    "agross": "Was able to reproduce on Android 4.0 as well -- updated the issue title.\n. I've been using the browsers that either come with my Samsung Galaxy phones (one running 2.2, the other 4.0.4) or the one from cyanogenmod 9 on my tablet (== 4.0.4). I don't know if they differ from the simulator browser, but at least they show a date picker for both Android 2.2 and 4.0. It seems they do have `input[type=\"date\"]` support since I don't see any jQuery involved - it's an OS date picker that pops up\n\nI just confirmed using your jsfiddle sample -- it trims leading zeros from days and months, regardless of the forced language (tried `en` and `de`).\n. I just retested on the Galaxy Tab 10.1 - where jQuery shows up %-) I might have missed something here. \n\nThe problem persists on my phone, though. I'll try to record a video later today.\n. Let's start with an image: http://twitpic.com/a46tt7\n. I've [forked](http://jsfiddle.net/Htfxh/) your sample, because I don't know how to get the console output from the browser. Here's what got printed:\n\n```\nui: true\ntype: date\ntypebugs: undefined\nvaliditybugs: false\nvalue: 2012-7-5\n```\n\n`value` appeared after I chose the date and tapped outside of the `input` element.\n\nIt looks just the same on Chrome, except that the day and month parts are prefixed with 0.\n. http://jsfiddle.net/trixta/Htfxh/2/\n\n```\nui: true\ntype: date\ntypebugs: undefined\nvaliditybugs: false\nvalue: 2012-7-5\nvalidity: false\ntypeMismatch: true\n```\n\nhttp://jsfiddle.net/trixta/Htfxh/3/\n\n```\nui: true\ntype: date\ntypebugs: false\nvaliditybugs: false\nform-core\nform-datalist\ndom-extend\nform-native-extend\nform-message\nform-native-fix\nvalue: 2012-7-5\nvalidity: false\ntypeMismatch: true\n```\n. Very good! Thank you very much! \n. Alexander,\n\nHere's what I did:\n- cloned this repo\n- copied all the files from demos/js-webshim/minified to my project\n- cleared Android's browser cache\n- navigated to the page with the date input element\n- tapped the element\n\n...and the built-in selector still shows up, yielding 2012-8-7 as today's date. When submitting the form, there's still the validation error popping up (i.e. the OS'es date picker shows up).\n\nPlease let me know how I can help you with this issue, possibly by testing on jsfiddle again.\n. Let me know when I can start a new test!\n. Hm, nothing changed with the updated files. What should I expect to see, a jQuery date picker?\n. It's working! :) Thank you for your support, Alexander!\n. Was able to reproduce on Android 4.0 as well -- updated the issue title.\n. I've been using the browsers that either come with my Samsung Galaxy phones (one running 2.2, the other 4.0.4) or the one from cyanogenmod 9 on my tablet (== 4.0.4). I don't know if they differ from the simulator browser, but at least they show a date picker for both Android 2.2 and 4.0. It seems they do have `input[type=\"date\"]` support since I don't see any jQuery involved - it's an OS date picker that pops up\n\nI just confirmed using your jsfiddle sample -- it trims leading zeros from days and months, regardless of the forced language (tried `en` and `de`).\n. I just retested on the Galaxy Tab 10.1 - where jQuery shows up %-) I might have missed something here. \n\nThe problem persists on my phone, though. I'll try to record a video later today.\n. Let's start with an image: http://twitpic.com/a46tt7\n. I've [forked](http://jsfiddle.net/Htfxh/) your sample, because I don't know how to get the console output from the browser. Here's what got printed:\n\n```\nui: true\ntype: date\ntypebugs: undefined\nvaliditybugs: false\nvalue: 2012-7-5\n```\n\n`value` appeared after I chose the date and tapped outside of the `input` element.\n\nIt looks just the same on Chrome, except that the day and month parts are prefixed with 0.\n. http://jsfiddle.net/trixta/Htfxh/2/\n\n```\nui: true\ntype: date\ntypebugs: undefined\nvaliditybugs: false\nvalue: 2012-7-5\nvalidity: false\ntypeMismatch: true\n```\n\nhttp://jsfiddle.net/trixta/Htfxh/3/\n\n```\nui: true\ntype: date\ntypebugs: false\nvaliditybugs: false\nform-core\nform-datalist\ndom-extend\nform-native-extend\nform-message\nform-native-fix\nvalue: 2012-7-5\nvalidity: false\ntypeMismatch: true\n```\n. Very good! Thank you very much! \n. Alexander,\n\nHere's what I did:\n- cloned this repo\n- copied all the files from demos/js-webshim/minified to my project\n- cleared Android's browser cache\n- navigated to the page with the date input element\n- tapped the element\n\n...and the built-in selector still shows up, yielding 2012-8-7 as today's date. When submitting the form, there's still the validation error popping up (i.e. the OS'es date picker shows up).\n\nPlease let me know how I can help you with this issue, possibly by testing on jsfiddle again.\n. Let me know when I can start a new test!\n. Hm, nothing changed with the updated files. What should I expect to see, a jQuery date picker?\n. It's working! :) Thank you for your support, Alexander!\n. ",
    "zachfisic": "I do believe in fact it is a cache-related issue, although I did observe it on another occasion even after a hard refresh. Fortunately, I don't think it has anything to do with the shim itself (as I observed the problem even when your scripts weren't injected). More than likely, the culprit is some other script attempting to interact with the input's value before it should. Probably the result of some ambiguous coding on my end.\n\nIf I can build a reliable test case, I'll mail it to you. In the meantime, this is a non-issue.\n. I do believe in fact it is a cache-related issue, although I did observe it on another occasion even after a hard refresh. Fortunately, I don't think it has anything to do with the shim itself (as I observed the problem even when your scripts weren't injected). More than likely, the culprit is some other script attempting to interact with the input's value before it should. Probably the result of some ambiguous coding on my end.\n\nIf I can build a reliable test case, I'll mail it to you. In the meantime, this is a non-issue.\n. ",
    "sylvaingi": "Works like a charm!\n. Works like a charm!\n. ",
    "lhanson": "Looks great, I can't wait for the release so I can use it in my current project!\n. No worries, rest up and feel better. If you have a particular idea of where the problem lies I could try taking a stab at it if I have some time.\n. Looks great, thanks!\n. Looks great, I can't wait for the release so I can use it in my current project!\n. No worries, rest up and feel better. If you have a particular idea of where the problem lies I could try taking a stab at it if I have some time.\n. Looks great, thanks!\n. ",
    "mathieul": "There is a bug in this implementation that prevents it to work when using the minified version hosted on CDN (obviously needs more investigation work, maybe a race condition?).\n\nThis pull request is not usable until this is fixed, therefore closing it.\n. Thanks @aFarkas, that's great!\n\nI wish I would have started with master rather than 1.8.12, I would have seen your commit. Definitely a mistake I won't make again in the future :wink:.\n\nI'm really glad you went for spec violation on this one. The specs are too restricting and your arguments make a lot of sense. And being able to customize the placeholder also accommodates for shorter fields, when the default one gets truncated in Chrome for instance.\n. There is a bug in this implementation that prevents it to work when using the minified version hosted on CDN (obviously needs more investigation work, maybe a race condition?).\n\nThis pull request is not usable until this is fixed, therefore closing it.\n. Thanks @aFarkas, that's great!\n\nI wish I would have started with master rather than 1.8.12, I would have seen your commit. Definitely a mistake I won't make again in the future :wink:.\n\nI'm really glad you went for spec violation on this one. The specs are too restricting and your arguments make a lot of sense. And being able to customize the placeholder also accommodates for shorter fields, when the default one gets truncated in Chrome for instance.\n. ",
    "thirdender": "Hi, sorry for taking so long to follow up on this. I've e-mailed you a public link to the code I was using and the change I made that corrected the problem. Thanks!\n. I can't remember all the details (I stopped thinking IE6/7 about a year ago), but I've always included two `META` tags:\n\n```\n<link href='/lib/favicon.ico' rel='shortcut icon' />\n<link href='/lib/favicon.ico' rel='icon' type='image/ico' />\n```\n\nMore reading: [Stack Overflow: favicon not working in IE](http://stackoverflow.com/questions/122067/favicon-not-working-in-ie)\n. Unfortunately, svgweb is probably the best and most comprehensive SVG polyfill available, but after using it in several projects I can say it is not possible to use without modifications to your SVG file and any JS that interacts with it. It's a good plugin, but you'll spend a lot of time making your SVG work with svgweb. That said, svgweb has saved my rear on several projects, but I don't think it's a good fit for the webshim library.\n. Technically `user@domain` is a valid email address, and `domain` is the TLD. Think about it this way\u2026 `root@localhost` should be considered a valid e-mail address.\n\nThis is valid according to the W3C Working Group spec for the [e-mail input `value` attribute](http://www.w3.org/TR/html-markup/input.email.html#input.email.attrs.value.single). The regex provided by the W3C is:\n\n```\n/^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n```\n\nYou can test it quick in your Javascript console by running:\n\n```\n/^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test('user@domain')\n```\n\nThis should return true in the console.\n. Oh, I forgot to mention\u2026 If you need specific rules (if a client absolutely wants to require e-mail addresses have a `.com` or some other similar TLD), you should be able to add a pattern for custom validation. Found this on an [answer on SO](http://stackoverflow.com/a/20461010/379160):\n\n```\n<input type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" />\n```\n\nThis should work with Webshims (not 100% sure), but as pointed out on [html5pattern.com](http://html5pattern.com/Emails), \"Every regular expression for email validation is missing something.\" They recommend just using the browser validation as is.\n. Hi, sorry for taking so long to follow up on this. I've e-mailed you a public link to the code I was using and the change I made that corrected the problem. Thanks!\n. I can't remember all the details (I stopped thinking IE6/7 about a year ago), but I've always included two `META` tags:\n\n```\n<link href='/lib/favicon.ico' rel='shortcut icon' />\n<link href='/lib/favicon.ico' rel='icon' type='image/ico' />\n```\n\nMore reading: [Stack Overflow: favicon not working in IE](http://stackoverflow.com/questions/122067/favicon-not-working-in-ie)\n. Unfortunately, svgweb is probably the best and most comprehensive SVG polyfill available, but after using it in several projects I can say it is not possible to use without modifications to your SVG file and any JS that interacts with it. It's a good plugin, but you'll spend a lot of time making your SVG work with svgweb. That said, svgweb has saved my rear on several projects, but I don't think it's a good fit for the webshim library.\n. Technically `user@domain` is a valid email address, and `domain` is the TLD. Think about it this way\u2026 `root@localhost` should be considered a valid e-mail address.\n\nThis is valid according to the W3C Working Group spec for the [e-mail input `value` attribute](http://www.w3.org/TR/html-markup/input.email.html#input.email.attrs.value.single). The regex provided by the W3C is:\n\n```\n/^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n```\n\nYou can test it quick in your Javascript console by running:\n\n```\n/^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test('user@domain')\n```\n\nThis should return true in the console.\n. Oh, I forgot to mention\u2026 If you need specific rules (if a client absolutely wants to require e-mail addresses have a `.com` or some other similar TLD), you should be able to add a pattern for custom validation. Found this on an [answer on SO](http://stackoverflow.com/a/20461010/379160):\n\n```\n<input type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" />\n```\n\nThis should work with Webshims (not 100% sure), but as pointed out on [html5pattern.com](http://html5pattern.com/Emails), \"Every regular expression for email validation is missing something.\" They recommend just using the browser validation as is.\n. ",
    "certainlyakey": "To those who will want to disable step arrows in IE with the latest version of webshim (17.04.2016) - this option, `stepArrows`, doesn't exist/work anymore.\n. To those who will want to disable step arrows in IE with the latest version of webshim (17.04.2016) - this option, `stepArrows`, doesn't exist/work anymore.\n. ",
    "devlife": "Thanks for the quick response.  I am just using the default settings.  I set the basePath manually and all is well.  Thanks!\n. That did the trick.  Thanks.  Is this in the docs somewhere?\n. Yeah I've been trying to repro in a new project and can't.  There must be something else going on in the page that is having some negative side-effect.\n. I'll see if I can track down the offending code.  If I can find it I'll provide you with it.\n. I'm pretty much 100% sure that this issue has nothing to do with webshims.  For whatever reason, the number input has 4 change handlers on the page I'm looking at.  I haven't been able to identify where they are all coming from.  In addition, I added a number input on another page and the error doesn't occur.  \n. So I finally tracked down the issue.  I had the call to $.webshims.polyfill() in a div that was being used as an overlay (from jquery tools).  Apparently the code was being executed when the page was rendered (as expected) but was being executed again when the overlay was actually opened.  I think the issue is that webshims was applying multiple change handlers to the input.\n. No problem.  I just emailed it to you.  Let me know if you have any issues or questions.  If you don't mind, could you let me know if/how you fix it?\n\nThanks,\nMike\n. It's pretty simple. I can take care of it if you want. Shoot me an email to discuss. \n. That did the trick.  Thanks.\n. Thanks for the quick response.  I am just using the default settings.  I set the basePath manually and all is well.  Thanks!\n. That did the trick.  Thanks.  Is this in the docs somewhere?\n. Yeah I've been trying to repro in a new project and can't.  There must be something else going on in the page that is having some negative side-effect.\n. I'll see if I can track down the offending code.  If I can find it I'll provide you with it.\n. I'm pretty much 100% sure that this issue has nothing to do with webshims.  For whatever reason, the number input has 4 change handlers on the page I'm looking at.  I haven't been able to identify where they are all coming from.  In addition, I added a number input on another page and the error doesn't occur.  \n. So I finally tracked down the issue.  I had the call to $.webshims.polyfill() in a div that was being used as an overlay (from jquery tools).  Apparently the code was being executed when the page was rendered (as expected) but was being executed again when the overlay was actually opened.  I think the issue is that webshims was applying multiple change handlers to the input.\n. No problem.  I just emailed it to you.  Let me know if you have any issues or questions.  If you don't mind, could you let me know if/how you fix it?\n\nThanks,\nMike\n. It's pretty simple. I can take care of it if you want. Shoot me an email to discuss. \n. That did the trick.  Thanks.\n. ",
    "leeatkinson": "On further investigation, it looks as though it is Modernizr incorrectly reporting that number type is supported in IE10.I'll report the issue to them \n. On further investigation, it looks as though it is Modernizr incorrectly reporting that number type is supported in IE10.I'll report the issue to them \n. ",
    "Dreamwalker666": "There is a tool for creating packages https://npe.codeplex.com/ someone from the nuget team works on it.\n. There is a tool for creating packages https://npe.codeplex.com/ someone from the nuget team works on it.\n. ",
    "rocktrond": "Hi,\n\nI'm away for vacation, so I won't be able to look at it before next week, but I trust your desicion :)\n\nCheers,\nTrond\n\nSendt fra min iPhone\n\nDen 7. okt. 2012 kl. 16:34 skrev Alexander Farkas notifications@github.com:\n\n> @rocktrond\n> \n> I would like to close this issue. Could you please give me feedback to my answer above?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hi,\n\nI'm away for vacation, so I won't be able to look at it before next week, but I trust your desicion :)\n\nCheers,\nTrond\n\nSendt fra min iPhone\n\nDen 7. okt. 2012 kl. 16:34 skrev Alexander Farkas notifications@github.com:\n\n> @rocktrond\n> \n> I would like to close this issue. Could you please give me feedback to my answer above?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "drewB": "Sent you an email with info for a test case\n. What email should I send it to?\nOn Oct 6, 2012 8:41 AM, \"Alexander Farkas\" notifications@github.com wrote:\n\n> Could you please re-send your information. I can not find your mail :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9199246.\n. Great.I just resent it.\nOn Oct 6, 2012 11:57 AM, \"Alexander Farkas\" notifications@github.com\nwrote:\n\n> You can mail your information to info@corrupt-system.de and\n> alexander.farkas@aperto.de\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9201190.\n. Thank you so much.  That did fix it.  I have a couple follow up questions related to the best way to implement this.  \n1. How expensive is the updatePolyfill method?  We use Backbone js and are considering wrapping the render method to always call updatePolyfill after rendering.  The problem is that will cause updatePolyfill to be call multiple times for the same elements because we sometimes render subviews in the render method.  As a result, that subview will have updatePolyfill called twice.\n2.  Is there a way to tell if an element has webshim's active?  We would like to log a warning if we dynamically render an item but don't updatePolyfill or use htmlPolyfill?\n. Thanks!\n\nOn Tue, Oct 9, 2012 at 3:01 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @drewB https://github.com/drewB\n> \n>    1.\n> \n>    While polyfilling elements can take some time (in case of\n>    video/input[type=\"date\"]), finding those elements is quite fast. So it\n>    wouldn't be bad for performance to call updatePolyfill multiple times.\n>    Unfortuantley webshims doesn't detect if an element was already polyfilled,\n>    which can create problems, so you can't call updatePolyfill multiple times,\n>    sorry (I try to work on this).\n>     2.\n> \n>    It would only possible in modern browsers, so I haven't implemented\n>    it. I could think of a debug mode, which helps you to detect this in modern\n>    browsers.\n> \n> In short nothing of this is currently possible. I'm closing this, please\n> feel free, to open new issues for your new feature requests. I'm not fully\n> sure, but implementing point 1 might take some time and can be buggy in\n> early implementations. (I really need to go through all my code, to add\n> polyfill flags + filter those elements out for the next polyfill round.)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9281693.\n. This appears to still be an issue (and fixable with the css mentioned).  was this ever fixed?\n. Sent you an email with info for a test case\n. What email should I send it to?\nOn Oct 6, 2012 8:41 AM, \"Alexander Farkas\" notifications@github.com wrote:\n\n> Could you please re-send your information. I can not find your mail :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9199246.\n. Great.I just resent it.\nOn Oct 6, 2012 11:57 AM, \"Alexander Farkas\" notifications@github.com\nwrote:\n\n> You can mail your information to info@corrupt-system.de and\n> alexander.farkas@aperto.de\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9201190.\n. Thank you so much.  That did fix it.  I have a couple follow up questions related to the best way to implement this.  \n1. How expensive is the updatePolyfill method?  We use Backbone js and are considering wrapping the render method to always call updatePolyfill after rendering.  The problem is that will cause updatePolyfill to be call multiple times for the same elements because we sometimes render subviews in the render method.  As a result, that subview will have updatePolyfill called twice.\n2.  Is there a way to tell if an element has webshim's active?  We would like to log a warning if we dynamically render an item but don't updatePolyfill or use htmlPolyfill?\n. Thanks!\n\nOn Tue, Oct 9, 2012 at 3:01 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @drewB https://github.com/drewB\n> \n>    1.\n> \n>    While polyfilling elements can take some time (in case of\n>    video/input[type=\"date\"]), finding those elements is quite fast. So it\n>    wouldn't be bad for performance to call updatePolyfill multiple times.\n>    Unfortuantley webshims doesn't detect if an element was already polyfilled,\n>    which can create problems, so you can't call updatePolyfill multiple times,\n>    sorry (I try to work on this).\n>     2.\n> \n>    It would only possible in modern browsers, so I haven't implemented\n>    it. I could think of a debug mode, which helps you to detect this in modern\n>    browsers.\n> \n> In short nothing of this is currently possible. I'm closing this, please\n> feel free, to open new issues for your new feature requests. I'm not fully\n> sure, but implementing point 1 might take some time and can be buggy in\n> early implementations. (I really need to go through all my code, to add\n> polyfill flags + filter those elements out for the next polyfill round.)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/166#issuecomment-9281693.\n. This appears to still be an issue (and fixable with the css mentioned).  was this ever fixed?\n. ",
    "earvinbryanco": "Hi everyone, thanks for the reply, I'm still figuring this out, also trying to replicate the issue and a code for you to test on.. also, I've uploaded an screenshot of what I am referring to, this was the result from firefox 15.0.1 (https://dl.dropbox.com/u/38983762/test.jpg). I'll do my best to replicate a simple code using the webshims lib. Thanks again!\n. Another issue I found is, polyfill doesn't work after adding additional form. An example is like, adding a new form, polyfill of number doesn't work. Thanks!\n. Thanks for that one! I'll make sure to make use of it! Here's the image, uploaded to sugarsync instead. https://www.sugarsync.com/pf/D8752400_780_660974043\n. Hi! Thanks for the reply, most of the time, I encounter this when there are elements hidden on page loads, for example, when the page loads, some of it's elements are hidden which shows on page load, so when the slideDown effect is completed, that's the result of the css. I never had issues with IE :+1:\n. Yes..Also noticed that when I enable firebug, it automatically fixes to the right position..\n. Hi everyone, thanks for the reply, I'm still figuring this out, also trying to replicate the issue and a code for you to test on.. also, I've uploaded an screenshot of what I am referring to, this was the result from firefox 15.0.1 (https://dl.dropbox.com/u/38983762/test.jpg). I'll do my best to replicate a simple code using the webshims lib. Thanks again!\n. Another issue I found is, polyfill doesn't work after adding additional form. An example is like, adding a new form, polyfill of number doesn't work. Thanks!\n. Thanks for that one! I'll make sure to make use of it! Here's the image, uploaded to sugarsync instead. https://www.sugarsync.com/pf/D8752400_780_660974043\n. Hi! Thanks for the reply, most of the time, I encounter this when there are elements hidden on page loads, for example, when the page loads, some of it's elements are hidden which shows on page load, so when the slideDown effect is completed, that's the result of the css. I never had issues with IE :+1:\n. Yes..Also noticed that when I enable firebug, it automatically fixes to the right position..\n. ",
    "kmiyashiro": "Looks like a general javascript question and you are also using iframes but don't provide the context. You should try setting up a jsfiddle (http://jsfiddle.net/) and post to Stack Overflow with a complete minimal test case if you want help.\n\nJust from looking at this though... your callback is most likely running in the childframe while the input is in the parent frame :/\n. Looks like a general javascript question and you are also using iframes but don't provide the context. You should try setting up a jsfiddle (http://jsfiddle.net/) and post to Stack Overflow with a complete minimal test case if you want help.\n\nJust from looking at this though... your callback is most likely running in the childframe while the input is in the parent frame :/\n. ",
    "stucox": "Also, just enhancing the original element would retain `required` properties etc which the browser can use for native validation (in the case that HTML5 validation is implemented but the `type=date` is not).\n. Also, just enhancing the original element would retain `required` properties etc which the browser can use for native validation (in the case that HTML5 validation is implemented but the `type=date` is not).\n. ",
    "thesheep": "I suspect you're right and it might have changed!\n. I suspect you're right and it might have changed!\n. ",
    "cref": "Placeholders are not working for input[type='number'].\nI am using Webshim 1.15.5.\nIs this behaviour by design?\nChrome is showing the placeholder.\n. Thanks for your reply.\nI forgot to mention, the placeholder isn't working for me for type=\"number\" on IE9.\nIt is working correctly on http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number\nI see here that webshim should also add arrow buttons which are also missing so the entire polyfill seems not to be applied.\n\nI think there is a bug in updatePolyfill() since I'm using that method to update dynamically inserted elements. Inputs of type \"text\" will get their placeholders as expected but not the ones with type \"number\". Validations and showing error messages are working as expected.\n\nOne more thing: when I inspect the input element at http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number it is of type \"text\", not \"number\" (also in Chrome). This seems odd to me...\n. ok, I'll do some more research and will get back on this once I've isolated the cause.\nthanks again!\n. Placeholders are not working for input[type='number'].\nI am using Webshim 1.15.5.\nIs this behaviour by design?\nChrome is showing the placeholder.\n. Thanks for your reply.\nI forgot to mention, the placeholder isn't working for me for type=\"number\" on IE9.\nIt is working correctly on http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number\nI see here that webshim should also add arrow buttons which are also missing so the entire polyfill seems not to be applied.\n\nI think there is a bug in updatePolyfill() since I'm using that method to update dynamically inserted elements. Inputs of type \"text\" will get their placeholders as expected but not the ones with type \"number\". Validations and showing error messages are working as expected.\n\nOne more thing: when I inspect the input element at http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html#placeholder=yo+number it is of type \"text\", not \"number\" (also in Chrome). This seems odd to me...\n. ok, I'll do some more research and will get back on this once I've isolated the cause.\nthanks again!\n. ",
    "dohomi": "Thanks a lot for this snippet. Are there any docs where I can find out about the work of dom-support api?\n\nTHX! Dominic\n. ok great! \n. Alright! Thanks again for your fast answer, I had the 1.9.3 webshim but the customized polyfiller from your website.\n\nTHX Dominic\n. Hello,\n\nthanks for your fast response. The error went away, but still I don't see any bubble. Is it possible for showing the native browser bubble or will it be the own styled one?\n\nloadStyes and replaceValidationUI is set to true.\nThanks again!\n. Thanks a lot for this snippet. Are there any docs where I can find out about the work of dom-support api?\n\nTHX! Dominic\n. ok great! \n. Alright! Thanks again for your fast answer, I had the 1.9.3 webshim but the customized polyfiller from your website.\n\nTHX Dominic\n. Hello,\n\nthanks for your fast response. The error went away, but still I don't see any bubble. Is it possible for showing the native browser bubble or will it be the own styled one?\n\nloadStyes and replaceValidationUI is set to true.\nThanks again!\n. ",
    "gionaf": "Hi, the \"Customize Webshims lib's polyfiller.js\" isn't working for me on Windows7, Chrome 23\n\nSorry, some more details.\nActually it works, but only if two or more options are selected.\nIf i deselect all options but forms/forms-ext , i get redirected to marijnhaverbeke.nl/uglifyjs .\n. Hi @aFarkas , thanks for your reply.\nYes, i'm running it at http://afarkas.github.com/webshim/demos/\nAnyway, i managed to remove any module but forms from the dev version, and minified it again... If anyone needs it:\nhttp://jsfiddle.net/gionaf/wkSMw/\n\nThanks again for your great plugin\n. Hi, the \"Customize Webshims lib's polyfiller.js\" isn't working for me on Windows7, Chrome 23\n\nSorry, some more details.\nActually it works, but only if two or more options are selected.\nIf i deselect all options but forms/forms-ext , i get redirected to marijnhaverbeke.nl/uglifyjs .\n. Hi @aFarkas , thanks for your reply.\nYes, i'm running it at http://afarkas.github.com/webshim/demos/\nAnyway, i managed to remove any module but forms from the dev version, and minified it again... If anyone needs it:\nhttp://jsfiddle.net/gionaf/wkSMw/\n\nThanks again for your great plugin\n. ",
    "tomascassidy": "``` javascript\nif (!Modernizr.inputtypes.date || !Modernizr.inputtypes.number || !Modernizr.input.list) {\n    $.webshims.polyfill('forms forms-ext');\n}\n```\n\nI don't think I'm loading mediaelement feature in that?  My modernizr config is: http://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-touch-printshiv-cssclasses-addtest-teststyles-prefixes-load\n\nI see the error \"webshims needs Modernizr.texttrackapi to implement feature.\" in Firefox and Chrome, but I couldn't see anywhere on the Modernizr download builder to enable it.  This error was also showing in previous versions of Modernizr.\n\nI wasn't seeing any errors in Firefox on the previous version of Modernizr, 1.9.2.\n. Thanks!  It's working now.  I checked the new modernizr download link and I couldn't see any difference to my previous link in the selected options on the builder page.  Is it there and I just didn't see it?  Maybe this should be documented somewhere?\n. @aFarkas \n\nreadme.md still refers to the old download location on github.  Also couldn't find any docs on how to build from source.  The docs on the gruntjs website aren't too helpful here.\n. Hmm... looks like a missed a whole bunch of stuff in other files.  Will fix it up in a new pull request.\n. arrgh!  will close this one and attempt to do it better.\n. This PR doesn't fix the links to http video resources in the mediaelement demos.\n. jsfiddle, like github, has now switched to all https URLs.\n. Thanks for that.  The only one I could still see is:\n\nentering \"3am\" converts to \"03:00 AM\" while entering \"3pm\" also converts to \"03:00 AM\".\n. Thanks.  That latest update is working.\n. That works great!  Thanks.\n. The one link I didn't update, https://code.google.com/intl/de-DE/apis/ajax/documentation/#ClientLocation, is a dead link and I couldn't find any suitable replacement.\n. Looks like webshim is using an undocumented internal API function.  Webshim needs to be updated to only call the public jQuery API functions.\n\nhttps://github.com/jquery/jquery/issues/2058\nhttps://github.com/jquery/jquery/commit/02a9d9f94b623ea8664b7b39fd57feb7de6c6a14\nhttps://github.com/jquery/jquery/pull/2182\n. ``` javascript\nif (!Modernizr.inputtypes.date || !Modernizr.inputtypes.number || !Modernizr.input.list) {\n    $.webshims.polyfill('forms forms-ext');\n}\n```\n\nI don't think I'm loading mediaelement feature in that?  My modernizr config is: http://modernizr.com/download/#-canvas-audio-video-input-inputtypes-localstorage-sessionstorage-geolocation-touch-printshiv-cssclasses-addtest-teststyles-prefixes-load\n\nI see the error \"webshims needs Modernizr.texttrackapi to implement feature.\" in Firefox and Chrome, but I couldn't see anywhere on the Modernizr download builder to enable it.  This error was also showing in previous versions of Modernizr.\n\nI wasn't seeing any errors in Firefox on the previous version of Modernizr, 1.9.2.\n. Thanks!  It's working now.  I checked the new modernizr download link and I couldn't see any difference to my previous link in the selected options on the builder page.  Is it there and I just didn't see it?  Maybe this should be documented somewhere?\n. @aFarkas \n\nreadme.md still refers to the old download location on github.  Also couldn't find any docs on how to build from source.  The docs on the gruntjs website aren't too helpful here.\n. Hmm... looks like a missed a whole bunch of stuff in other files.  Will fix it up in a new pull request.\n. arrgh!  will close this one and attempt to do it better.\n. This PR doesn't fix the links to http video resources in the mediaelement demos.\n. jsfiddle, like github, has now switched to all https URLs.\n. Thanks for that.  The only one I could still see is:\n\nentering \"3am\" converts to \"03:00 AM\" while entering \"3pm\" also converts to \"03:00 AM\".\n. Thanks.  That latest update is working.\n. That works great!  Thanks.\n. The one link I didn't update, https://code.google.com/intl/de-DE/apis/ajax/documentation/#ClientLocation, is a dead link and I couldn't find any suitable replacement.\n. Looks like webshim is using an undocumented internal API function.  Webshim needs to be updated to only call the public jQuery API functions.\n\nhttps://github.com/jquery/jquery/issues/2058\nhttps://github.com/jquery/jquery/commit/02a9d9f94b623ea8664b7b39fd57feb7de6c6a14\nhttps://github.com/jquery/jquery/pull/2182\n. ",
    "muhleder": "That looks like exactly what I'm looking for. Will test on Windows later this eve but I'm sure it will work. Thank you so much.\n. That looks like exactly what I'm looking for. Will test on Windows later this eve but I'm sure it will work. Thank you so much.\n. ",
    "barkan": "Thanks. I'll take a look.\n\nFrom: Alexander Farkas <notifications@github.com<mailto:notifications@github.com>>\nReply-To: aFarkas/webshim <reply@reply.github.com<mailto:reply@reply.github.com>>\nDate: Thu, 8 Nov 2012 07:42:01 -0800\nTo: aFarkas/webshim <webshim@noreply.github.com<mailto:webshim@noreply.github.com>>\nCc: Kevin Barkan <kevin.barkan@netapp.com<mailto:kevin.barkan@netapp.com>>\nSubject: Re: [webshim] Stumped: persistent error messages (#181)\n\nThe UI of the HTML5 constraint validation is pretty simple and should be customized in most cases. There are some examples demonstrating the API:\n-   example using only CSShttp://jsfiddle.net/trixta/NnNKv/\n-   example using the JS-APIhttp://jsfiddle.net/trixta/tLXXN/\n\nTo give you full control, you always need to use the JS-API to get the Job down. Here is a good article explaining the APIhttp://www.html5rocks.com/en/tutorials/forms/constraintvalidation/. If you still have problems, let me know your full requirements, I can try to build a simple example on that.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/181#issuecomment-10192366.\n. Thanks. I'll take a look.\n\nFrom: Alexander Farkas <notifications@github.com<mailto:notifications@github.com>>\nReply-To: aFarkas/webshim <reply@reply.github.com<mailto:reply@reply.github.com>>\nDate: Thu, 8 Nov 2012 07:42:01 -0800\nTo: aFarkas/webshim <webshim@noreply.github.com<mailto:webshim@noreply.github.com>>\nCc: Kevin Barkan <kevin.barkan@netapp.com<mailto:kevin.barkan@netapp.com>>\nSubject: Re: [webshim] Stumped: persistent error messages (#181)\n\nThe UI of the HTML5 constraint validation is pretty simple and should be customized in most cases. There are some examples demonstrating the API:\n-   example using only CSShttp://jsfiddle.net/trixta/NnNKv/\n-   example using the JS-APIhttp://jsfiddle.net/trixta/tLXXN/\n\nTo give you full control, you always need to use the JS-API to get the Job down. Here is a good article explaining the APIhttp://www.html5rocks.com/en/tutorials/forms/constraintvalidation/. If you still have problems, let me know your full requirements, I can try to build a simple example on that.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/181#issuecomment-10192366.\n. ",
    "aarontgrogg": "that's fantastic!\n\nand congrats, again, this is great!\n\nAtg\n\n## Atg\n\nAaron T. Grogg\nwebsite: http://aarontgrogg.com/\nemail: aarontgrogg@gmail.com\ntwitter: @aarontgrogg\nskype: aarontgrogg\naim: \u00e4arontgrogg\n\nOn Thu, Nov 15, 2012 at 3:55 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> Thanks, I have just changed the way, how I'm handling the child elements\n> of the video and audio element. It now follows the normal principles of\n> HTML. You can add your own fallback messages. Here is an example:\n> \n> <video controls preload=\"none\" poster=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.png\" style=\"width: 630px; height: 356px;\">\n>     <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\" type=\"video/mp4\" />\n>     <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\" type=\"video/webm\" />\n>     <track src=\"subtitle.vtt\" srclang=\"en\" label=\"some description\" kind=\"subtitles\" default />\n>     <p>You need a modern Browser or install the Flash Plugin or simply download the video (<a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\">mp4</a>, <a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\">webm</a>)</p>\n> </video>\n> \n>  \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/182#issuecomment-10411006.\n. that's fantastic!\n\nand congrats, again, this is great!\n\nAtg\n\n## Atg\n\nAaron T. Grogg\nwebsite: http://aarontgrogg.com/\nemail: aarontgrogg@gmail.com\ntwitter: @aarontgrogg\nskype: aarontgrogg\naim: \u00e4arontgrogg\n\nOn Thu, Nov 15, 2012 at 3:55 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> Thanks, I have just changed the way, how I'm handling the child elements\n> of the video and audio element. It now follows the normal principles of\n> HTML. You can add your own fallback messages. Here is an example:\n> \n> <video controls preload=\"none\" poster=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.png\" style=\"width: 630px; height: 356px;\">\n>     <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\" type=\"video/mp4\" />\n>     <source src=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\" type=\"video/webm\" />\n>     <track src=\"subtitle.vtt\" srclang=\"en\" label=\"some description\" kind=\"subtitles\" default />\n>     <p>You need a modern Browser or install the Flash Plugin or simply download the video (<a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.m4v\">mp4</a>, <a href=\"http://corrupt-system.de/assets/media/sintel/sintel-trailer.webm\">webm</a>)</p>\n> </video>\n> \n>  \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/182#issuecomment-10411006.\n. ",
    "HenriPodolski": "Maybe you can have another at this implementation: https://github.com/TOMODOcom/TOMODOkorz. It overrides the XMLHttpRequest.\n. @aFarkas Thx,  I didn't realized this. \n. I think it is not recommend to use data-errormessage and ws-errorbox together. But it seems like data-errormessage has higher priority when both are defined. It this worth to be mentioned? Or to say that you should not use both?\n. Value to test the issue is 1000,00\n. Thanks, this helps! \n\nMakes totally sense that pattern does not work with input type number. My form field should accept numbers in the expression format [0-9]+(,)?[0-9][0-9]. For example 1000 or 1000,01 should validate, but 1000,1 not. And it should have a minimum and maximum range, too.\n\nInput type number with step attribute works fine, for my issue.\n. I think something like this is not implemented yet. Extended Input's using multiple tags need a wrapper or there must be a .getShadowElements() method.\n\n@aFarkas what do you say?\n\nAs long as there is no other solution, you can go with this workaround:\nhttp://jsfiddle.net/47Uz4/2/\n. @doits I do not know your exact use case, but wouldn't it be more predictable if you define a own wrapper around the form element? This could hide the whole input, no matter what is added including labels, webshims markup and everything else related to that form element? \n. Like mentioned above, you can just add the swap method: http://james.padolsey.com/jquery/#v=1.11.2&fn=jQuery.swap to  your code to make this work. It has no other dependencies. \n\n``` js\n$.swap = function (elem, options, callback, args) {\n    var ret, name, old = {};\n\n    // Remember the old values, and insert the new ones\n    for (name in options) {\n        old[name] = elem.style[name];\n        elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []);\n\n    // Revert the old values\n    for (name in options) {\n        elem.style[name] = old[name];\n    }\n\n    return ret;\n}\n```\n. Maybe you can have another at this implementation: https://github.com/TOMODOcom/TOMODOkorz. It overrides the XMLHttpRequest.\n. @aFarkas Thx,  I didn't realized this. \n. I think it is not recommend to use data-errormessage and ws-errorbox together. But it seems like data-errormessage has higher priority when both are defined. It this worth to be mentioned? Or to say that you should not use both?\n. Value to test the issue is 1000,00\n. Thanks, this helps! \n\nMakes totally sense that pattern does not work with input type number. My form field should accept numbers in the expression format [0-9]+(,)?[0-9][0-9]. For example 1000 or 1000,01 should validate, but 1000,1 not. And it should have a minimum and maximum range, too.\n\nInput type number with step attribute works fine, for my issue.\n. I think something like this is not implemented yet. Extended Input's using multiple tags need a wrapper or there must be a .getShadowElements() method.\n\n@aFarkas what do you say?\n\nAs long as there is no other solution, you can go with this workaround:\nhttp://jsfiddle.net/47Uz4/2/\n. @doits I do not know your exact use case, but wouldn't it be more predictable if you define a own wrapper around the form element? This could hide the whole input, no matter what is added including labels, webshims markup and everything else related to that form element? \n. Like mentioned above, you can just add the swap method: http://james.padolsey.com/jquery/#v=1.11.2&fn=jQuery.swap to  your code to make this work. It has no other dependencies. \n\n``` js\n$.swap = function (elem, options, callback, args) {\n    var ret, name, old = {};\n\n    // Remember the old values, and insert the new ones\n    for (name in options) {\n        old[name] = elem.style[name];\n        elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []);\n\n    // Revert the old values\n    for (name in options) {\n        elem.style[name] = old[name];\n    }\n\n    return ret;\n}\n```\n. ",
    "gregpettit": "Thanks! That's a good start. Kind of a bummer about FlashCanvasPro, though. :(\n. Thanks! That's a good start. Kind of a bummer about FlashCanvasPro, though. :(\n. ",
    "bertBruynooghe": "I created a workaround here: http://jsfiddle.net/bertBruynooghe/BvXBC/\n. Mmm, strange.\nI see it cut-off. \nCould be because I still use bootstrap 2.x, and the gem webshims-rails, which depends on webshims 1.11.2.\nDo you want me to investigate further? (Btw, I worked around the problem by putting an overflow: visible on the bootstrap modal itself.)\n\nRegards,\nBert.\n\nOn 06 Nov 2013, at 14:47, Alexander Farkas notifications@github.com wrote:\n\n> I'm not totally sure what you mean here. To me a datepicker in a bootstrap modal looks like this:\n> \n> For me this is fine. I think you want to configure the placing of the datepicker dialog. This can be achieved with the popover configuration.\n> \n> Here is an example:\n> \n> <input type=\"date\" data-wspopover='{\"appendTo\": \"body\"}' />\n> This will place the modal to the body element. You can add any selector or the keywords 'auto' or 'element'. Can you give me an example. I would try to improve the 'auto' algorythm then.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I created a workaround here: http://jsfiddle.net/bertBruynooghe/BvXBC/\n. Mmm, strange.\nI see it cut-off. \nCould be because I still use bootstrap 2.x, and the gem webshims-rails, which depends on webshims 1.11.2.\nDo you want me to investigate further? (Btw, I worked around the problem by putting an overflow: visible on the bootstrap modal itself.)\n\nRegards,\nBert.\n\nOn 06 Nov 2013, at 14:47, Alexander Farkas notifications@github.com wrote:\n\n> I'm not totally sure what you mean here. To me a datepicker in a bootstrap modal looks like this:\n> \n> For me this is fine. I think you want to configure the placing of the datepicker dialog. This can be achieved with the popover configuration.\n> \n> Here is an example:\n> \n> <input type=\"date\" data-wspopover='{\"appendTo\": \"body\"}' />\n> This will place the modal to the body element. You can add any selector or the keywords 'auto' or 'element'. Can you give me an example. I would try to improve the 'auto' algorythm then.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "benlancaster": "Yeah, I've tried every combination you can think of! I've never spent so long trying to sort out a favicon!\n\nI'm going to see if I can work out which bit of webshims is causing it (and hopefully fix it too) tomorrow.\n. Yeah I wondered whether it was something manipulating the `head` that caused it - disabling styles does indeed seem to have sorted it. Thanks!\n. Yeah, I've tried every combination you can think of! I've never spent so long trying to sort out a favicon!\n\nI'm going to see if I can work out which bit of webshims is causing it (and hopefully fix it too) tomorrow.\n. Yeah I wondered whether it was something manipulating the `head` that caused it - disabling styles does indeed seem to have sorted it. Thanks!\n. ",
    "tech-no-logical": "thanks for the pointers. I got it to work bij calling updatePolyfill() from an angular directive on the added content (actually the only way to be sure angular has rendered it). this does mean however, that I have about 10-20 calls to $(this).updatePolyfill(); (where $(this) is actually a single input element. are these calls expensive ?\n\nalthough it isn't an issue anymore, I don't really understand why I got the ui warning when delaying the initial polyfill() call. I haven't included any jquery ui code myself. the only change was setting waitReady to false and calling polyfill() from within angular....\n\noh well, it works :) thanks for the whole webshim-lib, it's very usefull when supporting non-compliant browsers.\n. thanks for the pointers. I got it to work bij calling updatePolyfill() from an angular directive on the added content (actually the only way to be sure angular has rendered it). this does mean however, that I have about 10-20 calls to $(this).updatePolyfill(); (where $(this) is actually a single input element. are these calls expensive ?\n\nalthough it isn't an issue anymore, I don't really understand why I got the ui warning when delaying the initial polyfill() call. I haven't included any jquery ui code myself. the only change was setting waitReady to false and calling polyfill() from within angular....\n\noh well, it works :) thanks for the whole webshim-lib, it's very usefull when supporting non-compliant browsers.\n. ",
    "WhatFreshHellIsThis": "Hello, I have just run into this problem and have found a simple solution that works using the $viewContentLoaded event which is fired **after** a new template is loaded into the view dynamically.\n\nPut the following code in the controller that **contains** your ng-view, i.e. if you have an index.html page with a replaced view section inside using ng-view then this code needs to go into the controller for the main index page because the $viewContentLoaded event bubbles **up** from the view and you can't handle it in the view itself:\n\n```\n//Polyfill needs update when dynamic view loads\n            $scope.$on('$viewContentLoaded', function() {\n                $('body').updatePolyfill();\n            });\n```\n. I looked at that jsfiddle and it's not what I meant exactly; it's showing the polyfilled controls instead of the native ones in chrome, must be set to hard override or something.  What I meant is for those that want to test the polyfill feature it should just have simple html 5 input samples for each type that is polyfilled only as necessary so we can see it in action.\n. Thank you for that information aFarkas, my use-case is to use webshims to shim older browsers or browsers that do not support certain controls as html5.  \n\nThe issue is if I'm testing the non-html5 supporting browser and want to see what the shims will do under those circumstances so I can tell if they will be a good fit for my project and also to see if they will work when my own don't in a case of mis-configuration or early development / learning.\n\nI like your switch suggestion, perhaps one big one at the top to turn off auto so we can see only what it will look like when it shims only the necessary bits.\n. Ok, thank you.\n. Doh!  Sorry about that!\n. Um..what?  Please re-read, I think there is a big misunderstanding here.  You have not resolved the issue with what you posted.  Webshim is _not_ detecting that datetime-local needs to be shimmed on iOS like it should.\n. Ok, thank you. \n. Hello, I have just run into this problem and have found a simple solution that works using the $viewContentLoaded event which is fired **after** a new template is loaded into the view dynamically.\n\nPut the following code in the controller that **contains** your ng-view, i.e. if you have an index.html page with a replaced view section inside using ng-view then this code needs to go into the controller for the main index page because the $viewContentLoaded event bubbles **up** from the view and you can't handle it in the view itself:\n\n```\n//Polyfill needs update when dynamic view loads\n            $scope.$on('$viewContentLoaded', function() {\n                $('body').updatePolyfill();\n            });\n```\n. I looked at that jsfiddle and it's not what I meant exactly; it's showing the polyfilled controls instead of the native ones in chrome, must be set to hard override or something.  What I meant is for those that want to test the polyfill feature it should just have simple html 5 input samples for each type that is polyfilled only as necessary so we can see it in action.\n. Thank you for that information aFarkas, my use-case is to use webshims to shim older browsers or browsers that do not support certain controls as html5.  \n\nThe issue is if I'm testing the non-html5 supporting browser and want to see what the shims will do under those circumstances so I can tell if they will be a good fit for my project and also to see if they will work when my own don't in a case of mis-configuration or early development / learning.\n\nI like your switch suggestion, perhaps one big one at the top to turn off auto so we can see only what it will look like when it shims only the necessary bits.\n. Ok, thank you.\n. Doh!  Sorry about that!\n. Um..what?  Please re-read, I think there is a big misunderstanding here.  You have not resolved the issue with what you posted.  Webshim is _not_ detecting that datetime-local needs to be shimmed on iOS like it should.\n. Ok, thank you. \n. ",
    "czachor": "I'm sorry, I missed your comment. I'll test it in 2 days and leave a comment.\n. @aFarkas thanks, it (almost) works. I used:\n\n```\n$('#colorbox').updatePolyfill();\n```\n\nNow all works perfect, but the original input isn't hidden - looks like I have to manually add webshim's CSS to the colorbox.\n. @aFarkas \n\nNo problem, thanks for help :)\nThe testcase is here: http://klubhematologa.org/baza/test. Click on \"add\", in colorbox in \"date\" column there are 2 inputs - the first one is a datepicker, and the second is original (should be hidden).\n. Thanks!\n\nThe placeholder is old think, I forgot to remove it creating the testcase. Anyway thanks for the tips.\n. I'm sorry, I missed your comment. I'll test it in 2 days and leave a comment.\n. @aFarkas thanks, it (almost) works. I used:\n\n```\n$('#colorbox').updatePolyfill();\n```\n\nNow all works perfect, but the original input isn't hidden - looks like I have to manually add webshim's CSS to the colorbox.\n. @aFarkas \n\nNo problem, thanks for help :)\nThe testcase is here: http://klubhematologa.org/baza/test. Click on \"add\", in colorbox in \"date\" column there are 2 inputs - the first one is a datepicker, and the second is original (should be hidden).\n. Thanks!\n\nThe placeholder is old think, I forgot to remove it creating the testcase. Anyway thanks for the tips.\n. ",
    "cori": "Aha, i found them. I'll fix the links up and generate a pull-request\n. duplicate of issue #202 \n. Makes sense - for some reason I thought that those options were closed over, but now I see that they aren't, and coupling that with grokking $.webshims.ready() gave me what I needed here, thanks!\n. Aha, i found them. I'll fix the links up and generate a pull-request\n. duplicate of issue #202 \n. Makes sense - for some reason I thought that those options were closed over, but now I see that they aren't, and coupling that with grokking $.webshims.ready() gave me what I needed here, thanks!\n. ",
    "rpk103": "Thanks Alexander.  I appreciate it.\n\n(BTW, very nice polyfill library!   I'm using it on a demo site at work to\nshow what we can support with HTML5 across the 5 major browsers.  If\nadopted, we will use this probably for all our internal apps.)\n- John Shissler\n\nOn Fri, Feb 1, 2013 at 2:09 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @rpk103 https://github.com/rpk103\n> \n> Thx for the bugreport. I can reproduce this bug and also found the cause.\n> I will fix this weekend.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/205#issuecomment-13008950.\n. Thanks Alexander.  I appreciate it.\n\n(BTW, very nice polyfill library!   I'm using it on a demo site at work to\nshow what we can support with HTML5 across the 5 major browsers.  If\nadopted, we will use this probably for all our internal apps.)\n- John Shissler\n\nOn Fri, Feb 1, 2013 at 2:09 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> @rpk103 https://github.com/rpk103\n> \n> Thx for the bugreport. I can reproduce this bug and also found the cause.\n> I will fix this weekend.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/205#issuecomment-13008950.\n. ",
    "geekdevs": "It does not work for me on v.1.10.10 with IE8\n. It does not work for me on v.1.10.10 with IE8\n. ",
    "rzhw": "GitHub [removed that feature](https://github.com/blog/1302-goodbye-uploads). I got a copy of 1.9.6 by going to Tags.\n. I've been investigating `bootstrap-dropdown.js` (2.3) and cut the file down to:\n\n``` js\n!function ($) {\n\n  $(document)\n    .on('.dropdown-menu', function (e) { e.stopPropagation() })\n\n}(window.jQuery);\n```\n\nThis code on its own with polyfiller is enough to trigger the issue.\n. GitHub [removed that feature](https://github.com/blog/1302-goodbye-uploads). I got a copy of 1.9.6 by going to Tags.\n. I've been investigating `bootstrap-dropdown.js` (2.3) and cut the file down to:\n\n``` js\n!function ($) {\n\n  $(document)\n    .on('.dropdown-menu', function (e) { e.stopPropagation() })\n\n}(window.jQuery);\n```\n\nThis code on its own with polyfiller is enough to trigger the issue.\n. ",
    "Gamesh": "i used replaceValidationUI, and tried to add customMessages: true, but didn't work.\nIt's seams you need to override messages\n. you are right, my fault, smarty didn't update template after edit and it seamed as it was not working :)\n. I notices that you use a different syntax for setting options.\nin documentation http://afarkas.github.com/webshim/demos/demos/webforms.html its:\n\n``` javascript\n/*configure webshims to implement new customValidationMessage attribute */\n$.webshims.setOptions('forms', { customMessages: true });\n```\n\nso which is it ? :)\n. fixed\n. yes that helped a lot, i was using wrong order, first set the polyfill then options and active language.\n. i used replaceValidationUI, and tried to add customMessages: true, but didn't work.\nIt's seams you need to override messages\n. you are right, my fault, smarty didn't update template after edit and it seamed as it was not working :)\n. I notices that you use a different syntax for setting options.\nin documentation http://afarkas.github.com/webshim/demos/demos/webforms.html its:\n\n``` javascript\n/*configure webshims to implement new customValidationMessage attribute */\n$.webshims.setOptions('forms', { customMessages: true });\n```\n\nso which is it ? :)\n. fixed\n. yes that helped a lot, i was using wrong order, first set the polyfill then options and active language.\n. ",
    "callmeaponte": "Yep it works! Thanks, it seems that was the issue. I download webshims a\nwhile back and had it sitting around before I got around to installing it,\nso it would make sense that I had an outdated version.\n- Andrew\n\nOn Fri, Feb 22, 2013 at 9:24 AM, Alexander Farkas\nnotifications@github.comwrote:\n\n> It seems, that you somehow have used an older version of webshims with\n> jQuery 1.9.x. Either you can use jQuery 1.8.x or download webshims 1.9.6http://corrupt-system.de/webshims-1.9.6.zip.\n> Did this help? I can only guess. Or you have updated and something went\n> wrong and the files weren't overwritten.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/213#issuecomment-13945311.\n. Yep it works! Thanks, it seems that was the issue. I download webshims a\nwhile back and had it sitting around before I got around to installing it,\nso it would make sense that I had an outdated version.\n- Andrew\n\nOn Fri, Feb 22, 2013 at 9:24 AM, Alexander Farkas\nnotifications@github.comwrote:\n\n> It seems, that you somehow have used an older version of webshims with\n> jQuery 1.9.x. Either you can use jQuery 1.8.x or download webshims 1.9.6http://corrupt-system.de/webshims-1.9.6.zip.\n> Did this help? I can only guess. Or you have updated and something went\n> wrong and the files weren't overwritten.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/213#issuecomment-13945311.\n. ",
    "pjparra": "Hi, sorry for the absence of reaction, I just returned from vacation.\n\nThanks a lot for your work and reporting the bug to the chromium team.\n\nFrom what I understand, you commited a workaround that allows us to use webshims without changing the options as you told me earlier ?\n. Thanks, the workaround works perfectly.\n\nI totally agree with you, that's a really strange way of triggering events from the Chrome team. I hope they will change their minds.\n. Hi, sorry for the absence of reaction, I just returned from vacation.\n\nThanks a lot for your work and reporting the bug to the chromium team.\n\nFrom what I understand, you commited a workaround that allows us to use webshims without changing the options as you told me earlier ?\n. Thanks, the workaround works perfectly.\n\nI totally agree with you, that's a really strange way of triggering events from the Chrome team. I hope they will change their minds.\n. ",
    "DanielNill": "I have run into the same issue using native ie8.  When submitting a form `<form action=\"#\">` with a binding on the submit event and webshims instantiated by\n\n```\n#= require webshims/extras/modernizr-custom\n#= require webshims/extras/custom-validity\n#= require webshims/extras/mousepress\n#= require webshims/polyfiller\n\n$.webshims.setOptions(\"basePath\", \"/assets/webshims/shims/\")\n$.webshims.setOptions 'forms', overrideMessages: true\n$.webshims.setOptions waitReady: false\n$.webshims.polyfill()\n```\n\nThe form submits itself.  Furthermore, in ie9 mode and native ie9 the webshims polyfill validation binding on form elements is getting bound after the submit event binding so validation is only run after an ajax request is already submitted.\n\nI have tried this in both version 0.4.7 and 0.3.0\n. I have run into the same issue using native ie8.  When submitting a form `<form action=\"#\">` with a binding on the submit event and webshims instantiated by\n\n```\n#= require webshims/extras/modernizr-custom\n#= require webshims/extras/custom-validity\n#= require webshims/extras/mousepress\n#= require webshims/polyfiller\n\n$.webshims.setOptions(\"basePath\", \"/assets/webshims/shims/\")\n$.webshims.setOptions 'forms', overrideMessages: true\n$.webshims.setOptions waitReady: false\n$.webshims.polyfill()\n```\n\nThe form submits itself.  Furthermore, in ie9 mode and native ie9 the webshims polyfill validation binding on form elements is getting bound after the submit event binding so validation is only run after an ajax request is already submitted.\n\nI have tried this in both version 0.4.7 and 0.3.0\n. ",
    "joshdanhall": "Thanks very much for your comprehensive answer!\n. Thanks very much for your comprehensive answer!\n. ",
    "rijasmk": "I recently used webshim for IE placeholder,  it is simply awesome but I found one bug like user already filled up some data into the textbox and he/she comeback for edit, after three sec cursor is moving to first character. I am checking...\n. I recently used webshim for IE placeholder,  it is simply awesome but I found one bug like user already filled up some data into the textbox and he/she comeback for edit, after three sec cursor is moving to first character. I am checking...\n. ",
    "Lekensteyn": "Haven't you forgotten to commit some files in build/? `phantom.args[0]` is plain wrong, the `--config={}` line yields an error as the argument is a file, not a JSON string. Please, this is frustrating.\n. Comments are welcome.\n\nI noticed that only `demos/js-webshim/minified/{polyfiller.js,shims/style.css}` are touched, not the other js files in `shims/`. Could it have anything to do with `getFiles` failing to find stuff?\n. Ok, that's fixed now.\n. I see that some changes had been made in grunt.js on the develop branch. That might give you a merge conflict in the future.\n\nThose changes also need to be updated for 0.4:\n27c17bd needs dependency https://github.com/gruntjs/grunt-contrib-watch, format needs to be changed to `dist: { files: [ ... ] }`\n873de56 The second parameter needs to be an array instead of a string of space-separated commands.\n\nI'll base future work on the develop branch, thanks for merging.\n. Haven't you forgotten to commit some files in build/? `phantom.args[0]` is plain wrong, the `--config={}` line yields an error as the argument is a file, not a JSON string. Please, this is frustrating.\n. Comments are welcome.\n\nI noticed that only `demos/js-webshim/minified/{polyfiller.js,shims/style.css}` are touched, not the other js files in `shims/`. Could it have anything to do with `getFiles` failing to find stuff?\n. Ok, that's fixed now.\n. I see that some changes had been made in grunt.js on the develop branch. That might give you a merge conflict in the future.\n\nThose changes also need to be updated for 0.4:\n27c17bd needs dependency https://github.com/gruntjs/grunt-contrib-watch, format needs to be changed to `dist: { files: [ ... ] }`\n873de56 The second parameter needs to be an array instead of a string of space-separated commands.\n\nI'll base future work on the develop branch, thanks for merging.\n. ",
    "somdey": "You can test this from http://afarkas.github.com/webshim/demos/\nOpen it in IE and type something inside  \"change me\" textbox come again for edit you can see the issue.\nIt's happening only when you are coming to edit first time, immediately cursor is going to the first character.\nPlease let me if you have any question.\n. Thanks  for fixing this.Awesome library  \n. You can test this from http://afarkas.github.com/webshim/demos/\nOpen it in IE and type something inside  \"change me\" textbox come again for edit you can see the issue.\nIt's happening only when you are coming to edit first time, immediately cursor is going to the first character.\nPlease let me if you have any question.\n. Thanks  for fixing this.Awesome library  \n. ",
    "brucelawson": "it was an early April Fool joke - sorry!\n. it was an early April Fool joke - sorry!\n. ",
    "anselm-urban": "I just experimented with novalidate using a simple sign up form for a newsletter. Using a browser with no novalidate support, novalidate is simply ignored.\n. Ok, works for me now. Thanks!\n. Yes, I use IE10. \n. Yesterday I read in another issue that ie8 mode is buggy, so I think I can close this issue. \n. I use 1.12.1-RC1.\n.input-picker {max-width: none;} doesn\u00b4t work.\nI use the following selectors:\n- form\n- form ul\n- form li\n- label\n- and textarea\n\nnothing like form div.\nIs Webshim also compatible with jQuery 2.X?\n. My HTML code:\n\n``` html\n<script src=\"../js/vendor/modernizr-2.7.1.min.js\"></script>\n<form method=\"post\" action=\"form.php\" class=\"notPrint\">\n    <ul>\n        <li>\n            <label for=\"nm\">Name: <span class=\"redStar\"></span></label>\n            <input type=\"text\" name=\"nm\" id=\"nm\" maxlength=\"40\" size=\"43\" required autocomplete=\"on\" autocorrect=\"off\" autocapitalize=\"on\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"em\">E-Mail: <span class=\"redStar\"></span></label>\n            <input type=\"email\" name=\"em\" id=\"em\" maxlength=\"45\" size=\"43\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"off\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"te\">Telefon:</label>\n            <input type=\"tel\" name=\"te\" id=\"te\" maxlength=\"25\" size=\"43\" autocomplete=\"on\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"su\">Betreff: <span class=\"redStar\"></span></label>\n            <input type=\"text\" name=\"su\" id=\"su\" list=\"subject\" maxlength=\"35\" size=\"43\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"on\" spellcheck=\"true\">\n        </li>\n        <li>\n            <label for=\"dt\">Zeitraum: <span class=\"redStar\"></span></label>\n            <input type=\"date\" name=\"dt\" id=\"dt\" size=\"43\" required autocomplete=\"on\"> bis <input type=\"date\" name=\"dt2\" id=\"dt2\" size=\"43\" required autocomplete=\"on\">\n        </li>\n        <datalist id=\"subject\">\n            <select><!-- some options --></select>\n        </datalist>\n        <li>\n            <label for=\"ms\">Nachricht: <span class=\"redStar\"></span></label>\n            <textarea name=\"ms\" id=\"ms\" maxlength=\"500\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"on\" spellcheck=\"true\"></textarea>\n        </li>\n        <input type=\"submit\" value=\"Senden\" class=\"bttn\">\n    </ul>\n</form>\n<script src=\"../js-webshim/minified/polyfiller.js\"></script>\n<script>\n    $.webshims.polyfill('forms forms-ext datalist');\n</script>\n```\n\nI have no CSS that could influence the date picker\n. I fixed it: the problem was that I applied some styles to \"section div\".\nThe latest version of Webshim seems to have a problem with this.\n![bild 1](https://f.cloud.github.com/assets/820660/2060504/e095e2c6-8c1e-11e3-999d-3cdf79aa6887.png)\n. I just experimented with novalidate using a simple sign up form for a newsletter. Using a browser with no novalidate support, novalidate is simply ignored.\n. Ok, works for me now. Thanks!\n. Yes, I use IE10. \n. Yesterday I read in another issue that ie8 mode is buggy, so I think I can close this issue. \n. I use 1.12.1-RC1.\n.input-picker {max-width: none;} doesn\u00b4t work.\nI use the following selectors:\n- form\n- form ul\n- form li\n- label\n- and textarea\n\nnothing like form div.\nIs Webshim also compatible with jQuery 2.X?\n. My HTML code:\n\n``` html\n<script src=\"../js/vendor/modernizr-2.7.1.min.js\"></script>\n<form method=\"post\" action=\"form.php\" class=\"notPrint\">\n    <ul>\n        <li>\n            <label for=\"nm\">Name: <span class=\"redStar\"></span></label>\n            <input type=\"text\" name=\"nm\" id=\"nm\" maxlength=\"40\" size=\"43\" required autocomplete=\"on\" autocorrect=\"off\" autocapitalize=\"on\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"em\">E-Mail: <span class=\"redStar\"></span></label>\n            <input type=\"email\" name=\"em\" id=\"em\" maxlength=\"45\" size=\"43\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"off\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"te\">Telefon:</label>\n            <input type=\"tel\" name=\"te\" id=\"te\" maxlength=\"25\" size=\"43\" autocomplete=\"on\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n        </li>\n        <li>\n            <label for=\"su\">Betreff: <span class=\"redStar\"></span></label>\n            <input type=\"text\" name=\"su\" id=\"su\" list=\"subject\" maxlength=\"35\" size=\"43\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"on\" spellcheck=\"true\">\n        </li>\n        <li>\n            <label for=\"dt\">Zeitraum: <span class=\"redStar\"></span></label>\n            <input type=\"date\" name=\"dt\" id=\"dt\" size=\"43\" required autocomplete=\"on\"> bis <input type=\"date\" name=\"dt2\" id=\"dt2\" size=\"43\" required autocomplete=\"on\">\n        </li>\n        <datalist id=\"subject\">\n            <select><!-- some options --></select>\n        </datalist>\n        <li>\n            <label for=\"ms\">Nachricht: <span class=\"redStar\"></span></label>\n            <textarea name=\"ms\" id=\"ms\" maxlength=\"500\" required autocomplete=\"on\" autocorrect=\"on\" autocapitalize=\"on\" spellcheck=\"true\"></textarea>\n        </li>\n        <input type=\"submit\" value=\"Senden\" class=\"bttn\">\n    </ul>\n</form>\n<script src=\"../js-webshim/minified/polyfiller.js\"></script>\n<script>\n    $.webshims.polyfill('forms forms-ext datalist');\n</script>\n```\n\nI have no CSS that could influence the date picker\n. I fixed it: the problem was that I applied some styles to \"section div\".\nThe latest version of Webshim seems to have a problem with this.\n![bild 1](https://f.cloud.github.com/assets/820660/2060504/e095e2c6-8c1e-11e3-999d-3cdf79aa6887.png)\n. ",
    "DavidBove": "Sorry for a realy late answear. I'll add my example code and now I made a MVC4 project to test on and without jQuery Mobile. \nMy problem is that it doesn't react on the checkboxgroup, my minlength, password doesn't have to be equal. And in IE 10 compatibility mode it doesn't work at all, it post the form and when clicking the date/calender it get's an error on row 2530 \"return ( ret.value = value + \"\" );\" in the jQuery file. But that is maybe only a compatbility error(?)...\nI've downloaded the webshim lib and got the minified folder in my solution.\n\nFiddle of my code:\nhttp://jsfiddle.net/QTDLA/\n. I updated my code with fiddle:\nhttp://jsfiddle.net/QTDLA/\n. Thanx, there isn't any problem in IE. I made a own mistake there.\n\nYour fix made it to work. There is still this line over the input. But I'll fix that by my self.\n. Yes it helped!\nSounds like a heavy update to update the document?\n\nEdit: If I have the txtfield in a div with 'display: none ' in the popup, then the button is more like 30% from the left side. It ends where my placeholder text ends... A bit weird but easy to solve by my self. But could be good for you to know.\n. Sorry for a realy late answear. I'll add my example code and now I made a MVC4 project to test on and without jQuery Mobile. \nMy problem is that it doesn't react on the checkboxgroup, my minlength, password doesn't have to be equal. And in IE 10 compatibility mode it doesn't work at all, it post the form and when clicking the date/calender it get's an error on row 2530 \"return ( ret.value = value + \"\" );\" in the jQuery file. But that is maybe only a compatbility error(?)...\nI've downloaded the webshim lib and got the minified folder in my solution.\n\nFiddle of my code:\nhttp://jsfiddle.net/QTDLA/\n. I updated my code with fiddle:\nhttp://jsfiddle.net/QTDLA/\n. Thanx, there isn't any problem in IE. I made a own mistake there.\n\nYour fix made it to work. There is still this line over the input. But I'll fix that by my self.\n. Yes it helped!\nSounds like a heavy update to update the document?\n\nEdit: If I have the txtfield in a div with 'display: none ' in the popup, then the button is more like 30% from the left side. It ends where my placeholder text ends... A bit weird but easy to solve by my self. But could be good for you to know.\n. ",
    "leonuh": "Sorry for my first bad link. By the way it seems the problem is solved sucessfully. Thank you very much! Currently it is the best shim package in modern webdevelopment.\n. Sorry for my first bad link. By the way it seems the problem is solved sucessfully. Thank you very much! Currently it is the best shim package in modern webdevelopment.\n. ",
    "woodspire": "I think it should be !$.webshims.bugs.bustedValidity, no ? (you were missing the $. before webshims)\n\nAlso, is the problem only with $('input') fields or also with $('select') ?\n\nThe test case seems to be fixed with your code addition. Will try in prod not to see if it is fixed.\n. Ok I just tested the master version and it works. Thanks for the quick fix.\n. also, when max=2, min=1, clicking the down arrow does nothing. clicking the up arrow set 2, and then clicking the down arrow set 1. It should set 1 when clicking the down arrow and the input is empty\n. I think it should be !$.webshims.bugs.bustedValidity, no ? (you were missing the $. before webshims)\n\nAlso, is the problem only with $('input') fields or also with $('select') ?\n\nThe test case seems to be fixed with your code addition. Will try in prod not to see if it is fixed.\n. Ok I just tested the master version and it works. Thanks for the quick fix.\n. also, when max=2, min=1, clicking the down arrow does nothing. clicking the up arrow set 2, and then clicking the down arrow set 1. It should set 1 when clicking the down arrow and the input is empty\n. ",
    "maulsea": "Can you guide me on how I can make it work? I have a release next week & this is very urgent issue as we don't have labels throughout application.\n\nWhat I tried doing is, change form-shim-extend.js & add additional checks(http://i.imgur.com/W1b3DGO.png). But, only adding this does not seem to be working.\n\nIf you think you can brief the fix(where all I'd need a change), that'd be really great. I shall do the rest.\n\nThanks.\n. Sounds great. :+1: \n\nLet me know when you done. Thanks again.\n. Working like a charm for me. :+1: \n\nWill let you know if I find any issue in further testing. \n\nCan't thank you enough for this quick solution.\n. Can you guide me on how I can make it work? I have a release next week & this is very urgent issue as we don't have labels throughout application.\n\nWhat I tried doing is, change form-shim-extend.js & add additional checks(http://i.imgur.com/W1b3DGO.png). But, only adding this does not seem to be working.\n\nIf you think you can brief the fix(where all I'd need a change), that'd be really great. I shall do the rest.\n\nThanks.\n. Sounds great. :+1: \n\nLet me know when you done. Thanks again.\n. Working like a charm for me. :+1: \n\nWill let you know if I find any issue in further testing. \n\nCan't thank you enough for this quick solution.\n. ",
    "FesterCluck": "Are there any plans to implement this input type? \n. Are there any plans to implement this input type? \n. ",
    "inrainbowss": "Are there any updates? Implementation of this type could be very useful.\n. Are there any updates? Implementation of this type could be very useful.\n. ",
    "mozzi": "with getShadowElement() it works great.\nThanks a lot, you saved me a lot of time)\n. with getShadowElement() it works great.\nThanks a lot, you saved me a lot of time)\n. ",
    "jls2933": "Yes, problems are fixed with this release.\nYou rock ! Thank you ! :)\n. Translation has been fixed (i hope i didn't misunderstood the keys ..).\nThanks !\n. Ooops sorry, i'm not well-awaken this morning ...\nFixed.\n. Yes, problems are fixed with this release.\nYou rock ! Thank you ! :)\n. Translation has been fixed (i hope i didn't misunderstood the keys ..).\nThanks !\n. Ooops sorry, i'm not well-awaken this morning ...\nFixed.\n. ",
    "kayhadrin": "Thanks for the quick response!\n. Thanks for the quick response!\n. ",
    "TylerRick": "I was pleased to discover that changing some options is possible. This seems to work, for example:\n\n``` javascript\ndate_el.prop('max', '2013-06-10')\n```\n\nSo I'm hoping that I can dynamically change the other options too...\n. Looks like you can also set the `max` property via an attribute directly on the element:\n\n``` html\n<input max=\"2013-06-10\" name=\"user[birthdate]\" type=\"date\" />\n```\n. I was pleased to discover that changing some options is possible. This seems to work, for example:\n\n``` javascript\ndate_el.prop('max', '2013-06-10')\n```\n\nSo I'm hoping that I can dynamically change the other options too...\n. Looks like you can also set the `max` property via an attribute directly on the element:\n\n``` html\n<input max=\"2013-06-10\" name=\"user[birthdate]\" type=\"date\" />\n```\n. ",
    "gsunr": "Yes, I do right like you wrote, but ....\nin formcfg-pl.js I missed one closing bracket }\nNow it works great.\nPR created :)\n. Yes, I do right like you wrote, but ....\nin formcfg-pl.js I missed one closing bracket }\nNow it works great.\nPR created :)\n. ",
    "njrandhawa": "Thankyou so very much \nIt solved the problem\nThanks again\n. Thankyou so very much \nIt solved the problem\nThanks again\n. ",
    "brianpow": "I found that I also need to set \n\n> dateSigns: '-'\n\nand both problems are gone.\n\nThanks aFarkas\n. Hi Alex\n Thanks for your comment. But I can find those fields (tel, search, datetime etc) in \nhttp://www.w3.org/TR/html5/forms.html\nMay I know why they are not part of the spec?\n\nThanks.\n. Thanks Alexander \n. If you click on text field, the text is selected. But if you click on the number field, the text is not selected\n. Thanks.\n. I found that I also need to set \n\n> dateSigns: '-'\n\nand both problems are gone.\n\nThanks aFarkas\n. Hi Alex\n Thanks for your comment. But I can find those fields (tel, search, datetime etc) in \nhttp://www.w3.org/TR/html5/forms.html\nMay I know why they are not part of the spec?\n\nThanks.\n. Thanks Alexander \n. If you click on text field, the text is selected. But if you click on the number field, the text is not selected\n. Thanks.\n. ",
    "red15": "It seems the problem was the \"step\" attribute that was missing. Now it allows me to enter decimal numbers with . while still blocking input of \",\".\n\nWhich is the \"Good Thing\" to do I suppose. Closing this item.\n. It seems the problem was the \"step\" attribute that was missing. Now it allows me to enter decimal numbers with . while still blocking input of \",\".\n\nWhich is the \"Good Thing\" to do I suppose. Closing this item.\n. ",
    "prasanthkc": "@aFarkas Thanks, Really helped to override current situation, but i have to change all the jQuery UI-APIs used in my earlier project modules to .prop()  :)\n. @aFarkas Thanks, Really helped to override current situation, but i have to change all the jQuery UI-APIs used in my earlier project modules to .prop()  :)\n. ",
    "Ineluki": "The error happens in that fiddle.\n\nIf I run that fiddle in Chromium (where I can actually enter something other than a number), put \"a\" in the number field, hit submit, and get the message \"Please enter a number\", instead of \"changed...\"\n\nChromium: Version 28.0.1500.52 Built on Ubuntu 12.04, running on LinuxMint 13 (28.0.1500.52-0ubuntu1.12.04.2)\n. Not fixed for me yet.\nIf you have a required prop, it will behave as if you had entered nothing.\nRemove the required prop, and the right message shows.\n. The error happens in that fiddle.\n\nIf I run that fiddle in Chromium (where I can actually enter something other than a number), put \"a\" in the number field, hit submit, and get the message \"Please enter a number\", instead of \"changed...\"\n\nChromium: Version 28.0.1500.52 Built on Ubuntu 12.04, running on LinuxMint 13 (28.0.1500.52-0ubuntu1.12.04.2)\n. Not fixed for me yet.\nIf you have a required prop, it will behave as if you had entered nothing.\nRemove the required prop, and the right message shows.\n. ",
    "djesse": "Ok. You're right. appending the wspopover to the element could be a general way to solve theses kind of problems. I would recommend to address this possible issue in the docs, as not every polyfill has popover-elements, so it's easily forgotten.\n. Ok. You're right. appending the wspopover to the element could be a general way to solve theses kind of problems. I would recommend to address this possible issue in the docs, as not every polyfill has popover-elements, so it's easily forgotten.\n. ",
    "dkniffin": "Yep, that should do it. Thanks!\n. Yep, that should do it. Thanks!\n. ",
    "terinjokes": "While datetime-local is now being shim, I'm noticing that after the user selects the date/time, the value is cleared. This is evident in the demo above, and in 1.11.0\n. Upon farther review, I've found the culprit to be `parseVal` in form-number-date-ui.js.\n\nIn my locale, splitting on whitespace characters will result 3 parts, not two: date, time and meridian. Since it's not parsed back to a [valid normalized local date and time string](http://www.w3.org/html/wg/drafts/html/master/infrastructure.html#valid-normalized-local-date-and-time-string), the browser doesn't set the value.\n\nI fixed it locally by adding the following branch, though I'm not sure it works for all locales:\n\n``` javascript\n} else if (fVal.length == 3) {\n    val = this.date(fVal[0], o) +'T'+ this.time(fVal[1]+fVal[2], o);\n}\n```\n. Want to weight in here, that having a second module loader, one we don't have control over, is an additional complexity for a problem we don't have: It would be much better for us to package the shims we would use, even if they aren't actually needed in each browser.\n. While datetime-local is now being shim, I'm noticing that after the user selects the date/time, the value is cleared. This is evident in the demo above, and in 1.11.0\n. Upon farther review, I've found the culprit to be `parseVal` in form-number-date-ui.js.\n\nIn my locale, splitting on whitespace characters will result 3 parts, not two: date, time and meridian. Since it's not parsed back to a [valid normalized local date and time string](http://www.w3.org/html/wg/drafts/html/master/infrastructure.html#valid-normalized-local-date-and-time-string), the browser doesn't set the value.\n\nI fixed it locally by adding the following branch, though I'm not sure it works for all locales:\n\n``` javascript\n} else if (fVal.length == 3) {\n    val = this.date(fVal[0], o) +'T'+ this.time(fVal[1]+fVal[2], o);\n}\n```\n. Want to weight in here, that having a second module loader, one we don't have control over, is an additional complexity for a problem we don't have: It would be much better for us to package the shims we would use, even if they aren't actually needed in each browser.\n. ",
    "ChaosD": "Could this issue be reopened? As of now webshim still does not support the datetime input and it looks like datetime-local will be deprecated:\nhttps://twitter.com/html5/status/433038890937901056\n\nSide question: can the current datetime-local input be (ab)used to get UTC dates, especially when clocking \"Now\" in the picker?\n. Could this issue be reopened? As of now webshim still does not support the datetime input and it looks like datetime-local will be deprecated:\nhttps://twitter.com/html5/status/433038890937901056\n\nSide question: can the current datetime-local input be (ab)used to get UTC dates, especially when clocking \"Now\" in the picker?\n. ",
    "JvilleDjango": "Actually I found the issue. Its the 'readonly'\n. Hello,\n\nI didn't realize there was one already included till I was doing some troubleshooting.\nWell now i know and will use it in the future.\n\nThanks again,\nJeremy Miller\n\nDate: Thu, 5 Sep 2013 10:50:14 -0700\nFrom: notifications@github.com\nTo: webshim@noreply.github.com\nCC: jeremymiller110@hotmail.com\nSubject: Re: [webshim] Zebra_Datepicker (#277)\n\n@JvilleDjango \n\nI really would like to know, why you don't use the build-in datepicker.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. Actually I found the issue. Its the 'readonly'\n. Hello,\n\nI didn't realize there was one already included till I was doing some troubleshooting.\nWell now i know and will use it in the future.\n\nThanks again,\nJeremy Miller\n\nDate: Thu, 5 Sep 2013 10:50:14 -0700\nFrom: notifications@github.com\nTo: webshim@noreply.github.com\nCC: jeremymiller110@hotmail.com\nSubject: Re: [webshim] Zebra_Datepicker (#277)\n\n@JvilleDjango \n\nI really would like to know, why you don't use the build-in datepicker.\n\n\u2014\nReply to this email directly or view it on GitHub.                    \n. ",
    "sbuscher": "Thanks for the super fast response!  Made my Friday.  \n. Thanks for the super fast response!  Made my Friday.  \n. ",
    "jmjpro": "http://www.jsdelivr.com/\n. Yes the second one is perfect. Thank you very much for your quick response! I think the part you could make clearer in the documentation is that either\n1) the field and the error need to have the have the same parent\nor\n2) use a custom function to define the relationship\n. http://www.jsdelivr.com/\n. Yes the second one is perfect. Thank you very much for your quick response! I think the part you could make clearer in the documentation is that either\n1) the field and the error need to have the have the same parent\nor\n2) use a custom function to define the relationship\n. ",
    "RinkAttendant6": "It appears that this issue has been resolved:\nhttps://cdnjs.com/libraries/webshim\n. It appears that this issue has been resolved:\nhttps://cdnjs.com/libraries/webshim\n. ",
    "peterhartmann": "JSFiddle works as intended: http://jsfiddle.net/WfcxS/1/\n\nThis issue persists in Firefox 24 on my pc. I assume configuration mistake on my part, but I get no information to debug the issue, even with $.webshims.debug = true. Though when I place polyfill() call inside $( function() {}), I do get information that I should place it before ready() call, so polyfill seem to be loaded and working at this point.\n\nI develop locally, so I can't present anything online yet. Perhaps I can return to this issue once the site is available?\n. JSFiddle works as intended: http://jsfiddle.net/WfcxS/1/\n\nThis issue persists in Firefox 24 on my pc. I assume configuration mistake on my part, but I get no information to debug the issue, even with $.webshims.debug = true. Though when I place polyfill() call inside $( function() {}), I do get information that I should place it before ready() call, so polyfill seem to be loaded and working at this point.\n\nI develop locally, so I can't present anything online yet. Perhaps I can return to this issue once the site is available?\n. ",
    "carlopires": "I forgot to mention that this happens with Firefox 24, sorry.\n\n[Testcase one](https://gist.github.com/carlopires/7136108): Bootstrap is called after webshims\n\n[Testcase two](https://gist.github.com/carlopires/7136212): Bootstrap loaded in HTML head section, before webshims\n\nBoth fails on rendering bootstrap forms. I attached screenshots to the gists.\n. Yes. I had only to add a locale definitions for the current \"lang\". I made a [pull request](https://github.com/aFarkas/webshim/pull/301), for the case of you want to merge it.\n. I just saw this just now. I was fooled by the rush and the fact of seeing the German locale explicit in the code.\n\nAlso, in the case of languages with regions like pt{-BR|-PT} the code would be smart enough to downgrade to language locale if the full one (lang+region) is not available. Like:\n\n```\npt-BR -> downgrade to pt\npt-PT -> downgrade to pt\nformcfg-pt.js must exists, of course.\n```\n. In time, it is the case to remove the locales en/de from [form-number-date-ui.js](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/form-number-date-ui.js)? This would help to stay with only one way to do the thing, which is good for maintenance.\n. I forgot to mention that this happens with Firefox 24, sorry.\n\n[Testcase one](https://gist.github.com/carlopires/7136108): Bootstrap is called after webshims\n\n[Testcase two](https://gist.github.com/carlopires/7136212): Bootstrap loaded in HTML head section, before webshims\n\nBoth fails on rendering bootstrap forms. I attached screenshots to the gists.\n. Yes. I had only to add a locale definitions for the current \"lang\". I made a [pull request](https://github.com/aFarkas/webshim/pull/301), for the case of you want to merge it.\n. I just saw this just now. I was fooled by the rush and the fact of seeing the German locale explicit in the code.\n\nAlso, in the case of languages with regions like pt{-BR|-PT} the code would be smart enough to downgrade to language locale if the full one (lang+region) is not available. Like:\n\n```\npt-BR -> downgrade to pt\npt-PT -> downgrade to pt\nformcfg-pt.js must exists, of course.\n```\n. In time, it is the case to remove the locales en/de from [form-number-date-ui.js](https://github.com/aFarkas/webshim/blob/gh-pages/src/shims/form-number-date-ui.js)? This would help to stay with only one way to do the thing, which is good for maintenance.\n. ",
    "hparra": "I understand now: webshims implements `change` and `input` events correctly, as does FF. Webkit and IE10 trigger `change` incorrectly, with IE10 not having `input` at all. Do you know of any low-level (global) jquery fix for this?\n\nThanks for the library.\n. Will do and will update my test page. Should test up to db9e414963f29f286d648b8edd15451c8ebfcf89?\n. I understand now: webshims implements `change` and `input` events correctly, as does FF. Webkit and IE10 trigger `change` incorrectly, with IE10 not having `input` at all. Do you know of any low-level (global) jquery fix for this?\n\nThanks for the library.\n. Will do and will update my test page. Should test up to db9e414963f29f286d648b8edd15451c8ebfcf89?\n. ",
    "SamHasler": "It looks good: https://rawgithub.com/aFarkas/webshim/doc-refactor/demos/index.html\n\nIt's a lot more usable that the current documentation. Can't it just be switched to?\n. related to #476 ?\n. It looks good: https://rawgithub.com/aFarkas/webshim/doc-refactor/demos/index.html\n\nIt's a lot more usable that the current documentation. Can't it just be switched to?\n. related to #476 ?\n. ",
    "hannesjohansson": "Is there any way to abort the placeholder replacement from the forms polyfill? I generally print labels for that anyway (and hide them when placeholder exists through css).\n. Tried the script, but it made no visual difference.\n\nHere's a screenshot of the form running in IE8 in IETester (the placeholder \"l\u00f6senord\" is positioned in the top left instead of in the field)\nhttp://i5.minus.com/je7ArBr3htaDw.png\n. var lol = $('input[type=\"password\"][placeholder]').offsetParent();\nconsole.log(lol.attr('class'));\n\nThat gives me the classes of the root html element populated mostly by modernizr: \"lt-ie9 js no-touch no-svg\". So I'm guessing there is some problem getting the offsetParent();. Is there a way to load webshims in codepen or jsfiddle to do more testing?\n. When I inspect the DOM generated by webshims in firebug lite this is what I see:\n\n```\n<form class=\"...\" action=\"...\">\n...\n<input name=\"password\" class=\"login-input-pass\" id=\"password\" type=\"password\" required=\"required\" placeholder=\"L\u00f6senord\">\n<span class=\"placeholder-textplaceholder-visible\" style=\"LINE-HEIGHT:21px; PADDING-lEFT:9px; FONT-SIZE: 15px; FONT-WEIGHT: 400; PADDING-TOP:9px;\">L\u00f6senord</span>\n...\n</form>\n```\n\nIt looks like the placeholder for the password-field is generated as a sibling to the input field, is that supposed to be the case? The placeholder element for the \"E-post\" field above is not visible from inspection.\n. Haha, this bug is a bit crazy. I've now isolated it (but it took a little while):\n\nIf the password field has a procentual width (like width: 100%) AND its wrapper has \"display: none;\" set, it triggers the bug in IE8.\n\nHere's some code to replicate it:\n\n```\n<!doctype html>\n<html>\n<head>\n    <title>Oh you little...</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"description\" content=\"Whatevs\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>  \n    <script type=\"text/javascript\" src=\"js/modernizr.js\"></script>\n    <style type=\"text/css\">\n        .hiddenform-wrapper {\n            display: none;\n        }\n        .hiddenform-wrapper.active {\n            display: block;\n        }\n        input {\n            width: 50%;\n        }\n    </style>\n</head>\n\n<body class=\"\">\n    <div class=\"hiddenform-wrapper\">\n        <form>\n            <input type=\"email\" placeholder=\"e-mail\">\n            <input type=\"password\" placeholder=\"password\">\n            <input type=\"submit\" value=\"Test\">\n        </form>\n    </div>\n    <button type=\"button\" id=\"showform\">Show form</button>\n\n<script type=\"text/javascript\">\n    Modernizr.load([\n            { load: 'js/jquery-1.10.2.min.js'},\n            { \n                load: 'js/polyfiller.js',\n                complete: function() {\n                    //change webshims options\n                    $.webshims.setOptions({\n                        waitReady: false,\n                        basePath: \"js/shims/\",\n                        activeLang: 'sv'\n                    });\n\n                    //start polyfilling\n                    $.webshims.polyfill('forms');\n\n                    $('#showform').click(function() {\n                        $('.hiddenform-wrapper').toggleClass('active');\n                    });\n                }\n            }\n        ]);\n</script>\n\n</body>\n</html>\n```\n\nSo I can avoid the bug by either removing display: none; while the shim is initializing (and put it back later), or if I don't set a procentual width to the input field. It's kind of annoying having to either though ;p\n. Is there any way to abort the placeholder replacement from the forms polyfill? I generally print labels for that anyway (and hide them when placeholder exists through css).\n. Tried the script, but it made no visual difference.\n\nHere's a screenshot of the form running in IE8 in IETester (the placeholder \"l\u00f6senord\" is positioned in the top left instead of in the field)\nhttp://i5.minus.com/je7ArBr3htaDw.png\n. var lol = $('input[type=\"password\"][placeholder]').offsetParent();\nconsole.log(lol.attr('class'));\n\nThat gives me the classes of the root html element populated mostly by modernizr: \"lt-ie9 js no-touch no-svg\". So I'm guessing there is some problem getting the offsetParent();. Is there a way to load webshims in codepen or jsfiddle to do more testing?\n. When I inspect the DOM generated by webshims in firebug lite this is what I see:\n\n```\n<form class=\"...\" action=\"...\">\n...\n<input name=\"password\" class=\"login-input-pass\" id=\"password\" type=\"password\" required=\"required\" placeholder=\"L\u00f6senord\">\n<span class=\"placeholder-textplaceholder-visible\" style=\"LINE-HEIGHT:21px; PADDING-lEFT:9px; FONT-SIZE: 15px; FONT-WEIGHT: 400; PADDING-TOP:9px;\">L\u00f6senord</span>\n...\n</form>\n```\n\nIt looks like the placeholder for the password-field is generated as a sibling to the input field, is that supposed to be the case? The placeholder element for the \"E-post\" field above is not visible from inspection.\n. Haha, this bug is a bit crazy. I've now isolated it (but it took a little while):\n\nIf the password field has a procentual width (like width: 100%) AND its wrapper has \"display: none;\" set, it triggers the bug in IE8.\n\nHere's some code to replicate it:\n\n```\n<!doctype html>\n<html>\n<head>\n    <title>Oh you little...</title>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"description\" content=\"Whatevs\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>  \n    <script type=\"text/javascript\" src=\"js/modernizr.js\"></script>\n    <style type=\"text/css\">\n        .hiddenform-wrapper {\n            display: none;\n        }\n        .hiddenform-wrapper.active {\n            display: block;\n        }\n        input {\n            width: 50%;\n        }\n    </style>\n</head>\n\n<body class=\"\">\n    <div class=\"hiddenform-wrapper\">\n        <form>\n            <input type=\"email\" placeholder=\"e-mail\">\n            <input type=\"password\" placeholder=\"password\">\n            <input type=\"submit\" value=\"Test\">\n        </form>\n    </div>\n    <button type=\"button\" id=\"showform\">Show form</button>\n\n<script type=\"text/javascript\">\n    Modernizr.load([\n            { load: 'js/jquery-1.10.2.min.js'},\n            { \n                load: 'js/polyfiller.js',\n                complete: function() {\n                    //change webshims options\n                    $.webshims.setOptions({\n                        waitReady: false,\n                        basePath: \"js/shims/\",\n                        activeLang: 'sv'\n                    });\n\n                    //start polyfilling\n                    $.webshims.polyfill('forms');\n\n                    $('#showform').click(function() {\n                        $('.hiddenform-wrapper').toggleClass('active');\n                    });\n                }\n            }\n        ]);\n</script>\n\n</body>\n</html>\n```\n\nSo I can avoid the bug by either removing display: none; while the shim is initializing (and put it back later), or if I don't set a procentual width to the input field. It's kind of annoying having to either though ;p\n. ",
    "nmoschkin": "Thanks for getting back to me.  Sorry I've been away.\n\nOkay, so, the issue with the hour popup not opening might just be our manager's system.  She's got a lot of quirky machines.  She exists in a dimension of quirk.  No one else has complained about it, so far, so I'm going to let it be.\n\nHowever, the scroll issue I was having, and that problem happens with every browser I've used: If the time picker is forced to be near the bottom of the page, and the hour popup opens, part of it goes below the fold, there's no way to pull the scrollbar down to see it.  It goes away if you try to use the scrollbar.  The mouse wheel works fine, but some people use their trackpads, and hence, they have to use the scrollbar.\n\nAlso, I'm stylizing all the input widgets so that they are uniform, so I don't need to remove the webshims I've already got, but I will try the jQueryUI modification and see what that does.\n. Thanks for getting back to me.  Sorry I've been away.\n\nOkay, so, the issue with the hour popup not opening might just be our manager's system.  She's got a lot of quirky machines.  She exists in a dimension of quirk.  No one else has complained about it, so far, so I'm going to let it be.\n\nHowever, the scroll issue I was having, and that problem happens with every browser I've used: If the time picker is forced to be near the bottom of the page, and the hour popup opens, part of it goes below the fold, there's no way to pull the scrollbar down to see it.  It goes away if you try to use the scrollbar.  The mouse wheel works fine, but some people use their trackpads, and hence, they have to use the scrollbar.\n\nAlso, I'm stylizing all the input widgets so that they are uniform, so I don't need to remove the webshims I've already got, but I will try the jQueryUI modification and see what that does.\n. ",
    "DanielJomphe": "Oh, now it works (both in 'de' and in 'fr') on your demo page.\n\nAs for my page, it continues ignoring the calls.\n\nI'm testing in Chrome 31.\nWebshims tells me its version is 1.11.4-RC1.\n\nHmmm, I'm starting to believe it's because Webshims saw Chrome supports everything correctly and thus doesn't need to polyfill anything. Look at this screenshot, doesn't it look like this is Chrome's native widget? On your demo page, the widget is clearly different.\n\n![image](https://f.cloud.github.com/assets/28544/1636658/9d2a6646-57d6-11e3-9050-cb457b24f698.png)\n\nNote that I also tried configuring Webshims to replaceUI and if I remember well, it didn't help. I think I'll try again, although I don't really like the idea of not using the native HTML 5 widgets when they're available. (As long as they do the job!)\n. > Could you also try to directly link to the french locale:\n\nI tried with the following:\n\n``` html\n<script src=\"/assets/js-webshim/minified/polyfiller.js\"></script>\n<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js\"></script>\n...\n```\n\nbut it didn't help.\n\n> Note also, that I recently made some changes to locale loading. (Just in case you made an update (make sure every file is new) or you haven't loaded a stable release).\n\nI downloaded the code this afternoon from this link: http://corrupt-system.de/webshims-stable.zip\n. OK, with `replaceUI`, i18n works but then my previous validators no more work, so I suppose I'll need to learn how to validate that field with Webshims.\n\nThank you very much for your time, aFarkas.\n. @aFarkas, finally, the manual loading of the l18n file is necessary in my situation! If I remove that line, it no longer works.\n. aFarkas: to solve my issue, I had to use `replaceUI: true` **and** `<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js\"></script>`. Without the latter, no l18n changes worked.\n\nIf you ever make it so that I no more need to manually load the l18n file(s), I would be very happy if you updated this issue to tell us of the improvement.\n\nAs for validation, I've got no issue, just work ahead of me. :)\n\nThanks again for your time and attention.\n. Oh, now it works (both in 'de' and in 'fr') on your demo page.\n\nAs for my page, it continues ignoring the calls.\n\nI'm testing in Chrome 31.\nWebshims tells me its version is 1.11.4-RC1.\n\nHmmm, I'm starting to believe it's because Webshims saw Chrome supports everything correctly and thus doesn't need to polyfill anything. Look at this screenshot, doesn't it look like this is Chrome's native widget? On your demo page, the widget is clearly different.\n\n![image](https://f.cloud.github.com/assets/28544/1636658/9d2a6646-57d6-11e3-9050-cb457b24f698.png)\n\nNote that I also tried configuring Webshims to replaceUI and if I remember well, it didn't help. I think I'll try again, although I don't really like the idea of not using the native HTML 5 widgets when they're available. (As long as they do the job!)\n. > Could you also try to directly link to the french locale:\n\nI tried with the following:\n\n``` html\n<script src=\"/assets/js-webshim/minified/polyfiller.js\"></script>\n<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js\"></script>\n...\n```\n\nbut it didn't help.\n\n> Note also, that I recently made some changes to locale loading. (Just in case you made an update (make sure every file is new) or you haven't loaded a stable release).\n\nI downloaded the code this afternoon from this link: http://corrupt-system.de/webshims-stable.zip\n. OK, with `replaceUI`, i18n works but then my previous validators no more work, so I suppose I'll need to learn how to validate that field with Webshims.\n\nThank you very much for your time, aFarkas.\n. @aFarkas, finally, the manual loading of the l18n file is necessary in my situation! If I remove that line, it no longer works.\n. aFarkas: to solve my issue, I had to use `replaceUI: true` **and** `<script src=\"/assets/js-webshim/minified/shims/i18n/formcfg-fr.js\"></script>`. Without the latter, no l18n changes worked.\n\nIf you ever make it so that I no more need to manually load the l18n file(s), I would be very happy if you updated this issue to tell us of the improvement.\n\nAs for validation, I've got no issue, just work ahead of me. :)\n\nThanks again for your time and attention.\n. ",
    "davidgovea": "Strange how the comma was never present, but bower only started failing on 1.11.5.\n\nI've gone back to explicit 1.11.3 until this new version is available.\n. thanks @aFarkas!\n. Strange how the comma was never present, but bower only started failing on 1.11.5.\n\nI've gone back to explicit 1.11.3 until this new version is available.\n. thanks @aFarkas!\n. ",
    "derduher": "@aFarkas just needs to do another release (tag), until then @davidgovea feel free to grab off my fork.\n. @aFarkas just needs to do another release (tag), until then @davidgovea feel free to grab off my fork.\n. ",
    "espaan": "BTW How do you minify the files ? Then I can update the file in my current setup.\n. Thanks for merging and the answer :+1: \n. BTW How do you minify the files ? Then I can update the file in my current setup.\n. Thanks for merging and the answer :+1: \n. ",
    "barnzilla": "Thank you so much for this. I'm embarassed for not having thought to do this myself. :)\n\nBy the way, great work on webshim. I've used several in the past and, in my opinion, this one is preferable to the others.\n. Thank you so much for this. I'm embarassed for not having thought to do this myself. :)\n\nBy the way, great work on webshim. I've used several in the past and, in my opinion, this one is preferable to the others.\n. ",
    "rodebert": "Thanks! +1\n. Thanks. Works! +1\n. After further testing this seems not to work correctly. If I have two \n\n```\n<div class=\"error-box\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n```\n\non one page the error message of the last one is shown on every other message box.\n. I found the error in my code, which looks like this:\n\n```\n<form action=\"#\" class=\"ws-validate\">\n    <div class=\"form-row\" data-errorbox=\"er-number-1\">\n        <input type=\"number\" value=\"-2\" min=\"0\" />\n        <div id=\"er-number-1\" class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you should use is {%min}</p></div>\n    </div>\n    <div class=\"form-row\" data-errorbox=\"er-number-2\">\n        <input type=\"number\" value=\"0\" min=\"5\" />\n        <div id=\"er-number-2\" class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n</form>     \n```\n\nRemoving the `data-errobox`-Attribute from the `.form-row` fixes this issue.\n. Thanks! +1\n. Thanks. Works! +1\n. After further testing this seems not to work correctly. If I have two \n\n```\n<div class=\"error-box\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n```\n\non one page the error message of the last one is shown on every other message box.\n. I found the error in my code, which looks like this:\n\n```\n<form action=\"#\" class=\"ws-validate\">\n    <div class=\"form-row\" data-errorbox=\"er-number-1\">\n        <input type=\"number\" value=\"-2\" min=\"0\" />\n        <div id=\"er-number-1\" class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you should use is {%min}</p></div>\n    </div>\n    <div class=\"form-row\" data-errorbox=\"er-number-2\">\n        <input type=\"number\" value=\"0\" min=\"5\" />\n        <div id=\"er-number-2\" class=\"error-box\" hidden=\"\"><p class=\"range-underflow\">changed {%value} is too low. The lowest value you can use is {%min}</p></div>\n    </div>\n</form>     \n```\n\nRemoving the `data-errobox`-Attribute from the `.form-row` fixes this issue.\n. ",
    "rubenarslan": "Delightful! Thanks, you\u2019re on of the most responsive devs I know.\n\nOn 17 Jan 2014, at 14:21, Alexander Farkas notifications@github.com wrote:\n\n> Yeah, this is already possible, but not documented yet...\n> \n> Try this:\n> \n> webshims.setOptions('forms-ext', {\n>     replaceUI: {range: true}\n> });\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. > Anything more complicated than that discourages the noobs and reduces the Webshim audience.\n> I just wanted to echo this sentiment. Maybe there's a way to both satisfy advanced users like @mreinstein and noobs. For me the appeal definitely was the \"it just works\" aspect and I can see Webshim rise to very high popularity thanks to this.\n. When I applied this attribute to all checkboxes, they had a red \"invalid\" shadow by default (before the box was ever focused). My kludgy solution was to add a hidden checkbox with the same name and the attribute and to remove the attribute from the other checkboxes. Maybe this can be improved.\n. I'm not sure I understood, so this is the feature test you're currently using but it's not perfect, i.e. it's trigger-happy?\n. Thank you! I added\n\n``` css\n.ws-range\n .ws-range-thumb {\n     margin-left:-4.5px !important;\n}\n```\n\nso that the thumb would not be right-shifted at load. It does return to the correct position once you drag it, but it starts at `margin-left:-11px`. Will this have unforeseen side effects?\nhttp://jsfiddle.net/f6rt1nzw/1/\n. Hm, I think there's a misunderstanding. In my tests, the thumb is not at the center of the range, but more to the left of it. Once you drag it, this is corrected, it jumps to the middle. But the default is a little off.\n. Delightful! Thanks, you\u2019re on of the most responsive devs I know.\n\nOn 17 Jan 2014, at 14:21, Alexander Farkas notifications@github.com wrote:\n\n> Yeah, this is already possible, but not documented yet...\n> \n> Try this:\n> \n> webshims.setOptions('forms-ext', {\n>     replaceUI: {range: true}\n> });\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. > Anything more complicated than that discourages the noobs and reduces the Webshim audience.\n> I just wanted to echo this sentiment. Maybe there's a way to both satisfy advanced users like @mreinstein and noobs. For me the appeal definitely was the \"it just works\" aspect and I can see Webshim rise to very high popularity thanks to this.\n. When I applied this attribute to all checkboxes, they had a red \"invalid\" shadow by default (before the box was ever focused). My kludgy solution was to add a hidden checkbox with the same name and the attribute and to remove the attribute from the other checkboxes. Maybe this can be improved.\n. I'm not sure I understood, so this is the feature test you're currently using but it's not perfect, i.e. it's trigger-happy?\n. Thank you! I added\n\n``` css\n.ws-range\n .ws-range-thumb {\n     margin-left:-4.5px !important;\n}\n```\n\nso that the thumb would not be right-shifted at load. It does return to the correct position once you drag it, but it starts at `margin-left:-11px`. Will this have unforeseen side effects?\nhttp://jsfiddle.net/f6rt1nzw/1/\n. Hm, I think there's a misunderstanding. In my tests, the thumb is not at the center of the range, but more to the left of it. Once you drag it, this is corrected, it jumps to the middle. But the default is a little off.\n. ",
    "xthepoet": "Thanks for the response. Maybe I can help if you can provide some pointers.\n\nI was going to play with js this weekend. Had set debug to 'noCombo' and am\ntesting playing around with filereader.js (tried to comment out suppression\nof default input file events like e.stopImmediatePropagation). Is this on\nthe right track?\n\nOn Fri, Jan 24, 2014 at 5:56 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> Yes, this is currently impossible. And the main reason, why you have to\n> add an additional class to the input[type=\"file\"]. I want to look into it,\n> but this will take at least 1.2 month. Here is the issue: #319https://github.com/aFarkas/webshim/issues/319\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/339#issuecomment-33203723\n> .\n. I think this might be the answer:\nhttp://coding.smashingmagazine.com/2013/10/11/we-wanted-to-build-a-file-uploader/\nhttps://github.com/mailru/FileAPI\n\nOn Sat, Jan 25, 2014 at 10:25 PM, Alexander Farkas <notifications@github.com\n\n> wrote:\n> \n> Thanks, this isn't that easy, because you have to write action script. I'm\n> currently not sure, wether everything I want is possible.\n> \n> First of all, here is what we have:\n> Flash has to fully intercept the input[type=file] user interaction to get\n> the data for the filereader api. Which means the file isn't in your HTML\n> and only in the swf plugin world.\n> \n> Going from there, it should be easy to intercept JS calls and delegate\n> those to swf to mimic/shim an AJAX form/AJAX upload.\n> \n> Something I don't know about, but what would be great is, wether it is\n> possible that we can transfer the data from flash directly into the\n> markup/dom world, so that a normal unfancy form submit works as expected.\n> (I know that the object element is also a submittable form element, but\n> don't know how this works and if swf is capable of doing this. If not we\n> have to go the way that, we intercept a form submit and let flash submit\n> the hole data using the AJAX shim and then somehow handle the response.\n> \n> But yeah, we have to write a lot of action script for this. If you\n> investigate on this a little bit, it would be great.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/339#issuecomment-33287801\n> .\n. Thanks for the response. Maybe I can help if you can provide some pointers.\n\nI was going to play with js this weekend. Had set debug to 'noCombo' and am\ntesting playing around with filereader.js (tried to comment out suppression\nof default input file events like e.stopImmediatePropagation). Is this on\nthe right track?\n\nOn Fri, Jan 24, 2014 at 5:56 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> Yes, this is currently impossible. And the main reason, why you have to\n> add an additional class to the input[type=\"file\"]. I want to look into it,\n> but this will take at least 1.2 month. Here is the issue: #319https://github.com/aFarkas/webshim/issues/319\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/339#issuecomment-33203723\n> .\n. I think this might be the answer:\nhttp://coding.smashingmagazine.com/2013/10/11/we-wanted-to-build-a-file-uploader/\nhttps://github.com/mailru/FileAPI\n\nOn Sat, Jan 25, 2014 at 10:25 PM, Alexander Farkas <notifications@github.com\n\n> wrote:\n> \n> Thanks, this isn't that easy, because you have to write action script. I'm\n> currently not sure, wether everything I want is possible.\n> \n> First of all, here is what we have:\n> Flash has to fully intercept the input[type=file] user interaction to get\n> the data for the filereader api. Which means the file isn't in your HTML\n> and only in the swf plugin world.\n> \n> Going from there, it should be easy to intercept JS calls and delegate\n> those to swf to mimic/shim an AJAX form/AJAX upload.\n> \n> Something I don't know about, but what would be great is, wether it is\n> possible that we can transfer the data from flash directly into the\n> markup/dom world, so that a normal unfancy form submit works as expected.\n> (I know that the object element is also a submittable form element, but\n> don't know how this works and if swf is capable of doing this. If not we\n> have to go the way that, we intercept a form submit and let flash submit\n> the hole data using the AJAX shim and then somehow handle the response.\n> \n> But yeah, we have to write a lot of action script for this. If you\n> investigate on this a little bit, it would be great.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/339#issuecomment-33287801\n> .\n. ",
    "Arthedian": "When I investigated it further I run in a problem, that this site unfortunaly doesnt support your translation file extension (JS): http://docs.transifex.com/developer/formats/ - this is the supported file extensions\n. When I investigated it further I run in a problem, that this site unfortunaly doesnt support your translation file extension (JS): http://docs.transifex.com/developer/formats/ - this is the supported file extensions\n. ",
    "outdooricon": "you are welcome sir :) happy to help\n. See https://github.com/aFarkas/webshim/pull/576\n. you are welcome sir :) happy to help\n. See https://github.com/aFarkas/webshim/pull/576\n. ",
    "1DMF": "I have used    \n\n```\n$('#fp_file').on('change',function() {\n fileSelected($(this));\n}); \n\nfunction fileSelected(ele)\n{    \nvar file = $(ele).prop('files')[0];\n ....\n```\n\nWhich is working in IE9, but I cannot for the life of me work out how to use the options\n\nI've tried...\n\n```\nwebshims.setOptions('filereader',{extensions : '*.pdf;*.doc;*.docx'}); \n```\n\nBut no joy.\n\nWhere and how are we meant to be providing the element options?\n\nalso why are you even using this shim wrapper for FileReader?\n\nFileReader states...\nThis plugin is unmaintained and unsupported as File API is now widely supported (almost 80% global support \u2013 http://caniuse.com/fileapi)\n Please use https://github.com/moxiecode/moxie instead of this polyfill if needed.\n. I don't get this now it doesn't work at all ...\n\nUPDATE: You must use the class 'ws-filereader' on the input/file element within the HTML - for some bizarre reason?\n\nAlso it ignores / doesn't work with the HTML5 attribute 'accept' and I have no idea how I pass the options.\n\nCan anyone clarify if this shim actually works and if so how?\n. I have used    \n\n```\n$('#fp_file').on('change',function() {\n fileSelected($(this));\n}); \n\nfunction fileSelected(ele)\n{    \nvar file = $(ele).prop('files')[0];\n ....\n```\n\nWhich is working in IE9, but I cannot for the life of me work out how to use the options\n\nI've tried...\n\n```\nwebshims.setOptions('filereader',{extensions : '*.pdf;*.doc;*.docx'}); \n```\n\nBut no joy.\n\nWhere and how are we meant to be providing the element options?\n\nalso why are you even using this shim wrapper for FileReader?\n\nFileReader states...\nThis plugin is unmaintained and unsupported as File API is now widely supported (almost 80% global support \u2013 http://caniuse.com/fileapi)\n Please use https://github.com/moxiecode/moxie instead of this polyfill if needed.\n. I don't get this now it doesn't work at all ...\n\nUPDATE: You must use the class 'ws-filereader' on the input/file element within the HTML - for some bizarre reason?\n\nAlso it ignores / doesn't work with the HTML5 attribute 'accept' and I have no idea how I pass the options.\n\nCan anyone clarify if this shim actually works and if so how?\n. ",
    "cebola2": "Done, this time right. Screenshot is Included in the original post.\n\nJ\n. Some CSS is being inherited:\n\n---\n\n```\nhtml>\nbody>\ndiv>\ndiv>\nmain>\ndiv>\ndiv>\ndiv>\nform>\nfieldset>\ndiv\n```\n\nhttps://sem2.math.ist.utl.pt/libs/js-webshim/minified/shims/styles/shim.css\n\n/\\* Line 1 */\n.ws-popover\n{\n}\n\n/\\* Line 1 */\n.ws-popover\n{\n  font-size: 13px;\n  display: block;\n  visibility: hidden;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  outline-width: 0px;\n  outline-style: none;\n  padding-top: 0px;\n  padding-right: 0.92308em;\n  padding-bottom: 0px;\n  padding-left: 0.92308em;\n  margin-top: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  margin-left: -0.92308em;\n  z-index: 1100;\n  min-width: 3.84615em;\n  transform-style: preserve-3d;\n  transform: translate3d(0px, 0px, 0px);\n  backface-visibility: hidden;\n  transition-property: visibility;\n  transition-duration: 400ms;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  direction: ltr;\n}\n\n/\\* Line 1 */\n.ws-popover.ws-po-visible\n{\n  visibility: visible;\n  display: block;\n}\n\nhttps://sem2.math.ist.utl.pt/libs/js-webshim/minified/shims/styles/forms-ext.css\n\n/\\* Line 1 */\n.input-picker\n{\n  overflow-x: visible;\n  overflow-y: visible;\n  font-size: 13px;\n  outline-width: 0px;\n  outline-style: none;\n  text-align: center;\n  font-family: sans-serif;\n  width: 27.6923em;\n  min-width: 23.0769em;\n}\n\nhttps://sem2.math.ist.utl.pt/css/main_r.css\n\n/\\* Line 194 */\n#editor_seminarios > p, #editor_seminarios > div\n{\n  border-top-width: thin;\n  border-right-width-value: thin;\n  border-bottom-width: thin;\n  border-left-width-value: thin;\n  border-top-style: solid;\n  border-right-style-value: solid;\n  border-bottom-style: solid;\n  border-left-style-value: solid;\n  border-top-color: #777777;\n  border-right-color-value: #777777;\n  border-bottom-color: #777777;\n  border-left-color-value: #777777;\n  border-image-source: none;\n  border-image-slice: 100% 100% 100% 100%;\n  border-image-width: 1 1 1 1;\n  border-image-outset: 0 0 0 0;\n  border-image-repeat: stretch stretch;\n  padding-top: 0.5em;\n  padding-right: 0.5em;\n  padding-bottom: 0.5em;\n  padding-left: 0.5em;\n}\n\n/\\* Line 195 */\n#editor_seminarios > div\n{\n  min-height: 300px;\n}\n\n/\\* Inline styles */\n\n{\n  top: 106.8px;\n  left: 5px;\n\n}\n. Thanks.\n\nMay I suggest that\n\n{appendTo: 'body'}\n\nbecomes the default?\n\nBest\n. Done, this time right. Screenshot is Included in the original post.\n\nJ\n. Some CSS is being inherited:\n\n---\n\n```\nhtml>\nbody>\ndiv>\ndiv>\nmain>\ndiv>\ndiv>\ndiv>\nform>\nfieldset>\ndiv\n```\n\nhttps://sem2.math.ist.utl.pt/libs/js-webshim/minified/shims/styles/shim.css\n\n/\\* Line 1 */\n.ws-popover\n{\n}\n\n/\\* Line 1 */\n.ws-popover\n{\n  font-size: 13px;\n  display: block;\n  visibility: hidden;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  outline-width: 0px;\n  outline-style: none;\n  padding-top: 0px;\n  padding-right: 0.92308em;\n  padding-bottom: 0px;\n  padding-left: 0.92308em;\n  margin-top: 0px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  margin-left: -0.92308em;\n  z-index: 1100;\n  min-width: 3.84615em;\n  transform-style: preserve-3d;\n  transform: translate3d(0px, 0px, 0px);\n  backface-visibility: hidden;\n  transition-property: visibility;\n  transition-duration: 400ms;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  direction: ltr;\n}\n\n/\\* Line 1 */\n.ws-popover.ws-po-visible\n{\n  visibility: visible;\n  display: block;\n}\n\nhttps://sem2.math.ist.utl.pt/libs/js-webshim/minified/shims/styles/forms-ext.css\n\n/\\* Line 1 */\n.input-picker\n{\n  overflow-x: visible;\n  overflow-y: visible;\n  font-size: 13px;\n  outline-width: 0px;\n  outline-style: none;\n  text-align: center;\n  font-family: sans-serif;\n  width: 27.6923em;\n  min-width: 23.0769em;\n}\n\nhttps://sem2.math.ist.utl.pt/css/main_r.css\n\n/\\* Line 194 */\n#editor_seminarios > p, #editor_seminarios > div\n{\n  border-top-width: thin;\n  border-right-width-value: thin;\n  border-bottom-width: thin;\n  border-left-width-value: thin;\n  border-top-style: solid;\n  border-right-style-value: solid;\n  border-bottom-style: solid;\n  border-left-style-value: solid;\n  border-top-color: #777777;\n  border-right-color-value: #777777;\n  border-bottom-color: #777777;\n  border-left-color-value: #777777;\n  border-image-source: none;\n  border-image-slice: 100% 100% 100% 100%;\n  border-image-width: 1 1 1 1;\n  border-image-outset: 0 0 0 0;\n  border-image-repeat: stretch stretch;\n  padding-top: 0.5em;\n  padding-right: 0.5em;\n  padding-bottom: 0.5em;\n  padding-left: 0.5em;\n}\n\n/\\* Line 195 */\n#editor_seminarios > div\n{\n  min-height: 300px;\n}\n\n/\\* Inline styles */\n\n{\n  top: 106.8px;\n  left: 5px;\n\n}\n. Thanks.\n\nMay I suggest that\n\n{appendTo: 'body'}\n\nbecomes the default?\n\nBest\n. ",
    "kjeremy": "I threw it into a fiddle w/o the webshims script because I wasn't sure how best to do that.  http://jsfiddle.net/9Tdh7/1/\n. I'm testing with a real IE8 in a virtual machine on Win 7.  I just emailed\nyou the page saved from within IE8 as it exhibits the issue on load.\n\nOn Fri, Mar 7, 2014 at 2:16 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> I have just added webshim and it isn't nearly that slow to me. In fact\n> most performance decrease is comming from bootstrap here:\n> \n> http://fiddle.jshell.net/trixta/9Tdh7/3/show/\n> \n> Or is it slow to you on your machine? Are you testing with a real IE8?\n> Maybe there is something else? Do you use additional JS?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/351#issuecomment-37057362\n> .\n. I threw it into a fiddle w/o the webshims script because I wasn't sure how best to do that.  http://jsfiddle.net/9Tdh7/1/\n. I'm testing with a real IE8 in a virtual machine on Win 7.  I just emailed\nyou the page saved from within IE8 as it exhibits the issue on load.\n\nOn Fri, Mar 7, 2014 at 2:16 PM, Alexander Farkas\nnotifications@github.comwrote:\n\n> I have just added webshim and it isn't nearly that slow to me. In fact\n> most performance decrease is comming from bootstrap here:\n> \n> http://fiddle.jshell.net/trixta/9Tdh7/3/show/\n> \n> Or is it slow to you on your machine? Are you testing with a real IE8?\n> Maybe there is something else? Do you use additional JS?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/351#issuecomment-37057362\n> .\n. ",
    "nuxodin": "thx!\n. thx!\n. ",
    "mweimerskirch": "I found the htmlPolyfill method just now which works perfectly. Sorry\n. I found the htmlPolyfill method just now which works perfectly. Sorry\n. ",
    "shefik": "@aFarakas I didn't get a chance to try it yet. However, I think you should just have {%title} by default anyway. In addition, please have {%x-moz-errormessage} by default (which should have the same value of {%title}.\n. @aFarkas Thanks for fixing this issue. It works fine. However, anytime I select an option from the menu, it outputs messages to the browser's console.log, such as the select2 object, as well as the <select> tag itself.\n. For example, this type of snippet code works in other browsers, except for Safari (which relies on the polyfill):\n\n```\n        $('input[data-match]').each(function() {\n            var $this = $(this);\n            var match = $this.data('match');\n\n            /**\n             * Check if fields match.\n             */\n            var e1 = $this[0];\n            var e2 = document.getElementById(match.substr(1));\n            var checkMatch = function() {\n                if (e1.value != e2.value) {\n                    e2.setCustomValidity($this.data('match-error-message'));\n                } else {\n                    e2.setCustomValidity('');\n                }\n            };\n\n            e1.addEventListener('change', checkMatch, false);\n            e2.addEventListener('keyup', checkMatch, false);\n            e2.addEventListener('paste', checkMatch, false);\n        });\n```\n. @aFarkas Thanks. It worked, based on the docs you provided.\n. @aFarkas Thanks. It worked.\n. Confirmed. This fix works for me:\n\n```\n$.webshims.setOptions('ajax', {\n        method: 'GET'\n});\n```\n. Thanks.\n. To clarify, if I add the attribute `step=\"1\"`, click the scroller's up and down arrows does correct increment the datetime per second. However, using the calendar calendar widget does not populate the seconds, which I am also attempting to achieve.. @aFarakas I didn't get a chance to try it yet. However, I think you should just have {%title} by default anyway. In addition, please have {%x-moz-errormessage} by default (which should have the same value of {%title}.\n. @aFarkas Thanks for fixing this issue. It works fine. However, anytime I select an option from the menu, it outputs messages to the browser's console.log, such as the select2 object, as well as the <select> tag itself.\n. For example, this type of snippet code works in other browsers, except for Safari (which relies on the polyfill):\n\n```\n        $('input[data-match]').each(function() {\n            var $this = $(this);\n            var match = $this.data('match');\n\n            /**\n             * Check if fields match.\n             */\n            var e1 = $this[0];\n            var e2 = document.getElementById(match.substr(1));\n            var checkMatch = function() {\n                if (e1.value != e2.value) {\n                    e2.setCustomValidity($this.data('match-error-message'));\n                } else {\n                    e2.setCustomValidity('');\n                }\n            };\n\n            e1.addEventListener('change', checkMatch, false);\n            e2.addEventListener('keyup', checkMatch, false);\n            e2.addEventListener('paste', checkMatch, false);\n        });\n```\n. @aFarkas Thanks. It worked, based on the docs you provided.\n. @aFarkas Thanks. It worked.\n. Confirmed. This fix works for me:\n\n```\n$.webshims.setOptions('ajax', {\n        method: 'GET'\n});\n```\n. Thanks.\n. To clarify, if I add the attribute `step=\"1\"`, click the scroller's up and down arrows does correct increment the datetime per second. However, using the calendar calendar widget does not populate the seconds, which I am also attempting to achieve.. ",
    "polonskiy": "> Is this really so needed to fix in webshims?\n\nI think you are right. You don't need to add this \"fix\" to webshims.\n. > Is this really so needed to fix in webshims?\n\nI think you are right. You don't need to add this \"fix\" to webshims.\n. ",
    "MattDiMu": "> The only problem I know of is, that there are cm systems messing around with URLs. And to be clear, those systems often have workarounds or exceptions for the most often used relative asset referencing and loading (i.e.: loading background images from a stylesheet).\n\nCM systems usually do that for a reason like far future caching, which is best practice imo and I doubt, that this will change anytime soon. Relative asset loading from js and css is a little bit different. Scripts may quite easily and safely manipulate URLs in stylesheets (which are in 99% of the cases background-image-urls and fonts), while manipulating JS-Files is \nmuch more complex and in some cases impossible (as they may be created dynamically from different variables).\n\nEven with future technologies like http2 in mind, I'd still prefer a system, where everything is served as one package (which may optionally be custom built with npm locally or on the server). It might not be a perfect solution as some js is served, which is never used, but I strongly doubt, that further optimizing it (and loading from the client side only the necessary parts) is worth the inflexibility/limitations.\n\nBtw, how many well-established libraries like jQuery have conditional loaders? They are usually not customized at all, as the performance impact is so negligible.\n. > The only problem I know of is, that there are cm systems messing around with URLs. And to be clear, those systems often have workarounds or exceptions for the most often used relative asset referencing and loading (i.e.: loading background images from a stylesheet).\n\nCM systems usually do that for a reason like far future caching, which is best practice imo and I doubt, that this will change anytime soon. Relative asset loading from js and css is a little bit different. Scripts may quite easily and safely manipulate URLs in stylesheets (which are in 99% of the cases background-image-urls and fonts), while manipulating JS-Files is \nmuch more complex and in some cases impossible (as they may be created dynamically from different variables).\n\nEven with future technologies like http2 in mind, I'd still prefer a system, where everything is served as one package (which may optionally be custom built with npm locally or on the server). It might not be a perfect solution as some js is served, which is never used, but I strongly doubt, that further optimizing it (and loading from the client side only the necessary parts) is worth the inflexibility/limitations.\n\nBtw, how many well-established libraries like jQuery have conditional loaders? They are usually not customized at all, as the performance impact is so negligible.\n. ",
    "prgwiz": "Would be nice if the date inputs automatically put in the separator when needed.  Much like the browsers that have this feature built in.\n. Would be nice if the date inputs automatically put in the separator when needed.  Much like the browsers that have this feature built in.\n. ",
    "jamesjrg": "yes thanks! I was confused because I assumed that browsers got the locale from the OS, but for some reason my copy of Firefox has a locale of en-US even though both the OS and Chrome are en-GB.\n. yes thanks! I was confused because I assumed that browsers got the locale from the OS, but for some reason my copy of Firefox has a locale of en-US even though both the OS and Chrome are en-GB.\n. ",
    "dmromanov": "@aFarkas \nSure. I've just wanted to have these messages translated \"out of the box\". Just like standard validators (`/blob/gh-pages/js-webshim/dev/shims/i18n/formcfg-en.js`). It's quite wierd to have a half of the messages displayed in local language and an other half displayed in English.\n. @aFarkas \nSure. I've just wanted to have these messages translated \"out of the box\". Just like standard validators (`/blob/gh-pages/js-webshim/dev/shims/i18n/formcfg-en.js`). It's quite wierd to have a half of the messages displayed in local language and an other half displayed in English.\n. ",
    "bkdotcom": "Thanks, I'll give option 1 a try\noption two does not work\n\n``` javascript\n// date-picker still appears  with supplied datepicker Configurator  link\nwebshims.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"nopicker\": true,\n        \"classes\": \"hide-inputbtns\"\n    }\n});\n```\n. initial investigation:\n\nshims/combos/15.js\nline ~1605\n\n```\npatternMismatch: function(input, val, cache) {\n    console.log('val', val);     //  val == placeholder  '(nnn) nnn-nnnn'\n           // not sure if placeholder check is supposed to happen here, or somewhere upstream\n           // still investigating\n     .....\n}\n```\n. Ugh... sorry\nApparently I had webshims + 2 other placeholder polyfills on the page.   I was only aware of 1 (which I had removed)\n\nThanks for you're quick response.\n. pattern=\"(?[2-9]\\d{2}[)-.]?[\\s]?\\d{3}[ -.]?\\d{4}\">\nallows\n5555555555  (all the non-numeric chars are optional)\n. final question:\nhow would I go about disabling webhim's placeholder polyfill ?\n. Thanks, I'll give option 1 a try\noption two does not work\n\n``` javascript\n// date-picker still appears  with supplied datepicker Configurator  link\nwebshims.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"nopicker\": true,\n        \"classes\": \"hide-inputbtns\"\n    }\n});\n```\n. initial investigation:\n\nshims/combos/15.js\nline ~1605\n\n```\npatternMismatch: function(input, val, cache) {\n    console.log('val', val);     //  val == placeholder  '(nnn) nnn-nnnn'\n           // not sure if placeholder check is supposed to happen here, or somewhere upstream\n           // still investigating\n     .....\n}\n```\n. Ugh... sorry\nApparently I had webshims + 2 other placeholder polyfills on the page.   I was only aware of 1 (which I had removed)\n\nThanks for you're quick response.\n. pattern=\"(?[2-9]\\d{2}[)-.]?[\\s]?\\d{3}[ -.]?\\d{4}\">\nallows\n5555555555  (all the non-numeric chars are optional)\n. final question:\nhow would I go about disabling webhim's placeholder polyfill ?\n. ",
    "homeloan": "OK, there are a few things people need to bear in mind when using this shim, that isn't clear in the very limited documentation.\n\n(1). Ensure you apply 'ws-filereader' class to the input tag\n\n(2). Ensure you set the 'basePath' in the setOptions (the example has it commented out just to be really helpful!)\n\nE.G.\n        webshims.setOptions('basePath', 'path to folder/js-webshim/minified/shims/');\n\n(3). The HTML 'accept' attribute doesn't appear to work, it will allow selection of any file and it doesn't filter the filedialog box to your desired file types, it just doesn't take the file into the input element even if a valid file type is selected. It seems to accept any old file and the HTML element is blank?\n\nThis is especially annoying as, if like me, you are displaying file details, the onchange event is fired even though technically the content hasn't changed and an invalid file is selected.\n\n(4). Passing in filereader options for locking down file types doesn't appear work either...\n\nE.G.\n            'filereader':{\n                        label: 'Only PDF and Word documents allowed (_.pdf, *.doc, *.docx)',\n                        extensions: '_.pdf;_.doc;_.docx',\n                        debugMode: true  \n                    }\n\nThis doesn't make any difference (see point 3).\n. I've been through the documentation several times, I stand by my comments.\n. pull what?, I don't know what you are talking about. I requested support as I found the documentation lacking, I have finally managed to crib together enough to get it semi working and posted what I thought was helpful information for others. Yet for my trouble I am insulted and have false accusation thrown at me, I'm not complaining, I'm asking questions and posting solutions, you sir are a disgrace!\n. I have the same problem, only the date widget seems to work in IE, other controls appear broken. I seem to get a text field for a number control that allows the input of letters? there is no GUI increment control either and none of the validation seems to work?\n\nI use this...\n\n```\n// polyfill HTML5 forms\nwebshim.setOptions({\n    'debug':'noCombo',\n    'forms-ext': {\n            extendNative: true,\n            types: 'date number url',\n            replaceUI: true\n    },      \n    'basePath': '/static/js-webshim/minified/shims/'\n});\n\nwebshim.polyfill('forms-ext');\n```\n\nI've tried the dev folder also without success, it seems to work in FF, Chrome & Opera but not IE. In fact it totally breaks IE11 as IE11 has a 'number control' , but it appears to be replaced by the pollyfil with a standard text input, that doesn't work.\n\nUpdate:-> I found part of the problem was a legacy meta X-UA-Compatible which was set to 'IE9', I changed it to 'Edge', and the polyfill is now working in IE11. \n. Hi Alexander,\n\nAs I mentioned in my \u2018UPDATE\u2019 comment on the bottom of my post, it was a stupid \u2018X-UA-Compatibility\u2019 issue where I had a legacy meta tag targeting IE9 , when I changed it to Edge, everything is working fine.\n\nI was working on a legacy app that  is really X/HTML 1.0 strict and uses a templating system that had the IE9 X-UA setting, which I had overlooked as I boldly code in HTML5 from now on.\n\nI\u2019m not targeting < IE10 anymore, IE9 drove me to the edge of insanity trying to get HTML5 stuff to work on it, in the end I convinced the boss to let me give up and pull support for <IE10.\n\nThe reason I came back to polyfills is even in HTML5 compatible browsers stuff still doesn\u2019t work properly or is half baked, such as FireFox\u2019s pathetic attempt at a simple thing such as a number control or IE\u2019s even worse attempt where the isn\u2019t even increment / decrement buttons!\n\nYour webshim (when configured correctly) so far is working great and I thank you sincerely for your efforts in putting this polyfill library together. I wish it wasn\u2019t needed, but am so glad it exists.\n\nI must admit the date widget seems a bit odd, it seems to appear in the opposite place the most available space is and I also can\u2019t work out how you stop it starting on the \u2018year\u2019 dimension when first opening, I want it to zoom in to the date value already set in the control.\n\nAre there docs for each of the actual widgets and their settings or is this simply not possible with the date / calendar widget?\n\nKind regards,\n\nCraig Chant (Dip Comp)\nInformation Technology Manager\n\n[HLP_IT_Sig1]\n\n   Direct Line: 01903 22 77 53        Main Line: 01903 602 664       Website: www.homeloanpartnership.comhttp://www.homeloanpartnership.com/\n\n[cid:image007.jpg@01CFBD4B.DA0066D0]\n\nFrom: Alexander Farkas [mailto:notifications@github.com]\nSent: 21 August 2014 14:05\nTo: aFarkas/webshim\nCc: Craig Chant\nSubject: Re: [webshim] No forms-ext extensions at all on IE, regardless of version and settings (#409)\n\n@homeloanhttps://github.com/homeloan\n\nThx, from your description the dev version already give you two bugs:\n1.  this is just a formal warning: need to load forms feature to use forms-ext feature.\n\nAnd can be fixed by writing:\n\nwebshim.polyfill('forms-ext');\n1.  The X-UA-Compatibility:\n\nIE browser modes are busted in IE10+. Please test your HTML/CSS/JS with a real IE version or at least IETester or similiar tools\n\nCan you provide me with more information what exactly does not work as expected, after you have fixed the second part? Do you have a testcase? Or can you mail me your project?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/409#issuecomment-52916403.\n\nThis Email and any attachments contain confidential information and is intended solely for the individual to whom it is addressed. If this Email has been misdirected, please notify the author as soon as possible. If you are not the intended recipient you must not disclose, distribute, copy, print or rely on any of the information contained, and all copies must be deleted immediately. Whilst we take reasonable steps to try to identify any software viruses, any attachments to this e-mail may nevertheless contain viruses, which our anti-virus software has failed to identify. You should therefore carry out your own anti-virus checks before opening any documents. HomeLoan Partnership will not accept any liability for damage caused by computer viruses emanating from any attachment or other document supplied with this e-mail. HomeLoan Partnership reserves the right to monitor and archive all e-mail communications through its network. No representative or employee of HomeLoan Partnership has the authority to enter into any contract on behalf of HomeLoan Partnership by email. HomeLoan Partnership is a trading name of H L Partnership Limited, registered in England and Wales with Registration Number 5011722. Registered office: Pharos House, 67 High Street, Worthing, West Sussex, BN11 1DN. H L Partnership Limited is authorised and regulated by the Financial Conduct Authority.\n. Hi Alexander,\n\nI now have the default view I want , auto drilled down to the day attribute, awesome!\n\nThank you for your support, it is very much appreciated.\n\nKind regards,\n\nCraig.\n\nFrom: Alexander Farkas [mailto:notifications@github.com]\nSent: 21 August 2014 14:39\nTo: aFarkas/webshim\nCc: Craig Chant\nSubject: Re: [webshim] No forms-ext extensions at all on IE, regardless of version and settings (#409)\n\n@homeloanhttps://github.com/homeloan\n\nHere is a configuration example:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover={\"position\"%3A+{\"at\"%3A+\"right+bottom\"}}http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover=%7B%22position%22%3A+%7B%22at%22%3A+%22right+bottom%22%7D%7D\n\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"startView\": 2,\n        \"popover\": {\n            \"position\": {\n                \"at\": \"right bottom\"\n            }\n        }\n    }\n});\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n\n value=\"2005-02-09\"\n\n type=\"date\"\n\n />\n\nYou can use startView and the popover.position option. The popover.position option takes the same arguments as the jQuery UI position util (http://jqueryui.com/position/)\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/409#issuecomment-52920441.\n\nThis Email and any attachments contain confidential information and is intended solely for the individual to whom it is addressed. If this Email has been misdirected, please notify the author as soon as possible. If you are not the intended recipient you must not disclose, distribute, copy, print or rely on any of the information contained, and all copies must be deleted immediately. Whilst we take reasonable steps to try to identify any software viruses, any attachments to this e-mail may nevertheless contain viruses, which our anti-virus software has failed to identify. You should therefore carry out your own anti-virus checks before opening any documents. HomeLoan Partnership will not accept any liability for damage caused by computer viruses emanating from any attachment or other document supplied with this e-mail. HomeLoan Partnership reserves the right to monitor and archive all e-mail communications through its network. No representative or employee of HomeLoan Partnership has the authority to enter into any contract on behalf of HomeLoan Partnership by email. HomeLoan Partnership is a trading name of H L Partnership Limited, registered in England and Wales with Registration Number 5011722. Registered office: Pharos House, 67 High Street, Worthing, West Sussex, BN11 1DN. H L Partnership Limited is authorised and regulated by the Financial Conduct Authority.\n. Same problem with :-> Implemented/fixed in  form:\n\nShould be 'forms'\n. OK, there are a few things people need to bear in mind when using this shim, that isn't clear in the very limited documentation.\n\n(1). Ensure you apply 'ws-filereader' class to the input tag\n\n(2). Ensure you set the 'basePath' in the setOptions (the example has it commented out just to be really helpful!)\n\nE.G.\n        webshims.setOptions('basePath', 'path to folder/js-webshim/minified/shims/');\n\n(3). The HTML 'accept' attribute doesn't appear to work, it will allow selection of any file and it doesn't filter the filedialog box to your desired file types, it just doesn't take the file into the input element even if a valid file type is selected. It seems to accept any old file and the HTML element is blank?\n\nThis is especially annoying as, if like me, you are displaying file details, the onchange event is fired even though technically the content hasn't changed and an invalid file is selected.\n\n(4). Passing in filereader options for locking down file types doesn't appear work either...\n\nE.G.\n            'filereader':{\n                        label: 'Only PDF and Word documents allowed (_.pdf, *.doc, *.docx)',\n                        extensions: '_.pdf;_.doc;_.docx',\n                        debugMode: true  \n                    }\n\nThis doesn't make any difference (see point 3).\n. I've been through the documentation several times, I stand by my comments.\n. pull what?, I don't know what you are talking about. I requested support as I found the documentation lacking, I have finally managed to crib together enough to get it semi working and posted what I thought was helpful information for others. Yet for my trouble I am insulted and have false accusation thrown at me, I'm not complaining, I'm asking questions and posting solutions, you sir are a disgrace!\n. I have the same problem, only the date widget seems to work in IE, other controls appear broken. I seem to get a text field for a number control that allows the input of letters? there is no GUI increment control either and none of the validation seems to work?\n\nI use this...\n\n```\n// polyfill HTML5 forms\nwebshim.setOptions({\n    'debug':'noCombo',\n    'forms-ext': {\n            extendNative: true,\n            types: 'date number url',\n            replaceUI: true\n    },      \n    'basePath': '/static/js-webshim/minified/shims/'\n});\n\nwebshim.polyfill('forms-ext');\n```\n\nI've tried the dev folder also without success, it seems to work in FF, Chrome & Opera but not IE. In fact it totally breaks IE11 as IE11 has a 'number control' , but it appears to be replaced by the pollyfil with a standard text input, that doesn't work.\n\nUpdate:-> I found part of the problem was a legacy meta X-UA-Compatible which was set to 'IE9', I changed it to 'Edge', and the polyfill is now working in IE11. \n. Hi Alexander,\n\nAs I mentioned in my \u2018UPDATE\u2019 comment on the bottom of my post, it was a stupid \u2018X-UA-Compatibility\u2019 issue where I had a legacy meta tag targeting IE9 , when I changed it to Edge, everything is working fine.\n\nI was working on a legacy app that  is really X/HTML 1.0 strict and uses a templating system that had the IE9 X-UA setting, which I had overlooked as I boldly code in HTML5 from now on.\n\nI\u2019m not targeting < IE10 anymore, IE9 drove me to the edge of insanity trying to get HTML5 stuff to work on it, in the end I convinced the boss to let me give up and pull support for <IE10.\n\nThe reason I came back to polyfills is even in HTML5 compatible browsers stuff still doesn\u2019t work properly or is half baked, such as FireFox\u2019s pathetic attempt at a simple thing such as a number control or IE\u2019s even worse attempt where the isn\u2019t even increment / decrement buttons!\n\nYour webshim (when configured correctly) so far is working great and I thank you sincerely for your efforts in putting this polyfill library together. I wish it wasn\u2019t needed, but am so glad it exists.\n\nI must admit the date widget seems a bit odd, it seems to appear in the opposite place the most available space is and I also can\u2019t work out how you stop it starting on the \u2018year\u2019 dimension when first opening, I want it to zoom in to the date value already set in the control.\n\nAre there docs for each of the actual widgets and their settings or is this simply not possible with the date / calendar widget?\n\nKind regards,\n\nCraig Chant (Dip Comp)\nInformation Technology Manager\n\n[HLP_IT_Sig1]\n\n   Direct Line: 01903 22 77 53        Main Line: 01903 602 664       Website: www.homeloanpartnership.comhttp://www.homeloanpartnership.com/\n\n[cid:image007.jpg@01CFBD4B.DA0066D0]\n\nFrom: Alexander Farkas [mailto:notifications@github.com]\nSent: 21 August 2014 14:05\nTo: aFarkas/webshim\nCc: Craig Chant\nSubject: Re: [webshim] No forms-ext extensions at all on IE, regardless of version and settings (#409)\n\n@homeloanhttps://github.com/homeloan\n\nThx, from your description the dev version already give you two bugs:\n1.  this is just a formal warning: need to load forms feature to use forms-ext feature.\n\nAnd can be fixed by writing:\n\nwebshim.polyfill('forms-ext');\n1.  The X-UA-Compatibility:\n\nIE browser modes are busted in IE10+. Please test your HTML/CSS/JS with a real IE version or at least IETester or similiar tools\n\nCan you provide me with more information what exactly does not work as expected, after you have fixed the second part? Do you have a testcase? Or can you mail me your project?\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/409#issuecomment-52916403.\n\nThis Email and any attachments contain confidential information and is intended solely for the individual to whom it is addressed. If this Email has been misdirected, please notify the author as soon as possible. If you are not the intended recipient you must not disclose, distribute, copy, print or rely on any of the information contained, and all copies must be deleted immediately. Whilst we take reasonable steps to try to identify any software viruses, any attachments to this e-mail may nevertheless contain viruses, which our anti-virus software has failed to identify. You should therefore carry out your own anti-virus checks before opening any documents. HomeLoan Partnership will not accept any liability for damage caused by computer viruses emanating from any attachment or other document supplied with this e-mail. HomeLoan Partnership reserves the right to monitor and archive all e-mail communications through its network. No representative or employee of HomeLoan Partnership has the authority to enter into any contract on behalf of HomeLoan Partnership by email. HomeLoan Partnership is a trading name of H L Partnership Limited, registered in England and Wales with Registration Number 5011722. Registered office: Pharos House, 67 High Street, Worthing, West Sussex, BN11 1DN. H L Partnership Limited is authorised and regulated by the Financial Conduct Authority.\n. Hi Alexander,\n\nI now have the default view I want , auto drilled down to the day attribute, awesome!\n\nThank you for your support, it is very much appreciated.\n\nKind regards,\n\nCraig.\n\nFrom: Alexander Farkas [mailto:notifications@github.com]\nSent: 21 August 2014 14:39\nTo: aFarkas/webshim\nCc: Craig Chant\nSubject: Re: [webshim] No forms-ext extensions at all on IE, regardless of version and settings (#409)\n\n@homeloanhttps://github.com/homeloan\n\nHere is a configuration example:\nhttp://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover={\"position\"%3A+{\"at\"%3A+\"right+bottom\"}}http://afarkas.github.io/webshim/demos/demos/cfgs/input-date.html#value=2005-02-09&startView=2&popover=%7B%22position%22%3A+%7B%22at%22%3A+%22right+bottom%22%7D%7D\n\n<script>\n//configure before calling webshims.polyfill\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        \"startView\": 2,\n        \"popover\": {\n            \"position\": {\n                \"at\": \"right bottom\"\n            }\n        }\n    }\n});\nwebshim.polyfill(\"forms forms-ext\");\n</script>\n\n<input\n\n value=\"2005-02-09\"\n\n type=\"date\"\n\n />\n\nYou can use startView and the popover.position option. The popover.position option takes the same arguments as the jQuery UI position util (http://jqueryui.com/position/)\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aFarkas/webshim/issues/409#issuecomment-52920441.\n\nThis Email and any attachments contain confidential information and is intended solely for the individual to whom it is addressed. If this Email has been misdirected, please notify the author as soon as possible. If you are not the intended recipient you must not disclose, distribute, copy, print or rely on any of the information contained, and all copies must be deleted immediately. Whilst we take reasonable steps to try to identify any software viruses, any attachments to this e-mail may nevertheless contain viruses, which our anti-virus software has failed to identify. You should therefore carry out your own anti-virus checks before opening any documents. HomeLoan Partnership will not accept any liability for damage caused by computer viruses emanating from any attachment or other document supplied with this e-mail. HomeLoan Partnership reserves the right to monitor and archive all e-mail communications through its network. No representative or employee of HomeLoan Partnership has the authority to enter into any contract on behalf of HomeLoan Partnership by email. HomeLoan Partnership is a trading name of H L Partnership Limited, registered in England and Wales with Registration Number 5011722. Registered office: Pharos House, 67 High Street, Worthing, West Sussex, BN11 1DN. H L Partnership Limited is authorised and regulated by the Financial Conduct Authority.\n. Same problem with :-> Implemented/fixed in  form:\n\nShould be 'forms'\n. ",
    "forest-devil": "awesome!\n. awesome!\n. ",
    "ToastHawaii": "Thank you for all that work, you make my life as a web developer a lot easier.\n. Thank you for all that work, you make my life as a web developer a lot easier.\n. ",
    "davidelrizzo": "Thanks for the quick response, I think you are definitely right about the Android browser just behaving terribly in this case. \n- I am not too concerned with the `splitInput`, the Android browser simply cannot cope with any kind of auto tabbing. I can just use the native input or even use the webshim 3 dropdown date version if necessary. You may just want to make a note about it's bugginess for Android in the docs.\n- The `datalist` is my main concern because neither the native or webshim version works on Android. I will have to stick with jQuery UI Autocomplete for this until either webshim works here or Android browsers support the datalist.\n\nAs a side question, you may have noticed I also tested a type of input I call a Numeric Code. Such as a number only postcode, PIN or Credit Card number. For this type of input it makes sense to use text fields on desktops where the maxlength and pattern validation come into play and number fields on touch devices where you get the numeric keypad. The number field implementation of webshim is not helpful here because none of the features like grouping or stepper are needed and the maxlength is not carried through. \n- Actual question: Is there a way to disable webshim polyfill on a specific input? I know you can choose to only implement certain types of form-ext, but the only way I could turn it off for one specific input it in this case was to use input type:text and change to type:number with JS after webshim has already run.\n. Oh, you are right the datalist on your configuration page does work on my 4.3 Android browser. I will have to do some more testing when I am back at work on Monday, but most likely my sample page was not correct somehow.\n\nAs for the IE8 validation, the reason I did not bring it up is that I had a feeling it was a local issue. I had someone else test it on like 2 levels of citrix login so I have a strong suspicion something wasn't right there. I will check this again too and let you know.\n\nI am keen to keep that UX analysis spreadsheet up to date and will likely add the time and month input too.\n\nThanks once again for all your help and work. Webshim is seriously one of the best tools for anyone building online forms period.\n. @aFarkas I had a careful look into the issues we discussed.\n1. The datalist does indeed work on Android 4.3, not sure exactly what I was doing wrong, adding `customDatalist: true` seemed to help. My solution therefore is to polyfill 'forms' on Android browsers and 'forms' and 'forms-ext' on all other browsers, I still don't want webshims overriding the Android inputs 4.3+ supports. Android behavior for these inputs is inconsistent though, thankfully in my case I do not have to support older versions/devices. \n2. Also after double checking the validation on IE8 it is working. I was also missing `addValidators: true`.\n\nI also had a look into the `inputmode=\"numeric` property you suggested for the Numeric Code inputs. Currently none of the browsers support it (not even iOS), I am happy with my implementation because it solves all the UI issues and none of the browsers I tested prohibited leading zeroes. Your inclusion of the `ws-noreplace` class will make this even easier.\n\nSo that concludes this round of my analysis. Websims is (one way or another) solving all my problems and I will begin to implement it into our projects. Thanks again.\n. @aFarkas polyfilling `inputmode` is a great idea. I have a few observations:\n\nKeypads vary wildly!\n- The Google and Samsung 'tel' keyboard allows all sorts of special characters plus spaces. The iOS 'tel' keypad does not allow spaces.\n- The iOS 'number' keypad is just the number part of the regular keypad (you can still change to the alpha keys). The Google 'number' keypad allows numerals, hyphens, spaces and the minus sign only. The Samsung 'number' keypad allows ONLY numerals (which is totally broken because you can't even enter decimals).\n- The number keypad invoked by setting `pattern=\"[0-9]*\"` on iOS is different to both the iOS 'number' and 'tel' keypad. It allows ONLY numerals. this type of keypad is a quirk of iOS, there is nothing in the spec that says this should happen.\n- The above variations are only for the 3 keyboards I checked, you can install hundreds of other 3rd party keyboards on Android and I hear Apple are about to release customized keyboards too!\n\nSo this raises some difficult questions around\n1. What is the semantically correct markup for a Numeric Code input and\n2. What is the implementation on current devices which gives the best User Experience?\n\nI dont think we can make absolute assumptions about the exact nature of a Numeric Code. A PIN number should only have numeric values, a Credit Card might be nicer to separate groups with spaces and hyphens, a Serial number may have brackets or who knows what else. As inputs it is definitely best practice to allow users to enter values in the way they feel comfortable. Given the input is `type=\"text\"` on desktops, the value always needs to go through Server Side cleanup and validation anyway.\n\n_My Proposal_\nLet the developer decide how they want inputmode to be polyfilled.\n- First priority, if `type=\"text\"` and `pattern=\"[0-9]*\"` on iOS, implement the special iOS numeric only keypad.\n- If `type=\"text\"` and the device has custom keypads (ie. modernizer detects 'touch') change the input type to match the `inputmode` specified. (eg. `inputmode=\"numeric\"` changes type to `number`, `inputmode=\"tel\"` changes type to `tel` etc..). This way the developer can decide if their input more closely matches a 'number' or 'tel', perhaps the other types of input modes may need polyfilling in the future too.\n- You will have to keep an eye out for any native support of `inputmode` once browsers/devices do start supporting it you will have to drop the pollyfill. I hope for everyone's sake that when they do, there is a way to detect it!\n. Seems messy to me, if you want to add another attribute like `data-wsmode` to change input type on devices then why bother tying that with `inputmode` or `pattern` at all? \n\nLooking at the [spec for inputmode](http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fe-inputmode) it says that the intent of this property is to specify what type of input mechinism would be most usefull, ie. which keypad to use without effecting the `type` or sanitization properties. However as we know that is not possible on any any current device. Polyfilling from `inputmode` directly to `type` I would think is a clean and neat way to solve the problem as the inputmodes in the spec map 1 to 1 to the different types and keyboards. This puts control entirely in the developer's hands without any need for custom attributes and if they don't want to use the polyfill (and any sanitation that implies) they simply omit `inputmode`. Once `inputmode` is properly supported on that device you simply drop the polyfill.\n\nThe only odd behavior then is the iOS pattern numeric keypad, which is Apple's attempt to implement `inputmode` before it was in the spec. Given the only way to enable this keyboard is with `pattern=\"[0-9]*\"`, you should probably not polyfill `inputmode` on iOS when that pattern is present. \n. Fair enough. I think you solution is practical while being as safe from assumptions about the intended input as possible. This seems to fit with your Webshim philosophy of polyfilling without harm.\nGiven this is now released on the latest stable library and fulfills all my requirements for Numeric Code inputs I will probably end up implementing it as you have. - great work\n. If you use the native input and set the step attribute to 100 in Chrome it behaves like Safari. It doesn't ever exceed the max value or go below the min like the Webshim version seems to though.\n. Thanks for the quick response, I think you are definitely right about the Android browser just behaving terribly in this case. \n- I am not too concerned with the `splitInput`, the Android browser simply cannot cope with any kind of auto tabbing. I can just use the native input or even use the webshim 3 dropdown date version if necessary. You may just want to make a note about it's bugginess for Android in the docs.\n- The `datalist` is my main concern because neither the native or webshim version works on Android. I will have to stick with jQuery UI Autocomplete for this until either webshim works here or Android browsers support the datalist.\n\nAs a side question, you may have noticed I also tested a type of input I call a Numeric Code. Such as a number only postcode, PIN or Credit Card number. For this type of input it makes sense to use text fields on desktops where the maxlength and pattern validation come into play and number fields on touch devices where you get the numeric keypad. The number field implementation of webshim is not helpful here because none of the features like grouping or stepper are needed and the maxlength is not carried through. \n- Actual question: Is there a way to disable webshim polyfill on a specific input? I know you can choose to only implement certain types of form-ext, but the only way I could turn it off for one specific input it in this case was to use input type:text and change to type:number with JS after webshim has already run.\n. Oh, you are right the datalist on your configuration page does work on my 4.3 Android browser. I will have to do some more testing when I am back at work on Monday, but most likely my sample page was not correct somehow.\n\nAs for the IE8 validation, the reason I did not bring it up is that I had a feeling it was a local issue. I had someone else test it on like 2 levels of citrix login so I have a strong suspicion something wasn't right there. I will check this again too and let you know.\n\nI am keen to keep that UX analysis spreadsheet up to date and will likely add the time and month input too.\n\nThanks once again for all your help and work. Webshim is seriously one of the best tools for anyone building online forms period.\n. @aFarkas I had a careful look into the issues we discussed.\n1. The datalist does indeed work on Android 4.3, not sure exactly what I was doing wrong, adding `customDatalist: true` seemed to help. My solution therefore is to polyfill 'forms' on Android browsers and 'forms' and 'forms-ext' on all other browsers, I still don't want webshims overriding the Android inputs 4.3+ supports. Android behavior for these inputs is inconsistent though, thankfully in my case I do not have to support older versions/devices. \n2. Also after double checking the validation on IE8 it is working. I was also missing `addValidators: true`.\n\nI also had a look into the `inputmode=\"numeric` property you suggested for the Numeric Code inputs. Currently none of the browsers support it (not even iOS), I am happy with my implementation because it solves all the UI issues and none of the browsers I tested prohibited leading zeroes. Your inclusion of the `ws-noreplace` class will make this even easier.\n\nSo that concludes this round of my analysis. Websims is (one way or another) solving all my problems and I will begin to implement it into our projects. Thanks again.\n. @aFarkas polyfilling `inputmode` is a great idea. I have a few observations:\n\nKeypads vary wildly!\n- The Google and Samsung 'tel' keyboard allows all sorts of special characters plus spaces. The iOS 'tel' keypad does not allow spaces.\n- The iOS 'number' keypad is just the number part of the regular keypad (you can still change to the alpha keys). The Google 'number' keypad allows numerals, hyphens, spaces and the minus sign only. The Samsung 'number' keypad allows ONLY numerals (which is totally broken because you can't even enter decimals).\n- The number keypad invoked by setting `pattern=\"[0-9]*\"` on iOS is different to both the iOS 'number' and 'tel' keypad. It allows ONLY numerals. this type of keypad is a quirk of iOS, there is nothing in the spec that says this should happen.\n- The above variations are only for the 3 keyboards I checked, you can install hundreds of other 3rd party keyboards on Android and I hear Apple are about to release customized keyboards too!\n\nSo this raises some difficult questions around\n1. What is the semantically correct markup for a Numeric Code input and\n2. What is the implementation on current devices which gives the best User Experience?\n\nI dont think we can make absolute assumptions about the exact nature of a Numeric Code. A PIN number should only have numeric values, a Credit Card might be nicer to separate groups with spaces and hyphens, a Serial number may have brackets or who knows what else. As inputs it is definitely best practice to allow users to enter values in the way they feel comfortable. Given the input is `type=\"text\"` on desktops, the value always needs to go through Server Side cleanup and validation anyway.\n\n_My Proposal_\nLet the developer decide how they want inputmode to be polyfilled.\n- First priority, if `type=\"text\"` and `pattern=\"[0-9]*\"` on iOS, implement the special iOS numeric only keypad.\n- If `type=\"text\"` and the device has custom keypads (ie. modernizer detects 'touch') change the input type to match the `inputmode` specified. (eg. `inputmode=\"numeric\"` changes type to `number`, `inputmode=\"tel\"` changes type to `tel` etc..). This way the developer can decide if their input more closely matches a 'number' or 'tel', perhaps the other types of input modes may need polyfilling in the future too.\n- You will have to keep an eye out for any native support of `inputmode` once browsers/devices do start supporting it you will have to drop the pollyfill. I hope for everyone's sake that when they do, there is a way to detect it!\n. Seems messy to me, if you want to add another attribute like `data-wsmode` to change input type on devices then why bother tying that with `inputmode` or `pattern` at all? \n\nLooking at the [spec for inputmode](http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fe-inputmode) it says that the intent of this property is to specify what type of input mechinism would be most usefull, ie. which keypad to use without effecting the `type` or sanitization properties. However as we know that is not possible on any any current device. Polyfilling from `inputmode` directly to `type` I would think is a clean and neat way to solve the problem as the inputmodes in the spec map 1 to 1 to the different types and keyboards. This puts control entirely in the developer's hands without any need for custom attributes and if they don't want to use the polyfill (and any sanitation that implies) they simply omit `inputmode`. Once `inputmode` is properly supported on that device you simply drop the polyfill.\n\nThe only odd behavior then is the iOS pattern numeric keypad, which is Apple's attempt to implement `inputmode` before it was in the spec. Given the only way to enable this keyboard is with `pattern=\"[0-9]*\"`, you should probably not polyfill `inputmode` on iOS when that pattern is present. \n. Fair enough. I think you solution is practical while being as safe from assumptions about the intended input as possible. This seems to fit with your Webshim philosophy of polyfilling without harm.\nGiven this is now released on the latest stable library and fulfills all my requirements for Numeric Code inputs I will probably end up implementing it as you have. - great work\n. If you use the native input and set the step attribute to 100 in Chrome it behaves like Safari. It doesn't ever exceed the max value or go below the min like the Webshim version seems to though.\n. ",
    "marnen": "Wow, thanks for the quick response!\n\nOn Wednesday, June 11, 2014, Alexander Farkas notifications@github.com\nwrote:\n\n> Closed #390 https://github.com/aFarkas/webshim/issues/390 via 038e2aa\n> https://github.com/aFarkas/webshim/commit/038e2aabe4e15b4716878a44af1e1dc771b89f14\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/390#event-130491014.\n\n## \n\nMarnen Laibow-Koser\nmarnen@marnen.org\nhttp://www.marnen.org\n\nSent from Gmail Mobile\n. Cleaned up slightly at http://jsfiddle.net/marnen/sP9Xx/4.\n. Oh, never mind. I should be using `appendPolyfill`, shouldn't I? Testing that and will close if it fixes the problem.\n. That was in fact the issue. Closing.\n. Wow, thanks for the quick response!\n\nOn Wednesday, June 11, 2014, Alexander Farkas notifications@github.com\nwrote:\n\n> Closed #390 https://github.com/aFarkas/webshim/issues/390 via 038e2aa\n> https://github.com/aFarkas/webshim/commit/038e2aabe4e15b4716878a44af1e1dc771b89f14\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/390#event-130491014.\n\n## \n\nMarnen Laibow-Koser\nmarnen@marnen.org\nhttp://www.marnen.org\n\nSent from Gmail Mobile\n. Cleaned up slightly at http://jsfiddle.net/marnen/sP9Xx/4.\n. Oh, never mind. I should be using `appendPolyfill`, shouldn't I? Testing that and will close if it fixes the problem.\n. That was in fact the issue. Closing.\n. ",
    "isaackwan": "Bear with me, but am I expected to create a PR for the master or the gh-pages branch?\n. But it seems to me that it isn't loaded fast enough on Safari. Sometimes it\nis loaded 10 seconds or more later - I can easily submit an invalid form\nwithout any rush whatsoever.\n\nI thought that .ready means that all features are fully loaded and\npolyfilled, isn't it?\nOn Jul 13, 2014 1:48 AM, \"Alexander Farkas\" notifications@github.com\nwrote:\n\n> This by design. Webshim lazyloads some specific scripts. The load happens\n> normally right after window onload. But in case a user starts to interact\n> with a form element the download is started immediately.\n> \n> So this is a feature not a bug ;-).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/408#issuecomment-48819044.\n. It seems to be related to my  implementation somehow - the webshim library\nis loaded through $.ajax on demand. If I just do a vanilla form validation\nit runs just fine on Safari.\n. This is the config that is giving trouble for me in Safari but not other browsers [http://jsfiddle.net/isaack/t8uDy/1/](http://jsfiddle.net/isaack/t8uDy/1/)\n. Thanks, the problem seems to be fixed now.\n\nSorry for the delay in response.\n. Bear with me, but am I expected to create a PR for the master or the gh-pages branch?\n. But it seems to me that it isn't loaded fast enough on Safari. Sometimes it\nis loaded 10 seconds or more later - I can easily submit an invalid form\nwithout any rush whatsoever.\n\nI thought that .ready means that all features are fully loaded and\npolyfilled, isn't it?\nOn Jul 13, 2014 1:48 AM, \"Alexander Farkas\" notifications@github.com\nwrote:\n\n> This by design. Webshim lazyloads some specific scripts. The load happens\n> normally right after window onload. But in case a user starts to interact\n> with a form element the download is started immediately.\n> \n> So this is a feature not a bug ;-).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/408#issuecomment-48819044.\n. It seems to be related to my  implementation somehow - the webshim library\nis loaded through $.ajax on demand. If I just do a vanilla form validation\nit runs just fine on Safari.\n. This is the config that is giving trouble for me in Safari but not other browsers [http://jsfiddle.net/isaack/t8uDy/1/](http://jsfiddle.net/isaack/t8uDy/1/)\n. Thanks, the problem seems to be fixed now.\n\nSorry for the delay in response.\n. ",
    "PerseusTheGreat": "Thanks a lot.\n. Thanks a lot.\nI have used [webshim.polyfill('forms forms-ext');] and everything seem to be OK, except one thing.\ninput buttons (up/down arrows) have been placed outside of INPUT area when direction had been set as RTL.\nI have studied [http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html] and I have found [direction issue] also exist there.\nWhat do I do?\nShould I fix it by CSS hacks or there is another official fix for it?\n. Ok. Thanks.\n. I apology about &lt;progress /&gt;, this was my carelessness, I'm so sorry.\n\nIn case of &lt;meter /&gt;:\nSometimes developers need to show info as <i>bar charts</i> or <i>gauges</i>.\nYou know, most of infographic components are heavy and/or complex to use.\nI think &lt;meter /&gt; is a standard and lightweight solution to most of situations (not at all).\n\nI hope someday you change your idea about it.\nThanks to your attentions\n. Thanks a lot Alex.\nWe (I and other web developers) are counting on it\n. Hi Alex.\nMerry Christmas in advance.\nI wish a perfect life for you (as a web expert) in new year.\n\nI apologize, but...\nWhat's new about &lt;meter /&gt; shim/polyfill (after more than 4 months)?\n. HI Alex.\nDo you have any idea about <meter /> shim/polyfill (after more than 1 year)?\n. It doesn't matter now. :-/\n. Thanks to your consideration.\n\nAbout your solution:\nThis solution is good when we have used &lt;fieldset&gt; as a group wrapper.\nSometimes we need to arrange some input elements around the page as a semantic group.\nIn other hand maybe we have a page with 2 or more submit button; One for main submission logic, one for cancelling purpose, one for checking some situation on server, one for redirecting to another page and ....\nEvery button has own validation logic.\n\nI had written JavaScript for solving these situations but I think this approach is not good enough.\nWhen I start new Application, I should deliver all JS files from old apps to new one but webshim is an integrated solution.\n\nAbout ASP.NET:\nNowadays ASP.NET has 3 different development approaches:\n1. <b>ASP.NET Web Forms</b>, Component Oriented, State-full, Event Driven, ...\n2. <b>ASP.NET Web Pages</b>, Exactly Like [Classic ASP] or [PHP] but based on .NET Framework\n3. <b>ASP.NET MVC</b>, Like  [ASP.NET Web Pages] but constrained to follow MVC architectural pattern. \n\nAbout ASP.NET Web Forms:\nASP.NET Web Form is a great technology for Rapid Application Development (RAD).\nDevelopers just need to know a little about HTML,CSS,JS. Every things you need to build Data-Centric web apps is available and you just need to wire components to each other by Server-Codes to making great apps! Just like implementing an custom electronic circuit by wiring some ICs.\nIts architecture back to 2001 when this technology was presented. (IE 6 and HTML 4 era)\n\nI know this sounds ridiculous, Developing Web Apps without knowing HTML or without following W3C standards. But ASP.NET Web Forms follows standards itself in its engine, so developer just need to know Server components purpose and behaviors.\n\nTo implementing forms we use <b>&lt;asp:TextBox&gt;</b> and <b>&lt;asp:Button&gt;</b>. ASP.NET Web Form engine render those as <b>&lt;input type='text'&gt;</b> and <b>&lt;input type='submit'&gt;</b>. In ASP.NET Web Forms there is a mechanism to grouping inputs, buttons and validator components for doing custom validation.\n\nSample:\n<code>&lt;asp:TextBox ID='txt1' ValidationGroup='groupName'&gt;</code>\n<code>&lt;asp:TextBox ID='txt2' &gt;</code>\n<code>&lt;asp:Button ID='btn1' OnClick='btn1_Click' ValidationGroup='groupName'&gt;</code>\n<code>&lt;asp:Button ID='btn2' OnClick='btn2_Click' &gt;</code>\n<code>&lt;asp:RequierdFieldValidator ... TargetControlID='txt1'  ValidationGroup='groupName'&gt;\n</code>\n\nWhen end-user clicks on <b>btn1</b>, some injected JavaScript codes will run to check just <b>txt1</b> emptiness; if it is filled, form will be submit and on server there is a C#/VB method (btn1_Click) that process the form (developer codes that).\nWhen end-user clicks on <b>btn2</b>, form will be submit without doing validation and on server method (btn2_Click) will process the form.\n\nI remind again, this approach was presented on HTML 4 era!\nToday Microsoft did not change/update this mechanism because of compatibility concerns!\nThis mechanism injects huge JavaScript Codes to validate forms and as I said before is not bootstrap friendly.\n\nAfter all:\nI think, my request, can be a flexibility point for webshim if it supports custom validation situations without writing JavaScript.\nIf you do not agree to me, I respect.\nI apologize for verbosity over this post.\nGood luck!\n. Thanks a lot Alex.\nYour code inspired me.\nI have used your sample codes and create a patch to emulating Validation Group behaviors exactly like the original ASP.NET Web Forms mechanism.\n\n``` javascript\nvar invalidValidationGroupAttribute = '[data-validation-group=\"{0}\"]:invalid';\nvar invalidElementSelector = 'input{0},select{0},textarea{0}';\n\nvar getInvalidElementSelector = function (groupName) {\n    var attribute = invalidValidationGroupAttribute.replace(/\\{0\\}/gi, groupName);\n    return invalidElementSelector.replace(/\\{0\\}/gi, attribute);\n};\n\nvar invalidUngroupedSelector = (\n    'input:not(input{0}){1},' +\n    'select:not(select{0}){1},' +\n    'textarea:not(textarea{0}){1}')\n    .replace(/\\{0\\}/gi, '[data-validation-group]')\n    .replace(/\\{1\\}/gi, ':invalid');\n\nvar emulateValidationGroup = function (eventArgs) {\n    var target = eventArgs.target; // additional variable to help more minification\n    var type = target.type; // additional variable to help more minification\n\n    if (type && type.toLowerCase() == 'submit') {\n        var validationGroup = $(target).data('validationGroup');\n\n        var invalidElements;\n        if (validationGroup) {\n            var invalidSelector = getInvalidElementSelector(validationGroup);\n            invalidElements = $(invalidSelector);\n        } else {\n            invalidElements = $(invalidUngroupedSelector);\n        }\n\n        if (invalidElements.length) {\n            invalidElements.trigger('updatevalidation');\n\n            eventArgs.preventDefault();\n            return false;\n        }\n    }\n};\n\n// window.onload event handler predefined by ASP.NET AJAX Client Library\n// it is equivalent to jQuery(window).load(function (eventArgs) { ... });\nfunction pageLoad() {\n    $('form').attr('novalidate', 'novalidate'); // it can be hard-coded inside <form> begining tag\n\n    $('body')\n        .off('click', emulateValidationGroup) // because of ASP.NET AJAXify asynchronous post back\n        .on('click', emulateValidationGroup);\n}\n```\n\nI tested it on some my last apps. All of them work good. So thanks a lot.\n\nIn case of your descriptions, I am not expert to concepts of web standards like you, but I think your opinions about busted standards, rationally, is true. Also I think ASP.NET Web Forms is a great framework for building wide range of data-centric web apps since 2001 to now. And I think Microsoft is a great innovator company.\n\nIn case of hitting Enter as clicking of form's default button, I know there is 2 ways for it, by markup declaration and by C#/VB codes. and Yes, it is pre implemented by JS as a part of ASP.NET 2.0 render engine and works good.\n\nAnyway...\nWhen IE 10 had been released, because of supporting HTML5 Form Validation, I researched to find a way to use this great capability instead of Validator Components of ASP.NET Web Forms and to date, this was a nightmare to me. So, I'm extremely grateful for your considerations, solutions, and inspiring of me, and at the end for your lovely webshim.\nGood Luck Alex.\n. Hello....\nIs there anyone to consider this Pull?\n. Thanks a lot.\n. Thanks a lot.\nI have used [webshim.polyfill('forms forms-ext');] and everything seem to be OK, except one thing.\ninput buttons (up/down arrows) have been placed outside of INPUT area when direction had been set as RTL.\nI have studied [http://afarkas.github.io/webshim/demos/demos/cfgs/input-number.html] and I have found [direction issue] also exist there.\nWhat do I do?\nShould I fix it by CSS hacks or there is another official fix for it?\n. Ok. Thanks.\n. I apology about &lt;progress /&gt;, this was my carelessness, I'm so sorry.\n\nIn case of &lt;meter /&gt;:\nSometimes developers need to show info as <i>bar charts</i> or <i>gauges</i>.\nYou know, most of infographic components are heavy and/or complex to use.\nI think &lt;meter /&gt; is a standard and lightweight solution to most of situations (not at all).\n\nI hope someday you change your idea about it.\nThanks to your attentions\n. Thanks a lot Alex.\nWe (I and other web developers) are counting on it\n. Hi Alex.\nMerry Christmas in advance.\nI wish a perfect life for you (as a web expert) in new year.\n\nI apologize, but...\nWhat's new about &lt;meter /&gt; shim/polyfill (after more than 4 months)?\n. HI Alex.\nDo you have any idea about <meter /> shim/polyfill (after more than 1 year)?\n. It doesn't matter now. :-/\n. Thanks to your consideration.\n\nAbout your solution:\nThis solution is good when we have used &lt;fieldset&gt; as a group wrapper.\nSometimes we need to arrange some input elements around the page as a semantic group.\nIn other hand maybe we have a page with 2 or more submit button; One for main submission logic, one for cancelling purpose, one for checking some situation on server, one for redirecting to another page and ....\nEvery button has own validation logic.\n\nI had written JavaScript for solving these situations but I think this approach is not good enough.\nWhen I start new Application, I should deliver all JS files from old apps to new one but webshim is an integrated solution.\n\nAbout ASP.NET:\nNowadays ASP.NET has 3 different development approaches:\n1. <b>ASP.NET Web Forms</b>, Component Oriented, State-full, Event Driven, ...\n2. <b>ASP.NET Web Pages</b>, Exactly Like [Classic ASP] or [PHP] but based on .NET Framework\n3. <b>ASP.NET MVC</b>, Like  [ASP.NET Web Pages] but constrained to follow MVC architectural pattern. \n\nAbout ASP.NET Web Forms:\nASP.NET Web Form is a great technology for Rapid Application Development (RAD).\nDevelopers just need to know a little about HTML,CSS,JS. Every things you need to build Data-Centric web apps is available and you just need to wire components to each other by Server-Codes to making great apps! Just like implementing an custom electronic circuit by wiring some ICs.\nIts architecture back to 2001 when this technology was presented. (IE 6 and HTML 4 era)\n\nI know this sounds ridiculous, Developing Web Apps without knowing HTML or without following W3C standards. But ASP.NET Web Forms follows standards itself in its engine, so developer just need to know Server components purpose and behaviors.\n\nTo implementing forms we use <b>&lt;asp:TextBox&gt;</b> and <b>&lt;asp:Button&gt;</b>. ASP.NET Web Form engine render those as <b>&lt;input type='text'&gt;</b> and <b>&lt;input type='submit'&gt;</b>. In ASP.NET Web Forms there is a mechanism to grouping inputs, buttons and validator components for doing custom validation.\n\nSample:\n<code>&lt;asp:TextBox ID='txt1' ValidationGroup='groupName'&gt;</code>\n<code>&lt;asp:TextBox ID='txt2' &gt;</code>\n<code>&lt;asp:Button ID='btn1' OnClick='btn1_Click' ValidationGroup='groupName'&gt;</code>\n<code>&lt;asp:Button ID='btn2' OnClick='btn2_Click' &gt;</code>\n<code>&lt;asp:RequierdFieldValidator ... TargetControlID='txt1'  ValidationGroup='groupName'&gt;\n</code>\n\nWhen end-user clicks on <b>btn1</b>, some injected JavaScript codes will run to check just <b>txt1</b> emptiness; if it is filled, form will be submit and on server there is a C#/VB method (btn1_Click) that process the form (developer codes that).\nWhen end-user clicks on <b>btn2</b>, form will be submit without doing validation and on server method (btn2_Click) will process the form.\n\nI remind again, this approach was presented on HTML 4 era!\nToday Microsoft did not change/update this mechanism because of compatibility concerns!\nThis mechanism injects huge JavaScript Codes to validate forms and as I said before is not bootstrap friendly.\n\nAfter all:\nI think, my request, can be a flexibility point for webshim if it supports custom validation situations without writing JavaScript.\nIf you do not agree to me, I respect.\nI apologize for verbosity over this post.\nGood luck!\n. Thanks a lot Alex.\nYour code inspired me.\nI have used your sample codes and create a patch to emulating Validation Group behaviors exactly like the original ASP.NET Web Forms mechanism.\n\n``` javascript\nvar invalidValidationGroupAttribute = '[data-validation-group=\"{0}\"]:invalid';\nvar invalidElementSelector = 'input{0},select{0},textarea{0}';\n\nvar getInvalidElementSelector = function (groupName) {\n    var attribute = invalidValidationGroupAttribute.replace(/\\{0\\}/gi, groupName);\n    return invalidElementSelector.replace(/\\{0\\}/gi, attribute);\n};\n\nvar invalidUngroupedSelector = (\n    'input:not(input{0}){1},' +\n    'select:not(select{0}){1},' +\n    'textarea:not(textarea{0}){1}')\n    .replace(/\\{0\\}/gi, '[data-validation-group]')\n    .replace(/\\{1\\}/gi, ':invalid');\n\nvar emulateValidationGroup = function (eventArgs) {\n    var target = eventArgs.target; // additional variable to help more minification\n    var type = target.type; // additional variable to help more minification\n\n    if (type && type.toLowerCase() == 'submit') {\n        var validationGroup = $(target).data('validationGroup');\n\n        var invalidElements;\n        if (validationGroup) {\n            var invalidSelector = getInvalidElementSelector(validationGroup);\n            invalidElements = $(invalidSelector);\n        } else {\n            invalidElements = $(invalidUngroupedSelector);\n        }\n\n        if (invalidElements.length) {\n            invalidElements.trigger('updatevalidation');\n\n            eventArgs.preventDefault();\n            return false;\n        }\n    }\n};\n\n// window.onload event handler predefined by ASP.NET AJAX Client Library\n// it is equivalent to jQuery(window).load(function (eventArgs) { ... });\nfunction pageLoad() {\n    $('form').attr('novalidate', 'novalidate'); // it can be hard-coded inside <form> begining tag\n\n    $('body')\n        .off('click', emulateValidationGroup) // because of ASP.NET AJAXify asynchronous post back\n        .on('click', emulateValidationGroup);\n}\n```\n\nI tested it on some my last apps. All of them work good. So thanks a lot.\n\nIn case of your descriptions, I am not expert to concepts of web standards like you, but I think your opinions about busted standards, rationally, is true. Also I think ASP.NET Web Forms is a great framework for building wide range of data-centric web apps since 2001 to now. And I think Microsoft is a great innovator company.\n\nIn case of hitting Enter as clicking of form's default button, I know there is 2 ways for it, by markup declaration and by C#/VB codes. and Yes, it is pre implemented by JS as a part of ASP.NET 2.0 render engine and works good.\n\nAnyway...\nWhen IE 10 had been released, because of supporting HTML5 Form Validation, I researched to find a way to use this great capability instead of Validator Components of ASP.NET Web Forms and to date, this was a nightmare to me. So, I'm extremely grateful for your considerations, solutions, and inspiring of me, and at the end for your lovely webshim.\nGood Luck Alex.\n. Hello....\nIs there anyone to consider this Pull?\n. ",
    "0gust1": "Big \"thank you\" for your work. \nAt this moment, I was forking webshims to make the PR :)\n\nIf I find some time, where can I help on the project ?\n. This modification seems to break IE8 when used.\n\nBelow the config I used (wrappers set to \"span\"), with the latest webshim version.\n\nI hope to find the reason and propose a patch or a PR.\n\n```\n{\n  replaceValidationUI: true,\n  lazyCustomMessages: false,\n  addValidators: true,\n  iVal: {\n    //a simple selector of your form element[s]\n    \"sel\": \".ws-validate\",\n    //wether webshim should show a bubble on invalid event: \"hide\" | true | false\n    \"handleBubble\": \"hide\",\n\n    //selector or function to find the wrapper of the form field[s] (if there are more than one form field in the wrapper they will be handled as a group with one combined errormessage)\n    \"fieldWrapper\": \".lmInput\",\n\n    //wether an invalid input should be re-checked while user types\n    \"recheckDelay\": 400,\n    //in case a developer has set novalidate attribute to a form element and wants the form validated on submit, this should be set to true\n    \"submitCheck\": false,\n    //Events to check for validity/update validation UI\n    \"events\": \"focusout change\", //Note: The 'invalid' and 'updatevalidation' events will be always used\n\n    //the class of the errorbox, which is normally appended to the fieldWrapper\n    \"errorBoxClass\": \"ws-errorbox\",\n    \"errorBoxWrapper\": \"span\",\n    \"errorMessageWrapper\": \"span\",\n    //classes to adjust to your CSS/CSS-framework\n    \"errorMessageClass\": \"ws-errormessage\",\n    \"errorWrapperClass\": \"ws-invalid\",\n    \"successWrapperClass\": \"ws-success\",\n    //show/hide effect: 'no' | 'slide' | 'fade'\n    \"fx\": \"no\"\n  }\n```\n. Current config : jQuery 1.8.3 and webshim 1.15.5\n\nFound it ! \n\nIt seems to be a edge case, related to jQuery and IE8.\n\nIn `webshim.errorBox.create()`, when trying to generate an errorbox using \"span\" : \n\n```\nerrorBox = $('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\">');\n```\n\nsets errorBox to \"undefined\" in IE8.\n\nUsing the following syntax works (we have to explicitly close the tag).\n\n```\nerrorBox = $('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\"></'+errorBoxWrapper+'>');\n```\n\nIt only happens with \"span\", not other tags... Don't ask me why ^^\n\nI will test the other syntaxes of explicit element creation in jQuery and make a PR.\n. Big \"thank you\" for your work. \nAt this moment, I was forking webshims to make the PR :)\n\nIf I find some time, where can I help on the project ?\n. This modification seems to break IE8 when used.\n\nBelow the config I used (wrappers set to \"span\"), with the latest webshim version.\n\nI hope to find the reason and propose a patch or a PR.\n\n```\n{\n  replaceValidationUI: true,\n  lazyCustomMessages: false,\n  addValidators: true,\n  iVal: {\n    //a simple selector of your form element[s]\n    \"sel\": \".ws-validate\",\n    //wether webshim should show a bubble on invalid event: \"hide\" | true | false\n    \"handleBubble\": \"hide\",\n\n    //selector or function to find the wrapper of the form field[s] (if there are more than one form field in the wrapper they will be handled as a group with one combined errormessage)\n    \"fieldWrapper\": \".lmInput\",\n\n    //wether an invalid input should be re-checked while user types\n    \"recheckDelay\": 400,\n    //in case a developer has set novalidate attribute to a form element and wants the form validated on submit, this should be set to true\n    \"submitCheck\": false,\n    //Events to check for validity/update validation UI\n    \"events\": \"focusout change\", //Note: The 'invalid' and 'updatevalidation' events will be always used\n\n    //the class of the errorbox, which is normally appended to the fieldWrapper\n    \"errorBoxClass\": \"ws-errorbox\",\n    \"errorBoxWrapper\": \"span\",\n    \"errorMessageWrapper\": \"span\",\n    //classes to adjust to your CSS/CSS-framework\n    \"errorMessageClass\": \"ws-errormessage\",\n    \"errorWrapperClass\": \"ws-invalid\",\n    \"successWrapperClass\": \"ws-success\",\n    //show/hide effect: 'no' | 'slide' | 'fade'\n    \"fx\": \"no\"\n  }\n```\n. Current config : jQuery 1.8.3 and webshim 1.15.5\n\nFound it ! \n\nIt seems to be a edge case, related to jQuery and IE8.\n\nIn `webshim.errorBox.create()`, when trying to generate an errorbox using \"span\" : \n\n```\nerrorBox = $('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\">');\n```\n\nsets errorBox to \"undefined\" in IE8.\n\nUsing the following syntax works (we have to explicitly close the tag).\n\n```\nerrorBox = $('<'+errorBoxWrapper+' class=\"'+ errorBoxClass +'\" hidden=\"hidden\" style=\"display: none;\"></'+errorBoxWrapper+'>');\n```\n\nIt only happens with \"span\", not other tags... Don't ask me why ^^\n\nI will test the other syntaxes of explicit element creation in jQuery and make a PR.\n. ",
    "tdd": "BTW I use 1.14.4-RC3\u2026\n. Dammit, I get the exact same behavior on Safari 7! Basically this \"only\" works on Chrome and Firefox :cry: \n. Hey Alexander,\n\nI'll try it out with the dev version of 1.14.5 final in debug mode, very soon, and let you know how it goes.\n\nThanks!\n. Hey Alex,\n\nSo I tried again \"from scratch\", replacing the polyfiller.js and shims/ dir by those in 1.14.5's zip, and it seems to work across the board now.\n\nTracing network loads for my needs across the various browsers I target (IE9+, recent Safari/Chrome/FF), I noticed that despite loading the proper combo files (depending on the browser, loads 1 or 2 of combos 3, 5, 10, 15 and 17), it also loads individually many files that **are** in the loaded combos (such as form-core, form-shim-extend, etc.). No biggie, just wondered why that was?\n\nBest,\n. Hey Alex,\n\nI probably won't have the time to investigate further in the coming \ndays, but I'm slating that ASAP.  Are you telling me only combos should \nbe loaded?  That'd be great.\n\nPerhaps it's due to how I load webshims\u2026  polyfiller is included as a \nwrapped CommonJS module in a global JS bundle (I use Brunch for \nassembly), and I require it explicitly after having made jQuery an \navailable global.  Then I configure the webshims global through a \nsequence of setOptions(\u2026), activeLang(\u2026) and polyfill(\u2026).\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Hey Alexander,\n\nHow's your summer been?  Good, I trust.\n\nI've finally got around to trimming my app for a minimal reproducible \nuse-case, and redid all the tests.  There definitely is some case of \nform-core + combos, on Chrome.\n\nMy app is built with Brunch, using CommonJS wrapping.  As this may have \nsomething to do with it (although I fail to see why it would), I kept it \nthat way, but provided two dirs in the enclosed Zip:\n- `brunch` is the \"app source\", in case you want to quickly check out \n  individual modules, tweak them and rebuild, or whatever.  Just `npm \n  install` in it to get it up and running, then `npm run build` when you \n  need to.\n- `public` is the built app.  I put an `index.html` in there that loads \n  as my app does, and also contains the results from my tests this morning \n  on all the platforms I need, for you to see.  You just need to serve \n  that directory as HTTP, be it through Rack, Pow, SimpleHTTPServer or \n  what have you :-)\n\nI hope this helps,\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Ah, I'm afraid Markdown wasn't properly detected, and my attachment discarded. [Find it here](http://tddsworld.com/webshim-tests.zip)\n. Hi Alexander,\n\nI fumbled my explanation: \"not always loaded\" meant \"not loaded across \nall platform tests,\" just to focus what combo/noncombos were case-specific.\n\nIndeed these lists are always reproducible on their respective platforms.\n\nHowever, you had mentioned earlier in the issue thread that you didn't \nexpect form-core to be loaded individually with the combo files we see \nalongside it.  Which is why I went to this length of trials :-)\n\nAs for the notice: yes, it's something I had to patch in my own app: \nyour script incorrectly detects that basePath is not configured at one \npoint, and reports on it even when I provide the info.  If you look at \nthe source line for it, you'll see the condition doesn't cover all \nconfig possibilities for it.\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Hey Alex,\n\nWell, all is well then :-)  You can close this, perhaps\u2026\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. BTW I use 1.14.4-RC3\u2026\n. Dammit, I get the exact same behavior on Safari 7! Basically this \"only\" works on Chrome and Firefox :cry: \n. Hey Alexander,\n\nI'll try it out with the dev version of 1.14.5 final in debug mode, very soon, and let you know how it goes.\n\nThanks!\n. Hey Alex,\n\nSo I tried again \"from scratch\", replacing the polyfiller.js and shims/ dir by those in 1.14.5's zip, and it seems to work across the board now.\n\nTracing network loads for my needs across the various browsers I target (IE9+, recent Safari/Chrome/FF), I noticed that despite loading the proper combo files (depending on the browser, loads 1 or 2 of combos 3, 5, 10, 15 and 17), it also loads individually many files that **are** in the loaded combos (such as form-core, form-shim-extend, etc.). No biggie, just wondered why that was?\n\nBest,\n. Hey Alex,\n\nI probably won't have the time to investigate further in the coming \ndays, but I'm slating that ASAP.  Are you telling me only combos should \nbe loaded?  That'd be great.\n\nPerhaps it's due to how I load webshims\u2026  polyfiller is included as a \nwrapped CommonJS module in a global JS bundle (I use Brunch for \nassembly), and I require it explicitly after having made jQuery an \navailable global.  Then I configure the webshims global through a \nsequence of setOptions(\u2026), activeLang(\u2026) and polyfill(\u2026).\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Hey Alexander,\n\nHow's your summer been?  Good, I trust.\n\nI've finally got around to trimming my app for a minimal reproducible \nuse-case, and redid all the tests.  There definitely is some case of \nform-core + combos, on Chrome.\n\nMy app is built with Brunch, using CommonJS wrapping.  As this may have \nsomething to do with it (although I fail to see why it would), I kept it \nthat way, but provided two dirs in the enclosed Zip:\n- `brunch` is the \"app source\", in case you want to quickly check out \n  individual modules, tweak them and rebuild, or whatever.  Just `npm \n  install` in it to get it up and running, then `npm run build` when you \n  need to.\n- `public` is the built app.  I put an `index.html` in there that loads \n  as my app does, and also contains the results from my tests this morning \n  on all the platforms I need, for you to see.  You just need to serve \n  that directory as HTTP, be it through Rack, Pow, SimpleHTTPServer or \n  what have you :-)\n\nI hope this helps,\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Ah, I'm afraid Markdown wasn't properly detected, and my attachment discarded. [Find it here](http://tddsworld.com/webshim-tests.zip)\n. Hi Alexander,\n\nI fumbled my explanation: \"not always loaded\" meant \"not loaded across \nall platform tests,\" just to focus what combo/noncombos were case-specific.\n\nIndeed these lists are always reproducible on their respective platforms.\n\nHowever, you had mentioned earlier in the issue thread that you didn't \nexpect form-core to be loaded individually with the combo files we see \nalongside it.  Which is why I went to this length of trials :-)\n\nAs for the notice: yes, it's something I had to patch in my own app: \nyour script incorrectly detects that basePath is not configured at one \npoint, and reports on it even when I provide the info.  If you look at \nthe source line for it, you'll see the condition doesn't cover all \nconfig possibilities for it.\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. Hey Alex,\n\nWell, all is well then :-)  You can close this, perhaps\u2026\n\nBest,\n\n## \n\nChristophe Porteneuve\ntdd@tddsworld.com\n. ",
    "aggieben": "I seem to be having a similar issue in IE11.  I'm initializing like this:\n\n```\n<script src=\"/Scripts/jquery-2.1.4.js\"></script>\n<script src=\"/Scripts/modernizr-2.8.3.js\"></script>\n<script src=\"/Scripts/polyfiller.js\"></script>\n\n<script type=\"text/javascript\">\n    webshims.setOptions({\n        \"debug\": true,\n        \"forms-ext\": { replaceUI: true },\n    })\n    webshims.polyfill(\"forms forms-ext\")\n</script>\n```\n\nI can't really tell that much of anything is happening, except that in the F12 tools I can see the shim scripts being loaded:\n\n![image](https://cloud.githubusercontent.com/assets/1321/7760164/4524e820-ffde-11e4-826a-5d54912b0a70.png)\n\nThough I set `debug: true` in the options, nothing gets written to the console.  Have I missed something obvious?\n\nAfter reading this issue, I did check to see that my X-UA-Compatibility meta tag was setting the IE rendering engine to edge, so that shouldn't be the problem.\n\nAnyway, I'm building my form interactively, so I start with an empty `<table>` and then as the user clicks a button, rows with form elements (`<input type=\"date\"...`) get added, but there is no shimmed UI in place on those.\n. I seem to be having a similar issue in IE11.  I'm initializing like this:\n\n```\n<script src=\"/Scripts/jquery-2.1.4.js\"></script>\n<script src=\"/Scripts/modernizr-2.8.3.js\"></script>\n<script src=\"/Scripts/polyfiller.js\"></script>\n\n<script type=\"text/javascript\">\n    webshims.setOptions({\n        \"debug\": true,\n        \"forms-ext\": { replaceUI: true },\n    })\n    webshims.polyfill(\"forms forms-ext\")\n</script>\n```\n\nI can't really tell that much of anything is happening, except that in the F12 tools I can see the shim scripts being loaded:\n\n![image](https://cloud.githubusercontent.com/assets/1321/7760164/4524e820-ffde-11e4-826a-5d54912b0a70.png)\n\nThough I set `debug: true` in the options, nothing gets written to the console.  Have I missed something obvious?\n\nAfter reading this issue, I did check to see that my X-UA-Compatibility meta tag was setting the IE rendering engine to edge, so that shouldn't be the problem.\n\nAnyway, I'm building my form interactively, so I start with an empty `<table>` and then as the user clicks a button, rows with form elements (`<input type=\"date\"...`) get added, but there is no shimmed UI in place on those.\n. ",
    "gabrielpoca": "@aFarkas it occurs only when you load something after webshim, like this: http://jsfiddle.net/4zaCU/2/\n\nIf you inspect your console logs it's there.\n. @aFarkas it does work. Thank you for your time!\n. @aFarkas it occurs only when you load something after webshim, like this: http://jsfiddle.net/4zaCU/2/\n\nIf you inspect your console logs it's there.\n. @aFarkas it does work. Thank you for your time!\n. ",
    "rogercampos": "The problem is that there are multiple ways to distribute `webshim` from their source, for example:\n\nhttps://github.com/whatcould/webshims-rails\n\nThis integrates with the rails assets pipeline and vendors the webshim source.\n. Also I don't think there should be any `console.log` in production code except for debugging purposes based on a configuration flag.\n. sure, thanks.\n. The problem is that there are multiple ways to distribute `webshim` from their source, for example:\n\nhttps://github.com/whatcould/webshims-rails\n\nThis integrates with the rails assets pipeline and vendors the webshim source.\n. Also I don't think there should be any `console.log` in production code except for debugging purposes based on a configuration flag.\n. sure, thanks.\n. ",
    "ioquatix": "Thanks for the very helpful and quick response.\n\nI found 1 didn't seem to work on Chromium for some reason. In the end I used the pattern and wrote custom logic for the validation.\n. Seems like I had a version before this fix: https://github.com/aFarkas/webshim/issues/396\n\nHas that fix been released officially yet?\n. This is all really helpful, thanks.\n\nBasically, you are saying that the basic fix is to use `extendNative`. All the rest of your points really make sense, and you are correct, using the custom validators that come with webshim make more sense, which is actually what we've done.\n\nThanks so much.\n. I'm having the same issue.\n\nThe problem appears to be to do with the usermedia module, or at least that's where it fails first.\n\n`module.test` resolves to a function `URL` which, when evaluating `module.test(list)` causes the URL function to fail with invalid argument.\n\nWhy is `module.test` refer to `URL`? That is the first question I'd be asking.\n. Thanks for the very helpful and quick response.\n\nI found 1 didn't seem to work on Chromium for some reason. In the end I used the pattern and wrote custom logic for the validation.\n. Seems like I had a version before this fix: https://github.com/aFarkas/webshim/issues/396\n\nHas that fix been released officially yet?\n. This is all really helpful, thanks.\n\nBasically, you are saying that the basic fix is to use `extendNative`. All the rest of your points really make sense, and you are correct, using the custom validators that come with webshim make more sense, which is actually what we've done.\n\nThanks so much.\n. I'm having the same issue.\n\nThe problem appears to be to do with the usermedia module, or at least that's where it fails first.\n\n`module.test` resolves to a function `URL` which, when evaluating `module.test(list)` causes the URL function to fail with invalid argument.\n\nWhy is `module.test` refer to `URL`? That is the first question I'd be asking.\n. ",
    "jbottigliero": "Opened PR #434 with safer check.\n. No problem at all! Thanks for the quick update and the work you've done on this library, glad I could help in _some_ way!\n. Opened PR #434 with safer check.\n. No problem at all! Thanks for the quick update and the work you've done on this library, glad I could help in _some_ way!\n. ",
    "FabSol": "Tank you!\n\nI'm coding a personalized UI control using  ws-custom-file: I've missed to notice ws-file-value class. Sorry.\n\nYour great job saved me a lot of coding time to bypass different rendering engines respecting the same UI look and feel.\n\nIf I may help, let me know.\n\nThank you very much.\nFabrizio\n. Tank you!\n\nI'm coding a personalized UI control using  ws-custom-file: I've missed to notice ws-file-value class. Sorry.\n\nYour great job saved me a lot of coding time to bypass different rendering engines respecting the same UI look and feel.\n\nIf I may help, let me know.\n\nThank you very much.\nFabrizio\n. ",
    "blimmer": "Yep, See #439 \n. No problem. \n. Yep, See #439 \n. No problem. \n. ",
    "danyaPostfactum": "Setting `appendTo` helped me. I spent about a hour to find out, and I don't see this option on the home page.\n\n``` javascript\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        popover: {appendTo: document.body}\n    }\n});\n```\n\nI think this option should be set by default.\nAlso, popover should have a maximum z-index value.\n. Thank you @aFarkas , your fix works in my case.\n. Thanks, but are you sure this change looks good for other languages? And is any usage of `dayNamesShort` in the webshim?\n. I can't compile.\nIt get stuck:\n\n> C:\\Users\\Danil\\Git\\webshim>grunt\n> Running \"webshimscombos\" task\n\nNothink happens, no errors, no cpu load.\n. Thank you. Why did you set `ascii_only : true` option for uglify? This makes lang files larger because of unicode escaping.\n. Setting `appendTo` helped me. I spent about a hour to find out, and I don't see this option on the home page.\n\n``` javascript\nwebshim.setOptions(\"forms-ext\", {\n    \"widgets\": {\n        popover: {appendTo: document.body}\n    }\n});\n```\n\nI think this option should be set by default.\nAlso, popover should have a maximum z-index value.\n. Thank you @aFarkas , your fix works in my case.\n. Thanks, but are you sure this change looks good for other languages? And is any usage of `dayNamesShort` in the webshim?\n. I can't compile.\nIt get stuck:\n\n> C:\\Users\\Danil\\Git\\webshim>grunt\n> Running \"webshimscombos\" task\n\nNothink happens, no errors, no cpu load.\n. Thank you. Why did you set `ascii_only : true` option for uglify? This makes lang files larger because of unicode escaping.\n. ",
    "gouch": "@AMA3 You might not be aware, but SVG has been widely supported natively for a long time: http://caniuse.com/#feat=svg\n. @AMA3 You might not be aware, but SVG has been widely supported natively for a long time: http://caniuse.com/#feat=svg\n. ",
    "SamMousa": "Np. Simple workaround: $('#test').val('0000-00-00').val(realvalue) will\nwork.\nOn Oct 7, 2014 7:26 PM, \"Alexander Farkas\" notifications@github.com wrote:\n\n> or, tomorrow. Was a heavy day. Sorry\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/446#issuecomment-58223528.\n. Closing this since a fix was merged.\n. Np. Simple workaround: $('#test').val('0000-00-00').val(realvalue) will\nwork.\nOn Oct 7, 2014 7:26 PM, \"Alexander Farkas\" notifications@github.com wrote:\n\n> or, tomorrow. Was a heavy day. Sorry\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/446#issuecomment-58223528.\n. Closing this since a fix was merged.\n. ",
    "mekras": ":+1: \n. I've created PR #539 \n. I've created PR to fix this: #539 \n. @Itrulia, Composer \u2014 is a **dependency manager** and not a \"script loader\". There is no problems with SRP. And so I don't see any reason to use multiple dependency managers in one project, just because of the fact that the project uses several programming languages. In our current project we use bundle which require jQuery and a Webshim which require jQuery. Why should I use a different dependency managers only to then manage jQuery corss-dependencies manually?\n. > Dependency Manager **for PHP**\n\nI use Composer on **PHP project**.\n\n> Because Composer was not made for loading assets\n\nI don't use Composer for loading assets. I use in to manage project dependencies. For loading assets I use Symfony asset functionality.\n\n> You have way less control with Composer over assets than for example Bower.\n\nWho is worse, who is better \u2014 it's just another holywar theme.\n\n> You don't use PHP to compile SASS too.\n\nActually am [using](https://github.com/leafo/scssphp).\n\n> I see problems with it because the web is drifting away from server rendered apps for a good reason and if Composer now decides they also want to be an asset loader they would bloat composer.\n\nYou theorize about some abstract applications in the future, but we ordinary developers, dealing with existing business applications today. And we need a simple reliable tools to work with the existing architecture and not with something that someone out there drifting to. KISS.\n. @alejandroiglesias, I'm already answered [here](https://github.com/aFarkas/webshim/pull/539#issuecomment-126589236). The use of two managers of the dependencies in a single project leads to the need for manual dependency management, if at least one of the components is in the \"require\" lists of both managers. jQuery for example: https://packagist.org/packages/components/jquery/dependents\n. :+1: \n. I've created PR #539 \n. I've created PR to fix this: #539 \n. @Itrulia, Composer \u2014 is a **dependency manager** and not a \"script loader\". There is no problems with SRP. And so I don't see any reason to use multiple dependency managers in one project, just because of the fact that the project uses several programming languages. In our current project we use bundle which require jQuery and a Webshim which require jQuery. Why should I use a different dependency managers only to then manage jQuery corss-dependencies manually?\n. > Dependency Manager **for PHP**\n\nI use Composer on **PHP project**.\n\n> Because Composer was not made for loading assets\n\nI don't use Composer for loading assets. I use in to manage project dependencies. For loading assets I use Symfony asset functionality.\n\n> You have way less control with Composer over assets than for example Bower.\n\nWho is worse, who is better \u2014 it's just another holywar theme.\n\n> You don't use PHP to compile SASS too.\n\nActually am [using](https://github.com/leafo/scssphp).\n\n> I see problems with it because the web is drifting away from server rendered apps for a good reason and if Composer now decides they also want to be an asset loader they would bloat composer.\n\nYou theorize about some abstract applications in the future, but we ordinary developers, dealing with existing business applications today. And we need a simple reliable tools to work with the existing architecture and not with something that someone out there drifting to. KISS.\n. @alejandroiglesias, I'm already answered [here](https://github.com/aFarkas/webshim/pull/539#issuecomment-126589236). The use of two managers of the dependencies in a single project leads to the need for manual dependency management, if at least one of the components is in the \"require\" lists of both managers. jQuery for example: https://packagist.org/packages/components/jquery/dependents\n. ",
    "djlerman": "I tried this for:\n\n```\nwebshim.polyfill('forms forms-ext');\n```\n\nTested with type=\"time\" on Firefox, IE and CHROME.  The form element for type=\"time\" was not needed in CHROME but webshim still loaded it and overrode the native implementation of type=\"time\".\n. Thank You.\n\nYes.  That was it. \n\nI ended up loading it via Modernizr.load.  JIK anybody needs an example here it is:\n\n```\n<script type='text/javascript'>\n  Modernizr.load({\n    test: Modernizr.inputtypes.time,\n    yep : '',\n    nope: ['//afarkas.github.io/webshim/js-webshim/minified/polyfiller.js'],\n    complete: function () {\n      webshim.setOptions('forms-ext', {\n          replaceUI: 'auto',\n          \"time\": {\n            // Options...\n          }\n      });\n\n      webshim.polyfill('forms forms-ext');  \n    }\n  });\n\n</script>\n```\n. OK, I was able to get rid of the period with:\n\n```\n      webshims.formcfg.en = {\n          \"timeSigns\": \":\"\n      };\n```\n\nNow how do I limit input to NN:NN AM|PM?\n\nA link or suggestion would be greatly appreciated.\n\nThank You...\n. Thank You...\n\nIs there a way to limit input as it is being typed?  Like with a regex?\n\nSo that A or M can never show up in the location of a number, force input as user is typing to to NN:NN AM|PM\n\nOR\n\nOn blur, delete the input and have a error popup.\n. I tried this for:\n\n```\nwebshim.polyfill('forms forms-ext');\n```\n\nTested with type=\"time\" on Firefox, IE and CHROME.  The form element for type=\"time\" was not needed in CHROME but webshim still loaded it and overrode the native implementation of type=\"time\".\n. Thank You.\n\nYes.  That was it. \n\nI ended up loading it via Modernizr.load.  JIK anybody needs an example here it is:\n\n```\n<script type='text/javascript'>\n  Modernizr.load({\n    test: Modernizr.inputtypes.time,\n    yep : '',\n    nope: ['//afarkas.github.io/webshim/js-webshim/minified/polyfiller.js'],\n    complete: function () {\n      webshim.setOptions('forms-ext', {\n          replaceUI: 'auto',\n          \"time\": {\n            // Options...\n          }\n      });\n\n      webshim.polyfill('forms forms-ext');  \n    }\n  });\n\n</script>\n```\n. OK, I was able to get rid of the period with:\n\n```\n      webshims.formcfg.en = {\n          \"timeSigns\": \":\"\n      };\n```\n\nNow how do I limit input to NN:NN AM|PM?\n\nA link or suggestion would be greatly appreciated.\n\nThank You...\n. Thank You...\n\nIs there a way to limit input as it is being typed?  Like with a regex?\n\nSo that A or M can never show up in the location of a number, force input as user is typing to to NN:NN AM|PM\n\nOR\n\nOn blur, delete the input and have a error popup.\n. ",
    "mrpavlikov": "@aFarkas no worries, mate. Thanks for response!\n. @aFarkas no worries, mate. Thanks for response!\n. ",
    "olivier2707": "Hey! I already test \"calculateWidth\": false ;-)  but like you said i must search outside webshims context, i mean in my css probably because if i do this: \n\n#headline #usrnewads input, textarea {width: 90%; ... instead of width: 100%; i don't have the troubles and it show perfectly on my old samsung galaxy...  It's like input css settings have something wrong.\n\nReduce width is probably not the \"cleaner solution\" but in waiting of other css investigations..\n\nYep! I saw this magnifique example /demos/webforms/ just perfect :-)\n\nIn my pages, I put only these lines just before the /head:\ncode.jquery.com/jquery-1.11.0.min.js script\ncdn.jsdelivr.net/webshim/1.14.5/polyfiller.js script\nand call webshims.polyfill('forms forms-ext');\n\nThe result is perfect; on Google Chrome i keep the original date and time widget; FireFox is able now to show the date and time picker as well; my old Samsung Galaxy have now the same behavior than FireFox.\n\nI also try to keep my documents in full html5 like this:\n(i mean no other w3 declarations)\n!doctype html\nhtml lang=\"fr\"\nhead\nmeta charset=\"utf-8\"\n...\n\nI noticed that  /demos/webforms/ document have this setting:\n!DOCTYPE html\nhtml xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"\nhead\nmeta charset=\"utf-8\"/\n...\n\nDo you think i'm on the right way ? Or miss i something ?\n\nCheers from belgium! and thx for your work and your time.\n. It's done !\n. Great! :P\n\n> On 06 Nov 2014, at 11:00, Alexander Farkas notifications@github.com wrote:\n> \n> Thx, I can look into this on saturday.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/aFarkas/webshim/issues/456#issuecomment-61954265.\n. Hey! I already test \"calculateWidth\": false ;-)  but like you said i must search outside webshims context, i mean in my css probably because if i do this: \n\n#headline #usrnewads input, textarea {width: 90%; ... instead of width: 100%; i don't have the troubles and it show perfectly on my old samsung galaxy...  It's like input css settings have something wrong.\n\nReduce width is probably not the \"cleaner solution\" but in waiting of other css investigations..\n\nYep! I saw this magnifique example /demos/webforms/ just perfect :-)\n\nIn my pages, I put only these lines just before the /head:\ncode.jquery.com/jquery-1.11.0.min.js script\ncdn.jsdelivr.net/webshim/1.14.5/polyfiller.js script\nand call webshims.polyfill('forms forms-ext');\n\nThe result is perfect; on Google Chrome i keep the original date and time widget; FireFox is able now to show the date and time picker as well; my old Samsung Galaxy have now the same behavior than FireFox.\n\nI also try to keep my documents in full html5 like this:\n(i mean no other w3 declarations)\n!doctype html\nhtml lang=\"fr\"\nhead\nmeta charset=\"utf-8\"\n...\n\nI noticed that  /demos/webforms/ document have this setting:\n!DOCTYPE html\nhtml xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"\nhead\nmeta charset=\"utf-8\"/\n...\n\nDo you think i'm on the right way ? Or miss i something ?\n\nCheers from belgium! and thx for your work and your time.\n. It's done !\n. Great! :P\n\n> On 06 Nov 2014, at 11:00, Alexander Farkas notifications@github.com wrote:\n> \n> Thx, I can look into this on saturday.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub https://github.com/aFarkas/webshim/issues/456#issuecomment-61954265.\n. ",
    "bbenezech": "Really sorry about that. I overlooked the mixed object possibility for replaceUI, I thought it was on/off.\nI assumed too much about types.\n\nThank you for the head's up.\n. Really sorry about that. I overlooked the mixed object possibility for replaceUI, I thought it was on/off.\nI assumed too much about types.\n\nThank you for the head's up.\n. ",
    "johnpm45": "Thanks for your response @aFarkas.\n. Thanks for your response @aFarkas.\n. ",
    "simonox": "If created a fiddle: http://jsfiddle.net/b3sgug6g/2/ \nTry to select a a month with an abbrvd. month name in Firefox.\n. Did it in the master branch, again :-)\n. If created a fiddle: http://jsfiddle.net/b3sgug6g/2/ \nTry to select a a month with an abbrvd. month name in Firefox.\n. Did it in the master branch, again :-)\n. ",
    "cybermill": "Any thoughts on this?\n. Cool, Thanks.\n. Any thoughts on this?\n. Cool, Thanks.\n. ",
    "ktb83": "I believe name needs to be the second argument to getId. jQuery .map() passes the index as the first argument, so something like this ends up happening:\nreturn document.getElementById(0) || document.getElementsByName(0)[0];\nreturn document.getElementById(1) || document.getElementsByName(1)[0];\nreturn document.getElementById(2) || document.getElementsByName(2)[0];\n. I believe name needs to be the second argument to getId. jQuery .map() passes the index as the first argument, so something like this ends up happening:\nreturn document.getElementById(0) || document.getElementsByName(0)[0];\nreturn document.getElementById(1) || document.getElementsByName(1)[0];\nreturn document.getElementById(2) || document.getElementsByName(2)[0];\n. ",
    "thejuan": "Understand.\nFYI, my understanding of the html5 spec is as implemented by Jquery\nhttp://www.w3.org/TR/html5/forms.html\n4.10.5.1.1\nHidden fields are exempt from constraint validation.\n. How do you check a form is valid in JS?\nI'll definitely look at swapping to it.\n. Understand.\nFYI, my understanding of the html5 spec is as implemented by Jquery\nhttp://www.w3.org/TR/html5/forms.html\n4.10.5.1.1\nHidden fields are exempt from constraint validation.\n. How do you check a form is valid in JS?\nI'll definitely look at swapping to it.\n. ",
    "Campano": "Would it be possible to know what was causing the problem? I'm on webshim 1.16 & jQuery v1.12.4 and having the same problem.. Would it be possible to know what was causing the problem? I'm on webshim 1.16 & jQuery v1.12.4 and having the same problem.. ",
    "andrewmcarthur": "Awesome, that fixes the issue :). Thanks for the quick reply!\n. sorry, completely forgot to say thanks! this was very helpful :)\n. Awesome, that fixes the issue :). Thanks for the quick reply!\n. sorry, completely forgot to say thanks! this was very helpful :)\n. ",
    "LRFalk01": "That indeed did the trick. You saved my life.\n\nThanks!\n. That indeed did the trick. You saved my life.\n\nThanks!\n. ",
    "ryanpcmcquen": "Any chance you would add support for _select2_ `3.5.4`?\n. Any chance you would add support for _select2_ `3.5.4`?\n. ",
    "howar31": "This error shows up again for 4.0.3\n. This error shows up again for 4.0.3\n. ",
    "zessx": "Ok, I misunderstood this option. Thanks for your quick feedback!\n. Ok, I misunderstood this option. Thanks for your quick feedback!\n. ",
    "Itrulia": "Composer is for .php files, not for assets.\n. Yeah newest version fixed it. A coworker downloaded it 2 weeks before (dunno which version) and saw the behaviour today. He forgot to rerun the Javascript build when he tried it with the newest version.\n\nThanks.\n\n'trulia\n. This makes no sense to me, why should a PHP script loader install asset scripts? This is against the SRP\n. > is a dependency manager and not a \"script loader\"\n\nDependcy manager is if breaked down a script loader. I just used a not so nice sounding description :D\n\nto quote composer itself\n\n> Dependency Manager **for PHP**\n\nBecause Composer was not made for loading assets. You have way less control with Composer over assets than for example Bower.\n\n> There is no problems with SRP\n\nI see problems with it because the web is drifting away from server rendered apps for a good reason and if Composer now decides they also want to be an asset loader they would bloat composer.\n\nYou don't use PHP to compile SASS too.\n. > The use of two managers of the dependencies in a single project leads to the need for manual dependency management\n\nbullshit.\n. Composer is for .php files, not for assets.\n. Yeah newest version fixed it. A coworker downloaded it 2 weeks before (dunno which version) and saw the behaviour today. He forgot to rerun the Javascript build when he tried it with the newest version.\n\nThanks.\n\n'trulia\n. This makes no sense to me, why should a PHP script loader install asset scripts? This is against the SRP\n. > is a dependency manager and not a \"script loader\"\n\nDependcy manager is if breaked down a script loader. I just used a not so nice sounding description :D\n\nto quote composer itself\n\n> Dependency Manager **for PHP**\n\nBecause Composer was not made for loading assets. You have way less control with Composer over assets than for example Bower.\n\n> There is no problems with SRP\n\nI see problems with it because the web is drifting away from server rendered apps for a good reason and if Composer now decides they also want to be an asset loader they would bloat composer.\n\nYou don't use PHP to compile SASS too.\n. > The use of two managers of the dependencies in a single project leads to the need for manual dependency management\n\nbullshit.\n. ",
    "pablogrela": "Nobody is going to solve?\n. It is easy, put the next sentence in the head of html, in my case spanish, in your case nb\n\n```\n<script th:src=\"@{/resources/js/formcfg-es.js}\"></script>\n```\n\nand in the path translate the formcfg-nb.js, webshim automatically, get the languaje of navigator and translate.\n. you could also do:\n\n```\n<script>\nvar ln = x = window.navigator.language || navigator.browserLanguage;\nif (ln == 'nb') {\n    $(document).ready(function() {\n        webshims.activeLang('nb');\n    });\n}\n</script>\n\n```\n\nThis sentence is used with all languaje, supported and no supported.\n. Nobody is going to solve?\n. It is easy, put the next sentence in the head of html, in my case spanish, in your case nb\n\n```\n<script th:src=\"@{/resources/js/formcfg-es.js}\"></script>\n```\n\nand in the path translate the formcfg-nb.js, webshim automatically, get the languaje of navigator and translate.\n. you could also do:\n\n```\n<script>\nvar ln = x = window.navigator.language || navigator.browserLanguage;\nif (ln == 'nb') {\n    $(document).ready(function() {\n        webshims.activeLang('nb');\n    });\n}\n</script>\n\n```\n\nThis sentence is used with all languaje, supported and no supported.\n. ",
    "jmaister": "bower.json just need this lines:\n\n```\n\"main\": [\n    \"./webshim/js-webshim/minified/polyfiller.js\"\n],\n```\n. bower.json just need this lines:\n\n```\n\"main\": [\n    \"./webshim/js-webshim/minified/polyfiller.js\"\n],\n```\n. ",
    "DCL-jbannon": "I'm sorry, please disregard. I misread the documentation and thought that a custom validation function should return _true_ when valid. It should actually return true for validation failure. That's very surprising to me, but it does work as documented.\n\nDebugging was further complicated because returning _true_ rather than a custom error message causes a default error message to be used.\n. I'm sorry, please disregard. I misread the documentation and thought that a custom validation function should return _true_ when valid. It should actually return true for validation failure. That's very surprising to me, but it does work as documented.\n\nDebugging was further complicated because returning _true_ rather than a custom error message causes a default error message to be used.\n. ",
    "erutan": "iVal / live validation still isn't working, but I'll file this as a webcomponents issue mentally. \n\nthanks for looking into it!\n. iVal / live validation still isn't working, but I'll file this as a webcomponents issue mentally. \n\nthanks for looking into it!\n. ",
    "cmfcmf": "Oh yes, here it is: https://github.com/zikula/core/blob/1.4/src/javascript/jquery_config.js#L24\nSo setting the ajax method to 'GET' should fix it, could one of you please test? @shefik @craigh\n. Oh yes, here it is: https://github.com/zikula/core/blob/1.4/src/javascript/jquery_config.js#L24\nSo setting the ajax method to 'GET' should fix it, could one of you please test? @shefik @craigh\n. ",
    "craigh": "@cmfcmf - yes this appears to fix the problem for me. :+1: \n\nit is odd though that the problem only exists when working from a subdirectory (e.g. http://example.com/this/doesnt/work/) but works properly in webroot (e.g. http://thisworksok.com/)\n. sorry - this was the fix that worked\n\n``` js\nwebshims.setOptions('ajax', {\n    method: 'GET'\n});\n```\n\nI didn't try the other option\n. @cmfcmf - yes this appears to fix the problem for me. :+1: \n\nit is odd though that the problem only exists when working from a subdirectory (e.g. http://example.com/this/doesnt/work/) but works properly in webroot (e.g. http://thisworksok.com/)\n. sorry - this was the fix that worked\n\n``` js\nwebshims.setOptions('ajax', {\n    method: 'GET'\n});\n```\n\nI didn't try the other option\n. ",
    "ottok": "Sorry, wrong branch (why did Github anyway suggest it by default?)\n. You are welcome. Thanks for maintaining keeping the code base going!\n. Sorry, wrong branch (why did Github anyway suggest it by default?)\n. You are welcome. Thanks for maintaining keeping the code base going!\n. ",
    "GaltMidas": "Thanks aFarkas and thirdender for the in depth help. I really appreciate it.  Great project too.  \n. Thanks aFarkas and thirdender for the in depth help. I really appreciate it.  Great project too.  \n. ",
    "moxival": "Hi, we are having the same issue, for us it's only for fields that are inside fieldsets. The Chrome version is the same (43.0.2357).\n\nThat's part of our config\n\n``` javascript\n$.webshims.setOptions(\"forms\", { \ncustomMessages: true, \nreplaceValidationUI: true, \naddValidators: true \n});\n```\n\nwe don't have this problem in any other browser.\n\n**Update**\n\nYou can take a look at this fiddle in Chrome 43: http://jsfiddle.net/39gzcfdc/ \n\nSteps:\n1. Do not enter any information in the fields\n2. Press the \"Submit\" button\n3. You should see a tiny tooltip on the bottom-left border of the fieldset with no text in it\n\nAnother way to reproduce:\n1. Fill in the fields name and email\n2. Leave the \"address\" field empty\n3. Press \"Submit\"\n4. You will be prompted to \"Please fill out this field\", which is expected\n5. Go back to \"email\" field and enter invalid email (e.g. `111111`)\n6. Press \"Submit\"\n7. You will be prompted to \"Please fill out this field\" again (it will at the bottom-left border of the fieldset)\n\nI hope that this helps.\n. Hi, we are having the same issue, for us it's only for fields that are inside fieldsets. The Chrome version is the same (43.0.2357).\n\nThat's part of our config\n\n``` javascript\n$.webshims.setOptions(\"forms\", { \ncustomMessages: true, \nreplaceValidationUI: true, \naddValidators: true \n});\n```\n\nwe don't have this problem in any other browser.\n\n**Update**\n\nYou can take a look at this fiddle in Chrome 43: http://jsfiddle.net/39gzcfdc/ \n\nSteps:\n1. Do not enter any information in the fields\n2. Press the \"Submit\" button\n3. You should see a tiny tooltip on the bottom-left border of the fieldset with no text in it\n\nAnother way to reproduce:\n1. Fill in the fields name and email\n2. Leave the \"address\" field empty\n3. Press \"Submit\"\n4. You will be prompted to \"Please fill out this field\", which is expected\n5. Go back to \"email\" field and enter invalid email (e.g. `111111`)\n6. Press \"Submit\"\n7. You will be prompted to \"Please fill out this field\" again (it will at the bottom-left border of the fieldset)\n\nI hope that this helps.\n. ",
    "maxbar3": "thank you aFarkas that worked your the man. \n. thank you aFarkas that worked your the man. \n. ",
    "dutchcelt": "Ah, excellent! My apologies for not spotting the other issues. \n. Confirmed. Fixed in 1.15.8 release.\n. We've only needed to update to version 1.15.8. We have an old version of Modernizr and that doesn't effect the fix.\n. Ah, excellent! My apologies for not spotting the other issues. \n. Confirmed. Fixed in 1.15.8 release.\n. We've only needed to update to version 1.15.8. We have an old version of Modernizr and that doesn't effect the fix.\n. ",
    "patil-srikanth": "Please can you tell me what needs to be done , to fix this issue .Do we need to upgrade both webshims and modernizer ? Or any other \n. Please can you tell me what needs to be done , to fix this issue .Do we need to upgrade both webshims and modernizer ? Or any other \n. ",
    "edge0703": "Works, thank your for the quick help!\n. I've already tried that. It only works if I switch to inline validation by setting \"ws-validate\" at the form. It doesn't work for \"bubbles\".\n. I thought I'm crazy, but now I found out that your JSfiddle doesn't even use the webshim in Chrome, but everything that is shown is native Chrome form validation. But the thing is, even if I set up my form exactly like in the fiddle, it still shows the webshim validation and not the native Chrome validation like in your fiddle. Will try to set up a demo. Thanks for your help so far.\n. What I also found out: The moment you remove the \"ws-validation\" class from the form, the \"field grouping\" doesn't work anymore: https://jsfiddle.net/uMA9d/63/\n\nBut I don't want this inline error messages, I want the bubbles, but with them the field grouping doesn't work.\n. Also found another issue: If you set \"replaceValidationUI: true\", then radio button validation generally doesn't work anymore in Chrome. \n\nGenerally there seems to be an issue with the fiddle:\nhttps://jsfiddle.net/uMA9d/66/\n\nEven when I remove \"replaceValidationUI: true\" and \"lazyCustomMessages: true\" still \"replaceValidationUI\" seems to applied, as I get styled error bubbles, although Safari doesn't support native HTML5 form validation.\n\nI'm really confused now ...\n. Oh, \"https\" was the problem. Now everything works as expected in the fiddle, thank you. Sorry for the troubles. \n. I already did that before, but with no success. But now it suddenly works - don't know what I did different now. Thanks for your help.\n. Everything alright, I just made a mistake at the markup.\n. Works, thank your for the quick help!\n. I've already tried that. It only works if I switch to inline validation by setting \"ws-validate\" at the form. It doesn't work for \"bubbles\".\n. I thought I'm crazy, but now I found out that your JSfiddle doesn't even use the webshim in Chrome, but everything that is shown is native Chrome form validation. But the thing is, even if I set up my form exactly like in the fiddle, it still shows the webshim validation and not the native Chrome validation like in your fiddle. Will try to set up a demo. Thanks for your help so far.\n. What I also found out: The moment you remove the \"ws-validation\" class from the form, the \"field grouping\" doesn't work anymore: https://jsfiddle.net/uMA9d/63/\n\nBut I don't want this inline error messages, I want the bubbles, but with them the field grouping doesn't work.\n. Also found another issue: If you set \"replaceValidationUI: true\", then radio button validation generally doesn't work anymore in Chrome. \n\nGenerally there seems to be an issue with the fiddle:\nhttps://jsfiddle.net/uMA9d/66/\n\nEven when I remove \"replaceValidationUI: true\" and \"lazyCustomMessages: true\" still \"replaceValidationUI\" seems to applied, as I get styled error bubbles, although Safari doesn't support native HTML5 form validation.\n\nI'm really confused now ...\n. Oh, \"https\" was the problem. Now everything works as expected in the fiddle, thank you. Sorry for the troubles. \n. I already did that before, but with no success. But now it suddenly works - don't know what I did different now. Thanks for your help.\n. Everything alright, I just made a mistake at the markup.\n. ",
    "kraz": "You can use custom directory name. I am using token based on the application version. Something like:\n\n``` javascript\n$.webshims.setOptions('basePath', '/webshim/101506/')\n```\n\nWith little server side overwrite rules you can make all request to `/webshim/somedigits` to actually serve from `/webshim` directory.\n. You can use custom directory name. I am using token based on the application version. Something like:\n\n``` javascript\n$.webshims.setOptions('basePath', '/webshim/101506/')\n```\n\nWith little server side overwrite rules you can make all request to `/webshim/somedigits` to actually serve from `/webshim` directory.\n. ",
    "eddiegroves": "Thanks @kraz and @aFarkas for the prompt and excellent responses. Both are great options - I didn't realize `addCacheBuster` had this option.\n. Thanks @kraz and @aFarkas for the prompt and excellent responses. Both are great options - I didn't realize `addCacheBuster` had this option.\n. ",
    "Spone": "Sorry I just realized I used the wrong branch. See #536\n. Sorry I just realized I used the wrong branch. See #536\n. ",
    "judgej": "I've not seen any time formats in any config files, so I'm really unclear where they are coming from. Also I'm not entirely sure what you are suggesting here. I need to set something, somewhere, and give it to something else? Sorry, that's just my lack of experience with this library.\n. What I have done is set the language to `webshim.activeLang('en')` if the current language (`webshim.activeLang()`) is `en-US` or `en-GB`. That language seems to use the 24-hour clock. What I don't want to do, is switch all users to English - they may not be English. I am still curious to know where the 12-hour clock is coming from, because I feel I'm missing something there. If it's in that example you have given here, I'm just not seeing it.\n\nSo does `en-CUSTOM` extend the `en` locale, or completely replace it? There seems to be a lot of settings in your `en-CUSTOM` above that I would have thought were already defined in the underlying `en` language.\n\nThank you.\n. I've not seen any time formats in any config files, so I'm really unclear where they are coming from. Also I'm not entirely sure what you are suggesting here. I need to set something, somewhere, and give it to something else? Sorry, that's just my lack of experience with this library.\n. What I have done is set the language to `webshim.activeLang('en')` if the current language (`webshim.activeLang()`) is `en-US` or `en-GB`. That language seems to use the 24-hour clock. What I don't want to do, is switch all users to English - they may not be English. I am still curious to know where the 12-hour clock is coming from, because I feel I'm missing something there. If it's in that example you have given here, I'm just not seeing it.\n\nSo does `en-CUSTOM` extend the `en` locale, or completely replace it? There seems to be a lot of settings in your `en-CUSTOM` above that I would have thought were already defined in the underlying `en` language.\n\nThank you.\n. ",
    "AubreyHewes": "The default `en` language defines a _meridian_ value that if available is used for time display. So you get a 12 hour clock. \nSee https://github.com/aFarkas/webshim/blob/1aaf98d0a071be379f47bc52b61c09f12166333f/src/shims/form-number-date-ui.js#L348-L350\n\nTo have 24 hour time you can set the _meridian_ to a non truthy value:\n\n```\n// predefined formcfg.en forces 24 hour time display\nwebshim.formcfg.en = { meridian: false };\n```\n\nHardcoded `formcfg.en` is extended/overridden with the predefined `formcfg.en`. \n\nIf using a custom language; the files' `formcfg` is used _instead_ of the defaults (unless it extends a default itself).\n\nSo `en-CUSTOM` from the above example is its own standalone locale containing all the strings required. Therefore as it doesn't extend `en` it will not have a meridian value (unless you put it there) and it will have a 24 hour time display. \n. Locally you need the complete package. So also the shims; you can not just download and load the `polyfiller.js`\n\nsee http://afarkas.github.io/webshim/demos/index.html#Guide-installation\n\n```\n<script src=\"js/jquery.js\"></script>\n<script src=\"js-webshim/minified/polyfiller.js\"></script>\n\n<script>\n  //webshim.setOptions('basePath', '/js-webshim/minified/shims/');\n\n  //request the features you need:\n  webshim.polyfill('forms');\n\n  $(function(){\n    // use all implemented API-features on DOM-ready\n  });\n </script>\n```\n. The default `en` language defines a _meridian_ value that if available is used for time display. So you get a 12 hour clock. \nSee https://github.com/aFarkas/webshim/blob/1aaf98d0a071be379f47bc52b61c09f12166333f/src/shims/form-number-date-ui.js#L348-L350\n\nTo have 24 hour time you can set the _meridian_ to a non truthy value:\n\n```\n// predefined formcfg.en forces 24 hour time display\nwebshim.formcfg.en = { meridian: false };\n```\n\nHardcoded `formcfg.en` is extended/overridden with the predefined `formcfg.en`. \n\nIf using a custom language; the files' `formcfg` is used _instead_ of the defaults (unless it extends a default itself).\n\nSo `en-CUSTOM` from the above example is its own standalone locale containing all the strings required. Therefore as it doesn't extend `en` it will not have a meridian value (unless you put it there) and it will have a 24 hour time display. \n. Locally you need the complete package. So also the shims; you can not just download and load the `polyfiller.js`\n\nsee http://afarkas.github.io/webshim/demos/index.html#Guide-installation\n\n```\n<script src=\"js/jquery.js\"></script>\n<script src=\"js-webshim/minified/polyfiller.js\"></script>\n\n<script>\n  //webshim.setOptions('basePath', '/js-webshim/minified/shims/');\n\n  //request the features you need:\n  webshim.polyfill('forms');\n\n  $(function(){\n    // use all implemented API-features on DOM-ready\n  });\n </script>\n```\n. ",
    "equilerex": "using the latest (1.15.8) example: http://codepen.io/anon/pen/rVQPov\n. using the latest (1.15.8) example: http://codepen.io/anon/pen/rVQPov\n. ",
    "alejandroiglesias": "@mekras so what's the difference between using a dependency manager for PHP for non-PHP libraries versus using a front-end package manager for front-end dependencies (like Bower) besides making a mess of concerns?\nActually I'm honestly interested in knowing your rationale.\n. @mekras so what's the difference between using a dependency manager for PHP for non-PHP libraries versus using a front-end package manager for front-end dependencies (like Bower) besides making a mess of concerns?\nActually I'm honestly interested in knowing your rationale.\n. ",
    "jjoekoullas": "Ran into this as well.  [Fiddle here](http://jsfiddle.net/egn9zLct/1/)\n\nWorth pointing out that I repro'ed this using firefox.\n. Also in case anybody else finds this, a reasonable interim solution is listed in this SO question: http://stackoverflow.com/questions/31990004/keyboard-input-with-webshims-date-picker\n. Thank you for a quick response and good advice! :+1: \n. Ran into this as well.  [Fiddle here](http://jsfiddle.net/egn9zLct/1/)\n\nWorth pointing out that I repro'ed this using firefox.\n. Also in case anybody else finds this, a reasonable interim solution is listed in this SO question: http://stackoverflow.com/questions/31990004/keyboard-input-with-webshims-date-picker\n. Thank you for a quick response and good advice! :+1: \n. ",
    "philayres": "Since duplicate chunks of code like this appear in numerous parts of the project I'm not confident enough to submit the above fix as a pull request. If an expert could confirm this is the only place the code needs to be fixed I'll happily do so, but I think I need a little more direction before I take this leap. Any feedback from a project expert?\n. I ran across this issue after a Rails app was upgraded last week to address CVEs in a set of standard Gems. The packaged JQuery must have been bumped, which led to this function being hidden from the published API.\n\nFor anybody needing a short term fix, I was able to regain the functionality by extracting the original JQuery code for .swap:\n\n```\n jQuery.swap = function( elem, options, callback, args ) {\n    var ret, name, old = {};\n    // Remember the old values, and insert the new ones\n    for ( name in options ) {\n            old[ name ] = elem.style[ name ];\n            elem.style[ name ] = options[ name ];\n    }\n\n    ret = callback.apply( elem, args || [] );\n\n    // Revert the old values\n    for ( name in options ) {\n            elem.style[ name ] = old[ name ];\n    }\n    return ret;\n};\n\n```\n\nNot a long term fix, but maybe useful for others who suddenly have broken Rails apps.\n. Since duplicate chunks of code like this appear in numerous parts of the project I'm not confident enough to submit the above fix as a pull request. If an expert could confirm this is the only place the code needs to be fixed I'll happily do so, but I think I need a little more direction before I take this leap. Any feedback from a project expert?\n. I ran across this issue after a Rails app was upgraded last week to address CVEs in a set of standard Gems. The packaged JQuery must have been bumped, which led to this function being hidden from the published API.\n\nFor anybody needing a short term fix, I was able to regain the functionality by extracting the original JQuery code for .swap:\n\n```\n jQuery.swap = function( elem, options, callback, args ) {\n    var ret, name, old = {};\n    // Remember the old values, and insert the new ones\n    for ( name in options ) {\n            old[ name ] = elem.style[ name ];\n            elem.style[ name ] = options[ name ];\n    }\n\n    ret = callback.apply( elem, args || [] );\n\n    // Revert the old values\n    for ( name in options ) {\n            elem.style[ name ] = old[ name ];\n    }\n    return ret;\n};\n\n```\n\nNot a long term fix, but maybe useful for others who suddenly have broken Rails apps.\n. ",
    "theahura": "Brilliant, thank you. \n. Brilliant, thank you. \n. ",
    "ThaDafinser": "Thank you for the feedback and sorry for the delayed answer.\n\nIt was my fault, since i added to the `input` the css class `col-md-12` which caused this behaviour\n. Thank you for the feedback and sorry for the delayed answer.\n\nIt was my fault, since i added to the `input` the css class `col-md-12` which caused this behaviour\n. ",
    "phavel": "I have problem with \"require\" in input type date in combination with [jQuery Validation Plugin](https://jqueryvalidation.org/).\r\nI need jQuery Validation Plugin for validate other form elements.. I have problem with \"require\" in input type date in combination with [jQuery Validation Plugin](https://jqueryvalidation.org/).\r\nI need jQuery Validation Plugin for validate other form elements.. ",
    "dceonline": "Same here, how can i use webshim and jquery validate side by side?\r\n\r\nregards. Same here, how can i use webshim and jquery validate side by side?\r\n\r\nregards. ",
    "ourcore": "Issue was caused by setting the system checkbox to display: none.\n. Issue was caused by setting the system checkbox to display: none.\n. ",
    "tleunen": "@aFarkas I've created an example with the old version (1.8.12) to show you it worked before: http://codepen.io/anon/pen/QjeyXJ/?editors=101\nUsing Firefox, I can see the custom message: \n<img width=\"299\" alt=\"screen shot 2015-11-28 at 9 07 19 pm\" src=\"https://cloud.githubusercontent.com/assets/1972567/11454990/16651e3e-9614-11e5-98cb-c343e451215b.png\">\n\nBut I can't find a way to get the same result with the latest version of webshims. Could you help?\n. I don't really want to change the default behavior of the browser so I'll go with the second alternative you suggested. Thanks a lot!\n\nI'm closing this issue now that an alternative has been found.\n. @aFarkas I've created an example with the old version (1.8.12) to show you it worked before: http://codepen.io/anon/pen/QjeyXJ/?editors=101\nUsing Firefox, I can see the custom message: \n<img width=\"299\" alt=\"screen shot 2015-11-28 at 9 07 19 pm\" src=\"https://cloud.githubusercontent.com/assets/1972567/11454990/16651e3e-9614-11e5-98cb-c343e451215b.png\">\n\nBut I can't find a way to get the same result with the latest version of webshims. Could you help?\n. I don't really want to change the default behavior of the browser so I'll go with the second alternative you suggested. Thanks a lot!\n\nI'm closing this issue now that an alternative has been found.\n. ",
    "luishdz1010": "+1, I can reproduce this with the same configuration in Chrome 47\n. +1, I can reproduce this with the same configuration in Chrome 47\n. ",
    "marvinrabe": "Error is also occuring with the current jQuery2 version (2.2). Its working fine with jQuery 2.1\n. Error is also occuring with the current jQuery2 version (2.2). Its working fine with jQuery 2.1\n. ",
    "brucek2": "+1\n. I did exactly that and it worked -- make sure you are doing it after\nloading jQuery though.\n\nOn Thu, Mar 10, 2016 at 10:24 AM, Christian Pradelli <\nnotifications@github.com> wrote:\n\n> Hi philayres, can you explain me where to declare swap function?\n> I try to define in a js file that I included before polyfiller.js but it\n> does'work.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/560#issuecomment-195032144.\n. +1\n. I did exactly that and it worked -- make sure you are doing it after\nloading jQuery though.\n\nOn Thu, Mar 10, 2016 at 10:24 AM, Christian Pradelli <\nnotifications@github.com> wrote:\n\n> Hi philayres, can you explain me where to declare swap function?\n> I try to define in a js file that I included before polyfiller.js but it\n> does'work.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/aFarkas/webshim/issues/560#issuecomment-195032144.\n. ",
    "kattunga": "Hi philayres, can you explain me where to declare swap function?\nI try to define in a js file that I included before polyfiller.js but it does'work.\n. Thank you bruce, now it works, I made I typo when I copy the code.\n. Hi philayres, can you explain me where to declare swap function?\nI try to define in a js file that I included before polyfiller.js but it does'work.\n. Thank you bruce, now it works, I made I typo when I copy the code.\n. ",
    "PRISMAY": "Same problem in IE11.  Project using jQuery 2.2.1 and webshims 1.15.10.\n. Same problem in IE11.  Project using jQuery 2.2.1 and webshims 1.15.10.\n. ",
    "jvanalst": "+1. Switching to jQuery 1.11.3 fixed the error.\n. +1. Switching to jQuery 1.11.3 fixed the error.\n. ",
    "david-blacnet": "Hi, this is my first post in GitHub.\n\nI've encountered this issue using jQuery 3.x and I've found that webshims still only works with jQuery 1.8, after I've added jQuery-migrate the problem is fixed.\n. Hi, this is my first post in GitHub.\n\nI've encountered this issue using jQuery 3.x and I've found that webshims still only works with jQuery 1.8, after I've added jQuery-migrate the problem is fixed.\n. ",
    "bedoz": "I solved the problem by specifying the library to load on function.\nInstead of calling the generic function without any argument, i specified to load only \"forms\" and the error is gone.\n. I solved the problem by specifying the library to load on function.\nInstead of calling the generic function without any argument, i specified to load only \"forms\" and the error is gone.\n. ",
    "caiorg": "Just a follow up, I get the same thing here.\n. Just a follow up, I get the same thing here.\n. ",
    "yingjun": " I tried td.day-6,td.day-0 > button{color:red}, but it doesn't apply my styles. anything wrong with my code?\n\nthank you\n. webshim.setOptions('basePath', <yourpath>);\ndid you try this?\n.  I tried td.day-6,td.day-0 > button{color:red}, but it doesn't apply my styles. anything wrong with my code?\n\nthank you\n. webshim.setOptions('basePath', <yourpath>);\ndid you try this?\n. ",
    "ahmadalfy": "Can confirm this is happening on 55.0.2868.3 (Official Build) dev (64-bit)\n. Can confirm this is happening on 55.0.2868.3 (Official Build) dev (64-bit)\n. ",
    "mitchiru": "+1\n. +1\n. ",
    "pherris": "\ud83d\udc4d \n. \ud83d\udc4d \n. ",
    "eraserqueen": "Can we get this fix in a new release please?\n. Can we get this fix in a new release please?\n. ",
    "markat1": "Anyone? . Anyone? . ",
    "Weksley": "You will need to update fields after you load it. \r\nrun this on the bottom of the page that content the date field. \r\n$(\"input[type=date]\").updatePolyfill();. You will need to update fields after you load it. \r\nrun this on the bottom of the page that content the date field. \r\n$(\"input[type=date]\").updatePolyfill();. "
}