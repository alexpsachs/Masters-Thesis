{
    "nicklockwood": "Whoops! Thanks :-)\n. It's probably because it uses `[layer renderInContext:]` which doesn't work with opengl content, instead of the equivalent iOS7 `[view <redacted>]` method which should work with anything.\n\nBut to be honest, if you're just targeting iOS7 and above, you'd be better off using the UIToolbar layer trick to do your blurring instead (google it).\n\nFor SpriteKit content, there may be an approach using shaders or CIFilters that would be more efficient (not 100% sure as I've not read much of the SpriteKit docs yet).\n. I can't see that they'd have a problem with it. It doesn't use any private APIs.\n. Failing that though, if you modify the library to use the aforementioned new iOS 7 method (should be obvious - it's a one-line change) then it should solve your issue.\n. I tried to implement the new iOS 7 layer drawing method conditionally in the latest release, but it doesn't seem to work. Did you have any luck with it?\n. Given that this is the standard behaviour for all views anyway, is there any particular reason why BlurView should change the default? It's easily overridden either in code or within the nib, and it's not obvious to me that blurViews are more likely to be non-interactive than interactive (if anything I'd guess the opposite).\n. Ah, sorry. I should probably check my pull requests more often.\n\nI've implemented tintColor in the latest release 1.3. It's not nearly as flexible as your implementation, but I was trying to avoid too much in the way of configuration surface area.\n\nI believe the effect when setting tintColor to [UIColor whiteColor] is pretty close to what you have in your screenshot.  I'm aware that tintColor is now a standard property iOS7, but I kind of consider this a feature rather than an unintended side effect (I've handled support for setting it in IB).\n\nWould be insterested in further discussion though - it looks like I might want to cherry-pick some of the stuff in this pull request, but I'll need to wrap my head around exactly what it all does :-)\n. In theory I should just be able to use drawViewHeirarchyInRect: on iOS7 although it didn't work when I tried it.\n. That should have been fixed in the latest point release. If not, can you tell me what settings you are using?\n. I think the problem may be iPad-specific. I'll investigate further.\n. Btw, a tint of [UIColor whiteColor] works just as well ;-)\n. Fixed in 1.4.4\n. FXBlurView works by taking a snaphot of the superview contents. Even if I were to capture the whole window, I'm not aware of any public API that would let you capture the desktop, so I don't think there's any way to make this work.\n. I think this is out of scope for what the library is trying to achieve.\n\nAre you aware of the layer.mask property? That can be used to mask and view using the contents of another view with only a few lines of code and without needing explicit support to be built into the library.\n\nFor example, you could just assign the star image as the contents of an image view, then use it as the mask, e.g.\n\n```\nUIImageView *imageView = [[UIImageView alloc] initWithImage:starImage];\nblurView.layer.mask = imageView.layer;\n```\n. I think it happens when your view has a size of zero. I thought I'd fixed it, but apparently not.\n\nTry ensuring that your FXBlurView frame is set before you add it to the screen.\n. Hmm. Okay, I'll investigate further. If you can reproduce it with a simple project then that would be a big help.\n. I've fixed this in 1.3.3.\n. oh, that's odd. OK, I'll try again.\n. The documentation for CGRectIsEmpty says that it should return YES if the width OR height are zero. Is it possible that something else is going wrong?\n. OK, I can't reproduce this in 1.4. If you're still seeing it, please send me a sample project.\n. The short answer is no.\n\nIt's a limitation of the renderInContext: method used to capture the view contents. iOS7 has a new method for capturing view contents that would also work with AVPlayer, but it's too slow for realtime use.\n. It is possible to capture the contents of an AVPlayer as an image, although I don't recall the mechanism off the top of my head. If you feel like figuring out that part, I can show you how to integrate it with FXBlurView.\n. It is mentioned in the README, under FAQs:\n\nQ. My SpriteKit/OpenGL/Video/3D transformed content isn't showing up properly when placed underneath an FXBlurView, why not?\nA. This is a limitation of a the `CALayer` `renderInContext:` method used to capture the view contents. There is no workaround for this on iOS 6 and earlier. On iOS 7 you can make use of the `UIView` `drawViewHierarchyInRect:afterScreenUpdates:` method to capture an view and apply the blur effect yourself, but this it too slow for realtime use, so FXBlurView does not use this method by default.\n. It may do. I included AVPlayerLayer in the list of special cases, but in practice you may find the performance is too bad to be usable.\n. FXBlurView only works with views inside your app, not with the iOS homescreen parallax effect. This is a limitation imposed by iOS.\n\nYou can blur the homescreen using a UIToolbar instead on iOS7.\n. This seems like a neat approach. Would be good to have support for other view types such as movie players though. I probably won't merge this exactly as implemented, but I'll look at providing something similar in the next version.\n. Ah, yeah I know why that's happening. I think a fix may be possible. I'll see what I can do.\n. Unfortunately the fix I had it mind doesn't seem to work. All I can suggest is that you animate the text position using an NSTimer or CADisplayLink instead of Core Animation.\n. I don't see any easy way to do this with good performance. You do a trick by generating the blurView for the whole superview area and then shifting it around inside a container when you animate (as in the modal example) but I don't see a good way to generalise this technique.\n. That does sound pretty neat. It's a little bit out if scope for what I'm trying to do with FXBlurview, but I'll think about it.\n. Ha ha, all good points. I'll fix it in the next update.\n. Fixed in 1.4.2\n. Thanks. What are the exact dimensions of the white view and blurview instance you are using? And can you describe the view hierarchy? Is the blurView a child of the white view or its sibling?\n. Never mind, I was able to reproduce it. Fixed in version 1.4.2.\n. I overwrote previous tag. Naughty, but I'm pretty sure nobody but you would've updated yet ;-)\n. Probably. Sorry, I haven't had a chance to fully review it yet (many libs to maintain).\n. I've included this fix in the 1.5 release.\n. BlurViews probably don't work right inside a scrollview. You should be able to fix it by placing them inside a subview within the scrollview.\n. Well basically it works by capturing a snapshot of the visible area of the containing view. When you scroll a scroll view, the visible area changes but the blurview won't get redrawn unless it is operating in dynamic mode.\n\nYou could just tell the blurview to update whenever the scroll view scrolls, but that will probably perform worse than if the blur view is dynamic.\n\nAnother option might be to set dynamic=true on the blurviews when the scroll view starts moving and then toggle it off again when the scrollview has come to a stop.\n\nShould be ok on a tableView, but you may need to update the blurview whenever you recycle the cell.\n. you need to set self.clipsToBounds = YES or self.layer.masksToBounds = YES. Also, it would be a good idea to call  [super awakeFromNib] in case FXBlurView overrides that method in future.\n. Umm no. Implicit property synthesis is a great, and long awaited feature of Objective C. Turning on a compiler warning for it is just creating Shit Work for yourself, and suppressing that warning is self-defeating.\n\nIf I did want to disable auto-synthesis, the correct approach would be to add explicit @synthesize statements for those properties. But I don't want to.\n\nIf you must use this warning, I suggest you use a static compiled version of FXBlurView, or something like Cocoapods.\n. This isn't needed - it can already be compiled using the iOS 6 SDK just fine.\n. It works fine if you compile using Xcode 4.6.3 - I guess it's due to the stricter compiler in Xcode 5. OK, I'll take a look.\n. OK, fixed.\n. Can you provide an example project demonstrating the problem? I'm unclear what you mean, as FXBlurView should not care about the screen orientation, and I'm concerned your fix might be specific to a particular use-case.\n. Wow, that is interesting (and deeply disturbing). Is there a workaround?\n. Btw, @alfiehanssen, if you're just targeting iOS7, why not use a regular UIToolbar instead of FXBlurView?\n. Try using the global [FXBlurView setBlurEnabled:] methods to disable the blur during animation, rather than toggling the dynamic property.\n\nWhen using scrollView delegate methods to update the blur view, make sure you use the async option.\n. I've included this fix in the 1.5 release.\n. Try disabling dynamic mode, and instead call update on the blur view from the scrollviewDidScroll delegate method.\n. FXBlurView doesn't blur it's subviews, it only blurs the contents of its superview.\n. Sorry, I think I misunderstood you. You just need to move FXBlurView to the front of your view hierarchy. Right now it's behind all the views you want it to blur. If you move it in front of them (which means moving it _down_ in the list in interface builder) it should work.\n. What is the purpose of the displayIfNeeded code?\n\nI would guess this is why it isn't working as it is causing the blurview to draw itself before the view hierarchy has finished drawing (and then it won't be updated once it finishes because dynamic is set to NO).\n. It looks like that code may have been copied from the modal example. If you are trying to create a sliding overlay effect then it may be needed, but you need to be careful that you delay triggering it until after the view has fully appeared on screen.\n\nIf you are not trying to create a sliding overlay, you don't need that code.\n. Interesting. I guess I could add that fix to the snapshot logic itself (I already hide other blur views, etc). But maybe it's worth waiting to see what happens with iOS 7.1, as you say.\n. Unfortunately it's not possible to use FXBlurView with animations in this way. It will work if you scroll the scrollView by setting the animated: argument to YES, but not using UIView animation. This has to do with the way that iOS updates views when animating.\n. It's not possible to fix this due to the way Core Animation works. The animations happens in a separate process, so I can't get snapshots of the intermediate frames. If you need this, you'll have to implement your animation using a timer.\n. Ha ha, fair enough. This actually increases the total LOC if course, which was my reason for not doing it originally, but I suppose that it is better despite that.\n\nNice catch on the missing completion call too - dunno how I missed that!\n. To fix the corner radius, you just need to enable clipsToBounds on your blurview.\n\nThe incompatibility with NGAParallaxMotion probably relates to how that library works. If it uses core animation, FXBlurView can't capture the animation unfortunately.\n. Disable blur and then set blurview.layer.contents = nil. That will hide the blurred contents temporarily, and it will come back when you re-enable blur.\n. not a bug, just the way that the tint colour is applied. I use additive instead of subtractive blending, so any colour + zero (black) == original colour.\n\nIf you overlay a black subview with partial transparency on top or inside the blur view, you should get the effect you wanted.\n. I'm unclear what the point of this is?\n. Did you read the section about ARC in the README.md file? Here it is:\n\n## ARC Compatibility\n\nAs of version 1.3, FXBlurView requires ARC. **If you wish to use FXBlurView in a non-ARC project, just add the -fobjc-arc compiler flag to the FXBlurView.m class. To do this, go to the Build Phases tab in your target settings, open the Compile Sources group, double-click FXBlurView.m in the list and type -fobjc-arc into the popover.**\n\nIf you wish to convert your whole project to ARC, comment out the #error line in FXBlurView.m, then run the Edit > Refactor > Convert to Objective-C ARC... tool in Xcode and make sure all files that you wish to use ARC for (including FXBlurView.m) are checked.\n. These should now be fixed in version 1.6. If you are still seeing them, please let me know.\n. Yep, rookie error on my part - thanks!\n. I already did - v 1.5.5 includes this fix.\n. You can blur an image using the UIImage category included with the library.\n. Oh, I see. The simplest option would just be to put your button or imageview inside an FXBlurView, with a transparent background for your button.\n\nFXBlurView doesn't work with camera input. For that you'll need to try something like GPUImage.\n. Hi, can you check if version 1.6 solves this problem for you? I made some changes to the capture offset logic.\n. Yeah, that's quite possible.There are various steps you can take to reduce this:\n- If the content behind the blur view doesn't change, set dynamic = NO\n- If the content changes only infrequently, increase the updateInterval to something like 0.1 (10 frames per second)\n- Try reducing the number of blue iterations and see if the quality is still acceptable\n- If the content behind is a scrollview, set dynamic = NO and use the scrollView delegate's didScroll method to update the blurView instead\n. Did you close this because you found a workaround, or because the problem wasn't related to blur view?\n. It doesn't improve performance. There is no fast path from screenshots -> OpenGL texture, so converting the image for use with GPUImage actually takes long than the blur function.\n. That seems likely. FXBlurView doesn't capture the presentationLayer, only the modelLayer, so any animations happening behind it are not correctly included.\n\nI have yet to find a workaround for this unfortunately. Trying to capture the presentationLayer leads to other bugs, such as content in front of the blurView appearing in the blurred image.\n. FXBurView is constantly creating images and releasing them. There's not really any way to avoid that, except by disabling dynamic mode.\n\nFor best performance, disable dynamic mode and only update the blur effect when the content behind it changes. If the content scrolls, the best way to do that is to update the blur from the scrollViewDidScroll delegate method.\n. You can achieve this by just adding a subview inside your blurview with a translucent background.\n. I would be surprised if you can detect any performance impact from adding that subview, and the rendering should actually be more efficient, since view background colours are composited on the GPU instead of using software drawing.\n. I'm going to need a little more information. Can you provide a stack trace from the crash? And also, if possible try to find out what the dimensions of the blurView were at the time to crashed.\n. Those should be the same, except when animating (which doesn't work in dynamic mode).\n. Yes, that's expected behaviour. FXBlurView only captures the contents of the view itself, not any colours showing through from the view behind.\n\nIf you set the underlyingView property of the FXBlurView to the view that contains your partially transparent view, it should solve the problem.\n. No. The FXBlurView has a property called \"underlyingView\". If this is nil, it defaults to the view containing the FXBlurView, however you can set this to a view of your choosing, including views that are not in the same hierarchy as the blur view.\n. It's just a property of the FXBlurView class. If you have an outlet to your blurView in your view controller, you'd just write:\n\n```\nself.myBlurView.underlyingView = someOtherView;\n```\n. You've most likely declared the outlet as being of type UIView \\* instead of FXBlurView *. Either change the outlet declaration to FXBlurView *, or cast the call, like this:\n\n```\n((FXBlurView *)self.Genres).underlyingView = _main_view;\n```\n. Maybe change the backgroundColor of _main_view to white?\n. FXBlurView doesn't work over camera output, or certain other cases (e.g. OpenGL views, SpriteKit, etc). This is an iOS limitation.\n. When you say it doesn't work, what is it doing, and what did you expect it to do?\n. I'm pretty sure that adding an observer creates a weak reference to the object, and doesn't prevent it from being deallocated.\n\nI'd be interested if you have any evidence to the contrary.\n. The trace doesn't mention NSNotificationCenter anywhere - also, that seems to be the trace for the allocations tab, not the leaks tab - are you sure it's FXBlurView that's leaking? (I'm not saying it isn't - just that that output doesn't seem to prove it).\n. Fixed in 1.6.2.\n. I already tried it. The performance is _much worse_ when using the new snapshot APIs.\n. It's because you are calling the animation immediately after inserting the subview. This is a known bug/feature in Core Animation that animations don't work if they are applied to a view before it has appeared on screen.\n\nThe workaround is to delay your animation by a single frame, which you can do like this:\n\n```\n_blurEffectView = [[FXBlurView alloc] initWithFrame:self.superview.bounds];\n_blurEffectView.tintColor = [UIColor colorWithRed:0.1 green:0.1 blue:0.1 alpha:1];\n[self.superview insertSubview:_blurEffectView belowSubview:self];\ndispatch_async(dispatch_get_main_queue(), ^{\n    [UIView animateWithDuration:0.5 animations:^{\n        _blurEffectView.blurRadius = 30;\n    }];\n})\n```\n\nYeah, it's a bit hacky, but hey, Objective-C ;-)\n. Fixed in 1.6.4\n. The performance will be horrible if you are trying to make each cell in your table into a separate blur view. The right way to do this is to make the cells transparent and put the blur view behind the table.\n. This is a known (documented) issue. The solution you've found will work, but the performance is slower for live updates.\n. It should be faster, but when I tried it I found that the performance with drawViewHierarchy was disastrously slow. I haven't tested it on iOS8 though, so it may have improved.\n. FXBlurView blurs its parent and siblings, not its child views.\n. This is hugely expensive. You're basically always capturing the full screen every time even if your blurview is only a few pixels in size.\n. Try capturing the screenshot using `-[UIView drawViewHierarchyInRect:afterScreenUpdates:]` instead.\n. \ud83d\udc4d. I think the problem is that FXBlurView hides subviews automatically when snapshotting, then re-shows them. I guess it should kee track of which ones were already hidden.\n. Whoops! Thanks :-)\n. It's probably because it uses `[layer renderInContext:]` which doesn't work with opengl content, instead of the equivalent iOS7 `[view <redacted>]` method which should work with anything.\n\nBut to be honest, if you're just targeting iOS7 and above, you'd be better off using the UIToolbar layer trick to do your blurring instead (google it).\n\nFor SpriteKit content, there may be an approach using shaders or CIFilters that would be more efficient (not 100% sure as I've not read much of the SpriteKit docs yet).\n. I can't see that they'd have a problem with it. It doesn't use any private APIs.\n. Failing that though, if you modify the library to use the aforementioned new iOS 7 method (should be obvious - it's a one-line change) then it should solve your issue.\n. I tried to implement the new iOS 7 layer drawing method conditionally in the latest release, but it doesn't seem to work. Did you have any luck with it?\n. Given that this is the standard behaviour for all views anyway, is there any particular reason why BlurView should change the default? It's easily overridden either in code or within the nib, and it's not obvious to me that blurViews are more likely to be non-interactive than interactive (if anything I'd guess the opposite).\n. Ah, sorry. I should probably check my pull requests more often.\n\nI've implemented tintColor in the latest release 1.3. It's not nearly as flexible as your implementation, but I was trying to avoid too much in the way of configuration surface area.\n\nI believe the effect when setting tintColor to [UIColor whiteColor] is pretty close to what you have in your screenshot.  I'm aware that tintColor is now a standard property iOS7, but I kind of consider this a feature rather than an unintended side effect (I've handled support for setting it in IB).\n\nWould be insterested in further discussion though - it looks like I might want to cherry-pick some of the stuff in this pull request, but I'll need to wrap my head around exactly what it all does :-)\n. In theory I should just be able to use drawViewHeirarchyInRect: on iOS7 although it didn't work when I tried it.\n. That should have been fixed in the latest point release. If not, can you tell me what settings you are using?\n. I think the problem may be iPad-specific. I'll investigate further.\n. Btw, a tint of [UIColor whiteColor] works just as well ;-)\n. Fixed in 1.4.4\n. FXBlurView works by taking a snaphot of the superview contents. Even if I were to capture the whole window, I'm not aware of any public API that would let you capture the desktop, so I don't think there's any way to make this work.\n. I think this is out of scope for what the library is trying to achieve.\n\nAre you aware of the layer.mask property? That can be used to mask and view using the contents of another view with only a few lines of code and without needing explicit support to be built into the library.\n\nFor example, you could just assign the star image as the contents of an image view, then use it as the mask, e.g.\n\n```\nUIImageView *imageView = [[UIImageView alloc] initWithImage:starImage];\nblurView.layer.mask = imageView.layer;\n```\n. I think it happens when your view has a size of zero. I thought I'd fixed it, but apparently not.\n\nTry ensuring that your FXBlurView frame is set before you add it to the screen.\n. Hmm. Okay, I'll investigate further. If you can reproduce it with a simple project then that would be a big help.\n. I've fixed this in 1.3.3.\n. oh, that's odd. OK, I'll try again.\n. The documentation for CGRectIsEmpty says that it should return YES if the width OR height are zero. Is it possible that something else is going wrong?\n. OK, I can't reproduce this in 1.4. If you're still seeing it, please send me a sample project.\n. The short answer is no.\n\nIt's a limitation of the renderInContext: method used to capture the view contents. iOS7 has a new method for capturing view contents that would also work with AVPlayer, but it's too slow for realtime use.\n. It is possible to capture the contents of an AVPlayer as an image, although I don't recall the mechanism off the top of my head. If you feel like figuring out that part, I can show you how to integrate it with FXBlurView.\n. It is mentioned in the README, under FAQs:\n\nQ. My SpriteKit/OpenGL/Video/3D transformed content isn't showing up properly when placed underneath an FXBlurView, why not?\nA. This is a limitation of a the `CALayer` `renderInContext:` method used to capture the view contents. There is no workaround for this on iOS 6 and earlier. On iOS 7 you can make use of the `UIView` `drawViewHierarchyInRect:afterScreenUpdates:` method to capture an view and apply the blur effect yourself, but this it too slow for realtime use, so FXBlurView does not use this method by default.\n. It may do. I included AVPlayerLayer in the list of special cases, but in practice you may find the performance is too bad to be usable.\n. FXBlurView only works with views inside your app, not with the iOS homescreen parallax effect. This is a limitation imposed by iOS.\n\nYou can blur the homescreen using a UIToolbar instead on iOS7.\n. This seems like a neat approach. Would be good to have support for other view types such as movie players though. I probably won't merge this exactly as implemented, but I'll look at providing something similar in the next version.\n. Ah, yeah I know why that's happening. I think a fix may be possible. I'll see what I can do.\n. Unfortunately the fix I had it mind doesn't seem to work. All I can suggest is that you animate the text position using an NSTimer or CADisplayLink instead of Core Animation.\n. I don't see any easy way to do this with good performance. You do a trick by generating the blurView for the whole superview area and then shifting it around inside a container when you animate (as in the modal example) but I don't see a good way to generalise this technique.\n. That does sound pretty neat. It's a little bit out if scope for what I'm trying to do with FXBlurview, but I'll think about it.\n. Ha ha, all good points. I'll fix it in the next update.\n. Fixed in 1.4.2\n. Thanks. What are the exact dimensions of the white view and blurview instance you are using? And can you describe the view hierarchy? Is the blurView a child of the white view or its sibling?\n. Never mind, I was able to reproduce it. Fixed in version 1.4.2.\n. I overwrote previous tag. Naughty, but I'm pretty sure nobody but you would've updated yet ;-)\n. Probably. Sorry, I haven't had a chance to fully review it yet (many libs to maintain).\n. I've included this fix in the 1.5 release.\n. BlurViews probably don't work right inside a scrollview. You should be able to fix it by placing them inside a subview within the scrollview.\n. Well basically it works by capturing a snapshot of the visible area of the containing view. When you scroll a scroll view, the visible area changes but the blurview won't get redrawn unless it is operating in dynamic mode.\n\nYou could just tell the blurview to update whenever the scroll view scrolls, but that will probably perform worse than if the blur view is dynamic.\n\nAnother option might be to set dynamic=true on the blurviews when the scroll view starts moving and then toggle it off again when the scrollview has come to a stop.\n\nShould be ok on a tableView, but you may need to update the blurview whenever you recycle the cell.\n. you need to set self.clipsToBounds = YES or self.layer.masksToBounds = YES. Also, it would be a good idea to call  [super awakeFromNib] in case FXBlurView overrides that method in future.\n. Umm no. Implicit property synthesis is a great, and long awaited feature of Objective C. Turning on a compiler warning for it is just creating Shit Work for yourself, and suppressing that warning is self-defeating.\n\nIf I did want to disable auto-synthesis, the correct approach would be to add explicit @synthesize statements for those properties. But I don't want to.\n\nIf you must use this warning, I suggest you use a static compiled version of FXBlurView, or something like Cocoapods.\n. This isn't needed - it can already be compiled using the iOS 6 SDK just fine.\n. It works fine if you compile using Xcode 4.6.3 - I guess it's due to the stricter compiler in Xcode 5. OK, I'll take a look.\n. OK, fixed.\n. Can you provide an example project demonstrating the problem? I'm unclear what you mean, as FXBlurView should not care about the screen orientation, and I'm concerned your fix might be specific to a particular use-case.\n. Wow, that is interesting (and deeply disturbing). Is there a workaround?\n. Btw, @alfiehanssen, if you're just targeting iOS7, why not use a regular UIToolbar instead of FXBlurView?\n. Try using the global [FXBlurView setBlurEnabled:] methods to disable the blur during animation, rather than toggling the dynamic property.\n\nWhen using scrollView delegate methods to update the blur view, make sure you use the async option.\n. I've included this fix in the 1.5 release.\n. Try disabling dynamic mode, and instead call update on the blur view from the scrollviewDidScroll delegate method.\n. FXBlurView doesn't blur it's subviews, it only blurs the contents of its superview.\n. Sorry, I think I misunderstood you. You just need to move FXBlurView to the front of your view hierarchy. Right now it's behind all the views you want it to blur. If you move it in front of them (which means moving it _down_ in the list in interface builder) it should work.\n. What is the purpose of the displayIfNeeded code?\n\nI would guess this is why it isn't working as it is causing the blurview to draw itself before the view hierarchy has finished drawing (and then it won't be updated once it finishes because dynamic is set to NO).\n. It looks like that code may have been copied from the modal example. If you are trying to create a sliding overlay effect then it may be needed, but you need to be careful that you delay triggering it until after the view has fully appeared on screen.\n\nIf you are not trying to create a sliding overlay, you don't need that code.\n. Interesting. I guess I could add that fix to the snapshot logic itself (I already hide other blur views, etc). But maybe it's worth waiting to see what happens with iOS 7.1, as you say.\n. Unfortunately it's not possible to use FXBlurView with animations in this way. It will work if you scroll the scrollView by setting the animated: argument to YES, but not using UIView animation. This has to do with the way that iOS updates views when animating.\n. It's not possible to fix this due to the way Core Animation works. The animations happens in a separate process, so I can't get snapshots of the intermediate frames. If you need this, you'll have to implement your animation using a timer.\n. Ha ha, fair enough. This actually increases the total LOC if course, which was my reason for not doing it originally, but I suppose that it is better despite that.\n\nNice catch on the missing completion call too - dunno how I missed that!\n. To fix the corner radius, you just need to enable clipsToBounds on your blurview.\n\nThe incompatibility with NGAParallaxMotion probably relates to how that library works. If it uses core animation, FXBlurView can't capture the animation unfortunately.\n. Disable blur and then set blurview.layer.contents = nil. That will hide the blurred contents temporarily, and it will come back when you re-enable blur.\n. not a bug, just the way that the tint colour is applied. I use additive instead of subtractive blending, so any colour + zero (black) == original colour.\n\nIf you overlay a black subview with partial transparency on top or inside the blur view, you should get the effect you wanted.\n. I'm unclear what the point of this is?\n. Did you read the section about ARC in the README.md file? Here it is:\n\n## ARC Compatibility\n\nAs of version 1.3, FXBlurView requires ARC. **If you wish to use FXBlurView in a non-ARC project, just add the -fobjc-arc compiler flag to the FXBlurView.m class. To do this, go to the Build Phases tab in your target settings, open the Compile Sources group, double-click FXBlurView.m in the list and type -fobjc-arc into the popover.**\n\nIf you wish to convert your whole project to ARC, comment out the #error line in FXBlurView.m, then run the Edit > Refactor > Convert to Objective-C ARC... tool in Xcode and make sure all files that you wish to use ARC for (including FXBlurView.m) are checked.\n. These should now be fixed in version 1.6. If you are still seeing them, please let me know.\n. Yep, rookie error on my part - thanks!\n. I already did - v 1.5.5 includes this fix.\n. You can blur an image using the UIImage category included with the library.\n. Oh, I see. The simplest option would just be to put your button or imageview inside an FXBlurView, with a transparent background for your button.\n\nFXBlurView doesn't work with camera input. For that you'll need to try something like GPUImage.\n. Hi, can you check if version 1.6 solves this problem for you? I made some changes to the capture offset logic.\n. Yeah, that's quite possible.There are various steps you can take to reduce this:\n- If the content behind the blur view doesn't change, set dynamic = NO\n- If the content changes only infrequently, increase the updateInterval to something like 0.1 (10 frames per second)\n- Try reducing the number of blue iterations and see if the quality is still acceptable\n- If the content behind is a scrollview, set dynamic = NO and use the scrollView delegate's didScroll method to update the blurView instead\n. Did you close this because you found a workaround, or because the problem wasn't related to blur view?\n. It doesn't improve performance. There is no fast path from screenshots -> OpenGL texture, so converting the image for use with GPUImage actually takes long than the blur function.\n. That seems likely. FXBlurView doesn't capture the presentationLayer, only the modelLayer, so any animations happening behind it are not correctly included.\n\nI have yet to find a workaround for this unfortunately. Trying to capture the presentationLayer leads to other bugs, such as content in front of the blurView appearing in the blurred image.\n. FXBurView is constantly creating images and releasing them. There's not really any way to avoid that, except by disabling dynamic mode.\n\nFor best performance, disable dynamic mode and only update the blur effect when the content behind it changes. If the content scrolls, the best way to do that is to update the blur from the scrollViewDidScroll delegate method.\n. You can achieve this by just adding a subview inside your blurview with a translucent background.\n. I would be surprised if you can detect any performance impact from adding that subview, and the rendering should actually be more efficient, since view background colours are composited on the GPU instead of using software drawing.\n. I'm going to need a little more information. Can you provide a stack trace from the crash? And also, if possible try to find out what the dimensions of the blurView were at the time to crashed.\n. Those should be the same, except when animating (which doesn't work in dynamic mode).\n. Yes, that's expected behaviour. FXBlurView only captures the contents of the view itself, not any colours showing through from the view behind.\n\nIf you set the underlyingView property of the FXBlurView to the view that contains your partially transparent view, it should solve the problem.\n. No. The FXBlurView has a property called \"underlyingView\". If this is nil, it defaults to the view containing the FXBlurView, however you can set this to a view of your choosing, including views that are not in the same hierarchy as the blur view.\n. It's just a property of the FXBlurView class. If you have an outlet to your blurView in your view controller, you'd just write:\n\n```\nself.myBlurView.underlyingView = someOtherView;\n```\n. You've most likely declared the outlet as being of type UIView \\* instead of FXBlurView *. Either change the outlet declaration to FXBlurView *, or cast the call, like this:\n\n```\n((FXBlurView *)self.Genres).underlyingView = _main_view;\n```\n. Maybe change the backgroundColor of _main_view to white?\n. FXBlurView doesn't work over camera output, or certain other cases (e.g. OpenGL views, SpriteKit, etc). This is an iOS limitation.\n. When you say it doesn't work, what is it doing, and what did you expect it to do?\n. I'm pretty sure that adding an observer creates a weak reference to the object, and doesn't prevent it from being deallocated.\n\nI'd be interested if you have any evidence to the contrary.\n. The trace doesn't mention NSNotificationCenter anywhere - also, that seems to be the trace for the allocations tab, not the leaks tab - are you sure it's FXBlurView that's leaking? (I'm not saying it isn't - just that that output doesn't seem to prove it).\n. Fixed in 1.6.2.\n. I already tried it. The performance is _much worse_ when using the new snapshot APIs.\n. It's because you are calling the animation immediately after inserting the subview. This is a known bug/feature in Core Animation that animations don't work if they are applied to a view before it has appeared on screen.\n\nThe workaround is to delay your animation by a single frame, which you can do like this:\n\n```\n_blurEffectView = [[FXBlurView alloc] initWithFrame:self.superview.bounds];\n_blurEffectView.tintColor = [UIColor colorWithRed:0.1 green:0.1 blue:0.1 alpha:1];\n[self.superview insertSubview:_blurEffectView belowSubview:self];\ndispatch_async(dispatch_get_main_queue(), ^{\n    [UIView animateWithDuration:0.5 animations:^{\n        _blurEffectView.blurRadius = 30;\n    }];\n})\n```\n\nYeah, it's a bit hacky, but hey, Objective-C ;-)\n. Fixed in 1.6.4\n. The performance will be horrible if you are trying to make each cell in your table into a separate blur view. The right way to do this is to make the cells transparent and put the blur view behind the table.\n. This is a known (documented) issue. The solution you've found will work, but the performance is slower for live updates.\n. It should be faster, but when I tried it I found that the performance with drawViewHierarchy was disastrously slow. I haven't tested it on iOS8 though, so it may have improved.\n. FXBlurView blurs its parent and siblings, not its child views.\n. This is hugely expensive. You're basically always capturing the full screen every time even if your blurview is only a few pixels in size.\n. Try capturing the screenshot using `-[UIView drawViewHierarchyInRect:afterScreenUpdates:]` instead.\n. \ud83d\udc4d. I think the problem is that FXBlurView hides subviews automatically when snapshotting, then re-shows them. I guess it should kee track of which ones were already hidden.\n. ",
    "CocoaPriest": "ah, thanks. Yeah, I saw the UIToolbar-solution, but we have to wait how Apple reacts to it\n. yeah, I know what you mean, I'll try it out. Thanks!\n. ah, thanks. Yeah, I saw the UIToolbar-solution, but we have to wait how Apple reacts to it\n. yeah, I know what you mean, I'll try it out. Thanks!\n. ",
    "xoob": "I was looking at this out of curiosity... Rather than setting this property during `viewDidLoad`, this patch sets it during `setUp`, and only if the property had not already been overwritten by the nib file.\n\nThis allows the property to be modified by the developer as needed and only sets a default.\n. Right. The idea came from `UIImageView` and `UILabel` which have user interaction disabled by default. Since the blur view is an accessory view that overlays other views, that default made sense to me.\n\n> **userInteractionEnabled**\n> This property is inherited from the UIView parent class. This class changes the default value of this property to `NO`.\n. I was looking at this out of curiosity... Rather than setting this property during `viewDidLoad`, this patch sets it during `setUp`, and only if the property had not already been overwritten by the nib file.\n\nThis allows the property to be modified by the developer as needed and only sets a default.\n. Right. The idea came from `UIImageView` and `UILabel` which have user interaction disabled by default. Since the blur view is an accessory view that overlays other views, that default made sense to me.\n\n> **userInteractionEnabled**\n> This property is inherited from the UIView parent class. This class changes the default value of this property to `NO`.\n. ",
    "parrots": "Additional notes for possible examples/docs. I believe Apple uses a saturation delta of +1.8 for their effects, and I've found that number to work very well. For tint colors I've found a color with an alpha value of ~0.82 works well for letting just the saturated colors show through, while keeping the rest of the view looking close to it's normal color.\n. Sorry for the update - switched away from using TintColor property as that will have unintended side effects (it was a nomenclature from the UIImageEffects example from Apple).\n\nSeems like the normal use case will be to have the background color as the \"overlay tint\" color. Changed code to allow the user to specify an alpha, and pulls the color from the existing BG color. Will default to alpha of 0, so effect looks unchanged from your original code unless they override.\n. One thing I noticed while I was playing with iOS7's new snapshotting API to get a blur view of my own - it was really helpful to be able to manually tweak the alpha component. It looks like 1.3 assumes a specific alpha which is in the ballpark of a generally good value, but the option is nice.\n\nI think it was a huge mistake on my part to call the property tint color, as iOS7 uses that to mean something very specific. What we're really talking about here is the backgroundColor. You could have a BG of white and a tint color of blue (since the tint color is inherited by children). Whichever implementation you go with, I'd strongly recommend moving away from naming it tint color at least.\n\n(I think apple called it tint color in their example because they were working with a UIImage category, and in UIImage in iOS7 tint color applies to a tint applied to the image itself. But since we're talking UIViews here it might not work as well)\n\nI think overall using the UIView's background color, and letting the user set a desired alpha, works well because it's still just one property in the API but gives a lot more flexibility. Plus if you want to disable effects on older hardware you can just set alpha to 1 and iterations to 0. (Apple has been disabling blur on iPhone 4, so I have my app do the same so it looks like the rest of the OS)\n. Additional notes for possible examples/docs. I believe Apple uses a saturation delta of +1.8 for their effects, and I've found that number to work very well. For tint colors I've found a color with an alpha value of ~0.82 works well for letting just the saturated colors show through, while keeping the rest of the view looking close to it's normal color.\n. Sorry for the update - switched away from using TintColor property as that will have unintended side effects (it was a nomenclature from the UIImageEffects example from Apple).\n\nSeems like the normal use case will be to have the background color as the \"overlay tint\" color. Changed code to allow the user to specify an alpha, and pulls the color from the existing BG color. Will default to alpha of 0, so effect looks unchanged from your original code unless they override.\n. One thing I noticed while I was playing with iOS7's new snapshotting API to get a blur view of my own - it was really helpful to be able to manually tweak the alpha component. It looks like 1.3 assumes a specific alpha which is in the ballpark of a generally good value, but the option is nice.\n\nI think it was a huge mistake on my part to call the property tint color, as iOS7 uses that to mean something very specific. What we're really talking about here is the backgroundColor. You could have a BG of white and a tint color of blue (since the tint color is inherited by children). Whichever implementation you go with, I'd strongly recommend moving away from naming it tint color at least.\n\n(I think apple called it tint color in their example because they were working with a UIImage category, and in UIImage in iOS7 tint color applies to a tint applied to the image itself. But since we're talking UIViews here it might not work as well)\n\nI think overall using the UIView's background color, and letting the user set a desired alpha, works well because it's still just one property in the API but gives a lot more flexibility. Plus if you want to disable effects on older hardware you can just set alpha to 1 and iterations to 0. (Apple has been disabling blur on iPhone 4, so I have my app do the same so it looks like the rest of the OS)\n. ",
    "fonkadelic": "I really like the suggestions from @parrots for fine tuning the blur effect. The implementation of tintColor was a good start, but a few more tweaking options would be cool.\n\nIn my fork (https://github.com/fonkadelic/FXBlurView/compare/nicklockwood:master...master) i've added the ability to change the blend mode for tintColor. I've also created a new class, which specifies the different manipulation options. Mainly to avoid clutter.\n@nicklockwood If you think it's useful, i can open a PR.\n. I really like the suggestions from @parrots for fine tuning the blur effect. The implementation of tintColor was a good start, but a few more tweaking options would be cool.\n\nIn my fork (https://github.com/fonkadelic/FXBlurView/compare/nicklockwood:master...master) i've added the ability to change the blend mode for tintColor. I've also created a new class, which specifies the different manipulation options. Mainly to avoid clutter.\n@nicklockwood If you think it's useful, i can open a PR.\n. ",
    "mgcm": "ignore this for now, as it only works in the simulator. trying to figure out why it fails on a device.\n. ignore this for now, as it only works in the simulator. trying to figure out why it fails on a device.\n. ",
    "ivanbruel": "I'm having the same issue testing this on an iPad Mini with iOS 7.0.3.\nself.blurView.blurEnabled = YES;\nself.blurView.dynamic = NO;\nself.blurView.tintColor = [UIColor colorWithWhite:1 alpha:1];\nThese are the settings I'm working with.\n. I'm having the same issue testing this on an iPad Mini with iOS 7.0.3.\nself.blurView.blurEnabled = YES;\nself.blurView.dynamic = NO;\nself.blurView.tintColor = [UIColor colorWithWhite:1 alpha:1];\nThese are the settings I'm working with.\n. ",
    "ldesroziers": "If it helps, seems like -snapshotOfSuperview: is responsible of this bug. But as i'm currently using the SDK 7.0b, it may comes from the SDK itself and the -renderInContext: method...\n. I don't think it's the problem (I mean, you clearly have fixed it). This log shows every time I scroll (and thus every time the blurView is updated) and I got only 2 blurView above that scrollView, both have a non-zero size.\nOnce I remove them from screen, no more logs appear.\n. Gonna try :-)\n. God dammit, you were right ! I tried to reproduce it on a new project.. First, there were no bug because I instanciated the blurView with a clearly defined frame. And then I tried to instanciate it with CGRectZero, and boom!\nAnd forget what I said about the continuous logs while scrolling: logs only appear once.\n. Nick, I'm still having an issue with zero-sized blurView.\nIn fact, your test seems to only 'work' if both width & height are empty. In my case, the height is never empty (because it's a navbar-like and the height is a static value), but the width depends of the superview (the rootViewController's view of my window), and unfortunately it's 0 when I start my app.\n. Well, I tried to put a MAX() for the width like that:\n    CGRect filtersViewFrame = CGRectMake(0, 0, MAX(CGRectGetWidth([[self view] bounds]),1), [[self filtersView] sizeThatFits:CGSizeZero].height);\n\nAnd I no longer get warnings. Putting back CGRectGetWidth([[self view] bounds]) brings up warnings again. :/\n. It's OK:) Thank you very much!\n. If it helps, seems like -snapshotOfSuperview: is responsible of this bug. But as i'm currently using the SDK 7.0b, it may comes from the SDK itself and the -renderInContext: method...\n. I don't think it's the problem (I mean, you clearly have fixed it). This log shows every time I scroll (and thus every time the blurView is updated) and I got only 2 blurView above that scrollView, both have a non-zero size.\nOnce I remove them from screen, no more logs appear.\n. Gonna try :-)\n. God dammit, you were right ! I tried to reproduce it on a new project.. First, there were no bug because I instanciated the blurView with a clearly defined frame. And then I tried to instanciate it with CGRectZero, and boom!\nAnd forget what I said about the continuous logs while scrolling: logs only appear once.\n. Nick, I'm still having an issue with zero-sized blurView.\nIn fact, your test seems to only 'work' if both width & height are empty. In my case, the height is never empty (because it's a navbar-like and the height is a static value), but the width depends of the superview (the rootViewController's view of my window), and unfortunately it's 0 when I start my app.\n. Well, I tried to put a MAX() for the width like that:\n    CGRect filtersViewFrame = CGRectMake(0, 0, MAX(CGRectGetWidth([[self view] bounds]),1), [[self filtersView] sizeThatFits:CGSizeZero].height);\n\nAnd I no longer get warnings. Putting back CGRectGetWidth([[self view] bounds]) brings up warnings again. :/\n. It's OK:) Thank you very much!\n. ",
    "jhollida24": "I'm still seeing this error:\n\n```\nthread #1: tid = 0xe049, 0x000000018506be28 CoreGraphics`CGPostError, queue = 'com.apple.main-thread', stop reason = breakpoint 2.1\nframe #0: 0x000000018506be28 CoreGraphics`CGPostError\nframe #1: 0x000000018506be1c CoreGraphics`handle_invalid_context + 28\nframe #2: 0x0000000187b9a8d8 QuartzCore`-[CALayer renderInContext:] + 380\nframe #3: 0x0000000100479848 Brainscape`-[FXBlurView snapshotOfUnderlyingView](self=0x00000001781e1000, _cmd=0x00000001005b0bf8) + 1584 at FXBlurView.m:468\nframe #4: 0x000000010047a090 Brainscape`-[FXBlurView updateAsynchronously:completion:](self=0x00000001781e1000, _cmd=0x00000001005b0a0a, async=true, completion=0x000000016fd6c2e8) + 104 at FXBlurView.m:525\nframe #5: 0x0000000100477c48 Brainscape`-[FXBlurScheduler updateAsynchronously](self=0x0000000170255630, _cmd=0x00000001005b0961) + 1404 at FXBlurView.m:232\nframe #6: 0x0000000100477544 Brainscape`-[FXBlurScheduler addView:](self=0x0000000170255630, _cmd=0x0000000188f92d16, view=0x00000001781e1000) + 244 at FXBlurView.m:198\nframe #7: 0x0000000100478ebc Brainscape`-[FXBlurView schedule](self=0x00000001781e1000, _cmd=0x00000001895e21e6) + 252 at FXBlurView.m:400\nframe #8: 0x0000000100478db4 Brainscape`-[FXBlurView didMoveToWindow](self=0x00000001781e1000, _cmd=0x0000000188630136) + 92 at FXBlurView.m:393\n```\n. Can you tag a release and sent it to the cocoapods spec repo? That would be helpful for us, so we can point back at cocoapods spec repo instead of my forked repo.\n\nThanks again for an awesome library!\n\n-Jeff\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Mar 11, 2014 at 2:30 AM, Nick Lockwood notifications@github.com\nwrote:\n\n> ## Yep, rookie error on my part - thanks!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/nicklockwood/FXBlurView/pull/45#issuecomment-37276831\n. Awesome. Thank you.\u2014\nSent from Mailbox for iPad\n\nOn Sat, Mar 15, 2014 at 3:33 PM, Nick Lockwood notifications@github.com\nwrote:\n\n> ## I already did - v 1.5.5 includes this fix.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/nicklockwood/FXBlurView/pull/45#issuecomment-37740051\n. I'm still seeing this error:\n\n```\nthread #1: tid = 0xe049, 0x000000018506be28 CoreGraphics`CGPostError, queue = 'com.apple.main-thread', stop reason = breakpoint 2.1\nframe #0: 0x000000018506be28 CoreGraphics`CGPostError\nframe #1: 0x000000018506be1c CoreGraphics`handle_invalid_context + 28\nframe #2: 0x0000000187b9a8d8 QuartzCore`-[CALayer renderInContext:] + 380\nframe #3: 0x0000000100479848 Brainscape`-[FXBlurView snapshotOfUnderlyingView](self=0x00000001781e1000, _cmd=0x00000001005b0bf8) + 1584 at FXBlurView.m:468\nframe #4: 0x000000010047a090 Brainscape`-[FXBlurView updateAsynchronously:completion:](self=0x00000001781e1000, _cmd=0x00000001005b0a0a, async=true, completion=0x000000016fd6c2e8) + 104 at FXBlurView.m:525\nframe #5: 0x0000000100477c48 Brainscape`-[FXBlurScheduler updateAsynchronously](self=0x0000000170255630, _cmd=0x00000001005b0961) + 1404 at FXBlurView.m:232\nframe #6: 0x0000000100477544 Brainscape`-[FXBlurScheduler addView:](self=0x0000000170255630, _cmd=0x0000000188f92d16, view=0x00000001781e1000) + 244 at FXBlurView.m:198\nframe #7: 0x0000000100478ebc Brainscape`-[FXBlurView schedule](self=0x00000001781e1000, _cmd=0x00000001895e21e6) + 252 at FXBlurView.m:400\nframe #8: 0x0000000100478db4 Brainscape`-[FXBlurView didMoveToWindow](self=0x00000001781e1000, _cmd=0x0000000188630136) + 92 at FXBlurView.m:393\n```\n. Can you tag a release and sent it to the cocoapods spec repo? That would be helpful for us, so we can point back at cocoapods spec repo instead of my forked repo.\n\nThanks again for an awesome library!\n\n-Jeff\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Mar 11, 2014 at 2:30 AM, Nick Lockwood notifications@github.com\nwrote:\n\n> ## Yep, rookie error on my part - thanks!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/nicklockwood/FXBlurView/pull/45#issuecomment-37276831\n. Awesome. Thank you.\u2014\nSent from Mailbox for iPad\n\nOn Sat, Mar 15, 2014 at 3:33 PM, Nick Lockwood notifications@github.com\nwrote:\n\n> ## I already did - v 1.5.5 includes this fix.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/nicklockwood/FXBlurView/pull/45#issuecomment-37740051\n. ",
    "isair": "This error happens to me on orientation change and causes my app to crash. I have an FXBlurView inside a UITableViewCell.\n. The whole application freezes up but doesn't literally crash actually. It might just be the UI that becomes non-responsive. I will do a more detailed test on it. Before this happens the output in the console is as follows:\n\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextTranslateCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetFillColorWithColor: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawPath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextMoveToPoint: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClosePath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: clip: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetStrokeColorWithColor: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetLineWidth: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextMoveToPoint: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClosePath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawPath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetStyle: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextBeginTransparencyLayerWithRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawImage: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextEndTransparencyLayer: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n. This error happens to me on orientation change and causes my app to crash. I have an FXBlurView inside a UITableViewCell.\n. The whole application freezes up but doesn't literally crash actually. It might just be the UI that becomes non-responsive. I will do a more detailed test on it. Before this happens the output in the console is as follows:\n\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextTranslateCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetFillColorWithColor: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawPath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextMoveToPoint: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClosePath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: clip: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetStrokeColorWithColor: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetLineWidth: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextMoveToPoint: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextAddArc: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClosePath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawPath: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetStyle: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextBeginTransparencyLayerWithRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextDrawImage: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextEndTransparencyLayer: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\nApr 27 18:05:39 Barss-iPad MovieLaLa[3901] <Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n. ",
    "peoplecallmefrancois": "Thanks for the help I appreciate it. I actually refactored my code to get it to work in the sense that, I had placeholder images, I just used to set them to nil when the video is fully downloaded, now I keep the images, and it works. Although it might take a minor performance hit. Thanks for the help! This is a great library for iOS 7.\n. Thanks for the help I appreciate it. I actually refactored my code to get it to work in the sense that, I had placeholder images, I just used to set them to nil when the video is fully downloaded, now I keep the images, and it works. Although it might take a minor performance hit. Thanks for the help! This is a great library for iOS 7.\n. ",
    "mobitar": "This really should have been somewhere in the readme. I spent an hour trying to get it to work, only to realize it's not even possible.\n. This really should have been somewhere in the readme. I spent an hour trying to get it to work, only to realize it's not even possible.\n. ",
    "EvgenyKarkan": "Hey @mobitar, how did you solve your issue?\n. Hi @nicklockwood \nThanks for the v1.6.4 release\nDoes it provide solution to blur AVPlayer content?\n. @tejas-ardeshna last release was 2 years ago, so I guess no. . Since iOS 8 it is possible with UIVisualEffectView. \nBut it is not so good in customisation - e.g blur radius. \n. @cuichunjian why don't you close this issue?\n. So close it =) \n. Oh, man, why you opened an issue and didn't test before?\n. Any updates on that?\n. Hey @mobitar, how did you solve your issue?\n. Hi @nicklockwood \nThanks for the v1.6.4 release\nDoes it provide solution to blur AVPlayer content?\n. @tejas-ardeshna last release was 2 years ago, so I guess no. . Since iOS 8 it is possible with UIVisualEffectView. \nBut it is not so good in customisation - e.g blur radius. \n. @cuichunjian why don't you close this issue?\n. So close it =) \n. Oh, man, why you opened an issue and didn't test before?\n. Any updates on that?\n. ",
    "cisclub": "I tried it with AVPlayer but it doesn't seem to work. I used the following code\n\n```\n    FXBlurView *blurrView = [[FXBlurView alloc] initWithFrame:self.view.bounds];\n    [blurrView setBlurEnabled:YES];\n    [self.view addSubview:blurrView];\n```\n\nIs there any special configuration for AVPlayer ?\n. I tried it with AVPlayer but it doesn't seem to work. I used the following code\n\n```\n    FXBlurView *blurrView = [[FXBlurView alloc] initWithFrame:self.view.bounds];\n    [blurrView setBlurEnabled:YES];\n    [self.view addSubview:blurrView];\n```\n\nIs there any special configuration for AVPlayer ?\n. ",
    "tejas-ardeshna": "@nicklockwood  Is this possible now?. @nicklockwood  Is this possible now?. ",
    "Haifisch": "This appears to still be an issue.\n. This appears to still be an issue.\n. ",
    "ArturGasparyan": "Awesome!\n. Awesome!\n. ",
    "MobileVet": "Ran into this when trying to move an entire FXBlurView over top of a background (a drawer slide out).  Would definitely be nice if FXBlurView supported being pushed around using [UIView animateWith...] blocks.\n. Ran into this when trying to move an entire FXBlurView over top of a background (a drawer slide out).  Would definitely be nice if FXBlurView supported being pushed around using [UIView animateWith...] blocks.\n. ",
    "AnthonyMyatt": "Thanks Nick. Would be fantastic. I might take a look at it and see if I can come up with anything.\nLet me know if you work something out first.\n\nFantastic job by the way, performance is fantastic compared to a few other solutions I have looked at.\n. I've come up with the following solution. It works and doesn't appear to impact overall performance since it's only rendering the required number of pixels to get the color average for the specified rect.\n\nPlease let me know what you think.\n\n``` objective-c\n@implementation UIView (FXBlurView)\n\n- (UIColor *) colorAverageForRect:(CGRect)rect\n{\n    int red   = 0;\n    int green = 0;\n    int blue  = 0;\n\n    int count = 0;\n\n    int width  = rect.size.width;\n    int height = rect.size.height;\n\n    int bitsPerComponent = 8;\n    int bytesPerRow = 4 * width;\n\n    unsigned char pixels[bytesPerRow*height];\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    CGContextRef context = CGBitmapContextCreate(pixels, width, height, bitsPerComponent, bytesPerRow, colorSpace, kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGContextTranslateCTM(context, -rect.origin.x, -rect.origin.y);\n\n    [self.layer renderInContext:context];\n\n    CGContextRelease(context);\n    CGColorSpaceRelease(colorSpace);\n\n    for (int x = 0; x < width; x++)\n    {\n        for (int y = 0; y < height; y++)\n        {\n            int pixel_y = y*(bytesPerRow);\n            int pixel_x = x*4;\n\n            red += pixels[ pixel_y + pixel_x ];\n            green += pixels[ pixel_y + pixel_x + 1];\n            blue += pixels[ pixel_y + pixel_x + 2];\n\n            count++;\n        }\n    }\n\n    red /= count;\n    green /= count;\n    blue /= count;\n\n    return [UIColor colorWithRed:red/255.0f green:green/255.0f blue:blue/255.0f alpha:1.0f];\n}\n\n- (UIColor *) contrastingTextColorForRect:(CGRect)rect\n{\n    UIColor *averageBackColor = [self colorAverageForRect:rect];\n\n    const CGFloat *componentColors = CGColorGetComponents(averageBackColor.CGColor);\n\n    CGFloat colorBrightness = ((componentColors[0] * 299) +\n                               (componentColors[1] * 587) +\n                               (componentColors[2] * 114)) / 1000;\n    if (colorBrightness < 0.5)\n    {\n        return [UIColor whiteColor];\n    }\n    else\n    {\n        return [UIColor blackColor];\n    }\n}\n\n@end\n```\n. Or a colored version:\n\n``` objective-c\n- (UIColor *) contrastingTextColorForRect:(CGRect)rect\n{\n    UIColor *averageBackColor = [self colorAverageForRect:rect];\n\n    CGColorRef oldCGColor = averageBackColor.CGColor;\n\n    size_t numberOfComponents = CGColorGetNumberOfComponents(oldCGColor);\n\n    // can not invert - the only component is the alpha\n    // e.g. self == [UIColor groupTableViewBackgroundColor]\n    if (numberOfComponents == 1) {\n        return [UIColor colorWithCGColor:oldCGColor];\n    }\n\n    const CGFloat *oldComponentColors = CGColorGetComponents(oldCGColor);\n    CGFloat newComponentColors[numberOfComponents];\n\n    int i = (int)numberOfComponents - 1;\n    newComponentColors[i] = oldComponentColors[i]; // alpha\n    while (--i >= 0) {\n        newComponentColors[i] = 1 - oldComponentColors[i];\n    }\n\n    CGColorRef newCGColor = CGColorCreate(CGColorGetColorSpace(oldCGColor), newComponentColors);\n    UIColor *newColor = [UIColor colorWithCGColor:newCGColor];\n    CGColorRelease(newCGColor);\n\n    return newColor;\n}\n```\n. Thanks Nick. Would be fantastic. I might take a look at it and see if I can come up with anything.\nLet me know if you work something out first.\n\nFantastic job by the way, performance is fantastic compared to a few other solutions I have looked at.\n. I've come up with the following solution. It works and doesn't appear to impact overall performance since it's only rendering the required number of pixels to get the color average for the specified rect.\n\nPlease let me know what you think.\n\n``` objective-c\n@implementation UIView (FXBlurView)\n\n- (UIColor *) colorAverageForRect:(CGRect)rect\n{\n    int red   = 0;\n    int green = 0;\n    int blue  = 0;\n\n    int count = 0;\n\n    int width  = rect.size.width;\n    int height = rect.size.height;\n\n    int bitsPerComponent = 8;\n    int bytesPerRow = 4 * width;\n\n    unsigned char pixels[bytesPerRow*height];\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    CGContextRef context = CGBitmapContextCreate(pixels, width, height, bitsPerComponent, bytesPerRow, colorSpace, kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);\n\n    CGContextTranslateCTM(context, -rect.origin.x, -rect.origin.y);\n\n    [self.layer renderInContext:context];\n\n    CGContextRelease(context);\n    CGColorSpaceRelease(colorSpace);\n\n    for (int x = 0; x < width; x++)\n    {\n        for (int y = 0; y < height; y++)\n        {\n            int pixel_y = y*(bytesPerRow);\n            int pixel_x = x*4;\n\n            red += pixels[ pixel_y + pixel_x ];\n            green += pixels[ pixel_y + pixel_x + 1];\n            blue += pixels[ pixel_y + pixel_x + 2];\n\n            count++;\n        }\n    }\n\n    red /= count;\n    green /= count;\n    blue /= count;\n\n    return [UIColor colorWithRed:red/255.0f green:green/255.0f blue:blue/255.0f alpha:1.0f];\n}\n\n- (UIColor *) contrastingTextColorForRect:(CGRect)rect\n{\n    UIColor *averageBackColor = [self colorAverageForRect:rect];\n\n    const CGFloat *componentColors = CGColorGetComponents(averageBackColor.CGColor);\n\n    CGFloat colorBrightness = ((componentColors[0] * 299) +\n                               (componentColors[1] * 587) +\n                               (componentColors[2] * 114)) / 1000;\n    if (colorBrightness < 0.5)\n    {\n        return [UIColor whiteColor];\n    }\n    else\n    {\n        return [UIColor blackColor];\n    }\n}\n\n@end\n```\n. Or a colored version:\n\n``` objective-c\n- (UIColor *) contrastingTextColorForRect:(CGRect)rect\n{\n    UIColor *averageBackColor = [self colorAverageForRect:rect];\n\n    CGColorRef oldCGColor = averageBackColor.CGColor;\n\n    size_t numberOfComponents = CGColorGetNumberOfComponents(oldCGColor);\n\n    // can not invert - the only component is the alpha\n    // e.g. self == [UIColor groupTableViewBackgroundColor]\n    if (numberOfComponents == 1) {\n        return [UIColor colorWithCGColor:oldCGColor];\n    }\n\n    const CGFloat *oldComponentColors = CGColorGetComponents(oldCGColor);\n    CGFloat newComponentColors[numberOfComponents];\n\n    int i = (int)numberOfComponents - 1;\n    newComponentColors[i] = oldComponentColors[i]; // alpha\n    while (--i >= 0) {\n        newComponentColors[i] = 1 - oldComponentColors[i];\n    }\n\n    CGColorRef newCGColor = CGColorCreate(CGColorGetColorSpace(oldCGColor), newComponentColors);\n    UIColor *newColor = [UIColor colorWithCGColor:newCGColor];\n    CGColorRelease(newCGColor);\n\n    return newColor;\n}\n```\n. ",
    "luisobo": "@nicklockwood Awesome. Are you updating the podspec in the Specs repo? I'll be happy to do it.\n. jeez, so fast. Thanks Nick.\n. @nicklockwood still and issue. I submitted [a PR](https://github.com/nicklockwood/FXBlurView/pull/17) that fixes the problem. \n. @nicklockwood Awesome. Are you updating the podspec in the Specs repo? I'll be happy to do it.\n. jeez, so fast. Thanks Nick.\n. @nicklockwood still and issue. I submitted [a PR](https://github.com/nicklockwood/FXBlurView/pull/17) that fixes the problem. \n. ",
    "tplessis": "Works great! Thanks!\n. Works great! Thanks!\n. ",
    "mathiasAichinger": "Yes, works great! Thank you! :)\n. This issue also happened when I used a scrollView and the ScrollView delegate methods!\n. Yes, works great! Thank you! :)\n. This issue also happened when I used a scrollView and the ScrollView delegate methods!\n. ",
    "MrZoidberg": "Hi! Are you going to merge this pull request?\n. Hi! Are you going to merge this pull request?\n. ",
    "jatindhawan": "Is there a specific reason for why wouldn't it work on scrollview because it is working with dynamic  = YES......I just had to switch it off because of low performance. I am trying to do it by the way you are suggested but it makes it more complicated.\n\nAny idea on how this can be implemented on a UITableView....that would be awesome!\n. Is there a specific reason for why wouldn't it work on scrollview because it is working with dynamic  = YES......I just had to switch it off because of low performance. I am trying to do it by the way you are suggested but it makes it more complicated.\n\nAny idea on how this can be implemented on a UITableView....that would be awesome!\n. ",
    "egold": "D'oh, can't believe I missed that. Thanks for the pointers!\n. D'oh, can't believe I missed that. Thanks for the pointers!\n. ",
    "hashemp206": "I want to add drop shadow to FXBlurView but setting masks to bounds clips drop shadow!! what to do? disabling masks to bounds result in view without any corner radius!!\n. if I set masksToBounds= YES  then corner radius will be ignored. would you send a shot?\n. I want to add drop shadow to FXBlurView but setting masks to bounds clips drop shadow!! what to do? disabling masks to bounds result in view without any corner radius!!\n. if I set masksToBounds= YES  then corner radius will be ignored. would you send a shot?\n. ",
    "rhodgkins": "Hi,\n\nI'm afraid it can't. If you pull out the iOS 6 SDK from Xcode 4.6 and put it into Xcode 5 it does not compile as the 6 SDK doesn't know about the UIView tintColor method.\nIt can be compiled against the iOS 7 SDK and run on iOS 6 fine - this isn't the same thing as the above obviously!\n\nCheers,\n\nRich\n. Just to add, I'd like this added/re-opened as I'm currently using it in an app that I want to compile against iOS 6 and at the moment I haven't got the time to fix the few iOS 7 UI issues.\n. Thanks! :)\n. Hi,\n\nI'm afraid it can't. If you pull out the iOS 6 SDK from Xcode 4.6 and put it into Xcode 5 it does not compile as the 6 SDK doesn't know about the UIView tintColor method.\nIt can be compiled against the iOS 7 SDK and run on iOS 6 fine - this isn't the same thing as the above obviously!\n\nCheers,\n\nRich\n. Just to add, I'd like this added/re-opened as I'm currently using it in an app that I want to compile against iOS 6 and at the moment I haven't got the time to fix the few iOS 7 UI issues.\n. Thanks! :)\n. ",
    "socksz": "@tleavy86 I have a UINavigationController that contains one UIViewController. Inside this controller there's a button that when the user taps on it the navigation controller adds a child view controller inside itself. Something like this:\n\n```\n- (IBAction)buttonTapped:(id)sender\n{\n    ModalViewController *modalVC = [self.storyboard instantiateViewControllerWithIdentifier:@\"ModalVC\"];\n    [self.navigationController addChildViewController:modalVC];\n    [self.navigationController.view addSubview:modalVC.view];\n    [modalVC didMoveToParentViewController:self.navigationController];\n}\n```\n\nModalViewController is a simple view controller with a container FXBlurView inside the main view.\nThe problem is that when `modalVC`'s view is pushed above `navigationController`'s view the view is not blurred and I can't figure out how to solve.\n\nDoes the lib support this kind of containment controllers?\n. Thanks tleavy86, underlyingView did the trick!\n. @tleavy86 I have a UINavigationController that contains one UIViewController. Inside this controller there's a button that when the user taps on it the navigation controller adds a child view controller inside itself. Something like this:\n\n```\n- (IBAction)buttonTapped:(id)sender\n{\n    ModalViewController *modalVC = [self.storyboard instantiateViewControllerWithIdentifier:@\"ModalVC\"];\n    [self.navigationController addChildViewController:modalVC];\n    [self.navigationController.view addSubview:modalVC.view];\n    [modalVC didMoveToParentViewController:self.navigationController];\n}\n```\n\nModalViewController is a simple view controller with a container FXBlurView inside the main view.\nThe problem is that when `modalVC`'s view is pushed above `navigationController`'s view the view is not blurred and I can't figure out how to solve.\n\nDoes the lib support this kind of containment controllers?\n. Thanks tleavy86, underlyingView did the trick!\n. ",
    "tomleavy": "Take a look at change I proposed here. You can see that I added an underlying view property. I have not tested in the exact situation you have mentioned but in theory you can set the underlyingView property of your blur view to the parent's view controller view to achieve the effect you describe.\n. Take a look at change I proposed here. You can see that I added an underlying view property. I have not tested in the exact situation you have mentioned but in theory you can set the underlyingView property of your blur view to the parent's view controller view to achieve the effect you describe.\n. ",
    "lluisgerard": "@tleavy86 I had the same issue and solved it with the underlyingView parameter :) :+1: \n\nI was trying to mimic the behavior that I've seen in an app named \"Jukely\" but then I realized that they open an image in fullscreen and then they add the viewcontroller on top of it. Really neat effects and animations in this app, if you want to check it and get inspired :)\n. @tleavy86 I had the same issue and solved it with the underlyingView parameter :) :+1: \n\nI was trying to mimic the behavior that I've seen in an app named \"Jukely\" but then I realized that they open an image in fullscreen and then they add the viewcontroller on top of it. Really neat effects and animations in this app, if you want to check it and get inspired :)\n. ",
    "gregpardo": "I am having this problem. My app is running in landscape mode. I have an FLBlurView as the base view in my modal controller that I am launching from a first view controller. It works but the orientation of view of the first view controller comes back wrong and gets displayed rotated 90 degrees counter clockwise.\n\nI do this...\n\n```\nSomeViewController *vc = [[SomeViewController alloc] init];\n\nself.modalPresentationStyle = UIModalPresentationCurrentContext;\n\n[self presentViewController:vc animated:NO completion:^{\n    [vc setUnderlyingView:self.view];\n}];\n```\n. I am having this problem. My app is running in landscape mode. I have an FLBlurView as the base view in my modal controller that I am launching from a first view controller. It works but the orientation of view of the first view controller comes back wrong and gets displayed rotated 90 degrees counter clockwise.\n\nI do this...\n\n```\nSomeViewController *vc = [[SomeViewController alloc] init];\n\nself.modalPresentationStyle = UIModalPresentationCurrentContext;\n\n[self presentViewController:vc animated:NO completion:^{\n    [vc setUnderlyingView:self.view];\n}];\n```\n. ",
    "toco": "This is an issue of CGDataproviderCopyData\nhttp://openradar.appspot.com/15195959\n. @nicklockwood I found this bug when using your UIImage blur category.\nMy workaround is to \"deep copy\" the image before blurring it, I don't know how it can be applied to FXBlurView but there should be a possibility.\n\n``` objc\n- (instancetype)ssi_deepCopy {\n    UIImage *imageToCopy = self;\n    UIGraphicsBeginImageContext(imageToCopy.size);\n    [imageToCopy drawInRect:CGRectMake(0, 0, imageToCopy.size.width, imageToCopy.size.height)];\n    UIImage *copiedImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    return copiedImage;\n}\n```\n. Regarding the UIToolbar trick:\nI think of it as an hack and one should be really careful when modifying the view hierarchy of framework components. Then again it disables blur on older devices and also respects the accessibility settings for free. So the performance impact of live-blurring does not happen on old devices, which is a good thing and system-wide consistent.\nDoes anybody know the (private) API which decides whether or not blurring is enabled?\n\nApple told at the WWDC that they trick a lot with 'live' blurring for performance.\nSadly I don't remember the exact example and session, but when showing a sheet or something, they blur the whole background first and just show the visible part. When the view moves there is no need for new blurring, they just move pre-blurred view.\n. This is an issue of CGDataproviderCopyData\nhttp://openradar.appspot.com/15195959\n. @nicklockwood I found this bug when using your UIImage blur category.\nMy workaround is to \"deep copy\" the image before blurring it, I don't know how it can be applied to FXBlurView but there should be a possibility.\n\n``` objc\n- (instancetype)ssi_deepCopy {\n    UIImage *imageToCopy = self;\n    UIGraphicsBeginImageContext(imageToCopy.size);\n    [imageToCopy drawInRect:CGRectMake(0, 0, imageToCopy.size.width, imageToCopy.size.height)];\n    UIImage *copiedImage = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    return copiedImage;\n}\n```\n. Regarding the UIToolbar trick:\nI think of it as an hack and one should be really careful when modifying the view hierarchy of framework components. Then again it disables blur on older devices and also respects the accessibility settings for free. So the performance impact of live-blurring does not happen on old devices, which is a good thing and system-wide consistent.\nDoes anybody know the (private) API which decides whether or not blurring is enabled?\n\nApple told at the WWDC that they trick a lot with 'live' blurring for performance.\nSadly I don't remember the exact example and session, but when showing a sheet or something, they blur the whole background first and just show the visible part. When the view moves there is no need for new blurring, they just move pre-blurred view.\n. ",
    "alfiehanssen": "@nicklockwood, I did try that first and got some pretty odd results (grayscale tint, among other things) but may explore further. The big issue with using the Toolbar approach is that it appears tough (impossible?) to get a non-tinted blur (I want something that blurs what's behind it without tinting it opaque white or similar, see attached image). Regardless, your demo is awesome. \n\n![13c14cba-3857-11e3-9bc6-bb4c61b354f5](https://f.cloud.github.com/assets/991059/1367361/6f1eeb00-391d-11e3-89a3-e813a6fc25ec.gif)\n. btw @toco thanks for the quick and super direct/helpful radar link, nice to know the extent of what's happening here.\n. @nicklockwood, I did try that first and got some pretty odd results (grayscale tint, among other things) but may explore further. The big issue with using the Toolbar approach is that it appears tough (impossible?) to get a non-tinted blur (I want something that blurs what's behind it without tinting it opaque white or similar, see attached image). Regardless, your demo is awesome. \n\n![13c14cba-3857-11e3-9bc6-bb4c61b354f5](https://f.cloud.github.com/assets/991059/1367361/6f1eeb00-391d-11e3-89a3-e813a6fc25ec.gif)\n. btw @toco thanks for the quick and super direct/helpful radar link, nice to know the extent of what's happening here.\n. ",
    "ghost": "You might want to change my 1/30 to 1/60 (or smaller).\n. You might want to change my 1/30 to 1/60 (or smaller).\n. ",
    "tacMicah": "I apologise I should have mentioned that I tried that as well. When I do that the views aren't shown. It just puts the blur view over it and completely covers the elements not showing or blurring them at all.\n. Here is what the view looks like when it is on top\n\n![image](https://f.cloud.github.com/assets/5769860/1638236/5bb46f7e-5806-11e3-9eca-746f66425e81.png)\n\nIt just covers the elements.\n\nIB:\n\n![image](https://f.cloud.github.com/assets/5769860/1638249/eebe0dde-5806-11e3-99ea-68d6feeb2248.png)\n. Ahhh a foolish mistake on my part. Thanks a bunch for your help it works now.\n. I apologise I should have mentioned that I tried that as well. When I do that the views aren't shown. It just puts the blur view over it and completely covers the elements not showing or blurring them at all.\n. Here is what the view looks like when it is on top\n\n![image](https://f.cloud.github.com/assets/5769860/1638236/5bb46f7e-5806-11e3-9eca-746f66425e81.png)\n\nIt just covers the elements.\n\nIB:\n\n![image](https://f.cloud.github.com/assets/5769860/1638249/eebe0dde-5806-11e3-99ea-68d6feeb2248.png)\n. Ahhh a foolish mistake on my part. Thanks a bunch for your help it works now.\n. ",
    "paultran": "Just to let you know, this bug still happens on iOS 7.1. So I've had to use the suggested work around on setting setTranslucent:NO on the toolbar and navbars.\n. Just to let you know, this bug still happens on iOS 7.1. So I've had to use the suggested work around on setting setTranslucent:NO on the toolbar and navbars.\n. ",
    "jaumard": "Ok thanks a lot for your answer, so i will remove blur effect because i need some animations with UIView animation. \n. Ok thanks a lot for your answer, so i will remove blur effect because i need some animations with UIView animation. \n. ",
    "killmyrene": "Hi, I had the same issue as well and my case is that I had a image slideshow using the UIView animation with the FXBlurView on top of it. When slideshow animation happens the blur view doesn't get its blur updated during the image change\n\nAre you planning to implement this fix sometime in the future?\n. Hi, I had the same issue as well and my case is that I had a image slideshow using the UIView animation with the FXBlurView on top of it. When slideshow animation happens the blur view doesn't get its blur updated during the image change\n\nAre you planning to implement this fix sometime in the future?\n. ",
    "RuiAAPeres": "A quick replacement for the `UIView animateWithDuration`. On my case I have a `UIImageView` behind a FXBlurView:\n\n```\n- (void)startAnimating\n{\n    if (_displayLink) {\n        [_displayLink invalidate];\n    }\n    _displayLink = [CADisplayLink displayLinkWithTarget:self\n                                               selector:@selector(animate:)];\n\n    [_displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];\n}\n\n- (void)animate:(CADisplayLink *)sender\n{\n    CFTimeInterval duration = sender.duration;\n\n    self.imageView.frame = CGRectMake(0,  self.imageView.frame.origin.y + 800*duration, self.imageView.frame.size.width, self.imageView.frame.size.height);\n}\n```\n\nI am quite confident this can be abstracted to a Category\n. A quick replacement for the `UIView animateWithDuration`. On my case I have a `UIImageView` behind a FXBlurView:\n\n```\n- (void)startAnimating\n{\n    if (_displayLink) {\n        [_displayLink invalidate];\n    }\n    _displayLink = [CADisplayLink displayLinkWithTarget:self\n                                               selector:@selector(animate:)];\n\n    [_displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];\n}\n\n- (void)animate:(CADisplayLink *)sender\n{\n    CFTimeInterval duration = sender.duration;\n\n    self.imageView.frame = CGRectMake(0,  self.imageView.frame.origin.y + 800*duration, self.imageView.frame.size.width, self.imageView.frame.size.height);\n}\n```\n\nI am quite confident this can be abstracted to a Category\n. ",
    "vinioliveira": "As I suspected this won't work with animation so I decided to implement my own animation, as mentioned by @RuiAAPeres. Anyway thanks for clarify the flow. \n. As I suspected this won't work with animation so I decided to implement my own animation, as mentioned by @RuiAAPeres. Anyway thanks for clarify the flow. \n. ",
    "clayallsopp": "Heh, just saw #4 and https://github.com/fonkadelic/FXBlurView/compare/nicklockwood:master...master, guess I wasn't the first to have this idea.\n\nFWIW, I do think `alpha * 0.25` and `kCGBlendModePlusLighter` are great defaults, but it is prohibitive if you want to do something like darken your blur a la Rdio or Hotel Tonight.\n. Heh, just saw #4 and https://github.com/fonkadelic/FXBlurView/compare/nicklockwood:master...master, guess I wasn't the first to have this idea.\n\nFWIW, I do think `alpha * 0.25` and `kCGBlendModePlusLighter` are great defaults, but it is prohibitive if you want to do something like darken your blur a la Rdio or Hotel Tonight.\n. ",
    "nchrys": "I have the same problem! does anyone know some workaround?\n. I have the same problem! does anyone know some workaround?\n. ",
    "ogoldfinger": "me too\n. me too\n. ",
    "gresrun": "Here's my solution which converts non-ARGB8888 images into ARGB8888:\n\n``` Objective-C\n#import \"UIImage+Blur.h\"\n#import <Accelerate/Accelerate.h>\n#import <QuartzCore/QuartzCore.h>\n\n\n#pragma mark UIImage+Blur Implementation\n@implementation UIImage (Blur)\n\n- (UIImage *)blurredImageWithRadius:(CGFloat)radius iterations:(NSUInteger)iterations tintColor:(UIColor *)tintColor {\n    // Image must be nonzero size\n    if (floorf(self.size.width) * floorf(self.size.height) <= 0.0f) {\n        return self;\n    }\n    // Box size must be an odd integer\n    int boxSize = radius * self.scale;\n    if (boxSize % 2 == 0) {\n        boxSize++;\n    }\n    // Create image buffers\n    CGImageRef imageRef = self.CGImage;\n    // DEBUG\n//    CGBitmapInfo bitmapInfo = CGImageGetBitmapInfo(imageRef);\n//    CGImageAlphaInfo alphaInfo = CGImageGetAlphaInfo(imageRef);\n//    NSLog(@\"\\n\"\n//          \"CGImageGetHeight: %d\\n\"\n//          \"CGImageGetWidth:  %d\\n\"\n//          \"CGImageGetColorSpace: %@\\n\"\n//          \"CGImageGetBitsPerPixel:     %d\\n\"\n//          \"CGImageGetBitsPerComponent: %d\\n\"\n//          \"CGImageGetBytesPerRow:      %d\\n\"\n//          \"CGImageGetBitmapInfo: 0x%.8X\\n\"\n//          \"  kCGBitmapAlphaInfoMask     = %s\\n\"\n//          \"  kCGBitmapFloatComponents   = %s\\n\"\n//          \"  kCGBitmapByteOrderMask     = 0x%.8X\\n\"\n//          \"  kCGBitmapByteOrderDefault  = %s\\n\"\n//          \"  kCGBitmapByteOrder16Little = %s\\n\"\n//          \"  kCGBitmapByteOrder32Little = %s\\n\"\n//          \"  kCGBitmapByteOrder16Big    = %s\\n\"\n//          \"  kCGBitmapByteOrder32Big    = %s\\n\"\n//          \"CGImageGetAlphaInfo: 0x%.8X\\n\"\n//          \"  kCGImageAlphaNone               = %s\\n\"\n//          \"  kCGImageAlphaPremultipliedLast  = %s\\n\"\n//          \"  kCGImageAlphaPremultipliedFirst = %s\\n\"\n//          \"  kCGImageAlphaLast               = %s\\n\"\n//          \"  kCGImageAlphaFirst              = %s\\n\"\n//          \"  kCGImageAlphaNoneSkipLast       = %s\\n\"\n//          \"  kCGImageAlphaNoneSkipFirst      = %s\\n\"\n//          \"  kCGImageAlphaOnly               = %s\\n\",\n//          (int)CGImageGetWidth(imageRef),\n//          (int)CGImageGetHeight(imageRef),\n//          CGImageGetColorSpace(imageRef),\n//          (int)CGImageGetBitsPerPixel(imageRef),\n//          (int)CGImageGetBitsPerComponent(imageRef),\n//          (int)CGImageGetBytesPerRow(imageRef),\n//          (unsigned)bitmapInfo,\n//          (bitmapInfo & kCGBitmapAlphaInfoMask)     ? \"YES\" : \"NO\",\n//          (bitmapInfo & kCGBitmapFloatComponents)   ? \"YES\" : \"NO\",\n//          (bitmapInfo & kCGBitmapByteOrderMask),\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrderDefault)  ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder16Little) ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder32Little) ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder16Big)    ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder32Big)    ? \"YES\" : \"NO\",\n//          (unsigned)alphaInfo,\n//          (alphaInfo == kCGImageAlphaNone)               ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaPremultipliedLast)  ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaPremultipliedFirst) ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaLast)               ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaFirst)              ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaNoneSkipLast)       ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaNoneSkipFirst)      ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaOnly)               ? \"YES\" : \"NO\"\n//    );\n    // END DEBUG\n    if (![self isARGB8888:imageRef]) {\n        // Convert to ARGB if it isn't\n        NSLog(@\"Converting image to ARGB8888\");\n        CGContextRef ctx = [self createARGBBitmapContextFromImage:imageRef];\n        CGRect rect = {{0, 0}, {CGImageGetWidth(imageRef), CGImageGetHeight(imageRef)}};\n        // Draw the image to the bitmap context. Once we draw, the memory\n        // allocated for the context for rendering will then contain the\n        // raw image data in the desired color space and byte order\n        CGContextDrawImage(ctx, rect, imageRef);\n        imageRef = CGBitmapContextCreateImage(ctx);\n        CGContextRelease(ctx);\n    }\n    vImage_Buffer buffer1, buffer2;\n    buffer1.width = buffer2.width = CGImageGetWidth(imageRef);\n    buffer1.height = buffer2.height = CGImageGetHeight(imageRef);\n    buffer1.rowBytes = buffer2.rowBytes = CGImageGetBytesPerRow(imageRef);\n    CFIndex bytes = buffer1.rowBytes * buffer1.height;\n    buffer1.data = malloc(bytes);\n    buffer2.data = malloc(bytes);\n\n    // Create temp buffer\n    void *tempBuffer = malloc(vImageBoxConvolve_ARGB8888(&buffer1, &buffer2, NULL, 0, 0, boxSize, boxSize,\n                                                         NULL, kvImageEdgeExtend + kvImageGetTempBufferSize));\n\n    // Copy image data\n    CFDataRef dataSource = CGDataProviderCopyData(CGImageGetDataProvider(imageRef));\n    memcpy(buffer1.data, CFDataGetBytePtr(dataSource), bytes);\n    CFRelease(dataSource);\n\n    for (int i = 0; i < iterations; i++) {\n        // Perform blur\n        vImageBoxConvolve_ARGB8888(&buffer1, &buffer2, tempBuffer, 0, 0, boxSize, boxSize, NULL, kvImageEdgeExtend);\n\n        // Swap buffers\n        void *temp = buffer1.data;\n        buffer1.data = buffer2.data;\n        buffer2.data = temp;\n    }\n\n    // Free buffers\n    free(buffer2.data);\n    free(tempBuffer);\n\n    // Create image context from buffer\n    CGContextRef ctx = CGBitmapContextCreate(buffer1.data, buffer1.width, buffer1.height,\n                                             8, buffer1.rowBytes, CGImageGetColorSpace(imageRef),\n                                             CGImageGetBitmapInfo(imageRef));\n\n    // Apply tint\n    if (tintColor && ![tintColor isEqual:[UIColor clearColor]]) {\n        CGContextSetFillColorWithColor(ctx, [tintColor colorWithAlphaComponent:0.25].CGColor);\n        CGContextSetBlendMode(ctx, kCGBlendModePlusLighter);\n        CGContextFillRect(ctx, CGRectMake(0, 0, buffer1.width, buffer1.height));\n    }\n\n    // Create image from context\n    imageRef = CGBitmapContextCreateImage(ctx);\n    UIImage *image = [UIImage imageWithCGImage:imageRef scale:self.scale orientation:self.imageOrientation];\n    CGImageRelease(imageRef);\n    CGContextRelease(ctx);\n    free(buffer1.data);\n\n    return image;\n}\n\n- (BOOL)isARGB8888:(CGImageRef)imageRef {\n    return (CGImageGetBitsPerPixel(imageRef) == 32\n            && CGImageGetBitsPerComponent(imageRef) == 8\n            && (CGImageGetBitmapInfo(imageRef) & kCGBitmapAlphaInfoMask));\n}\n\n- (CGContextRef)createARGBBitmapContextFromImage:(CGImageRef)inImage {\n    // Get image width, height. We'll use the entire image.\n    size_t pixelsWide = CGImageGetWidth(inImage);\n    size_t pixelsHigh = CGImageGetHeight(inImage);\n    // Declare the number of bytes per row. Each pixel in the bitmap in this\n    // example is represented by 4 bytes; 8 bits each of red, green, blue, and alpha.\n    int bitmapBytesPerRow = (pixelsWide * 4);\n    int bitmapByteCount = (bitmapBytesPerRow * pixelsHigh);\n    // Use the generic RGB color space.\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    if (colorSpace == NULL) {\n        NSLog(@\"Error allocating color space\");\n        return NULL;\n    }\n    // Allocate memory for image data. This is the destination in memory\n    // where any drawing to the bitmap context will be rendered.\n    void *bitmapData = malloc(bitmapByteCount);\n    if (bitmapData == NULL) {\n        NSLog(@\"Memory not allocated!\");\n        CGColorSpaceRelease(colorSpace);\n        return NULL;\n    }\n    // Create the bitmap context. We want pre-multiplied ARGB, 8-bits\n    // per component. Regardless of what the source image format is\n    // (CMYK, Grayscale, and so on) it will be converted over to the format\n    // specified here by CGBitmapContextCreate.\n    CGContextRef context = CGBitmapContextCreate(bitmapData,\n                                     pixelsWide,\n                                     pixelsHigh,\n                                     8,      // bits per component\n                                     bitmapBytesPerRow,\n                                     colorSpace,\n                                     (CGBitmapInfo) kCGImageAlphaPremultipliedFirst);\n    if (context == NULL) {\n        free(bitmapData);\n        NSLog(@\"Context not created!\");\n    }\n    // Make sure and release colorspace before returning\n    CGColorSpaceRelease(colorSpace);\n    return context;\n}\n\n@end\n```\n. Here's my solution which converts non-ARGB8888 images into ARGB8888:\n\n``` Objective-C\n#import \"UIImage+Blur.h\"\n#import <Accelerate/Accelerate.h>\n#import <QuartzCore/QuartzCore.h>\n\n\n#pragma mark UIImage+Blur Implementation\n@implementation UIImage (Blur)\n\n- (UIImage *)blurredImageWithRadius:(CGFloat)radius iterations:(NSUInteger)iterations tintColor:(UIColor *)tintColor {\n    // Image must be nonzero size\n    if (floorf(self.size.width) * floorf(self.size.height) <= 0.0f) {\n        return self;\n    }\n    // Box size must be an odd integer\n    int boxSize = radius * self.scale;\n    if (boxSize % 2 == 0) {\n        boxSize++;\n    }\n    // Create image buffers\n    CGImageRef imageRef = self.CGImage;\n    // DEBUG\n//    CGBitmapInfo bitmapInfo = CGImageGetBitmapInfo(imageRef);\n//    CGImageAlphaInfo alphaInfo = CGImageGetAlphaInfo(imageRef);\n//    NSLog(@\"\\n\"\n//          \"CGImageGetHeight: %d\\n\"\n//          \"CGImageGetWidth:  %d\\n\"\n//          \"CGImageGetColorSpace: %@\\n\"\n//          \"CGImageGetBitsPerPixel:     %d\\n\"\n//          \"CGImageGetBitsPerComponent: %d\\n\"\n//          \"CGImageGetBytesPerRow:      %d\\n\"\n//          \"CGImageGetBitmapInfo: 0x%.8X\\n\"\n//          \"  kCGBitmapAlphaInfoMask     = %s\\n\"\n//          \"  kCGBitmapFloatComponents   = %s\\n\"\n//          \"  kCGBitmapByteOrderMask     = 0x%.8X\\n\"\n//          \"  kCGBitmapByteOrderDefault  = %s\\n\"\n//          \"  kCGBitmapByteOrder16Little = %s\\n\"\n//          \"  kCGBitmapByteOrder32Little = %s\\n\"\n//          \"  kCGBitmapByteOrder16Big    = %s\\n\"\n//          \"  kCGBitmapByteOrder32Big    = %s\\n\"\n//          \"CGImageGetAlphaInfo: 0x%.8X\\n\"\n//          \"  kCGImageAlphaNone               = %s\\n\"\n//          \"  kCGImageAlphaPremultipliedLast  = %s\\n\"\n//          \"  kCGImageAlphaPremultipliedFirst = %s\\n\"\n//          \"  kCGImageAlphaLast               = %s\\n\"\n//          \"  kCGImageAlphaFirst              = %s\\n\"\n//          \"  kCGImageAlphaNoneSkipLast       = %s\\n\"\n//          \"  kCGImageAlphaNoneSkipFirst      = %s\\n\"\n//          \"  kCGImageAlphaOnly               = %s\\n\",\n//          (int)CGImageGetWidth(imageRef),\n//          (int)CGImageGetHeight(imageRef),\n//          CGImageGetColorSpace(imageRef),\n//          (int)CGImageGetBitsPerPixel(imageRef),\n//          (int)CGImageGetBitsPerComponent(imageRef),\n//          (int)CGImageGetBytesPerRow(imageRef),\n//          (unsigned)bitmapInfo,\n//          (bitmapInfo & kCGBitmapAlphaInfoMask)     ? \"YES\" : \"NO\",\n//          (bitmapInfo & kCGBitmapFloatComponents)   ? \"YES\" : \"NO\",\n//          (bitmapInfo & kCGBitmapByteOrderMask),\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrderDefault)  ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder16Little) ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder32Little) ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder16Big)    ? \"YES\" : \"NO\",\n//          ((bitmapInfo & kCGBitmapByteOrderMask) == kCGBitmapByteOrder32Big)    ? \"YES\" : \"NO\",\n//          (unsigned)alphaInfo,\n//          (alphaInfo == kCGImageAlphaNone)               ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaPremultipliedLast)  ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaPremultipliedFirst) ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaLast)               ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaFirst)              ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaNoneSkipLast)       ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaNoneSkipFirst)      ? \"YES\" : \"NO\",\n//          (alphaInfo == kCGImageAlphaOnly)               ? \"YES\" : \"NO\"\n//    );\n    // END DEBUG\n    if (![self isARGB8888:imageRef]) {\n        // Convert to ARGB if it isn't\n        NSLog(@\"Converting image to ARGB8888\");\n        CGContextRef ctx = [self createARGBBitmapContextFromImage:imageRef];\n        CGRect rect = {{0, 0}, {CGImageGetWidth(imageRef), CGImageGetHeight(imageRef)}};\n        // Draw the image to the bitmap context. Once we draw, the memory\n        // allocated for the context for rendering will then contain the\n        // raw image data in the desired color space and byte order\n        CGContextDrawImage(ctx, rect, imageRef);\n        imageRef = CGBitmapContextCreateImage(ctx);\n        CGContextRelease(ctx);\n    }\n    vImage_Buffer buffer1, buffer2;\n    buffer1.width = buffer2.width = CGImageGetWidth(imageRef);\n    buffer1.height = buffer2.height = CGImageGetHeight(imageRef);\n    buffer1.rowBytes = buffer2.rowBytes = CGImageGetBytesPerRow(imageRef);\n    CFIndex bytes = buffer1.rowBytes * buffer1.height;\n    buffer1.data = malloc(bytes);\n    buffer2.data = malloc(bytes);\n\n    // Create temp buffer\n    void *tempBuffer = malloc(vImageBoxConvolve_ARGB8888(&buffer1, &buffer2, NULL, 0, 0, boxSize, boxSize,\n                                                         NULL, kvImageEdgeExtend + kvImageGetTempBufferSize));\n\n    // Copy image data\n    CFDataRef dataSource = CGDataProviderCopyData(CGImageGetDataProvider(imageRef));\n    memcpy(buffer1.data, CFDataGetBytePtr(dataSource), bytes);\n    CFRelease(dataSource);\n\n    for (int i = 0; i < iterations; i++) {\n        // Perform blur\n        vImageBoxConvolve_ARGB8888(&buffer1, &buffer2, tempBuffer, 0, 0, boxSize, boxSize, NULL, kvImageEdgeExtend);\n\n        // Swap buffers\n        void *temp = buffer1.data;\n        buffer1.data = buffer2.data;\n        buffer2.data = temp;\n    }\n\n    // Free buffers\n    free(buffer2.data);\n    free(tempBuffer);\n\n    // Create image context from buffer\n    CGContextRef ctx = CGBitmapContextCreate(buffer1.data, buffer1.width, buffer1.height,\n                                             8, buffer1.rowBytes, CGImageGetColorSpace(imageRef),\n                                             CGImageGetBitmapInfo(imageRef));\n\n    // Apply tint\n    if (tintColor && ![tintColor isEqual:[UIColor clearColor]]) {\n        CGContextSetFillColorWithColor(ctx, [tintColor colorWithAlphaComponent:0.25].CGColor);\n        CGContextSetBlendMode(ctx, kCGBlendModePlusLighter);\n        CGContextFillRect(ctx, CGRectMake(0, 0, buffer1.width, buffer1.height));\n    }\n\n    // Create image from context\n    imageRef = CGBitmapContextCreateImage(ctx);\n    UIImage *image = [UIImage imageWithCGImage:imageRef scale:self.scale orientation:self.imageOrientation];\n    CGImageRelease(imageRef);\n    CGContextRelease(ctx);\n    free(buffer1.data);\n\n    return image;\n}\n\n- (BOOL)isARGB8888:(CGImageRef)imageRef {\n    return (CGImageGetBitsPerPixel(imageRef) == 32\n            && CGImageGetBitsPerComponent(imageRef) == 8\n            && (CGImageGetBitmapInfo(imageRef) & kCGBitmapAlphaInfoMask));\n}\n\n- (CGContextRef)createARGBBitmapContextFromImage:(CGImageRef)inImage {\n    // Get image width, height. We'll use the entire image.\n    size_t pixelsWide = CGImageGetWidth(inImage);\n    size_t pixelsHigh = CGImageGetHeight(inImage);\n    // Declare the number of bytes per row. Each pixel in the bitmap in this\n    // example is represented by 4 bytes; 8 bits each of red, green, blue, and alpha.\n    int bitmapBytesPerRow = (pixelsWide * 4);\n    int bitmapByteCount = (bitmapBytesPerRow * pixelsHigh);\n    // Use the generic RGB color space.\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    if (colorSpace == NULL) {\n        NSLog(@\"Error allocating color space\");\n        return NULL;\n    }\n    // Allocate memory for image data. This is the destination in memory\n    // where any drawing to the bitmap context will be rendered.\n    void *bitmapData = malloc(bitmapByteCount);\n    if (bitmapData == NULL) {\n        NSLog(@\"Memory not allocated!\");\n        CGColorSpaceRelease(colorSpace);\n        return NULL;\n    }\n    // Create the bitmap context. We want pre-multiplied ARGB, 8-bits\n    // per component. Regardless of what the source image format is\n    // (CMYK, Grayscale, and so on) it will be converted over to the format\n    // specified here by CGBitmapContextCreate.\n    CGContextRef context = CGBitmapContextCreate(bitmapData,\n                                     pixelsWide,\n                                     pixelsHigh,\n                                     8,      // bits per component\n                                     bitmapBytesPerRow,\n                                     colorSpace,\n                                     (CGBitmapInfo) kCGImageAlphaPremultipliedFirst);\n    if (context == NULL) {\n        free(bitmapData);\n        NSLog(@\"Context not created!\");\n    }\n    // Make sure and release colorspace before returning\n    CGColorSpaceRelease(colorSpace);\n    return context;\n}\n\n@end\n```\n. ",
    "Vienta": "@gresrun Thx! Saved me time.\n. @gresrun Thx! Saved me time.\n. ",
    "fabnoe": "thanks\n. thanks\n. ",
    "dannyhertz": "Worked perfectly! Thanks for the tip.\n. Worked perfectly! Thanks for the tip.\n. ",
    "benkraus": "Ah.  Looks like there's a PR out there to add this functionality.\n. Ah.  Looks like there's a PR out there to add this functionality.\n. ",
    "paul321": ":)  Yes, if you have a dark theme app and you want to add a status bar with blur over a table with white text it's looking very weird and you cannot put it in production \n. if you use the badge on a blur view and hit home button and then reopen the app, blur view will try to recreate the subviews and somehow custom badge crashes in method\u00a0\n-(void) drawRoundedRectWithContext:(CGContextRef)context withRect:(CGRect)rect\n\nthe rect object has infinite values\n\nso my work around was to add in custom badge\u00a0\n\u00a0 \u00a0 if(rect.size.width > 0 && rect.size.height > 0) {\n}\n\nOn March 22, 2014 at 6:27:44 PM, Nick Lockwood (notifications@github.com) wrote:\n\nDid you close this because you found a workaround, or because the problem wasn't related to blur view?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. :)  Yes, if you have a dark theme app and you want to add a status bar with blur over a table with white text it's looking very weird and you cannot put it in production \n. if you use the badge on a blur view and hit home button and then reopen the app, blur view will try to recreate the subviews and somehow custom badge crashes in method\u00a0\n-(void) drawRoundedRectWithContext:(CGContextRef)context withRect:(CGRect)rect\n\nthe rect object has infinite values\n\nso my work around was to add in custom badge\u00a0\n\u00a0 \u00a0 if(rect.size.width > 0 && rect.size.height > 0) {\n}\n\nOn March 22, 2014 at 6:27:44 PM, Nick Lockwood (notifications@github.com) wrote:\n\nDid you close this because you found a workaround, or because the problem wasn't related to blur view?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "fatuhoku": "That's just so unintuitive.\n. That's just so unintuitive.\n. ",
    "psholtz": "A lot of game engines don't use ARC.\n\nI'm working on several projects that don't use ARC.\n\nYou don't need to include it if you don't want to, but the point is so that\nit works if you're not running on ARC.\n\nOn Wed, Feb 12, 2014 at 11:47 PM, Nick Lockwood notifications@github.comwrote:\n\n> I'm unclear what the point if this is?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/42#issuecomment-34955173\n> .\n. Yes, I tried that and for whatever reason I wasn't able to get it to work.\nBut that's probably owing more to the complexity of the project/workspace\nI'm working in than anything else.\n\nThanks for your feedback!\n\nOn Thu, Feb 13, 2014 at 1:27 AM, Nick Lockwood notifications@github.comwrote:\n\n> Did you read the section about ARC in the README.md file? Here it is:\n> ARC Compatibility\n> \n> As of version 1.3, FXBlurView requires ARC. If you wish to use FXBlurView\n> in a non-ARC project, just add the -fobjc-arc compiler flag to the\n> FXBlurView.m class. To do this, go to the Build Phases tab in your target\n> settings, open the Compile Sources group, double-click FXBlurView.m in the\n> list and type -fobjc-arc into the popover.\n> \n> If you wish to convert your whole project to ARC, comment out the #error\n> line in FXBlurView.m, then run the Edit > Refactor > Convert to Objective-C\n> ARC... tool in Xcode and make sure all files that you wish to use ARC for\n> (including FXBlurView.m) are checked.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/42#issuecomment-34961176\n> .\n. A lot of game engines don't use ARC.\n\nI'm working on several projects that don't use ARC.\n\nYou don't need to include it if you don't want to, but the point is so that\nit works if you're not running on ARC.\n\nOn Wed, Feb 12, 2014 at 11:47 PM, Nick Lockwood notifications@github.comwrote:\n\n> I'm unclear what the point if this is?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/42#issuecomment-34955173\n> .\n. Yes, I tried that and for whatever reason I wasn't able to get it to work.\nBut that's probably owing more to the complexity of the project/workspace\nI'm working in than anything else.\n\nThanks for your feedback!\n\nOn Thu, Feb 13, 2014 at 1:27 AM, Nick Lockwood notifications@github.comwrote:\n\n> Did you read the section about ARC in the README.md file? Here it is:\n> ARC Compatibility\n> \n> As of version 1.3, FXBlurView requires ARC. If you wish to use FXBlurView\n> in a non-ARC project, just add the -fobjc-arc compiler flag to the\n> FXBlurView.m class. To do this, go to the Build Phases tab in your target\n> settings, open the Compile Sources group, double-click FXBlurView.m in the\n> list and type -fobjc-arc into the popover.\n> \n> If you wish to convert your whole project to ARC, comment out the #error\n> line in FXBlurView.m, then run the Edit > Refactor > Convert to Objective-C\n> ARC... tool in Xcode and make sure all files that you wish to use ARC for\n> (including FXBlurView.m) are checked.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/42#issuecomment-34961176\n> .\n. ",
    "mongoose54": "Same here.\n. Same here.\n. ",
    "rvi": "Same here.\n\nConfiguration: Yosemite Beta, Xcode 6, and last version of FXBlurView.\n. Thanks ! :+1: \n. @kmy504 Doesn't fix it for me. I  still get these errors: \n\n``` sh\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextDrawImage: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n```\n. You can checkout my pull request, I don't have the warning anymore with my fix : https://github.com/rvi/FXBlurView/commits/master\n. @kmy504 No it's not duplicated.\n\nHere are my changes : https://github.com/nicklockwood/FXBlurView/pull/87/files\n. Same here.\n\nConfiguration: Yosemite Beta, Xcode 6, and last version of FXBlurView.\n. Thanks ! :+1: \n. @kmy504 Doesn't fix it for me. I  still get these errors: \n\n``` sh\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextRestoreGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextGetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSetBaseCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextSaveGState: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextConcatCTM: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextClipToRect: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n<Error>: CGContextDrawImage: invalid context 0x0. This is a serious error. This application, or a library it uses, is using an invalid context  and is thereby contributing to an overall degradation of system stability and reliability. This notice is a courtesy: please fix this problem. It will become a fatal error in an upcoming update.\n```\n. You can checkout my pull request, I don't have the warning anymore with my fix : https://github.com/rvi/FXBlurView/commits/master\n. @kmy504 No it's not duplicated.\n\nHere are my changes : https://github.com/nicklockwood/FXBlurView/pull/87/files\n. ",
    "mattapperson": "Same, Using v 1.6.2\n. Same, Using v 1.6.2\n. ",
    "kmy504": "I create pull request to fix this issue.\nCheck my pull request to fix this issue before release.\n\nReference is below.\nhttp://iphonedevsdk.com/forum/iphone-sdk-development/31239-cgbitmapcontextcreate-unsupported-parameter-combination-is-drivin-me-nuts.html\n. @rvi I fixed this method\n( - (UIImage *)blurredImageWithRadius:(CGFloat)radius iterations:(NSUInteger)iterations tintColor:(UIColor *)tintColor)\n\nMaybe your editing code is not duplicated from mine.\n\nThx~\n. I create pull request to fix this issue.\nCheck my pull request to fix this issue before release.\n\nReference is below.\nhttp://iphonedevsdk.com/forum/iphone-sdk-development/31239-cgbitmapcontextcreate-unsupported-parameter-combination-is-drivin-me-nuts.html\n. @rvi I fixed this method\n( - (UIImage *)blurredImageWithRadius:(CGFloat)radius iterations:(NSUInteger)iterations tintColor:(UIColor *)tintColor)\n\nMaybe your editing code is not duplicated from mine.\n\nThx~\n. ",
    "annathomasQB": "But will not get the live blur right? \n\nI wanted the same output as in your example project, except that i wanted it in a button or uiimageview, instead of in a uiview.. \n\ni tried using the FXBlurView in a camera live feed.. but here it doesn't seem to work..\n. oh thanks for the input.. :) \n. But will not get the live blur right? \n\nI wanted the same output as in your example project, except that i wanted it in a button or uiimageview, instead of in a uiview.. \n\ni tried using the FXBlurView in a camera live feed.. but here it doesn't seem to work..\n. oh thanks for the input.. :) \n. ",
    "wt65074": "Will try. Thanks.\n\nSent from my iPhone\n\n> On Mar 14, 2014, at 1:28 PM, Nick Lockwood notifications@github.com wrote:\n> \n> Yeah, that's quite possible.There are various steps you can take to reduce this:\n> \n> If the content behind the blur view doesn't change, set dynamic = NO\n> If the content changes only infrequently, increase the updateInterval to something like 0.1 (10 frames per second)\n> Try reducing the number of blue iterations and see if the quality is still acceptable\n> If the content behind is a scrollview, set dynamic = NO and use the scrollView delegate's didScroll method to update the blurView instead\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Will try. Thanks.\n\nSent from my iPhone\n\n> On Mar 14, 2014, at 1:28 PM, Nick Lockwood notifications@github.com wrote:\n> \n> Yeah, that's quite possible.There are various steps you can take to reduce this:\n> \n> If the content behind the blur view doesn't change, set dynamic = NO\n> If the content changes only infrequently, increase the updateInterval to something like 0.1 (10 frames per second)\n> Try reducing the number of blue iterations and see if the quality is still acceptable\n> If the content behind is a scrollview, set dynamic = NO and use the scrollView delegate's didScroll method to update the blurView instead\n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "Thinkscape": "Interesting :-)  I'll take a look then ... \n. Interesting :-)  I'll take a look then ... \n. ",
    "bevbomb": "Ah thats a shame, it does suck a bit, because it would look awesome if it worked, \nI'll keep my fingers crossed and hope that in the future you'll find something, or apple release the blur as a xcode feature, thanks.\n. Ah thats a shame, it does suck a bit, because it would look awesome if it worked, \nI'll keep my fingers crossed and hope that in the future you'll find something, or apple release the blur as a xcode feature, thanks.\n. ",
    "tzuyangliu": "your suggestion helps a lot\n(your code really simplify my work\uff0cthank you again\uff01)\n. your suggestion helps a lot\n(your code really simplify my work\uff0cthank you again\uff01)\n. ",
    "CaseyB": "But that makes your view hierarchy deeper and more processor intensive.\nOn Apr 11, 2014 6:08 AM, \"Nick Lockwood\" notifications@github.com wrote:\n\n> You can achieve this by just adding a subview inside your blurview with a\n> translucent background.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/57#issuecomment-40188914\n> .\n. But that makes your view hierarchy deeper and more processor intensive.\nOn Apr 11, 2014 6:08 AM, \"Nick Lockwood\" notifications@github.com wrote:\n\n> You can achieve this by just adding a subview inside your blurview with a\n> translucent background.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/nicklockwood/FXBlurView/pull/57#issuecomment-40188914\n> .\n. ",
    "nehloo": "How exactly did you subclass UIView to be a FXBlurView? Thanks!\n. How exactly did you subclass UIView to be a FXBlurView? Thanks!\n. ",
    "maxmitch": "Hello please can you expand on \n\n> If you set the underlyingView property of the FXBlurView to the view that contains your partially transparent view, it should solve the problem.\n\nDoes this mean that I should set the classes of the views below the view I want to be blurred as _FXBlurView_ ? As I currently have two views below my view that I want blurred as I have explained [here](http://stackoverflow.com/questions/24542076/getting-uiview-in-separate-class-for-fxblurview). \n\nAlso is there a way to make the default \"error color\"  white instead of black?\n. Oh Okay! How do you asign the property \"underlyingView\"? to a UIView in leymans terms? \n. my refrencing outlet for the uiview with class FXBlurView is called Genres and my view that I want to be the underlying view is main_view. I have done:\n\n```\nself.Genres.underlyingView = _main_view;\n```\n\nI am getting the error: \n\n> Property 'underlyingView' not found on object of type 'UIView *'\n. Thank you. But this still gives a black line from where the animation starts!\n. I have done \n\n```\n_main_view.backgroundColor = [UIColor whiteColor];\n```\n\nAnd no luck. I also tried:\n\n```\n_main_view.opaque = NO;\n```\n\nAlso no luck\n. Can you help?\n. ?\n. it is changing nothing. I am wanting to stop it from tinting blue\n. Can you help?\n. Hello please can you expand on \n\n> If you set the underlyingView property of the FXBlurView to the view that contains your partially transparent view, it should solve the problem.\n\nDoes this mean that I should set the classes of the views below the view I want to be blurred as _FXBlurView_ ? As I currently have two views below my view that I want blurred as I have explained [here](http://stackoverflow.com/questions/24542076/getting-uiview-in-separate-class-for-fxblurview). \n\nAlso is there a way to make the default \"error color\"  white instead of black?\n. Oh Okay! How do you asign the property \"underlyingView\"? to a UIView in leymans terms? \n. my refrencing outlet for the uiview with class FXBlurView is called Genres and my view that I want to be the underlying view is main_view. I have done:\n\n```\nself.Genres.underlyingView = _main_view;\n```\n\nI am getting the error: \n\n> Property 'underlyingView' not found on object of type 'UIView *'\n. Thank you. But this still gives a black line from where the animation starts!\n. I have done \n\n```\n_main_view.backgroundColor = [UIColor whiteColor];\n```\n\nAnd no luck. I also tried:\n\n```\n_main_view.opaque = NO;\n```\n\nAlso no luck\n. Can you help?\n. ?\n. it is changing nothing. I am wanting to stop it from tinting blue\n. Can you help?\n. ",
    "callbacknull": "It doesn't look like you set up the underlyingView property on the fxblurview. \n. It doesn't look like you set up the underlyingView property on the fxblurview. \n. ",
    "nilshott": "To me, this looks like a leak:\n\n![leak](https://cloud.githubusercontent.com/assets/289627/3506545/f9bca93c-0672-11e4-95f4-dc3769b4fbf3.png)\n\nThis happens when my app is merely showing a table view that has two FXBlurViews over it.\n. To me, this looks like a leak:\n\n![leak](https://cloud.githubusercontent.com/assets/289627/3506545/f9bca93c-0672-11e4-95f4-dc3769b4fbf3.png)\n\nThis happens when my app is merely showing a table view that has two FXBlurViews over it.\n. ",
    "tfrank64": "I though about adding a blend mode parameter myself, so I agree this should be merged asap. Adding a black tint color seemingly did nothing for me.\n. I though about adding a blend mode parameter myself, so I agree this should be merged asap. Adding a black tint color seemingly did nothing for me.\n. ",
    "dcacenabes": "It's crashing for me too in this exact line. I have a dynamic blur view and change its blurRadius dynamically based on some scroll view's content offset.\n. I am getting the same error in iOS7 with a page view controller. It happens with dynamic blurring on.\n. Not elegant, but if you are desperate you can always try-catch around the problematic line.\n. It's crashing for me too in this exact line. I have a dynamic blur view and change its blurRadius dynamically based on some scroll view's content offset.\n. I am getting the same error in iOS7 with a page view controller. It happens with dynamic blurring on.\n. Not elegant, but if you are desperate you can always try-catch around the problematic line.\n. ",
    "RabbitMC": "I'm using an iPhone 5 with iOS 7. \n. I'm using an iPhone 5 with iOS 7. \n. ",
    "rmbrgn": "Any news on this issue ?\n. Any news on this issue ?\n. ",
    "kaizen-mn": "@RabbitMC did u fix it?\n. @RabbitMC did u fix it?\n. ",
    "septerr": "Having this same issue.\n. Having this same issue.\n. ",
    "mariancerny": "Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. Try this fork: https://github.com/Vienta/FXBlurView\nIt adds conversion of non-ARGB8888 images into ARGB8888.\n. ",
    "roycable": "I too am having this issue - limited to iOS 8 though.\n\nLooks like the method `-(updateAsynchronously: completion:)` is being hit repeatably even though I haven't set the blur to update.\n\nWhen I manually add `return NO` inside `-(shouldUpdate)`, performance is back to that of iOS 7.\n\nThis is my initialisation code;\n\n```\nFXBlurView *_bgBlur = [[FXBlurView alloc] initWithFrame:_carouselBackground.bounds];\n_bgBlur.autoresizingMask = UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleRightMargin | UIViewAutoresizingFlexibleBottomMargin | UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;\n_bgBlur.blurRadius = 15;\n_bgBlur.tintColor = [UIColor clearColor];\n[self.view addSubview:_bgBlur];\n```\n\nNB: I found this out by using Instruments on my application, which was showing 101% of my CPU being used causing all UI to be sluggish.\n. I resolved this by explicitly setting `_fxBlur.dynamic = NO;`\nie. looks like under iOS 8 the dynamic setting is defaulted to true... which probably means if you have multiple instances of FXBlurView, you'll have a number of views updating at once (bit of a performance hit).\n. I've had a quick look at the AnimatedBlurExample and `ViewController.m` uses UIView for the animation.\n\nEg. \n\n```\n[UIView animateWithDuration:0.5 animations:^{\n    self.blurView.blurRadius = 40;\n}];\n```\n\n(you're using `FXBlurView animateWithDuration: ...`)\n. I too am having this issue - limited to iOS 8 though.\n\nLooks like the method `-(updateAsynchronously: completion:)` is being hit repeatably even though I haven't set the blur to update.\n\nWhen I manually add `return NO` inside `-(shouldUpdate)`, performance is back to that of iOS 7.\n\nThis is my initialisation code;\n\n```\nFXBlurView *_bgBlur = [[FXBlurView alloc] initWithFrame:_carouselBackground.bounds];\n_bgBlur.autoresizingMask = UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleRightMargin | UIViewAutoresizingFlexibleBottomMargin | UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;\n_bgBlur.blurRadius = 15;\n_bgBlur.tintColor = [UIColor clearColor];\n[self.view addSubview:_bgBlur];\n```\n\nNB: I found this out by using Instruments on my application, which was showing 101% of my CPU being used causing all UI to be sluggish.\n. I resolved this by explicitly setting `_fxBlur.dynamic = NO;`\nie. looks like under iOS 8 the dynamic setting is defaulted to true... which probably means if you have multiple instances of FXBlurView, you'll have a number of views updating at once (bit of a performance hit).\n. I've had a quick look at the AnimatedBlurExample and `ViewController.m` uses UIView for the animation.\n\nEg. \n\n```\n[UIView animateWithDuration:0.5 animations:^{\n    self.blurView.blurRadius = 40;\n}];\n```\n\n(you're using `FXBlurView animateWithDuration: ...`)\n. ",
    "shineall": "Is this issue is solved in 1.6.2 ? it only happen in iOS 8. \n\n0x0000000186b88ad4 -[CALayer _renderBorderInContext:] + 296\n7   QuartzCore                           0x0000000186b875b4 -[CALayer renderInContext:] + 1068\n8   QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n9   QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n10  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n11  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n12  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n13  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n14  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n15  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n16  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n17  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n18  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n19  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n20  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n21  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n22  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n23  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n24  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n25  QuartzCore                           0x0000000186b87530 -[CALayer renderInContext:] + 936\n. @roycable  Thank you for comment. But I am using dynamic mode somewhere~ Is there another way to avoid crash this even though dynamic is on. \n. @David , @javiholcman\n\nThanks !! If I gonna catch the solution , i gonna share~\n\nOn Fri, Oct 31, 2014 at 1:02 PM, javiholcman notifications@github.com\nwrote:\n\n> Working with my partner we find the same bug. In our case, was crashing on\n> the renderInContext of a subview of the underlyingLayer. Apparently, they\n> introduced a bug on the renderInContext when the view contains 0 in the\n> width. Check the subviews and it frames. Good luck.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/79#issuecomment-61322178\n> .\n. Is this issue is solved in 1.6.2 ? it only happen in iOS 8. \n\n0x0000000186b88ad4 -[CALayer _renderBorderInContext:] + 296\n7   QuartzCore                           0x0000000186b875b4 -[CALayer renderInContext:] + 1068\n8   QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n9   QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n10  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n11  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n12  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n13  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n14  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n15  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n16  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n17  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n18  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n19  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n20  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n21  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n22  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n23  QuartzCore                           0x0000000186b8759c -[CALayer renderInContext:] + 1044\n24  QuartzCore                           0x0000000186b88500 -[CALayer _renderSublayersInContext:] + 400\n25  QuartzCore                           0x0000000186b87530 -[CALayer renderInContext:] + 936\n. @roycable  Thank you for comment. But I am using dynamic mode somewhere~ Is there another way to avoid crash this even though dynamic is on. \n. @David , @javiholcman\n\nThanks !! If I gonna catch the solution , i gonna share~\n\nOn Fri, Oct 31, 2014 at 1:02 PM, javiholcman notifications@github.com\nwrote:\n\n> Working with my partner we find the same bug. In our case, was crashing on\n> the renderInContext of a subview of the underlyingLayer. Apparently, they\n> introduced a bug on the renderInContext when the view contains 0 in the\n> width. Check the subviews and it frames. Good luck.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/79#issuecomment-61322178\n> .\n. ",
    "javiholcman": "Working with my partner we find the same bug. In our case, was crashing on the renderInContext of a subview of the underlyingLayer. Apparently, they introduced a bug on the renderInContext when the view contains 0 in the width. Check the subviews and it frames. Good luck.\n. Working with my partner we find the same bug. In our case, was crashing on the renderInContext of a subview of the underlyingLayer. Apparently, they introduced a bug on the renderInContext when the view contains 0 in the width. Check the subviews and it frames. Good luck.\n. ",
    "brandonscript": "Oh, yeah, @roycable it doesn't make a difference one way or the other. I had just tried to see if calling the method on the subclass would make a difference.\n. Hrm.. goofy, and it seems to work (albeit really choppy) when going from say, radius=30 to radius=5. But going from no blur to 30, it's still instant. Will play around some more - thanks for the tip!\n. @oscarjiv91 https://github.com/nicklockwood/FXBlurView/tree/master/Examples\n. Oh, yeah, @roycable it doesn't make a difference one way or the other. I had just tried to see if calling the method on the subclass would make a difference.\n. Hrm.. goofy, and it seems to work (albeit really choppy) when going from say, radius=30 to radius=5. But going from no blur to 30, it's still instant. Will play around some more - thanks for the tip!\n. @oscarjiv91 https://github.com/nicklockwood/FXBlurView/tree/master/Examples\n. ",
    "msmobileapps": "Grabbing main queue sticks my entire UI\n. Grabbing main queue sticks my entire UI\n. ",
    "mitchellporter": "The solution that @nicklockwood posted technically works for me but it looks terrible. It is very glitchy/choppy looking. Will report back if I find a way to smooth out the animation of blurRadius.\n. @datwelk Nope I never found a solution. I ended up ditching the blur effect all together.\n. The solution that @nicklockwood posted technically works for me but it looks terrible. It is very glitchy/choppy looking. Will report back if I find a way to smooth out the animation of blurRadius.\n. @datwelk Nope I never found a solution. I ended up ditching the blur effect all together.\n. ",
    "datwelk": "@mitchellporter I'm seeing the same issue. Did you end up finding a smoother way?\n. @mitchellporter I'm seeing the same issue. Did you end up finding a smoother way?\n. ",
    "jamesanse": "Yes\n. +1\n. Yes\n. +1\n. ",
    "guidev": "+1\n. +1\n. ",
    "chrise86": "+1, this would be extremely useful!\n. +1, this would be extremely useful!\n. ",
    "fibers": "hi , I also have the problem when set a FXBlurView on the background of a tableview.\n\n```\nUIImageView *ivTableBackground = [[UIImageView alloc] initWithFrame:self.tableView.frame];\n    ivTableBackground.image = [UIImage imageNamed:@\"background\"];\n    self.blurView = [[FXBlurView alloc] initWithFrame:self.tableView.bounds];\n    self.blurView.dynamic = NO;\n    self.blurView.blurRadius = 40.0f;\n    self.blurView.tintColor = [UIColor clearColor];\n  //  [self.blurView updateAsynchronously:YES completion:nil];\n    [ivTableBackground addSubview:self.blurView];\n    self.tableView.backgroundView = ivTableBackground;\n```\n\nMy purpose is to set the \"background.png\" to table's background with a blur effect. \nBut the background image won't show as well. The commented line \"updateAsynchronously\" doesn't work either. If I set the self.blurView.dynamic to YES, it works as expected that the table's background is a blur image \n\nAny help will be appreciated.\n. hi , I also have the problem when set a FXBlurView on the background of a tableview.\n\n```\nUIImageView *ivTableBackground = [[UIImageView alloc] initWithFrame:self.tableView.frame];\n    ivTableBackground.image = [UIImage imageNamed:@\"background\"];\n    self.blurView = [[FXBlurView alloc] initWithFrame:self.tableView.bounds];\n    self.blurView.dynamic = NO;\n    self.blurView.blurRadius = 40.0f;\n    self.blurView.tintColor = [UIColor clearColor];\n  //  [self.blurView updateAsynchronously:YES completion:nil];\n    [ivTableBackground addSubview:self.blurView];\n    self.tableView.backgroundView = ivTableBackground;\n```\n\nMy purpose is to set the \"background.png\" to table's background with a blur effect. \nBut the background image won't show as well. The commented line \"updateAsynchronously\" doesn't work either. If I set the self.blurView.dynamic to YES, it works as expected that the table's background is a blur image \n\nAny help will be appreciated.\n. ",
    "nikburnt": "Try to avoid adding views directly in window. It's better to take a rootView from rootWindow and add blur view in it. After it you must set underlyingView of blur view to rootView, because BlurView must know what to blur.\n. Try to avoid adding views directly in window. It's better to take a rootView from rootWindow and add blur view in it. After it you must set underlyingView of blur view to rootView, because BlurView must know what to blur.\n. ",
    "mortenholmgaard": "Have you tried masksToBounds = true - that works for me\n. I do not set clipsToBounds - it just has the default value.\nThis is my configuration if it helps you:\n\n```\n    blurView.underlyingView = self.view\n    blurView.tintColor = nil\n    blurView.blurRadius = 10\n    blurView.layer.masksToBounds = true\n    blurView.layer.cornerRadius = 25\n    blurView.dynamic = false\n```\n. Have you tried masksToBounds = true - that works for me\n. I do not set clipsToBounds - it just has the default value.\nThis is my configuration if it helps you:\n\n```\n    blurView.underlyingView = self.view\n    blurView.tintColor = nil\n    blurView.blurRadius = 10\n    blurView.layer.masksToBounds = true\n    blurView.layer.cornerRadius = 25\n    blurView.dynamic = false\n```\n. ",
    "mauroptt": "same here.. any workaround?\n. same here.. any workaround?\n. ",
    "divindudu": "I had the same issue and what you suggested fixed my problem too. A fix for this problem should be proposed in a new version ?\n. I had the same issue and what you suggested fixed my problem too. A fix for this problem should be proposed in a new version ?\n. ",
    "zintus": "Yup, same for me\n. Yup, same for me\n. ",
    "lavoy": "Did you mean that it does not crash on iOS 7? If so, I can confirm that it isn't an issue for us on iOS 7 but is on iOS 8.\n. Did you mean that it does not crash on iOS 7? If so, I can confirm that it isn't an issue for us on iOS 7 but is on iOS 8.\n. ",
    "Himanshu7441": "I am facing the same Issue. . I am facing the same Issue. . ",
    "ynmehel": "I am also having the same issue. I am also having the same issue. ",
    "lucoceano": "+1\n. +1\n. ",
    "jasdev": ":+1: \n. :+1: \n. ",
    "ldantona": "Hi Nick!\nThanks for your quick answer.\nReading Apple's documentation it seems that drawViewHierarchyInRect should be faster than renderInContext, but are you saying that in our context the performance is slower? \nIs there any workaround for this?\n. Hi Nick!\nThanks for your quick answer.\nReading Apple's documentation it seems that drawViewHierarchyInRect should be faster than renderInContext, but are you saying that in our context the performance is slower? \nIs there any workaround for this?\n. ",
    "nlabhart": "Ah!  That makes sense.\n\nHow should I situate it to put a blurred overlay over a tableview?\n\nSincerely,\n\n_Noah Labhart_\nPartner, Director - GLab, LLC\nnoah.labhart@glab.mobi\nCell: 817-988-5253\n\nhttp://glab.mobi\n\nOn Mon, Mar 16, 2015 at 4:59 PM, Nick Lockwood notifications@github.com\nwrote:\n\n> FXBlurView blurs its parent and siblings, not its child views.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/104#issuecomment-81960104\n> .\n. Ah!  That makes sense.\n\nHow should I situate it to put a blurred overlay over a tableview?\n\nSincerely,\n\n_Noah Labhart_\nPartner, Director - GLab, LLC\nnoah.labhart@glab.mobi\nCell: 817-988-5253\n\nhttp://glab.mobi\n\nOn Mon, Mar 16, 2015 at 4:59 PM, Nick Lockwood notifications@github.com\nwrote:\n\n> FXBlurView blurs its parent and siblings, not its child views.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/104#issuecomment-81960104\n> .\n. ",
    "rabbitgoat": "@vani2 ,hi,vani2, our app has the same exception.Have you got the right solution? If you have \uff0cwould you please tell me the solution, thank you very much. you can email to me if possiable,my email is rabbitandgoat6230@sina.com\n. @vani2 ,hi,vani2, our app has the same exception.Have you got the right solution? If you have \uff0cwould you please tell me the solution, thank you very much. you can email to me if possiable,my email is rabbitandgoat6230@sina.com\n. ",
    "cloudfelipe": "Just use this to avoid that wrong effect:\n\n`\n-(void)viewWillDisappear:(BOOL)animated{\n    [super viewWillDisappear:animated];\n    [FXBlurView setUpdatesDisabled];\n}\n`\n. Try to use [FXBlurView setUpdatesDisabled] or [FXBlurView setUpdatesEnabled] in ViewWill-DidAppear o Disappear to avoid that blur effect be update in any viewcontrollers transitions. \n. Just use this to avoid that wrong effect:\n\n`\n-(void)viewWillDisappear:(BOOL)animated{\n    [super viewWillDisappear:animated];\n    [FXBlurView setUpdatesDisabled];\n}\n`\n. Try to use [FXBlurView setUpdatesDisabled] or [FXBlurView setUpdatesEnabled] in ViewWill-DidAppear o Disappear to avoid that blur effect be update in any viewcontrollers transitions. \n. ",
    "gathan": "Doesn't it? I have done it many times. Just add it as a subview of your key window (Window inherits from UIVIew, so feel free to 'addSubview')\n. Doesn't it? I have done it many times. Just add it as a subview of your key window (Window inherits from UIVIew, so feel free to 'addSubview')\n. ",
    "TomZid": "I just Encountered the same issue, also the circumstances when called scrollview scrollsToTop\n. I just Encountered the same issue, also the circumstances when called scrollview scrollsToTop\n. ",
    "Mijail": "Same happens here, help would be appreciated.\n. Same happens here, help would be appreciated.\n. ",
    "ajay2c9": "Check the below one may be it may help.\n\n  [self.userCoverProfilePicImgVw sd_setImageWithURL:[NSURL URLWithString:imgURL] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {\n          self.blurView1.blurRadius = 4.95;\n          self.blurView1.dynamic = NO;\n          [self.blurView1 updateAsynchronously:YES completion:^{\n        // Whatever you want\n\n```\n}];\n    }];\n```\n. Check the below one may be it may help.\n\n  [self.userCoverProfilePicImgVw sd_setImageWithURL:[NSURL URLWithString:imgURL] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {\n          self.blurView1.blurRadius = 4.95;\n          self.blurView1.dynamic = NO;\n          [self.blurView1 updateAsynchronously:YES completion:^{\n        // Whatever you want\n\n```\n}];\n    }];\n```\n. ",
    "FlorianBasso": "Anyone find a real solution please ?. I had a huge bug with the blur effect and thanks to you @Gocy015 it is fixed !\r\nThanks !!. Anyone find a real solution please ?. I had a huge bug with the blur effect and thanks to you @Gocy015 it is fixed !\r\nThanks !!. ",
    "Hackice": "set dynamic to NO.\n. set dynamic to NO.\n. ",
    "Umar-M-Haroon": "Adding `[wholeScreen.layer drawViewHierarchyInRect:self.view.bounds afterScreenUpdates:YES];` fixes the issue. Closing now.\n. Adding `[wholeScreen.layer drawViewHierarchyInRect:self.view.bounds afterScreenUpdates:YES];` fixes the issue. Closing now.\n. ",
    "jspavlick": "Thank you for an otherwise brilliant library. \n. Hey @nicklockwood I made the changes you requested. . Thank you for an otherwise brilliant library. \n. Hey @nicklockwood I made the changes you requested. . ",
    "iStarEternal": "If you want to Demo, ask me.\n. Thank you for your kind reply. I hope you can make it better soon.\n. If you want to Demo, ask me.\n. Thank you for your kind reply. I hope you can make it better soon.\n. ",
    "HoneyLuka": "I have same problem. I agree that this is a serious bug.\n. @nicklockwood I found this bug.\n\n```\n- (NSArray *)hideEmptyLayers:(CALayer *)layer\n{\n    NSMutableArray *layers = [NSMutableArray array];\n    if (CGRectIsEmpty(layer.bounds)) // **** Bug is here. ****\n    {\n        layer.hidden = YES;\n        [layers addObject:layer];\n    }\n    for (CALayer *sublayer in layer.sublayers)\n    {\n        [layers addObjectsFromArray:[self hideEmptyLayers:sublayer]];\n    }\n    return layers;\n}\n```\n\nThis line should check if the layer is already hidden:\n\n```\nif (CGRectIsEmpty(layer.bounds))\n```\n\nchange to this will resolve problem:\n\n```\nif (CGRectIsEmpty(layer.bounds) && !layer.hidden)\n```\n. Can I create a PR for this?\n. I have same problem. I agree that this is a serious bug.\n. @nicklockwood I found this bug.\n\n```\n- (NSArray *)hideEmptyLayers:(CALayer *)layer\n{\n    NSMutableArray *layers = [NSMutableArray array];\n    if (CGRectIsEmpty(layer.bounds)) // **** Bug is here. ****\n    {\n        layer.hidden = YES;\n        [layers addObject:layer];\n    }\n    for (CALayer *sublayer in layer.sublayers)\n    {\n        [layers addObjectsFromArray:[self hideEmptyLayers:sublayer]];\n    }\n    return layers;\n}\n```\n\nThis line should check if the layer is already hidden:\n\n```\nif (CGRectIsEmpty(layer.bounds))\n```\n\nchange to this will resolve problem:\n\n```\nif (CGRectIsEmpty(layer.bounds) && !layer.hidden)\n```\n. Can I create a PR for this?\n. ",
    "kirian": "@HoneyLuka sounds a good approach, they use all layers with bounds even the hidden layers in order to render the view. After rendering, they restore the superview unhiding all layers. (even your hidden layers).\n. @HoneyLuka sounds a good approach, they use all layers with bounds even the hidden layers in order to render the view. After rendering, they restore the superview unhiding all layers. (even your hidden layers).\n. ",
    "tlkahn": "Try add the following in FXBlurView.m after line 107 and line 120:\n\n```\n  if (!context) {\n        if (unsupportedColorSpace){\n            CGColorSpaceRelease(colorspaceRef);\n        }\n        return image;\n    }\n```\n\nIf it helps, please let me know. I will post a pull request based on this issue.\n. Try add the following in FXBlurView.m after line 107 and line 120:\n\n```\n  if (!context) {\n        if (unsupportedColorSpace){\n            CGColorSpaceRelease(colorspaceRef);\n        }\n        return image;\n    }\n```\n\nIf it helps, please let me know. I will post a pull request based on this issue.\n. ",
    "Slangen": "I'm having the same issue but i'm not quite sure how that code should help tlkahn?\nThere's is no variable context (ctx is there). \nWhat is unsupportedColorSpace?\nThere is no variable colorspaceRef.\n\nAny other ideas on how to fix this issue? I'm desperate\n. After resizing my image i got the blur-effect working. However. One of my images blur very nicely towards the tinted color provided while the other (the one that initially was to big and caused the same error that got me here) wont tint towards any color. Its an image with mostly white in it, our worst case scenario and i need it tinted towards green. Any ideas?\n\nI read up on apple's methods and those wont be a perfect fit for our needs seeing that they cant tint towards our desired color. \n. I'm having the same issue but i'm not quite sure how that code should help tlkahn?\nThere's is no variable context (ctx is there). \nWhat is unsupportedColorSpace?\nThere is no variable colorspaceRef.\n\nAny other ideas on how to fix this issue? I'm desperate\n. After resizing my image i got the blur-effect working. However. One of my images blur very nicely towards the tinted color provided while the other (the one that initially was to big and caused the same error that got me here) wont tint towards any color. Its an image with mostly white in it, our worst case scenario and i need it tinted towards green. Any ideas?\n\nI read up on apple's methods and those wont be a perfect fit for our needs seeing that they cant tint towards our desired color. \n. ",
    "ansonyao": "First make sure your image size is reasonable. I finally avoid calling this\nfunction and put a blur view on top of the image. There are also sample\ncode of blur method by apple which is not crashing.\n\nOn Wednesday, 31 August 2016, Magnus S\u00f6derlund notifications@github.com\nwrote:\n\n> I'm having the same issue but i'm not quite sure how that code should help\n> tlkahn?\n> There's is no variable context (ctx is there).\n> What is unsupportedColorSpace?\n> There is no variable colorspaceRef.\n> \n> Any other ideas on how to fix this issue? I'm desperate\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/129#issuecomment-243766227,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABL5VyhGyw62uAb_kDsVU33fiiD3b2tZks5qlYOzgaJpZM4I_vAA\n> .\n\nOn Wednesday, 31 August 2016, Magnus S\u00f6derlund notifications@github.com\nwrote:\n\n> I'm having the same issue but i'm not quite sure how that code should help\n> tlkahn?\n> There's is no variable context (ctx is there).\n> What is unsupportedColorSpace?\n> There is no variable colorspaceRef.\n> \n> Any other ideas on how to fix this issue? I'm desperate\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/129#issuecomment-243766227,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABL5VyhGyw62uAb_kDsVU33fiiD3b2tZks5qlYOzgaJpZM4I_vAA\n> .\n. First make sure your image size is reasonable. I finally avoid calling this\nfunction and put a blur view on top of the image. There are also sample\ncode of blur method by apple which is not crashing.\n\nOn Wednesday, 31 August 2016, Magnus S\u00f6derlund notifications@github.com\nwrote:\n\n> I'm having the same issue but i'm not quite sure how that code should help\n> tlkahn?\n> There's is no variable context (ctx is there).\n> What is unsupportedColorSpace?\n> There is no variable colorspaceRef.\n> \n> Any other ideas on how to fix this issue? I'm desperate\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/129#issuecomment-243766227,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABL5VyhGyw62uAb_kDsVU33fiiD3b2tZks5qlYOzgaJpZM4I_vAA\n> .\n\nOn Wednesday, 31 August 2016, Magnus S\u00f6derlund notifications@github.com\nwrote:\n\n> I'm having the same issue but i'm not quite sure how that code should help\n> tlkahn?\n> There's is no variable context (ctx is there).\n> What is unsupportedColorSpace?\n> There is no variable colorspaceRef.\n> \n> Any other ideas on how to fix this issue? I'm desperate\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/nicklockwood/FXBlurView/issues/129#issuecomment-243766227,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABL5VyhGyw62uAb_kDsVU33fiiD3b2tZks5qlYOzgaJpZM4I_vAA\n> .\n. ",
    "mrtv": "pod 'FXBlurView', '~> 1.6'\n. pod 'FXBlurView', '~> 1.6'\n. ",
    "litt1e-p": "@mrtv thanks\n. @mrtv thanks\n. ",
    "cooler333": "+1. +1. ",
    "ron137": "+1\n. +1\n. ",
    "sugite": "http://stackoverflow.com/questions/5545600/iphone-cgcontextref-cgbitmapcontextcreate-unsupported-parameter-combination/7868973. http://stackoverflow.com/questions/5545600/iphone-cgcontextref-cgbitmapcontextcreate-unsupported-parameter-combination/7868973. ",
    "simoami": "@nicklockwood ^\n\nAny clues why this happens?\n. @nicklockwood ^\n\nAny clues why this happens?\n. ",
    "Gocy015": "@FlorianBasso , glad i can help !  . @FlorianBasso , glad i can help !  . ",
    "oNguyenNgocBan": "add `free(tempBuffer);` at line 98 off FXBlurView.m \r\nI hope it can help you \ud83d\ude04 . add `free(tempBuffer);` at line 98 off FXBlurView.m \r\nI hope it can help you \ud83d\ude04 . ",
    "mixiu7992": "i encounter this problem  and some can fix it?. i encounter this problem  and some can fix it?. ",
    "floschliep": "I fixed this by getting the blur radius before entering the background queue:\r\n\r\n```\r\nCGFloat blurRadius = self.blurRadius;\r\ndispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{\r\n\r\n    UIImage *blurredImage = [self blurredSnapshot:snapshot radius:blurRadius];\r\n    dispatch_sync(dispatch_get_main_queue(), ^{\r\n\r\n        [self setLayerContents:blurredImage];\r\n        if (completion) completion();\r\n    });\r\n});\r\n```. I fixed this by getting the blur radius before entering the background queue:\r\n\r\n```\r\nCGFloat blurRadius = self.blurRadius;\r\ndispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{\r\n\r\n    UIImage *blurredImage = [self blurredSnapshot:snapshot radius:blurRadius];\r\n    dispatch_sync(dispatch_get_main_queue(), ^{\r\n\r\n        [self setLayerContents:blurredImage];\r\n        if (completion) completion();\r\n    });\r\n});\r\n```. ",
    "mehulmodihb": "@tejas-ardeshna you need to assign underlyingView to blurview in your viewController\r\n\r\nself.blurView.underlyingView = self.view. @tejas-ardeshna you need to assign underlyingView to blurview in your viewController\r\n\r\nself.blurView.underlyingView = self.view. "
}