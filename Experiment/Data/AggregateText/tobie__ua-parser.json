{
    "tobie": "Looks like there are slight changes in the way the JSON object is structured which aren't compatible with current code. I look at this over the week-end.\n. The property names are all wrong. Maybe they were different earlier. Maybe I manually changed them at some point (possible but super dumb if I did). Either way, it's a simple fix. Just want to run it before I push it.\n. Cherry-picked and pushed to master along with code fix. Bumped version number and pushed to npm registry: http://search.npmjs.org/#/ua-parser.\n. Well, it _used_ to be a [JSON file](http://code.google.com/p/ua-parser/source/browse/trunk/regexes.json). :(\n\nI'd rather leave the canonical file where it is and switch to a YAML parser.\n. Fair point.\n\nFlying out back home today. Let me look at this over the week-end.\n. Mmm. Good point about the version numbers not necessarily being ints. Mind opening another issue about that?\n. Added a script to pull and parse upstream changes directly. Ran it and merged these changes. Closing.\n. The main reason why I actually added support for this was to able to do simple comparison between versions. Note sure how to handle that one. Thoughts?\n. Good point. Although NPM modules follow semver. Browsers don't.\n. For reference, `semver`'s a package of it's own: https://github.com/isaacs/node-semver. Wondering how the upstream branch is handling this.\n. Fixed in #91 which I'd love your feedback on.\n. Thanks, cherry-picked the last one and pushed.\n. Can you remove the `.svn` dir that's in there, or is there a reason to keep it?\n. Standardizing on a attribut names is fine. It's also easy to keep the previous ones around for backwards compat purposes.\n\nI don't have a strong feeling about your second point other than that it shouldn't delay merging the projects.\n. The JS parser does support v1 and v2, it just calls them minor and patch (after [SemVer](http://semver.org/)).\n. Closing this and opening separate issues for what still needs to get done.\n. @dmolsen you can, just push them to separate branches.\n. @elsigh asigned that to you as you seem the most appropriate person to review @dmolsen's changes.\n\nI'm fine modifying the js code to point to whichever file we decide to keep after this.\n. OK, didn't know the history behind that. Is this something you want to do in the YAML regexes or in the Python code directly?\n. Awesome. You do the work. I benefit. I like that. :)\n. Sure. But why does it need write access?\n. LGTM.\n. Still unsure why the Ruby Gem couldn't be in the same folder, BTW.\n. Your second point seems a valid one. #1and #3 are red herrings, however.\n\nThat said, I'm myself in favor of creating an organization and\nsplitting the repo up, just haven't had the time to look into it nor\nto discuss naming with @elsigh.\n. Happy to include a link to other implementations in the main README.\n. @LeoColomb I'd like to make the move but want a clear strategy on how to share the regexp across repos. Eager to hear your proposal and submit it to @elsigh and @dmolsen.\n. What bothers me with this strategy is all projects need to actively upgrade everytime there's a change to the YAML.\n. That doesn't really address my concern. :(\n. For the ruby lib? Sure. Lets do this. Mind sending a PR?\n. Closing this as no one seems interested to build this.\n. Not sure, if not, patch, please. :)\n. Awesome. Thanks for your work.\n\nThis will need a license type before it gets pulled in.\n\nAlso wondering if there isn't value in adding a facade-like pattern for the most common use case (parse the UA string, get an object back). But you might disagree (and that's OK :-)).\n. LGTM. @elsigh can you confirm that `[A-z]` was intended as `[A-Za-z]`?\n. LGTM except for the fact that I have no clue how to read Haskell, and that it's missing a README (I know you know) and a code example in the main README.\n. Really thankful for the contribution, btw. It's great to se this project shaping up like this.\n. Any idea on when you can make those fixes? Would love to merge this PR.\n. Happy to merge a change that fixes the regexes stored here: https://github.com/tobie/ua-parser/blob/master/regexes.yaml\n\nI don't have the time to look into it myself atm.\n. LGTM. @elsigh can you vet this on the regexp side?\n. Bump, /cc @ozataman \n. NP. Wanted to pull your changes in nonetheless. Openend issues so this does't get forgotten.\n. Bump, /cc @ozataman\n. Fixed in #91 which I'd love your feedback on.\n. Can we please split up diffs for `regexes.yaml` from everything else?\n\nFine for merging that part. The rest of the JS changes I'd like to review separately. I'm not fond of the bitwise operator trick, unless there are proven performance benefits in what's cleary a bottleneck of the code.\n\nFurthermore, @bluesmoon mentioned in #5 that version numbers should be presented as strings (and not ints) as we're sometimes loosing info in the process of parsing these.\n\nI welcome a proposition of how to go about changing this to ship it in a 0.3 version.\n\nMakes sense?\n. Not sure what's best. Would like input from @bluesmoon as he reported the issue initially.\n. `semver` comparison only works reliably when the version strings are conformant to then  Semver spec.\n\nWhat are the ports in the other languages doing? Strings or ints?\n\nWhat about providing both?\n. There's too much different things going on in this PR for it to be pulled directly.\n\nHappy to consider some more atomic changes.\n. Commented in lots of places. Overall, would like to see this PR split up in 2-3 chunks taregting one thing only unless there's a compelling reason not to do so.\n. Sounds good. I'm wary of backwards compatibility issues, can you suggest a more elegant API which would allow us to do both?\n. No, we can't extend the language like that in a lib. It's a Very Bad Practice(TM).\n. Can we please split this up. One feature per PR. Thanks.\n. Slightly confused here. What we thought was the browser version is in fact the OS version?\n\nAlso, Netfront is the browser name, or the rendering engine name? (Seems the former, but browser engine is a synonym of rendering engine, so\u2026).\n. Why would you want to silence this error?\n. Can't this be done without backwards compat issues?\n. Really? Can't you memoize the YAML the first time it's parsed an use it from then on without modifying the API?\n\nSeems just checking for `self::$regexes` before fetching the YAML file should do the trick.\n. Your last option is of course to make the changes but make `UA::parse()` instantiate and hold on to a an instance of itself for backwards compatibility.\n. Keeping backwards compatibility is a great reason to slightly dirty the code. If for some reason, you don't want your class to have both static methods and be instantiable, just create another class for the instantiable part. The key here is that there is absolutely no reason to break backwards compat, so let's not do it. When you have lots of people relying on your code, breaking backwards compat when it is not absolutely necessary is the last thing you want to do.\n. Looks like a regression. Can you make a patch?\n. Pull request anyone?\n. Please split that up in smaller chunks with 1 PR == 1 feature. Thanks.\n. Closing. Duplicate of #78\n. /cc @elsigh \n. Awesome. Happy to merge this as soon as you've figured out a way to avoid needing a duplicate of the YAML file.\n. Ping @harryovers. Any updates? Would love to include this.\n. Bump @harryovers.\n. Bump @harryovers. Would love to include this. Have you managed to make the required changes?\n. @galmeida would you be interested in making the requested changes to the patch (and possibly doing some support for it)? @harryovers hasn't been very responsive here.\n. Yes please do.\n. Closing this as there's two new proposed implementations, #106 and #109.\n. Probably means your UA string\u2026 is not a string.\n. Question here is should we throw a clearer error here, or should we silently convert all input to strings. /cc @shripadk \n. Fixed in #91 which I'd love your feedback on.\n. We're dropping support for the is_mobile, is_spider, etc. stuff. Closing this.\n. Not sure how to best solve this without introducing the idea of a model / version number for devices, eg:\n\n```\n{'is_spider': False, 'is_mobile': True, 'family': 'BlackBerry', model: '9320' }\n```\n\n@elsigh ideas welcomed.\n. Related to #65.\n. Right, so I was looking for string to be equal, not using `stristr`.\n\nDoesn't that make the Playbook a mobile device too and break the current test suite?\n. The distinctions we're making between `isMobile` and `isMobileDevice` worries me, actually. It's awfully confusing.\n\nFor example, how do you categorize and iPod touch? is it a tablet or a mobile device?\n\nWhat about an iPad mini with 3G and Skype? is it a mobile device or a tablet?\n\nWhat's next? Whether the device is touch enabled or not?\n\nScreen size?\n\nHas a camera?\n\nEtc.\n\nWhen do we cross the line and fall into territory that belongs in a project like WURFL or the like? (Note that I think a good, open-source version of such a project would be awesome, it feels like its out of scope).\n\n/cc @elsigh\n. This is a massive can of worms. Think we should just stay out of it.\n\nOn inspection of the python code source I notice @elsigh is [also doing strict equality comparisons](https://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser.py#L251-L257) with the mobile browser array.\n. So what should we do: just have a `device` object with a single, `family` property?\n. Closing. Decided to remove all boolean props from the JS version.\n. Duplicate of #66.\n. > If you want a client-side compatible JS version I released one a few months ago: https://github.com/darcyclarke/Detect.js\n\nCool.\n\n> Noticed some things have changed/been added/fixed on the node.js version of this repo (originally was missing a fair number of things and had some weird js).\n\nYup. The first version concentrated solely on the stuff I needed at the time. I've bumped into some [rather terse code](https://github.com/tobie/ua-parser/blob/237a0ed5ae8b9496b3746bdd3508e7c0256b408f/js/index.js#L41) in the first version, but nothing that felt weird (unless its the construct `foo != null` in place of your `check` function that bothered you).\n\n> Detect.js's API is pretty much spot on to what has been done here for ua-parser (but will change slightly in v2). Going forward, I'll be hanging .name and .version strings off of the individual os, browser and device objects (instead of having to call .toString() or .toVersionString()). This may be something you guys will want to adopt.\n\nI'm worried that could be a performance issue. This code is meant to run server-side, possibly on every single request. This might me insignificant. but it might also not be so. I'd rather avoid it for now.\n\n> As well, I'm working on a node based build tool that will only include the regex profiles you want to keep the file size down (may also make a quick one page custom build page, similar to Modernizr's, available). Check out this branch if you're interested in that and the refactor: https://github.com/darcyclarke/Detect.js/tree/develop\n\nThere seems to be some interest to ship a JSON version of the YAML data in other ports then the JS one, so maybe a script that would do that would be a good first step.\n\n> Overall, I may merge all this work back into the ua-parser project once I'm happy where it's at. I don't see any glaring differences anymore so there's not much point in duplicating efforts. Expect a PR in the next month or so with a few feature PRs. For now, if you're looking for a client-side version with the same, and a few more, capabilities, you can use Detect.\n\nPlease do send a PRs. Client-side support is certainly something I'd like to offer as it's been requested multiple times (and I'm not one to judge :P).\n. Closing this for now. \n. Afaik, the YAML parser does all of the necessary escaping for you. Also, if your reasoning was correct, pretty much no other regexp would work properly.\n. WFM. You must be doing something weird in your setup.\n. > I don't know how the YAML parser comes into picture here (what has the YAML parser got to do with regexes in the yaml file?\n\nIn YAML, `\\` is only treated as an escape sequence between double quotes, not within single quotes (see [spec](http://yaml.org/spec/current.html#id2517668)). Hence `'(rekonq)/(\\d+)\\.(\\d+) Safari'` in YAML is translated to the following JS: `\"(rekonq)/(\\\\d+)\\\\.(\\\\d+) Safari\"` which gets turned into the following regexp when passed to the `Regexp` constructor: `/(rekonq)/(\\d+)\\.(\\d+) Safari/` which is exactly what you want for this.\n. Superseded by #91 which I'd love your feedback on.\n. Superseded by #91 which I'd love your feedback on.\n. LGTM\n. @elsigh there's something I don't understand that's going on here related to 3dab0b5fee06d61f745cd7f75746d41caa1e2efd.\n. Think @elsigh already added some of it in there. Think you could rewrite your PHP code to use them?\n\nAlso, having pseudo code describing how to implement the algo directly in the YAML file would help.\n. Awesomeness.\n. Following the conversation on #75, I think we should just limit this data to just the device family and drop support for the rest. You're of course welcome to keep this in the PHP version.\n. @bluesmoon I'd like your advise on this. Adding parsing for the device and os as part of the same function adds a significant cost to this, and you were already worrying about perf implication earlier on. Is adding a function that does only UA parsing a good enough option in your book?\n. Looks like this is an issue with the python implementation.\n. Closing as dup of #134.\n. That wasn't really meant to be pulled, actually, rather discussed in the context of #75.\n. This is breaking the build: https://travis-ci.org/tobie/ua-parser/builds/3387965, so either the tests are incorrect and need fixing or this patch does.\n. Ping @stephenwalz. \n. The early (non Android-based)  kindles should keep their own OS.\n. Closing as duplicate of #133.\n. Here's the data I get when parsing this:\n\n``` json\n{\n  userAgent\": {\n    \"family\": \"IE\",\n    \"major\": \"10\",\n    \"minor\": \"0\",\n    \"patch\": null\n  },\n  \"os\": {\n    \"family\": \"Windows 8\",\n    \"major\": null,\n    \"minor\": null,\n    \"patch\": null,\n    \"patchMinor\": null\n  },\n  \"device\": {\n    \"family\": \"Other\"\n  }\n}\n```\n. Still seeing the regexes.yaml file added in there.\n\nAre all the binary files here necessary? These look like external resources (but I have no idea how packaging is handled in c#.\n. Thanks. What about all the binaries?\n. > I intentionally didn't add binaries to git. I never do.\n> do you want it added or you're asking for binaries to make them available for downloading?\n\nI see the following binaries in the pull request, think @harryovers had added those initially. Are they needed? I would think not (but I know nothing about c-sharp packaging, dll and all that jazz):\n- `c-sharp/.nuget/NuGet.exe`\n- `c-sharp/packages/YamlDotNet.Core.1.1.15/YamlDotNet.Core.1.1.15.nupkg`\n- `c-sharp/packages/YamlDotNet.Core.1.1.15/lib/YamlDotNet.Core.dll`\n- `c-sharp/packages/YamlDotNet.RepresentationModel.1.1.15/YamlDotNet.RepresentationModel.1.1.15.nupkg`\n- `c-sharp/packages/YamlDotNet.RepresentationModel.1.1.15/lib/YamlDotNet.RepresentationModel.dll`\n- `c-sharp/packages/ua-parser.1.0.1/lib/net40/ua-parser.dll`\n- `c-sharp/packages/ua-parser.1.0.1/ua-parser.1.0.1.nupkg`\n- `c-sharp/ua-parser.1.0.1.nupkg`\n- `c-sharp/ua-parser/NuGet.exe`\n- `c-sharp/ua-parser/lib/YamlDotNet.Core.dll`\n- `c-sharp/ua-parser/lib/YamlDotNet.RepresentationModel.dll`\n- `c-sharp/ua-parser/lib/ua-parser.dll`\n. @galmeida: WFM. mind reviewing the other port? Please?\n. Feedback in the relevant PR is more useful.\n. Yup. And add them to this pull request, please! :)\n. Can we have tests for this one?\n. @enemaerke, can you and @galmeida please sync? He just submitted an update to #67 hours ago. It's in #106.\n. Missing a license file (preferably Apache 2.0).\n\nMissing usage info in the main README.\n\nIs including binaries and xUnit src files the common practice in c# projects (I have o experience with c# so just asking).\n. > @tobie I hope to get around to adding license, readme and the xxToString() improvements suggested by @galmedia within a few days ( a bit new to the whole git/github/pullrequest thing, so will have to figure out how to push new changes on top of my existing PR)\n\nJust push to the same branch. It's get added as if by magic.\n\n> I've added the xunit tools for running tests (no agreed-upon package manager for tools in .net, only libraries) since thats what I usually do.\n\nWFM.\n\n> By the way, wanted to ask a few questions around some of the regexes...how do I do this best?\n\nGood question. Create an issue. I guess. :-/\n. What's the _ issue?\n. See #110.\n. There's a lot of noise in the README file commit which makes it very difficult to review. Think you can fix that so the only modifications are the C# stuff you're adding and not the whole file?\n. /cc @elsigh, @enemaerke, @galmeida.\n. @dmolsen any thoughts?\n. Pull request here: #111.\n\nAll tests are still passing on node.js.\n. We're moving away from the `is_mobile` booleans. We can't precisely describe what a mobile device is.\n. I'd be in favor of this. In JS, the `Device` parser now only has one prop: `family`. Trying to define what is a mobile phone, a tablet is a nightmare (e.g. iPad with 3G vs iPod).\n. > 1: I've included unit tests of the yaml-defined testcases under test_resources\n> but I get one failing test on matching the useragent 'Mozilla/5.0 (BlackBerry;\n> U; BlackBerry 9320; en-GB) AppleWebKit/534.11+ (KHTML, like Gecko)\n> Version/7.1.0.398 Mobile Safari/534.11+' as a mobile device. From running the\n> java tests I see they have the same issue (seems the issue, at least for me\n> and for the java version, is that the list of mobile OS'es are matched exactly\n> against the family and BlackBerry 9320 != BlackBerry so the device is not\n> marked as mobile). Is this a known issue or is it just c#/java that suffer\n> from this?\n\nWe should remove this data from the test files. Tracking in #114.\n\n> 2: I've added some Apache2 copyright and my name to the readme.\n\nPlease keep comments related to the pull request in the relevant issue. If this is a fork from the initial C# submission, please make sure the original author is credited.\n\n> I'd like to\n> support this going forward but how can I contribute and stay in the loop for\n> updates/fixes across the ported platforms?\n\nNot sure what you mean. GitHub notifications should allow you to follow along. Else the regexes file should update itself.\n\n> 3: As far as I can tell there is no Travis-CI support for C# which is too bad\n> since I'd like to integrate into some CI system. Any requirements/thoughts/\n> ideas on this from more experienced githubbers?\n\nNope. Sorry. Also, we'd need to split each language into a different project to allow for multiple language CI.\n\n> 4: I think @tobie has touched on this but c# is really not all that happy with\n> _ (illegal escape) so I am currently just working around that and can remove\n> this if the regex'es are adjusted (not really a question come to think of it,\n> more of a reminder)\n\nPending PR in #111.\n. @enemaerke FYI, I fixed the regexp problem, so you no longer have to special case your implementation.\n. @elsigh are you ok with this?\n. OK, cool.\n. @dmolsen can I go ahead and remove this?\n. Indeed.\n. Merged.\n. @elsigh Feels like there's something fishy here where there are different path requirements wether the code is used bundled or via git clone.\n. The rest LGTM.\n. Could you provide example user agent strings where you're observing this problem, please?\n. Thanks. @elsigh, this seems to be by design. Can you explain your choices there? Seems it's hard to consider the \"7\" in \"Windows 7\" as a version number (given it comes after \"Windows Vista\" and \"Windows XP\").\n. OK. Cool. Lets fix this then.\n. Difficult to say without seeing some code.\n\nCan you give it your best guess and submit whatever you think makes most sense. We can always refine later.\n\nTechnically, if PR are always made against master, we shouldn't bump into merge conflicts.\n. /cc @elsigh: thoughts?\n. I'd love to see some of this included. Care to make a pull request?\n. PR with tests?\n. Would love to integrate this. However, the whole point of this is that everyone fork shares the same regexp file. Think you could make sure to use it rather than fork it?\n. Yup. Will do.\n. Done: 1f8d28c848f9949490815f104dbb233f356f9928.\n. This is because some of the regexes are case sensitive while others aren't.\n. I think we should all agree on one way of doing it, else we 're going to get lots of edge cases like this one. My preference would be to be case sensitive all the way (and thus do case sensitive matching inside the different ports too). @elsigh, thoughts?\n. Well, either way, we should go down one road and fix the rest of the regexes to comply, don't you think?\n. Looked into this a bit more. Here are the regexp strings (with matching line numbers) which don't contain mixed casing (so could be case insensitive.)  IMHO the first ones are false positives:\n\n```\n 77 '(luakit)'\n 93 'rekonq'\n102 '(konqueror)/(\\d+)\\.(\\d+)\\.(\\d+)'\n129 '(chromeframe)/(\\d+)\\.(\\d+)\\.(\\d+)'\n155 '(facebookexternalhit)/(\\d+)\\.(\\d+)'\n335 '(python-requests)/(\\d+)\\.(\\d+)'\n825 '(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)'\n831 '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\-|airn|alav|asus|attw|au\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\-n|bw\\-u|beck|benq|bilb|blac|c55/|cdm\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\-s|dica|ds\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\-|fly_|g\\-mo|g1 u|g560|gf\\-5|grun|gene|go.w|good|grad|hcit|hd\\-m|hd\\-p|hd\\-t|hei\\-|hp i|hpip|hs\\-c|htc |htc\\-|htca|htcg)'\n833 '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\\-20|i\\-go|i\\-ma|i230|iac|iac\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\-|klon|lexi|lg g|lg\\-a|lg\\-b|lg\\-c|lg\\-d|lg\\-f|lg\\-g|lg\\-k|lg\\-l|lg\\-m|lg\\-o|lg\\-p|lg\\-s|lg\\-t|lg\\-u|lg\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\-|lge/|lynx|leno|m1\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\-|nem\\-|newg|neon)'\n835 '^(netf|noki|nzph|o2 x|o2\\-x|opwv|owg1|opti|oran|ot\\-s|p800|pand|pg\\-1|pg\\-2|pg\\-3|pg\\-6|pg\\-8|pg\\-c|pg13|phil|pn\\-2|pt\\-g|palm|pana|pire|pock|pose|psio|qa\\-a|qc\\-2|qc\\-3|qc\\-5|qc\\-7|qc07|qc12|qc21|qc32|qc60|qci\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\-|scp\\-|sdk/|se47|sec\\-|sec0|sec1|semc|sgh\\-|shar|sie\\-|sk\\-0|sl45|slid|smb3|smt5|sp01|sph\\-|spv |spv\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\-mo|t218|t250|t600|t610|t618|tcl\\-|tdg\\-|telm|tim\\-|ts70|tsm\\-|tsm3|tsm5|tx\\-9|tagt)'\n837 '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n843 '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\-webcrawler|converacrawler|dataparksearch|findlinks)' \n```\n. I'm considering this is strictly a regex case sensitivity issue and that only the last 6 regexes should be fixed (unless @elsigh advises otherwise). I'm opening a new issue for this task (#134) and assigning it to @dmolsen.\n. Kindle fire should be marked as Android-based indeed.\n. Closing as duplicate of #133\n. Looked into this. Agree the UA for this should read NetFront.\n\nMind submitting a test for this too?\n. Here's what I believe we need:\n\n### Non Android OS:\n\nUA: NetFront \nDevice: Kindle\nOS: Kindle OS\n\n### Android OS:\n\nUA: Amazon Silk\nDevice: Kindle Fire\nOS: Android OS\n. Fixed in #147 \n. Have you given http://www.useragentstring.com/pages/Mobile%20Browserlist/, http://www.zytrax.com/tech/web/mobile_ids.html, and related a spin? This might help you out.\n. Defining what is or is not mobile is a perilous exercise. Are we talking size? Then what about an iPod? Are talking 3G access? Than what about an iPad mini? Are we talking about the ability to make calls? What about VoIP? Etc.\n\nIt turns out that what gets defined as mobile is use-case specific and so better sits on top of the data provided by the parser rather than as part of it.\n. Bump.\n. Thanks!\n. Bump.\n. I'm having issues merging this correctly. Rebased and cherry-picked the relevant commits in #147. LMK if there's issues with that.\n. NP. `git rebase` is your best friend.\n. We've remove the `isMobile` property as the ever-evolving landscape of devices made it more and more difficult to classify them in a meaningful way. What exactly defines a mobile device? Network access? Screen Size? Ability to make phone calls? Those questions only have meaningful answers within the context of a particular application, and so the classifying work is best left to the app itself or third party libraries that can sit on top of ua-parser.\n. This is none of my business as it's strictly about the PHP port, however I do think that providing users encouragements to use their own, patched regex files instead of contributing to the project really goes against the spirit of what we're trying to achieve here.\n. @pravindahal That use case makes a lot of sense. Thanks for clarifying.\n. These are two completely different features. Please split them up in two pull requests. Thanks!\n. OK, it seems you did submit two pull requests, but this one included both commits. The way to avoid this is to use a different branch for each one of those pull requests. As mentioned above, This one will also need tests to be accepted. Otherwise, this looks good and I'm looking forward to be able to pull it in. Thanks for your work!\n. Thanks @dmolsen. Think you can make a PR for this? Can we have something a bit more useful for the OS?\n. Sure.\n. Should be fixed in 56917913 if not, please reopen.\n. What are the benefits of these change given their obvious cost is a lot less readability?\n. Those unneeded variables and the wordiness are exactly what makes this piece of code more readable. Readability is always important, even in a one-liner. Given your changes don't improve anything (but removing trailing whitespace) and seriously hamper readability, I won't pull them in.\n\nI'm however happy to pull in a change which would only fix trailing whitespace.\n. Ideally we should base that on real data. @elsigh think you could get that from browserscope, for example?\n. Good point.\n. The goal here is to see if there's a lightweight way to organize this without compromising the data or making further updates complicated. Micro-changes to the regexp order will not have a significant impact on perf and we should not waste time on them. Eg. moving the IE regexp from position 100 to position 3 makes a lot of difference. From 3 to 2, not so much. :)\n. AFAIK, @3rd-Eden's suggestion is to order the regexp by most common UA first. I think that could make sense if it's kept reasonable and could yield substancial speed-ups on real world data.\n. You'll want to have a look at: https://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser_test.py\n. Implementations do whatever they want as long as they pass the test suite.\n. Have you tried ordering you test data in alphabetical order (which should help tremendously with merges)?\n. I'm looking at sorting the files.\n. Thanks for the awesome work @dmolsen!\n\nJust a concern worth keeping in mind: how do adding all of these new browsers impact overall performance of the parser?\n. Could we have the fix, with the failing test case? ;-)\n. @elsigh we definitely need to make a better job explaining how this works. :) Yet, quoting from the README file:\n\n> The crux of the original parser--the data collected by Steve Souders over the years--has been extracted into a separate [YAML file](https://raw.github.com/tobie/ua-parser/master/regexes.yaml) so as to be reusable as is by implementations in other programming languages.\n\nBasically, you just need to add the correct regexp (with proper bracketing) to the regexes.yaml and you should be done.\n. Fixed in #165.\n. Happy to merge this once these two issues are resolved.\n. This is hard to review. How do you know the two docs still contain the same data? how did you build this?\n. @elsigh for the record, travis builds run the JS tests on each PR, including this one: https://github.com/tobie/ua-parser/blob/master/js/test/with_fixtures.js\n. @elsigh FYI: I have a massive set of tests coming up by the way (~16000 UA strings). Data made freely available by useragentstring.com. There's a number of tests we pass (roughly 5000) and a number we don't (the rest). I was planning to include the former in the testsuite directly, and then go through the other ones bit by bit (there are lots of low hanging fruits; a lot of the issues are to do with how we name a browser e.g. IE instead of Internet Explorer).\n. > another simple PHP script confirms that each file has the exact same number\n> of and same string matches for the UA tests between your repo's test files\n> and my fork's test files.\n\nBeautiful. I wanted to make sure we weren't accidentally loosing tests in\nthe process. This LGTM.\n. There's something weird with the display of Travis output. Not sure what exactly. Anyway, the issue is because the expected output is: `\"Amaze 4G\"` and the UA string contains the substring `\"Amaze_4G\"`. You might need a dedicated device_replacement string if what you want is the former. For now, I would just modify the test so the expected output matches the input, and we can revisit once we tackle #144.\n. Thanks for those pull requests. Ideally, tests and code would be be in the same pull requests.\n. LGTM. Pulled. Thanks for writing this.\n. Hey @dmolsen, did we ever end-up making a decision on those issues? Feel like we should move forward with these so we can close this ticket.\n. Looked at how we handled that in the past, and you're right, we're just disregarding whatever's after `patch`. So let's continue doing this.\n\nWe still need to figure out what we do with non `\\.` separations. (eg here `\"_\"` and `\"b\"` in #194).\n. Hey @dmolsen, did we ever end-up making a decision on the above? Feel like we should move forward with these so we can close this ticket.\n. This should be fixed now.\n. Fixed in 656f407840ffa4c4ccbdd9922af0465c73135c89.\n. @piuccio: done:  https://npmjs.org/package/ua-parser\n\nSorry for letting that slip.\n. There are merge conflicts with this PR. Please rebase and submit again. Thanks! :)\n. Very confused by this commit which is claiming to fix a Java error and actually changing lots of tests in unclear ways.\n\nI can't pull this in in this state. Sorry.\n. Closing. @vsagar feel free to open again with response to my comments and clarification. Thanks.\n. Fixed in 656f407840ffa4c4ccbdd9922af0465c73135c89.\n. `ua` is always defined and is always an object. There previously was a bug where that wasn't the case, but this should have been fixed in the meantime.\n. If some of you need repo access to fix this, please LMK.\n. Happy to merge. Where's the PR?\n. @elsigh please way in, here. As I have no clue what these fine gentlemen are talking about. :)\n. > This also opens the issue of how projects like Detect.js can augment the knowledge from ua-parser. Like device classification (tablet/phone/etc).\n\nSo it really depends whether this info is subjective or objective. Objective info like device manufacturer, device model, etc. we'd love to integrate. Subjective info like device classification, not so much. We actually removed it because of overlap issues and corner cases (e.g.: what's defines \"mobile\"? Screensize? Ability to make calls? #g connection? Etc.).\n\nType info can be defined based on the output of the parser, so it doesn't need to be integrated into the YAML file. \n\n> Do we have a recommended path for people to add metadata to the results from ua-parser?\n\nPull requests for objective data, output-based for the rest. I'd like to avoid having to add idetnfiers as much as possible.\n\n> Detect.js includes things like device type and manufacturer on top of the forked regexes. If we can get those into the current YAML I'd be happy to incorporate a build step that pulls down and creates a JSON object from this centralized document of regex profiles.\n\nHappy to integrate the manufacturer info. The types not so much. Would you be able to reimplement types based on `device.name` info (if you really want to continue supporting type)?\n\nLonger term goals, I'd really like to turn this project in a GitHub org, and have the YAML file in its own repo so third parties can build on top of it more easily. Thoughts on the best model for that is welcomed.\n. If you want the manufacturers included, a PR with tests would be awesome. :D\n. We're reorganizing the project and splitting up the regexes into their own repos. Would love to see you contribute there. More discussions happening on the [mailing list](https://groups.google.com/forum/?hl=en#!forum/ua-parser). Closing this in the meantime.\n. @elsigh not sure what's up here.\n. Seems no one is ready to work on this for now.\n. It could be a laptop too. It might also be a crawler. Hard to say.\n. Pull Request welcomed.\n. Ideally this needs a pull request and test.\n. @aselder the official test suite is the node.js one which is [run on every commit](https://travis-ci.org/tobie/ua-parser) and pull requests and consists of 13,111 tests. Master branch is always green or commits get reverted.\n. If you have node & npm & mocha installed, it should be as easy as running the following from the command line:\n\n```\nmocha -u tdd ./js/test/*.js\n```\n. Let me know if you have any issues.\n. @sjiang Can you please comment on the Java modifications?\n. Could you split-up the Python fix from the regex commit into two separate pull requests?\n. Yeah. We need to split up the projects.\n. Closing this. Will be resolved when moving to a JSON API.\n. Fixed in #230.\n. You might want to open a pull request and add them to this file:\n\nhttps://github.com/tobie/ua-parser/blob/master/regexes.yaml\n\nTests are also important to get your pull request approved. They would go here:\n\nhttps://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser.yaml\n. Can we close this?\n. That breaks a number of tests. Can you fix?\n\nThanks!\n. Closing as duplicate of #55. \n. This also needs tests.\n. This isn't passing the tests, also please add your query strings to the test databases.\n. Dup of #246.\n. Can't pull this as it is as it's failing the tests. Might mean some tests are wrong, in which case please fix them and explain your reasoning behind the fix.\n\nYou might have more success in getting things merged if you do more atomic commits (e.g. one per user agent fix).\n. Please open a new ticket per issue. Thanks.\n. Not until all tests pass, I'm afraid. I'll also ask you to clean it up and resubmit it as a single commit once that's done. I'd like to avoid polluting the tree with 15 commits with unclear messages.\n. Yes. Use a Git client on your own machine, pull the repository there, and push the changes back to your repo.\n. As I recommended earlier: please use a Git client, make your changes locally and submit them in atomic ready to be merged issues. I'd love to be able to include your contributions, but you really need to follow the [contribution guidelines](https://github.com/tobie/ua-parser#contributing-changes-to-regexesyaml) if you want me to be able to do so. I'm closing this for now hoping you'll be able to get your git client to work and submit new pull requests with one change (e.g. support for the AvantGo browser + related tests) per pull request (I suggest you create one branch per issue, all forked from the master branch).\n. You're welcome to send a PR for the guidelines too.\n. I'm open to the first part of your issue. SOmeone needs to do the work and combine it into something that is language agnostic.\n\nThe second part od your question is a red herring, there is no standard used across user agents that allows you to gather this data in a meaningful way. If it was the case, this whole project would be pointless and no one would have started it.\n. I don't. But I don't see what difference this would really make, as none of your chunks would gain meaning in the process.\n. What are the benefits of this approach? What are the drawbacks?\n. Sure, but can you easily express all the error routines in language agnostic way? How will you crowd-source those? Etc.\n\nAlso: http://webaim.org/blog/user-agent-string-history/ :D\n. The way this project is structured makes it really easy to share the parser across a wide variety of computer languages (hence language agnostic). It also makes it very easy for folks to contribute to the project (crowd-source friendly).\n. It is also trivial to spoof the JS user agent string. :) Anyway, this thread has gone way off topic at this point. I'm going to close this and let you reopen an issue exclusively targeting your OSFamily request if you think there's value in that.\n. Thanks. Patch welcomed.\n. The 13K tests that ua-parser contains are run in ~2 seconds. Clearly the number of tests is not an issue at this point.\n\nI don't see any value in pruning the test files. Closing this as wontfix.\n. It is generally rather rare that we have to fix existing test cases. If so, it's still cheaper to do this on a case per case basis.\n. Please cleanup your repository of start from a fresh copy. Closing this as I won't be able to merge it.\n. You probably want to wipe our your GH fork and fork anew.\n. Could you provide a test for this? I was under the impression we had this covered already.\n. Beautiful. Thanks!\n. Thanks that's a bunch more readable. May I suggest you create a branch per pull request on your side? Should make things a lot easier.\n. > wouldnt making multiple branches cause the same problem as before when i made the branch for amigaos and it still pulled from the master branch.\n\nNo. You just need to make your branches from the untouched `master` branch.\n. > is there anything else needed for this to be merged?\n\nYes, please see my above comment in `regexp.yaml`.\n. This PR can't be merged. Please rebase it and reopen this issue once it's ready to be merged. Thanks!\n. A whole bunch of tests need to be updated apparently.\n. Get a better client or use the command line. That's unheard of.\n. Yes. Please address my above comment about regexp readability.\n. Yes please. :)\n. What is this patch fixing?\n. Will need tests to be fixed.\n. @philipzae can you please try to bundle commits together as much as possible? 3-5 commits for a single change pollutes the revision history and makes backing out of problematic commits much more complicated then needed.\n. Well, in that case, please fix your client before continuing your contributions. Thanks.\n. The fact that you're working from the Web client shouldn't prevent you from giving helpful names to commits. I thank you for your contributions but kindly ask you to be a good citizen and adere to good coding practices and respect contribution guidelines. Thanks.\n. Please change the commit \"title\" (first line). That's the key part. (Hadn't even noticed the \"description\" as this is a GH concept, not a Git one.) \n\nThanks!\n. `git commit --amend` is your friend. ;)\n. There are merge conflicts here, unfortunately.\n\nCan you please fix?\n. I don't know. You might want to close this PR and open a new one if you can't figure this out.\n. Thanks!\n. That's awesome! Could you add tests?\n. There are YAML files in `/test_resources`.\n. Have you tried rebasing after pulling a recent master?\n. Yes, sorry. You're rebasing from your own GitHub account. You want to rebase from mine. To do so, [add it as a remote](https://help.github.com/articles/adding-a-remote) (`$ git remote add main git@github.com:tobie/ua-parser.git`), fetch it (`$ git fetch main`) then rebase from there (`$ git rebase main/master HbbTV`).\n. No problem. Closing. Obsoleted by #286.\n. Fixed in fa7003f3\n. Awesome. Thanks a bunch!\n\nCan you please update the main README with details of your port (create a new usage section, add yourself as a maintainer of this part, and add the licensing terms for the port too).\n\nThanks again.\n. just follow the terms of the license precisely:\n- http://www.apache.org/licenses/LICENSE-2.0#redistribution for regexes.yaml\n- https://github.com/tobie/ua-parser/blob/master/php/LICENSE for the PHP code.\n. Could you please add tests for this?\n. @commenthol could you please rebase this PR now that I've accepted @jpvincent's patch? (I had missed yours previously).\n\nWould also like @elsigh's input on the branding changes (`iPad` --> `Apple iPad`).\n. Looking at your other PR (#284), and the brand issue you bring up here, we might want to change what the device object contains, maybe to something like:\n\n```\ndevice.brand // => \"Nokia\"\ndevice.family // => \"Lumia\"\ndevice.model // => \"505\"\n```\n\nThoughts?\n. > But we've been inconsistent here right?\n\nYeah, we've consistently been inconsistent.\n\nGiven that, I'm not sure what the best strategy going forward is, tbh.\n. There's a tremendous amount of noise due to whitespace issues in your diff. Think you could fix that?\n. @mamod think travis now supports multiple languages. Think it would be worthwhile adding your travis build here? In which case this PR could happen here.\n\n@commenthol think we should have separate PR, here, too. This is going to get ugly quickly if not.\n. Great stuff overall. The \"multiple replacement placeholder\" stuff needs to be brought up a bit more globally so that all implementations can use it.\n\nWhat's the backwards compat story, here?\n. Any news?\n. The Travis build is failing right now, so the first step would be to fix that.\n. /cc @elsigh ^\n. @elsigh agree this commit is awesome.\n\nConcerned with updates of ports besides JS, python, and perl, though\n\nWhat's the story here? How should we handle that (this time and in the future)?\n. > I don't know how many of our langs are supported by travis, but that the more we can have all of the parsers run the same tests the better. If all the langs were running through Travis it does place quite a burden on anyone who wants a new feature to put it in everywhere, but I'd be ok with that.\n\nAgreed.\n\n> For this case I'm not that concerned here about new functionality in the device parser, as opposed to say the UA parser. But it would be nice to get a note out to all the other maintainers at a minimum.\n\nThat sounds good. We need a channel to do that, though. Any suggestions?\n\n> Then again, if we had a single page/file that outlines the spec of the parser everyone could subscribe to that and we could approve changes to that file before changes to any/all langs.\n\n[snip]\n\n> Right now we just have a little section for each language but not an overall spec..\n\nThat's also a great idea. Should we get started?\n. That looks like a good start. I'll try to find time to review this by EOW. Thanks for your work on this!\n. I completely dropped the ball on this one. Sorry.\n\nCc: @enemaerke, @shripadk, @yihuanz, @ozataman, @sjiang, @mamod, @dmolsen, @nielsbasjes, @elsigh\n\nFolks,\n\nI'd like for us to be able to move forward with this PR. For this I'd like feedback by the November 1st from you all on whether you're intending to implement the changes in your language port or not, and ideally an estimated timeframe in which you will be ready to release an updated version.\n\n @commenthol, I really like you early spec draft. I suggest you create a separate PR for it so we can pull it in and work on it in the meantime. I've also given you commit rights to the repo, please handle this right responsibly. ;)\n\nThanks.\n\n--tobie\n. As a sidenote, wouldn't `device.manufacturer` make more sense then `device.brand`?\n. > Therefore I would like to stick with \"brand\" in order to be able to solve those cases.\n\nMakes sense.\n. > my nexus 4 says LG on the back.\n\nThis is going to be fun!\n. Haven't heard back from a bunch of you. I guess the only reasonable strategy there will be to mark as obsolete (and or remove?) these implementation from the project.\n\nOverall, it might be worthwhile to reconsider how to best organize this project.\n. Create a new issue (#304) to discuss this further.\n. Likewise. Should have more time for this starting early August.\n. Looks like you have an issue with the python port not implementing `os_v1_replacement`--hence the travis build fail. @elsigh can you chime in, here? What's the plan?\n. > Hrm, it looks like OSParser has os_v1_replacement actually..\n\nMy bad, looked in the wrong place. Sorry.\n. Merged #287. Restarted the travis build which should now pass.\n. LGTM. Merging.\n. In the future, please rebase master instead of merging it (less commit noise).\n. What makes you think the test is a fault here, rather than the Java implementation?\n. Looking at this a bit more in detail, it's clear to me that the issue is with the Java implementation (which doesn't handle `os_v2_replacement` properly.) Android Donut is == to version 1.2, not version 1.\n\nClosing this as wontfix.\n\nIMHO the issue is with the lack/partial support for `os_v2_replacement` in the Java implementation.\n. > I wasn't claiming that there's a problem with tests, but if the test are failing under Java, then I think this should be fixed one way (changes to tests, that didn't work under Java when added) or other (changes to Java implementation).\n\nAgreed this should be fixed. But this should be fixed the correct way. Turns out the tests are correct and the Java implementation isn't. Therefore the implementation needs fixing.\n\n> I can suggest that probably easiest way to fix that would be to remove that that test case from Java's version of tests, if that's OK.\n\nThat's not possible, unfortunately. The tests are shared across implementations.\n. Test cases would be awesome!\n. You have a bunch of tests failing, some which are to do with how YAML distinguishes null from undefined.\n\nCould you please fix those?\n. Yeah, I had the same reaction. Are these two different browsers or the same browser on two different platforms?\n. It sounds like we should treat as IEMobile, then, and identify the device through the device parser, no?\n. Please reopen once you've fixed the failing test cases. Thanks!\n. Pull request welcomed.\n. LGTM\n. Think it would be great to add a section that recommends a JSON structure for the output of the parser that implementations are supposed to stay close to.\n. Closing this as it's already been merged in the new repo.\n. Not sure I understand the goal (goals?) of this PR. Could you elaborate.\n. OK, I guess, I need to try it out to really understand.\n. That what as smart move. Thanks!\n. Please rebase your change from the current master. There's about 15 unrelated commits in here.\n. We're integrating these changes in the new repository:\nhttps://github.com/ua-parser/uap-core\n. We're splitting up devices into `brand`, `family` and `model`. See #285.\n. I'd actually favor smaller incremental PR. Getting agreement, reviewing massive PR like #285 is a slow process.\n. Thanks for your suggestion @commenthol.\n\nThere's are two things about it that bother me:\n1. I want ports to each have their own repository, whether they're part of the [ua-parser GitHub org](https://github.com/ua-parser) or not.\n2. splitting up copies of regexes across files and folders is utterly wrong. It's basically re-inventing versioning, but making us do it by hand. Accepting contributions would be terrible, merging stuff atrocious and will bump into issue were previous versions get fixed but not new ones, etc.\n\nThe only reasonable choice to serve different version of the regex is to tag versions in GitHub, then have a open-source friendly host (e.g. nodejitsu) serve all of the differently tagged versions.\n. Yeah. That's the path I'm looking at. \n. Started some action here: https://github.com/ua-parser\n. Lack of time. :-(\n. Closing this. See you in the mailing list, irc, or on https://github.com/ua-parser/ua-parser.github.io/issues.\n. Cool. I don't think I've seen you chime in on #285. Can you?\n. Closing this given a conversation on perf is starting on the mailing list.  \n. I don't think possible values are a closed set, actually. But I might be wrong. I'd love to include a script that would gather this data from the YAML into the repo itself if you're so inclined, @BradRuderman.\n. Done. Thanks for your help so far @dmolsen!\n. Sorry, I though you were planning to finish the TODOs before getting this pulled in.\n\nThis LGTM but needs addition to the main README file. I'll pull as soon as that's ready.\n. Sorry for the huge delay in pulling this. :(\n. Closing this as wontfix (as explained in #75)\n. This is not passing a number of tests: https://travis-ci.org/tobie/ua-parser/builds/16018472.\n. Please reopen this PR once you've fixed the failing tests. Thanks!\n. Ya, sorry folks. This project is in urgent need of an overhaul in order to\nsimplify this issue. Sorry this has been delayed. I don't have an ETA for\nnow, but will come back with a solution shortly.\n\nOn Mon, Jan 27, 2014 at 7:09 PM, jakub-g notifications@github.com wrote:\n\n> @ all\n> \n> If you guys really need a new version, you can have it without it being\n> released in npm, by changing package.json to point to the GH repo\n> directly:\n> \n> \"ua-parser\": \"git+https://github.com/tobie/ua-parser.git#faad2c33ac1497e7b8fba5eb7aab55fac81b36c1\",\n> \n> (this points to the newest commit in master as of today).\n> \n> However this is highly suboptimal since it\n> - clones whole git repo (not only the Javascript part)\n> - you'll have to manually remove ua-parser folder from node_modulesfirst in order to have it installed with npm\n>   install\n> \n> Last time the package was updated on npm was when I emailed @tobiehttps://github.com/tobiefew months ago and he was wondering about somehow splitting the code and\n> regexes, and this would probably be a good idea, but given the number of\n> languages (basically separated subpackages linked only by the regexes file)\n> hosted in this repo, this wouldn't be that easy and would require\n> cooperation from everyone.\n> \n> Anyway for the time being, it would be good to find a maintainer of the\n> npm package who would release a new version to npm every now and then, if\n> @tobie https://github.com/tobie is too busy.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/323#issuecomment-33402836\n> .\n. Updated: https://www.npmjs.org/package/ua-parser\n. Merged. Thanks!\n. Please reopen this PR once you've added tests to it. Thanks!\n. Closing this, please reopen once you;ve provided a test. Thanks.\n. There is no policy. Just an urgent need to split this repo up to something more reasonable.\n. I wish I had. I want to come back with a plan for this asap. So at least\nthe plan you should get soon. :)\n. @elsigh would you have some thoughts on this? This is akin to the tablet/mobile distinction again.\n. Done.\n. A new release, as in what precisely?\n. Oh, so that's just a tag?\n. Created a new release: https://github.com/tobie/ua-parser/releases/tag/php-3.3\n\nNot sure that triggered anything. :(\n. Doesn't seem to be working to well. Could be tied to version name (\"php\" prefix).\n. I'm concerned this would screw-up npm, tbh.\n\nI think we really need to focus on splitting up the repo urgently at this point.\n. This one needs tests.\n. See the [contributing guide](https://github.com/tobie/ua-parser/blob/master/CONTRIBUTING.md).\n. This needs tests.\n. Please reopen this PR once you've added tests to it. Thanks!\n. Agree that would be super useful.\n\nWe're in the process of breaking up the repo into an org. Can I ping you once this is done?\n. Ping me if you don't hear back soon.\n. Thanks @commenthol, wasn't sure where the link to that one was. Mind adding that document to [ua-parser/uap-core](https://github.com/ua-parser/uap-core) via a PR (and modifying the README accordingly)?\n. No idea what you're talking about. Sorry. :(\nFeel free to reopen with more info. Thanks!\n. The link you posted mentions issues in IE, but you're pointing to PHP code run on the server. Sounds like your issues might be to do with GH being down, not with using raw (which, fwiw, is the documented way to get at the files though GH's API.)\n. Closing. As mentioned above, this is underway.\n. What language is that for?\n. > What language is that for?\n\n^ ??\n. Patch welcomed.\n\nOn Fri, Sep 19, 2014 at 7:09 PM, Nicholas Head notifications@github.com\nwrote:\n\n> so maybe @enemaerke https://github.com/enemaerke is person to look at\n> this.\n> \n> the whole yamldotnet dependency is kinda weird, anyway. it looks like it's\n> only needed for the unit tests for the package. so that shouldn't be a\n> dependency of the package, after it's built/deployed..\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/354#issuecomment-56205813.\n. Plan moving forward is to rely on a JSON API to get the latest regexes. Closing this.\n. We need to split repositories up real fast. Started here: https://github.com/ua-parser\n. Also-can't travis run builds in multiple languages?\n. @Ironholds yup. though intent is to split up the project in its own org, I haven't had the time to make progress there. :(\n. We actually removed all of this data in the past because what qualifies a mobile phone vs a tablet is very much app specific (it could be perf related, screen sized, etc.). Closing as wontfix.\n. Closing this as worksforme.\n. Sounds good.\n. Not that I know of. See related thread on the mailing list: https://groups.google.com/d/msg/ua-parser/clM4un5jgY4/b9alPXlZ6zYJ\n. ua-parser does not do device type detection. Closing as wontfix.\n. Closing this as there's no good answer to that question that we can provide.  \n. If we follow this line of reasoning, we should have all of the following report as Firefox, no?\n- `pale moon (firefox variant)`\n- `firefox mobile`\n- `firefox namoroka`\n- `firefox shiretoko`\n- `firefox minefield`\n- `firefox alpha`\n- `firefox beta`\n- `microb`\n- `mozilladeveloperpreview`\n- `iceweasel`\n\nIn which case we should also do the same with Chrome Canary and the like. Or am I missing something?\n. /cc @commenthol @Ironholds \n. > 1. Really kick-off the seperation of parsers to yaml rules as intended by #304 and started with [ua-parser](https://github.com/ua-parser/).\n>    - Prepare the parser base-projects to allow PRs from active members \n>    - Milestones and/or Timelines could be a good starting point...\n>      - Step1: Migrate the present\n>    - Step2: Adding new features\n\nAgreed.\n\n> 1. Consider correct versioning as must-have\n>    - ua-parser on npm is in a terrible state #323\n>    - Is releasing Java SNAPSHOTS only the right release model?\n\nI think we should completely split out the software versioning from the regex versioning. We need to provide the regexes through an (JSON) API, making both the latest version available and each change set. The different lang ports could then just fetch that data on a regular basis.\n\n> 1. Truely state what shall be in and what shall be out-of-scope of ua-parser.\n\nI think a lot of the below are loadable goals, but not all are necessarily doable with the resources we have.\n\n> - E.g. Is Brand-Model Parsing as proposed in #466 really desired?\n\nIt seems we agreed it is, but frankly I'd need a three bullet point summary which includes the risk + cost of doing that to make a decision.\n\n> - Does generalization of parser sematics (multi-replacements, case-insensitive matches as of brand-model parsing) make sense for `user_agent_parsers:` and `os_parsers:` rules as well?\n\nSame as above.\n\n> - Can we finalize the first draft version of the spec? #300\n\nYes. Can we first decide where it belongs, though? Should we give it its own repo?\n\n> - Are annotating parsing results desired? E.g. does this project want to have details of a device \"mobile/tablet/desktop\" as proposed in #428 or doesn't it as stated in #75?\n\nI'm keeping to my initial position here. As explained on both #428 (which I just closed) and in previous occasions.\n\n> - Do we want to get seperate parser-rules for browser engines as proposed by #241?\n\nI'm fine with that, but it should happen after we ship the split-up version of ua-parser.\n\n> - Order of priority: Is performance more important than the detailed detection of a UA?\n\nThat's a good question. I think that the work @Ironholds will be leading here should allow us to keep our cake and eat it too. If the regexes are sorted, we can pretty much have both.\n\n>  Is working on performance, which inevitable involves a change of parser semantics, a project goal?\n\nKey goal here is to make this project easy to contribute to and easy to use in different languages.\n. Yeah. This is not a client-side tool. Legitimate client-side usecases are seldom, tbh. \n. Current repo is here: https://github.com/ua-parser/uap-java. Closing.\n. Dup of ua-parser/uap-core#131.\n. > Looks like the travis build is failing @tobie ; shall I update your travis config file as well?\r\n\r\nThat would be awesome, @russellwhitaker, though I have no idea what it does at this point.. Looks like there are slight changes in the way the JSON object is structured which aren't compatible with current code. I look at this over the week-end.\n. The property names are all wrong. Maybe they were different earlier. Maybe I manually changed them at some point (possible but super dumb if I did). Either way, it's a simple fix. Just want to run it before I push it.\n. Cherry-picked and pushed to master along with code fix. Bumped version number and pushed to npm registry: http://search.npmjs.org/#/ua-parser.\n. Well, it _used_ to be a [JSON file](http://code.google.com/p/ua-parser/source/browse/trunk/regexes.json). :(\n\nI'd rather leave the canonical file where it is and switch to a YAML parser.\n. Fair point.\n\nFlying out back home today. Let me look at this over the week-end.\n. Mmm. Good point about the version numbers not necessarily being ints. Mind opening another issue about that?\n. Added a script to pull and parse upstream changes directly. Ran it and merged these changes. Closing.\n. The main reason why I actually added support for this was to able to do simple comparison between versions. Note sure how to handle that one. Thoughts?\n. Good point. Although NPM modules follow semver. Browsers don't.\n. For reference, `semver`'s a package of it's own: https://github.com/isaacs/node-semver. Wondering how the upstream branch is handling this.\n. Fixed in #91 which I'd love your feedback on.\n. Thanks, cherry-picked the last one and pushed.\n. Can you remove the `.svn` dir that's in there, or is there a reason to keep it?\n. Standardizing on a attribut names is fine. It's also easy to keep the previous ones around for backwards compat purposes.\n\nI don't have a strong feeling about your second point other than that it shouldn't delay merging the projects.\n. The JS parser does support v1 and v2, it just calls them minor and patch (after [SemVer](http://semver.org/)).\n. Closing this and opening separate issues for what still needs to get done.\n. @dmolsen you can, just push them to separate branches.\n. @elsigh asigned that to you as you seem the most appropriate person to review @dmolsen's changes.\n\nI'm fine modifying the js code to point to whichever file we decide to keep after this.\n. OK, didn't know the history behind that. Is this something you want to do in the YAML regexes or in the Python code directly?\n. Awesome. You do the work. I benefit. I like that. :)\n. Sure. But why does it need write access?\n. LGTM.\n. Still unsure why the Ruby Gem couldn't be in the same folder, BTW.\n. Your second point seems a valid one. #1and #3 are red herrings, however.\n\nThat said, I'm myself in favor of creating an organization and\nsplitting the repo up, just haven't had the time to look into it nor\nto discuss naming with @elsigh.\n. Happy to include a link to other implementations in the main README.\n. @LeoColomb I'd like to make the move but want a clear strategy on how to share the regexp across repos. Eager to hear your proposal and submit it to @elsigh and @dmolsen.\n. What bothers me with this strategy is all projects need to actively upgrade everytime there's a change to the YAML.\n. That doesn't really address my concern. :(\n. For the ruby lib? Sure. Lets do this. Mind sending a PR?\n. Closing this as no one seems interested to build this.\n. Not sure, if not, patch, please. :)\n. Awesome. Thanks for your work.\n\nThis will need a license type before it gets pulled in.\n\nAlso wondering if there isn't value in adding a facade-like pattern for the most common use case (parse the UA string, get an object back). But you might disagree (and that's OK :-)).\n. LGTM. @elsigh can you confirm that `[A-z]` was intended as `[A-Za-z]`?\n. LGTM except for the fact that I have no clue how to read Haskell, and that it's missing a README (I know you know) and a code example in the main README.\n. Really thankful for the contribution, btw. It's great to se this project shaping up like this.\n. Any idea on when you can make those fixes? Would love to merge this PR.\n. Happy to merge a change that fixes the regexes stored here: https://github.com/tobie/ua-parser/blob/master/regexes.yaml\n\nI don't have the time to look into it myself atm.\n. LGTM. @elsigh can you vet this on the regexp side?\n. Bump, /cc @ozataman \n. NP. Wanted to pull your changes in nonetheless. Openend issues so this does't get forgotten.\n. Bump, /cc @ozataman\n. Fixed in #91 which I'd love your feedback on.\n. Can we please split up diffs for `regexes.yaml` from everything else?\n\nFine for merging that part. The rest of the JS changes I'd like to review separately. I'm not fond of the bitwise operator trick, unless there are proven performance benefits in what's cleary a bottleneck of the code.\n\nFurthermore, @bluesmoon mentioned in #5 that version numbers should be presented as strings (and not ints) as we're sometimes loosing info in the process of parsing these.\n\nI welcome a proposition of how to go about changing this to ship it in a 0.3 version.\n\nMakes sense?\n. Not sure what's best. Would like input from @bluesmoon as he reported the issue initially.\n. `semver` comparison only works reliably when the version strings are conformant to then  Semver spec.\n\nWhat are the ports in the other languages doing? Strings or ints?\n\nWhat about providing both?\n. There's too much different things going on in this PR for it to be pulled directly.\n\nHappy to consider some more atomic changes.\n. Commented in lots of places. Overall, would like to see this PR split up in 2-3 chunks taregting one thing only unless there's a compelling reason not to do so.\n. Sounds good. I'm wary of backwards compatibility issues, can you suggest a more elegant API which would allow us to do both?\n. No, we can't extend the language like that in a lib. It's a Very Bad Practice(TM).\n. Can we please split this up. One feature per PR. Thanks.\n. Slightly confused here. What we thought was the browser version is in fact the OS version?\n\nAlso, Netfront is the browser name, or the rendering engine name? (Seems the former, but browser engine is a synonym of rendering engine, so\u2026).\n. Why would you want to silence this error?\n. Can't this be done without backwards compat issues?\n. Really? Can't you memoize the YAML the first time it's parsed an use it from then on without modifying the API?\n\nSeems just checking for `self::$regexes` before fetching the YAML file should do the trick.\n. Your last option is of course to make the changes but make `UA::parse()` instantiate and hold on to a an instance of itself for backwards compatibility.\n. Keeping backwards compatibility is a great reason to slightly dirty the code. If for some reason, you don't want your class to have both static methods and be instantiable, just create another class for the instantiable part. The key here is that there is absolutely no reason to break backwards compat, so let's not do it. When you have lots of people relying on your code, breaking backwards compat when it is not absolutely necessary is the last thing you want to do.\n. Looks like a regression. Can you make a patch?\n. Pull request anyone?\n. Please split that up in smaller chunks with 1 PR == 1 feature. Thanks.\n. Closing. Duplicate of #78\n. /cc @elsigh \n. Awesome. Happy to merge this as soon as you've figured out a way to avoid needing a duplicate of the YAML file.\n. Ping @harryovers. Any updates? Would love to include this.\n. Bump @harryovers.\n. Bump @harryovers. Would love to include this. Have you managed to make the required changes?\n. @galmeida would you be interested in making the requested changes to the patch (and possibly doing some support for it)? @harryovers hasn't been very responsive here.\n. Yes please do.\n. Closing this as there's two new proposed implementations, #106 and #109.\n. Probably means your UA string\u2026 is not a string.\n. Question here is should we throw a clearer error here, or should we silently convert all input to strings. /cc @shripadk \n. Fixed in #91 which I'd love your feedback on.\n. We're dropping support for the is_mobile, is_spider, etc. stuff. Closing this.\n. Not sure how to best solve this without introducing the idea of a model / version number for devices, eg:\n\n```\n{'is_spider': False, 'is_mobile': True, 'family': 'BlackBerry', model: '9320' }\n```\n\n@elsigh ideas welcomed.\n. Related to #65.\n. Right, so I was looking for string to be equal, not using `stristr`.\n\nDoesn't that make the Playbook a mobile device too and break the current test suite?\n. The distinctions we're making between `isMobile` and `isMobileDevice` worries me, actually. It's awfully confusing.\n\nFor example, how do you categorize and iPod touch? is it a tablet or a mobile device?\n\nWhat about an iPad mini with 3G and Skype? is it a mobile device or a tablet?\n\nWhat's next? Whether the device is touch enabled or not?\n\nScreen size?\n\nHas a camera?\n\nEtc.\n\nWhen do we cross the line and fall into territory that belongs in a project like WURFL or the like? (Note that I think a good, open-source version of such a project would be awesome, it feels like its out of scope).\n\n/cc @elsigh\n. This is a massive can of worms. Think we should just stay out of it.\n\nOn inspection of the python code source I notice @elsigh is [also doing strict equality comparisons](https://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser.py#L251-L257) with the mobile browser array.\n. So what should we do: just have a `device` object with a single, `family` property?\n. Closing. Decided to remove all boolean props from the JS version.\n. Duplicate of #66.\n. > If you want a client-side compatible JS version I released one a few months ago: https://github.com/darcyclarke/Detect.js\n\nCool.\n\n> Noticed some things have changed/been added/fixed on the node.js version of this repo (originally was missing a fair number of things and had some weird js).\n\nYup. The first version concentrated solely on the stuff I needed at the time. I've bumped into some [rather terse code](https://github.com/tobie/ua-parser/blob/237a0ed5ae8b9496b3746bdd3508e7c0256b408f/js/index.js#L41) in the first version, but nothing that felt weird (unless its the construct `foo != null` in place of your `check` function that bothered you).\n\n> Detect.js's API is pretty much spot on to what has been done here for ua-parser (but will change slightly in v2). Going forward, I'll be hanging .name and .version strings off of the individual os, browser and device objects (instead of having to call .toString() or .toVersionString()). This may be something you guys will want to adopt.\n\nI'm worried that could be a performance issue. This code is meant to run server-side, possibly on every single request. This might me insignificant. but it might also not be so. I'd rather avoid it for now.\n\n> As well, I'm working on a node based build tool that will only include the regex profiles you want to keep the file size down (may also make a quick one page custom build page, similar to Modernizr's, available). Check out this branch if you're interested in that and the refactor: https://github.com/darcyclarke/Detect.js/tree/develop\n\nThere seems to be some interest to ship a JSON version of the YAML data in other ports then the JS one, so maybe a script that would do that would be a good first step.\n\n> Overall, I may merge all this work back into the ua-parser project once I'm happy where it's at. I don't see any glaring differences anymore so there's not much point in duplicating efforts. Expect a PR in the next month or so with a few feature PRs. For now, if you're looking for a client-side version with the same, and a few more, capabilities, you can use Detect.\n\nPlease do send a PRs. Client-side support is certainly something I'd like to offer as it's been requested multiple times (and I'm not one to judge :P).\n. Closing this for now. \n. Afaik, the YAML parser does all of the necessary escaping for you. Also, if your reasoning was correct, pretty much no other regexp would work properly.\n. WFM. You must be doing something weird in your setup.\n. > I don't know how the YAML parser comes into picture here (what has the YAML parser got to do with regexes in the yaml file?\n\nIn YAML, `\\` is only treated as an escape sequence between double quotes, not within single quotes (see [spec](http://yaml.org/spec/current.html#id2517668)). Hence `'(rekonq)/(\\d+)\\.(\\d+) Safari'` in YAML is translated to the following JS: `\"(rekonq)/(\\\\d+)\\\\.(\\\\d+) Safari\"` which gets turned into the following regexp when passed to the `Regexp` constructor: `/(rekonq)/(\\d+)\\.(\\d+) Safari/` which is exactly what you want for this.\n. Superseded by #91 which I'd love your feedback on.\n. Superseded by #91 which I'd love your feedback on.\n. LGTM\n. @elsigh there's something I don't understand that's going on here related to 3dab0b5fee06d61f745cd7f75746d41caa1e2efd.\n. Think @elsigh already added some of it in there. Think you could rewrite your PHP code to use them?\n\nAlso, having pseudo code describing how to implement the algo directly in the YAML file would help.\n. Awesomeness.\n. Following the conversation on #75, I think we should just limit this data to just the device family and drop support for the rest. You're of course welcome to keep this in the PHP version.\n. @bluesmoon I'd like your advise on this. Adding parsing for the device and os as part of the same function adds a significant cost to this, and you were already worrying about perf implication earlier on. Is adding a function that does only UA parsing a good enough option in your book?\n. Looks like this is an issue with the python implementation.\n. Closing as dup of #134.\n. That wasn't really meant to be pulled, actually, rather discussed in the context of #75.\n. This is breaking the build: https://travis-ci.org/tobie/ua-parser/builds/3387965, so either the tests are incorrect and need fixing or this patch does.\n. Ping @stephenwalz. \n. The early (non Android-based)  kindles should keep their own OS.\n. Closing as duplicate of #133.\n. Here's the data I get when parsing this:\n\n``` json\n{\n  userAgent\": {\n    \"family\": \"IE\",\n    \"major\": \"10\",\n    \"minor\": \"0\",\n    \"patch\": null\n  },\n  \"os\": {\n    \"family\": \"Windows 8\",\n    \"major\": null,\n    \"minor\": null,\n    \"patch\": null,\n    \"patchMinor\": null\n  },\n  \"device\": {\n    \"family\": \"Other\"\n  }\n}\n```\n. Still seeing the regexes.yaml file added in there.\n\nAre all the binary files here necessary? These look like external resources (but I have no idea how packaging is handled in c#.\n. Thanks. What about all the binaries?\n. > I intentionally didn't add binaries to git. I never do.\n> do you want it added or you're asking for binaries to make them available for downloading?\n\nI see the following binaries in the pull request, think @harryovers had added those initially. Are they needed? I would think not (but I know nothing about c-sharp packaging, dll and all that jazz):\n- `c-sharp/.nuget/NuGet.exe`\n- `c-sharp/packages/YamlDotNet.Core.1.1.15/YamlDotNet.Core.1.1.15.nupkg`\n- `c-sharp/packages/YamlDotNet.Core.1.1.15/lib/YamlDotNet.Core.dll`\n- `c-sharp/packages/YamlDotNet.RepresentationModel.1.1.15/YamlDotNet.RepresentationModel.1.1.15.nupkg`\n- `c-sharp/packages/YamlDotNet.RepresentationModel.1.1.15/lib/YamlDotNet.RepresentationModel.dll`\n- `c-sharp/packages/ua-parser.1.0.1/lib/net40/ua-parser.dll`\n- `c-sharp/packages/ua-parser.1.0.1/ua-parser.1.0.1.nupkg`\n- `c-sharp/ua-parser.1.0.1.nupkg`\n- `c-sharp/ua-parser/NuGet.exe`\n- `c-sharp/ua-parser/lib/YamlDotNet.Core.dll`\n- `c-sharp/ua-parser/lib/YamlDotNet.RepresentationModel.dll`\n- `c-sharp/ua-parser/lib/ua-parser.dll`\n. @galmeida: WFM. mind reviewing the other port? Please?\n. Feedback in the relevant PR is more useful.\n. Yup. And add them to this pull request, please! :)\n. Can we have tests for this one?\n. @enemaerke, can you and @galmeida please sync? He just submitted an update to #67 hours ago. It's in #106.\n. Missing a license file (preferably Apache 2.0).\n\nMissing usage info in the main README.\n\nIs including binaries and xUnit src files the common practice in c# projects (I have o experience with c# so just asking).\n. > @tobie I hope to get around to adding license, readme and the xxToString() improvements suggested by @galmedia within a few days ( a bit new to the whole git/github/pullrequest thing, so will have to figure out how to push new changes on top of my existing PR)\n\nJust push to the same branch. It's get added as if by magic.\n\n> I've added the xunit tools for running tests (no agreed-upon package manager for tools in .net, only libraries) since thats what I usually do.\n\nWFM.\n\n> By the way, wanted to ask a few questions around some of the regexes...how do I do this best?\n\nGood question. Create an issue. I guess. :-/\n. What's the _ issue?\n. See #110.\n. There's a lot of noise in the README file commit which makes it very difficult to review. Think you can fix that so the only modifications are the C# stuff you're adding and not the whole file?\n. /cc @elsigh, @enemaerke, @galmeida.\n. @dmolsen any thoughts?\n. Pull request here: #111.\n\nAll tests are still passing on node.js.\n. We're moving away from the `is_mobile` booleans. We can't precisely describe what a mobile device is.\n. I'd be in favor of this. In JS, the `Device` parser now only has one prop: `family`. Trying to define what is a mobile phone, a tablet is a nightmare (e.g. iPad with 3G vs iPod).\n. > 1: I've included unit tests of the yaml-defined testcases under test_resources\n> but I get one failing test on matching the useragent 'Mozilla/5.0 (BlackBerry;\n> U; BlackBerry 9320; en-GB) AppleWebKit/534.11+ (KHTML, like Gecko)\n> Version/7.1.0.398 Mobile Safari/534.11+' as a mobile device. From running the\n> java tests I see they have the same issue (seems the issue, at least for me\n> and for the java version, is that the list of mobile OS'es are matched exactly\n> against the family and BlackBerry 9320 != BlackBerry so the device is not\n> marked as mobile). Is this a known issue or is it just c#/java that suffer\n> from this?\n\nWe should remove this data from the test files. Tracking in #114.\n\n> 2: I've added some Apache2 copyright and my name to the readme.\n\nPlease keep comments related to the pull request in the relevant issue. If this is a fork from the initial C# submission, please make sure the original author is credited.\n\n> I'd like to\n> support this going forward but how can I contribute and stay in the loop for\n> updates/fixes across the ported platforms?\n\nNot sure what you mean. GitHub notifications should allow you to follow along. Else the regexes file should update itself.\n\n> 3: As far as I can tell there is no Travis-CI support for C# which is too bad\n> since I'd like to integrate into some CI system. Any requirements/thoughts/\n> ideas on this from more experienced githubbers?\n\nNope. Sorry. Also, we'd need to split each language into a different project to allow for multiple language CI.\n\n> 4: I think @tobie has touched on this but c# is really not all that happy with\n> _ (illegal escape) so I am currently just working around that and can remove\n> this if the regex'es are adjusted (not really a question come to think of it,\n> more of a reminder)\n\nPending PR in #111.\n. @enemaerke FYI, I fixed the regexp problem, so you no longer have to special case your implementation.\n. @elsigh are you ok with this?\n. OK, cool.\n. @dmolsen can I go ahead and remove this?\n. Indeed.\n. Merged.\n. @elsigh Feels like there's something fishy here where there are different path requirements wether the code is used bundled or via git clone.\n. The rest LGTM.\n. Could you provide example user agent strings where you're observing this problem, please?\n. Thanks. @elsigh, this seems to be by design. Can you explain your choices there? Seems it's hard to consider the \"7\" in \"Windows 7\" as a version number (given it comes after \"Windows Vista\" and \"Windows XP\").\n. OK. Cool. Lets fix this then.\n. Difficult to say without seeing some code.\n\nCan you give it your best guess and submit whatever you think makes most sense. We can always refine later.\n\nTechnically, if PR are always made against master, we shouldn't bump into merge conflicts.\n. /cc @elsigh: thoughts?\n. I'd love to see some of this included. Care to make a pull request?\n. PR with tests?\n. Would love to integrate this. However, the whole point of this is that everyone fork shares the same regexp file. Think you could make sure to use it rather than fork it?\n. Yup. Will do.\n. Done: 1f8d28c848f9949490815f104dbb233f356f9928.\n. This is because some of the regexes are case sensitive while others aren't.\n. I think we should all agree on one way of doing it, else we 're going to get lots of edge cases like this one. My preference would be to be case sensitive all the way (and thus do case sensitive matching inside the different ports too). @elsigh, thoughts?\n. Well, either way, we should go down one road and fix the rest of the regexes to comply, don't you think?\n. Looked into this a bit more. Here are the regexp strings (with matching line numbers) which don't contain mixed casing (so could be case insensitive.)  IMHO the first ones are false positives:\n\n```\n 77 '(luakit)'\n 93 'rekonq'\n102 '(konqueror)/(\\d+)\\.(\\d+)\\.(\\d+)'\n129 '(chromeframe)/(\\d+)\\.(\\d+)\\.(\\d+)'\n155 '(facebookexternalhit)/(\\d+)\\.(\\d+)'\n335 '(python-requests)/(\\d+)\\.(\\d+)'\n825 '(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)'\n831 '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\-|airn|alav|asus|attw|au\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\-n|bw\\-u|beck|benq|bilb|blac|c55/|cdm\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\-s|dica|ds\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\-|fly_|g\\-mo|g1 u|g560|gf\\-5|grun|gene|go.w|good|grad|hcit|hd\\-m|hd\\-p|hd\\-t|hei\\-|hp i|hpip|hs\\-c|htc |htc\\-|htca|htcg)'\n833 '^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\\-20|i\\-go|i\\-ma|i230|iac|iac\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\-|klon|lexi|lg g|lg\\-a|lg\\-b|lg\\-c|lg\\-d|lg\\-f|lg\\-g|lg\\-k|lg\\-l|lg\\-m|lg\\-o|lg\\-p|lg\\-s|lg\\-t|lg\\-u|lg\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\-|lge/|lynx|leno|m1\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\-|nem\\-|newg|neon)'\n835 '^(netf|noki|nzph|o2 x|o2\\-x|opwv|owg1|opti|oran|ot\\-s|p800|pand|pg\\-1|pg\\-2|pg\\-3|pg\\-6|pg\\-8|pg\\-c|pg13|phil|pn\\-2|pt\\-g|palm|pana|pire|pock|pose|psio|qa\\-a|qc\\-2|qc\\-3|qc\\-5|qc\\-7|qc07|qc12|qc21|qc32|qc60|qci\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\-|scp\\-|sdk/|se47|sec\\-|sec0|sec1|semc|sgh\\-|shar|sie\\-|sk\\-0|sl45|slid|smb3|smt5|sp01|sph\\-|spv |spv\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\-mo|t218|t250|t600|t610|t618|tcl\\-|tdg\\-|telm|tim\\-|ts70|tsm\\-|tsm3|tsm5|tx\\-9|tagt)'\n837 '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n843 '(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\-webcrawler|converacrawler|dataparksearch|findlinks)' \n```\n. I'm considering this is strictly a regex case sensitivity issue and that only the last 6 regexes should be fixed (unless @elsigh advises otherwise). I'm opening a new issue for this task (#134) and assigning it to @dmolsen.\n. Kindle fire should be marked as Android-based indeed.\n. Closing as duplicate of #133\n. Looked into this. Agree the UA for this should read NetFront.\n\nMind submitting a test for this too?\n. Here's what I believe we need:\n\n### Non Android OS:\n\nUA: NetFront \nDevice: Kindle\nOS: Kindle OS\n\n### Android OS:\n\nUA: Amazon Silk\nDevice: Kindle Fire\nOS: Android OS\n. Fixed in #147 \n. Have you given http://www.useragentstring.com/pages/Mobile%20Browserlist/, http://www.zytrax.com/tech/web/mobile_ids.html, and related a spin? This might help you out.\n. Defining what is or is not mobile is a perilous exercise. Are we talking size? Then what about an iPod? Are talking 3G access? Than what about an iPad mini? Are we talking about the ability to make calls? What about VoIP? Etc.\n\nIt turns out that what gets defined as mobile is use-case specific and so better sits on top of the data provided by the parser rather than as part of it.\n. Bump.\n. Thanks!\n. Bump.\n. I'm having issues merging this correctly. Rebased and cherry-picked the relevant commits in #147. LMK if there's issues with that.\n. NP. `git rebase` is your best friend.\n. We've remove the `isMobile` property as the ever-evolving landscape of devices made it more and more difficult to classify them in a meaningful way. What exactly defines a mobile device? Network access? Screen Size? Ability to make phone calls? Those questions only have meaningful answers within the context of a particular application, and so the classifying work is best left to the app itself or third party libraries that can sit on top of ua-parser.\n. This is none of my business as it's strictly about the PHP port, however I do think that providing users encouragements to use their own, patched regex files instead of contributing to the project really goes against the spirit of what we're trying to achieve here.\n. @pravindahal That use case makes a lot of sense. Thanks for clarifying.\n. These are two completely different features. Please split them up in two pull requests. Thanks!\n. OK, it seems you did submit two pull requests, but this one included both commits. The way to avoid this is to use a different branch for each one of those pull requests. As mentioned above, This one will also need tests to be accepted. Otherwise, this looks good and I'm looking forward to be able to pull it in. Thanks for your work!\n. Thanks @dmolsen. Think you can make a PR for this? Can we have something a bit more useful for the OS?\n. Sure.\n. Should be fixed in 56917913 if not, please reopen.\n. What are the benefits of these change given their obvious cost is a lot less readability?\n. Those unneeded variables and the wordiness are exactly what makes this piece of code more readable. Readability is always important, even in a one-liner. Given your changes don't improve anything (but removing trailing whitespace) and seriously hamper readability, I won't pull them in.\n\nI'm however happy to pull in a change which would only fix trailing whitespace.\n. Ideally we should base that on real data. @elsigh think you could get that from browserscope, for example?\n. Good point.\n. The goal here is to see if there's a lightweight way to organize this without compromising the data or making further updates complicated. Micro-changes to the regexp order will not have a significant impact on perf and we should not waste time on them. Eg. moving the IE regexp from position 100 to position 3 makes a lot of difference. From 3 to 2, not so much. :)\n. AFAIK, @3rd-Eden's suggestion is to order the regexp by most common UA first. I think that could make sense if it's kept reasonable and could yield substancial speed-ups on real world data.\n. You'll want to have a look at: https://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser_test.py\n. Implementations do whatever they want as long as they pass the test suite.\n. Have you tried ordering you test data in alphabetical order (which should help tremendously with merges)?\n. I'm looking at sorting the files.\n. Thanks for the awesome work @dmolsen!\n\nJust a concern worth keeping in mind: how do adding all of these new browsers impact overall performance of the parser?\n. Could we have the fix, with the failing test case? ;-)\n. @elsigh we definitely need to make a better job explaining how this works. :) Yet, quoting from the README file:\n\n> The crux of the original parser--the data collected by Steve Souders over the years--has been extracted into a separate [YAML file](https://raw.github.com/tobie/ua-parser/master/regexes.yaml) so as to be reusable as is by implementations in other programming languages.\n\nBasically, you just need to add the correct regexp (with proper bracketing) to the regexes.yaml and you should be done.\n. Fixed in #165.\n. Happy to merge this once these two issues are resolved.\n. This is hard to review. How do you know the two docs still contain the same data? how did you build this?\n. @elsigh for the record, travis builds run the JS tests on each PR, including this one: https://github.com/tobie/ua-parser/blob/master/js/test/with_fixtures.js\n. @elsigh FYI: I have a massive set of tests coming up by the way (~16000 UA strings). Data made freely available by useragentstring.com. There's a number of tests we pass (roughly 5000) and a number we don't (the rest). I was planning to include the former in the testsuite directly, and then go through the other ones bit by bit (there are lots of low hanging fruits; a lot of the issues are to do with how we name a browser e.g. IE instead of Internet Explorer).\n. > another simple PHP script confirms that each file has the exact same number\n> of and same string matches for the UA tests between your repo's test files\n> and my fork's test files.\n\nBeautiful. I wanted to make sure we weren't accidentally loosing tests in\nthe process. This LGTM.\n. There's something weird with the display of Travis output. Not sure what exactly. Anyway, the issue is because the expected output is: `\"Amaze 4G\"` and the UA string contains the substring `\"Amaze_4G\"`. You might need a dedicated device_replacement string if what you want is the former. For now, I would just modify the test so the expected output matches the input, and we can revisit once we tackle #144.\n. Thanks for those pull requests. Ideally, tests and code would be be in the same pull requests.\n. LGTM. Pulled. Thanks for writing this.\n. Hey @dmolsen, did we ever end-up making a decision on those issues? Feel like we should move forward with these so we can close this ticket.\n. Looked at how we handled that in the past, and you're right, we're just disregarding whatever's after `patch`. So let's continue doing this.\n\nWe still need to figure out what we do with non `\\.` separations. (eg here `\"_\"` and `\"b\"` in #194).\n. Hey @dmolsen, did we ever end-up making a decision on the above? Feel like we should move forward with these so we can close this ticket.\n. This should be fixed now.\n. Fixed in 656f407840ffa4c4ccbdd9922af0465c73135c89.\n. @piuccio: done:  https://npmjs.org/package/ua-parser\n\nSorry for letting that slip.\n. There are merge conflicts with this PR. Please rebase and submit again. Thanks! :)\n. Very confused by this commit which is claiming to fix a Java error and actually changing lots of tests in unclear ways.\n\nI can't pull this in in this state. Sorry.\n. Closing. @vsagar feel free to open again with response to my comments and clarification. Thanks.\n. Fixed in 656f407840ffa4c4ccbdd9922af0465c73135c89.\n. `ua` is always defined and is always an object. There previously was a bug where that wasn't the case, but this should have been fixed in the meantime.\n. If some of you need repo access to fix this, please LMK.\n. Happy to merge. Where's the PR?\n. @elsigh please way in, here. As I have no clue what these fine gentlemen are talking about. :)\n. > This also opens the issue of how projects like Detect.js can augment the knowledge from ua-parser. Like device classification (tablet/phone/etc).\n\nSo it really depends whether this info is subjective or objective. Objective info like device manufacturer, device model, etc. we'd love to integrate. Subjective info like device classification, not so much. We actually removed it because of overlap issues and corner cases (e.g.: what's defines \"mobile\"? Screensize? Ability to make calls? #g connection? Etc.).\n\nType info can be defined based on the output of the parser, so it doesn't need to be integrated into the YAML file. \n\n> Do we have a recommended path for people to add metadata to the results from ua-parser?\n\nPull requests for objective data, output-based for the rest. I'd like to avoid having to add idetnfiers as much as possible.\n\n> Detect.js includes things like device type and manufacturer on top of the forked regexes. If we can get those into the current YAML I'd be happy to incorporate a build step that pulls down and creates a JSON object from this centralized document of regex profiles.\n\nHappy to integrate the manufacturer info. The types not so much. Would you be able to reimplement types based on `device.name` info (if you really want to continue supporting type)?\n\nLonger term goals, I'd really like to turn this project in a GitHub org, and have the YAML file in its own repo so third parties can build on top of it more easily. Thoughts on the best model for that is welcomed.\n. If you want the manufacturers included, a PR with tests would be awesome. :D\n. We're reorganizing the project and splitting up the regexes into their own repos. Would love to see you contribute there. More discussions happening on the [mailing list](https://groups.google.com/forum/?hl=en#!forum/ua-parser). Closing this in the meantime.\n. @elsigh not sure what's up here.\n. Seems no one is ready to work on this for now.\n. It could be a laptop too. It might also be a crawler. Hard to say.\n. Pull Request welcomed.\n. Ideally this needs a pull request and test.\n. @aselder the official test suite is the node.js one which is [run on every commit](https://travis-ci.org/tobie/ua-parser) and pull requests and consists of 13,111 tests. Master branch is always green or commits get reverted.\n. If you have node & npm & mocha installed, it should be as easy as running the following from the command line:\n\n```\nmocha -u tdd ./js/test/*.js\n```\n. Let me know if you have any issues.\n. @sjiang Can you please comment on the Java modifications?\n. Could you split-up the Python fix from the regex commit into two separate pull requests?\n. Yeah. We need to split up the projects.\n. Closing this. Will be resolved when moving to a JSON API.\n. Fixed in #230.\n. You might want to open a pull request and add them to this file:\n\nhttps://github.com/tobie/ua-parser/blob/master/regexes.yaml\n\nTests are also important to get your pull request approved. They would go here:\n\nhttps://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser.yaml\n. Can we close this?\n. That breaks a number of tests. Can you fix?\n\nThanks!\n. Closing as duplicate of #55. \n. This also needs tests.\n. This isn't passing the tests, also please add your query strings to the test databases.\n. Dup of #246.\n. Can't pull this as it is as it's failing the tests. Might mean some tests are wrong, in which case please fix them and explain your reasoning behind the fix.\n\nYou might have more success in getting things merged if you do more atomic commits (e.g. one per user agent fix).\n. Please open a new ticket per issue. Thanks.\n. Not until all tests pass, I'm afraid. I'll also ask you to clean it up and resubmit it as a single commit once that's done. I'd like to avoid polluting the tree with 15 commits with unclear messages.\n. Yes. Use a Git client on your own machine, pull the repository there, and push the changes back to your repo.\n. As I recommended earlier: please use a Git client, make your changes locally and submit them in atomic ready to be merged issues. I'd love to be able to include your contributions, but you really need to follow the [contribution guidelines](https://github.com/tobie/ua-parser#contributing-changes-to-regexesyaml) if you want me to be able to do so. I'm closing this for now hoping you'll be able to get your git client to work and submit new pull requests with one change (e.g. support for the AvantGo browser + related tests) per pull request (I suggest you create one branch per issue, all forked from the master branch).\n. You're welcome to send a PR for the guidelines too.\n. I'm open to the first part of your issue. SOmeone needs to do the work and combine it into something that is language agnostic.\n\nThe second part od your question is a red herring, there is no standard used across user agents that allows you to gather this data in a meaningful way. If it was the case, this whole project would be pointless and no one would have started it.\n. I don't. But I don't see what difference this would really make, as none of your chunks would gain meaning in the process.\n. What are the benefits of this approach? What are the drawbacks?\n. Sure, but can you easily express all the error routines in language agnostic way? How will you crowd-source those? Etc.\n\nAlso: http://webaim.org/blog/user-agent-string-history/ :D\n. The way this project is structured makes it really easy to share the parser across a wide variety of computer languages (hence language agnostic). It also makes it very easy for folks to contribute to the project (crowd-source friendly).\n. It is also trivial to spoof the JS user agent string. :) Anyway, this thread has gone way off topic at this point. I'm going to close this and let you reopen an issue exclusively targeting your OSFamily request if you think there's value in that.\n. Thanks. Patch welcomed.\n. The 13K tests that ua-parser contains are run in ~2 seconds. Clearly the number of tests is not an issue at this point.\n\nI don't see any value in pruning the test files. Closing this as wontfix.\n. It is generally rather rare that we have to fix existing test cases. If so, it's still cheaper to do this on a case per case basis.\n. Please cleanup your repository of start from a fresh copy. Closing this as I won't be able to merge it.\n. You probably want to wipe our your GH fork and fork anew.\n. Could you provide a test for this? I was under the impression we had this covered already.\n. Beautiful. Thanks!\n. Thanks that's a bunch more readable. May I suggest you create a branch per pull request on your side? Should make things a lot easier.\n. > wouldnt making multiple branches cause the same problem as before when i made the branch for amigaos and it still pulled from the master branch.\n\nNo. You just need to make your branches from the untouched `master` branch.\n. > is there anything else needed for this to be merged?\n\nYes, please see my above comment in `regexp.yaml`.\n. This PR can't be merged. Please rebase it and reopen this issue once it's ready to be merged. Thanks!\n. A whole bunch of tests need to be updated apparently.\n. Get a better client or use the command line. That's unheard of.\n. Yes. Please address my above comment about regexp readability.\n. Yes please. :)\n. What is this patch fixing?\n. Will need tests to be fixed.\n. @philipzae can you please try to bundle commits together as much as possible? 3-5 commits for a single change pollutes the revision history and makes backing out of problematic commits much more complicated then needed.\n. Well, in that case, please fix your client before continuing your contributions. Thanks.\n. The fact that you're working from the Web client shouldn't prevent you from giving helpful names to commits. I thank you for your contributions but kindly ask you to be a good citizen and adere to good coding practices and respect contribution guidelines. Thanks.\n. Please change the commit \"title\" (first line). That's the key part. (Hadn't even noticed the \"description\" as this is a GH concept, not a Git one.) \n\nThanks!\n. `git commit --amend` is your friend. ;)\n. There are merge conflicts here, unfortunately.\n\nCan you please fix?\n. I don't know. You might want to close this PR and open a new one if you can't figure this out.\n. Thanks!\n. That's awesome! Could you add tests?\n. There are YAML files in `/test_resources`.\n. Have you tried rebasing after pulling a recent master?\n. Yes, sorry. You're rebasing from your own GitHub account. You want to rebase from mine. To do so, [add it as a remote](https://help.github.com/articles/adding-a-remote) (`$ git remote add main git@github.com:tobie/ua-parser.git`), fetch it (`$ git fetch main`) then rebase from there (`$ git rebase main/master HbbTV`).\n. No problem. Closing. Obsoleted by #286.\n. Fixed in fa7003f3\n. Awesome. Thanks a bunch!\n\nCan you please update the main README with details of your port (create a new usage section, add yourself as a maintainer of this part, and add the licensing terms for the port too).\n\nThanks again.\n. just follow the terms of the license precisely:\n- http://www.apache.org/licenses/LICENSE-2.0#redistribution for regexes.yaml\n- https://github.com/tobie/ua-parser/blob/master/php/LICENSE for the PHP code.\n. Could you please add tests for this?\n. @commenthol could you please rebase this PR now that I've accepted @jpvincent's patch? (I had missed yours previously).\n\nWould also like @elsigh's input on the branding changes (`iPad` --> `Apple iPad`).\n. Looking at your other PR (#284), and the brand issue you bring up here, we might want to change what the device object contains, maybe to something like:\n\n```\ndevice.brand // => \"Nokia\"\ndevice.family // => \"Lumia\"\ndevice.model // => \"505\"\n```\n\nThoughts?\n. > But we've been inconsistent here right?\n\nYeah, we've consistently been inconsistent.\n\nGiven that, I'm not sure what the best strategy going forward is, tbh.\n. There's a tremendous amount of noise due to whitespace issues in your diff. Think you could fix that?\n. @mamod think travis now supports multiple languages. Think it would be worthwhile adding your travis build here? In which case this PR could happen here.\n\n@commenthol think we should have separate PR, here, too. This is going to get ugly quickly if not.\n. Great stuff overall. The \"multiple replacement placeholder\" stuff needs to be brought up a bit more globally so that all implementations can use it.\n\nWhat's the backwards compat story, here?\n. Any news?\n. The Travis build is failing right now, so the first step would be to fix that.\n. /cc @elsigh ^\n. @elsigh agree this commit is awesome.\n\nConcerned with updates of ports besides JS, python, and perl, though\n\nWhat's the story here? How should we handle that (this time and in the future)?\n. > I don't know how many of our langs are supported by travis, but that the more we can have all of the parsers run the same tests the better. If all the langs were running through Travis it does place quite a burden on anyone who wants a new feature to put it in everywhere, but I'd be ok with that.\n\nAgreed.\n\n> For this case I'm not that concerned here about new functionality in the device parser, as opposed to say the UA parser. But it would be nice to get a note out to all the other maintainers at a minimum.\n\nThat sounds good. We need a channel to do that, though. Any suggestions?\n\n> Then again, if we had a single page/file that outlines the spec of the parser everyone could subscribe to that and we could approve changes to that file before changes to any/all langs.\n\n[snip]\n\n> Right now we just have a little section for each language but not an overall spec..\n\nThat's also a great idea. Should we get started?\n. That looks like a good start. I'll try to find time to review this by EOW. Thanks for your work on this!\n. I completely dropped the ball on this one. Sorry.\n\nCc: @enemaerke, @shripadk, @yihuanz, @ozataman, @sjiang, @mamod, @dmolsen, @nielsbasjes, @elsigh\n\nFolks,\n\nI'd like for us to be able to move forward with this PR. For this I'd like feedback by the November 1st from you all on whether you're intending to implement the changes in your language port or not, and ideally an estimated timeframe in which you will be ready to release an updated version.\n\n @commenthol, I really like you early spec draft. I suggest you create a separate PR for it so we can pull it in and work on it in the meantime. I've also given you commit rights to the repo, please handle this right responsibly. ;)\n\nThanks.\n\n--tobie\n. As a sidenote, wouldn't `device.manufacturer` make more sense then `device.brand`?\n. > Therefore I would like to stick with \"brand\" in order to be able to solve those cases.\n\nMakes sense.\n. > my nexus 4 says LG on the back.\n\nThis is going to be fun!\n. Haven't heard back from a bunch of you. I guess the only reasonable strategy there will be to mark as obsolete (and or remove?) these implementation from the project.\n\nOverall, it might be worthwhile to reconsider how to best organize this project.\n. Create a new issue (#304) to discuss this further.\n. Likewise. Should have more time for this starting early August.\n. Looks like you have an issue with the python port not implementing `os_v1_replacement`--hence the travis build fail. @elsigh can you chime in, here? What's the plan?\n. > Hrm, it looks like OSParser has os_v1_replacement actually..\n\nMy bad, looked in the wrong place. Sorry.\n. Merged #287. Restarted the travis build which should now pass.\n. LGTM. Merging.\n. In the future, please rebase master instead of merging it (less commit noise).\n. What makes you think the test is a fault here, rather than the Java implementation?\n. Looking at this a bit more in detail, it's clear to me that the issue is with the Java implementation (which doesn't handle `os_v2_replacement` properly.) Android Donut is == to version 1.2, not version 1.\n\nClosing this as wontfix.\n\nIMHO the issue is with the lack/partial support for `os_v2_replacement` in the Java implementation.\n. > I wasn't claiming that there's a problem with tests, but if the test are failing under Java, then I think this should be fixed one way (changes to tests, that didn't work under Java when added) or other (changes to Java implementation).\n\nAgreed this should be fixed. But this should be fixed the correct way. Turns out the tests are correct and the Java implementation isn't. Therefore the implementation needs fixing.\n\n> I can suggest that probably easiest way to fix that would be to remove that that test case from Java's version of tests, if that's OK.\n\nThat's not possible, unfortunately. The tests are shared across implementations.\n. Test cases would be awesome!\n. You have a bunch of tests failing, some which are to do with how YAML distinguishes null from undefined.\n\nCould you please fix those?\n. Yeah, I had the same reaction. Are these two different browsers or the same browser on two different platforms?\n. It sounds like we should treat as IEMobile, then, and identify the device through the device parser, no?\n. Please reopen once you've fixed the failing test cases. Thanks!\n. Pull request welcomed.\n. LGTM\n. Think it would be great to add a section that recommends a JSON structure for the output of the parser that implementations are supposed to stay close to.\n. Closing this as it's already been merged in the new repo.\n. Not sure I understand the goal (goals?) of this PR. Could you elaborate.\n. OK, I guess, I need to try it out to really understand.\n. That what as smart move. Thanks!\n. Please rebase your change from the current master. There's about 15 unrelated commits in here.\n. We're integrating these changes in the new repository:\nhttps://github.com/ua-parser/uap-core\n. We're splitting up devices into `brand`, `family` and `model`. See #285.\n. I'd actually favor smaller incremental PR. Getting agreement, reviewing massive PR like #285 is a slow process.\n. Thanks for your suggestion @commenthol.\n\nThere's are two things about it that bother me:\n1. I want ports to each have their own repository, whether they're part of the [ua-parser GitHub org](https://github.com/ua-parser) or not.\n2. splitting up copies of regexes across files and folders is utterly wrong. It's basically re-inventing versioning, but making us do it by hand. Accepting contributions would be terrible, merging stuff atrocious and will bump into issue were previous versions get fixed but not new ones, etc.\n\nThe only reasonable choice to serve different version of the regex is to tag versions in GitHub, then have a open-source friendly host (e.g. nodejitsu) serve all of the differently tagged versions.\n. Yeah. That's the path I'm looking at. \n. Started some action here: https://github.com/ua-parser\n. Lack of time. :-(\n. Closing this. See you in the mailing list, irc, or on https://github.com/ua-parser/ua-parser.github.io/issues.\n. Cool. I don't think I've seen you chime in on #285. Can you?\n. Closing this given a conversation on perf is starting on the mailing list.  \n. I don't think possible values are a closed set, actually. But I might be wrong. I'd love to include a script that would gather this data from the YAML into the repo itself if you're so inclined, @BradRuderman.\n. Done. Thanks for your help so far @dmolsen!\n. Sorry, I though you were planning to finish the TODOs before getting this pulled in.\n\nThis LGTM but needs addition to the main README file. I'll pull as soon as that's ready.\n. Sorry for the huge delay in pulling this. :(\n. Closing this as wontfix (as explained in #75)\n. This is not passing a number of tests: https://travis-ci.org/tobie/ua-parser/builds/16018472.\n. Please reopen this PR once you've fixed the failing tests. Thanks!\n. Ya, sorry folks. This project is in urgent need of an overhaul in order to\nsimplify this issue. Sorry this has been delayed. I don't have an ETA for\nnow, but will come back with a solution shortly.\n\nOn Mon, Jan 27, 2014 at 7:09 PM, jakub-g notifications@github.com wrote:\n\n> @ all\n> \n> If you guys really need a new version, you can have it without it being\n> released in npm, by changing package.json to point to the GH repo\n> directly:\n> \n> \"ua-parser\": \"git+https://github.com/tobie/ua-parser.git#faad2c33ac1497e7b8fba5eb7aab55fac81b36c1\",\n> \n> (this points to the newest commit in master as of today).\n> \n> However this is highly suboptimal since it\n> - clones whole git repo (not only the Javascript part)\n> - you'll have to manually remove ua-parser folder from node_modulesfirst in order to have it installed with npm\n>   install\n> \n> Last time the package was updated on npm was when I emailed @tobiehttps://github.com/tobiefew months ago and he was wondering about somehow splitting the code and\n> regexes, and this would probably be a good idea, but given the number of\n> languages (basically separated subpackages linked only by the regexes file)\n> hosted in this repo, this wouldn't be that easy and would require\n> cooperation from everyone.\n> \n> Anyway for the time being, it would be good to find a maintainer of the\n> npm package who would release a new version to npm every now and then, if\n> @tobie https://github.com/tobie is too busy.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/323#issuecomment-33402836\n> .\n. Updated: https://www.npmjs.org/package/ua-parser\n. Merged. Thanks!\n. Please reopen this PR once you've added tests to it. Thanks!\n. Closing this, please reopen once you;ve provided a test. Thanks.\n. There is no policy. Just an urgent need to split this repo up to something more reasonable.\n. I wish I had. I want to come back with a plan for this asap. So at least\nthe plan you should get soon. :)\n. @elsigh would you have some thoughts on this? This is akin to the tablet/mobile distinction again.\n. Done.\n. A new release, as in what precisely?\n. Oh, so that's just a tag?\n. Created a new release: https://github.com/tobie/ua-parser/releases/tag/php-3.3\n\nNot sure that triggered anything. :(\n. Doesn't seem to be working to well. Could be tied to version name (\"php\" prefix).\n. I'm concerned this would screw-up npm, tbh.\n\nI think we really need to focus on splitting up the repo urgently at this point.\n. This one needs tests.\n. See the [contributing guide](https://github.com/tobie/ua-parser/blob/master/CONTRIBUTING.md).\n. This needs tests.\n. Please reopen this PR once you've added tests to it. Thanks!\n. Agree that would be super useful.\n\nWe're in the process of breaking up the repo into an org. Can I ping you once this is done?\n. Ping me if you don't hear back soon.\n. Thanks @commenthol, wasn't sure where the link to that one was. Mind adding that document to [ua-parser/uap-core](https://github.com/ua-parser/uap-core) via a PR (and modifying the README accordingly)?\n. No idea what you're talking about. Sorry. :(\nFeel free to reopen with more info. Thanks!\n. The link you posted mentions issues in IE, but you're pointing to PHP code run on the server. Sounds like your issues might be to do with GH being down, not with using raw (which, fwiw, is the documented way to get at the files though GH's API.)\n. Closing. As mentioned above, this is underway.\n. What language is that for?\n. > What language is that for?\n\n^ ??\n. Patch welcomed.\n\nOn Fri, Sep 19, 2014 at 7:09 PM, Nicholas Head notifications@github.com\nwrote:\n\n> so maybe @enemaerke https://github.com/enemaerke is person to look at\n> this.\n> \n> the whole yamldotnet dependency is kinda weird, anyway. it looks like it's\n> only needed for the unit tests for the package. so that shouldn't be a\n> dependency of the package, after it's built/deployed..\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/354#issuecomment-56205813.\n. Plan moving forward is to rely on a JSON API to get the latest regexes. Closing this.\n. We need to split repositories up real fast. Started here: https://github.com/ua-parser\n. Also-can't travis run builds in multiple languages?\n. @Ironholds yup. though intent is to split up the project in its own org, I haven't had the time to make progress there. :(\n. We actually removed all of this data in the past because what qualifies a mobile phone vs a tablet is very much app specific (it could be perf related, screen sized, etc.). Closing as wontfix.\n. Closing this as worksforme.\n. Sounds good.\n. Not that I know of. See related thread on the mailing list: https://groups.google.com/d/msg/ua-parser/clM4un5jgY4/b9alPXlZ6zYJ\n. ua-parser does not do device type detection. Closing as wontfix.\n. Closing this as there's no good answer to that question that we can provide.  \n. If we follow this line of reasoning, we should have all of the following report as Firefox, no?\n- `pale moon (firefox variant)`\n- `firefox mobile`\n- `firefox namoroka`\n- `firefox shiretoko`\n- `firefox minefield`\n- `firefox alpha`\n- `firefox beta`\n- `microb`\n- `mozilladeveloperpreview`\n- `iceweasel`\n\nIn which case we should also do the same with Chrome Canary and the like. Or am I missing something?\n. /cc @commenthol @Ironholds \n. > 1. Really kick-off the seperation of parsers to yaml rules as intended by #304 and started with [ua-parser](https://github.com/ua-parser/).\n>    - Prepare the parser base-projects to allow PRs from active members \n>    - Milestones and/or Timelines could be a good starting point...\n>      - Step1: Migrate the present\n>    - Step2: Adding new features\n\nAgreed.\n\n> 1. Consider correct versioning as must-have\n>    - ua-parser on npm is in a terrible state #323\n>    - Is releasing Java SNAPSHOTS only the right release model?\n\nI think we should completely split out the software versioning from the regex versioning. We need to provide the regexes through an (JSON) API, making both the latest version available and each change set. The different lang ports could then just fetch that data on a regular basis.\n\n> 1. Truely state what shall be in and what shall be out-of-scope of ua-parser.\n\nI think a lot of the below are loadable goals, but not all are necessarily doable with the resources we have.\n\n> - E.g. Is Brand-Model Parsing as proposed in #466 really desired?\n\nIt seems we agreed it is, but frankly I'd need a three bullet point summary which includes the risk + cost of doing that to make a decision.\n\n> - Does generalization of parser sematics (multi-replacements, case-insensitive matches as of brand-model parsing) make sense for `user_agent_parsers:` and `os_parsers:` rules as well?\n\nSame as above.\n\n> - Can we finalize the first draft version of the spec? #300\n\nYes. Can we first decide where it belongs, though? Should we give it its own repo?\n\n> - Are annotating parsing results desired? E.g. does this project want to have details of a device \"mobile/tablet/desktop\" as proposed in #428 or doesn't it as stated in #75?\n\nI'm keeping to my initial position here. As explained on both #428 (which I just closed) and in previous occasions.\n\n> - Do we want to get seperate parser-rules for browser engines as proposed by #241?\n\nI'm fine with that, but it should happen after we ship the split-up version of ua-parser.\n\n> - Order of priority: Is performance more important than the detailed detection of a UA?\n\nThat's a good question. I think that the work @Ironholds will be leading here should allow us to keep our cake and eat it too. If the regexes are sorted, we can pretty much have both.\n\n>  Is working on performance, which inevitable involves a change of parser semantics, a project goal?\n\nKey goal here is to make this project easy to contribute to and easy to use in different languages.\n. Yeah. This is not a client-side tool. Legitimate client-side usecases are seldom, tbh. \n. Current repo is here: https://github.com/ua-parser/uap-java. Closing.\n. Dup of ua-parser/uap-core#131.\n. > Looks like the travis build is failing @tobie ; shall I update your travis config file as well?\r\n\r\nThat would be awesome, @russellwhitaker, though I have no idea what it does at this point.. ",
    "elsigh": "Sorry about that if there's something awry. I wonder what it is?\nI basically just pasted:\nview-source:http://ua-parser.appspot.com/json?indent=2\nand manually deleted the os_parsers and product_parsers section from the end (not yet implemented)\n. yep, sorry didn't notice that\n. I don't actually mind that much if we don't standardize property names or what the parsers do. Sure, it seems like that would be a nice touch, but it's not a requirement. I don't think the JS parser does v2 or v3 fwiw.\n\nI'm with Tobie on point #2 as well. My hunch is that you need things added things to regexes.yaml to support this, and I'm good with that.\n. Yeah, this looks like it can now be done from the UA string. That was not always true. Will fix.\n. It should be in the YAML regexes so all parsers benefit.\nI'm planning to take the @dmolsen's regexes file from https://raw.github.com/dmolsen/ua-parser-php/master/resources/user_agents_regex.yaml and replace the one in this project sometime today or tomorrow.\nOnce it's in, I'll add a chromeframe regex and test for python.\n. Fixed in https://github.com/tobie/ua-parser/commit/191a6d8c2ab67cea8bbfc5d029da4a30ce1e6e4d\n. Thanks Francois!\n\n@dmolsen I wonder if we can get Travis set up to run the python and php unit tests - have you ever done that w/ github? I'm eager to learn about it but figure it's some work... I wonder if we could turn all the multiple files in test resources into a single canonical yaml file with all the bits + OS + Device so that we could all run unit tests against that one file for each of our ports?\n. python does a sys.exit code 0 for success.\n. On Wed, Sep 12, 2012 at 3:57 PM, Timo Tijhof notifications@github.comwrote:\n\n> You can also set up the hook manually, its a one-time thing. But using\n> their interface is convenient.\n> \n> Over the last few months lots of improvements have been made to Travis.\n> Setting this up is now much easier.\n> \n> As for testing, the primary goal is to test the regexes against popular\n> browsers and stability and expectations. Not to test that the\n> implementations follow the specification. Both are interesting, but I think\n> we can make the assumption for now that the various language\n> implementations all properly parse YAML, run the regexes and return the\n> matches in an \"object\", right?\n> \n> So just running them i.e. in node should be sufficient.\n\nI think all the implementations have slightly different objects, but yeah.\nMostly the test should be to make sure that changes to regexes.yaml don't\nresult in regressions.\nThere's a huge number of UA strings and expected results in the\ntest_resources dir which the py test uses - some are much larger than\nothers, but even if it takes minutes to run all the tests, regressions in\nregexes.yaml need to not happen for the project to be successful. The OS\ntests and device tests could also be filled out a fair amount.\n. No plans on my part and no guesses on difficulty. Do you think it's an impossibility to have it be backwards compatible? I'm not really up to date on python3-ness, but I'd certainly prefer a single repo that works for both.\n. wfm\n. Also, it didn't look like the home page had a java usage example like we do for the other langs..\n. Just something on the homepage ;)\n\nSent from my phone\n\nOn Jul 24, 2012, at 10:00 PM, sjiang\nreply@reply.github.com\nwrote:\n\n> There's an example in the README.md in the java directory.  Do you prefer to have the example in the main README?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/38#issuecomment-7240753\n. Tobie - if you're good with it I am =)\n. Thanks Ernest!\n. w00t! Yeah, this is really cool!\n. What if we make the \"major\" bit include compat info? i.e. \"8 (compatibility mode 7)\" or something?\n. @bluesmoon Can you run the python unit test and let me know if they pass?\nWe don't have it hooked up to Travis, and I'm feeling too lazy to pull the diff and do it myself ;0\n\nFrom the py directory:\npython -m user_agent_parser_test\n. Wow - this is super cool - thanks for the work on this! \nAre you good with maintaining it going forward, handling bugs in the C# version and all that? Tobie can add you as a committer.\nIf you can make the change to not dupe regexes.yaml, then this change looks good to me! \n. Oops, I shouldn't have pulled that ;0\nTrigger happy holidays. \n\nYeah, ultimately, I agree that these distinctions are troublesome.\nWhat does \"mobile\" even mean anymore? \n\nI'd be ok with just reverting this concept from ua-parser.\n. Care to submit a change for this?\n. Check out regexes.yaml in the top level dir =)\nMostly I figure this will just sit in the Issues bin otherwise.\n. @davidmontgom Can you give me a little more info about how your workserServer layout is?\n\ni.e. for me:\n522 ~/src/ua-parser/py  (elsigh) $ python\nPython 2.7.1 (r271:86832, Jun 25 2011, 05:09:01) \n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > from ua_parser import user_agent_parser\n\naka no error\n. Fixed in merged pull request just now, thanks\n. I think this might be a long-ago escape, probably from an original php implementation as I don't believe python needs the underscore escaped.\n. Totally. I need to update the py library not to test/try to return this info.\nWill do today.\n. Do you know how to do such a thing? I think it's simply a matter of willpower =)\n. I think this is ok as you're on top of PyPI already =)\n. Yeah, I think some people may just copy the regexes file in the ua_parser python dir so that they only use that and then the path gets off.\nIn terms of the dir struction ../../ looks correct to me.\nIf anyone wants to do the former now, they can use the env variable option.\nI'm inclined to merge this if you're ok with it.\n. Sounds like we need a YAML -> JSON build step.\nRegexes are hard enough to read, and YAML is a lot more human readable than JSON (for most).\nYeah. 100x startup improvement is pretty worth it.\n. On Tue, Dec 4, 2012 at 5:59 AM, Selwin Ong notifications@github.com wrote:\n\n> @elsigh https://github.com/elsigh by build step, do you mean as part of setup.py\n> install?\n\nI guess I'm not sure what the best way is to prevent people from editing\nthe JSON file (maybe a header at the top) and also to keep it ever-in-sync\nwithout having to remember to run a script.\nSince this is a multi-language project a build step is a little tricky.\n\n>  What about maintaining a regexes.json in addition to the YAML file in\n> the main repo? This can be compiled right before we tag a release. I'd\n> imagine other languages will also enjoy similar performance improvements\n> from this change.\n\nYeah, I don't know about that. I suppose before we invest any effort it\nwould be worthwhile to know if it's only python that benefits so much from\nthe JSON format vs. the YAML format here.\n\n>  \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/117#issuecomment-10997316.\n. That sounds great to me Selwin =)\n. Assigning you simply so I don't push my own change without a small looksee.\nSorry for the reindent in the py files. Feel free to ignore them.\n. Sweet, thanks for the review. Pushing again including the Tesla Model S moved to the device section.\nA car is indeed a device.\n. This is a bug, not by design.\n. Indeed, no lang version should have it's \"own\" yaml file.\n. That is a bug ;)\n\nOn Thu, Dec 27, 2012 at 10:51 AM, Alexander Dean\nnotifications@github.comwrote:\n\n> Ah right, what is this then:\n> https://github.com/tobie/ua-parser/blob/master/haskell/regexes.yaml\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/124#issuecomment-11715344.\n. For some reason it says this request cannot be automatically merged... I wonder if it needs a rebase?\n. Lovely stuff, you're a rock star Selwin.\n. sweet. happy open source new years =)\n. Brilliant, Selwin.\n. This is my fault - I've not been backporting the regexes file. That project morphed into this one =) I'll leave the bug open here until I merge.\n. Twould be fabulous\nOn Jan 10, 2013 6:55 AM, \"Dave Olsen\" notifications@github.com wrote:\n\n> @elsigh https://github.com/elsigh -\n> \n> i went through the old issues list last week and pulled out the ones we\n> weren't properly matching. i hope to have them committed this weekend. i\n> can go back and close them up like i've done in the past if you like.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/159#issuecomment-12099952.\n. I've removed the \"No?\" link from Browserscope and the issue tracker from UA Parser.\n. open source team ftw!\n. Fundamentally, ua-parser could be written to be much faster by doing string tree branching, but that doesn't lend itself really well to a shared, readable YAML file. Part of the reason I believe this project works and is being maintained and now exists in so many languages is that its fairly easy to grok - and easy to just add new regexes and whatnot.\n\nI'm not against re-ordering the YAML file provided that the tests don't break, but I'd like to see data that shows how much faster this is. None of the implementations (I believe) scan the YAML file on every parse. They should be able to put the YAML (or JSON) file into memory and then be iterating over an array of in-memory regexes.\n. Indeed - though we can't just put most common UA first afaik, because\nthere's a whole bunch of exceptions that have to come first, although - the\nregexes could be written to catch the most common UAs first (ala the notion\nof string branching) =) that's probably what you're thinking.. Sweet!!\n\nOn Fri, Jan 11, 2013 at 2:27 PM, Tobie Langel notifications@github.comwrote:\n\n> AFAIK, @3rd-Eden https://github.com/3rd-Eden's suggestion is to order\n> the regexp by most common UA first. I think that could make sense if it's\n> kept reasonable and could yield substancial speed-ups on real world data.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/162#issuecomment-12166664.\n. I'm not against adding additional files-  the test resources dir itself is\nkind of a kludge of stuff at this point as opposed to an orderly,\nthought-out thing.\nMaybe you should commit as is and then subsequently a few canonical files\nout of the monsters?\n\nOn Fri, Jan 11, 2013 at 11:51 AM, Dave Olsen notifications@github.comwrote:\n\n> Over the holiday break I parsed a bunch of log files from work to see\n> where ua-parser might be missing matches, misclassifying matches, as well\n> as try to address issue #134https://github.com/tobie/ua-parser/issues/134. I also trawled the old Google Code project issues. Because of that I've\n> come up with quite a few additions as well as their associated testshttps://github.com/dmolsen/ua-parser/branchesand haven't finished adding them. I kept the additions granular (i.e. in\n> their own branches) to give everyone the ability to chime in on individual\n> changes.\n> \n> Before I went too far I decided to try to test merging my changes into one\n> big file. It was a miserable failure and I had to give up after four or so\n> merged branches. By always adding tests to the end of the files there was\n> guaranteed to be a conflict. The amount of work involved just didn't seem\n> worth it when maybe there was a better option.\n> \n> I've put together an example branch where I've broken out some\n> contributed tests into their own directories and fileshttps://github.com/dmolsen/ua-parser/tree/do-flex-test/test_resources/contributedwithin\n> test_resources. The upside to this is no merge conflict (on tests at\n> least) and more information about each test addition can be kept through\n> the use of the example info.yaml files. The downside is work on other\n> library maintainers to add support for the new directory structure.\n> \n> I realize my use case is a rare one. For the most part we'll see single\n> additions that won't run into conflicts. That said, it might be nice to\n> have things organized with extra information. It might also make it\n> clearer/easier for folks to submit their own patches.\n> \n> Thoughts? Am I missing something obvious where I can merge these files\n> sans conflicts? Do you want me to just deal with the extra work and either\n> work through PRs and conflicts one-by-one or merge everything into one big\n> ball before issuing a PR?\n> \n> /cc @elsigh https://github.com/elsigh\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/163.\n. PR with test?\n. Hey Dan, sorry for missing your note - can you, in your branch, just do:\ncd ua-parser/py/ua_parser\npython user_agent_parser_test.py\n\nThat will run the tests with the python lib. If they pass I'm good with it.\n. I knew it ran the JS tests, but I didn't realize the JS tests were as\ninclusive as they are so thanks for the heads up - that is soooo awesome.\n-l\n\nOn Thu, Jan 17, 2013 at 10:15 AM, Tobie Langel notifications@github.comwrote:\n\n> @elsigh https://github.com/elsigh for the record, travis builds run the\n> JS tests on each PR, including this one:\n> https://github.com/tobie/ua-parser/blob/master/js/test/with_fixtures.js\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/166#issuecomment-12381004.\n. @selwin Any ideas?\n. Sorry, I'm out of touch for the rest of the week, but sounds like you all\nhave this figured out.\n\nOn Tue, Mar 12, 2013 at 11:14 AM, David Bonner notifications@github.comwrote:\n\n> Just tested on a Mac as well, and you're right, works like a charm. Wonder\n> if it's just fedora, or if if rhel/centos do the same thing.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14793067\n> .\n. Done deal - thanks!\n\nOn Fri, Jun 21, 2013 at 6:24 PM, Selwin Ong notifications@github.comwrote:\n\n> @malicustommade https://github.com/malicustommade I'm not a repo\n> conntributor so I can't merge this in. Can @elsighhttps://github.com/elsighor\n> @tobie https://github.com/tobie help?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-19848447\n> .\n. On Tue, Jul 2, 2013 at 10:47 AM, Oliver Beattie notifications@github.comwrote:\n\n> Has the option of simply compiling the YAML to JSON as part of sdist been\n> considered? Seems far simpler (and better for the user, who may not\n> need/want a YAML parser installed)\n\nYes, most of the implementations have a YAML-> JSON converter. We don't\nhost or compile the JSON into a file in the project because we only want to\nmaintain a readable YAML.\n\n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-20362770\n> .\n. Thank you!\n. Nice sleuthing - would you mind filing a pull request with these changes?\n. Great, thanks.\n. I've not seen a pull request with one and haven't had the opportunity to look for one myself.. but that would be great to get one in the repo.\n. Have you checked out the repo locally or are you making your changes on github itself? If the latter, perhaps trying the former is a good idea?\nThe tests live in the test_resources top-level directory.\n. regexes.yaml\n\nOn Thu, May 23, 2013 at 3:16 PM, philipzae notifications@github.com wrote:\n\n> i make changes on github, i'm a complete noob to this stuff.\n> \n> thanks, i see the folder, but which file should i put the UAs in?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/244#issuecomment-18375382\n> .\n. Hey Phillip,\nWhen you say you're a noob - I want to help - but I'm not sure how noob you\nare and how much info to give you.\nI mean, noob to our project? noob to github? noob to git?\nIf you push a branch and submit a pull request the tests will run via\nTravis automagically.\nContributing Changes to regexes.yaml\n\nContributing to the project, especially regexes.yaml, is both welcomed and\nencouraged. To do so just do the following:\n1. Fork the project\n2. Create a branch for your changes\n3. Modify regexes.yaml as appropriate\n4. Add tests to the following files and follow their format:\n   - test_resources/test_device.yaml\n   - test_resources/test_user_agent_parser.yaml\n   - test_resources/test_user_agent_parser_os.yaml\n5. Push your branch to GitHub and submit a pull request\n6. Monitor the pull request to make sure the Travis build succeeds. If\n   it fails simply make the necessary changes to your branch and push it.\n   Travis will re-test the changes.\n\nOn Thu, May 23, 2013 at 3:29 PM, philipzae notifications@github.com wrote:\n\n> regexes.yaml is in the root directory, the files in test_resources are\n> pgts_browser-list.yaml, test_device.yaml, etc...\n> \n> how do i try the former (making changes locally), i'm a noob. :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/244#issuecomment-18375889\n> .\n. Sorry for not replying - \"you\" ambiguity mistake on my part I guess ;)\nBut yeah, we should opt for readability in the YAML. \n. It looks like the this CL has conflicts. Can you resolve them? \nReally comprehensive work!\n. Look at it in github here:\nhttps://github.com/tobie/ua-parser/pull/271 - it indicates there are conflicts needing resolution - maybe it's just wrong?\n. Wow - cool!!\n. Wow, selwin - nice!\n\nLGTM - Tobie, what do you think?\n. I'm going to add @selwin to this because he's done the most on our python install path.\nOffhand, I see nothing objectionable here. I think the most likely development path is a git clone.\n. My heart tells me that we should separate \"Apple\" from \"iPad\" into another\nkey. I'm sure people have coded checks for foo == 'iPad' as it is and this\nwill break those right? But we've been inconsistent here right? What do you\nthink?\n\nOn Fri, Aug 9, 2013 at 12:15 PM, Tobie Langel notifications@github.comwrote:\n\n> @commenthol https://github.com/commenthol could you please rebase this\n> PR now that I've accepted @jpvincent https://github.com/jpvincent's\n> patch? (I had missed yours previously).\n> \n> Would also like @elsigh https://github.com/elsigh's input on the\n> branding changes (iPad --> Apple iPad).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-22417301\n> .\n. Thing is - I fixed the python parser in 287 -\nhttps://github.com/tobie/ua-parser/pull/287\n\ncommenthol - maybe you just need to rebase and rerun the travis test? Can\nyou link me to where you see the present failure? It's not impossible I did\nsomething incomplete, but I added unit tests w/ 287 so I think it should be\ngood.\n\nOn Tue, Sep 3, 2013 at 6:53 AM, Tobie Langel notifications@github.comwrote:\n\n> /cc @elsigh https://github.com/elsigh ^\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-23713861\n> .\n. Wow, I get it now - I added changes to the OS parser not the device parser - so yeah, it makes sense you needed to  add these to the python port here.\nI don't see changes to the PHP port in this CL, but you've got a green, merge-able, monster CL here that adds tons of functionality and breadth to the parser in the right spirit, so \n\nLGTM. (I'm going to let Tobie do the merge in case he wants another read over the JS bits)\n. Agreed - I suppose we're about to end up in a world where some ports have more info that others. \nI don't know how many of our langs are supported by travis, but that the more we can have all of the parsers run the same tests the better. If all the langs were running through Travis it does place quite a burden on anyone who wants a new feature to put it in everywhere, but I'd be ok with that.\n\nFor this case I'm not that concerned here about new functionality in the device parser, as opposed to say the UA parser. But it would be nice to get a note out to all the other maintainers at a minimum. Then again, if we had a single page/file that outlines the spec of the parser everyone could subscribe to that and we could approve changes to that file before changes to any/all langs.\n\nI guess I'm just hoping the other authors or parser users in those languages get compelled to have the same functionality and send in PRs down the line. \n\nRight now we just have a little section for each language but not an overall spec..\n. Holy guacamole - this has become a _most excellent_ PR.\nThe parser doc looks great as a starting point to me.\n\nI don't see any way to \"star\" or \"watch\" a single file in a repo via GitHub\nbut something like that would be great for the other lang authors to do.\nOtherwise, we have their github usernames and so we could try to @ them on\nany review of that file.\n\nOn Wed, Sep 11, 2013 at 1:07 AM, Tobie Langel notifications@github.comwrote:\n\n> That looks like a good start. I'll try to find time to review this by EOW.\n> Thanks for your work on this!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-24219837\n> .\n. I'll commit to the same as dmolsen - should be a quick change in python. \n. Shame on me.\nLooks like I have a few lines of code to add then - I'll see if I can't get you a PR this afternoon.\n. Hrm, it looks like OSParser has os_v1_replacement actually..\nhttps://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser.py#L89\nI'll have to look more closely.\n. Actually, I think I see down in the bottom of that file where v1_replacement is not read from the yaml. Easy fix.\n. unit tests catching feature incompleteness = AWESOME\n\nOn Fri, Aug 9, 2013 at 11:51 AM, Tobie Langel notifications@github.comwrote:\n\n> Merged #287 https://github.com/tobie/ua-parser/issues/287. Restarted\n> the travis build which should now pass.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/286#issuecomment-22415789\n> .\n. Tobie - mind taking a quick look?\nLooks like my editor \"fixed\" some whitespace in the test yaml files - sorry for the extra junk in there.\n. The Travis build failed - can you take a look?\nhttps://travis-ci.org/tobie/ua-parser/builds/10166177\n. On Mon, Sep 9, 2013 at 10:28 AM, Tobie Langel notifications@github.comwrote:\n\n> It sounds like we should treat as IEMobile, then, and identify the device\n> through the device parser, no?\n> \n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/293#issuecomment-24097538\n> .\n. On Tue, Oct 29, 2013 at 11:07 PM, commenthol notifications@github.comwrote:\n\n> I just came across the js_ua attribute within test_user_agent_parser.yamlwhich broke the python tests.\n> This is some extra info which is only part of the python parser (See lines\n> 236ff).\n> Currently these tests are excluded in with_fixtures.js tests in line 22\n> from the js parser as well as in the other langs (java, go, perl, php).\n> Apart from that the functionality is obsolete as the js_ua info provided\n> in the testcases needs to come from somewhere.\n> IMHO if this information provided by js_ua is relevant, then it should be\n> in the regexes.yaml file but not in the parser itself.\n> This could be achieved either by using chromeframe as ua.family and not\n> having any additional info or implementing the multireplace mechanism as\n> with the device parser.\n> For the moment I commented out js_ua in test_user_agent_parser.\n> What do you think?\n\nI think that's fine.\njs_ua is for the peculiar case of detecting ChromeFrame which is now\ndiscontinued as well as some weird cases of IE in weird compat modes when\nthere were bugs in the betas.\n\n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/301#issuecomment-27367242\n> .\n. I think it's high time we tackle this - this project is mature and seems to get a lot of use now. I particularly like the idea of serving YAML or JSON as a service - additionally, I'd like to see a simple web form that does a parse and displays the results in tables (with a CSRF token and some kind of throttling to prevent abuse).\n\nThe test_resources dir is presently a mess (my fault) - so this will also be a good time to clean it up.\n\nOne challenge with separating regexes.yaml from a thorough test - how will we be sure that a change to regexes.yaml doesn't break prior parse results? When that happens it may just mean that the test data itself needs to change, but it won't be obvious that the tests need to be updated until running  thorough run of any given port against the full tests. \n\nFor the web service itself, it would be nice to get a sponsor for the serving resources. Ideally it would be a company who's deployed the project already and depends on it, or is at least about to or something, so that there's a good line-up of incentive there. I was contacted kinda out of the blue by Adobe last week - I could reach out to them, but figure it's at least worth disucssing.\n\nHow cool would a get-together hackathon be? ;0\n\nThanks for bringing it up Tobie, and outlining a path.\n. Hey Tom - this isn't a bug in UA parser, slosing.\nWhat test are you trying to run? Feel free to post an URL here.\n. @tobie Do you care what language the .travis.yml file uses?\n. Do you know if FB (or anyone) can make a functional change to the webview? Though, I suppose that's actually what you're trying to check for, yeah?\n\nIf not I wonder if this is really a different UA, or more like OS - ie. some sort of container/annotation for a particular UA. In that case, I wonder if it might be better to either add an annotation to the OS object or device object in this case.\n\nI agree that it would be good to be able to detect the webview case, and also to be able to mark popular webview strings somehow (twitter, fb, etc...)\n. Yep - I totally agree that the string \"webview\" ought to be a part of the ua.family (i.e. Safari (webview)) to disambiguate it from normal Safari (assuming we can detect that difference from the UA string).\n\nIt's the latter part about the further-modified-by-distributor string (FB, Twitter) and I'm not sure where we should put that. \n\nSo I'm cool with family becoming Safari (Webview) and Chrome (Webview) - I think submitting a regex change PR is the way to go for this.\n\nLooks like someone put up a cool site to show what ua-parser currently determines the UA to be:\nhttp://www.whatsmyua.info/\n. I feel like if you can get a mergeable PR and it passes the tests I'm happy to approve. \nBreaking this up could be more trouble and effort than it's really worth.\n\nPS - major kudos for this work.\n. Sorry about that if there's something awry. I wonder what it is?\nI basically just pasted:\nview-source:http://ua-parser.appspot.com/json?indent=2\nand manually deleted the os_parsers and product_parsers section from the end (not yet implemented)\n. yep, sorry didn't notice that\n. I don't actually mind that much if we don't standardize property names or what the parsers do. Sure, it seems like that would be a nice touch, but it's not a requirement. I don't think the JS parser does v2 or v3 fwiw.\n\nI'm with Tobie on point #2 as well. My hunch is that you need things added things to regexes.yaml to support this, and I'm good with that.\n. Yeah, this looks like it can now be done from the UA string. That was not always true. Will fix.\n. It should be in the YAML regexes so all parsers benefit.\nI'm planning to take the @dmolsen's regexes file from https://raw.github.com/dmolsen/ua-parser-php/master/resources/user_agents_regex.yaml and replace the one in this project sometime today or tomorrow.\nOnce it's in, I'll add a chromeframe regex and test for python.\n. Fixed in https://github.com/tobie/ua-parser/commit/191a6d8c2ab67cea8bbfc5d029da4a30ce1e6e4d\n. Thanks Francois!\n\n@dmolsen I wonder if we can get Travis set up to run the python and php unit tests - have you ever done that w/ github? I'm eager to learn about it but figure it's some work... I wonder if we could turn all the multiple files in test resources into a single canonical yaml file with all the bits + OS + Device so that we could all run unit tests against that one file for each of our ports?\n. python does a sys.exit code 0 for success.\n. On Wed, Sep 12, 2012 at 3:57 PM, Timo Tijhof notifications@github.comwrote:\n\n> You can also set up the hook manually, its a one-time thing. But using\n> their interface is convenient.\n> \n> Over the last few months lots of improvements have been made to Travis.\n> Setting this up is now much easier.\n> \n> As for testing, the primary goal is to test the regexes against popular\n> browsers and stability and expectations. Not to test that the\n> implementations follow the specification. Both are interesting, but I think\n> we can make the assumption for now that the various language\n> implementations all properly parse YAML, run the regexes and return the\n> matches in an \"object\", right?\n> \n> So just running them i.e. in node should be sufficient.\n\nI think all the implementations have slightly different objects, but yeah.\nMostly the test should be to make sure that changes to regexes.yaml don't\nresult in regressions.\nThere's a huge number of UA strings and expected results in the\ntest_resources dir which the py test uses - some are much larger than\nothers, but even if it takes minutes to run all the tests, regressions in\nregexes.yaml need to not happen for the project to be successful. The OS\ntests and device tests could also be filled out a fair amount.\n. No plans on my part and no guesses on difficulty. Do you think it's an impossibility to have it be backwards compatible? I'm not really up to date on python3-ness, but I'd certainly prefer a single repo that works for both.\n. wfm\n. Also, it didn't look like the home page had a java usage example like we do for the other langs..\n. Just something on the homepage ;)\n\nSent from my phone\n\nOn Jul 24, 2012, at 10:00 PM, sjiang\nreply@reply.github.com\nwrote:\n\n> There's an example in the README.md in the java directory.  Do you prefer to have the example in the main README?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/38#issuecomment-7240753\n. Tobie - if you're good with it I am =)\n. Thanks Ernest!\n. w00t! Yeah, this is really cool!\n. What if we make the \"major\" bit include compat info? i.e. \"8 (compatibility mode 7)\" or something?\n. @bluesmoon Can you run the python unit test and let me know if they pass?\nWe don't have it hooked up to Travis, and I'm feeling too lazy to pull the diff and do it myself ;0\n\nFrom the py directory:\npython -m user_agent_parser_test\n. Wow - this is super cool - thanks for the work on this! \nAre you good with maintaining it going forward, handling bugs in the C# version and all that? Tobie can add you as a committer.\nIf you can make the change to not dupe regexes.yaml, then this change looks good to me! \n. Oops, I shouldn't have pulled that ;0\nTrigger happy holidays. \n\nYeah, ultimately, I agree that these distinctions are troublesome.\nWhat does \"mobile\" even mean anymore? \n\nI'd be ok with just reverting this concept from ua-parser.\n. Care to submit a change for this?\n. Check out regexes.yaml in the top level dir =)\nMostly I figure this will just sit in the Issues bin otherwise.\n. @davidmontgom Can you give me a little more info about how your workserServer layout is?\n\ni.e. for me:\n522 ~/src/ua-parser/py  (elsigh) $ python\nPython 2.7.1 (r271:86832, Jun 25 2011, 05:09:01) \n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > from ua_parser import user_agent_parser\n\naka no error\n. Fixed in merged pull request just now, thanks\n. I think this might be a long-ago escape, probably from an original php implementation as I don't believe python needs the underscore escaped.\n. Totally. I need to update the py library not to test/try to return this info.\nWill do today.\n. Do you know how to do such a thing? I think it's simply a matter of willpower =)\n. I think this is ok as you're on top of PyPI already =)\n. Yeah, I think some people may just copy the regexes file in the ua_parser python dir so that they only use that and then the path gets off.\nIn terms of the dir struction ../../ looks correct to me.\nIf anyone wants to do the former now, they can use the env variable option.\nI'm inclined to merge this if you're ok with it.\n. Sounds like we need a YAML -> JSON build step.\nRegexes are hard enough to read, and YAML is a lot more human readable than JSON (for most).\nYeah. 100x startup improvement is pretty worth it.\n. On Tue, Dec 4, 2012 at 5:59 AM, Selwin Ong notifications@github.com wrote:\n\n> @elsigh https://github.com/elsigh by build step, do you mean as part of setup.py\n> install?\n\nI guess I'm not sure what the best way is to prevent people from editing\nthe JSON file (maybe a header at the top) and also to keep it ever-in-sync\nwithout having to remember to run a script.\nSince this is a multi-language project a build step is a little tricky.\n\n>  What about maintaining a regexes.json in addition to the YAML file in\n> the main repo? This can be compiled right before we tag a release. I'd\n> imagine other languages will also enjoy similar performance improvements\n> from this change.\n\nYeah, I don't know about that. I suppose before we invest any effort it\nwould be worthwhile to know if it's only python that benefits so much from\nthe JSON format vs. the YAML format here.\n\n>  \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/117#issuecomment-10997316.\n. That sounds great to me Selwin =)\n. Assigning you simply so I don't push my own change without a small looksee.\nSorry for the reindent in the py files. Feel free to ignore them.\n. Sweet, thanks for the review. Pushing again including the Tesla Model S moved to the device section.\nA car is indeed a device.\n. This is a bug, not by design.\n. Indeed, no lang version should have it's \"own\" yaml file.\n. That is a bug ;)\n\nOn Thu, Dec 27, 2012 at 10:51 AM, Alexander Dean\nnotifications@github.comwrote:\n\n> Ah right, what is this then:\n> https://github.com/tobie/ua-parser/blob/master/haskell/regexes.yaml\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/124#issuecomment-11715344.\n. For some reason it says this request cannot be automatically merged... I wonder if it needs a rebase?\n. Lovely stuff, you're a rock star Selwin.\n. sweet. happy open source new years =)\n. Brilliant, Selwin.\n. This is my fault - I've not been backporting the regexes file. That project morphed into this one =) I'll leave the bug open here until I merge.\n. Twould be fabulous\nOn Jan 10, 2013 6:55 AM, \"Dave Olsen\" notifications@github.com wrote:\n\n> @elsigh https://github.com/elsigh -\n> \n> i went through the old issues list last week and pulled out the ones we\n> weren't properly matching. i hope to have them committed this weekend. i\n> can go back and close them up like i've done in the past if you like.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/159#issuecomment-12099952.\n. I've removed the \"No?\" link from Browserscope and the issue tracker from UA Parser.\n. open source team ftw!\n. Fundamentally, ua-parser could be written to be much faster by doing string tree branching, but that doesn't lend itself really well to a shared, readable YAML file. Part of the reason I believe this project works and is being maintained and now exists in so many languages is that its fairly easy to grok - and easy to just add new regexes and whatnot.\n\nI'm not against re-ordering the YAML file provided that the tests don't break, but I'd like to see data that shows how much faster this is. None of the implementations (I believe) scan the YAML file on every parse. They should be able to put the YAML (or JSON) file into memory and then be iterating over an array of in-memory regexes.\n. Indeed - though we can't just put most common UA first afaik, because\nthere's a whole bunch of exceptions that have to come first, although - the\nregexes could be written to catch the most common UAs first (ala the notion\nof string branching) =) that's probably what you're thinking.. Sweet!!\n\nOn Fri, Jan 11, 2013 at 2:27 PM, Tobie Langel notifications@github.comwrote:\n\n> AFAIK, @3rd-Eden https://github.com/3rd-Eden's suggestion is to order\n> the regexp by most common UA first. I think that could make sense if it's\n> kept reasonable and could yield substancial speed-ups on real world data.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/162#issuecomment-12166664.\n. I'm not against adding additional files-  the test resources dir itself is\nkind of a kludge of stuff at this point as opposed to an orderly,\nthought-out thing.\nMaybe you should commit as is and then subsequently a few canonical files\nout of the monsters?\n\nOn Fri, Jan 11, 2013 at 11:51 AM, Dave Olsen notifications@github.comwrote:\n\n> Over the holiday break I parsed a bunch of log files from work to see\n> where ua-parser might be missing matches, misclassifying matches, as well\n> as try to address issue #134https://github.com/tobie/ua-parser/issues/134. I also trawled the old Google Code project issues. Because of that I've\n> come up with quite a few additions as well as their associated testshttps://github.com/dmolsen/ua-parser/branchesand haven't finished adding them. I kept the additions granular (i.e. in\n> their own branches) to give everyone the ability to chime in on individual\n> changes.\n> \n> Before I went too far I decided to try to test merging my changes into one\n> big file. It was a miserable failure and I had to give up after four or so\n> merged branches. By always adding tests to the end of the files there was\n> guaranteed to be a conflict. The amount of work involved just didn't seem\n> worth it when maybe there was a better option.\n> \n> I've put together an example branch where I've broken out some\n> contributed tests into their own directories and fileshttps://github.com/dmolsen/ua-parser/tree/do-flex-test/test_resources/contributedwithin\n> test_resources. The upside to this is no merge conflict (on tests at\n> least) and more information about each test addition can be kept through\n> the use of the example info.yaml files. The downside is work on other\n> library maintainers to add support for the new directory structure.\n> \n> I realize my use case is a rare one. For the most part we'll see single\n> additions that won't run into conflicts. That said, it might be nice to\n> have things organized with extra information. It might also make it\n> clearer/easier for folks to submit their own patches.\n> \n> Thoughts? Am I missing something obvious where I can merge these files\n> sans conflicts? Do you want me to just deal with the extra work and either\n> work through PRs and conflicts one-by-one or merge everything into one big\n> ball before issuing a PR?\n> \n> /cc @elsigh https://github.com/elsigh\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/163.\n. PR with test?\n. Hey Dan, sorry for missing your note - can you, in your branch, just do:\ncd ua-parser/py/ua_parser\npython user_agent_parser_test.py\n\nThat will run the tests with the python lib. If they pass I'm good with it.\n. I knew it ran the JS tests, but I didn't realize the JS tests were as\ninclusive as they are so thanks for the heads up - that is soooo awesome.\n-l\n\nOn Thu, Jan 17, 2013 at 10:15 AM, Tobie Langel notifications@github.comwrote:\n\n> @elsigh https://github.com/elsigh for the record, travis builds run the\n> JS tests on each PR, including this one:\n> https://github.com/tobie/ua-parser/blob/master/js/test/with_fixtures.js\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/166#issuecomment-12381004.\n. @selwin Any ideas?\n. Sorry, I'm out of touch for the rest of the week, but sounds like you all\nhave this figured out.\n\nOn Tue, Mar 12, 2013 at 11:14 AM, David Bonner notifications@github.comwrote:\n\n> Just tested on a Mac as well, and you're right, works like a charm. Wonder\n> if it's just fedora, or if if rhel/centos do the same thing.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14793067\n> .\n. Done deal - thanks!\n\nOn Fri, Jun 21, 2013 at 6:24 PM, Selwin Ong notifications@github.comwrote:\n\n> @malicustommade https://github.com/malicustommade I'm not a repo\n> conntributor so I can't merge this in. Can @elsighhttps://github.com/elsighor\n> @tobie https://github.com/tobie help?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-19848447\n> .\n. On Tue, Jul 2, 2013 at 10:47 AM, Oliver Beattie notifications@github.comwrote:\n\n> Has the option of simply compiling the YAML to JSON as part of sdist been\n> considered? Seems far simpler (and better for the user, who may not\n> need/want a YAML parser installed)\n\nYes, most of the implementations have a YAML-> JSON converter. We don't\nhost or compile the JSON into a file in the project because we only want to\nmaintain a readable YAML.\n\n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-20362770\n> .\n. Thank you!\n. Nice sleuthing - would you mind filing a pull request with these changes?\n. Great, thanks.\n. I've not seen a pull request with one and haven't had the opportunity to look for one myself.. but that would be great to get one in the repo.\n. Have you checked out the repo locally or are you making your changes on github itself? If the latter, perhaps trying the former is a good idea?\nThe tests live in the test_resources top-level directory.\n. regexes.yaml\n\nOn Thu, May 23, 2013 at 3:16 PM, philipzae notifications@github.com wrote:\n\n> i make changes on github, i'm a complete noob to this stuff.\n> \n> thanks, i see the folder, but which file should i put the UAs in?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/244#issuecomment-18375382\n> .\n. Hey Phillip,\nWhen you say you're a noob - I want to help - but I'm not sure how noob you\nare and how much info to give you.\nI mean, noob to our project? noob to github? noob to git?\nIf you push a branch and submit a pull request the tests will run via\nTravis automagically.\nContributing Changes to regexes.yaml\n\nContributing to the project, especially regexes.yaml, is both welcomed and\nencouraged. To do so just do the following:\n1. Fork the project\n2. Create a branch for your changes\n3. Modify regexes.yaml as appropriate\n4. Add tests to the following files and follow their format:\n   - test_resources/test_device.yaml\n   - test_resources/test_user_agent_parser.yaml\n   - test_resources/test_user_agent_parser_os.yaml\n5. Push your branch to GitHub and submit a pull request\n6. Monitor the pull request to make sure the Travis build succeeds. If\n   it fails simply make the necessary changes to your branch and push it.\n   Travis will re-test the changes.\n\nOn Thu, May 23, 2013 at 3:29 PM, philipzae notifications@github.com wrote:\n\n> regexes.yaml is in the root directory, the files in test_resources are\n> pgts_browser-list.yaml, test_device.yaml, etc...\n> \n> how do i try the former (making changes locally), i'm a noob. :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/244#issuecomment-18375889\n> .\n. Sorry for not replying - \"you\" ambiguity mistake on my part I guess ;)\nBut yeah, we should opt for readability in the YAML. \n. It looks like the this CL has conflicts. Can you resolve them? \nReally comprehensive work!\n. Look at it in github here:\nhttps://github.com/tobie/ua-parser/pull/271 - it indicates there are conflicts needing resolution - maybe it's just wrong?\n. Wow - cool!!\n. Wow, selwin - nice!\n\nLGTM - Tobie, what do you think?\n. I'm going to add @selwin to this because he's done the most on our python install path.\nOffhand, I see nothing objectionable here. I think the most likely development path is a git clone.\n. My heart tells me that we should separate \"Apple\" from \"iPad\" into another\nkey. I'm sure people have coded checks for foo == 'iPad' as it is and this\nwill break those right? But we've been inconsistent here right? What do you\nthink?\n\nOn Fri, Aug 9, 2013 at 12:15 PM, Tobie Langel notifications@github.comwrote:\n\n> @commenthol https://github.com/commenthol could you please rebase this\n> PR now that I've accepted @jpvincent https://github.com/jpvincent's\n> patch? (I had missed yours previously).\n> \n> Would also like @elsigh https://github.com/elsigh's input on the\n> branding changes (iPad --> Apple iPad).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-22417301\n> .\n. Thing is - I fixed the python parser in 287 -\nhttps://github.com/tobie/ua-parser/pull/287\n\ncommenthol - maybe you just need to rebase and rerun the travis test? Can\nyou link me to where you see the present failure? It's not impossible I did\nsomething incomplete, but I added unit tests w/ 287 so I think it should be\ngood.\n\nOn Tue, Sep 3, 2013 at 6:53 AM, Tobie Langel notifications@github.comwrote:\n\n> /cc @elsigh https://github.com/elsigh ^\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-23713861\n> .\n. Wow, I get it now - I added changes to the OS parser not the device parser - so yeah, it makes sense you needed to  add these to the python port here.\nI don't see changes to the PHP port in this CL, but you've got a green, merge-able, monster CL here that adds tons of functionality and breadth to the parser in the right spirit, so \n\nLGTM. (I'm going to let Tobie do the merge in case he wants another read over the JS bits)\n. Agreed - I suppose we're about to end up in a world where some ports have more info that others. \nI don't know how many of our langs are supported by travis, but that the more we can have all of the parsers run the same tests the better. If all the langs were running through Travis it does place quite a burden on anyone who wants a new feature to put it in everywhere, but I'd be ok with that.\n\nFor this case I'm not that concerned here about new functionality in the device parser, as opposed to say the UA parser. But it would be nice to get a note out to all the other maintainers at a minimum. Then again, if we had a single page/file that outlines the spec of the parser everyone could subscribe to that and we could approve changes to that file before changes to any/all langs.\n\nI guess I'm just hoping the other authors or parser users in those languages get compelled to have the same functionality and send in PRs down the line. \n\nRight now we just have a little section for each language but not an overall spec..\n. Holy guacamole - this has become a _most excellent_ PR.\nThe parser doc looks great as a starting point to me.\n\nI don't see any way to \"star\" or \"watch\" a single file in a repo via GitHub\nbut something like that would be great for the other lang authors to do.\nOtherwise, we have their github usernames and so we could try to @ them on\nany review of that file.\n\nOn Wed, Sep 11, 2013 at 1:07 AM, Tobie Langel notifications@github.comwrote:\n\n> That looks like a good start. I'll try to find time to review this by EOW.\n> Thanks for your work on this!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-24219837\n> .\n. I'll commit to the same as dmolsen - should be a quick change in python. \n. Shame on me.\nLooks like I have a few lines of code to add then - I'll see if I can't get you a PR this afternoon.\n. Hrm, it looks like OSParser has os_v1_replacement actually..\nhttps://github.com/tobie/ua-parser/blob/master/py/ua_parser/user_agent_parser.py#L89\nI'll have to look more closely.\n. Actually, I think I see down in the bottom of that file where v1_replacement is not read from the yaml. Easy fix.\n. unit tests catching feature incompleteness = AWESOME\n\nOn Fri, Aug 9, 2013 at 11:51 AM, Tobie Langel notifications@github.comwrote:\n\n> Merged #287 https://github.com/tobie/ua-parser/issues/287. Restarted\n> the travis build which should now pass.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/286#issuecomment-22415789\n> .\n. Tobie - mind taking a quick look?\nLooks like my editor \"fixed\" some whitespace in the test yaml files - sorry for the extra junk in there.\n. The Travis build failed - can you take a look?\nhttps://travis-ci.org/tobie/ua-parser/builds/10166177\n. On Mon, Sep 9, 2013 at 10:28 AM, Tobie Langel notifications@github.comwrote:\n\n> It sounds like we should treat as IEMobile, then, and identify the device\n> through the device parser, no?\n> \n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/293#issuecomment-24097538\n> .\n. On Tue, Oct 29, 2013 at 11:07 PM, commenthol notifications@github.comwrote:\n\n> I just came across the js_ua attribute within test_user_agent_parser.yamlwhich broke the python tests.\n> This is some extra info which is only part of the python parser (See lines\n> 236ff).\n> Currently these tests are excluded in with_fixtures.js tests in line 22\n> from the js parser as well as in the other langs (java, go, perl, php).\n> Apart from that the functionality is obsolete as the js_ua info provided\n> in the testcases needs to come from somewhere.\n> IMHO if this information provided by js_ua is relevant, then it should be\n> in the regexes.yaml file but not in the parser itself.\n> This could be achieved either by using chromeframe as ua.family and not\n> having any additional info or implementing the multireplace mechanism as\n> with the device parser.\n> For the moment I commented out js_ua in test_user_agent_parser.\n> What do you think?\n\nI think that's fine.\njs_ua is for the peculiar case of detecting ChromeFrame which is now\ndiscontinued as well as some weird cases of IE in weird compat modes when\nthere were bugs in the betas.\n\n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/301#issuecomment-27367242\n> .\n. I think it's high time we tackle this - this project is mature and seems to get a lot of use now. I particularly like the idea of serving YAML or JSON as a service - additionally, I'd like to see a simple web form that does a parse and displays the results in tables (with a CSRF token and some kind of throttling to prevent abuse).\n\nThe test_resources dir is presently a mess (my fault) - so this will also be a good time to clean it up.\n\nOne challenge with separating regexes.yaml from a thorough test - how will we be sure that a change to regexes.yaml doesn't break prior parse results? When that happens it may just mean that the test data itself needs to change, but it won't be obvious that the tests need to be updated until running  thorough run of any given port against the full tests. \n\nFor the web service itself, it would be nice to get a sponsor for the serving resources. Ideally it would be a company who's deployed the project already and depends on it, or is at least about to or something, so that there's a good line-up of incentive there. I was contacted kinda out of the blue by Adobe last week - I could reach out to them, but figure it's at least worth disucssing.\n\nHow cool would a get-together hackathon be? ;0\n\nThanks for bringing it up Tobie, and outlining a path.\n. Hey Tom - this isn't a bug in UA parser, slosing.\nWhat test are you trying to run? Feel free to post an URL here.\n. @tobie Do you care what language the .travis.yml file uses?\n. Do you know if FB (or anyone) can make a functional change to the webview? Though, I suppose that's actually what you're trying to check for, yeah?\n\nIf not I wonder if this is really a different UA, or more like OS - ie. some sort of container/annotation for a particular UA. In that case, I wonder if it might be better to either add an annotation to the OS object or device object in this case.\n\nI agree that it would be good to be able to detect the webview case, and also to be able to mark popular webview strings somehow (twitter, fb, etc...)\n. Yep - I totally agree that the string \"webview\" ought to be a part of the ua.family (i.e. Safari (webview)) to disambiguate it from normal Safari (assuming we can detect that difference from the UA string).\n\nIt's the latter part about the further-modified-by-distributor string (FB, Twitter) and I'm not sure where we should put that. \n\nSo I'm cool with family becoming Safari (Webview) and Chrome (Webview) - I think submitting a regex change PR is the way to go for this.\n\nLooks like someone put up a cool site to show what ua-parser currently determines the UA to be:\nhttp://www.whatsmyua.info/\n. I feel like if you can get a mergeable PR and it passes the tests I'm happy to approve. \nBreaking this up could be more trouble and effort than it's really worth.\n\nPS - major kudos for this work.\n. ",
    "bluesmoon": "They still have a JSON file, but it's generated from the YAML and available as a web service:\nhttp://ua-parser.appspot.com/json?indent=2\n\nRegarding the YAML parser, there is only one available for nodejs, and it appears to be incomplete.  Specifically it is unable to parse the ua-parser YAML file.  I've submitted a fix for that, but my fix is just a hack.\n\nIMO, JSON is native to NodeJS while YAML requires a lexical analyser which is bound to be slower.  We're better off periodically syncing from the web service provided by the upstream project.\n\nNote that the above webservice also provides YAML and Atom output:\nhttp://ua-parser.appspot.com/yaml\nhttp://ua-parser.appspot.com/feed\n. So looking at the different browser versions, the parseInt we use on version numbers may not always be applicable.  Do we need to check that it is numeric before we try that?\n. I'd look at how npm solves it.  It takes care of cases like 4.0.1.pre < 4.0.1 < 4.0.1a\n. Note, although there are 4 commits here, there's really only two lines that have changed from your branch.  Everything else was my local changes for the useragent stuff that was made redundant by the upstream changes.\n. @Krinkle It's part of the commit here: https://github.com/tobie/ua-parser/pull/7/files#diff-2\n. ah okay, it's from my access logs.  it's intended to be representative of the real world, so would need to be updated every few months to reflect changes in the real world.\n. ```\n\n$ python -m user_agent_parser_test\n..........\n----------------------------------------------------------------------\nRan 10 tests in 74.383s\n\nOK\n```\n\nBTW, the `user_agent_parser_test` script is inside the `py/ua-parser directory`.  Not sure if this was intentional or not, but it also means that the reference to `../regexes.yaml` needs to be changed to `../../regexes.yaml`\n. Fixed in commit 9be310d7\n. Version number comparison should be left to something like `semver`.  I like keeping the versions as strings because that's typically what one displays in analytics software.  Also, there are some user agents that only have string versions (and I forget the name of the one example that I'd reported).\n. A curl request wouldn't directly call out to ua-parser.  Your back end code has to do that, and in this case it's the back end code's responsibility to only pass to ua-parser what can be parsed.  Something simple like `if(ua) { uap.parse(ua); }` will do the trick.\n\nFrom the library's point of view, it's necessary to throw an error when it receives incorrect input.  The library has no way of knowing if this was an expected or exceptional condition, which depends on the calling code.\n\nThat's how I use it.\n. Yes, as long as the caller can choose whether to call `parse` or `parseXX`, the performance implications are not a concern.\n. my nexus 4 says LG on the back.\n. IE11 running on .NET sites seem to be showing this UA string:\n\n`Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; rv:11.0) like Gecko/20100101 Firefox/12.0`\n\nIt gets identified as Firefox/12\n. https://github.com/tobie/ua-parser/commit/68f321c7b97b979e258db4945796f913b281f12f\n. @dangrossman we don't handle compatibility mode for any version of IE.\n. I've opened Issue #318 about IE in compatibility mode.\n. The bug appears to be in this regex:\n\n```\nAndroid[\\- ][\\d]+\\.[\\d]+\\.[\\d]+; [A-Za-z]{2}\\-[A-Za-z]{0,2}; (.+) Build\n```\n. Is that one user agent or multiple user agent strings?  Seems like it is a single string made up of the following UA strings:\n\n```\nMozilla/5.0 (Linux; U; Android 4.0.1; ja-jp; Galaxy Nexus Build/ITL41D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.3; ja-jp; URBANO PROGRESSO Build/010.0.3000) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.3; ja-jp; Sony Tablet S Build/TISU0R0110) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.4; ja-jp; SC-06D Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.1.1; ja-jp; Galaxy Nexus Build/JRO03H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03S) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19 64\n```\n. IAC, I recommend changing the regex from using `.+` to `[^;]+`\n\nWhat do the other developers think?\n. There really isn't a UA spec, but having Mozilla/5.0 occur twice isn't something you see in reality.  Which browser did this UA string come from?\n. To clarify, the following information might help:\n\nDid this string come from a browser that you use, in which case it would be useful to check the following:\n1. Is any user agent spoofing happening, like through an extension or something.\n2. What is the actual name/version of the browser, OS and device, and what plugins are installed.\n\nIf not from your browser, then is it from an access log file?  If so, how frequently does it show up, and what's the divergence of IP addresses/locations that it shows up from.\n. Well, when we tried running IE11 in IE7 mode, the UA string came through as \n\n`Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)`\n\nwhich is very different from what we're seeing.  This is actually coming through from a customer site, and they include our JavaScript on their site.  I'll have a look at their page to see if they use the `X-UA-Compatible` header/equivalent.\n. So the site that results in the above UA string has this in the HEAD:\n\n`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\">`\n\nwhile a different site that also has the problem has this:\n\n`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />`\n\nI'll investigate some more.\n. Well, that's what's confusing me.  When I tried doing the same, the useragent string was different:\n\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\n\nThis is not the string we see in our logs, which is what confuses me.\n\nFurthermore, this site: https://www.whatismybrowser.com/developers/custom-parse?useragent=Mozilla%252F4.0+%2528compatible%253B+MSIE+7.0%253B+Windows+NT+6.3%253B+WOW64%253B+Trident%252F7.0%253B+.NET4.0E%253B+.NET4.0C%253B+.NET+CLR+3.5.30729%253B+.NET+CLR+2.0.50727%253B+.NET+CLR+3.0.30729%2529&SecurityID=bfc3b79f2e8d95629776ee8acfb9fa5a5e0ce242&action_submit=Analyse+this+user+agent\n\ncorrectly identifies the user agent, because it also looks at the Trident/7.0 in there.\n. The project has moved here: https://github.com/ua-parser/uap-core please file issues there.  Also, this issue has been fixed: https://github.com/ua-parser/uap-core/issues/72\n. I do not know what NuGet is, but if you look at the ua-parser project you might find something: https://github.com/ua-parser/\n. They still have a JSON file, but it's generated from the YAML and available as a web service:\nhttp://ua-parser.appspot.com/json?indent=2\n\nRegarding the YAML parser, there is only one available for nodejs, and it appears to be incomplete.  Specifically it is unable to parse the ua-parser YAML file.  I've submitted a fix for that, but my fix is just a hack.\n\nIMO, JSON is native to NodeJS while YAML requires a lexical analyser which is bound to be slower.  We're better off periodically syncing from the web service provided by the upstream project.\n\nNote that the above webservice also provides YAML and Atom output:\nhttp://ua-parser.appspot.com/yaml\nhttp://ua-parser.appspot.com/feed\n. So looking at the different browser versions, the parseInt we use on version numbers may not always be applicable.  Do we need to check that it is numeric before we try that?\n. I'd look at how npm solves it.  It takes care of cases like 4.0.1.pre < 4.0.1 < 4.0.1a\n. Note, although there are 4 commits here, there's really only two lines that have changed from your branch.  Everything else was my local changes for the useragent stuff that was made redundant by the upstream changes.\n. @Krinkle It's part of the commit here: https://github.com/tobie/ua-parser/pull/7/files#diff-2\n. ah okay, it's from my access logs.  it's intended to be representative of the real world, so would need to be updated every few months to reflect changes in the real world.\n. ```\n\n$ python -m user_agent_parser_test\n..........\n----------------------------------------------------------------------\nRan 10 tests in 74.383s\n\nOK\n```\n\nBTW, the `user_agent_parser_test` script is inside the `py/ua-parser directory`.  Not sure if this was intentional or not, but it also means that the reference to `../regexes.yaml` needs to be changed to `../../regexes.yaml`\n. Fixed in commit 9be310d7\n. Version number comparison should be left to something like `semver`.  I like keeping the versions as strings because that's typically what one displays in analytics software.  Also, there are some user agents that only have string versions (and I forget the name of the one example that I'd reported).\n. A curl request wouldn't directly call out to ua-parser.  Your back end code has to do that, and in this case it's the back end code's responsibility to only pass to ua-parser what can be parsed.  Something simple like `if(ua) { uap.parse(ua); }` will do the trick.\n\nFrom the library's point of view, it's necessary to throw an error when it receives incorrect input.  The library has no way of knowing if this was an expected or exceptional condition, which depends on the calling code.\n\nThat's how I use it.\n. Yes, as long as the caller can choose whether to call `parse` or `parseXX`, the performance implications are not a concern.\n. my nexus 4 says LG on the back.\n. IE11 running on .NET sites seem to be showing this UA string:\n\n`Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; rv:11.0) like Gecko/20100101 Firefox/12.0`\n\nIt gets identified as Firefox/12\n. https://github.com/tobie/ua-parser/commit/68f321c7b97b979e258db4945796f913b281f12f\n. @dangrossman we don't handle compatibility mode for any version of IE.\n. I've opened Issue #318 about IE in compatibility mode.\n. The bug appears to be in this regex:\n\n```\nAndroid[\\- ][\\d]+\\.[\\d]+\\.[\\d]+; [A-Za-z]{2}\\-[A-Za-z]{0,2}; (.+) Build\n```\n. Is that one user agent or multiple user agent strings?  Seems like it is a single string made up of the following UA strings:\n\n```\nMozilla/5.0 (Linux; U; Android 4.0.1; ja-jp; Galaxy Nexus Build/ITL41D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.3; ja-jp; URBANO PROGRESSO Build/010.0.3000) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.3; ja-jp; Sony Tablet S Build/TISU0R0110) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.0.4; ja-jp; SC-06D Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; U; Android 4.1.1; ja-jp; Galaxy Nexus Build/JRO03H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nMozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03S) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19 64\n```\n. IAC, I recommend changing the regex from using `.+` to `[^;]+`\n\nWhat do the other developers think?\n. There really isn't a UA spec, but having Mozilla/5.0 occur twice isn't something you see in reality.  Which browser did this UA string come from?\n. To clarify, the following information might help:\n\nDid this string come from a browser that you use, in which case it would be useful to check the following:\n1. Is any user agent spoofing happening, like through an extension or something.\n2. What is the actual name/version of the browser, OS and device, and what plugins are installed.\n\nIf not from your browser, then is it from an access log file?  If so, how frequently does it show up, and what's the divergence of IP addresses/locations that it shows up from.\n. Well, when we tried running IE11 in IE7 mode, the UA string came through as \n\n`Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)`\n\nwhich is very different from what we're seeing.  This is actually coming through from a customer site, and they include our JavaScript on their site.  I'll have a look at their page to see if they use the `X-UA-Compatible` header/equivalent.\n. So the site that results in the above UA string has this in the HEAD:\n\n`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\">`\n\nwhile a different site that also has the problem has this:\n\n`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />`\n\nI'll investigate some more.\n. Well, that's what's confusing me.  When I tried doing the same, the useragent string was different:\n\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)\n\nThis is not the string we see in our logs, which is what confuses me.\n\nFurthermore, this site: https://www.whatismybrowser.com/developers/custom-parse?useragent=Mozilla%252F4.0+%2528compatible%253B+MSIE+7.0%253B+Windows+NT+6.3%253B+WOW64%253B+Trident%252F7.0%253B+.NET4.0E%253B+.NET4.0C%253B+.NET+CLR+3.5.30729%253B+.NET+CLR+2.0.50727%253B+.NET+CLR+3.0.30729%2529&SecurityID=bfc3b79f2e8d95629776ee8acfb9fa5a5e0ce242&action_submit=Analyse+this+user+agent\n\ncorrectly identifies the user agent, because it also looks at the Trident/7.0 in there.\n. The project has moved here: https://github.com/ua-parser/uap-core please file issues there.  Also, this issue has been fixed: https://github.com/ua-parser/uap-core/issues/72\n. I do not know what NuGet is, but if you look at the ua-parser project you might find something: https://github.com/ua-parser/\n. ",
    "Krinkle": "Where does `uas.js` (or `uas.txt`) come from?\n. @bluesmoon I saw that ;-), I meant where it came from, not where it was added. e.g. on which dataset it is based and/or how representative it is. But considering the test is just for speed, the content doesn't really matter that much, then. Thanks :) \n. You can also set up the hook manually, its a one-time thing. But using their interface is convenient.\n\nOver the last few months lots of improvements have been made to Travis. Setting this up is now much easier.\n\nAs for testing, the primary goal is to test the regexes against popular browsers and stability and expectations. Not to test that the implementations follow the specification. Both are interesting, but I think we can make the assumption for now that the various language implementations all properly parse YAML, run the regexes and return the matches in an \"object\", right?\n\nSo just running them i.e. in node should be sufficient.\n. Still?\n. cc @rdworth\n. Bump :) Would be nice to get a review/merge on this. I'd like to start using it.\n. Sure, will do.\n. :+1: \n\n```\nPHP Notice:  Undefined property: stdClass::$device\nPHP Notice:  Undefined property: stdClass::$deviceMajor\nPHP Notice:  Undefined property: stdClass::$deviceMinor\n```\n. Could you re-open? I forgot to file an issue first, #66 is the pull request. Someone else (or me) might submit a different pull referencing this issue.\n. Would be nice to get this merged, I'm in need of a replacement for a certain jQuery plugin I used to use for userAgent detection would like to use ua-parser instead. But that depends on #66, which I won't rebase until you're ready with this (unless you are willing to merge mine first and rebase this, but since they are overlapping and implementing similar things in different ways, I assume not).\n. Maybe move it up 1 level?\n`[tobie/ua-parser]/c-sharp/ua-parser/...` &rarr; `[tobie/ua-parser]/c-sharp/...`\n. :star2: \n. Where does `uas.js` (or `uas.txt`) come from?\n. @bluesmoon I saw that ;-), I meant where it came from, not where it was added. e.g. on which dataset it is based and/or how representative it is. But considering the test is just for speed, the content doesn't really matter that much, then. Thanks :) \n. You can also set up the hook manually, its a one-time thing. But using their interface is convenient.\n\nOver the last few months lots of improvements have been made to Travis. Setting this up is now much easier.\n\nAs for testing, the primary goal is to test the regexes against popular browsers and stability and expectations. Not to test that the implementations follow the specification. Both are interesting, but I think we can make the assumption for now that the various language implementations all properly parse YAML, run the regexes and return the matches in an \"object\", right?\n\nSo just running them i.e. in node should be sufficient.\n. Still?\n. cc @rdworth\n. Bump :) Would be nice to get a review/merge on this. I'd like to start using it.\n. Sure, will do.\n. :+1: \n\n```\nPHP Notice:  Undefined property: stdClass::$device\nPHP Notice:  Undefined property: stdClass::$deviceMajor\nPHP Notice:  Undefined property: stdClass::$deviceMinor\n```\n. Could you re-open? I forgot to file an issue first, #66 is the pull request. Someone else (or me) might submit a different pull referencing this issue.\n. Would be nice to get this merged, I'm in need of a replacement for a certain jQuery plugin I used to use for userAgent detection would like to use ua-parser instead. But that depends on #66, which I won't rebase until you're ready with this (unless you are willing to merge mine first and rebase this, but since they are overlapping and implementing similar things in different ways, I assume not).\n. Maybe move it up 1 level?\n`[tobie/ua-parser]/c-sharp/ua-parser/...` &rarr; `[tobie/ua-parser]/c-sharp/...`\n. :star2: \n. ",
    "dmolsen": "guess i can't put in two pull requests at once...\n. i took the lazy way out but it looked like my stuff would overwhelm the main README. i can always edit it again.\n. done.\n. Francois-\n\nThanks for submitting the issue. I've updated regexes.yaml & quickly tested the change. Looks good. It also helped me catch an issue with identifying Android device names.\n. @elsigh never done it but it sounds like it might be well worth it. let me play around with the PHP stuff and see what i can get going. leaving this URL here for reference:\n\nhttp://about.travis-ci.org/docs/user/languages/php/\n. Looks like Opera Mini & Opera Mobile aren't following Google's standards for how to identify tablet-based vs. phone-based user-agent strings. I've updated the tablet check to take this into account tho tablet-based versions of these UA strings might be wonky. Need to find some more tests for it. Thanks for the ticket, Erik.\n. for the record, i liked the \"luv ya git\" comment :)\n. I'll get this fixed. Thanks.\n. The notice is fixed but I have a feeling that might not address your issue assuming you tried `php UAParser.php -get` and still got that notice. It could be that STDIN isn't working in your case. I'm closing the ticket because this issue is addressed. If you find it still doesn't work comment again and I'll re-open. Please include info on your version of PHP and OS. Thanks.\n. Ok, cool :)\n. thanks for fixing these :)\n. Rather than fix regexes.yaml I ended up fixing my PHP lib instead. This way if I forgot parens in the future it won't break again. Thanks much for letting us know about the issue and providing good details.\n. thanks for the fix :)\n. Have you grabbed the latest version of regexes.yaml? I know I fixed this bug a while back. The UA string you provided gets classified correctly as Polaris in my test. You can run your own test by visiting the following website:\n\nhttp://uaparser.dmolsen.com/\n\nI'm closing this issue for now. If you find that there is still an error please let me know. Have a good day.\n. This is a problem with a specific test in Modernizr. ua-parser appears to classify the browser correctly. For a longer explanation [check out my update](https://github.com/dmolsen/Detector/issues/10) on this issue opened on Detector's repo.\n. maybe we could pop the trident version into the build and revision numbers? e.g. IE 8 in compatibility mode would report IE 7.0 but you'd have major=>7, minor=>0, build=>4, revision=>0 so if someone needed to do a check on compat they could by looking at the build/revision numbers. btw, build & revision are what I call those in the php lib. \n. closing this one up. not a huge issue either way.\n. thanks for the fix :)\n. I have a feeling there's something else in the UA that's setting off that check. Can you hit http://uaparser.dmolsen.com for me and copy the results into a comment for this issue, please? Thanks.\n. Stupid question... Are you running IE9 on a tablet pc?\n\nThe \"Tablet PC 2.0\" string is setting off one of my checks that's really designed for Android tablets. That said, Windows seems to think that it's running on a tablet and if that's the case then having isMobileDevice set to true is actually appropriate. Interestingly enough there seems to be a case for knowing this detail. I'm curious how accurate this bit of data is though. \n\nIf you could also hit this with IE 9 mode & tell me the results I'd appreciate it.\n. For now I'm leaving the php lib unchanged. It's a bad match but I'm going to err on the side of most versions of Windows that are Tablet PC capable actually being tablets. It's a toss-up I think. The tablet attribute might had to drop completely anyway. Sorry.\n. NetFront is definitely the browser name. See the real product: http://gl.access-company.com/products/browser/browser/\n\nI confused the Vita and Nintendo products. The Vita is it OS. I'm not sure what the \"version number\" is for exactly. I'm not sure it necessarily tracks to a specific version of NetFront. \n\nI'll close this pull request since I effed it up obviously. Sorry 'bout that.\n. Just wanted to chime in to say I've seen the issue. I'm with @tobie in the sense that I'd hate to break compat but a) it's not the biggest outward change in the world and b) I can see the uses for unit testing (assuming @tobie's suggestion works just as well from a perf perspective). I'm going to try his suggestion just to see what happens.\n. in the short-term i made a fix to the existing lib so that the regexes file is only loaded once. that addresses the perf issue. i think @rjd22 is going in the right direction so i'll keep trying to work in his fixes. i played with this yesterday and found a solution that was backwards compatible but it throws a strict standards error if a dev is running in that mode. i'm going to keep playing around with it but i know i have other stuff that will take me from it for a few weeks.\n\nbecause of my tweak this pull request can no longer be automatically merged. i forked @rjd22's work so either i'll get a fix in from there or he can submit another pull request if he has a backwards compatible solution. \n. Um... that's embarrassing. Fixed. Thanks.\n. FWIW, the PHP lib classifies this UA as mobile because `$ua->family` matches a string in my [mobile browser array](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L175-178). This info is already available in `regexes.yaml` as [mobile_user_agent_families](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L836-867).\n. I think it's sort of confusing as well. There's a reason I haven't pushed the `isMobile` etc. back upstream myself. They seemed to be a departure from the original intent of ua-parser which is why I called my lib a pseudo-port (and it still is).\n- `isMobile` should be thought of as a mobile browser _not_ on a tablet. \n- `isMobileDevice` can be either a phone or tablet\n- `isTablet` is just terribly brittle. The really bad example is Windows Tablet which can return `true` for devices that, if we were just looking at them, we'd classify as netbooks. They just happen to have the right OS/under-the-hood-hardware combo to affect the UA. That and the screen dimensions open a whole other can of worms.\n\nAs for the examples cited:\n- Playbook is `true` for `isMobileDevice` and `isTablet` and `false` for `isMobile` so doesn't break the classification. \n- iPad (mini or not since the UA doesn't provide a distinction) is `true` for `isMobileDevice` and `isTablet`\n- iPod touch is `true` for `isMobileDevice` and `isMobile`\n\nFrankly, I was thinking of dropping `isTablet`. I think it gives false hope. `isMobileDevice` could then also be dropped and `isMobile` then simply refers to what I classify as mobile browsers. It can be expanded to be set to `true` for devices we know are mobile but can't assign a browser family too. The problem there though is that, in my set-up,  `isMobile` would be `true` for the Playbook because I list BlackBerry WebKit as a mobile browser which the Playbook is obviously using. To me that would be an appropriate classification. You may disagree :)\n\nFWIW, I haven't properly integrated the test suite. Doing that during the holiday weekend.\n\n// just because i can include it... :8ball: \n. Yeah. I'll get that fixed.\n. Thanks for the heads up. I'll get it fixed :)\n. the fix should be committed to the repo this holiday weekend. got it fixed. just trying to merge in a lot of other changes too.\n. fixed & pushed to the repo. thanks for reporting it.\n. Just to clarify... are you looking at moving these arrays into regexes.yaml? Seems like they could just be their own blocks and accessed like the others.\n- [mobile browsers](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L175)\n- [mobile OSes](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L217)\n- [mobile devices](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L326-328)\n- [tablets](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L338)\n\nThe only odd lines seem to be:\n- [check for android tablet](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L211)\n- [check for tablet](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L223)\n\nWhich to me are fragile/brittle and not sure they should stick around honestly. Did I miss anything else that might be specific to the PHP port that should get rolled into the overall YAML file?\n. Will do. :)\n. I don't think keeping this feature in the PHP version is appropriate. I think the PHP library, as written today, is too far away from the original goals of ua-parser. It was written for my needs and those needs don't really match-up with what I assume your and @elsigh's goals are for the project.\n\nIn order to move forward I think I'll rewrite the PHP lib. I can make it match-up exactly with the output of the other libraries. All of the boolean options can be moved into a separate codebase that I can host. I'll finish v1.5 that I'm working on now to address the pull requests and open issues. After that I'll just strip down the library and do a v2.0 that is a true ua-parser PHP lib.\n. fixed & pushed to the repo. thanks.\n. just a heads up that i'm working on merging this and the other pull request from @Synchro locally. thanks for the fixes. i'll leave all of the pull requests to my lib open until i push the final release.\n. This is fixed in the version that I'm working based on your pull requests. I'll leave this open until I push the changes.\n. fixed & pushed to the repo. thanks.\n. Looked into this pull request just to see if it could be cleared. The request needs fixing but it may be that the test also needs to be fixed. The basic question is should ua-parser list Android (even modified) as the OS for Kindles as this PR suggests or should we list it as a separate Kindle OS which is what the test currently looks for. \n\nOlder Kindles are based on Android 2.3. Latest Kindles are based on Android 4.\n. now nuked in my local version. i'll close this issue when i push all of my latest changes to the lib to the repo. thanks.\n. fixed & pushed to the repo. thanks.\n. How do you want the tests? Should I just add tests to the appropriate files in `test_resources/` and commit them?\n. I'll wait on this one to be resolved before cleaning up and adding tests for the BB10 UA. Not sure if I screwed something up.\n. ok, i'll clean up this merge and redo the pull request. sorry, tobie.\n. I believe these have been taken out already but this issue wasn't closed. On my phone so can't triple-check but wanted to help keep the clean up  moving :)\n\nOn Dec 29, 2012, at 7:06 AM, Tobie Langel notifications@github.com wrote:\n\n> @dmolsen can I go ahead and remove this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @selwin-\n\nFWIW, I've pulled out a lot of the `is*` code from the PHP lib for a new project, [ua-classifier](https://github.com/ua-classifier), that sort of mirrors the organization of `ua-parser`. I've been spending a lot of time trolling logs to find new UAs for `regexes.yaml` and hopefully can use that for the new project. Maybe you'll find the final YAML file useful for your project too.\n. FWIW, the PHP version, on my local comp, has a 10x speed improvement when using a JSON version of regexes.yaml. \n. The next edition of the PHP lib will be using a JSON version of regexes.yaml. The command line tool I have will fetch and convert the YAML from the repo. \n. What should be the expected results for Windows-related UAs? Pushing XP, Vista, 7, etc to the OS major works except in the case of Windows Phone 7. In that case should the major be 'Phone OS', the minor '7' and, in the case of 7.5, the patch '5'?\n\nThe following UA currently gets classified as Windows Phone OS:\nMozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; XBLWP7; ZuneWP7)\n\nThe following UA currently gets classified as Windows Phone OS with a major of 7 and a minor of 5.\nMozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; NOKIA; Lumia 900)\n\nI can put in a pull request for the fix once I know the direction that I should take. Or maybe I misunderstood the original issue. \n. We should also try to fit Windows 3.1 into the update as well. The specific version is unrecognized. I figure it's a spoof but I got this lovely UA in my logs this month:\n\n```\nNCSA_Mosaic/2.0 (Windows 3.1)\n```\n. I don't believe this project has \"child\" versions of the main YAML file in the individual libs. Or at least they shouldn't. \n. Interesting... the PHP lib returns it as a \"Generic Smartphone\" which, looking at the regexes, is correct. Maybe this is a library specific bug?\n. That stuff came out of my original build and I do case insensitive matching hence why it works with the PHP lib. In the case of MIDP I can add the uppercase version to the regex. I can review the other smartphone choices as well and see if I can get the correct case for them. I'll dig up test cases.\n. All of the search engine regexes will have to be reviewed for case sensitivity too. I should be able to use some of the PHP command line features with my work Apache log files to quickly narrow down those issues. We'll just have to accept that the feature phone regex will be hit or miss tho maybe that can also be addressed with some healthy log parsing as well.\n. This is related to #102. FWIW, what do you think the OS should be? I assume Android but just checking.\n. I'll try to get this addressed and put in a pull request. I think we need to review/fix the Kindle regexes in general.\n. By the way, this is related to issues #102 and #127 \n\n/cc @elsigh because github decided not to properly link you in the original issue\n. I have the tests and what not written for this. I won't be in a position to drop a pull request until Tuesday. \n\nOn Dec 29, 2012, at 6:53 AM, Tobie Langel notifications@github.com wrote:\n\n> Here's what I believe we need:\n> \n> Non Android OS:\n> \n> UA: NetFront \n> Device: Kindle\n> OS: Kindle OS\n> \n> Android OS:\n> \n> UA: Amazon Silk\n> Device: Kindle Fire\n> OS: Android OS\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Based on my work over the holiday break I feel pretty comfortable saying the following:\n- I can update the Generic Smartphone regexes based on what exists within `regexes.yaml` to date as well as some examples I've found trolling my logs\n- I can't update the Generic Feature Phone regexes. I don't have any good examples.\n- I can update the Search Bot regexes.\n\nShould we just drop the Feature Phone regex then? And should we move the search bot regexes up to `user_agent_parsers`? That's my fault for sticking it in the device parsers section when I didn't think my changes would ever be merged with a larger project.\n\nStill working on this.\n. I'll give those a spin. Only so much time to play against that substantial list though. Hopefully a few of those can be dropped simply because we're already matching their actual device listings.\n. Have at it :)\n\nOn Dec 29, 2012, at 7:07 AM, Tobie Langel notifications@github.com wrote:\n\n> @dmolsen can I go ahead with this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I'd like to see this. I'm not sure the current set-up of `regexes.yaml` can or should handle this though. For example, the primary regexes for this are:\n\n```\n- regex: 'SAMSUNG-([A-Za-z0-9\\-]+)'\n  device_replacement: 'Samsung $1'\n- regex: 'SAMSUNG\\; ([A-Za-z0-9\\-]+)'\n  device_replacement: 'Samsung $1'\n```\n\nNice and simple. Maybe we could have a separate YAML that allows for specific device to marketing name match-up. If someone needs it they can include it. If not... no extra overhead. The Galaxy S3 has, [according to Wikipedia at least](http://en.wikipedia.org/wiki/Samsung_Galaxy_S_III), 13 different model numbers for the same marketing name. The Samsung Galaxy S has ~20 different variants of model numbers and marketing names ([Wikipedia source](http://en.wikipedia.org/wiki/Samsung_Galaxy_S)). \n\nAgain, I'd really like to see it and at least some of it could be pulled with effort from sources like Wikipedia.\n\nDoes anyone have an intern that needs something to do? ;)\n. FWIW, this is the regex that's being tested by the failing test:\n\n```\n- regex: '(Silk-Accelerated=[a-z]{4,5})'\n  os_replacement: 'Android'\n```\n\nAnd this is the result I get for that UA locally in the PHP lib:\n\n```\nua->family: Amazon Silk\nua->major: 2\nua->minor: 2\nua->patch: \nua->toString: Amazon Silk 2.2\nua->toVersionString: 2.2\nos->family: Android\nos->major: \nos->minor: \nos->patch: \nos->patch_minor: \nos->toString: Android\nos->toVersionString: \ndevice->family: Kindle Fire HD\ntoFullString: Amazon Silk 2.2/Android\nuaOriginal: Mozilla/5.0 (Linux; U; en-us; KFTT Build/IML74K) AppleWebKit/535.19 (KHTML, like Gecko) Silk/2.2 Safari/535.19 Silk-Accelerated=true\n```\n\nSorry, not sure what I'm breaking.\n. Works for me. Yet another lesson learned. Sorry.\n. I don't get the error in PHP 5.3.19 or PHP 5.3.17. I'm running in strict mode so I would assume this error would fire. I also replicated your error reporting and didn't get it. Rather than having those public functions (`uaParser()`, `osParser()`, and `deviceParser`) end in an `r` I can just remove it. That will remove any naming issues/conflicts but keep a certain consistency.\n\nAnd I don't think strict errors shouldn't be firing on that version of PHP and your reporting level. Baffled but it's a relatively easy fix in case others might run into the same thing.\n\nThe fix should be in this evening.\n. @pmailer-\n\nThe feature will be making a comeback in a new project called `ua-classifier`. I just needed to clean up the ua-parser lib to match everyone else. You should be able to continue using the older version of the library for now just fine. I apologize for the big change.\n. So what you're looking at in the `ua-parser` repository currently is a different version than what testswarm is using. testswarm is using 1.x and the repo is 2.x. There is no JSON file in the ua-parser repo. The JSON file is built using the 2.x version of the PHP lib. \n\nI believe your issue is at line #69 of your version of `uaparser-cli.php`. Please remove the `@` before `file_get_contents()`. That should then throw an error for you. Also, please make sure `allow_url_fopen` is set to true in your PHP configuration.\n. Since you haven't chimed in on this I'm going to close this issue up. Feel free to open if you have further questions/issues.\n. fixity fixed\n. just wanted to let you know i've seen this. just haven't had a chance to merge it. looks like a lot of whitespace changes so i want to address that first. btw, if you have changes to `regexes.yaml` that might help everyone please feel free to do a pull request with tests.\n. While I think the ideal is that users contribute back I think the reality is that they patch and never contribute. I've heard this from a few devs. I'm not sure offering the option is any more encouragement to patch `regexes.yaml` than without the feature honestly. It's going to happen regardless.\n\nHell, keeping their patches separate but building a comparison tool might even help show folks that they can/should contribute regexes back.\n. Hand added this. Local git pull was being silly and not allowing me to merge your changes sans white space issues.\n. i'll get this added over the weekend.\n. Hand added this. Local git pull was being silly and not allowing me to merge your changes sans white space issues.\n. I think there needs be some discussion regarding this. I would argue that we should change the Wii browser to return Opera since that's what it really is. The Wii U should return NetFront NX because that's the real browser for it. Device should then return Wii U or Wii as appropriate. \n\nFor tests I have some written up for the Wii U but they match my interpretation of browser, OS (which I've put as 'Other'), and device for it. At least it's a start.\n\nWii info: http://console.maban.co.uk/device/wii.php\nWii U info: http://console.maban.co.uk/device/wiiu.php\nMy tests: https://github.com/dmolsen/ua-parser/compare/master...do-nintendo-wii-u\n. I'm not sure this is truly what the OS is called... \n\nhttp://wiiudaily.com/wii-u-operating-system/\n\nWant me to go with that? It's been difficult finding OS names for game systems. Also, before I put in a PR I'd like to suggest a different way of doing it. I have [24 branches](https://github.com/dmolsen/ua-parser/branches) at the moment with more UAs/tests that I need to add and they don't all merge nicely. I need to clean-up the concept a little bit today and then I'll put in an issue bout it.\n. @elsigh -\n\ni went through the old issues list last week and pulled out the ones we weren't properly matching. i hope to have them committed this weekend. i can go back and close them up like i've done in the past if you like.\n. this also address issue #158 \n. The existing test files don't appear to be in alphabetical order. I agree that would help assuming they were already ordered correctly.\n. Thanks to @tobie for handling my many pull requests so far. I just wanted to give you both an update about where I was with them. After these three PRs that are in the queue I still need to add tests and put in PRs for the following items. \n\nMost of the following have tests and I have UAs for all of these. I have seen these in production logs:\n- ~~Add: Huawei devices~~\n- ~~Add: ICE Browser~~\n- ~~Add: Power PC Mac OS~~\n- ~~Add: Openwave browser~~\n- ~~Add: QQ browser~~\n- ~~Add: Solaris~~\n- Add: Micromax devices\n- ~~Add: VRE (virtual runtime environment, a pseudo-os)~~\n- ~~Add: Phantom browser~~\n- ~~Add: WebTV~~\n- ~~Add: OneBrowser~~\n- ~~Add: iBrowser~~\n- Add: J2ME (for Opera UAs)\n- ~~Add: Baidu Desktop~~\n- Fix: Netscape 6\n- Fix: UP.browser\n- ~~Fix: webOS~~\n- ~~Fix: HTC devices~~\n- Fix: update the list of generic smartphones matches so their case is correct\n\nBased on the issues open in the original ua-parser repo I have to update the following:\n- Add: Fast browser\n- ~~Add: yandex browser~~\n- Add: Firefox Tablet\n- Fix: Mathon\n- Fix: Seamonkey version numbers\n\nBased on trolling around I've found the following that we should add (I have UAs from user-agent-string.info or their official sites):\n- Add: Doris browser\n- Add: Go Browser\n- Add: Xbox\n- Add: Nook\n- Add: Boxee\n- Add: Opera on HbbTV\n- Add: Skyfire browser\n- Add: NineSky browser\n- ~~Add: Firefox OS~~\n\nI still need to find Roku and SmartTV UAs.\n\nI also have a bunch of extraneous UAs broken down into groups but they don't need to be added. I wanted to open another issue about them:\n- W3C validators\n- Search Bots (which I will use to update the list we have)\n- Social Media Bots\n- RSS Readers\n- Google-specific UAs\n- Multimedia applications\n- Link Checkers\n- A few traditional desktop apps\n. Short of adding these all in one go and comparing perf I can't really say. Again, I wouldn't add the last list of options (the W3C validators, etc.). I think this sounds like a lot of additions but won't end up being that many. At the very least the majority are modern browsers.\n\nI think libs switching to JSON (if appropriate) and reorganizing/cleaning up the file will go a long way to really improving performance (see #162). Their are bots listed pretty high in the ua parse section, I'm sure their are UAs that can be combined into those longer patterns, and the devices are currently alphabetized (for the most part) so maybe those need to be moved around. I wanted to get stuff added first and then tackle that part.\n\nDefinitely agree with the concern though :) The NCSA Mosaic must have been a spoof in my production logs but it's still kind of fun to say `ua-parser` will recognize it even if it is a little overhead ;)\n. @elsigh you might also want to run these tests. i know the PHP lib doesn't support the chrome frame tests so I'd like to make sure I didn't bork anything with them when i alphabetized.\n. Can this PR be reviewed and merged if appropriate, please? Once it's merged I can then get moving again on getting the updated UA matches and tests pulled in as well.\n. @tobie \n\nthe files were built with a simple PHP script that took the originals, parsed the YAML, sorted on a key built out of a lowercased combination of family, major, minor, patch, and patch minor attributes as available and then kicked out new YAML files. this is why the comments and any data that had been specifically commented out is gone.\n\nobviously the UAs and attributes match up because it's passing tests. otherwise the data matches up:\n- test_device.yaml - 56 lines, 3.2K ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_device.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_device.yaml) )\n- additional_os_tests.yaml - 149 lines, 4.7-8K ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/additional_os_tests.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/additional_os_tests.yaml) )\n- test_user_agent_parser.yaml - 444 lines (if you account for commented out/extra lines in original) ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_user_agent_parser.yaml) )\n- test_user_agent_parser_os.yaml - 426 lines (if you account for commented out/extra lines in original) ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser_os.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_user_agent_parser_os.yaml) )\n\nthe firefox set of tests are just completely redone because the original is missing lines between the tests.\n\nanother simple PHP script confirms that each file has the exact same number of and same string matches for the UA tests between your repo's test files and my fork's test files.\n. Ok, I see the error. PHP lib cleans up underscores. Forgot about that. Should the result be `Amaze_4G` or `Amaze _4G` (that's a space)? The Travis error looks like the latter.\n. Bad match on NOKIA. Fixing it.\n. I don't think underscores have any real meaning. I would just treat it as part of a larger string for that attribute. As in this case `minor` is `2_7`. \"a,\" \"b,\" or \"pre\" have a little more meaning to me as a dev and I can see splitting them. Unfortunately it looks like `regexes.yaml` handles this issue in conflicting ways. I _think_ this is related to if their are any open attributes or not. Two good examples:\n\n```\n  - user_agent_string: 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.3a4pre) Gecko/20100404 SeaMonkey/2.1a1pre'\n    family: 'SeaMonkey'\n    major: '2'\n    minor: '1'\n    patch: 'a1pre'\n\n  - user_agent_string: 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.11pre) Gecko/20100508 SeaMonkey/2.0.6pre'\n    family: 'SeaMonkey'\n    major: '2'\n    minor: '0'\n    patch: '6pre'\n```\n\nThe former is pretty straightforward. The text at the end is split into `patch`. The latter is a little different. To me it would seem `patch` would just be `6` and the `pre` lost. But this example the `pre` is tacked on.\n\nSo should the standard be \"If you have an extra bit for text that obviously indicates some sort of alpha or beta state it should go into an open attribute if possible. If not it should be appended to the `patch` attribute.\"\n. If the overall spec is updated just let me know and I'll update the PHP version. I honestly haven't paid that much attention to the repo but I'm happy to keep the port in line with the JS & Python versions.\n. I'll implement the changes and I can have them done within a month of the final spec. That's a conservative estimate.\n. This is a Detector problem. Not ua-parser. Could have sworn someone submitted a patch for it in Detector but I'll double-check.\n. Do you want to take over the port? Serious question. There are spec changes on the horizon and these are a ton of changes. All for the good but I'd rather not be on the hook for managing the project in the future if I accept them.\n. I forgot to say thank you :) I'm traveling so I might a little slow in responding to the changes. I cloned your repo and ran into a dependency problem. I'll get it squared away on my end tomorrow. Sorry, not modern enough I guess ;)\n. @lstrojny no worries on the size. it was definitely needed. i'm behind the times. just let me do due diligence on my end and i'll be back mid-week or so. again, thanks.\n. @tobie -\n\nCan you please add @lstrojny as a contributor to the ua-parser project? This change is needed but I won't be able to maintain it. I figure @lstrojny's first action could be to accept his own PR. He's already [agreed to maintain it going forward](https://github.com/tobie/ua-parser/pull/308#issuecomment-28163131). You can then remove me as a contributor. Fun ride but I can't keep it moving forward. Thanks.\n. @AbuJunayd -\n\nMy ua-classifier project will not be released. While I initially didn't agree with @tobie's decision to remove those attributes I understood the decision better as time moved on. As I worked on it I realized that I wouldn't have time to keep it up. There's a reason commercial products exist in this space ;)\n\nI'll leave it to others to comment on the best solution. \n. guess i can't put in two pull requests at once...\n. i took the lazy way out but it looked like my stuff would overwhelm the main README. i can always edit it again.\n. done.\n. Francois-\n\nThanks for submitting the issue. I've updated regexes.yaml & quickly tested the change. Looks good. It also helped me catch an issue with identifying Android device names.\n. @elsigh never done it but it sounds like it might be well worth it. let me play around with the PHP stuff and see what i can get going. leaving this URL here for reference:\n\nhttp://about.travis-ci.org/docs/user/languages/php/\n. Looks like Opera Mini & Opera Mobile aren't following Google's standards for how to identify tablet-based vs. phone-based user-agent strings. I've updated the tablet check to take this into account tho tablet-based versions of these UA strings might be wonky. Need to find some more tests for it. Thanks for the ticket, Erik.\n. for the record, i liked the \"luv ya git\" comment :)\n. I'll get this fixed. Thanks.\n. The notice is fixed but I have a feeling that might not address your issue assuming you tried `php UAParser.php -get` and still got that notice. It could be that STDIN isn't working in your case. I'm closing the ticket because this issue is addressed. If you find it still doesn't work comment again and I'll re-open. Please include info on your version of PHP and OS. Thanks.\n. Ok, cool :)\n. thanks for fixing these :)\n. Rather than fix regexes.yaml I ended up fixing my PHP lib instead. This way if I forgot parens in the future it won't break again. Thanks much for letting us know about the issue and providing good details.\n. thanks for the fix :)\n. Have you grabbed the latest version of regexes.yaml? I know I fixed this bug a while back. The UA string you provided gets classified correctly as Polaris in my test. You can run your own test by visiting the following website:\n\nhttp://uaparser.dmolsen.com/\n\nI'm closing this issue for now. If you find that there is still an error please let me know. Have a good day.\n. This is a problem with a specific test in Modernizr. ua-parser appears to classify the browser correctly. For a longer explanation [check out my update](https://github.com/dmolsen/Detector/issues/10) on this issue opened on Detector's repo.\n. maybe we could pop the trident version into the build and revision numbers? e.g. IE 8 in compatibility mode would report IE 7.0 but you'd have major=>7, minor=>0, build=>4, revision=>0 so if someone needed to do a check on compat they could by looking at the build/revision numbers. btw, build & revision are what I call those in the php lib. \n. closing this one up. not a huge issue either way.\n. thanks for the fix :)\n. I have a feeling there's something else in the UA that's setting off that check. Can you hit http://uaparser.dmolsen.com for me and copy the results into a comment for this issue, please? Thanks.\n. Stupid question... Are you running IE9 on a tablet pc?\n\nThe \"Tablet PC 2.0\" string is setting off one of my checks that's really designed for Android tablets. That said, Windows seems to think that it's running on a tablet and if that's the case then having isMobileDevice set to true is actually appropriate. Interestingly enough there seems to be a case for knowing this detail. I'm curious how accurate this bit of data is though. \n\nIf you could also hit this with IE 9 mode & tell me the results I'd appreciate it.\n. For now I'm leaving the php lib unchanged. It's a bad match but I'm going to err on the side of most versions of Windows that are Tablet PC capable actually being tablets. It's a toss-up I think. The tablet attribute might had to drop completely anyway. Sorry.\n. NetFront is definitely the browser name. See the real product: http://gl.access-company.com/products/browser/browser/\n\nI confused the Vita and Nintendo products. The Vita is it OS. I'm not sure what the \"version number\" is for exactly. I'm not sure it necessarily tracks to a specific version of NetFront. \n\nI'll close this pull request since I effed it up obviously. Sorry 'bout that.\n. Just wanted to chime in to say I've seen the issue. I'm with @tobie in the sense that I'd hate to break compat but a) it's not the biggest outward change in the world and b) I can see the uses for unit testing (assuming @tobie's suggestion works just as well from a perf perspective). I'm going to try his suggestion just to see what happens.\n. in the short-term i made a fix to the existing lib so that the regexes file is only loaded once. that addresses the perf issue. i think @rjd22 is going in the right direction so i'll keep trying to work in his fixes. i played with this yesterday and found a solution that was backwards compatible but it throws a strict standards error if a dev is running in that mode. i'm going to keep playing around with it but i know i have other stuff that will take me from it for a few weeks.\n\nbecause of my tweak this pull request can no longer be automatically merged. i forked @rjd22's work so either i'll get a fix in from there or he can submit another pull request if he has a backwards compatible solution. \n. Um... that's embarrassing. Fixed. Thanks.\n. FWIW, the PHP lib classifies this UA as mobile because `$ua->family` matches a string in my [mobile browser array](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L175-178). This info is already available in `regexes.yaml` as [mobile_user_agent_families](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L836-867).\n. I think it's sort of confusing as well. There's a reason I haven't pushed the `isMobile` etc. back upstream myself. They seemed to be a departure from the original intent of ua-parser which is why I called my lib a pseudo-port (and it still is).\n- `isMobile` should be thought of as a mobile browser _not_ on a tablet. \n- `isMobileDevice` can be either a phone or tablet\n- `isTablet` is just terribly brittle. The really bad example is Windows Tablet which can return `true` for devices that, if we were just looking at them, we'd classify as netbooks. They just happen to have the right OS/under-the-hood-hardware combo to affect the UA. That and the screen dimensions open a whole other can of worms.\n\nAs for the examples cited:\n- Playbook is `true` for `isMobileDevice` and `isTablet` and `false` for `isMobile` so doesn't break the classification. \n- iPad (mini or not since the UA doesn't provide a distinction) is `true` for `isMobileDevice` and `isTablet`\n- iPod touch is `true` for `isMobileDevice` and `isMobile`\n\nFrankly, I was thinking of dropping `isTablet`. I think it gives false hope. `isMobileDevice` could then also be dropped and `isMobile` then simply refers to what I classify as mobile browsers. It can be expanded to be set to `true` for devices we know are mobile but can't assign a browser family too. The problem there though is that, in my set-up,  `isMobile` would be `true` for the Playbook because I list BlackBerry WebKit as a mobile browser which the Playbook is obviously using. To me that would be an appropriate classification. You may disagree :)\n\nFWIW, I haven't properly integrated the test suite. Doing that during the holiday weekend.\n\n// just because i can include it... :8ball: \n. Yeah. I'll get that fixed.\n. Thanks for the heads up. I'll get it fixed :)\n. the fix should be committed to the repo this holiday weekend. got it fixed. just trying to merge in a lot of other changes too.\n. fixed & pushed to the repo. thanks for reporting it.\n. Just to clarify... are you looking at moving these arrays into regexes.yaml? Seems like they could just be their own blocks and accessed like the others.\n- [mobile browsers](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L175)\n- [mobile OSes](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L217)\n- [mobile devices](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L326-328)\n- [tablets](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L338)\n\nThe only odd lines seem to be:\n- [check for android tablet](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L211)\n- [check for tablet](https://github.com/tobie/ua-parser/blob/master/php/UAParser.php#L223)\n\nWhich to me are fragile/brittle and not sure they should stick around honestly. Did I miss anything else that might be specific to the PHP port that should get rolled into the overall YAML file?\n. Will do. :)\n. I don't think keeping this feature in the PHP version is appropriate. I think the PHP library, as written today, is too far away from the original goals of ua-parser. It was written for my needs and those needs don't really match-up with what I assume your and @elsigh's goals are for the project.\n\nIn order to move forward I think I'll rewrite the PHP lib. I can make it match-up exactly with the output of the other libraries. All of the boolean options can be moved into a separate codebase that I can host. I'll finish v1.5 that I'm working on now to address the pull requests and open issues. After that I'll just strip down the library and do a v2.0 that is a true ua-parser PHP lib.\n. fixed & pushed to the repo. thanks.\n. just a heads up that i'm working on merging this and the other pull request from @Synchro locally. thanks for the fixes. i'll leave all of the pull requests to my lib open until i push the final release.\n. This is fixed in the version that I'm working based on your pull requests. I'll leave this open until I push the changes.\n. fixed & pushed to the repo. thanks.\n. Looked into this pull request just to see if it could be cleared. The request needs fixing but it may be that the test also needs to be fixed. The basic question is should ua-parser list Android (even modified) as the OS for Kindles as this PR suggests or should we list it as a separate Kindle OS which is what the test currently looks for. \n\nOlder Kindles are based on Android 2.3. Latest Kindles are based on Android 4.\n. now nuked in my local version. i'll close this issue when i push all of my latest changes to the lib to the repo. thanks.\n. fixed & pushed to the repo. thanks.\n. How do you want the tests? Should I just add tests to the appropriate files in `test_resources/` and commit them?\n. I'll wait on this one to be resolved before cleaning up and adding tests for the BB10 UA. Not sure if I screwed something up.\n. ok, i'll clean up this merge and redo the pull request. sorry, tobie.\n. I believe these have been taken out already but this issue wasn't closed. On my phone so can't triple-check but wanted to help keep the clean up  moving :)\n\nOn Dec 29, 2012, at 7:06 AM, Tobie Langel notifications@github.com wrote:\n\n> @dmolsen can I go ahead and remove this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @selwin-\n\nFWIW, I've pulled out a lot of the `is*` code from the PHP lib for a new project, [ua-classifier](https://github.com/ua-classifier), that sort of mirrors the organization of `ua-parser`. I've been spending a lot of time trolling logs to find new UAs for `regexes.yaml` and hopefully can use that for the new project. Maybe you'll find the final YAML file useful for your project too.\n. FWIW, the PHP version, on my local comp, has a 10x speed improvement when using a JSON version of regexes.yaml. \n. The next edition of the PHP lib will be using a JSON version of regexes.yaml. The command line tool I have will fetch and convert the YAML from the repo. \n. What should be the expected results for Windows-related UAs? Pushing XP, Vista, 7, etc to the OS major works except in the case of Windows Phone 7. In that case should the major be 'Phone OS', the minor '7' and, in the case of 7.5, the patch '5'?\n\nThe following UA currently gets classified as Windows Phone OS:\nMozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; XBLWP7; ZuneWP7)\n\nThe following UA currently gets classified as Windows Phone OS with a major of 7 and a minor of 5.\nMozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; NOKIA; Lumia 900)\n\nI can put in a pull request for the fix once I know the direction that I should take. Or maybe I misunderstood the original issue. \n. We should also try to fit Windows 3.1 into the update as well. The specific version is unrecognized. I figure it's a spoof but I got this lovely UA in my logs this month:\n\n```\nNCSA_Mosaic/2.0 (Windows 3.1)\n```\n. I don't believe this project has \"child\" versions of the main YAML file in the individual libs. Or at least they shouldn't. \n. Interesting... the PHP lib returns it as a \"Generic Smartphone\" which, looking at the regexes, is correct. Maybe this is a library specific bug?\n. That stuff came out of my original build and I do case insensitive matching hence why it works with the PHP lib. In the case of MIDP I can add the uppercase version to the regex. I can review the other smartphone choices as well and see if I can get the correct case for them. I'll dig up test cases.\n. All of the search engine regexes will have to be reviewed for case sensitivity too. I should be able to use some of the PHP command line features with my work Apache log files to quickly narrow down those issues. We'll just have to accept that the feature phone regex will be hit or miss tho maybe that can also be addressed with some healthy log parsing as well.\n. This is related to #102. FWIW, what do you think the OS should be? I assume Android but just checking.\n. I'll try to get this addressed and put in a pull request. I think we need to review/fix the Kindle regexes in general.\n. By the way, this is related to issues #102 and #127 \n\n/cc @elsigh because github decided not to properly link you in the original issue\n. I have the tests and what not written for this. I won't be in a position to drop a pull request until Tuesday. \n\nOn Dec 29, 2012, at 6:53 AM, Tobie Langel notifications@github.com wrote:\n\n> Here's what I believe we need:\n> \n> Non Android OS:\n> \n> UA: NetFront \n> Device: Kindle\n> OS: Kindle OS\n> \n> Android OS:\n> \n> UA: Amazon Silk\n> Device: Kindle Fire\n> OS: Android OS\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Based on my work over the holiday break I feel pretty comfortable saying the following:\n- I can update the Generic Smartphone regexes based on what exists within `regexes.yaml` to date as well as some examples I've found trolling my logs\n- I can't update the Generic Feature Phone regexes. I don't have any good examples.\n- I can update the Search Bot regexes.\n\nShould we just drop the Feature Phone regex then? And should we move the search bot regexes up to `user_agent_parsers`? That's my fault for sticking it in the device parsers section when I didn't think my changes would ever be merged with a larger project.\n\nStill working on this.\n. I'll give those a spin. Only so much time to play against that substantial list though. Hopefully a few of those can be dropped simply because we're already matching their actual device listings.\n. Have at it :)\n\nOn Dec 29, 2012, at 7:07 AM, Tobie Langel notifications@github.com wrote:\n\n> @dmolsen can I go ahead with this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I'd like to see this. I'm not sure the current set-up of `regexes.yaml` can or should handle this though. For example, the primary regexes for this are:\n\n```\n- regex: 'SAMSUNG-([A-Za-z0-9\\-]+)'\n  device_replacement: 'Samsung $1'\n- regex: 'SAMSUNG\\; ([A-Za-z0-9\\-]+)'\n  device_replacement: 'Samsung $1'\n```\n\nNice and simple. Maybe we could have a separate YAML that allows for specific device to marketing name match-up. If someone needs it they can include it. If not... no extra overhead. The Galaxy S3 has, [according to Wikipedia at least](http://en.wikipedia.org/wiki/Samsung_Galaxy_S_III), 13 different model numbers for the same marketing name. The Samsung Galaxy S has ~20 different variants of model numbers and marketing names ([Wikipedia source](http://en.wikipedia.org/wiki/Samsung_Galaxy_S)). \n\nAgain, I'd really like to see it and at least some of it could be pulled with effort from sources like Wikipedia.\n\nDoes anyone have an intern that needs something to do? ;)\n. FWIW, this is the regex that's being tested by the failing test:\n\n```\n- regex: '(Silk-Accelerated=[a-z]{4,5})'\n  os_replacement: 'Android'\n```\n\nAnd this is the result I get for that UA locally in the PHP lib:\n\n```\nua->family: Amazon Silk\nua->major: 2\nua->minor: 2\nua->patch: \nua->toString: Amazon Silk 2.2\nua->toVersionString: 2.2\nos->family: Android\nos->major: \nos->minor: \nos->patch: \nos->patch_minor: \nos->toString: Android\nos->toVersionString: \ndevice->family: Kindle Fire HD\ntoFullString: Amazon Silk 2.2/Android\nuaOriginal: Mozilla/5.0 (Linux; U; en-us; KFTT Build/IML74K) AppleWebKit/535.19 (KHTML, like Gecko) Silk/2.2 Safari/535.19 Silk-Accelerated=true\n```\n\nSorry, not sure what I'm breaking.\n. Works for me. Yet another lesson learned. Sorry.\n. I don't get the error in PHP 5.3.19 or PHP 5.3.17. I'm running in strict mode so I would assume this error would fire. I also replicated your error reporting and didn't get it. Rather than having those public functions (`uaParser()`, `osParser()`, and `deviceParser`) end in an `r` I can just remove it. That will remove any naming issues/conflicts but keep a certain consistency.\n\nAnd I don't think strict errors shouldn't be firing on that version of PHP and your reporting level. Baffled but it's a relatively easy fix in case others might run into the same thing.\n\nThe fix should be in this evening.\n. @pmailer-\n\nThe feature will be making a comeback in a new project called `ua-classifier`. I just needed to clean up the ua-parser lib to match everyone else. You should be able to continue using the older version of the library for now just fine. I apologize for the big change.\n. So what you're looking at in the `ua-parser` repository currently is a different version than what testswarm is using. testswarm is using 1.x and the repo is 2.x. There is no JSON file in the ua-parser repo. The JSON file is built using the 2.x version of the PHP lib. \n\nI believe your issue is at line #69 of your version of `uaparser-cli.php`. Please remove the `@` before `file_get_contents()`. That should then throw an error for you. Also, please make sure `allow_url_fopen` is set to true in your PHP configuration.\n. Since you haven't chimed in on this I'm going to close this issue up. Feel free to open if you have further questions/issues.\n. fixity fixed\n. just wanted to let you know i've seen this. just haven't had a chance to merge it. looks like a lot of whitespace changes so i want to address that first. btw, if you have changes to `regexes.yaml` that might help everyone please feel free to do a pull request with tests.\n. While I think the ideal is that users contribute back I think the reality is that they patch and never contribute. I've heard this from a few devs. I'm not sure offering the option is any more encouragement to patch `regexes.yaml` than without the feature honestly. It's going to happen regardless.\n\nHell, keeping their patches separate but building a comparison tool might even help show folks that they can/should contribute regexes back.\n. Hand added this. Local git pull was being silly and not allowing me to merge your changes sans white space issues.\n. i'll get this added over the weekend.\n. Hand added this. Local git pull was being silly and not allowing me to merge your changes sans white space issues.\n. I think there needs be some discussion regarding this. I would argue that we should change the Wii browser to return Opera since that's what it really is. The Wii U should return NetFront NX because that's the real browser for it. Device should then return Wii U or Wii as appropriate. \n\nFor tests I have some written up for the Wii U but they match my interpretation of browser, OS (which I've put as 'Other'), and device for it. At least it's a start.\n\nWii info: http://console.maban.co.uk/device/wii.php\nWii U info: http://console.maban.co.uk/device/wiiu.php\nMy tests: https://github.com/dmolsen/ua-parser/compare/master...do-nintendo-wii-u\n. I'm not sure this is truly what the OS is called... \n\nhttp://wiiudaily.com/wii-u-operating-system/\n\nWant me to go with that? It's been difficult finding OS names for game systems. Also, before I put in a PR I'd like to suggest a different way of doing it. I have [24 branches](https://github.com/dmolsen/ua-parser/branches) at the moment with more UAs/tests that I need to add and they don't all merge nicely. I need to clean-up the concept a little bit today and then I'll put in an issue bout it.\n. @elsigh -\n\ni went through the old issues list last week and pulled out the ones we weren't properly matching. i hope to have them committed this weekend. i can go back and close them up like i've done in the past if you like.\n. this also address issue #158 \n. The existing test files don't appear to be in alphabetical order. I agree that would help assuming they were already ordered correctly.\n. Thanks to @tobie for handling my many pull requests so far. I just wanted to give you both an update about where I was with them. After these three PRs that are in the queue I still need to add tests and put in PRs for the following items. \n\nMost of the following have tests and I have UAs for all of these. I have seen these in production logs:\n- ~~Add: Huawei devices~~\n- ~~Add: ICE Browser~~\n- ~~Add: Power PC Mac OS~~\n- ~~Add: Openwave browser~~\n- ~~Add: QQ browser~~\n- ~~Add: Solaris~~\n- Add: Micromax devices\n- ~~Add: VRE (virtual runtime environment, a pseudo-os)~~\n- ~~Add: Phantom browser~~\n- ~~Add: WebTV~~\n- ~~Add: OneBrowser~~\n- ~~Add: iBrowser~~\n- Add: J2ME (for Opera UAs)\n- ~~Add: Baidu Desktop~~\n- Fix: Netscape 6\n- Fix: UP.browser\n- ~~Fix: webOS~~\n- ~~Fix: HTC devices~~\n- Fix: update the list of generic smartphones matches so their case is correct\n\nBased on the issues open in the original ua-parser repo I have to update the following:\n- Add: Fast browser\n- ~~Add: yandex browser~~\n- Add: Firefox Tablet\n- Fix: Mathon\n- Fix: Seamonkey version numbers\n\nBased on trolling around I've found the following that we should add (I have UAs from user-agent-string.info or their official sites):\n- Add: Doris browser\n- Add: Go Browser\n- Add: Xbox\n- Add: Nook\n- Add: Boxee\n- Add: Opera on HbbTV\n- Add: Skyfire browser\n- Add: NineSky browser\n- ~~Add: Firefox OS~~\n\nI still need to find Roku and SmartTV UAs.\n\nI also have a bunch of extraneous UAs broken down into groups but they don't need to be added. I wanted to open another issue about them:\n- W3C validators\n- Search Bots (which I will use to update the list we have)\n- Social Media Bots\n- RSS Readers\n- Google-specific UAs\n- Multimedia applications\n- Link Checkers\n- A few traditional desktop apps\n. Short of adding these all in one go and comparing perf I can't really say. Again, I wouldn't add the last list of options (the W3C validators, etc.). I think this sounds like a lot of additions but won't end up being that many. At the very least the majority are modern browsers.\n\nI think libs switching to JSON (if appropriate) and reorganizing/cleaning up the file will go a long way to really improving performance (see #162). Their are bots listed pretty high in the ua parse section, I'm sure their are UAs that can be combined into those longer patterns, and the devices are currently alphabetized (for the most part) so maybe those need to be moved around. I wanted to get stuff added first and then tackle that part.\n\nDefinitely agree with the concern though :) The NCSA Mosaic must have been a spoof in my production logs but it's still kind of fun to say `ua-parser` will recognize it even if it is a little overhead ;)\n. @elsigh you might also want to run these tests. i know the PHP lib doesn't support the chrome frame tests so I'd like to make sure I didn't bork anything with them when i alphabetized.\n. Can this PR be reviewed and merged if appropriate, please? Once it's merged I can then get moving again on getting the updated UA matches and tests pulled in as well.\n. @tobie \n\nthe files were built with a simple PHP script that took the originals, parsed the YAML, sorted on a key built out of a lowercased combination of family, major, minor, patch, and patch minor attributes as available and then kicked out new YAML files. this is why the comments and any data that had been specifically commented out is gone.\n\nobviously the UAs and attributes match up because it's passing tests. otherwise the data matches up:\n- test_device.yaml - 56 lines, 3.2K ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_device.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_device.yaml) )\n- additional_os_tests.yaml - 149 lines, 4.7-8K ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/additional_os_tests.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/additional_os_tests.yaml) )\n- test_user_agent_parser.yaml - 444 lines (if you account for commented out/extra lines in original) ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_user_agent_parser.yaml) )\n- test_user_agent_parser_os.yaml - 426 lines (if you account for commented out/extra lines in original) ( [original](https://github.com/tobie/ua-parser/blob/master/test_resources/test_user_agent_parser_os.yaml) | [mine](https://github.com/dmolsen/ua-parser/blob/1eea653dcef6d51d88639d9c09f7fb55f2681545/test_resources/test_user_agent_parser_os.yaml) )\n\nthe firefox set of tests are just completely redone because the original is missing lines between the tests.\n\nanother simple PHP script confirms that each file has the exact same number of and same string matches for the UA tests between your repo's test files and my fork's test files.\n. Ok, I see the error. PHP lib cleans up underscores. Forgot about that. Should the result be `Amaze_4G` or `Amaze _4G` (that's a space)? The Travis error looks like the latter.\n. Bad match on NOKIA. Fixing it.\n. I don't think underscores have any real meaning. I would just treat it as part of a larger string for that attribute. As in this case `minor` is `2_7`. \"a,\" \"b,\" or \"pre\" have a little more meaning to me as a dev and I can see splitting them. Unfortunately it looks like `regexes.yaml` handles this issue in conflicting ways. I _think_ this is related to if their are any open attributes or not. Two good examples:\n\n```\n  - user_agent_string: 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.3a4pre) Gecko/20100404 SeaMonkey/2.1a1pre'\n    family: 'SeaMonkey'\n    major: '2'\n    minor: '1'\n    patch: 'a1pre'\n\n  - user_agent_string: 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.11pre) Gecko/20100508 SeaMonkey/2.0.6pre'\n    family: 'SeaMonkey'\n    major: '2'\n    minor: '0'\n    patch: '6pre'\n```\n\nThe former is pretty straightforward. The text at the end is split into `patch`. The latter is a little different. To me it would seem `patch` would just be `6` and the `pre` lost. But this example the `pre` is tacked on.\n\nSo should the standard be \"If you have an extra bit for text that obviously indicates some sort of alpha or beta state it should go into an open attribute if possible. If not it should be appended to the `patch` attribute.\"\n. If the overall spec is updated just let me know and I'll update the PHP version. I honestly haven't paid that much attention to the repo but I'm happy to keep the port in line with the JS & Python versions.\n. I'll implement the changes and I can have them done within a month of the final spec. That's a conservative estimate.\n. This is a Detector problem. Not ua-parser. Could have sworn someone submitted a patch for it in Detector but I'll double-check.\n. Do you want to take over the port? Serious question. There are spec changes on the horizon and these are a ton of changes. All for the good but I'd rather not be on the hook for managing the project in the future if I accept them.\n. I forgot to say thank you :) I'm traveling so I might a little slow in responding to the changes. I cloned your repo and ran into a dependency problem. I'll get it squared away on my end tomorrow. Sorry, not modern enough I guess ;)\n. @lstrojny no worries on the size. it was definitely needed. i'm behind the times. just let me do due diligence on my end and i'll be back mid-week or so. again, thanks.\n. @tobie -\n\nCan you please add @lstrojny as a contributor to the ua-parser project? This change is needed but I won't be able to maintain it. I figure @lstrojny's first action could be to accept his own PR. He's already [agreed to maintain it going forward](https://github.com/tobie/ua-parser/pull/308#issuecomment-28163131). You can then remove me as a contributor. Fun ride but I can't keep it moving forward. Thanks.\n. @AbuJunayd -\n\nMy ua-classifier project will not be released. While I initially didn't agree with @tobie's decision to remove those attributes I understood the decision better as time moved on. As I worked on it I realized that I wouldn't have time to keep it up. There's a reason commercial products exist in this space ;)\n\nI'll leave it to others to comment on the best solution. \n. ",
    "toolmantim": "And I'll swing that into here too: https://github.com/toolmantim/user_agent_parser\n. Awesome, thanks Lindsey! I've released v0.1.2 of the user_agent_parser Ruby gem with this Chrome Frame support.\n. It's true, you can only do one language per Travis project. That's one of the reasons why I split the Ruby gem off into it's own separate project.\n. @tobie, from: http://about.travis-ci.org/docs/user/getting-started/\n\n> Step one: Sign in\n> \n> To get started with Travis CI, sign in through Github OAuth. Go to Travis CI and follow the Sign In link at the top.\n> \n> Github will ask you for granting read- and write access. Travis CI needs write access for setting up service hooks for your repositories when you request it, but it won't touch anything else.\n\nThere might be a way to only give it read access, you'd have to hit them up at irc://irc.freenode.net#travis to find out\u2026\n. A few reasons:\n- it's the Right Way to do it - small, composable libraries (and repos) beat large ones with undefined dependencies every time.\n- Travis won't allow multiple-languages per repo\n- I want it to be simple for people to be able to fork and contribute w/o worrying about breaking all the languages\n. We've been using the git submodule method of embedding the patterns yaml in https://github.com/toolmantim/user_agent_parser with great success, with Travis testing support too. It simply lives under `vendor`, and [the build process](https://github.com/toolmantim/user_agent_parser/blob/master/user_agent_parser.gemspec#L12) only copies the required YAML file, not the entire ua-parser repository. I'd imagine the other libraries could/would do something similar?\n\nIf the org gets set up I'd be happy to move the ruby gem there (e.g. http://github.com/ua-parser/ruby)\n. Quite often the Ruby library has needed to be updated/refactored to handle YAML updates (just as with any type of software dependency). Being able to lock certain versions of the ruby gem to certain versions of the YAML is quite handy, and if there's ever a need for a minor patch release (for security etc) it's trivial.\n\nUnless you want to start branching the YAML repository to ensure you don't make any backwards incompatible changes whilst still updating the patterns, I'd prefer to take on the job of worrying about these things so the user of the gem doesn't have to (but to still [providing the option](https://github.com/toolmantim/user_agent_parser#the-pattern-database) if they want to use a newer, untested YAML file)\n. Also, we live in a world of easy forking, so it's very easy for someone to fork the Ruby library, update the git submodule, and then use that instead of the official gem. Travis will even test their gem against the pattern library for them.\n\nI can't see any reason why someone would want the Ruby version to be the main ua-parser repository. Maybe someone does, but no-one's said anything yet.\n\nSo that's the perspective from my side.\n\nI'm also completely happy to keep the current setup.\n. I'm really not sure of the solution\u2026 at least a link in the Readme isn't a bad first step though. \n. @commenthol I wasn't aware of these changes, but they won't break the Ruby gem. It has to be explicitly updated which I'll do once this is merged in.\n. @commenthol no problem! The Ruby gem gets periodically updated, and it's own API version bumped if there's major changes in the underlying ua-parser database structure. No sweat.\n. Obviously I'm in big support of this :)\n\nFor the Ruby gem we just update [the git submodule](https://github.com/toolmantim/user_agent_parser/tree/master/vendor) to the commit SHA we want (usually latest master), update the Ruby code to match (ensuring all the tests pass), and release a new version of the Ruby gem (which bundles all files, including the regex.yaml, within it).\n\nThis gives us testing, versioning, dependency management, etc. All the good things.\n\nAlso happy to move the ruby gem into the official org. \n. Another option to consider as a minimum path to getting things moving:\n1. Mark the current repo as legacy (and keep around for any existing libraries/tools referencing it)\n2. Create a Github org\n3. Move the patterns and Javascript into it's own repo (or perhaps two separate repos if you want to go the whole hog)\n4. Leave all other code to rot in the legacy repo, letting their maintainers move them into new repos as they wish.\n\nEach repo owner will have to figure out how to reference the central YAML database as they wish, whether via copying/bundling, git submodules, or some other way. I wouldn't assume a web service to serve up the patterns are needed though.\n\nAnd then, after the move, you can figure out how to create new types of test harnesses and verification tools to use third party lib development and testing.\n. @commenthol @Ironholds @tobie happy to update the Ruby gem as necessary. Keep me in the loop.\n. And I'll swing that into here too: https://github.com/toolmantim/user_agent_parser\n. Awesome, thanks Lindsey! I've released v0.1.2 of the user_agent_parser Ruby gem with this Chrome Frame support.\n. It's true, you can only do one language per Travis project. That's one of the reasons why I split the Ruby gem off into it's own separate project.\n. @tobie, from: http://about.travis-ci.org/docs/user/getting-started/\n\n> Step one: Sign in\n> \n> To get started with Travis CI, sign in through Github OAuth. Go to Travis CI and follow the Sign In link at the top.\n> \n> Github will ask you for granting read- and write access. Travis CI needs write access for setting up service hooks for your repositories when you request it, but it won't touch anything else.\n\nThere might be a way to only give it read access, you'd have to hit them up at irc://irc.freenode.net#travis to find out\u2026\n. A few reasons:\n- it's the Right Way to do it - small, composable libraries (and repos) beat large ones with undefined dependencies every time.\n- Travis won't allow multiple-languages per repo\n- I want it to be simple for people to be able to fork and contribute w/o worrying about breaking all the languages\n. We've been using the git submodule method of embedding the patterns yaml in https://github.com/toolmantim/user_agent_parser with great success, with Travis testing support too. It simply lives under `vendor`, and [the build process](https://github.com/toolmantim/user_agent_parser/blob/master/user_agent_parser.gemspec#L12) only copies the required YAML file, not the entire ua-parser repository. I'd imagine the other libraries could/would do something similar?\n\nIf the org gets set up I'd be happy to move the ruby gem there (e.g. http://github.com/ua-parser/ruby)\n. Quite often the Ruby library has needed to be updated/refactored to handle YAML updates (just as with any type of software dependency). Being able to lock certain versions of the ruby gem to certain versions of the YAML is quite handy, and if there's ever a need for a minor patch release (for security etc) it's trivial.\n\nUnless you want to start branching the YAML repository to ensure you don't make any backwards incompatible changes whilst still updating the patterns, I'd prefer to take on the job of worrying about these things so the user of the gem doesn't have to (but to still [providing the option](https://github.com/toolmantim/user_agent_parser#the-pattern-database) if they want to use a newer, untested YAML file)\n. Also, we live in a world of easy forking, so it's very easy for someone to fork the Ruby library, update the git submodule, and then use that instead of the official gem. Travis will even test their gem against the pattern library for them.\n\nI can't see any reason why someone would want the Ruby version to be the main ua-parser repository. Maybe someone does, but no-one's said anything yet.\n\nSo that's the perspective from my side.\n\nI'm also completely happy to keep the current setup.\n. I'm really not sure of the solution\u2026 at least a link in the Readme isn't a bad first step though. \n. @commenthol I wasn't aware of these changes, but they won't break the Ruby gem. It has to be explicitly updated which I'll do once this is merged in.\n. @commenthol no problem! The Ruby gem gets periodically updated, and it's own API version bumped if there's major changes in the underlying ua-parser database structure. No sweat.\n. Obviously I'm in big support of this :)\n\nFor the Ruby gem we just update [the git submodule](https://github.com/toolmantim/user_agent_parser/tree/master/vendor) to the commit SHA we want (usually latest master), update the Ruby code to match (ensuring all the tests pass), and release a new version of the Ruby gem (which bundles all files, including the regex.yaml, within it).\n\nThis gives us testing, versioning, dependency management, etc. All the good things.\n\nAlso happy to move the ruby gem into the official org. \n. Another option to consider as a minimum path to getting things moving:\n1. Mark the current repo as legacy (and keep around for any existing libraries/tools referencing it)\n2. Create a Github org\n3. Move the patterns and Javascript into it's own repo (or perhaps two separate repos if you want to go the whole hog)\n4. Leave all other code to rot in the legacy repo, letting their maintainers move them into new repos as they wish.\n\nEach repo owner will have to figure out how to reference the central YAML database as they wish, whether via copying/bundling, git submodules, or some other way. I wouldn't assume a web service to serve up the patterns are needed though.\n\nAnd then, after the move, you can figure out how to create new types of test harnesses and verification tools to use third party lib development and testing.\n. @commenthol @Ironholds @tobie happy to update the Ruby gem as necessary. Keep me in the loop.\n. ",
    "LeoColomb": "It would be better if you convert this repo to organization, _seriously_!\nAll reasons evoked by @toolmantim are good:  \n\n> it's the Right Way to do it - small, composable libraries (and repos) beat large ones with undefined dependencies    \n\nIf I work on a PHP project, it\u2019s a pain to systematically remove or bypass other libraries:\n- It may corrupt the project\n- The repo will not appear like an only PHP one\n\n> I want it to be simple for people to be able to fork and contribute w/o worrying about breaking all the languages  \n\nIt\u2019s true. There are lots of commits in each folders, and they can break some pull requests, or make forkers confused.  \n\n---\n\nI add these:  \n-  It\u2019s not really possible to import with submodules because of first point.\n-  All members could follow activities on their libraries more simply.\n-  If you turn it on organization, you will be able to create a website, like [H5BP Site](http://h5bp.github.com/), and why not a tool to download a single library with the YAML file included.\n\nYou have said you haven\u2019t the time to do this. Personally, I'm ready to help in this action, if you want and if you decide to, and create the website :-) \n\nSorry for my bad English...\n. It would be better if you convert this repo to organization, _seriously_!\nAll reasons evoked by @toolmantim are good:  \n\n> it's the Right Way to do it - small, composable libraries (and repos) beat large ones with undefined dependencies    \n\nIf I work on a PHP project, it\u2019s a pain to systematically remove or bypass other libraries:\n- It may corrupt the project\n- The repo will not appear like an only PHP one\n\n> I want it to be simple for people to be able to fork and contribute w/o worrying about breaking all the languages  \n\nIt\u2019s true. There are lots of commits in each folders, and they can break some pull requests, or make forkers confused.  \n\n---\n\nI add these:  \n-  It\u2019s not really possible to import with submodules because of first point.\n-  All members could follow activities on their libraries more simply.\n-  If you turn it on organization, you will be able to create a website, like [H5BP Site](http://h5bp.github.com/), and why not a tool to download a single library with the YAML file included.\n\nYou have said you haven\u2019t the time to do this. Personally, I'm ready to help in this action, if you want and if you decide to, and create the website :-) \n\nSorry for my bad English...\n. ",
    "michael-grunder": "No that fixes the issue for me.  It was happening because `isset($argv) == true`, but `isset($argv[1]) == false`\n\nThanks for the fix! :)\n. No that fixes the issue for me.  It was happening because `isset($argv) == true`, but `isset($argv[1]) == false`\n\nThanks for the fix! :)\n. ",
    "ghost": "I'm not sure, I actually haven't had any experience porting between the two; I'll do my best to keep backwards-compatibility, and we'll see how it goes.\n. I think backwards-compatibility might not work out; Unicode handling seems too different to write a single piece of code that works both ways.\n\nSo I'm going to do what [PEP 3000](http://www.python.org/dev/peps/pep-3000/#compatibility-and-transition) recommends, and adjust anything necessary until the code works well after a simple conversion with the 2to3 tool.\n. FYI, I'm not actually going to be doing this because I solved my problem in a different way :(  Sorry!\n. Hi,\n\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko)\nChrome/23.0.1271.95 Safari/537.11 results in a OS version being null.\n\nRegards\n\nOn Wed, Dec 12, 2012 at 12:00 PM, Tobie Langel notifications@github.comwrote:\n\n> Could you provide example user agent strings where you're observing this\n> problem, please?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/120#issuecomment-11282984.\n. Windows XP and 7 are actual versions. Do you you think you can include them?\n. `/^Mozilla.*MSIE.*MSOffice 12/si` and `/^Mozilla.*MSIE.*MSOffice 14/si` seems to be the regex for Microsoft Outlook 2007 and Microsoft 2010 respectively.\n\nI am not sure for the rest though\n. I starting using it today with node.js, and for IE11 i got the same problem. I installed by npm and receive this when use with IE11: Other from family and navigator, and nothing from version. \nmy UA string: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\n\nwith chrome, firefox and opera is ok.\n\nwhen update regexes.yaml manualy, get from github and put irt inside the folder ua-parser, things work correctly.\n\nI think the node package on npm should be update.\n. I'm not sure, I actually haven't had any experience porting between the two; I'll do my best to keep backwards-compatibility, and we'll see how it goes.\n. I think backwards-compatibility might not work out; Unicode handling seems too different to write a single piece of code that works both ways.\n\nSo I'm going to do what [PEP 3000](http://www.python.org/dev/peps/pep-3000/#compatibility-and-transition) recommends, and adjust anything necessary until the code works well after a simple conversion with the 2to3 tool.\n. FYI, I'm not actually going to be doing this because I solved my problem in a different way :(  Sorry!\n. Hi,\n\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko)\nChrome/23.0.1271.95 Safari/537.11 results in a OS version being null.\n\nRegards\n\nOn Wed, Dec 12, 2012 at 12:00 PM, Tobie Langel notifications@github.comwrote:\n\n> Could you provide example user agent strings where you're observing this\n> problem, please?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/120#issuecomment-11282984.\n. Windows XP and 7 are actual versions. Do you you think you can include them?\n. `/^Mozilla.*MSIE.*MSOffice 12/si` and `/^Mozilla.*MSIE.*MSOffice 14/si` seems to be the regex for Microsoft Outlook 2007 and Microsoft 2010 respectively.\n\nI am not sure for the rest though\n. I starting using it today with node.js, and for IE11 i got the same problem. I installed by npm and receive this when use with IE11: Other from family and navigator, and nothing from version. \nmy UA string: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\n\nwith chrome, firefox and opera is ok.\n\nwhen update regexes.yaml manualy, get from github and put irt inside the folder ua-parser, things work correctly.\n\nI think the node package on npm should be update.\n. ",
    "sjiang": "I've updated with apache license 2.0 and assigned copyright, as well as a top-level 'Client' result from parse.\n\nLet me know if anything's still missing.\n. There's an example in the README.md in the java directory.  Do you prefer to have the example in the main README?\n. ping?\n. Re: the yaml reference, see https://github.com/tobie/ua-parser/pull/39 :-)\n. I don't use the device parser.  Shall I remove the is_mobile logic from java?\n. Thanks!\n. @nielsbasjes sorry for the delay in reviewing this.  Comments:\n\nExcellent idea in having a cache, it should definitely help with performance.\nInstead of creating a separate UDF for each field, could you have 3 UDFs (ParseUserAgent, ParseOS, ParseDevice) with outputSchema that returns tuples with named fields for the subcomponents?\n. The patch doesn't apply cleanly anymore, can you update it?\n. I've published this to the twitter maven repo:\n\n``` xml\n    <repository>\n      <id>maven-twttr</id>\n      <name>Twitter Public Maven Repo</name>\n      <url>http://maven.twttr.com</url>\n    </repository>\n```\n\ndependency:\n\n``` xml\n    <dependency>\n      <groupId>ua_parser</groupId>\n      <artifactId>ua-parser</artifactId>\n      <version>1.2.2</version>\n    </dependency>\n```\n. removed in a9e2980bfa052a2a6584044fa679b6ea22efa53e\n. It's standard practice to leave the version as -SNAPSHOT for non-release builds.  I'll publish a current version of the jar (#233)\n. created #267 for UDF consolidation\n. Fixed [here](https://github.com/tobie/ua-parser/commit/98e2e1bbc6e8bcd8aac9bd66f74220b2e1bfc8dd), thanks for the report!\n. LGTM thanks for the patch!\n. I've updated with apache license 2.0 and assigned copyright, as well as a top-level 'Client' result from parse.\n\nLet me know if anything's still missing.\n. There's an example in the README.md in the java directory.  Do you prefer to have the example in the main README?\n. ping?\n. Re: the yaml reference, see https://github.com/tobie/ua-parser/pull/39 :-)\n. I don't use the device parser.  Shall I remove the is_mobile logic from java?\n. Thanks!\n. @nielsbasjes sorry for the delay in reviewing this.  Comments:\n\nExcellent idea in having a cache, it should definitely help with performance.\nInstead of creating a separate UDF for each field, could you have 3 UDFs (ParseUserAgent, ParseOS, ParseDevice) with outputSchema that returns tuples with named fields for the subcomponents?\n. The patch doesn't apply cleanly anymore, can you update it?\n. I've published this to the twitter maven repo:\n\n``` xml\n    <repository>\n      <id>maven-twttr</id>\n      <name>Twitter Public Maven Repo</name>\n      <url>http://maven.twttr.com</url>\n    </repository>\n```\n\ndependency:\n\n``` xml\n    <dependency>\n      <groupId>ua_parser</groupId>\n      <artifactId>ua-parser</artifactId>\n      <version>1.2.2</version>\n    </dependency>\n```\n. removed in a9e2980bfa052a2a6584044fa679b6ea22efa53e\n. It's standard practice to leave the version as -SNAPSHOT for non-release builds.  I'll publish a current version of the jar (#233)\n. created #267 for UDF consolidation\n. Fixed [here](https://github.com/tobie/ua-parser/commit/98e2e1bbc6e8bcd8aac9bd66f74220b2e1bfc8dd), thanks for the report!\n. LGTM thanks for the patch!\n. ",
    "Kotsu": "Doesn't look like this change made it to the main project code (or maybe it was accidentally overwritten)?\n. Doesn't look like this change made it to the main project code (or maybe it was accidentally overwritten)?\n. ",
    "ozataman": "Sorry it's taking a while; quite busy these days. I'll get to it (soon) when I have some downtime. \n. It is actually using a symlink to the central regex file, which has to be there for installation via cabal to work. This is necessary so that we can distribute a cabal package (de-facto Haskell distribution standard) to Hackage (de-facto Haskell open source repo), but is also necessary even if you were to use the github version via cabal.\n. Folks,\n\nMy apologies for being out of touch for a while. While I have not had the chance to examine the spec in great detail (even a general read was very helpful), I can say that I will be happy to port the Haskell implementation over once the dust has settled. It should not take more than a few hours of dedicated work, so it will purely be about finding some time to take care of it.\n\nOn a separate note - @commenthol thank you very much for the great work and taking the time to write a spec. I am happy to see the very nice device/brand capabilities in the new version. \n\nMay I ask where we stand with the transition?\n. Hi Tobie,\n\nThanks a lot for putting this together. \n\nIt certainly sounds like quite a bit of potential work, but I particularly like the API idea for latest version of the regexes file. It has been somewhat of a pain with the Haskell port that I've had to periodically upload new versions of the package to Haskell's packages site just to include in it the latest changes to the regexes file.\n\nOne potential red flag for me is that semver implementations can quickly get complex, yet we need something like it so that lagging ports don't break due to changes to regexes file, as @elsigh mentioned.\n\nPerhaps a very simple thing to do would be to create a github repo with a semver-like folder structure, like so:\n\n```\n...\n/regexes/2/0/3/regexes.yaml\n/regexes/2/0/4/regexes.yaml\n```\n\nAnd then each port can implement a simple routine to get the latest version it thinks it can live with. This would also reduce complexity significantly in terms of hosting. I can already hear people yelling \"Grah! ua-parser repo is down!!\" if we go with a hosted solution.\n\nOz\n. Thanks @gregwebs, I've actually been meaning to do a version of this for a while now. It's particularly useful for binary deployments. I'll confirm and merge when I'm in front of the computer.\n. Duplicate of #412. I added you to contributors Greg; thanks!\n. Hey @basvandijk, thanks for these changes. They pretty much all look good to me. The file-embed change has been on my mind for months now and @gregwebs has another pull request implementing it. I'll likely merge yours though as you have other improvements here. \n\nThe only downside to this is that you'd have to recompile to get the latest regexes file, which hasn't been a big deal in practice and is kind of the case already when using the one in the cabal file.\n\nThere has been talk about distributing the yaml file from a central web resource and have implementations download it dynamically. If that happens, we will have to modify this further to implement some kind of local cashing. \n\nEither way, LGTM. Happy to hear it's being useful to you guys at Better!\n. Merged and released. Thanks guys.\n. Sorry it's taking a while; quite busy these days. I'll get to it (soon) when I have some downtime. \n. It is actually using a symlink to the central regex file, which has to be there for installation via cabal to work. This is necessary so that we can distribute a cabal package (de-facto Haskell distribution standard) to Hackage (de-facto Haskell open source repo), but is also necessary even if you were to use the github version via cabal.\n. Folks,\n\nMy apologies for being out of touch for a while. While I have not had the chance to examine the spec in great detail (even a general read was very helpful), I can say that I will be happy to port the Haskell implementation over once the dust has settled. It should not take more than a few hours of dedicated work, so it will purely be about finding some time to take care of it.\n\nOn a separate note - @commenthol thank you very much for the great work and taking the time to write a spec. I am happy to see the very nice device/brand capabilities in the new version. \n\nMay I ask where we stand with the transition?\n. Hi Tobie,\n\nThanks a lot for putting this together. \n\nIt certainly sounds like quite a bit of potential work, but I particularly like the API idea for latest version of the regexes file. It has been somewhat of a pain with the Haskell port that I've had to periodically upload new versions of the package to Haskell's packages site just to include in it the latest changes to the regexes file.\n\nOne potential red flag for me is that semver implementations can quickly get complex, yet we need something like it so that lagging ports don't break due to changes to regexes file, as @elsigh mentioned.\n\nPerhaps a very simple thing to do would be to create a github repo with a semver-like folder structure, like so:\n\n```\n...\n/regexes/2/0/3/regexes.yaml\n/regexes/2/0/4/regexes.yaml\n```\n\nAnd then each port can implement a simple routine to get the latest version it thinks it can live with. This would also reduce complexity significantly in terms of hosting. I can already hear people yelling \"Grah! ua-parser repo is down!!\" if we go with a hosted solution.\n\nOz\n. Thanks @gregwebs, I've actually been meaning to do a version of this for a while now. It's particularly useful for binary deployments. I'll confirm and merge when I'm in front of the computer.\n. Duplicate of #412. I added you to contributors Greg; thanks!\n. Hey @basvandijk, thanks for these changes. They pretty much all look good to me. The file-embed change has been on my mind for months now and @gregwebs has another pull request implementing it. I'll likely merge yours though as you have other improvements here. \n\nThe only downside to this is that you'd have to recompile to get the latest regexes file, which hasn't been a big deal in practice and is kind of the case already when using the one in the cabal file.\n\nThere has been talk about distributing the yaml file from a central web resource and have implementations download it dynamically. If that happens, we will have to modify this further to implement some kind of local cashing. \n\nEither way, LGTM. Happy to hear it's being useful to you guys at Better!\n. Merged and released. Thanks guys.\n. ",
    "utzc": "Sorry, this is line I meant to refer to, not the one above:\n\nhttps://github.com/tobie/ua-parser/blob/master/regexes.yaml#L528\n. Sorry, this is line I meant to refer to, not the one above:\n\nhttps://github.com/tobie/ua-parser/blob/master/regexes.yaml#L528\n. ",
    "matteoantoci": "Sure, I used IE 9.0.8112.16421 64-bit and IE8 mode:\n\nisMobileDevice: 1\nisMobile: \nisSpider: \nisTablet: 1\nisComputer: \nmajor: 8\nminor: 0\nbrowser: IE\nversion: 8.0\nbrowserFull: IE 8.0\nisUIWebview: \nosMajor: \nosMinor: \nos: Windows 7\nosVersion: \nosFull: Windows 7 \nfull: IE 8.0/Windows 7 \nuaOriginal: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Win64; x64; Trident/4.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E; NP06; Tablet PC 2.0)\n. I'm using an asus U44S, don't know if it could help.. \nAnyway, here you are:\n\nisMobileDevice: \nisMobile: \nisSpider: \nisTablet: \nisComputer: 1\nmajor: 9\nminor: 0\nbrowser: IE\nversion: 9.0\nbrowserFull: IE 9.0\nisUIWebview: \nosMajor: \nosMinor: \nos: Windows 7\nosVersion: \nosFull: Windows 7 \nfull: IE 9.0/Windows 7 \nuaOriginal: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; NP06)\n. Sure, I used IE 9.0.8112.16421 64-bit and IE8 mode:\n\nisMobileDevice: 1\nisMobile: \nisSpider: \nisTablet: 1\nisComputer: \nmajor: 8\nminor: 0\nbrowser: IE\nversion: 8.0\nbrowserFull: IE 8.0\nisUIWebview: \nosMajor: \nosMinor: \nos: Windows 7\nosVersion: \nosFull: Windows 7 \nfull: IE 8.0/Windows 7 \nuaOriginal: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Win64; x64; Trident/4.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E; NP06; Tablet PC 2.0)\n. I'm using an asus U44S, don't know if it could help.. \nAnyway, here you are:\n\nisMobileDevice: \nisMobile: \nisSpider: \nisTablet: \nisComputer: 1\nmajor: 9\nminor: 0\nbrowser: IE\nversion: 9.0\nbrowserFull: IE 9.0\nisUIWebview: \nosMajor: \nosMinor: \nos: Windows 7\nosVersion: \nosFull: Windows 7 \nfull: IE 9.0/Windows 7 \nuaOriginal: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; NP06)\n. ",
    "shripadk": "Oh I forgot to add os.major, os.minor. Will do so now.\n. I agree with your points except for the bitwise operator trick which is arguably more performant. But this is moot if we are not going to be parsing out integers in the first place.\n\nBut, regarding #5, there is, I think, a problem with parsing out version numbers properly. The problem lies in regexes.yaml in which most of the regular expressions use `\\d+` (match 1 or more digits) for version matching. So the version number is returned as a string but stripped off the other non-digit suffixes/prefixes (a,b,pre etc). We have to first make changes to all the regexes in regexes.yaml. Its nothing to do with parseInt really.\n. Okay there are a few regexes in regexes.yaml which include parsing out prefixes (Firefox Namoroka/Minefield etc). So what you do propose? Is there a benefit in keeping it as string, apart from comparison between versions? If it needs to be around for comparison, should this feature be added to the module itself or should be taken care of by the user at the application level?\n. My D port uses integers for versions (don't know about other ports. haven't read the code yet). Its trivial to rewrite to use strings. I vote for having both. It would facilitate simple comparisons at least (`semver` can be implemented at application level). If we should have both, then we need the `.major`, `.minor` and `.patch` to be strings and `.major.toInt`, `.minor.toInt`, and `.patch.toInt` to just parse out the integer. Do you have a better API in mind?\n. @closealert True, I missed out on documenting `device` proprerty. Will do so. Thanks. Also, `device` should be returning a string because the regexes in `regexes.yaml` has only a `device_replacement` field (no major/minor/patch). So I'm pretty sure all the other ports return only a string.\n\n@tobie Can you tell me what to include (or not include) so I can push the changes again?\n. I have replied to your comments. Most of the issues you have raised relate to whether `major`, `minor`, `patch` need to return strings or integers. I think if we can come to a consensus on that, I can make the required changes and push it into this PR itself. The other issues you raised will be fixed immediately. Thanks for the review :)\n. @closealert Thanks will be fixed :)\n. @tobie For backwards compatibility we can continue returning `major`, `minor`, `patch` as strings. We can define a new  property 'number' on the `String` object with a getter that would return an integer version of the string. Example:\n\n```\nObject.defineProperty(String.prototype, \"number\", {\n   get: function() {\n      return ~~parseInt(this);\n   }\n});\n\nvar u = ua.parse('Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3');\n\nconsole.log(u.major); // returns \"5\"\nconsole.log(u.major.number) // returns 5\n```\n\nAFAIK, returning a integer version of `major`, `minor`, `patch` would be mostly useful for version comparisons and not for display. So I don't suppose any other API change would be necessary (ex: `toFullString/toVersionString`).\n. True. I can't think of any other way. Every other way would make it verbose. The choice is either verbosity or bad practice :)\n. @closealert  I have made changes to `device` property and also added attributes `majorInt`,`minorInt`,`patchInt`. Have also documented this. Please do review it. :)\n. @tobie , @closealert sure will do ASAP :)\n. I don't know how the YAML parser comes into picture here (what has the YAML parser got to do with regexes in the yaml file?). My reasoning is based on the results (be it either directly testing in Node REPL or loaded from the yaml file via the JS ua-parser implementation). Honestly I haven't tested all other regexes in the yaml file to see if they work or not (nor have i gone through them in detail), but I can assure you that it doesn't work in the case of rekonq user-agent string. If you have doubts, you can try it yourself. :)\n. Weird. I have tried this on my mac, ubuntu VM and also ec2 instances and none of them work. :( i'm going to re-install node and try again.\n. Oh I forgot to add os.major, os.minor. Will do so now.\n. I agree with your points except for the bitwise operator trick which is arguably more performant. But this is moot if we are not going to be parsing out integers in the first place.\n\nBut, regarding #5, there is, I think, a problem with parsing out version numbers properly. The problem lies in regexes.yaml in which most of the regular expressions use `\\d+` (match 1 or more digits) for version matching. So the version number is returned as a string but stripped off the other non-digit suffixes/prefixes (a,b,pre etc). We have to first make changes to all the regexes in regexes.yaml. Its nothing to do with parseInt really.\n. Okay there are a few regexes in regexes.yaml which include parsing out prefixes (Firefox Namoroka/Minefield etc). So what you do propose? Is there a benefit in keeping it as string, apart from comparison between versions? If it needs to be around for comparison, should this feature be added to the module itself or should be taken care of by the user at the application level?\n. My D port uses integers for versions (don't know about other ports. haven't read the code yet). Its trivial to rewrite to use strings. I vote for having both. It would facilitate simple comparisons at least (`semver` can be implemented at application level). If we should have both, then we need the `.major`, `.minor` and `.patch` to be strings and `.major.toInt`, `.minor.toInt`, and `.patch.toInt` to just parse out the integer. Do you have a better API in mind?\n. @closealert True, I missed out on documenting `device` proprerty. Will do so. Thanks. Also, `device` should be returning a string because the regexes in `regexes.yaml` has only a `device_replacement` field (no major/minor/patch). So I'm pretty sure all the other ports return only a string.\n\n@tobie Can you tell me what to include (or not include) so I can push the changes again?\n. I have replied to your comments. Most of the issues you have raised relate to whether `major`, `minor`, `patch` need to return strings or integers. I think if we can come to a consensus on that, I can make the required changes and push it into this PR itself. The other issues you raised will be fixed immediately. Thanks for the review :)\n. @closealert Thanks will be fixed :)\n. @tobie For backwards compatibility we can continue returning `major`, `minor`, `patch` as strings. We can define a new  property 'number' on the `String` object with a getter that would return an integer version of the string. Example:\n\n```\nObject.defineProperty(String.prototype, \"number\", {\n   get: function() {\n      return ~~parseInt(this);\n   }\n});\n\nvar u = ua.parse('Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3');\n\nconsole.log(u.major); // returns \"5\"\nconsole.log(u.major.number) // returns 5\n```\n\nAFAIK, returning a integer version of `major`, `minor`, `patch` would be mostly useful for version comparisons and not for display. So I don't suppose any other API change would be necessary (ex: `toFullString/toVersionString`).\n. True. I can't think of any other way. Every other way would make it verbose. The choice is either verbosity or bad practice :)\n. @closealert  I have made changes to `device` property and also added attributes `majorInt`,`minorInt`,`patchInt`. Have also documented this. Please do review it. :)\n. @tobie , @closealert sure will do ASAP :)\n. I don't know how the YAML parser comes into picture here (what has the YAML parser got to do with regexes in the yaml file?). My reasoning is based on the results (be it either directly testing in Node REPL or loaded from the yaml file via the JS ua-parser implementation). Honestly I haven't tested all other regexes in the yaml file to see if they work or not (nor have i gone through them in detail), but I can assure you that it doesn't work in the case of rekonq user-agent string. If you have doubts, you can try it yourself. :)\n. Weird. I have tried this on my mac, ubuntu VM and also ec2 instances and none of them work. :( i'm going to re-install node and try again.\n. ",
    "closealert": "I'm in need of the `device` property in node as well and noticed this PR has been open for 2 months now. @shripadk, You haven't documented the `device` prop in your PR but from what I can see now it only returns a string? @tobie Wouldn't it be preferable to have a similar output format for all languages?\n. @shripadk The device property is returned as Object with isMobile and isSpider inside in other languages. For example, java:\n\n``` java\n  System.out.println(c.device.family);    // => \"iPhone\"\n  System.out.println(c.device.isMobile);  // => true\n  System.out.println(c.device.isSpider);  // => false\n```\n. I would suggest like @tobie to split this one up:\n1. Changes in `regexes.yaml`.\n2. Improved `device` property.\n3. The addition of the attributes `majorInt` and `minorInt` (or something like that) to the `UserAgent` object.\n. @shripadk The changes look good but I can still see tobie's point considering the fact that there are a lot of lines in there not directly related to this fix. (for example the expansion of the UserAgent function). If you look at the original file (https://github.com/tobie/ua-parser/blob/master/js/index.js) then there are simply too many changes to merge. @tobie, close this one up and then @shripadk can create three new PR's - one for each feature.\n. Had an error - whoopsie..\n. I'm in need of the `device` property in node as well and noticed this PR has been open for 2 months now. @shripadk, You haven't documented the `device` prop in your PR but from what I can see now it only returns a string? @tobie Wouldn't it be preferable to have a similar output format for all languages?\n. @shripadk The device property is returned as Object with isMobile and isSpider inside in other languages. For example, java:\n\n``` java\n  System.out.println(c.device.family);    // => \"iPhone\"\n  System.out.println(c.device.isMobile);  // => true\n  System.out.println(c.device.isSpider);  // => false\n```\n. I would suggest like @tobie to split this one up:\n1. Changes in `regexes.yaml`.\n2. Improved `device` property.\n3. The addition of the attributes `majorInt` and `minorInt` (or something like that) to the `UserAgent` object.\n. @shripadk The changes look good but I can still see tobie's point considering the fact that there are a lot of lines in there not directly related to this fix. (for example the expansion of the UserAgent function). If you look at the original file (https://github.com/tobie/ua-parser/blob/master/js/index.js) then there are simply too many changes to merge. @tobie, close this one up and then @shripadk can create three new PR's - one for each feature.\n. Had an error - whoopsie..\n. ",
    "icodeforlove": "In the past day i have ran into about four sites using the node.js version wrong:\n\ncurl -H \"User-Agent: \" http://icanhazuseragent.com/\n\nit's an uncommon scenario where the user-agent is not passed through but it is possible, this could be fixed on either end. also in some scenarios i was able to crash the node server.\n. thats fine, theres just quite a few websites making this mistake.\n. In the past day i have ran into about four sites using the node.js version wrong:\n\ncurl -H \"User-Agent: \" http://icanhazuseragent.com/\n\nit's an uncommon scenario where the user-agent is not passed through but it is possible, this could be fixed on either end. also in some scenarios i was able to crash the node server.\n. thats fine, theres just quite a few websites making this mistake.\n. ",
    "rjd22": "@tobie No sadly it can't be done. Static functions are associated with the class but not a instance of the class. The problem with this is that you can't use constructors and destructors with this setup.\n\nAnother problem is that static classes are hard to inject or test. The whole reason I changed it was that I could work with unittesting.\n. @tobie I was thinking the same but that would require the class be both static and normal. I'm not sure it this is a directions we want to go since the library was never supposed to be static since it's using statics for the wrong purposes.\n\nMaking it non-static will made sure the class is used correctly and makes it more extendable and testable. Even if we would implement the factory pattern it would only dirty the code.\n. I will try to split the files in 2. A normal class and a static for backwards compatibility. That way there should be no strict standards errors,\n. @tobie No sadly it can't be done. Static functions are associated with the class but not a instance of the class. The problem with this is that you can't use constructors and destructors with this setup.\n\nAnother problem is that static classes are hard to inject or test. The whole reason I changed it was that I could work with unittesting.\n. @tobie I was thinking the same but that would require the class be both static and normal. I'm not sure it this is a directions we want to go since the library was never supposed to be static since it's using statics for the wrong purposes.\n\nMaking it non-static will made sure the class is used correctly and makes it more extendable and testable. Even if we would implement the factory pattern it would only dirty the code.\n. I will try to split the files in 2. A normal class and a static for backwards compatibility. That way there should be no strict standards errors,\n. ",
    "stephenwalz": "#64 will fix the yaml\nI'm not sure why some of regex's without parentheses cause the python parser to fail with the no such group error, but others work fine. Someone who knows php well enough to see how #30 was resolved will have to propose the python fix to handle these cases.\n. #64 will fix the yaml\nI'm not sure why some of regex's without parentheses cause the python parser to fail with the no such group error, but others work fine. Someone who knows php well enough to see how #30 was resolved will have to propose the python fix to handle these cases.\n. ",
    "bcantoni": "I have a BB10 \"Dev Alpha B\" phone from the BlackBerry Jam conference. The user agent on this one is:\n\nMozilla/5.0 (BB10; Touch) AppleWebKit/537.3+ (KHTML, like Gecko) Version/10.0.9.388 Mobile Safari/537.3+\n. I have a BB10 \"Dev Alpha B\" phone from the BlackBerry Jam conference. The user agent on this one is:\n\nMozilla/5.0 (BB10; Touch) AppleWebKit/537.3+ (KHTML, like Gecko) Version/10.0.9.388 Mobile Safari/537.3+\n. ",
    "harryovers": "yes i do intend to maintain the C# version, i have some small changes to make but it is something i am going to be using so it will be kept up to date\n. yes i do intend to maintain the C# version, i have some small changes to make but it is something i am going to be using so it will be kept up to date\n. ",
    "galmeida": "I was about to write a c# parser too =)\n\nthank you harryovers\n. I'm no c# expert but I'll try\n. @tobie I did it, now referencing main regexes.yaml, but I introduced one drawback: \n\nI don't have windows machine at home, so I used monoDevelop and the .csproject files was modified my MD, Visual Studio should have no problem with that, but I just can't test it right now.\n\nBesides that I also removed an empty unit test project that was broken in monoDevelop.\n\nshould I submit a pull request?\n. @tobie sorry, i forgot to remove the file\n\n@Krinkle great suggestion, done\n. I intentionally didn't add binaries to git. I never do.\n\ndo you want it added or you're asking for binaries to make them available for downloading?\n\n## \n\ngalmeida\n\nEm 30/11/2012, \u00e0s 09:25, Tobie Langel notifications@github.com escreveu:\n\n> Thanks. What about all the binaries?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @tobie I finally had the chance to test on Visual Studio, and somehow it's reporting some \"invalid\" regexes, I'm working on this right now, please don't accept this pull request yet.\n. @tobie, @enemaerke implementation looks far better than mine, please ignore this pull request.\n\nI can contribute some code latter, after his pull is merged\n\nI also can contribute code to the Java port (my primary language)\n. I'm already playing with @enemaerke's code. He's definitely a better c# coder than me. =)\n\nI just would like to add a better looking ToString() and ToVersionString()\n. @enemaerke already have xxxToString here, I can send it to you. \n\nabout adding commits to a PR I just need to commit, new commits are automatically added to PR\n. @enemaerke, about the regex, does your questing have anything to do with _?\n. @enemaerke I had the same \\_ issue.\n\nabout the xxxToString() methods, take a look here [UserAgent.cs](https://github.com/galmeida/ua-parser/blob/master/csharp/UAParser/UserAgent.cs) and here [OS.cs](https://github.com/galmeida/ua-parser/blob/master/csharp/UAParser/OS.cs), If you prefer, I can send a pull request to your repo\n. @tobie C# regex parser crash on patterns containing \\_, I had to replace \\_ with _ in runtime, @enemaerke did the same.\n. @enemaerke \n1. Java port is broken, the guy who first wrote the c# implementation did almost a literal translation from java, so it's broken too, I've fixed the java code in my local repo based on the php port. But @tobie said \"We're moving away from the is_mobile booleans.\", so I didn't mind to PR it. see #112\n2. look #111 and #110\n. I was about to write a c# parser too =)\n\nthank you harryovers\n. I'm no c# expert but I'll try\n. @tobie I did it, now referencing main regexes.yaml, but I introduced one drawback: \n\nI don't have windows machine at home, so I used monoDevelop and the .csproject files was modified my MD, Visual Studio should have no problem with that, but I just can't test it right now.\n\nBesides that I also removed an empty unit test project that was broken in monoDevelop.\n\nshould I submit a pull request?\n. @tobie sorry, i forgot to remove the file\n\n@Krinkle great suggestion, done\n. I intentionally didn't add binaries to git. I never do.\n\ndo you want it added or you're asking for binaries to make them available for downloading?\n\n## \n\ngalmeida\n\nEm 30/11/2012, \u00e0s 09:25, Tobie Langel notifications@github.com escreveu:\n\n> Thanks. What about all the binaries?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @tobie I finally had the chance to test on Visual Studio, and somehow it's reporting some \"invalid\" regexes, I'm working on this right now, please don't accept this pull request yet.\n. @tobie, @enemaerke implementation looks far better than mine, please ignore this pull request.\n\nI can contribute some code latter, after his pull is merged\n\nI also can contribute code to the Java port (my primary language)\n. I'm already playing with @enemaerke's code. He's definitely a better c# coder than me. =)\n\nI just would like to add a better looking ToString() and ToVersionString()\n. @enemaerke already have xxxToString here, I can send it to you. \n\nabout adding commits to a PR I just need to commit, new commits are automatically added to PR\n. @enemaerke, about the regex, does your questing have anything to do with _?\n. @enemaerke I had the same \\_ issue.\n\nabout the xxxToString() methods, take a look here [UserAgent.cs](https://github.com/galmeida/ua-parser/blob/master/csharp/UAParser/UserAgent.cs) and here [OS.cs](https://github.com/galmeida/ua-parser/blob/master/csharp/UAParser/OS.cs), If you prefer, I can send a pull request to your repo\n. @tobie C# regex parser crash on patterns containing \\_, I had to replace \\_ with _ in runtime, @enemaerke did the same.\n. @enemaerke \n1. Java port is broken, the guy who first wrote the c# implementation did almost a literal translation from java, so it's broken too, I've fixed the java code in my local repo based on the php port. But @tobie said \"We're moving away from the is_mobile booleans.\", so I didn't mind to PR it. see #112\n2. look #111 and #110\n. ",
    "peili": "I personally would recommend to convert all input to strings. BOTS usually don't tell their user-agent. So if you convert all input to strings, i think it is more handable and userfriendly for implementing ua-parser in your own applications. Because you don't need to take care of those bots and extra check if user-agent is set.\n. I personally would recommend to convert all input to strings. BOTS usually don't tell their user-agent. So if you convert all input to strings, i think it is more handable and userfriendly for implementing ua-parser in your own applications. Because you don't need to take care of those bots and extra check if user-agent is set.\n. ",
    "carver": "I am unfamiliar with the structure of the parsers, so I think it would take me a couple hours to dive in and grok the project.  I can't do that at work, but maybe some night this week, or this weekend.  A tip on what file holds the regex that I should be modifying would save me some time, and be appreciated. :)\n. Hah, thanks.  That was much simpler than I was expecting. :)  I'll take a look.\n. I am unfamiliar with the structure of the parsers, so I think it would take me a couple hours to dive in and grok the project.  I can't do that at work, but maybe some night this week, or this weekend.  A tip on what file holds the regex that I should be modifying would save me some time, and be appreciated. :)\n. Hah, thanks.  That was much simpler than I was expecting. :)  I'll take a look.\n. ",
    "darcyclarke": "If you want a client-side compatible JS version I released one a few months ago: https://github.com/darcyclarke/Detect.js\n\nNoticed some things have changed/been added/fixed on the `node.js` version of this repo (originally was missing a fair number of things and had some weird js). \n\n**Detect.js**'s API is pretty much spot on to what has been done here for **ua-parser** (but will change slightly in v2). Going forward, I'll be hanging `.name` and `.version` strings off of the individual **os**, **browser** and **device** objects (instead of having to call `.toString()` or `.toVersionString()`). This may be something you guys will want to adopt.\n\nAs well, I'm working on a node based build tool that will only include the regex profiles you want to keep the file size down (may also make a quick one page custom build page, similar to Modernizr's, available). Check out this branch if you're interested in that and the refactor: https://github.com/darcyclarke/Detect.js/tree/develop \n\nOverall, I may merge all this work back into the _ua-parser_ project once I'm happy where it's at. I don't see any glaring differences anymore so there's not much point in duplicating efforts. Expect a PR in the next month or so with a few feature PRs. For now, if you're looking for a client-side version with the same, and a few more, capabilities, you can use Detect.\n. Detect.js includes things like **device** `type` and `manufacturer` on top of the forked regexes. If we can get those into the current YAML I'd be happy to incorporate a build step that pulls down and creates a JSON object from this centralized document of regex profiles. \n. If you want a client-side compatible JS version I released one a few months ago: https://github.com/darcyclarke/Detect.js\n\nNoticed some things have changed/been added/fixed on the `node.js` version of this repo (originally was missing a fair number of things and had some weird js). \n\n**Detect.js**'s API is pretty much spot on to what has been done here for **ua-parser** (but will change slightly in v2). Going forward, I'll be hanging `.name` and `.version` strings off of the individual **os**, **browser** and **device** objects (instead of having to call `.toString()` or `.toVersionString()`). This may be something you guys will want to adopt.\n\nAs well, I'm working on a node based build tool that will only include the regex profiles you want to keep the file size down (may also make a quick one page custom build page, similar to Modernizr's, available). Check out this branch if you're interested in that and the refactor: https://github.com/darcyclarke/Detect.js/tree/develop \n\nOverall, I may merge all this work back into the _ua-parser_ project once I'm happy where it's at. I don't see any glaring differences anymore so there's not much point in duplicating efforts. Expect a PR in the next month or so with a few feature PRs. For now, if you're looking for a client-side version with the same, and a few more, capabilities, you can use Detect.\n. Detect.js includes things like **device** `type` and `manufacturer` on top of the forked regexes. If we can get those into the current YAML I'd be happy to incorporate a build step that pulls down and creates a JSON object from this centralized document of regex profiles. \n. ",
    "gsklee": "Just FYI - I've settled with https://github.com/faisalman/ua-parser-js and it gets the job done =)\n. Just FYI - I've settled with https://github.com/faisalman/ua-parser-js and it gets the job done =)\n. ",
    "mibamur": "I have this trouble too.\nwhere is patch? :)\n. I have this trouble too.\nwhere is patch? :)\n. ",
    "johndodev": "Okay thanks !\n. Hum, first \"contribution\" on Git, testing button... ok ;)\n\nEdit : I let it open until prod, for new users.\n. Okay thanks !\n. Hum, first \"contribution\" on Git, testing button... ok ;)\n\nEdit : I let it open until prod, for new users.\n. ",
    "selwin": "I'm getting a similar error with @davidmontgom \n\n```\nPython 2.7.2 (default, Jun 20 2012, 16:23:33) \n[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/selwin/.virtualenvs/test/src/ua-parser/py/ua_parser/user_agent_parser.py\", line 399, in <module>\n    yamlFile = open(yamlPath)\nIOError: [Errno 2] No such file or directory: '/Users/selwin/.virtualenvs/test/src/ua-parser/py/ua_parser/../regexes.yaml'\n```\n\nI tried installing both the latest commit and latest stable release using `pip` with the commands:\n\n```\npip install -e git://github.com/tobie/ua-parser.git@v0.2.4#egg=ua-parser\npip install -e git://github.com/tobie/ua-parser.git#egg=ua-parser\n```\n. Just FYI, I need an easy way to identify whether visits from mobile phones/tablet so I decided to build a small library (https://github.com/selwin/python-user-agents) on top of ua-parser.\n\nIt's written in python and does not have any language agnostic component but please have a look at it. If there's anything that you're interested in bringing into this project, I'd be more than happy to help.\n. @elsigh Yes, I already have a PyPI account so I'd be more than happy to do so. But that would make me the package owner on PyPI, instead of one this library's maintainers. Is that ok?\n. @elsigh alright, I'll wait for a new stable version to be tagged before putting this up on PyPI, as 0.2.4 has faulty `regexes.yaml` Python import path that we fixed just yesterday. \n. @elsigh by build step, do you mean as part of `setup.py install`? \n\nWhat about maintaining a `regexes.json` in addition to the YAML file in the main repo? This can be compiled right before we tag a release. I'd imagine other languages will also enjoy similar performance improvements from this change.\n. Hmm, can we get some help from other maintainers to measure the parsing time? I can try to do it this weekend but it woukd take me quite some time as I'm not familiar with other languages.\n. Hmm, can we get some help from other maintainers to measure this? I can try to do it over the weekend but it would take me quite some time as I'm not familiar with other languages.\n. Hmm, can we get other maintainers to help measure this? I can try to do it over the weekend but it would take me some time as I'm not familiar with other languages.\n. Sorry if it seemed like I was spamming, Github didn't show my messages in the issue thread so I tried reposting. But when I scrolled up, I saw the comment count increasing - it's probably a Github bug.\n\nSorry again.\n. I've thought a little bit more about this issue. For Python, what we can do is add a [post installation command](https://groups.google.com/forum/#!msg/python-virtualenv/71PSRreRPMQ/aCcrWoatrr0J) in `setup.py` that converts `regexes.yaml` to `regexes.json`. We can then modify `user_agent_parser.py` to:\n\n``` python\n\ntry:\n    # Load from regexes.json\nexcept:\n    # Load from regexes.yaml\n\n```\n\nObviously this is not as nice as having a pre-built `regexes.json` file in that we still have `pyyaml` as a dependency but it solves gives us a nice boost in startup speed and is backwards compatible.\n\nWhat do you think @elsigh ?\n. I'm seeing this on the master branch, will try to look at this in more detail this weekend.\n. Yes, I think the OS should be Android, this will keep it consistent with other variations of [Kindle Fire's user agents](http://www.quora.com/Kindle-Fire/Can-someone-get-the-UserAgent-String-for-Kindle-Fire-all-versions)\n. /cc @elsigh \n. @elsigh can we get this merged as well or is there anything here that needs changing? I want to hopefully release this on PyPI soon so we can close #115 :) \n. @elsigh thanks for the quick response! You're right, it didn't merge cleanly because the python-compile-to-json branch was merged in yesterday. I've updated this PR accordingly and it should now merge properly.\n. FYI, `ua-parser` is now on [PyPI](http://pypi.python.org/pypi/ua-parser/) and can be installed via `pip install ua-parser`\n. Glad you like it :)\n. If @elsigh can get this merged in, I can upload a new package to PyPI.\n. @obeattie I've uploaded a new version to PyPI, try it out and let me know if it works.\n. @tobie I don't think Browserscope's data will provide an accurate representation of browser/platform marketshare of the web as a whole. [Net Application's](http://www.netmarketshare.com) data should be more representative and is freely available.\n. Is there documentation on how to run user agent tests somewhere? I'd like to tinker with this a bit and just want to make sure that my changes don't cause any regressions.\n. Does it work if you install it using `virtualenv`? I suspect this is due to your distro tampering with Python's installation layout, similar to https://github.com/tobie/ua-parser/pull/160 .\n\n@hackeron what Linux distro are you installing ua-parser on? We'll need more information on where `regexes.yaml` gets copied to during installation.\n. It seems like pyyaml failed to install. See this line here:\n\n```\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/check_libyaml.c -o build/temp.linux-x86_64-2.7/check_libyaml.o\nbuild/temp.linux-x86_64-2.7/check_libyaml.c:2:18: fatal error: yaml.h: No such file or directory\ncompilation terminated.\n```\n. I just tried installing `ua_parser` on my Mac and it seems to be working fine, my Ubuntu development and production boxes (12.04) at work was also able to successfully install this package via `pip`, with `virtualenv`.\n\nI'm worried that we will break installation on some other distros/setup if we merge https://github.com/tobie/ua-parser/pull/213 in. I think the best solution would be to try and locate `regexes.yaml` at both `ROOT_DIR` and `DATA_DIR`.\n\nWhat do you think @elsigh ? \n. I'll try to work on a patch and open a pull request tonight.\n. I'm working on a patch to fix python version on Fedora, but found that the current master has test failures. My plan is to now create a branch from the current release on PyPI. Mind creating a `python-stable` branch based on commit c4541daee8db4aac97723512983cb0fa09cf13d4 so I can open a pull request to that branch?\n\nOr alternatively, if you don't mind please give me push access to this repo so I can more easily keep the PyPI version in sync (I'm the current maintainer of the ua-parser's PyPI package).\n. I have uploaded the fix to my ua-parser repo https://github.com/selwin/ua-parser \n\n@rascalking can you try installing it with `pip install -e git+git://github.com/selwin/ua-parser.git#egg=ua-parser` and check if it now works on Fedora?\n. @rascalking no reason other than ignorance :). Alright, let me know how it goes. Thanks!\n. @rascalking Installed just fine on Ubuntu 10.04 with Python 2.6 :+1: \n. @rascalking should open a PR. \n\nAs for PyPI relase, @rascalking's  commits are made on top of the current master branch with failing tests. My plan is to pull in @rascalking's  installation related commits on top of my stable python branch and upload it to pypi as a bug fix release. Is that acceptable to you @tobie and @elsigh ?\n. @georgevreilly try installing `pyyaml` first. It chocked on this line:\n\n``` python\n File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n\n    import yaml\n\nImportError: No module named yaml\n```\n. @malicustommade I'm not a repo conntributor so I can't merge this in. Can @elsigh or @tobie help?\n. @elsigh if everything is in order, mind pulling this in? I'd like to make a PyPI release soon since the current PyPI version doesn't recognise Opera 15.\n. Looks good to me. When this is merged, I'll release a new version on PyPI with bundled `regexes.json`.\n. That's because I haven't had the time to upload it to PyPI yet. I'll try to\ndo it this weekend. Sorry for the delay!\n\nSent from my phone\n\nOn Aug 2, 2013, at 1:15 AM, Chris Adams notifications@github.com wrote:\n\npip install ua-parser does not work in a fresh virtualenv, failing during\nsetup.py:\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\",\nline 34, in run\n\n```\ninstall_regexes()\n```\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\",\nline 22, in install_regexes\n\n```\nimport yaml\n```\n\nImportError: No module named yaml\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/tobie/ua-parser/pull/279#issuecomment-21953467\n.\n. Would it be better if we introduce a new property to avoid backwards compatibility? Something like:\n\n``` python\ndevice.brand => \"Apple\"\ndevice.family => \"iPad\"\ndevice.name => \"Apple iPad\"\ndevice.model => \"4\"\n```\n. I'm getting a similar error with @davidmontgom \n\n```\nPython 2.7.2 (default, Jun 20 2012, 16:23:33) \n[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/selwin/.virtualenvs/test/src/ua-parser/py/ua_parser/user_agent_parser.py\", line 399, in <module>\n    yamlFile = open(yamlPath)\nIOError: [Errno 2] No such file or directory: '/Users/selwin/.virtualenvs/test/src/ua-parser/py/ua_parser/../regexes.yaml'\n```\n\nI tried installing both the latest commit and latest stable release using `pip` with the commands:\n\n```\npip install -e git://github.com/tobie/ua-parser.git@v0.2.4#egg=ua-parser\npip install -e git://github.com/tobie/ua-parser.git#egg=ua-parser\n```\n. Just FYI, I need an easy way to identify whether visits from mobile phones/tablet so I decided to build a small library (https://github.com/selwin/python-user-agents) on top of ua-parser.\n\nIt's written in python and does not have any language agnostic component but please have a look at it. If there's anything that you're interested in bringing into this project, I'd be more than happy to help.\n. @elsigh Yes, I already have a PyPI account so I'd be more than happy to do so. But that would make me the package owner on PyPI, instead of one this library's maintainers. Is that ok?\n. @elsigh alright, I'll wait for a new stable version to be tagged before putting this up on PyPI, as 0.2.4 has faulty `regexes.yaml` Python import path that we fixed just yesterday. \n. @elsigh by build step, do you mean as part of `setup.py install`? \n\nWhat about maintaining a `regexes.json` in addition to the YAML file in the main repo? This can be compiled right before we tag a release. I'd imagine other languages will also enjoy similar performance improvements from this change.\n. Hmm, can we get some help from other maintainers to measure the parsing time? I can try to do it this weekend but it woukd take me quite some time as I'm not familiar with other languages.\n. Hmm, can we get some help from other maintainers to measure this? I can try to do it over the weekend but it would take me quite some time as I'm not familiar with other languages.\n. Hmm, can we get other maintainers to help measure this? I can try to do it over the weekend but it would take me some time as I'm not familiar with other languages.\n. Sorry if it seemed like I was spamming, Github didn't show my messages in the issue thread so I tried reposting. But when I scrolled up, I saw the comment count increasing - it's probably a Github bug.\n\nSorry again.\n. I've thought a little bit more about this issue. For Python, what we can do is add a [post installation command](https://groups.google.com/forum/#!msg/python-virtualenv/71PSRreRPMQ/aCcrWoatrr0J) in `setup.py` that converts `regexes.yaml` to `regexes.json`. We can then modify `user_agent_parser.py` to:\n\n``` python\n\ntry:\n    # Load from regexes.json\nexcept:\n    # Load from regexes.yaml\n\n```\n\nObviously this is not as nice as having a pre-built `regexes.json` file in that we still have `pyyaml` as a dependency but it solves gives us a nice boost in startup speed and is backwards compatible.\n\nWhat do you think @elsigh ?\n. I'm seeing this on the master branch, will try to look at this in more detail this weekend.\n. Yes, I think the OS should be Android, this will keep it consistent with other variations of [Kindle Fire's user agents](http://www.quora.com/Kindle-Fire/Can-someone-get-the-UserAgent-String-for-Kindle-Fire-all-versions)\n. /cc @elsigh \n. @elsigh can we get this merged as well or is there anything here that needs changing? I want to hopefully release this on PyPI soon so we can close #115 :) \n. @elsigh thanks for the quick response! You're right, it didn't merge cleanly because the python-compile-to-json branch was merged in yesterday. I've updated this PR accordingly and it should now merge properly.\n. FYI, `ua-parser` is now on [PyPI](http://pypi.python.org/pypi/ua-parser/) and can be installed via `pip install ua-parser`\n. Glad you like it :)\n. If @elsigh can get this merged in, I can upload a new package to PyPI.\n. @obeattie I've uploaded a new version to PyPI, try it out and let me know if it works.\n. @tobie I don't think Browserscope's data will provide an accurate representation of browser/platform marketshare of the web as a whole. [Net Application's](http://www.netmarketshare.com) data should be more representative and is freely available.\n. Is there documentation on how to run user agent tests somewhere? I'd like to tinker with this a bit and just want to make sure that my changes don't cause any regressions.\n. Does it work if you install it using `virtualenv`? I suspect this is due to your distro tampering with Python's installation layout, similar to https://github.com/tobie/ua-parser/pull/160 .\n\n@hackeron what Linux distro are you installing ua-parser on? We'll need more information on where `regexes.yaml` gets copied to during installation.\n. It seems like pyyaml failed to install. See this line here:\n\n```\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/check_libyaml.c -o build/temp.linux-x86_64-2.7/check_libyaml.o\nbuild/temp.linux-x86_64-2.7/check_libyaml.c:2:18: fatal error: yaml.h: No such file or directory\ncompilation terminated.\n```\n. I just tried installing `ua_parser` on my Mac and it seems to be working fine, my Ubuntu development and production boxes (12.04) at work was also able to successfully install this package via `pip`, with `virtualenv`.\n\nI'm worried that we will break installation on some other distros/setup if we merge https://github.com/tobie/ua-parser/pull/213 in. I think the best solution would be to try and locate `regexes.yaml` at both `ROOT_DIR` and `DATA_DIR`.\n\nWhat do you think @elsigh ? \n. I'll try to work on a patch and open a pull request tonight.\n. I'm working on a patch to fix python version on Fedora, but found that the current master has test failures. My plan is to now create a branch from the current release on PyPI. Mind creating a `python-stable` branch based on commit c4541daee8db4aac97723512983cb0fa09cf13d4 so I can open a pull request to that branch?\n\nOr alternatively, if you don't mind please give me push access to this repo so I can more easily keep the PyPI version in sync (I'm the current maintainer of the ua-parser's PyPI package).\n. I have uploaded the fix to my ua-parser repo https://github.com/selwin/ua-parser \n\n@rascalking can you try installing it with `pip install -e git+git://github.com/selwin/ua-parser.git#egg=ua-parser` and check if it now works on Fedora?\n. @rascalking no reason other than ignorance :). Alright, let me know how it goes. Thanks!\n. @rascalking Installed just fine on Ubuntu 10.04 with Python 2.6 :+1: \n. @rascalking should open a PR. \n\nAs for PyPI relase, @rascalking's  commits are made on top of the current master branch with failing tests. My plan is to pull in @rascalking's  installation related commits on top of my stable python branch and upload it to pypi as a bug fix release. Is that acceptable to you @tobie and @elsigh ?\n. @georgevreilly try installing `pyyaml` first. It chocked on this line:\n\n``` python\n File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n\n    import yaml\n\nImportError: No module named yaml\n```\n. @malicustommade I'm not a repo conntributor so I can't merge this in. Can @elsigh or @tobie help?\n. @elsigh if everything is in order, mind pulling this in? I'd like to make a PyPI release soon since the current PyPI version doesn't recognise Opera 15.\n. Looks good to me. When this is merged, I'll release a new version on PyPI with bundled `regexes.json`.\n. That's because I haven't had the time to upload it to PyPI yet. I'll try to\ndo it this weekend. Sorry for the delay!\n\nSent from my phone\n\nOn Aug 2, 2013, at 1:15 AM, Chris Adams notifications@github.com wrote:\n\npip install ua-parser does not work in a fresh virtualenv, failing during\nsetup.py:\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\",\nline 34, in run\n\n```\ninstall_regexes()\n```\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\",\nline 22, in install_regexes\n\n```\nimport yaml\n```\n\nImportError: No module named yaml\n\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/tobie/ua-parser/pull/279#issuecomment-21953467\n.\n. Would it be better if we introduce a new property to avoid backwards compatibility? Something like:\n\n``` python\ndevice.brand => \"Apple\"\ndevice.family => \"iPad\"\ndevice.name => \"Apple iPad\"\ndevice.model => \"4\"\n```\n. ",
    "fivebull": "yep, php ver used  i options of preg\n. yep, php ver used  i options of preg\n. ",
    "AbhinavAdepu": "Can anyone pls tell me how to detect  \"microsoft windows surface RT tablet \" javascript code.\n\nThanks in Advance....\n. Can anyone pls tell me how to detect  \"microsoft windows surface RT tablet \" javascript code.\n\nThanks in Advance....\n. ",
    "lopezdonaque": "Thanks\n. Thanks\n. ",
    "enemaerke": "@tobie I hope to get around to adding license, readme and the xxToString() improvements suggested by @galmedia within a few days ( a bit new to the whole git/github/pullrequest thing, so will have to figure out how to push new changes on top of my existing PR) \n\nI've added the xunit tools for running tests (no agreed-upon package manager for tools in .net, only libraries) since thats what I usually do.\n\nBy the way, wanted to ask a few questions around some of the regexes...how do I do this best?\n. @tobie actually just read that new commits are added to the PR, that is pretty sweet. I'll open an issue and take it from there\n\n@galmeida I'd love to peek at your xxToString() methods. And yes, I had to work around the _  (slash - underscore) since it is illegal in .net regex and that is one of my questions\n. @tobie I have updated the readme with usage examples and added a license as well as done some tidying up, so I think the PR is ready as far as I am concerned. Let me know what you think...\n. Just to chip in, I wrote a quick test for c#, parsing of json instead of yaml. I'm able to construct a parser from json in about half the time compared to yaml (no optimizations on json parsing at all).\n. Sure, I'll get to it as soon as possible\n. Merged your pull request (thanks!) and uploaded a version 1.0 to nuget (https://nuget.org/packages/UAParser/1.0.0.0)\n\nHave not turned off specific versions for YAML, would actually like to skip the dependency all together either by writing a simple YAML parser internally (the YAML is pretty simple) or if we we turn to json format, which has been discussed. \n. (chipping in a little late on this)\n\nI'd be happy to align the c# with the proposed changes. I like the general outline of the org and I'm thinking that future implementations (at least for c#) could support both the regexes from the core library (embedded/referenced via submodules) but also the ability to pull in versions from a public API. That would both provide working version as well as a way for consumers to easily pull the latest from the public repository.\n. Hi @tobie, had not seen that issue. I'll take a look at the full thread and play with an update for c#, hopefully this weekend. Any changes relating to this should go in another PR, though.\n. The yamldotnet dependency is required for parsing the embedded regexes, which is specified in yaml format.\n. I'd like to kill the reliance on the YAML stuff, but as long as the regexes are in yaml, I think we'll need it (unless you are up for writing a minimal yaml parser that we can embed, which might be doable if you just do the basic parsing?) \n\nAs for your specific issue, I don't know if assembly redirects can save you somehow? \n. @nicholashead The PR https://github.com/tobie/ua-parser/pull/453 removes the YamlDotNet dependency which could help you out (in case you haven't solved this already). A quick review would also be nice :)\n. This is now fixed\n. I'm seeing some failed tests on my box but that seems unrelated to this, so I'm merging this in\n. You had that working before I did :) Thanks Atif\n. I'm merging this in as it improves the quality of the code. \n\nIt does warrant some updates to e.g README documentation as the xml documentation has gone away but that should be a separate PR.\n\nThanks for contributing @atifaziz \n. These are local and cosmetic, so I'm merging them in\n. @atifaziz Sorry for the long wait on this.\n\nI like the one-testcase-per-yaml-test but I do have some reservations on merging this as I see the following additional downsides to this approach (as opposed to the current setup):\n- Using this approach, pulling the repo and running the `build.bat` from the command line will not generate new testcase (as the T4 is not executed outside of VS as far as I know, I might be mistaken though). \n- Given the above, the tests does not reflect the latest from the YAML test cases but rather the tests present at the latest push. The yaml testcases are expanded on quite often by lots of non-c# people and I think it would be a hassle for anybody to keep up with that\n- Regenerating the testcases would automatically change the generated cs file, since it includes the timestamp, so even if no new testcases are present, you'd have pending changes.\n\nOverall I think the current setup suffers from having a few very big and slightly complex test cases but your suggested alternative, while being more simple on the surface does present some maintainability issue that I'd rather not take on.\n\nThoughts?\n. I have no experience with running T4 or the Mono TextTransform from the commandline, so I can't speak to the feasibility of that, I'm totally trusting you on that :)\n\nAs far as maintainability issues I was considering that changes to the yaml testcases (which are shared for all languages and somewhat frequently edited, typically a few times a month or so) would require new test cases to be generated. If a yaml testcase is added ideally an update to these generated test cases would need to be pushed to the repo for it to be \"up-to-date\" and aligned with the testcases. Keeping the repo updated was the responsibility that I would not like to take on.\n\nYou could argued that the push is not needed, if the build step regenerates the testcases (so a pull and a build generates an updated version) but in this case I don't like the fact that a pull and a build could potentially cause you to alter files and generated uncommited changes locally.\n\nFor the record, I fully understand the inherent issues with conditional breakpoints and debugging using the current approach and would really like the upsides that this PR introduces, I am just hesitant to change the nature of the repo to be less aligned out of the box.\n\nHope this clarifies by position. Feel free to shoot back :)\n. Closing the PR since there have been no feedback and it is mostly concerning structure\n. Hi there.\n\nFirst of, this project has been moved to a new organization called ua-parser (http://github.com/ua-parser) and split into the core regex's (http://github.com/ua-parser/uap-core) and several language specific implementations. You should really be creating issues within that setup instead of here.\n\nAs for you question. Regex case sensitivity is actually controlled on a per-regex basis using a 'regex_flag' in the yaml file (located in http://github.com/ua-parser/uap-core). The C# implementation (located at http://github.com/ua-parser/uap-csharp) respects this flag and will not do a general case insensitive switch on all regex'es. If you feel that the regex'es does not catch all appropriate cases, you should create a PR in the uap-core project, correcting the specific regex so all language implementations will benefit.\n. @tobie I hope to get around to adding license, readme and the xxToString() improvements suggested by @galmedia within a few days ( a bit new to the whole git/github/pullrequest thing, so will have to figure out how to push new changes on top of my existing PR) \n\nI've added the xunit tools for running tests (no agreed-upon package manager for tools in .net, only libraries) since thats what I usually do.\n\nBy the way, wanted to ask a few questions around some of the regexes...how do I do this best?\n. @tobie actually just read that new commits are added to the PR, that is pretty sweet. I'll open an issue and take it from there\n\n@galmeida I'd love to peek at your xxToString() methods. And yes, I had to work around the _  (slash - underscore) since it is illegal in .net regex and that is one of my questions\n. @tobie I have updated the readme with usage examples and added a license as well as done some tidying up, so I think the PR is ready as far as I am concerned. Let me know what you think...\n. Just to chip in, I wrote a quick test for c#, parsing of json instead of yaml. I'm able to construct a parser from json in about half the time compared to yaml (no optimizations on json parsing at all).\n. Sure, I'll get to it as soon as possible\n. Merged your pull request (thanks!) and uploaded a version 1.0 to nuget (https://nuget.org/packages/UAParser/1.0.0.0)\n\nHave not turned off specific versions for YAML, would actually like to skip the dependency all together either by writing a simple YAML parser internally (the YAML is pretty simple) or if we we turn to json format, which has been discussed. \n. (chipping in a little late on this)\n\nI'd be happy to align the c# with the proposed changes. I like the general outline of the org and I'm thinking that future implementations (at least for c#) could support both the regexes from the core library (embedded/referenced via submodules) but also the ability to pull in versions from a public API. That would both provide working version as well as a way for consumers to easily pull the latest from the public repository.\n. Hi @tobie, had not seen that issue. I'll take a look at the full thread and play with an update for c#, hopefully this weekend. Any changes relating to this should go in another PR, though.\n. The yamldotnet dependency is required for parsing the embedded regexes, which is specified in yaml format.\n. I'd like to kill the reliance on the YAML stuff, but as long as the regexes are in yaml, I think we'll need it (unless you are up for writing a minimal yaml parser that we can embed, which might be doable if you just do the basic parsing?) \n\nAs for your specific issue, I don't know if assembly redirects can save you somehow? \n. @nicholashead The PR https://github.com/tobie/ua-parser/pull/453 removes the YamlDotNet dependency which could help you out (in case you haven't solved this already). A quick review would also be nice :)\n. This is now fixed\n. I'm seeing some failed tests on my box but that seems unrelated to this, so I'm merging this in\n. You had that working before I did :) Thanks Atif\n. I'm merging this in as it improves the quality of the code. \n\nIt does warrant some updates to e.g README documentation as the xml documentation has gone away but that should be a separate PR.\n\nThanks for contributing @atifaziz \n. These are local and cosmetic, so I'm merging them in\n. @atifaziz Sorry for the long wait on this.\n\nI like the one-testcase-per-yaml-test but I do have some reservations on merging this as I see the following additional downsides to this approach (as opposed to the current setup):\n- Using this approach, pulling the repo and running the `build.bat` from the command line will not generate new testcase (as the T4 is not executed outside of VS as far as I know, I might be mistaken though). \n- Given the above, the tests does not reflect the latest from the YAML test cases but rather the tests present at the latest push. The yaml testcases are expanded on quite often by lots of non-c# people and I think it would be a hassle for anybody to keep up with that\n- Regenerating the testcases would automatically change the generated cs file, since it includes the timestamp, so even if no new testcases are present, you'd have pending changes.\n\nOverall I think the current setup suffers from having a few very big and slightly complex test cases but your suggested alternative, while being more simple on the surface does present some maintainability issue that I'd rather not take on.\n\nThoughts?\n. I have no experience with running T4 or the Mono TextTransform from the commandline, so I can't speak to the feasibility of that, I'm totally trusting you on that :)\n\nAs far as maintainability issues I was considering that changes to the yaml testcases (which are shared for all languages and somewhat frequently edited, typically a few times a month or so) would require new test cases to be generated. If a yaml testcase is added ideally an update to these generated test cases would need to be pushed to the repo for it to be \"up-to-date\" and aligned with the testcases. Keeping the repo updated was the responsibility that I would not like to take on.\n\nYou could argued that the push is not needed, if the build step regenerates the testcases (so a pull and a build generates an updated version) but in this case I don't like the fact that a pull and a build could potentially cause you to alter files and generated uncommited changes locally.\n\nFor the record, I fully understand the inherent issues with conditional breakpoints and debugging using the current approach and would really like the upsides that this PR introduces, I am just hesitant to change the nature of the repo to be less aligned out of the box.\n\nHope this clarifies by position. Feel free to shoot back :)\n. Closing the PR since there have been no feedback and it is mostly concerning structure\n. Hi there.\n\nFirst of, this project has been moved to a new organization called ua-parser (http://github.com/ua-parser) and split into the core regex's (http://github.com/ua-parser/uap-core) and several language specific implementations. You should really be creating issues within that setup instead of here.\n\nAs for you question. Regex case sensitivity is actually controlled on a per-regex basis using a 'regex_flag' in the yaml file (located in http://github.com/ua-parser/uap-core). The C# implementation (located at http://github.com/ua-parser/uap-csharp) respects this flag and will not do a general case insensitive switch on all regex'es. If you feel that the regex'es does not catch all appropriate cases, you should create a PR in the uap-core project, correcting the specific regex so all language implementations will benefit.\n. ",
    "c4milo": "I'm getting the same for iOS\n\n``` javascript\n> var r = ua.parse('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405');\nundefined\n> r\n{ family: 'Mobile Safari',\n  major: 3,\n  minor: 1,\n  patch: null,\n  os: 'iOS 3.2' }\n> r.os.major\nundefined\n> r.os\n'iOS 3.2'\n> r.os.minor\nundefined\n```\n\n``` javascript\n> var r = ua.parse('Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5');\nundefined\n> r\n{ family: 'Mobile Safari',\n  major: 5,\n  minor: 0,\n  patch: 2,\n  os: 'iOS 4.2' }\n> r.os.major\nundefined\n> r.os.minor\nundefined\n```\n. BTW, I tested the above using the version that's currently published in the NPM registry: 0.2.4. But when testing the master branch everything works fine.\n\n``` javascript\nvar r = ua.parse('Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5');\nundefined\n> r\n{ string: 'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5',\n  userAgent: \n   { family: 'Mobile Safari',\n     major: '5',\n     minor: '0',\n     patch: '2' },\n  os: \n   { family: 'iOS',\n     major: '4',\n     minor: '2',\n     patch: '1',\n     patchMinor: null },\n  device: { family: 'iPod' },\n  family: 'Mobile Safari',\n  major: 5,\n  minor: 0,\n  patch: 2 }\n```\n. that seems like regexes for windows user agents need some tweaking \n. Awesome, thank you!\n\nSent from my iPhone\n\nOn Dec 27, 2012, at 6:19 PM, Tobie Langel notifications@github.com wrote:\n\n> Done: 1f8d28c.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. I'm getting the same for iOS\n\n``` javascript\n> var r = ua.parse('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405');\nundefined\n> r\n{ family: 'Mobile Safari',\n  major: 3,\n  minor: 1,\n  patch: null,\n  os: 'iOS 3.2' }\n> r.os.major\nundefined\n> r.os\n'iOS 3.2'\n> r.os.minor\nundefined\n```\n\n``` javascript\n> var r = ua.parse('Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5');\nundefined\n> r\n{ family: 'Mobile Safari',\n  major: 5,\n  minor: 0,\n  patch: 2,\n  os: 'iOS 4.2' }\n> r.os.major\nundefined\n> r.os.minor\nundefined\n```\n. BTW, I tested the above using the version that's currently published in the NPM registry: 0.2.4. But when testing the master branch everything works fine.\n\n``` javascript\nvar r = ua.parse('Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5');\nundefined\n> r\n{ string: 'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_2_1 like Mac OS X; hu-hu) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5',\n  userAgent: \n   { family: 'Mobile Safari',\n     major: '5',\n     minor: '0',\n     patch: '2' },\n  os: \n   { family: 'iOS',\n     major: '4',\n     minor: '2',\n     patch: '1',\n     patchMinor: null },\n  device: { family: 'iPod' },\n  family: 'Mobile Safari',\n  major: 5,\n  minor: 0,\n  patch: 2 }\n```\n. that seems like regexes for windows user agents need some tweaking \n. Awesome, thank you!\n\nSent from my iPhone\n\nOn Dec 27, 2012, at 6:19 PM, Tobie Langel notifications@github.com wrote:\n\n> Done: 1f8d28c.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "mamod": "Thanks for the heads up :+1:  :) I just updated my poll request according to your suggestion, one can use the Module right from the forked project directly now and it will always use the master regexes.yaml file\n\nAnother option if user installed from CPAN or built the module into lib path, it will fetches latest regexes.yaml file with a command line option to update periodically. \"idea stolen from the PHP port\" :)\n\nHope this fixes this issue.\nThanks\n. Done\n. @Shutnik I agree with @tobie even though I'm not a javascript guru I could port ua-parser to perl by reading the javascript version and it was easy to follow, I'm not saying that your version is not good but I think readability is important even if it has to declare more variables.\n\nThanks for your effort and interest to improve this library.\n. @lstrojny I think this issue related to ua-classifier project which doesn't seem to be active so I guess this should be closed.\n. The version of the java port or any other language port is not related to the yaml file version, it's for the port itself so there is no problem with that.\n. I was thinking of doing the same thing with the Perl port but thought this will cause a lot of overhead while testing, I'm not sure if that's true though, so I created a separate repo for testing which pull test_resources folder content automatically and run the tests, of course the only problem is that every time a new addition to regexes.yaml file I have to force travis manually to start the tests.\n. @commenthol thanks... I really prefer 4 space tab indent :( can we keep that style with the perl version, I also has a development version at [HTTP-UA-Parser](https://github.com/mamod/HTTP-UA-Parser) it's connected with travis for testing, I do testing there before uploading here to the main branch so is it possible for you to open a PR of the perl changes there? thank you again. \n. I totally agree this PR is amazing and @commenthol is doing a great job.\n\n@elsigh I think travis supports all languages in this repo except for c#, maybe there is a work around for that I don't know, but is it a good idea to have travis test all ports at once every time a new feature or update to regexes introduced? what if tests failed because of some port and the maintainer didn't respond for some time? won't this affect the contribution to the project?\n\nI think having the same tests run on all ports is the way to go but not in the main branch, still not sure how this can be achieved!\n\nThe specifications is a great idea and improving it will eventually strict the behavior of all ports to be the same.\n. Thanks to @commenthol the perl port is already done, I'm waiting the approval of this PR to merge the changes, I'm also ready to make any changes to meet the full specifications within a week if required.\n\nAccording to the specifications \"brand shall name the manufacturer of the device\" I think you're right, device.manufacturer sounds better, but again as @nielsbasjes pointed above, what we should get for example with \"Google Nexus 7\" where many manufacturers produced the same device?\n. I agree with @tobie tagging will be much better than splitting, everything else looks well organized :+1: \n. @parcolee I think you're using the perl port, I just test it with the current regex and the out put\n\n```\nDevice family    : Other\nBrowser family   : Android\nOS family        : Android\n```\n\n@Ironholds can you confirm if this is a bug in the perl port? I'm not totally sure what should be the output of that user agent or if it could be parsed at all, as the perl port pass all tests of javascript and python, can you test with any other port and update me with the output?\n. Am I blind? I can only see one user agent \"Samsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\" where is the second one :(\n\nSorry for the confusion by saying \"can you confirm if it's a perl bug\" I meant to test with the port you're using and let me know if it captures the device, I wasn't sure because you said \"the current regex shouldn't catch that\".\n. oh, good catch.. OK since this is the standard for Samsung devices then I guess \"Other\" is the expected behavior.\n. Not sure, travis doesn't show a good indication, I tested against perl and here's what I got\n\n```\n #          got: 'Samsung C3053/1.0 '\n #     expected: 'Samsung C3053'\n```\n\nThe failing test appears to come from [test_device.yaml](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/test_device.yaml)\n. Thanks for the heads up :+1:  :) I just updated my poll request according to your suggestion, one can use the Module right from the forked project directly now and it will always use the master regexes.yaml file\n\nAnother option if user installed from CPAN or built the module into lib path, it will fetches latest regexes.yaml file with a command line option to update periodically. \"idea stolen from the PHP port\" :)\n\nHope this fixes this issue.\nThanks\n. Done\n. @Shutnik I agree with @tobie even though I'm not a javascript guru I could port ua-parser to perl by reading the javascript version and it was easy to follow, I'm not saying that your version is not good but I think readability is important even if it has to declare more variables.\n\nThanks for your effort and interest to improve this library.\n. @lstrojny I think this issue related to ua-classifier project which doesn't seem to be active so I guess this should be closed.\n. The version of the java port or any other language port is not related to the yaml file version, it's for the port itself so there is no problem with that.\n. I was thinking of doing the same thing with the Perl port but thought this will cause a lot of overhead while testing, I'm not sure if that's true though, so I created a separate repo for testing which pull test_resources folder content automatically and run the tests, of course the only problem is that every time a new addition to regexes.yaml file I have to force travis manually to start the tests.\n. @commenthol thanks... I really prefer 4 space tab indent :( can we keep that style with the perl version, I also has a development version at [HTTP-UA-Parser](https://github.com/mamod/HTTP-UA-Parser) it's connected with travis for testing, I do testing there before uploading here to the main branch so is it possible for you to open a PR of the perl changes there? thank you again. \n. I totally agree this PR is amazing and @commenthol is doing a great job.\n\n@elsigh I think travis supports all languages in this repo except for c#, maybe there is a work around for that I don't know, but is it a good idea to have travis test all ports at once every time a new feature or update to regexes introduced? what if tests failed because of some port and the maintainer didn't respond for some time? won't this affect the contribution to the project?\n\nI think having the same tests run on all ports is the way to go but not in the main branch, still not sure how this can be achieved!\n\nThe specifications is a great idea and improving it will eventually strict the behavior of all ports to be the same.\n. Thanks to @commenthol the perl port is already done, I'm waiting the approval of this PR to merge the changes, I'm also ready to make any changes to meet the full specifications within a week if required.\n\nAccording to the specifications \"brand shall name the manufacturer of the device\" I think you're right, device.manufacturer sounds better, but again as @nielsbasjes pointed above, what we should get for example with \"Google Nexus 7\" where many manufacturers produced the same device?\n. I agree with @tobie tagging will be much better than splitting, everything else looks well organized :+1: \n. @parcolee I think you're using the perl port, I just test it with the current regex and the out put\n\n```\nDevice family    : Other\nBrowser family   : Android\nOS family        : Android\n```\n\n@Ironholds can you confirm if this is a bug in the perl port? I'm not totally sure what should be the output of that user agent or if it could be parsed at all, as the perl port pass all tests of javascript and python, can you test with any other port and update me with the output?\n. Am I blind? I can only see one user agent \"Samsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\" where is the second one :(\n\nSorry for the confusion by saying \"can you confirm if it's a perl bug\" I meant to test with the port you're using and let me know if it captures the device, I wasn't sure because you said \"the current regex shouldn't catch that\".\n. oh, good catch.. OK since this is the standard for Samsung devices then I guess \"Other\" is the expected behavior.\n. Not sure, travis doesn't show a good indication, I tested against perl and here's what I got\n\n```\n #          got: 'Samsung C3053/1.0 '\n #     expected: 'Samsung C3053'\n```\n\nThe failing test appears to come from [test_device.yaml](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/test_device.yaml)\n. ",
    "scoopseven": "Wouldn't adding Bot|Spider|Crawler to the regex catch 80% of bots that pose the case-sensitive problem?\n. Wouldn't adding Bot|Spider|Crawler to the regex catch 80% of bots that pose the case-sensitive problem?\n. ",
    "adamgotterer": "Was trying to hunt down what happened to the mobile family support. I'm curious why it was removed and whether it will return in a new form?\n. That makes sense. Thank you.\n. Was trying to hunt down what happened to the mobile family support. I'm curious why it was removed and whether it will return in a new form?\n. That makes sense. Thank you.\n. ",
    "niemyjski": "Thanks, I really appreciate it. I went a head and created a pull request for a bug that I found while building the project (https://github.com/tobie/ua-parser/pull/149). Also, I updated the core libraries (as I am pulling them from nuget in my project and it was complaining about different versions). May want to turn off require specific versions of YAML when compiling.\n. I vote for using json :).\n. Thanks, I really appreciate it. I went a head and created a pull request for a bug that I found while building the project (https://github.com/tobie/ua-parser/pull/149). Also, I updated the core libraries (as I am pulling them from nuget in my project and it was complaining about different versions). May want to turn off require specific versions of YAML when compiling.\n. I vote for using json :).\n. ",
    "memakeit": "Upon closer inspection my error_reporting is being overridden by the PHP framework (Kohana) that I am using:\n`error_reporting(E_ALL | E_STRICT);`\n. Upon closer inspection my error_reporting is being overridden by the PHP framework (Kohana) that I am using:\n`error_reporting(E_ALL | E_STRICT);`\n. ",
    "bobwhelan": "I would very much like to see the ua-classifier.  Any chance of that happening soon?\n\nThank you for all your previous work.  This is awesome.\n. I would very much like to see the ua-classifier.  Any chance of that happening soon?\n\nThank you for all your previous work.  This is awesome.\n. ",
    "stevenmc": "Personally, I would have preferred this feature not be removed from ua-parser until ua-classifier is available.\n\nBut I agree, it's a very difficult task to define.\n. Personally, I would have preferred this feature not be removed from ua-parser until ua-classifier is available.\n\nBut I agree, it's a very difficult task to define.\n. ",
    "hferradj": "Hi, I would like to know if ua-classifier is available now?\n\nThis thread is already 2 years old but I couldn't find ua-classifier anywhere so I thought maybe the name has changed?\n\nOr is there any other way with ua-parser to detect a mobile since isMobile() has been removed?\n\nThanks a lot\n. Oh ok... too sad :) \nThanks anyway for replying. \n. Hi, I would like to know if ua-classifier is available now?\n\nThis thread is already 2 years old but I couldn't find ua-classifier anywhere so I thought maybe the name has changed?\n\nOr is there any other way with ua-parser to detect a mobile since isMobile() has been removed?\n\nThanks a lot\n. Oh ok... too sad :) \nThanks anyway for replying. \n. ",
    "staabm": "refs jquery/testswarm#256\n. refs jquery/testswarm#256\n. ",
    "xing-kenny": "I copy regexes.yaml from testswarm\\inc\\libs\\ua-parser to testswarm\\inc\\libs\\ua-parser\\php\\resources,\nthe http://localhost:8080/fork/testswarm/ can run ok now.\nAlthough E:\\GitHub\\fork\\testswarm\\inc\\libs\\ua-parser\\php>php uaparser-cli.php -g failed as before.\n. I copy regexes.yaml from testswarm\\inc\\libs\\ua-parser to testswarm\\inc\\libs\\ua-parser\\php\\resources,\nthe http://localhost:8080/fork/testswarm/ can run ok now.\nAlthough E:\\GitHub\\fork\\testswarm\\inc\\libs\\ua-parser\\php>php uaparser-cli.php -g failed as before.\n. ",
    "Panda77": "php uaparser-cli.php -g f\ngetting the YAML file...\nfailed to get the file...\n\nD:\\EasyPHP-5.3.8.1\\php>php -v\nPHP 5.3.8 (cli) (built: Aug 23 2011 11:50:20)\nCopyright (c) 1997-2011 The PHP Group\nZend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies\n\nphp.ini - allow_url_fopen = ON\n\nIF remove the @ before file_get_contents()\n\ngetting the YAML file from the repo...\n\nWarning: file_get_contents(): Unable to find the wrapper \"https\" - did you forge\nt to enable it when you configured PHP? in D:\\EasyPHP-5.3.8.1\\www\\site\\script\\ua-parser-master\\php\\uaparser-cli.php on line 71\n\nWarning: file_get_contents(https://raw.github.com/tobie/ua-parser/master/regexes\n.yaml): failed to open stream: Invalid argument in D:\\EasyPHP-5.3.8.1\\www\n\\site\\script\\ua-parser-master\\php\\uaparser-cli.php on line 71\nfailed to get the file...\n\nnow what shall I do ,thx\n. php uaparser-cli.php -g f\ngetting the YAML file...\nfailed to get the file...\n\nD:\\EasyPHP-5.3.8.1\\php>php -v\nPHP 5.3.8 (cli) (built: Aug 23 2011 11:50:20)\nCopyright (c) 1997-2011 The PHP Group\nZend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies\n\nphp.ini - allow_url_fopen = ON\n\nIF remove the @ before file_get_contents()\n\ngetting the YAML file from the repo...\n\nWarning: file_get_contents(): Unable to find the wrapper \"https\" - did you forge\nt to enable it when you configured PHP? in D:\\EasyPHP-5.3.8.1\\www\\site\\script\\ua-parser-master\\php\\uaparser-cli.php on line 71\n\nWarning: file_get_contents(https://raw.github.com/tobie/ua-parser/master/regexes\n.yaml): failed to open stream: Invalid argument in D:\\EasyPHP-5.3.8.1\\www\n\\site\\script\\ua-parser-master\\php\\uaparser-cli.php on line 71\nfailed to get the file...\n\nnow what shall I do ,thx\n. ",
    "jsgoupil": "@Panda77 Enable the php_openssl.dll extension\n. @Panda77 Enable the php_openssl.dll extension\n. ",
    "pravindahal": "Sorry about the white space mess. Perhaps my IDE changed newlines to Windows format. Not sure though.\n\nWe have some custom user agents implemented for internal use only and we wanted to detect when they made requests too (along with the regular ones). It didn't make sense to contribute the regexes back because those user agents will not be making requests to any other servers anyway. So, I thought the changes I made would help those who have similar situation like mine.\n\nThank you for understanding.\n. Sorry about the white space mess. Perhaps my IDE changed newlines to Windows format. Not sure though.\n\nWe have some custom user agents implemented for internal use only and we wanted to detect when they made requests too (along with the regular ones). It didn't make sense to contribute the regexes back because those user agents will not be making requests to any other servers anyway. So, I thought the changes I made would help those who have similar situation like mine.\n\nThank you for understanding.\n. ",
    "mockturtl": ":+1: \n. :+1: \n. ",
    "obeattie": "If you do merge this in, it would be great to get a new Python version on Pypi, since I really could do with using this in an open-source of mine, and it would be great not to have to use my forked Git URL.\n. Has the option of simply compiling the YAML to JSON as part of `sdist` been considered? Seems far simpler (and better for the user, who may not need/want a YAML parser installed)\n. If you do merge this in, it would be great to get a new Python version on Pypi, since I really could do with using this in an open-source of mine, and it would be great not to have to use my forked Git URL.\n. Has the option of simply compiling the YAML to JSON as part of `sdist` been considered? Seems far simpler (and better for the user, who may not need/want a YAML parser installed)\n. ",
    "NikolayFrantsev": "Probably my code does not fully matches your personal style guides, but at least older version contains trailing white spaces, unneeded variables and generally too wordy.\n\nAlso I does not really understand readability problems with 30 lined file.\n. Probably my code does not fully matches your personal style guides, but at least older version contains trailing white spaces, unneeded variables and generally too wordy.\n\nAlso I does not really understand readability problems with 30 lined file.\n. ",
    "3rd-Eden": "Net Application seems to have different data then statcounter http://gs.statcounter.com/;\n\n![Screen Shot 2013-01-11 at 16 48 26](https://f.cloud.github.com/assets/28071/60291/78f1865a-5c06-11e2-803c-5eddfa6c19d8.PNG)\n. Net Application seems to have different data then statcounter http://gs.statcounter.com/;\n\n![Screen Shot 2013-01-11 at 16 48 26](https://f.cloud.github.com/assets/28071/60291/78f1865a-5c06-11e2-803c-5eddfa6c19d8.PNG)\n. ",
    "garrypolley": "Thinking about this from the perspective of reading in thousands to millions of log files, having the UA strings ordered in the yaml file by most common would be awesome.  \n\nThe ordering I am I talking about, and I think others are too, is to put the most common first in the list.  No fancy tree branching, just a list that is ordered by most common UA string first.  \n\nSome possible issues and/or pain points of this update:\n1. If the order currently matters right now for correct detection.\n2. If there are a lot of tests that depend on the order of the UA strings in the yaml file.\n3. Showing with empirical data that ordering does give a performance boost.\n. Thanks to some work by some team members we did see massive performance gains by memoizing the parse lookup.  \n\nOn an individual basis it _may_ be faster to change the ordering of the regex statements.  However, once we did the memoizing the change of order was not a measurable difference in speed.  Basically we keep it all in the same process while we look at the 100 thousand lines or so in the logs.  \n\nI'm not sure how much performance can be gained if a consumer still calls the regex match for each time.  Doing the memoizing lowered the time from about 10 seconds to 1 second.  Changing the order of the regexes almost didn't have an effect at that point.  \n. > So, why don't we memoise and cache rather than changing the order? ;)\n\n@Ironholds  I see two use cases:\n1. Calling the `parse` to get the useragent string one time across many processes (not sure memoizing can happen here).\n2. Calling the `parse` to get the useragent string many times in one process\n\nI think point 2 is a good candidate for memoizing, and it could potentially be added to the `Parse` class.  I think point 1 may not benefit too much with either change.  \n\nMy biggest concern with adding the memoizing to the `Parse` class would be thread safety. I don't think it matters though, because the definition of a useragent string won't be different between threads.  \n. Thinking about this from the perspective of reading in thousands to millions of log files, having the UA strings ordered in the yaml file by most common would be awesome.  \n\nThe ordering I am I talking about, and I think others are too, is to put the most common first in the list.  No fancy tree branching, just a list that is ordered by most common UA string first.  \n\nSome possible issues and/or pain points of this update:\n1. If the order currently matters right now for correct detection.\n2. If there are a lot of tests that depend on the order of the UA strings in the yaml file.\n3. Showing with empirical data that ordering does give a performance boost.\n. Thanks to some work by some team members we did see massive performance gains by memoizing the parse lookup.  \n\nOn an individual basis it _may_ be faster to change the ordering of the regex statements.  However, once we did the memoizing the change of order was not a measurable difference in speed.  Basically we keep it all in the same process while we look at the 100 thousand lines or so in the logs.  \n\nI'm not sure how much performance can be gained if a consumer still calls the regex match for each time.  Doing the memoizing lowered the time from about 10 seconds to 1 second.  Changing the order of the regexes almost didn't have an effect at that point.  \n. > So, why don't we memoise and cache rather than changing the order? ;)\n\n@Ironholds  I see two use cases:\n1. Calling the `parse` to get the useragent string one time across many processes (not sure memoizing can happen here).\n2. Calling the `parse` to get the useragent string many times in one process\n\nI think point 2 is a good candidate for memoizing, and it could potentially be added to the `Parse` class.  I think point 1 may not benefit too much with either change.  \n\nMy biggest concern with adding the memoizing to the `Parse` class would be thread safety. I don't think it matters though, because the definition of a useragent string won't be different between threads.  \n. ",
    "Ironholds": "We're gathering number 3, and yes, the order definitely matters right - that's why we have to accept either additional complexity (which is fine. It's the sort of thing JSON and YAML are designed for) or inaccuracy.\n. So, why don't we memoise and cache rather than changing the order? ;)\n. Yep, although if we're talking about the Python implementation specifically, implementations are meant to follow a common standard. I'm not sure if that applies to things that don't change the user outcome. @tobie ?\n. Alrighty! @mhemesath , patch away :D\n. Issues not addressed since May 2013, so closing.\n. In that case the bits that can be fixed have patches in and this is..unnecessarily open, I guess?\n\nThanks for the patch. Closing :)\n. It would be really, really great to have this supported; as it is the ua-parser systemically misses iOS versions :(.\n. @antonioribeiro @commenthol @mrjgreen @puzrin @toolmantim etc: we've started [an IRC channel](https://webchat.freenode.net/?channels=#ua-parser) for realtime discussion and [a mailing list](https://groups.google.com/forum/#!forum/ua-parser) to discuss issues that come up, and the first thing we should work on is where this project is going architecturally. Please join up and join in!\n. I like these ideas very much! Can I suggest merging your Lua port back into ua-parser so that others can use it, as well?\n. @switzer we're kicking off a conversation about architectural changes, and I think yours (particularly the ordering by popularity, where possible) are good'uns. Want to [chip in?](https://groups.google.com/forum/#!forum/ua-parser)\n. @sandinmyjoints examining. Are you actively porting the yaml file updates to the live example?\n. Er. Git clone, grab the YAML file, upload it to your machine ;p. I'm not saying \"update automatically and live\", just an assurance that updates are being ported on a regular basis: otherwise linking is probably not tremendously useful (a live example of a project that doesn't actually provide represent the current state of the project...)\n. Sounds reasonable! Okay, will merge :). Thanks for the submission, and sorry it took so long to get comment - I'm going to make an effort to try and respond speedily to new issues and pull requests.\n. @sjiang comments/assists? Otherwise I'll probably have to just close this off (bug in the patch nobody here knows how to fix + substantially out of date).\n. Rebase it and solve for the conflict, and I'll trust you to know what you're doing around the pig setup. Solved :).\n. @nielsbasjes Yeah, not since the set of patches we merged, ooh, last week ;p.\n\nYes, historically it's been a struggle for collaborators to find the time to merge patches and do work. We solved for this by adding more collaborators. Let me know if you're interested in rewriting and I'll merge if in if it passes the tests. Alternately, let me know if you're not interested in the timesink and I'll close it. Up to you.\n. I've actually put together a pseudo-R port just by writing a quick rPython-dependent function. I can see a good argument for a 'pure' R port...but I also worry it'd be hella-slow.\n. Makes sense! I guess when in doubt, there's always 'implement big chunks of it in C' ;p.\n. Indeed, but then you're creating more dependencies, and also inconsistencies in how things are called. I'm thinking particularly of the Rcpp sourcing changes in the last couple of versions, which aren't workable on the current Ubuntu LTS....which is what a lot of web properties consider the staple for their machines. Anyway, I'll quit overthinking; an R version would be awesome to have :D\n. Okay, if nobody else is already doing it, I'm going to work on this next weekend; I've got a pretty good idea of how to write a raw R version, and we can iterate from there on using C++ to natively vectorise the operation.\n. Nope; took one look, winced, and realised it was a lot cheaper (and a lot faster) to build a conduit to Python :/.\n. [Now done](https://github.com/ua-parser/uap-r) largely pulling from the C++ implementation and using ua-parser to tie the two together. @zachmayer ping.\n. Just going to straight merge; by definition this can't break anything if it doesn't work ;p.\n@asuhan thanks for the submission! Sorry it took so long to get handled.\n. Grand!\n. #434 should (should) fix this.\n. [floydsoft's commit](https://github.com/tobie/ua-parser/commit/5becf71c895e9cba77f761d11ece5995a24b7493) should've fixed this issue.\n. #434 I believe handles the same thing.\n. I..wish there was some kind of thanks or upvote button on github; this is one of my two bugbears with ua-parser, and the only one of the two I couldn't easily fix at my end...and you've patched it. Thank you so much :).\n\n(Someone approve this darn pull already ;p)\n. Quite a few, yes, and in most cases. They're relatively distinguishable from each other if different device/family results for different feed readers would be desired. I've got a 5 billion entry requestlog from yesterday sat in front of me if you want me to pull out examples.\n. Well, yes. See \"Does this seem useful to anyone? _If so, I'll take a stab at implementing it myself._\" (emphasis mine)\n. Can I get this merged, please? :)\n. Thanks! I've got a couple more spiders I can now throw in :).\n. Ditto with the \"Submit a Bug\" link at the bottom, \n. Sure; one moment whole I gradually wake up ;).\n. Done, passed.\n. \"Squashing\"?\n. Gotcha!\n. Thanks!\n. @moshjeier what's with the random W in \"Firefox Mobile\"?\n. Alright, no reply and no github activity in a long while; closing.\n. Merged; sorry for the delay!\n. Soo..what's with the big delay in people closing pull requests?\n. @tobie ?\n. Danke! :).\n\nWould it make sense to add extra members to the project who are more available, with the understanding that it's primarily for regex improvements rather than substantive codebase changes?\n. Gotcha. Still, most welcome :). Would setting up a non-github-issues way of collaborating be an idea? That way we can sort of get people together and have long-form conversations around making that change (if there's already a mailing list or something and I've missed it, my bad)\n. Looks good to me - @sjiang do you have any comments as the Java maintainer?\n. Looks now fixed by #434 \n. Oh balls. extraneous pipe. Wait one ;p.\n. So this, then, is #323 still - not an independent issue. Sorry about the lack of updates - there's some work going on to simplify and improve the project structure which should make problems like this easier to resolve.\n. Yes, it does appear to work in Python 3. I'm not sure if this is a deliberate or accidental feature ;p. I'll push in some new classifiers.\n. @klimashkin see commenthol's tweak suggestion.\n. Danke! :)\n. @emidln 's patch should have fixed this, I believe - #434 \n. What would the utility of a client-side ua parser be? Unless you mean passing the information back to the server and simply foisting the computational challenge off on users.\n. Well, it certainly wouldn't be applicable for non-JS clients, but ;p. I don't know in what circumstances it would be possible or not possible, but I don't think a client side version is likely to be developed soon. And, speaking as a user rather than a ua-parser-sort-of-maintainer, I also don't think it's fair. You're streaming them kind of a lot of data - all the JS, the entire YAML file - to do a single check of their user agent.\n. @nidico spider is now a value in the device family entry.\n. Hrm. Presumably the solution here would be actively moving the IE identifying regexes in the YAML file so that they're first; can anyone think of a reason why this would bork things? Other plausible browser strings that are dependent on IE being after [other regex]?\n. Thanks :)\n. @ryancwarren thanks for the patch! :)\n. Good commit! @tobie  you're the maintainer of the JS version; looks good?\n. @angelajiang does the dataset actually contain device_type?\n. @angelajiang I think it would! Actually I'm working on a dataset mapping ua-parser's devices to device_types right now. My worry is whether the YAML file is set up to allow for this easily (are there existing regular expressions that catch devices with varying types?).\n. @gquinones thanks for the great patch! Merged :).\n. Awesome! Thanks!\n. Failing OsParser fixed in a distinct patch, and as a result these can't be merged; please do resubmit if other changes are useful, though :).\n. @emidln Thanks for the patch! :)\n. _blinks_. You're running out of memory trying to allocate 20 bytes? Could this be a system problem?\n. The relevant Composer bug thread is suggesting (1) it's an error with your Composer setup and (2) your PHP setup. Try fixing those and see what happens?\n. @parcolee did the PHP changes help?\n. Er. What? They're the same file. One is just stored \"raw\" - i.e., with the formatting in the file, rather than the formatting in the file subject to GitHub's frontend formatting.\n. They should contain exactly the same things. \"raw\", again, means, \"give me the file as it actually appears, not as it appears with GitHub's formatting\". They should contain exactly the same things. If you download the first file, and copy the content of the second page into a file, they should be identical files. There's no difference.\n. Well, the current regex shouldn't catch that; what's it providing for os/browser/etc?\n. \"passes all tests of javascript and python\"? I'm not a perl programmer so absent doing exactly what you did I'm not entirely sure what I can do there ;p. \n\nThe first user agent provided by percolee indeed produces Other/Android/Android, in python. The second one actually catches a device type. This is to unsurprising because the first agent isn't actually a browser - it's a component of Samsung's Android OS variant used to process audio and video files. They evidently haven't standardised the user agent there, as they have in a lot of other places.\n. For the second one see \"when broswer HTML5 audio player ( tag) load a forced download php file (output content-type audio/mpeg or audio/ogg), I caught from there.\nif just a simple text hyperlink ( tag) to the same forced download php url, it caught:\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\"\n\nI mean literally, I read the YAML. The current regex looks for SAMSUNG in all caps for Samsung devices, because that's how Samsung have standardised theirs; evidently they didn't standardise for in-OS modules.\n. Okay. You say \"would\" - What does the first UA (SAMSUNG SM-N...) currently come out as?\n. No. I mean that you're saying \"X user agent would become Y breakdown\". Hypotheticals are nice but how does it currently come out?\n. Thanks!\n. @cxmcc Mind crunching it into a single commit?\n. @cxmcc thanks! And thanks for the patch :)\n. Can you describe the spider?\n. Good point! How odd. I've run some tests at my end and it seems to be catching the appropriate bots even when they're removed from being explicitly noted in the regex. Lemme make a patch...\n. @cjnoyes Merging is not possible; could you rebase and resubmit?\n. Hrm; build fail. Ideas?\n\n(Also, please compress into a single commit, if possible?)\n. Yeah; it looks like [this test](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/test_device.yaml#L246-L247) is causing the problem. Your regex is including the /1.0, whereas the existing device test isn't expecting it. Hrn. I guess the test was designed for [this existing regex](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L1227-L1230)?\n. Uhm: https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L627-L628 - can you give an example string that isn't being caught?\n. Gotcha. cool! Thanks :)\n. Thanks!\n. The only recent update was [this](https://github.com/tobie/ua-parser/commit/3d7dff1507b455d172c7e53d6156c01765fd7d76#diff-a49fec7741e4d88d338f7d2f28c20dda), and I can't see any changes to the range of syntax found in the file.\n. Also note that ua-parser is deprecated as a place to throw new changes.\n. Thanks! Sorry for such a long delay.\n. I did:\n device      os browser major_version minor_version\nOther Solaris   Other         Other         Other\n\nWhat exact functionality is broken?\n. @floydsoft what's passed?\n. If you mean \"the code works\": sure. But again, I'm not seeing, in the existing implementation, errors caused with the example string you've provided. What should be happening that isn't?\n. Okay; this makes it more clear ;p. So, in the future, you want a comment like \"In python 3.4, match detection breaks when...\"\n. Well, I'm also an analyst and I've submitted a lot; it's not particularly hard :). But I'll go through and take a look. I'm slightly confused by what you mean by \"detected as mobile\": the browser, as \"Mobile [browsername]\"? Or distinguishing desktop/mobile devices? Because ua-parser doesn't do the latter.\n. Looks like it to me! Want to write a patch?\n\nThanks for finding them!\n. Thanks!\n. A hard question! All \"other\" means is \"the user agent does not give enough information to identify a device\". This could mean:\n1. It's a desktop device, or;\n2. It's a mobile device that the regexes don't know about yet, or;\n3. It's a mobile device with a silly user agent.\n\nI'm not aware of any work that looks at the rate of each. But I'm currently working on a repository that matches ua-parser's \"device\" output to device_class, where that's tablet/phone/other. Something you might want to help out with/be notified about?\n. (Ignoring the unmatched parens, which I'll fix if people don't disapprove of the underlying idea)\n. Huh. And the test still fails, but I can't see /where/. Anyone got thoughts?\n. Hmn; define \"headless\" in this context? I'm trying to pick a commonsensical word. And yeah, we should separately have the travis output report more usefully; bah :/.\n. Hrm. Scrapy example needs fixing, but I can't for the life of me work out why libwww-perl/5.834 is triggering \"generic feature phone\" (the numeric values?)\n. Not directly mergeable; could you rebase and ideally crunch it into fewer commits?\n. Yeep. Or not :(\n\nOn Thu, Nov 6, 2014 at 4:58 AM, commenthol notifications@github.com wrote:\n\n> Sorry for selecting the wrong branch. Now everything should do.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/466#issuecomment-61953882.\n. @commenthol okies! Lemme know when you work it out and I'm happy to merge - this is an awesome addition. Totally in agreement on #304 - we were meant to have a meeting to work this out but I never found the time (I imagine tobie just had it with other people, instead ;p.)\n\nI'm tempted to say we might want to look into a project mailing list or...something, to make large-scale decisions.\n. Merging, hoping nothing bad happens!\n. @commenthol so, @tobie and I have been discussing this (as part of a wider conversation about how to make ua-parser more sane from an organisational/architectural end) and he pointed out (quite rightly) that it's a pretty big architectural shift. We're starting off an Actual Honest To Gods Discussion Venue for working out where the project is going - tobie's going to /temporarily/ revert this, and then we can kick off the bigger conversation about what's going to happen, what you'd like, what I'd like, what random user 456 would like, and hopefully fit this into that to boot. Sorry if this feels like nixing a ton of hard work; it's tremendously appreciated and really cool :D.\n. Do you have an example user agent?\n. I'm confused; that _does_ produce a valid output:\n\n> device    os   browser major_version minor_version\n> Other Linux Iceweasel            35             0\n\nAre you instead arguing that it should be considered equivalent to Firefox?\n. So, that's a \"yes\". I don't really have an opinion on this - I think it's reasonable given the use cases ua-parser is supposed to have. @commenthol, @tobie ?\n. I think that's a fair assessment. Capabilities are best extracted by looking at the provided engine information, which we don't parse except to extract browser implementation names.\n. Well, it has a domain - http://www.uaparser.org/\n. We're currently working through a rework of the project, so the current version is not likely to remain \"the version\" for long. I'd suggest popping over to the [org as a whole](https://github.com/ua-parser) or the associated mailing list and asking there?\n. @jdalton: patched in [the new org/library](https://github.com/ua-parser/uap-core/pull/4)\n. Yay! @selwin have you seen the ua-parser org? We're trying to push people over to that.\n. Thanks!\n. Yes; the current implementation is dependent on the libyaml 0.3 API, not the 0.5, which has a different structure (hence lacking GetNextDocument). \n. If you want to rewrite the C++? Sure - but that's probably not necessary since 0.3 and 0.5 are very deliberately released as distinct distributions, and can exist side-by-side.\n. I am not responsible for that particular decision ;p. And....well, read them? Yes, they're different files containing different methods for different classes. You should probably be mostly interacting with main (or using it as an example of the internal workings, at least).\n. Feel free to submit patches; again, I didn't write it, I just beat it with a stick until it works.\n. You opened two different issues. Closing this one.\n. It can; see [this repository](https://github.com/ua-parser/uap-core) for the current YAML file.\n\nI'm going to take this bug as yet another reminder that we have to actually point people to the new repo, and update the readme et al now :/\n.  The project has been split up into multiple repositories; could you resbumit your pull request [here](https://github.com/ua-parser/uap-core)?\n. Ta!\n. I suspect no. @tobie ?\n. ...yes. What do you think it should be doing?\n. And it knows that it's a desktop how? And, PC is a specific model, how?\n\nThe entire point of \"other\" is \"the user agent does not include an explicit string identifying the device model, so we can't provide that device model\". Desktop browsers don't do that; there's no way to determine if it's a PC, or a Mac, or a netbook, or, as you note, an older phone. The parser can only work from the information that's actually in the user agent.\n. Except the goal is to identify specific device models, not device _classes_, and you haven't explained how it would \"simply\" do this (or provided example user agents which would allow this information to be extracted, and have a problem).\n. Except, again, the goal is to identify devices, not device classes, and OS is not uniformly a mapper to the actual hardware. Nor is it uniformly a mapper to a single class of hardware.\n. No; there isn't a project for that that I'm aware of. It has been discussed as a future feature but we haven't started work on it yet.\n. What should it be?\n\nOn Wednesday, 28 January 2015, Max Baldin notifications@github.com wrote:\n\n> Hello!\n> \n> Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.0.143.1-Gen4_11004910) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Sa\n>  fari/533.16 Silk-Accelerated=true\n> \n> This user agent detects as\n> \n> object(UAParser\\Result\\Client)#6 (4) {  [\"ua\"]=>  object(UAParser\\Result\\UserAgent)#7 (4) {    [\"major\"]=>    string(1) \"1\"    [\"minor\"]=>    string(1) \"0\"    [\"patch\"]=>    string(3) \"143\"    [\"family\"]=>    string(11) \"Amazon Silk\"  }  [\"os\"]=>  object(UAParser\\Result\\OperatingSystem)#8 (5) {    [\"major\"]=>    NULL    [\"minor\"]=>    NULL    [\"patch\"]=>    NULL    [\"patchMinor\"]=>    NULL    [\"family\"]=>    string(7) \"Android\"  }  [\"device\"]=>  object(UAParser\\Result\\Device)#9 (3) {    [\"brand\"]=>    string(6) \"Amazon\"    [\"model\"]=>    string(6) \"Kindle\"    [\"family\"]=>    string(6) \"Kindle\"  }  [\"originalUserAgent\"]=>  string(173) \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.0.143.1-Gen4_11004910) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true\"}\n> \n> This is probably bug.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/494.\n\n## \n\nSent from my mobile computing device of Lovecraftian complexity and horror.\n. We're gathering number 3, and yes, the order definitely matters right - that's why we have to accept either additional complexity (which is fine. It's the sort of thing JSON and YAML are designed for) or inaccuracy.\n. So, why don't we memoise and cache rather than changing the order? ;)\n. Yep, although if we're talking about the Python implementation specifically, implementations are meant to follow a common standard. I'm not sure if that applies to things that don't change the user outcome. @tobie ?\n. Alrighty! @mhemesath , patch away :D\n. Issues not addressed since May 2013, so closing.\n. In that case the bits that can be fixed have patches in and this is..unnecessarily open, I guess?\n\nThanks for the patch. Closing :)\n. It would be really, really great to have this supported; as it is the ua-parser systemically misses iOS versions :(.\n. @antonioribeiro @commenthol @mrjgreen @puzrin @toolmantim etc: we've started [an IRC channel](https://webchat.freenode.net/?channels=#ua-parser) for realtime discussion and [a mailing list](https://groups.google.com/forum/#!forum/ua-parser) to discuss issues that come up, and the first thing we should work on is where this project is going architecturally. Please join up and join in!\n. I like these ideas very much! Can I suggest merging your Lua port back into ua-parser so that others can use it, as well?\n. @switzer we're kicking off a conversation about architectural changes, and I think yours (particularly the ordering by popularity, where possible) are good'uns. Want to [chip in?](https://groups.google.com/forum/#!forum/ua-parser)\n. @sandinmyjoints examining. Are you actively porting the yaml file updates to the live example?\n. Er. Git clone, grab the YAML file, upload it to your machine ;p. I'm not saying \"update automatically and live\", just an assurance that updates are being ported on a regular basis: otherwise linking is probably not tremendously useful (a live example of a project that doesn't actually provide represent the current state of the project...)\n. Sounds reasonable! Okay, will merge :). Thanks for the submission, and sorry it took so long to get comment - I'm going to make an effort to try and respond speedily to new issues and pull requests.\n. @sjiang comments/assists? Otherwise I'll probably have to just close this off (bug in the patch nobody here knows how to fix + substantially out of date).\n. Rebase it and solve for the conflict, and I'll trust you to know what you're doing around the pig setup. Solved :).\n. @nielsbasjes Yeah, not since the set of patches we merged, ooh, last week ;p.\n\nYes, historically it's been a struggle for collaborators to find the time to merge patches and do work. We solved for this by adding more collaborators. Let me know if you're interested in rewriting and I'll merge if in if it passes the tests. Alternately, let me know if you're not interested in the timesink and I'll close it. Up to you.\n. I've actually put together a pseudo-R port just by writing a quick rPython-dependent function. I can see a good argument for a 'pure' R port...but I also worry it'd be hella-slow.\n. Makes sense! I guess when in doubt, there's always 'implement big chunks of it in C' ;p.\n. Indeed, but then you're creating more dependencies, and also inconsistencies in how things are called. I'm thinking particularly of the Rcpp sourcing changes in the last couple of versions, which aren't workable on the current Ubuntu LTS....which is what a lot of web properties consider the staple for their machines. Anyway, I'll quit overthinking; an R version would be awesome to have :D\n. Okay, if nobody else is already doing it, I'm going to work on this next weekend; I've got a pretty good idea of how to write a raw R version, and we can iterate from there on using C++ to natively vectorise the operation.\n. Nope; took one look, winced, and realised it was a lot cheaper (and a lot faster) to build a conduit to Python :/.\n. [Now done](https://github.com/ua-parser/uap-r) largely pulling from the C++ implementation and using ua-parser to tie the two together. @zachmayer ping.\n. Just going to straight merge; by definition this can't break anything if it doesn't work ;p.\n@asuhan thanks for the submission! Sorry it took so long to get handled.\n. Grand!\n. #434 should (should) fix this.\n. [floydsoft's commit](https://github.com/tobie/ua-parser/commit/5becf71c895e9cba77f761d11ece5995a24b7493) should've fixed this issue.\n. #434 I believe handles the same thing.\n. I..wish there was some kind of thanks or upvote button on github; this is one of my two bugbears with ua-parser, and the only one of the two I couldn't easily fix at my end...and you've patched it. Thank you so much :).\n\n(Someone approve this darn pull already ;p)\n. Quite a few, yes, and in most cases. They're relatively distinguishable from each other if different device/family results for different feed readers would be desired. I've got a 5 billion entry requestlog from yesterday sat in front of me if you want me to pull out examples.\n. Well, yes. See \"Does this seem useful to anyone? _If so, I'll take a stab at implementing it myself._\" (emphasis mine)\n. Can I get this merged, please? :)\n. Thanks! I've got a couple more spiders I can now throw in :).\n. Ditto with the \"Submit a Bug\" link at the bottom, \n. Sure; one moment whole I gradually wake up ;).\n. Done, passed.\n. \"Squashing\"?\n. Gotcha!\n. Thanks!\n. @moshjeier what's with the random W in \"Firefox Mobile\"?\n. Alright, no reply and no github activity in a long while; closing.\n. Merged; sorry for the delay!\n. Soo..what's with the big delay in people closing pull requests?\n. @tobie ?\n. Danke! :).\n\nWould it make sense to add extra members to the project who are more available, with the understanding that it's primarily for regex improvements rather than substantive codebase changes?\n. Gotcha. Still, most welcome :). Would setting up a non-github-issues way of collaborating be an idea? That way we can sort of get people together and have long-form conversations around making that change (if there's already a mailing list or something and I've missed it, my bad)\n. Looks good to me - @sjiang do you have any comments as the Java maintainer?\n. Looks now fixed by #434 \n. Oh balls. extraneous pipe. Wait one ;p.\n. So this, then, is #323 still - not an independent issue. Sorry about the lack of updates - there's some work going on to simplify and improve the project structure which should make problems like this easier to resolve.\n. Yes, it does appear to work in Python 3. I'm not sure if this is a deliberate or accidental feature ;p. I'll push in some new classifiers.\n. @klimashkin see commenthol's tweak suggestion.\n. Danke! :)\n. @emidln 's patch should have fixed this, I believe - #434 \n. What would the utility of a client-side ua parser be? Unless you mean passing the information back to the server and simply foisting the computational challenge off on users.\n. Well, it certainly wouldn't be applicable for non-JS clients, but ;p. I don't know in what circumstances it would be possible or not possible, but I don't think a client side version is likely to be developed soon. And, speaking as a user rather than a ua-parser-sort-of-maintainer, I also don't think it's fair. You're streaming them kind of a lot of data - all the JS, the entire YAML file - to do a single check of their user agent.\n. @nidico spider is now a value in the device family entry.\n. Hrm. Presumably the solution here would be actively moving the IE identifying regexes in the YAML file so that they're first; can anyone think of a reason why this would bork things? Other plausible browser strings that are dependent on IE being after [other regex]?\n. Thanks :)\n. @ryancwarren thanks for the patch! :)\n. Good commit! @tobie  you're the maintainer of the JS version; looks good?\n. @angelajiang does the dataset actually contain device_type?\n. @angelajiang I think it would! Actually I'm working on a dataset mapping ua-parser's devices to device_types right now. My worry is whether the YAML file is set up to allow for this easily (are there existing regular expressions that catch devices with varying types?).\n. @gquinones thanks for the great patch! Merged :).\n. Awesome! Thanks!\n. Failing OsParser fixed in a distinct patch, and as a result these can't be merged; please do resubmit if other changes are useful, though :).\n. @emidln Thanks for the patch! :)\n. _blinks_. You're running out of memory trying to allocate 20 bytes? Could this be a system problem?\n. The relevant Composer bug thread is suggesting (1) it's an error with your Composer setup and (2) your PHP setup. Try fixing those and see what happens?\n. @parcolee did the PHP changes help?\n. Er. What? They're the same file. One is just stored \"raw\" - i.e., with the formatting in the file, rather than the formatting in the file subject to GitHub's frontend formatting.\n. They should contain exactly the same things. \"raw\", again, means, \"give me the file as it actually appears, not as it appears with GitHub's formatting\". They should contain exactly the same things. If you download the first file, and copy the content of the second page into a file, they should be identical files. There's no difference.\n. Well, the current regex shouldn't catch that; what's it providing for os/browser/etc?\n. \"passes all tests of javascript and python\"? I'm not a perl programmer so absent doing exactly what you did I'm not entirely sure what I can do there ;p. \n\nThe first user agent provided by percolee indeed produces Other/Android/Android, in python. The second one actually catches a device type. This is to unsurprising because the first agent isn't actually a browser - it's a component of Samsung's Android OS variant used to process audio and video files. They evidently haven't standardised the user agent there, as they have in a lot of other places.\n. For the second one see \"when broswer HTML5 audio player ( tag) load a forced download php file (output content-type audio/mpeg or audio/ogg), I caught from there.\nif just a simple text hyperlink ( tag) to the same forced download php url, it caught:\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\"\n\nI mean literally, I read the YAML. The current regex looks for SAMSUNG in all caps for Samsung devices, because that's how Samsung have standardised theirs; evidently they didn't standardise for in-OS modules.\n. Okay. You say \"would\" - What does the first UA (SAMSUNG SM-N...) currently come out as?\n. No. I mean that you're saying \"X user agent would become Y breakdown\". Hypotheticals are nice but how does it currently come out?\n. Thanks!\n. @cxmcc Mind crunching it into a single commit?\n. @cxmcc thanks! And thanks for the patch :)\n. Can you describe the spider?\n. Good point! How odd. I've run some tests at my end and it seems to be catching the appropriate bots even when they're removed from being explicitly noted in the regex. Lemme make a patch...\n. @cjnoyes Merging is not possible; could you rebase and resubmit?\n. Hrm; build fail. Ideas?\n\n(Also, please compress into a single commit, if possible?)\n. Yeah; it looks like [this test](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/test_device.yaml#L246-L247) is causing the problem. Your regex is including the /1.0, whereas the existing device test isn't expecting it. Hrn. I guess the test was designed for [this existing regex](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L1227-L1230)?\n. Uhm: https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L627-L628 - can you give an example string that isn't being caught?\n. Gotcha. cool! Thanks :)\n. Thanks!\n. The only recent update was [this](https://github.com/tobie/ua-parser/commit/3d7dff1507b455d172c7e53d6156c01765fd7d76#diff-a49fec7741e4d88d338f7d2f28c20dda), and I can't see any changes to the range of syntax found in the file.\n. Also note that ua-parser is deprecated as a place to throw new changes.\n. Thanks! Sorry for such a long delay.\n. I did:\n device      os browser major_version minor_version\nOther Solaris   Other         Other         Other\n\nWhat exact functionality is broken?\n. @floydsoft what's passed?\n. If you mean \"the code works\": sure. But again, I'm not seeing, in the existing implementation, errors caused with the example string you've provided. What should be happening that isn't?\n. Okay; this makes it more clear ;p. So, in the future, you want a comment like \"In python 3.4, match detection breaks when...\"\n. Well, I'm also an analyst and I've submitted a lot; it's not particularly hard :). But I'll go through and take a look. I'm slightly confused by what you mean by \"detected as mobile\": the browser, as \"Mobile [browsername]\"? Or distinguishing desktop/mobile devices? Because ua-parser doesn't do the latter.\n. Looks like it to me! Want to write a patch?\n\nThanks for finding them!\n. Thanks!\n. A hard question! All \"other\" means is \"the user agent does not give enough information to identify a device\". This could mean:\n1. It's a desktop device, or;\n2. It's a mobile device that the regexes don't know about yet, or;\n3. It's a mobile device with a silly user agent.\n\nI'm not aware of any work that looks at the rate of each. But I'm currently working on a repository that matches ua-parser's \"device\" output to device_class, where that's tablet/phone/other. Something you might want to help out with/be notified about?\n. (Ignoring the unmatched parens, which I'll fix if people don't disapprove of the underlying idea)\n. Huh. And the test still fails, but I can't see /where/. Anyone got thoughts?\n. Hmn; define \"headless\" in this context? I'm trying to pick a commonsensical word. And yeah, we should separately have the travis output report more usefully; bah :/.\n. Hrm. Scrapy example needs fixing, but I can't for the life of me work out why libwww-perl/5.834 is triggering \"generic feature phone\" (the numeric values?)\n. Not directly mergeable; could you rebase and ideally crunch it into fewer commits?\n. Yeep. Or not :(\n\nOn Thu, Nov 6, 2014 at 4:58 AM, commenthol notifications@github.com wrote:\n\n> Sorry for selecting the wrong branch. Now everything should do.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/466#issuecomment-61953882.\n. @commenthol okies! Lemme know when you work it out and I'm happy to merge - this is an awesome addition. Totally in agreement on #304 - we were meant to have a meeting to work this out but I never found the time (I imagine tobie just had it with other people, instead ;p.)\n\nI'm tempted to say we might want to look into a project mailing list or...something, to make large-scale decisions.\n. Merging, hoping nothing bad happens!\n. @commenthol so, @tobie and I have been discussing this (as part of a wider conversation about how to make ua-parser more sane from an organisational/architectural end) and he pointed out (quite rightly) that it's a pretty big architectural shift. We're starting off an Actual Honest To Gods Discussion Venue for working out where the project is going - tobie's going to /temporarily/ revert this, and then we can kick off the bigger conversation about what's going to happen, what you'd like, what I'd like, what random user 456 would like, and hopefully fit this into that to boot. Sorry if this feels like nixing a ton of hard work; it's tremendously appreciated and really cool :D.\n. Do you have an example user agent?\n. I'm confused; that _does_ produce a valid output:\n\n> device    os   browser major_version minor_version\n> Other Linux Iceweasel            35             0\n\nAre you instead arguing that it should be considered equivalent to Firefox?\n. So, that's a \"yes\". I don't really have an opinion on this - I think it's reasonable given the use cases ua-parser is supposed to have. @commenthol, @tobie ?\n. I think that's a fair assessment. Capabilities are best extracted by looking at the provided engine information, which we don't parse except to extract browser implementation names.\n. Well, it has a domain - http://www.uaparser.org/\n. We're currently working through a rework of the project, so the current version is not likely to remain \"the version\" for long. I'd suggest popping over to the [org as a whole](https://github.com/ua-parser) or the associated mailing list and asking there?\n. @jdalton: patched in [the new org/library](https://github.com/ua-parser/uap-core/pull/4)\n. Yay! @selwin have you seen the ua-parser org? We're trying to push people over to that.\n. Thanks!\n. Yes; the current implementation is dependent on the libyaml 0.3 API, not the 0.5, which has a different structure (hence lacking GetNextDocument). \n. If you want to rewrite the C++? Sure - but that's probably not necessary since 0.3 and 0.5 are very deliberately released as distinct distributions, and can exist side-by-side.\n. I am not responsible for that particular decision ;p. And....well, read them? Yes, they're different files containing different methods for different classes. You should probably be mostly interacting with main (or using it as an example of the internal workings, at least).\n. Feel free to submit patches; again, I didn't write it, I just beat it with a stick until it works.\n. You opened two different issues. Closing this one.\n. It can; see [this repository](https://github.com/ua-parser/uap-core) for the current YAML file.\n\nI'm going to take this bug as yet another reminder that we have to actually point people to the new repo, and update the readme et al now :/\n.  The project has been split up into multiple repositories; could you resbumit your pull request [here](https://github.com/ua-parser/uap-core)?\n. Ta!\n. I suspect no. @tobie ?\n. ...yes. What do you think it should be doing?\n. And it knows that it's a desktop how? And, PC is a specific model, how?\n\nThe entire point of \"other\" is \"the user agent does not include an explicit string identifying the device model, so we can't provide that device model\". Desktop browsers don't do that; there's no way to determine if it's a PC, or a Mac, or a netbook, or, as you note, an older phone. The parser can only work from the information that's actually in the user agent.\n. Except the goal is to identify specific device models, not device _classes_, and you haven't explained how it would \"simply\" do this (or provided example user agents which would allow this information to be extracted, and have a problem).\n. Except, again, the goal is to identify devices, not device classes, and OS is not uniformly a mapper to the actual hardware. Nor is it uniformly a mapper to a single class of hardware.\n. No; there isn't a project for that that I'm aware of. It has been discussed as a future feature but we haven't started work on it yet.\n. What should it be?\n\nOn Wednesday, 28 January 2015, Max Baldin notifications@github.com wrote:\n\n> Hello!\n> \n> Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.0.143.1-Gen4_11004910) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Sa\n>  fari/533.16 Silk-Accelerated=true\n> \n> This user agent detects as\n> \n> object(UAParser\\Result\\Client)#6 (4) {  [\"ua\"]=>  object(UAParser\\Result\\UserAgent)#7 (4) {    [\"major\"]=>    string(1) \"1\"    [\"minor\"]=>    string(1) \"0\"    [\"patch\"]=>    string(3) \"143\"    [\"family\"]=>    string(11) \"Amazon Silk\"  }  [\"os\"]=>  object(UAParser\\Result\\OperatingSystem)#8 (5) {    [\"major\"]=>    NULL    [\"minor\"]=>    NULL    [\"patch\"]=>    NULL    [\"patchMinor\"]=>    NULL    [\"family\"]=>    string(7) \"Android\"  }  [\"device\"]=>  object(UAParser\\Result\\Device)#9 (3) {    [\"brand\"]=>    string(6) \"Amazon\"    [\"model\"]=>    string(6) \"Kindle\"    [\"family\"]=>    string(6) \"Kindle\"  }  [\"originalUserAgent\"]=>  string(173) \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.0.143.1-Gen4_11004910) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true\"}\n> \n> This is probably bug.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/494.\n\n## \n\nSent from my mobile computing device of Lovecraftian complexity and horror.\n. ",
    "mhemesath": "I think memoizing is a good idea, if there are any concerns it could be off or on by default and allow an override.\n. I think memoizing is a good idea, if there are any concerns it could be off or on by default and allow an override.\n. ",
    "cmr": "https://github.com/snowshoe/snowshoe\n. I don't have a fix. Where would a fix be applied? I don't know every language that is in there. Which is used by browserscope, python?\n. Embarassed to say I didn't read the readme, should have done that :(\n\nAnyway, pushed over in the PR.\n. How about #164 \n. https://github.com/snowshoe/snowshoe\n. I don't have a fix. Where would a fix be applied? I don't know every language that is in there. Which is used by browserscope, python?\n. Embarassed to say I didn't read the readme, should have done that :(\n\nAnyway, pushed over in the PR.\n. How about #164 \n. ",
    "commenthol": "I searched all my ua-strings and have only found UP.Browser user-agents using the scheme discussed using `6.2_7.2.7`\n\nWhat is interesting to note is, that `2_7.2.7` is a repeated `2.7`. \nI suppose the right version intended is `6.2.7` as before and after (next is `6.3.0`) all version info is using `[0-9].[0-9].[0-9]`.\n\nShortened list of segmented UA-s:\n\n```\nUP.Browser/6.2.3.9.j.1.107-20081119\nUP.Browser/6.2_7.2.7.1.K.1.5.1.108\n...\nUP.Browser/6.2_7.2.7.1.K.7.113\nUP.Browser/6.3.0\n```\n. From my point of view the Generic Smartphone rule should be changed to\n- regex: '(Symbian|\\bS60\\b|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|^N97-[14]|(webOS/|PalmOS)'\n  device_replacement: 'Generic Smartphone'\n  brand_replacement: 'Generic'\n  model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\nThis will solve the issue. I can update PR #302 accordingly to solve this.\n. Detection if IE11 and Windows 8.1 is already solved, The netvibes bot with tests is missing yet.\nA User-Agent for tests could be\n`Netvibes (http://www.netvibes.com)`\n. All should be solved now...\n. Is there any need to distinguish between 32 and 64bit versions? \nIf so we would need to adapt Windows NT 6,7 versions as well. `WOW64` could be used as marker.\nWhat about *Unixes `Linux x86_64`, Mac OSX?\n. Can't you do this \"grouping\" of Os-es outside the scope of ua-parser?\nMeans, use some program which combines your required info from `os.family`.  \nBy the way, isn't that grouping already present? Well not for Windows due to Microsofts special versioning, but for the others?\n. PR obsolete as included in #285\n. Hi, \nwhat a coincidence, just saw the issue posted and where amazed that tv-set expose a unique UA.\nThanks for the message.\nI understood the meaning of device that way: The \"device\" is physical, so that means to me that I would buy a Sony or Panasonic TV but not a \"HbbTV\". I would see HbbTV as the UA but not as device. \nDoes that make sense to you?\n. As being \"consistently inconsistent\" this might break backwards compatibility in some of the cases anyhow. The case is that some of device.family contains already the \"brand\" but some do not. \nOne possibility is to introduce a \"brand_replacement\" in the \"device_parsers\" but that would mean that every parser needs to change the parsing logic. The approach within this branch tries to avoid this.\nI do not know, but in the later it might get more and more confusing for further contributors to consider then \"outdated\" backward compatibility values with good replacement values.\nTo avoid \"confusing\" values I would propose to write a small code which maintains the backwards compatibility for those affected.\nE.g. \n\n```\nif (device.family === \"Apple iPad\") {\n    device.family = \"iPad\";\n} \n```\n\nThe affected devices are currently \"Nokia Lumia\", \"Amazon Kindle\", \"Apple iP...\" and \"Samsung GT-\".\n\nIn the later it would be good to separate the values \"brand\" and \"model\" from \"family\" and build \"family\" by concatenation. But ihmo we need to introduce multiple replacements in the device_parsers first such to avoid an unnecessary explosion of additional regexes to determine \"brand\" and \"model\".\n. Last push on branch \"brand_model\" includes #271 and #281 merges now.\n. Please ignore proposal above. It would be too complicated to decide which type (new or old) of \"device.family\" to use.\nNow two keys \"brand\" and \"model\" have been introduced next to the existing \"family\". This is added to the device parser (currently only for JS).\n\"family\" can be obtained by concatenation of \"brand\" and \"model\" in most of the cases. The established value of \"family\" is left untouched like for iPhone,iPad,.. or Kindle. \n. de-noised now ... sorry\ntests for js and perl run. I will also push PR on HTTP-UA-Parser.\n. Thanks. I have left the device_replacement as is while introducing brand and model.\nI am currently reworking the whole device parsing by sorting in brand and model at the moment as I am interested to resolve the tons of unclassified android phones and tablets. So there will be a lot of new devices which haven't been detected so far. As some of the regex expressions do cause false positives I won't be able to avoid breaking backwards compatibility for some devices as this highly depends on the amount of user-agent strings available for tests. The current test suite is quite poor with only 400 strings. \nIn your opinion on which set of user-agent strings the backwards compat story shall be measured? \n. To progress with the backwards compat story I have added some tests to prove that the latest proposal is in fact backwards compatible. More tests will follow. Pls check the added file test_device_compatibility.csv. \nThe same results should be shown if these tests are run with the current regexes.yaml on master.\n. Sorry for pushing \"Close & Comment\" by accident. I am still with this PR :)\n. Do you need any further input before merge? I have made some progress which I would like to get accepted in other pull request(s) as there are quite some changes. You can have a look at them in my forks master branch.\n\nTobie Langel notifications@github.com schrieb:\n\n> Any news?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23676516\n. The problem is related to the python parser which lacks the multi replacement stuff. Unfortunately I cannot help with this due to lack of python knowledge. Can anyone help here?\n\nTobie Langel notifications@github.com schrieb:\n\n> The Travis build is failing right now, so the first step would be to\n> fix that.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23683259\n. Thx. I will rebase and rerun tests on friday. \n\nLindsey Simon notifications@github.com schrieb:\n\n> Thing is - I fixed the python parser in 287 -\n> https://github.com/tobie/ua-parser/pull/287\n> \n> commenthol - maybe you just need to rebase and rerun the travis test?\n> Can\n> you link me to where you see the present failure? It's not impossible I\n> did\n> something incomplete, but I added unit tests w/ 287 so I think it\n> should be\n> good.\n> \n> On Tue, Sep 3, 2013 at 6:53 AM, Tobie Langel\n> notifications@github.comwrote:\n> \n> > /cc @elsigh https://github.com/elsigh ^\n> > \n> > \u2014\n> > Reply to this email directly or view it on\n> > GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-23713861\n> > .\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23732568\n. The python parser now also parses multiple replacements as same as the js-parser does.\nUnittests have been adapted to check brand and model. \n@elsigh: Can you please check the code. As this being my first python-coding there might be room for improvements.\n@tobie: How is the process for the required parser changes for all the other languages? I think I will not be able to dig into haskell or pig...\n. Got started.. Please find attached to the PR in [doc/specification.md](https://github.com/commenthol/ua-parser/blob/beee5ee882e6cdae7c5f33b56e8b9fe4822c86eb/doc/specification.md) an initial draft of the ua-parser specification.\nI would be very glad to hear your comments.\n. Hi all,\nThanks for the progress and support.\nThe Spec now has its own PR #300 for discussion.\n\nContributing to the discussion Google or Asus for a Nexus 7:\n- Clearly \"Google\" is the \"brand\"\n- while \"Asus\" is the \"manufacturer\"\n\nSwitching from \"brand\" to \"manufacturer\" would let \"Asus\" make the deal. Right? \n\nFor my opinion even \"Asus\" is the brand as this is written on the back of the device together with \"nexus\" (do own this device).\n\nBut what to do with Operator specific devices which are manufactured by someone which is unknown.\nE.g. \"Vodafone 845\". This is from a Chinese manufacturer which is difficult to find.\nTherefore I would like to stick with \"brand\" in order to be able to solve those cases.\n. php parser now uses brand model parsing as well.\n. Kindle Fire HDX support from PR #303 added and extended\n. @lstrojny: Hi Lars, tanks for your review.\n. Hi @nielsbasjes, Thanks for making the efforts for brand_model. I would suggest to remove the UAs with the \"nasty\" characters, as fixing yaml parsing is ooS of this prj. \nI will update the test_device.yaml file accordingly.\n. The current state of supported Parsers for this PR is:\n\n| Impl | Support | Notes |\n| --- | --- | --- |\n| C#: | Not supported yet | Support promised as of #305 |\n| D: | Not supported yet | No feedback so far |\n| Go: | Not supported yet | Support promised after spec is stable |\n| Haskell: | Not supported yet | No feedback so far |\n| Java: | Supported | PR #320 |\n| JavaScript: | Supported |  |\n| Perl: | Supported |  |\n| PHP: | Supported | Refactored meanwhile |\n| Pig: | Supported | PR #320 |\n| Python: | Supported |  |\n| Ruby: | Not supported yet | Own Repo - support stated |\n| C++: | Not supported yet | Upcoming PR #312 - no support stated |\n\nDo we think the spec is stable?? There are not much comments on #300. Could be a good sign that everyone is happy with it - correct?\nThen what about #304 on reorganizing the project. The last post is a month old.\nI would prefer a pragmatic solution with respect to the not yet supported 6 parsers soon.\nIf possible I would like to aim for only one more rebasing session for this PR before any possible merge - regexes and php parser have evolved quite a lot on master branch.\nThese sort of Zen exercises require quite some concentration ...\n. @toolmantim Great to have you on board. Thanks.\n. To overcome the situation of a development deadlock from unsupported parsers (at least from my point-of-view) I suggest the following: \n- Freeze the current `regexes.yaml` on todays master branch and copy it to `regexes_outdated.yaml`\n- Unsupported parser point now to `regexes_outdated.yaml` as of this PR\n- A note is given in the `README` to highlight the situation.\n- Continue evolving the present `regexes.yaml` with the updated device parser.\n\nThis PR is updated with respect to the proposed.\n. Won't we hide some information by just saying Windows 8 === Windows 8.1. \nI recon that Windows matchers do not use the major version info at present. But shouldn't we use it here now?\nSo my proposal would be to add the version info to 6.2 but change the scheme for 8.1.\n\n```\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n    os_v1_replacement: '8'\n  - regex: '(Windows NT 6\\.2)'\n    os_replacement: 'Windows 8'\n    os_v1_replacement: '8'\n\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT'\n    os_v1_replacement: '8'\n    os_v2_replacement: '1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows'\n    os_v1_replacement: '8'\n    os_v2_replacement: '1'\n```\n. It seams that Windows 8.1 is the official release name. I suppose that \"Windows 8.1\" is the desired OS name then.\nSo it would be good to update this:\n\n```\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows 8.1'\n```\n\nThis would be some sort of inconsistent for Windows RT as 6.3 would contain 8.1 but 6.2 would not.\nOn not knowing the future release strategy of Microsoft opposed to my previous suggestion major any minor version would not be used here. Right?\n. Is the Xbox IE so different to the Desktop IE? If this is the case the device parser would also give the information on the device, so using ua.family + device.family would lead to the same.\nI would prefer not to add this type of info: \".. for ..\". \n. Current version correctly identifies above UA\n\n```\n{\n \"string\": \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\",\n \"ua\": {\n  \"family\": \"bingbot\",\n  \"major\": \"2\",\n  \"minor\": \"0\",\n  \"patch\": null\n },\n \"os\": {\n  \"family\": \"Other\",\n  \"major\": null,\n  \"minor\": null,\n  \"patch\": null,\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"Spider\"\n },\n}\n```\n. Support for IE 11 has been added on 2013-07-23. The User-Agents linked above get \"IE 11.0\".\nIf you get something different, please post your User-Agent-Strings.\n. python tests fail due to whitespaces. I will fix that. \n. This PR has the following goals:\n- Ease adding testcases for the different parsers.\n- Ease adaptation of regular expressions in the regexes.yaml file.\n- Generate visibility of changes to the regexes.yaml file for a contributor\n- Generate visibility of bad user-agent matches for a contributor such allowing him to change the regexes.yaml file as well as changing the testcases accordingly.\n. I just came across the `js_ua` attribute within `test_user_agent_parser.yaml` which broke the python tests.\nThis is some extra info which is only part of the python parser (See lines 236ff).\nCurrently these tests are excluded in `with_fixtures.js` tests in line 22 from the js parser as well as in the other langs (java, go, perl, php).\nApart from that the functionality is obsolete as the `js_ua` info provided in the testcases needs to come from somewhere.\nIMHO if this information provided by `js_ua` is relevant, then it should be in the `regexes.yaml` file but not in the parser itself. \nThis could be achieved either by using `chromeframe` as ua.family and not having any additional info or implementing the multireplace mechanism as with the device parser.\nFor the moment I commented out `js_ua` in `test_user_agent_parser`.\nWhat do you think?\n. @tobie: Did you give it a try?\n. I moved the PR to a new project [ua-parser-tools](https://github.com/commenthol/ua-parser-tools).\nTherefore I will close this PR.\n. PR rebased\n. Commit \"improved Generic Smartphone parsing\" tackles #208 \n. I will do the splitting into `brand` and `model` and rebase this PR into PR #285, no problem.\nCan we merge then?\n. But why should a \"slow\" PR inhibit merging a small one like this into master?\n. Basically we have the following dependencies within this project\n1. `regexes.yaml` which implements the rules,\n2. based on a spec a (core-)parser can implement and parse those rules,\n3. which are verified by a large (or smaller) testset.\n\nSo if the `regexes.yaml` evolves (that's what we want as number of User-Agents is constantly growing)\nnormally only the \"rules\" change, but not the parser. \nIn this \"normal\" case, testcases need to support the \"rules\". The different parser implementations remain as they are.\n\nIn the \"special\" case that \"rules\" also require different logic within the parser, the version of the `regexes.yaml` (core-)parser as well as the associated testcases shall evolve.\n\nContributors are free to \"backport\" rules from an upcoming version as long as these are compatible with the logic of the respective parser until its implementation gets updated to the new logic.\n\nTherefore I support the idea of ozataman to keep the different versions of the regexes.yaml files within the repository. This allows to symlink the respective yaml file version with its corresponding testset to the dedicated parser.\nEach parser maintainer is then able to always include the correct regexes version.\n\nWith respect to the testset, I would propose to maintain a raw file of user-agent strings which can be used by contributors to add rules and extend the testset(s). From my proper experience it is often difficult to find good markers for good rules from small sets, if the possible set of input variables (here user-agents) is not available.\nFinally I would recommend to rethink using yaml files for the testsets as for large testsets on some langs the time to parse the yaml testsets increases massively. Here I would recommend using JSON instead.\n. Hi all,\n\nPlease find below a proposal for a possible reorganized tree structure.\nThe idea is to use semver dirs for the different \"rules\"-versions.\nThis includes the specification as well as the testcases.\nEach parser links to the correct version of the rules it implements.\nContributors can contribute for the different versions of the `regexes.yaml` using development tools to add testcases.\nI would propose to try to provide support for two major/minor versions at all to allow parsers to upgrade.\nIf all parsers are upgraded, the lower version of the \"rules\" could be discontinued by removing it from the project.\n\n```\n.\n\u2502   (PARSERS)\n\u251c\u2500\u2500 csharp  --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 d       --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 go      --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 haskell --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 java    --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 js      --uses--> ../regexes/2/1/regexes.yaml\n\u251c\u2500\u2500 perl    --uses--> ../regexes/2/0/regexes.yaml\n\u251c\u2500\u2500 php     --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 pig     --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 py      --uses--> ../regexes/2/1/regexes.yaml\n\u2502\n\u2502   (TOOLS)\n\u251c\u2500\u2500 tools (PR#301)\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1 (major)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0 (minor)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 (implements core parser v1.0)\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 2\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 0\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u2514\u2500\u2500 (implements core parser v2.0)\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 1\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u2514\u2500\u2500 (implements core parser v2.1)\n\u2502\n\u2502   (RULES)\n\u251c\u2500\u2500 regexes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 latest --> ../2/0\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0   {== current version}\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0          \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0          \u2514\u2500\u2500 parser tests\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 2   \n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 0   {== upcoming version brand_model (PR#285)} \n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u251c\u2500\u2500 spec.md (PR#300)\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502        \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502        \u2514\u2500\u2500 parser tests\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 1   {== e.g. regex_flag (PR#302)}\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 spec.md\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0  \u00a0\u00a0          \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0  \u00a0\u00a0          \u2514\u2500\u2500 parser tests\n```\n\nIf someone wants to link to the current `regexes.yaml` file he/she can use the symlinked version `regexes/latest/regexes.yaml` or the link using `https://raw.github.com/tobie/ua-parser/master/regexes/latest/regexes.yaml`\n\nWhat do you think? \n. Convinced. Lets go for tagging and submodules then. \n. Hi Vitaly, I'm working on a project called [ua-parser-caps](https://github.com/commenthol/ua-parser-caps). This tries to add the capabilities you proposed to ua-parser. Support is appreciated.\n. Can I help here with \"time\"? Would be mine of course :)\n. Possible values are documented in the testcases. Please have a look into the different yaml files under test_resources.\n. @lstrojny cool contrib\nMay you be able to support me with my PR #285? It introduces a new replacer which you can find in js/lib/device.js (multiReplace). The method is additionally described in #300.\nI would be very happy if you could make it.\n. Thanks for your notice. As having some time I had a look on your code and started to implement my required changes. I succeeded in less that I really expected. You can find the changes on my forked master branch. \nAs soon as your changes get accepted I will put a PR on that.\nThen I would be glad if you could make a code review on my changes.\n. There is a discussion on this within PR #292.\n. Should be solved with PR #363.\n. Having tried several things to add device capabilities to ua-parser, I ended up to build [ua-parser-caps](https://github.com/commenthol/ua-parser-caps) on top of it.\nThe main reason for doing this is to keep things separate, on one side the real parsing of an user-agent and on the other hand the things we read out of it, means the capabilities we like to apply.\nOtherwise we would end up in a \"can of worms\" as already discussed within Issue #75 .\nBased on the brand-model parsing I have started to classify device-type and user-view of a user-agent.\nI would be very glad to hear you comments on that topic, your review and of course hoping in getting now the necessary support of getting the brand-model parsing agreed and merged into this project.\n. Option 4: Looks like the proposal of #241 would be an ideal candidate. Right?\nIn this case the multiReplace function (introduced with brand_model for parseDevice) could be reused within the parseUA to add a matcher for the \"engine_replacement\".\n. @tobie can you please increment current master branch with `npm version minor` and publish with `npm publish` from commandline?\n. Testcases to support a PR would be appreciated.\n. I would see this differentiation in the device parser rather than in the ua parser. \nIn the depicted case is `Firefox Mobile` the browser engine running on a Tablet. As no further information on the device is presented it would be a `Generic Tablet` then.\nWith the os parser change to detect `Firefox OS` I am fine.\n. +1\n. Unfortunately the device parsing is still far from perfect.\nI have made quite some efforts on adding device parsing but this relies completely on the brand_model parser which is currently on hold until the project is being reorganized.\nPlease take a look at https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L3041 for the Samsung Android Rules. Your UA is detected fine there.\n\nAnd this https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L3859 should fix things for the youtube UAs.\n. The proposed change makes sense to me. It is in fact a Webkit browser (Mobile Safari) using the defined Build Version. Albeight the manufacturers often change quite a lot for their specific build on this \"legacy\" browser. It is important to note that the rule shall not hide a more specific browser as is e.g. Mobile Chrome. \nThe Android Version is already covered in the OS parser.\n. After doing some research:\n- Not all UAs contain the `Version/` info but all contain the technical version `Safari/`\n- Would opt for a matcher like that\n\n```\n  - regex: 'Android.*(Safari)/(\\d{3})\\.(\\d+)'\n    family_replacement: 'Mobile Safari'\n```\n. Yep. That is the so called Desktop view. You can configure this in the browser.\n. This is right for the device but not for the User-Agent. There is often a correlation between device and User-Agent as the User-Agent (aka Browser) relies on Hardware features which can be implemented right or buggy.\nFor details on the User-Agent on Android see here.\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nIn fact this is a description for Chrome Mobile but the same applies to the legacy Webkit User-Agents as well.\n. On looking just on the User-Agent String it is not possible to distinguish the different Apple models. If you really want to know the model (e.g. 3,4,5) I'll recommend using a javascript which detects the different screen sizes. But even with that you won't be able to detect the iPhone 5C in blue.\n. There is a specification on https://github.com/commenthol/ua-parser/commit/show/6cf3a301eb82971a2822506e19ac6d73d49ba97a/76c8365#diff-76c8365f9a422dc5c687b3f1a25d2a7d which should give you the necessary details for understanding the yaml file.\n. Thanks for your efforts on uap-core. Will send you a PR with the spec now.\n. rebased for merge after #361 \n. For the \"Opera Mini\" without \"/att\" tests do exist.\n. Testcases are already present.\n\n```\ntest_resources/test_user_agent_parser.yaml \n607:  - user_agent_string: 'Opera/9.80 (VRE; Opera Mini/4.2/28.2794; U; en) Presto/2.8.119 Version/11.10'\n613:  - user_agent_string: 'Opera/9.80 (BREW; Opera Mini/5.1.191/27.2202; U; en) Presto/2.8.119 240X400 LG VN271'\n619:  - user_agent_string: 'Opera/9.80 (Series 60; Opera Mini/6.24455/25.677; U; fr) Presto/2.5.25 Version/10.54'\n625:  - user_agent_string: 'Opera/9.80 (BlackBerry; Opera Mini/7.0.31437/28.3030; U; en) Presto/2.8.119 Version/11.10'\n1062:  - user_agent_string: 'LG-GD710/V10f; Mozilla/5.0 (Profile/MIDP-2.0 Configuration/CLDC-1.1; Opera Mini/att/4.2.14812; U; en) Opera 9.50'\n1069:  - user_agent_string: 'SAMSUNG-SGH-A897/A897UCJC1; Mozilla/5.0 (Profile/MIDP-2.0 Configuration/CLDC-1.1; Opera Mini/att/4.2.15304; U; fr-US) Opera 9.50'\n```\n. rebased...\n. rebased...\n. rebased\n. rebased...\n. rebased\n. rebased\n. rebased for merge after #366\n. is rebased.\n. rebased...\n. rebased\n. rebased for merge after #355 \n. No. Bada is the OS here. Opera Mini is the Browser aka UA.\n. rebased...\n. Can you please specify in more detail what you are looking for? \n. @lstrojny : Would you mind to update the php/Readme to contain the composer install.\nE.g. something as is within .travis.yml file:\n`wget https://getcomposer.org/composer.phar && php composer.phar install`\n. rebased...\n. @lstrojny - now lets go step by step. This would be the next one to merge\n. Thanks a lot for your support :)\n. This issue should be solved with PR https://github.com/ua-parser/uap-core/pull/2 currently being reviewed.\nFor further reference please check https://github.com/commenthol/uap-core/blob/master/regexes.yaml#L738\n. PR #377 should have solved this for now. \n. Currently only one \"language\" setting per .travis.yml file is possible.\nI.e. only for that \"language\" multiple tests with different versions are possible. For other langs test scripts can be defined which will use a default version then.\n\nTravis is aware of the \"feature request\" but with no ETA.\nSee https://groups.google.com/forum/#!msg/travis-ci/3pzCgvxWZAo/T8iqwlklyzAJ\n. For your remarks on \"*.contains(\"$1\") please check:\nhttps://github.com/tobie/ua-parser/blob/master/java/src/main/java/ua_parser/UserAgentParser.java#L94\nas well as \nhttps://github.com/tobie/ua-parser/blob/master/java/src/main/java/ua_parser/DeviceParser.java#L88\nI think there is a reason to keep this.\nIf I might be wrong, please issue a PR. \nWith regards to the versioning I changed to the release version 1.3.0.\n. Is any change worth a version change? Please tell me what you want me to do. \nA simple \"Stay on version 1.3.0-SNAPSHOT\" would do.\n. Sorry for this. Now it should have the right version. \n. The device parser does not offer versions (major, minor, patch, ...) like UA and OS. Currently only \"family\" is available. So the brackets around 2 and 1 do not offer any particular information.\n. Yes. Thanks.\n. Did you had a chance to look into PR #376?\nWouldn't this solve  the issue?\n. You're welcome. Thanks. Cool - that was fast...\n. Is fixed with #434\n. If you need to stay on PHP give https://github.com/serbanghita/Mobile-Detect a try.\n. The regex does not solely apply to GooglePlusBot but also to\n\n```\nAdsBot-Google (+http://www.google.com/adsbot.html)\n```\n\n@klimashkin Can you please name a reference for the UA-change. I only  found this statement for the \"old\" one [here](https://code.google.com/p/google-plus-platform/issues/detail?id=178#c36).\n. Smart detection... Thanks for your explanation\n\nCan you please change the regex to:\n\n```\n  # Google Plus\n  - regex: 'Google.*/\\+/web/snippet|Google \\(\\+\\)'\n    family_replacement: 'GooglePlusBot'\n```\n\nThis than should securely capture the GooglePlusBot then.\n. This is fixed since #429\n. To clarify with \"nodejs\" parser:\n\n```\n{\n \"string\": \"Mozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\",\n \"ua\": {\n  \"family\": \"Chrome Mobile\",\n  \"major\": \"28\",\n  \"minor\": \"0\",\n  \"patch\": \"1500\"\n },\n \"os\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\",\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"SAMSUNG SM-N9005\"\n }\n}\n\n{\n \"string\": \"Samsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\",\n \"ua\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\"\n },\n \"os\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\",\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"Other\"\n }\n}\n```\n\nThe current `regexes.yaml` file does not support the \"stagefright\" User-Agent yet.\n@parcolee This [fork](https://github.com/commenthol/ua-parser) correctly resolves the device meanwhile we are waiting for #304 to happen. This fork works for Python, Perl, PHP, Java and Javascript.\n. nodejs is not a browser. The `navigator` object is not available.\nYou'll need to pass on `req.headers['user-agent']`.\n. Thanks for highlighting this. I'll update the README.\n. Readme is updated. Can you please check?\n. try using `res.json({ data: uap })`\n. Documentation fix raised by #440 \n. Just saw the travis output. Looks like the standard mocha reporter now is \"spec\" there. To get the output using the \"dot\" reporter, change in `package.json`:\n\n``` diff\n-   \"test\": \"mocha -u tdd ./js/test/*.js\"\n+   \"test\": \"mocha -u tdd -R dot ./js/test/*.js\"\n```\n\nThe failure of the tests is related to your renaming of \"Automata\" to \"Reuser\".\nSeams that there is still a chance for finding the wording for such kind of UAs... Right? \nWhat about changing \"Automata\"||\"Reuser\" to \"headless\"? \n. My definition of \"headless\" would mean a headless browser. \n. `libw` triggers your \"Generic Feature Phone\"\n\n```\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n```\n. Sorry for selecting the wrong branch. Now everything should do.\n. or not...\n~~short update build passes with php 5.5 but fails with php 5.3~~\n~~Travis uses php 5.3 per default :(~~\nphp build only passes if `.travis.yml` contains\n\n```\nlanguage: php\nphp:\n  - 5.3\n  - 5.5\n```\n\nSo there is something strange with the envs travis uses for the different build langs...\nwhich means +1 for #304\nWill try to investigate further...\n. Problem with travis is solved now. :)\n. Wow that was fast... Thanks.\n. @toolmantim just want to leave you a note, that the brand-model parsing has been merged. It would be awesome if you'd update your project to support the new regexes. \n. Let me say it this way:\n\n(Iceweasel == Firefox) === true\n(Iceweasel === Firefox) === false\n\nApart from being the same, yes there is a difference.\nIMHO there is an interest for people to get knowledge of exactly that difference. (Imagine Stats).\n\n@Mte90 If I understood you right you are trying to identify an \"engine\" or at least capabilities of a browser. Those would be the same.\nUnlike we do not yet take care of such, I would consider Iceweasel as being different to Firefox.\n. My primary intention of #466 is to show the current state of the brand-model parsing which has been introduced with #285 in Aug. 2013.\nWith this I like to renew the discussion on #304 and like to encourage this project to give guidelines on how and where to drive itself.\n\nSo I'm currently not disappointed by PR #466 being reverted, but I definitely would be, if no further action than that is the outcome.\n\nFor me the following steps need to be next:\n1. Really kick-off the seperation of parsers to yaml rules as intended by #304 and started with [ua-parser](https://github.com/ua-parser/).\n   - Prepare the parser base-projects to allow PRs from active members \n   - Milestones and/or Timelines could be a good starting point...\n     - Step1: Migrate the present\n     - Step2: Adding new features\n2. Consider correct versioning as must-have\n   - ua-parser on npm is in a terrible state #323\n   - Is releasing Java SNAPSHOTS only the right release model?\n3. Truely state what shall be in and what shall be out-of-scope of ua-parser.\n   - E.g. Is Brand-Model Parsing as proposed in #466 really desired?\n   - Does generalization of parser sematics (multi-replacements, case-insensitive matches as of brand-model parsing) make sense for `user_agent_parsers:` and `os_parsers:` rules as well?  \n   - Can we finalize the first draft version of the spec? #300\n   - Are annotating parsing results desired? E.g. does this project want to have details of a device \"mobile/tablet/desktop\" as proposed in #428 or doesn't it as stated in #75?\n   - Do we want to get seperate parser-rules for browser engines as proposed by #241?\n   - Order of priority: Is performance more important than the detailed detection of a UA?  \n     Is working on performance, which inevitable involves a change of parser semantics, a project goal?\n\nCan I please get commitments/feedback/answers for this? \n. This project has moved to https://github.com/ua-parser/uap-core. \nPlease use the regexes.yaml file from there. \nWindows 10 is already supported.\n. We have moved to [uap-core](https://github.com/ua-parser/uap-core). Can you please update the regexes with proper testcases there? Thanks.\n. @public can you please commit your changes to https://github.com/ua-parser/uap-python as this project has moved.\n. Please consider that this project has moved to [ua-parser](https://github.com/ua-parser). \nI think the problem arises from mixing a regexes.yaml file with an unsupported parser version.\n. Hi, this repo has moved to https://github.com/ua-parser/. Please check for the latest version there. Thanks.\n. This project has moved. Please try with the latest release from ua-parser/uap-core and if still present report this issue there. \n. @MaxVerro please note that this project has moved. Pls check README. Please submit a PR there.\r\n. Please note that project has moved. Check Readme.. Please note that project has moved. Check Readme.. I searched all my ua-strings and have only found UP.Browser user-agents using the scheme discussed using `6.2_7.2.7`\n\nWhat is interesting to note is, that `2_7.2.7` is a repeated `2.7`. \nI suppose the right version intended is `6.2.7` as before and after (next is `6.3.0`) all version info is using `[0-9].[0-9].[0-9]`.\n\nShortened list of segmented UA-s:\n\n```\nUP.Browser/6.2.3.9.j.1.107-20081119\nUP.Browser/6.2_7.2.7.1.K.1.5.1.108\n...\nUP.Browser/6.2_7.2.7.1.K.7.113\nUP.Browser/6.3.0\n```\n. From my point of view the Generic Smartphone rule should be changed to\n- regex: '(Symbian|\\bS60\\b|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|^N97-[14]|(webOS/|PalmOS)'\n  device_replacement: 'Generic Smartphone'\n  brand_replacement: 'Generic'\n  model_replacement: 'Smartphone'\n  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'\n    regex_flag: 'i'\n    device_replacement: 'Generic Smartphone'\n    brand_replacement: 'Generic'\n    model_replacement: 'Smartphone'\n\nThis will solve the issue. I can update PR #302 accordingly to solve this.\n. Detection if IE11 and Windows 8.1 is already solved, The netvibes bot with tests is missing yet.\nA User-Agent for tests could be\n`Netvibes (http://www.netvibes.com)`\n. All should be solved now...\n. Is there any need to distinguish between 32 and 64bit versions? \nIf so we would need to adapt Windows NT 6,7 versions as well. `WOW64` could be used as marker.\nWhat about *Unixes `Linux x86_64`, Mac OSX?\n. Can't you do this \"grouping\" of Os-es outside the scope of ua-parser?\nMeans, use some program which combines your required info from `os.family`.  \nBy the way, isn't that grouping already present? Well not for Windows due to Microsofts special versioning, but for the others?\n. PR obsolete as included in #285\n. Hi, \nwhat a coincidence, just saw the issue posted and where amazed that tv-set expose a unique UA.\nThanks for the message.\nI understood the meaning of device that way: The \"device\" is physical, so that means to me that I would buy a Sony or Panasonic TV but not a \"HbbTV\". I would see HbbTV as the UA but not as device. \nDoes that make sense to you?\n. As being \"consistently inconsistent\" this might break backwards compatibility in some of the cases anyhow. The case is that some of device.family contains already the \"brand\" but some do not. \nOne possibility is to introduce a \"brand_replacement\" in the \"device_parsers\" but that would mean that every parser needs to change the parsing logic. The approach within this branch tries to avoid this.\nI do not know, but in the later it might get more and more confusing for further contributors to consider then \"outdated\" backward compatibility values with good replacement values.\nTo avoid \"confusing\" values I would propose to write a small code which maintains the backwards compatibility for those affected.\nE.g. \n\n```\nif (device.family === \"Apple iPad\") {\n    device.family = \"iPad\";\n} \n```\n\nThe affected devices are currently \"Nokia Lumia\", \"Amazon Kindle\", \"Apple iP...\" and \"Samsung GT-\".\n\nIn the later it would be good to separate the values \"brand\" and \"model\" from \"family\" and build \"family\" by concatenation. But ihmo we need to introduce multiple replacements in the device_parsers first such to avoid an unnecessary explosion of additional regexes to determine \"brand\" and \"model\".\n. Last push on branch \"brand_model\" includes #271 and #281 merges now.\n. Please ignore proposal above. It would be too complicated to decide which type (new or old) of \"device.family\" to use.\nNow two keys \"brand\" and \"model\" have been introduced next to the existing \"family\". This is added to the device parser (currently only for JS).\n\"family\" can be obtained by concatenation of \"brand\" and \"model\" in most of the cases. The established value of \"family\" is left untouched like for iPhone,iPad,.. or Kindle. \n. de-noised now ... sorry\ntests for js and perl run. I will also push PR on HTTP-UA-Parser.\n. Thanks. I have left the device_replacement as is while introducing brand and model.\nI am currently reworking the whole device parsing by sorting in brand and model at the moment as I am interested to resolve the tons of unclassified android phones and tablets. So there will be a lot of new devices which haven't been detected so far. As some of the regex expressions do cause false positives I won't be able to avoid breaking backwards compatibility for some devices as this highly depends on the amount of user-agent strings available for tests. The current test suite is quite poor with only 400 strings. \nIn your opinion on which set of user-agent strings the backwards compat story shall be measured? \n. To progress with the backwards compat story I have added some tests to prove that the latest proposal is in fact backwards compatible. More tests will follow. Pls check the added file test_device_compatibility.csv. \nThe same results should be shown if these tests are run with the current regexes.yaml on master.\n. Sorry for pushing \"Close & Comment\" by accident. I am still with this PR :)\n. Do you need any further input before merge? I have made some progress which I would like to get accepted in other pull request(s) as there are quite some changes. You can have a look at them in my forks master branch.\n\nTobie Langel notifications@github.com schrieb:\n\n> Any news?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23676516\n. The problem is related to the python parser which lacks the multi replacement stuff. Unfortunately I cannot help with this due to lack of python knowledge. Can anyone help here?\n\nTobie Langel notifications@github.com schrieb:\n\n> The Travis build is failing right now, so the first step would be to\n> fix that.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23683259\n. Thx. I will rebase and rerun tests on friday. \n\nLindsey Simon notifications@github.com schrieb:\n\n> Thing is - I fixed the python parser in 287 -\n> https://github.com/tobie/ua-parser/pull/287\n> \n> commenthol - maybe you just need to rebase and rerun the travis test?\n> Can\n> you link me to where you see the present failure? It's not impossible I\n> did\n> something incomplete, but I added unit tests w/ 287 so I think it\n> should be\n> good.\n> \n> On Tue, Sep 3, 2013 at 6:53 AM, Tobie Langel\n> notifications@github.comwrote:\n> \n> > /cc @elsigh https://github.com/elsigh ^\n> > \n> > \u2014\n> > Reply to this email directly or view it on\n> > GitHubhttps://github.com/tobie/ua-parser/pull/285#issuecomment-23713861\n> > .\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/285#issuecomment-23732568\n. The python parser now also parses multiple replacements as same as the js-parser does.\nUnittests have been adapted to check brand and model. \n@elsigh: Can you please check the code. As this being my first python-coding there might be room for improvements.\n@tobie: How is the process for the required parser changes for all the other languages? I think I will not be able to dig into haskell or pig...\n. Got started.. Please find attached to the PR in [doc/specification.md](https://github.com/commenthol/ua-parser/blob/beee5ee882e6cdae7c5f33b56e8b9fe4822c86eb/doc/specification.md) an initial draft of the ua-parser specification.\nI would be very glad to hear your comments.\n. Hi all,\nThanks for the progress and support.\nThe Spec now has its own PR #300 for discussion.\n\nContributing to the discussion Google or Asus for a Nexus 7:\n- Clearly \"Google\" is the \"brand\"\n- while \"Asus\" is the \"manufacturer\"\n\nSwitching from \"brand\" to \"manufacturer\" would let \"Asus\" make the deal. Right? \n\nFor my opinion even \"Asus\" is the brand as this is written on the back of the device together with \"nexus\" (do own this device).\n\nBut what to do with Operator specific devices which are manufactured by someone which is unknown.\nE.g. \"Vodafone 845\". This is from a Chinese manufacturer which is difficult to find.\nTherefore I would like to stick with \"brand\" in order to be able to solve those cases.\n. php parser now uses brand model parsing as well.\n. Kindle Fire HDX support from PR #303 added and extended\n. @lstrojny: Hi Lars, tanks for your review.\n. Hi @nielsbasjes, Thanks for making the efforts for brand_model. I would suggest to remove the UAs with the \"nasty\" characters, as fixing yaml parsing is ooS of this prj. \nI will update the test_device.yaml file accordingly.\n. The current state of supported Parsers for this PR is:\n\n| Impl | Support | Notes |\n| --- | --- | --- |\n| C#: | Not supported yet | Support promised as of #305 |\n| D: | Not supported yet | No feedback so far |\n| Go: | Not supported yet | Support promised after spec is stable |\n| Haskell: | Not supported yet | No feedback so far |\n| Java: | Supported | PR #320 |\n| JavaScript: | Supported |  |\n| Perl: | Supported |  |\n| PHP: | Supported | Refactored meanwhile |\n| Pig: | Supported | PR #320 |\n| Python: | Supported |  |\n| Ruby: | Not supported yet | Own Repo - support stated |\n| C++: | Not supported yet | Upcoming PR #312 - no support stated |\n\nDo we think the spec is stable?? There are not much comments on #300. Could be a good sign that everyone is happy with it - correct?\nThen what about #304 on reorganizing the project. The last post is a month old.\nI would prefer a pragmatic solution with respect to the not yet supported 6 parsers soon.\nIf possible I would like to aim for only one more rebasing session for this PR before any possible merge - regexes and php parser have evolved quite a lot on master branch.\nThese sort of Zen exercises require quite some concentration ...\n. @toolmantim Great to have you on board. Thanks.\n. To overcome the situation of a development deadlock from unsupported parsers (at least from my point-of-view) I suggest the following: \n- Freeze the current `regexes.yaml` on todays master branch and copy it to `regexes_outdated.yaml`\n- Unsupported parser point now to `regexes_outdated.yaml` as of this PR\n- A note is given in the `README` to highlight the situation.\n- Continue evolving the present `regexes.yaml` with the updated device parser.\n\nThis PR is updated with respect to the proposed.\n. Won't we hide some information by just saying Windows 8 === Windows 8.1. \nI recon that Windows matchers do not use the major version info at present. But shouldn't we use it here now?\nSo my proposal would be to add the version info to 6.2 but change the scheme for 8.1.\n\n```\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n    os_v1_replacement: '8'\n  - regex: '(Windows NT 6\\.2)'\n    os_replacement: 'Windows 8'\n    os_v1_replacement: '8'\n\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT'\n    os_v1_replacement: '8'\n    os_v2_replacement: '1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows'\n    os_v1_replacement: '8'\n    os_v2_replacement: '1'\n```\n. It seams that Windows 8.1 is the official release name. I suppose that \"Windows 8.1\" is the desired OS name then.\nSo it would be good to update this:\n\n```\n  - regex: '(Windows NT 6\\.2; ARM;)'\n    os_replacement: 'Windows RT'\n  - regex: '(Windows NT 6\\.3; ARM;)'\n    os_replacement: 'Windows RT 8.1'\n  - regex: '(Windows NT 6\\.3)'\n    os_replacement: 'Windows 8.1'\n```\n\nThis would be some sort of inconsistent for Windows RT as 6.3 would contain 8.1 but 6.2 would not.\nOn not knowing the future release strategy of Microsoft opposed to my previous suggestion major any minor version would not be used here. Right?\n. Is the Xbox IE so different to the Desktop IE? If this is the case the device parser would also give the information on the device, so using ua.family + device.family would lead to the same.\nI would prefer not to add this type of info: \".. for ..\". \n. Current version correctly identifies above UA\n\n```\n{\n \"string\": \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\",\n \"ua\": {\n  \"family\": \"bingbot\",\n  \"major\": \"2\",\n  \"minor\": \"0\",\n  \"patch\": null\n },\n \"os\": {\n  \"family\": \"Other\",\n  \"major\": null,\n  \"minor\": null,\n  \"patch\": null,\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"Spider\"\n },\n}\n```\n. Support for IE 11 has been added on 2013-07-23. The User-Agents linked above get \"IE 11.0\".\nIf you get something different, please post your User-Agent-Strings.\n. python tests fail due to whitespaces. I will fix that. \n. This PR has the following goals:\n- Ease adding testcases for the different parsers.\n- Ease adaptation of regular expressions in the regexes.yaml file.\n- Generate visibility of changes to the regexes.yaml file for a contributor\n- Generate visibility of bad user-agent matches for a contributor such allowing him to change the regexes.yaml file as well as changing the testcases accordingly.\n. I just came across the `js_ua` attribute within `test_user_agent_parser.yaml` which broke the python tests.\nThis is some extra info which is only part of the python parser (See lines 236ff).\nCurrently these tests are excluded in `with_fixtures.js` tests in line 22 from the js parser as well as in the other langs (java, go, perl, php).\nApart from that the functionality is obsolete as the `js_ua` info provided in the testcases needs to come from somewhere.\nIMHO if this information provided by `js_ua` is relevant, then it should be in the `regexes.yaml` file but not in the parser itself. \nThis could be achieved either by using `chromeframe` as ua.family and not having any additional info or implementing the multireplace mechanism as with the device parser.\nFor the moment I commented out `js_ua` in `test_user_agent_parser`.\nWhat do you think?\n. @tobie: Did you give it a try?\n. I moved the PR to a new project [ua-parser-tools](https://github.com/commenthol/ua-parser-tools).\nTherefore I will close this PR.\n. PR rebased\n. Commit \"improved Generic Smartphone parsing\" tackles #208 \n. I will do the splitting into `brand` and `model` and rebase this PR into PR #285, no problem.\nCan we merge then?\n. But why should a \"slow\" PR inhibit merging a small one like this into master?\n. Basically we have the following dependencies within this project\n1. `regexes.yaml` which implements the rules,\n2. based on a spec a (core-)parser can implement and parse those rules,\n3. which are verified by a large (or smaller) testset.\n\nSo if the `regexes.yaml` evolves (that's what we want as number of User-Agents is constantly growing)\nnormally only the \"rules\" change, but not the parser. \nIn this \"normal\" case, testcases need to support the \"rules\". The different parser implementations remain as they are.\n\nIn the \"special\" case that \"rules\" also require different logic within the parser, the version of the `regexes.yaml` (core-)parser as well as the associated testcases shall evolve.\n\nContributors are free to \"backport\" rules from an upcoming version as long as these are compatible with the logic of the respective parser until its implementation gets updated to the new logic.\n\nTherefore I support the idea of ozataman to keep the different versions of the regexes.yaml files within the repository. This allows to symlink the respective yaml file version with its corresponding testset to the dedicated parser.\nEach parser maintainer is then able to always include the correct regexes version.\n\nWith respect to the testset, I would propose to maintain a raw file of user-agent strings which can be used by contributors to add rules and extend the testset(s). From my proper experience it is often difficult to find good markers for good rules from small sets, if the possible set of input variables (here user-agents) is not available.\nFinally I would recommend to rethink using yaml files for the testsets as for large testsets on some langs the time to parse the yaml testsets increases massively. Here I would recommend using JSON instead.\n. Hi all,\n\nPlease find below a proposal for a possible reorganized tree structure.\nThe idea is to use semver dirs for the different \"rules\"-versions.\nThis includes the specification as well as the testcases.\nEach parser links to the correct version of the rules it implements.\nContributors can contribute for the different versions of the `regexes.yaml` using development tools to add testcases.\nI would propose to try to provide support for two major/minor versions at all to allow parsers to upgrade.\nIf all parsers are upgraded, the lower version of the \"rules\" could be discontinued by removing it from the project.\n\n```\n.\n\u2502   (PARSERS)\n\u251c\u2500\u2500 csharp  --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 d       --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 go      --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 haskell --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 java    --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 js      --uses--> ../regexes/2/1/regexes.yaml\n\u251c\u2500\u2500 perl    --uses--> ../regexes/2/0/regexes.yaml\n\u251c\u2500\u2500 php     --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 pig     --uses--> ../regexes/1/0/regexes.yaml\n\u251c\u2500\u2500 py      --uses--> ../regexes/2/1/regexes.yaml\n\u2502\n\u2502   (TOOLS)\n\u251c\u2500\u2500 tools (PR#301)\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1 (major)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0 (minor)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 (implements core parser v1.0)\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 2\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 0\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u2514\u2500\u2500 (implements core parser v2.0)\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 1\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u2514\u2500\u2500 (implements core parser v2.1)\n\u2502\n\u2502   (RULES)\n\u251c\u2500\u2500 regexes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 latest --> ../2/0\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 0   {== current version}\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0          \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0          \u2514\u2500\u2500 parser tests\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 2   \n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 0   {== upcoming version brand_model (PR#285)} \n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u251c\u2500\u2500 spec.md (PR#300)\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502   \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502        \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2502        \u2514\u2500\u2500 parser tests\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 1   {== e.g. regex_flag (PR#302)}\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 spec.md\n\u2502\u00a0\u00a0  \u00a0\u00a0     \u251c\u2500\u2500 regexes.yaml\n\u2502\u00a0\u00a0  \u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 test_resources\n\u2502\u00a0\u00a0  \u00a0\u00a0          \u251c\u2500\u2500 ua/os/device tests\n\u2502\u00a0\u00a0  \u00a0\u00a0          \u2514\u2500\u2500 parser tests\n```\n\nIf someone wants to link to the current `regexes.yaml` file he/she can use the symlinked version `regexes/latest/regexes.yaml` or the link using `https://raw.github.com/tobie/ua-parser/master/regexes/latest/regexes.yaml`\n\nWhat do you think? \n. Convinced. Lets go for tagging and submodules then. \n. Hi Vitaly, I'm working on a project called [ua-parser-caps](https://github.com/commenthol/ua-parser-caps). This tries to add the capabilities you proposed to ua-parser. Support is appreciated.\n. Can I help here with \"time\"? Would be mine of course :)\n. Possible values are documented in the testcases. Please have a look into the different yaml files under test_resources.\n. @lstrojny cool contrib\nMay you be able to support me with my PR #285? It introduces a new replacer which you can find in js/lib/device.js (multiReplace). The method is additionally described in #300.\nI would be very happy if you could make it.\n. Thanks for your notice. As having some time I had a look on your code and started to implement my required changes. I succeeded in less that I really expected. You can find the changes on my forked master branch. \nAs soon as your changes get accepted I will put a PR on that.\nThen I would be glad if you could make a code review on my changes.\n. There is a discussion on this within PR #292.\n. Should be solved with PR #363.\n. Having tried several things to add device capabilities to ua-parser, I ended up to build [ua-parser-caps](https://github.com/commenthol/ua-parser-caps) on top of it.\nThe main reason for doing this is to keep things separate, on one side the real parsing of an user-agent and on the other hand the things we read out of it, means the capabilities we like to apply.\nOtherwise we would end up in a \"can of worms\" as already discussed within Issue #75 .\nBased on the brand-model parsing I have started to classify device-type and user-view of a user-agent.\nI would be very glad to hear you comments on that topic, your review and of course hoping in getting now the necessary support of getting the brand-model parsing agreed and merged into this project.\n. Option 4: Looks like the proposal of #241 would be an ideal candidate. Right?\nIn this case the multiReplace function (introduced with brand_model for parseDevice) could be reused within the parseUA to add a matcher for the \"engine_replacement\".\n. @tobie can you please increment current master branch with `npm version minor` and publish with `npm publish` from commandline?\n. Testcases to support a PR would be appreciated.\n. I would see this differentiation in the device parser rather than in the ua parser. \nIn the depicted case is `Firefox Mobile` the browser engine running on a Tablet. As no further information on the device is presented it would be a `Generic Tablet` then.\nWith the os parser change to detect `Firefox OS` I am fine.\n. +1\n. Unfortunately the device parsing is still far from perfect.\nI have made quite some efforts on adding device parsing but this relies completely on the brand_model parser which is currently on hold until the project is being reorganized.\nPlease take a look at https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L3041 for the Samsung Android Rules. Your UA is detected fine there.\n\nAnd this https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L3859 should fix things for the youtube UAs.\n. The proposed change makes sense to me. It is in fact a Webkit browser (Mobile Safari) using the defined Build Version. Albeight the manufacturers often change quite a lot for their specific build on this \"legacy\" browser. It is important to note that the rule shall not hide a more specific browser as is e.g. Mobile Chrome. \nThe Android Version is already covered in the OS parser.\n. After doing some research:\n- Not all UAs contain the `Version/` info but all contain the technical version `Safari/`\n- Would opt for a matcher like that\n\n```\n  - regex: 'Android.*(Safari)/(\\d{3})\\.(\\d+)'\n    family_replacement: 'Mobile Safari'\n```\n. Yep. That is the so called Desktop view. You can configure this in the browser.\n. This is right for the device but not for the User-Agent. There is often a correlation between device and User-Agent as the User-Agent (aka Browser) relies on Hardware features which can be implemented right or buggy.\nFor details on the User-Agent on Android see here.\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nIn fact this is a description for Chrome Mobile but the same applies to the legacy Webkit User-Agents as well.\n. On looking just on the User-Agent String it is not possible to distinguish the different Apple models. If you really want to know the model (e.g. 3,4,5) I'll recommend using a javascript which detects the different screen sizes. But even with that you won't be able to detect the iPhone 5C in blue.\n. There is a specification on https://github.com/commenthol/ua-parser/commit/show/6cf3a301eb82971a2822506e19ac6d73d49ba97a/76c8365#diff-76c8365f9a422dc5c687b3f1a25d2a7d which should give you the necessary details for understanding the yaml file.\n. Thanks for your efforts on uap-core. Will send you a PR with the spec now.\n. rebased for merge after #361 \n. For the \"Opera Mini\" without \"/att\" tests do exist.\n. Testcases are already present.\n\n```\ntest_resources/test_user_agent_parser.yaml \n607:  - user_agent_string: 'Opera/9.80 (VRE; Opera Mini/4.2/28.2794; U; en) Presto/2.8.119 Version/11.10'\n613:  - user_agent_string: 'Opera/9.80 (BREW; Opera Mini/5.1.191/27.2202; U; en) Presto/2.8.119 240X400 LG VN271'\n619:  - user_agent_string: 'Opera/9.80 (Series 60; Opera Mini/6.24455/25.677; U; fr) Presto/2.5.25 Version/10.54'\n625:  - user_agent_string: 'Opera/9.80 (BlackBerry; Opera Mini/7.0.31437/28.3030; U; en) Presto/2.8.119 Version/11.10'\n1062:  - user_agent_string: 'LG-GD710/V10f; Mozilla/5.0 (Profile/MIDP-2.0 Configuration/CLDC-1.1; Opera Mini/att/4.2.14812; U; en) Opera 9.50'\n1069:  - user_agent_string: 'SAMSUNG-SGH-A897/A897UCJC1; Mozilla/5.0 (Profile/MIDP-2.0 Configuration/CLDC-1.1; Opera Mini/att/4.2.15304; U; fr-US) Opera 9.50'\n```\n. rebased...\n. rebased...\n. rebased\n. rebased...\n. rebased\n. rebased\n. rebased for merge after #366\n. is rebased.\n. rebased...\n. rebased\n. rebased for merge after #355 \n. No. Bada is the OS here. Opera Mini is the Browser aka UA.\n. rebased...\n. Can you please specify in more detail what you are looking for? \n. @lstrojny : Would you mind to update the php/Readme to contain the composer install.\nE.g. something as is within .travis.yml file:\n`wget https://getcomposer.org/composer.phar && php composer.phar install`\n. rebased...\n. @lstrojny - now lets go step by step. This would be the next one to merge\n. Thanks a lot for your support :)\n. This issue should be solved with PR https://github.com/ua-parser/uap-core/pull/2 currently being reviewed.\nFor further reference please check https://github.com/commenthol/uap-core/blob/master/regexes.yaml#L738\n. PR #377 should have solved this for now. \n. Currently only one \"language\" setting per .travis.yml file is possible.\nI.e. only for that \"language\" multiple tests with different versions are possible. For other langs test scripts can be defined which will use a default version then.\n\nTravis is aware of the \"feature request\" but with no ETA.\nSee https://groups.google.com/forum/#!msg/travis-ci/3pzCgvxWZAo/T8iqwlklyzAJ\n. For your remarks on \"*.contains(\"$1\") please check:\nhttps://github.com/tobie/ua-parser/blob/master/java/src/main/java/ua_parser/UserAgentParser.java#L94\nas well as \nhttps://github.com/tobie/ua-parser/blob/master/java/src/main/java/ua_parser/DeviceParser.java#L88\nI think there is a reason to keep this.\nIf I might be wrong, please issue a PR. \nWith regards to the versioning I changed to the release version 1.3.0.\n. Is any change worth a version change? Please tell me what you want me to do. \nA simple \"Stay on version 1.3.0-SNAPSHOT\" would do.\n. Sorry for this. Now it should have the right version. \n. The device parser does not offer versions (major, minor, patch, ...) like UA and OS. Currently only \"family\" is available. So the brackets around 2 and 1 do not offer any particular information.\n. Yes. Thanks.\n. Did you had a chance to look into PR #376?\nWouldn't this solve  the issue?\n. You're welcome. Thanks. Cool - that was fast...\n. Is fixed with #434\n. If you need to stay on PHP give https://github.com/serbanghita/Mobile-Detect a try.\n. The regex does not solely apply to GooglePlusBot but also to\n\n```\nAdsBot-Google (+http://www.google.com/adsbot.html)\n```\n\n@klimashkin Can you please name a reference for the UA-change. I only  found this statement for the \"old\" one [here](https://code.google.com/p/google-plus-platform/issues/detail?id=178#c36).\n. Smart detection... Thanks for your explanation\n\nCan you please change the regex to:\n\n```\n  # Google Plus\n  - regex: 'Google.*/\\+/web/snippet|Google \\(\\+\\)'\n    family_replacement: 'GooglePlusBot'\n```\n\nThis than should securely capture the GooglePlusBot then.\n. This is fixed since #429\n. To clarify with \"nodejs\" parser:\n\n```\n{\n \"string\": \"Mozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\",\n \"ua\": {\n  \"family\": \"Chrome Mobile\",\n  \"major\": \"28\",\n  \"minor\": \"0\",\n  \"patch\": \"1500\"\n },\n \"os\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\",\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"SAMSUNG SM-N9005\"\n }\n}\n\n{\n \"string\": \"Samsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\",\n \"ua\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\"\n },\n \"os\": {\n  \"family\": \"Android\",\n  \"major\": \"4\",\n  \"minor\": \"4\",\n  \"patch\": \"2\",\n  \"patchMinor\": null\n },\n \"device\": {\n  \"family\": \"Other\"\n }\n}\n```\n\nThe current `regexes.yaml` file does not support the \"stagefright\" User-Agent yet.\n@parcolee This [fork](https://github.com/commenthol/ua-parser) correctly resolves the device meanwhile we are waiting for #304 to happen. This fork works for Python, Perl, PHP, Java and Javascript.\n. nodejs is not a browser. The `navigator` object is not available.\nYou'll need to pass on `req.headers['user-agent']`.\n. Thanks for highlighting this. I'll update the README.\n. Readme is updated. Can you please check?\n. try using `res.json({ data: uap })`\n. Documentation fix raised by #440 \n. Just saw the travis output. Looks like the standard mocha reporter now is \"spec\" there. To get the output using the \"dot\" reporter, change in `package.json`:\n\n``` diff\n-   \"test\": \"mocha -u tdd ./js/test/*.js\"\n+   \"test\": \"mocha -u tdd -R dot ./js/test/*.js\"\n```\n\nThe failure of the tests is related to your renaming of \"Automata\" to \"Reuser\".\nSeams that there is still a chance for finding the wording for such kind of UAs... Right? \nWhat about changing \"Automata\"||\"Reuser\" to \"headless\"? \n. My definition of \"headless\" would mean a headless browser. \n. `libw` triggers your \"Generic Feature Phone\"\n\n```\n  - regex: '^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)'\n```\n. Sorry for selecting the wrong branch. Now everything should do.\n. or not...\n~~short update build passes with php 5.5 but fails with php 5.3~~\n~~Travis uses php 5.3 per default :(~~\nphp build only passes if `.travis.yml` contains\n\n```\nlanguage: php\nphp:\n  - 5.3\n  - 5.5\n```\n\nSo there is something strange with the envs travis uses for the different build langs...\nwhich means +1 for #304\nWill try to investigate further...\n. Problem with travis is solved now. :)\n. Wow that was fast... Thanks.\n. @toolmantim just want to leave you a note, that the brand-model parsing has been merged. It would be awesome if you'd update your project to support the new regexes. \n. Let me say it this way:\n\n(Iceweasel == Firefox) === true\n(Iceweasel === Firefox) === false\n\nApart from being the same, yes there is a difference.\nIMHO there is an interest for people to get knowledge of exactly that difference. (Imagine Stats).\n\n@Mte90 If I understood you right you are trying to identify an \"engine\" or at least capabilities of a browser. Those would be the same.\nUnlike we do not yet take care of such, I would consider Iceweasel as being different to Firefox.\n. My primary intention of #466 is to show the current state of the brand-model parsing which has been introduced with #285 in Aug. 2013.\nWith this I like to renew the discussion on #304 and like to encourage this project to give guidelines on how and where to drive itself.\n\nSo I'm currently not disappointed by PR #466 being reverted, but I definitely would be, if no further action than that is the outcome.\n\nFor me the following steps need to be next:\n1. Really kick-off the seperation of parsers to yaml rules as intended by #304 and started with [ua-parser](https://github.com/ua-parser/).\n   - Prepare the parser base-projects to allow PRs from active members \n   - Milestones and/or Timelines could be a good starting point...\n     - Step1: Migrate the present\n     - Step2: Adding new features\n2. Consider correct versioning as must-have\n   - ua-parser on npm is in a terrible state #323\n   - Is releasing Java SNAPSHOTS only the right release model?\n3. Truely state what shall be in and what shall be out-of-scope of ua-parser.\n   - E.g. Is Brand-Model Parsing as proposed in #466 really desired?\n   - Does generalization of parser sematics (multi-replacements, case-insensitive matches as of brand-model parsing) make sense for `user_agent_parsers:` and `os_parsers:` rules as well?  \n   - Can we finalize the first draft version of the spec? #300\n   - Are annotating parsing results desired? E.g. does this project want to have details of a device \"mobile/tablet/desktop\" as proposed in #428 or doesn't it as stated in #75?\n   - Do we want to get seperate parser-rules for browser engines as proposed by #241?\n   - Order of priority: Is performance more important than the detailed detection of a UA?  \n     Is working on performance, which inevitable involves a change of parser semantics, a project goal?\n\nCan I please get commitments/feedback/answers for this? \n. This project has moved to https://github.com/ua-parser/uap-core. \nPlease use the regexes.yaml file from there. \nWindows 10 is already supported.\n. We have moved to [uap-core](https://github.com/ua-parser/uap-core). Can you please update the regexes with proper testcases there? Thanks.\n. @public can you please commit your changes to https://github.com/ua-parser/uap-python as this project has moved.\n. Please consider that this project has moved to [ua-parser](https://github.com/ua-parser). \nI think the problem arises from mixing a regexes.yaml file with an unsupported parser version.\n. Hi, this repo has moved to https://github.com/ua-parser/. Please check for the latest version there. Thanks.\n. This project has moved. Please try with the latest release from ua-parser/uap-core and if still present report this issue there. \n. @MaxVerro please note that this project has moved. Pls check README. Please submit a PR there.\r\n. Please note that project has moved. Check Readme.. Please note that project has moved. Check Readme.. ",
    "peterbarretto": "Made the following changes and it work somewhat \nexports.index = function(req, res){\n\nvar theua = req.headers['user-agent'];\nconsole.log(\"theua: \"+theua);\nvar r = require('ua-parser').parse(theua);\n\nif(typeof r.ua !== 'undefined' && r.ua !== null){\n\nconsole.log(\"ua: \"+r.ua.toString());        // -> \"Safari 5.0.1\"\nconsole.log(\"ua version: \"+r.ua.toVersionString()); // -> \"5.0.1\"\nconsole.log(\"ua family: \"+r.ua.family)             // -> \"Safari\"\nconsole.log(\"ua major: \"+r.ua.major);             // -> \"5\"\nconsole.log(\"ua minor: \"+r.ua.minor);             // -> \"0\"\nconsole.log(\"ua patch: \"+r.ua.patch);             // -> \"1\"\n}\nif(typeof r.os !== 'undefined' && r.os !== null){\n\nconsole.log(r.os.toString());        // -> \"iOS 5.1\"\nconsole.log(\"version: \"+r.os.toVersionString()); // -> \"5.1\"\nconsole.log(\"family: \"+r.os.family)             // -> \"iOS\"\nconsole.log(\"major: \"+r.os.major);             // -> \"5\"\nconsole.log(\"minor: \"+r.os.minor);             // -> \"1\"\nconsole.log(\"patch: \"+r.os.patch);             // -> null\n}\nif(typeof r.os !== 'undefined' && r.os !== null){\n\nconsole.log(\"device: \"+r.device.family); \n}\n};\n\nBut now i dont get the ua output now as r.ua is shown as null??\n. Made the following changes and it work somewhat \nexports.index = function(req, res){\n\nvar theua = req.headers['user-agent'];\nconsole.log(\"theua: \"+theua);\nvar r = require('ua-parser').parse(theua);\n\nif(typeof r.ua !== 'undefined' && r.ua !== null){\n\nconsole.log(\"ua: \"+r.ua.toString());        // -> \"Safari 5.0.1\"\nconsole.log(\"ua version: \"+r.ua.toVersionString()); // -> \"5.0.1\"\nconsole.log(\"ua family: \"+r.ua.family)             // -> \"Safari\"\nconsole.log(\"ua major: \"+r.ua.major);             // -> \"5\"\nconsole.log(\"ua minor: \"+r.ua.minor);             // -> \"0\"\nconsole.log(\"ua patch: \"+r.ua.patch);             // -> \"1\"\n}\nif(typeof r.os !== 'undefined' && r.os !== null){\n\nconsole.log(r.os.toString());        // -> \"iOS 5.1\"\nconsole.log(\"version: \"+r.os.toVersionString()); // -> \"5.1\"\nconsole.log(\"family: \"+r.os.family)             // -> \"iOS\"\nconsole.log(\"major: \"+r.os.major);             // -> \"5\"\nconsole.log(\"minor: \"+r.os.minor);             // -> \"1\"\nconsole.log(\"patch: \"+r.os.patch);             // -> null\n}\nif(typeof r.os !== 'undefined' && r.os !== null){\n\nconsole.log(\"device: \"+r.device.family); \n}\n};\n\nBut now i dont get the ua output now as r.ua is shown as null??\n. ",
    "piuccio": "Hi, would it be possible to publish a new version on npm? \nThe last one available is `0.3.1` where this bug has not been fixed yet.\n\nThanks for the fix\n. Hi, would it be possible to publish a new version on npm? \nThe last one available is `0.3.1` where this bug has not been fixed yet.\n\nThanks for the fix\n. ",
    "lstrojny": "Fixed with #308. Use `php bin/uaparser.php uaparser:convert`.\n. No longer relevant.\n. Closing.\n. See PR.\n. Merged\n. With the merge of #308, PHP >=5.3 is the new minimum requirement.\n. @dmolsen I don\u2019t see any progress on ua-classifier. Am I missing something?\n. Agree.\n. Btw, I'm waiting for this be merged before I force you to rebase with merging https://github.com/tobie/ua-parser/tree/feature/split-parsers.\n. Looks solid to me, I am merging it.\n. Please rebase and squash.\n. #308 is now merged. Closing.\n. @tobie separate repositories make a lot of sense, especially since travis usage and package management will be easier. \n. To help with the performance of the PHP version: I assume you have an opcode cache enabled (either opcache or apc). Could you post your source file and an xhprof trace of what takes so long?\n. You are surely right that it will never be as fast as in a compiled language but let\u2019s see, maybe we can already win a lot from optimizing the PHP code a little more.\n. @dmolsen I know it\u2019s a huge PR but I didn\u2019t find a clever way to do atomic changes (without depending on each other and creating a different kind of mess), sorry. If you want to no longer maintain the port, I would be willing to take over.\n. Thank you for your quick feedback!\n. @commenthol as soon as this PR is through, I'll gladly help with the multiReplace.\n. Sure thing!\n. @dmolsen any news?\n. Any news?\n. @dmolsen thanks!\n. Thanks!\n. Merged.\n. I'll check that out.\n. Fixed. Reason was that the regexes.yaml from master was used all the time. Is now fixed in the travis.yml\n. If we really want to support that (do we @tobie?), we should explicitly test for the variations.\n. Tests fixed.\n. Sorry for the inconvenient experience, let\u2019s see what I can do about it.\n- Exception message: the exception message is fixed now, thanks for the hint.\n- The path is a little nicer now\n\nAbout shipping with an up-to-date `regexes.php`: this needs a change in our workflow, as it needs to be regenerated everytime somebody changes something on the original `regexes.yaml`. I'll have to check how to do that best.\n\nOne last thing: I don\u2019t get the issue about including the `autoload.php`, where exactly is it missing?\n. The composer issue should be fixed in 3a43e3c.\n. Could you add it to the test data as well?\n. Thanks for the report. You are right, there is a problem using it when installed via composer. I have to find out what the preferred way to solve that issue is.\n. The composer issue should be fixed in 3a43e3c.\n. @tobie what is the policy with new tags?\n. Makes sense. Any ETA on the split?\n. Cool!\n. Closing as duplicate\n. @mimmi20 could you remove your packagist package so we can recreate it and set up auto update?\n. @mimmi20 true, there doesn\u2019t seem to be a remove button. Could you ask contact@packagist.org for help?\n. @mimmi20 try it by adding @lstrojny to it.\n. Done. Thanks!\n. I am coordinating with @tobie to set up the packagist hook.\n. It's most likely the prefix. Could you tag v3.3?\n. Hmm, I see. Alright everyone, please use master for now for PHP, it\u2019s stable enough.\n. Good catch!\n. `array_filter($array, function($el) {return $el !== null;});` should work.\n. Would you mind opening a PR?\n. Already fixed, thx!\n. Can we run test testsuite on travis against PyPy?\n. Already resolved\n. Looks sane to me\n. Thank you!\n. Fixed\n. Thanks, already fixed!\n. Looks good to me, thank you!\n. Thanks!\n. Do we have testcases for both variants?\n. Could you add one for the other case?\n. Thanks!\n. Could you rebase?\n. Thanks!\n. Could you rebase for the merge?\n. And another rebase \u2026\n. Could you rebase for a merge?\n. And another rebase :(\n. Thanks!\n. Could you have a look at the tests?\n. Thanks!\n. Looks good, please rebase.\n. Thanks!\n. Looks good, please rebase for merge.\n. Sorry, please rebase again :)\n. And we need another rebase :(\n. Thanks!\n. Hmmm, shouldn't this be detected as Opera Mini?\n. OK, fair enough. Please rebase for merge.\n. Merged. Thanks!\n. Did you install ua-parser via composer?\n. Nice one! Please rebase for a merge\n. Thanks!\n. Thank you for the many pull requests, much appreciated\n. Thank you!\n. Can we run the tests against python 3 to not break things in the future?\n. Thanks and sorry for the confusion\n. Thank you!\n. @commenthol thanks again, keep up the good work!\n. Merged, thank you!\n. can you check the tests?\n. Can you fix the remaining issue and squash the commits for the merge? Thanks!\n. Squashing is missing, then we are fine\n. You should install it via Composer. Have a look at https://getcomposer.org/doc/00-intro.md for how to get started.\n. Thank you! Next time, you can use `git rebase` and `git push --force` to squash commits in an already open pull request.\n. I assume you have not installed the PHP version by using composer, right?\n. No feedback for a while, closing.\n. We have to wait for more timely releases for the split of the repository (#304).\n. `rv.` matches `rv:` as well. Not a huge issue\n. Unfortunately our release process currently does not involve making the proper changes for the composer.json. This will be fixed once we split the project.\n. @Dav8152 can you show me the diff of the backup and the current version to see what we are searching for: `diff <oldfile> <newfile>`\n. What\u2019s your PHP version?\n. Another question: If you run test suite, does the error happen as well?\n. That is weird as it should show up in the test suite. Have you identified which regex it is?\n. Can you add a testcase for it?\n. Fixed with #308. Use `php bin/uaparser.php uaparser:convert`.\n. No longer relevant.\n. Closing.\n. See PR.\n. Merged\n. With the merge of #308, PHP >=5.3 is the new minimum requirement.\n. @dmolsen I don\u2019t see any progress on ua-classifier. Am I missing something?\n. Agree.\n. Btw, I'm waiting for this be merged before I force you to rebase with merging https://github.com/tobie/ua-parser/tree/feature/split-parsers.\n. Looks solid to me, I am merging it.\n. Please rebase and squash.\n. #308 is now merged. Closing.\n. @tobie separate repositories make a lot of sense, especially since travis usage and package management will be easier. \n. To help with the performance of the PHP version: I assume you have an opcode cache enabled (either opcache or apc). Could you post your source file and an xhprof trace of what takes so long?\n. You are surely right that it will never be as fast as in a compiled language but let\u2019s see, maybe we can already win a lot from optimizing the PHP code a little more.\n. @dmolsen I know it\u2019s a huge PR but I didn\u2019t find a clever way to do atomic changes (without depending on each other and creating a different kind of mess), sorry. If you want to no longer maintain the port, I would be willing to take over.\n. Thank you for your quick feedback!\n. @commenthol as soon as this PR is through, I'll gladly help with the multiReplace.\n. Sure thing!\n. @dmolsen any news?\n. Any news?\n. @dmolsen thanks!\n. Thanks!\n. Merged.\n. I'll check that out.\n. Fixed. Reason was that the regexes.yaml from master was used all the time. Is now fixed in the travis.yml\n. If we really want to support that (do we @tobie?), we should explicitly test for the variations.\n. Tests fixed.\n. Sorry for the inconvenient experience, let\u2019s see what I can do about it.\n- Exception message: the exception message is fixed now, thanks for the hint.\n- The path is a little nicer now\n\nAbout shipping with an up-to-date `regexes.php`: this needs a change in our workflow, as it needs to be regenerated everytime somebody changes something on the original `regexes.yaml`. I'll have to check how to do that best.\n\nOne last thing: I don\u2019t get the issue about including the `autoload.php`, where exactly is it missing?\n. The composer issue should be fixed in 3a43e3c.\n. Could you add it to the test data as well?\n. Thanks for the report. You are right, there is a problem using it when installed via composer. I have to find out what the preferred way to solve that issue is.\n. The composer issue should be fixed in 3a43e3c.\n. @tobie what is the policy with new tags?\n. Makes sense. Any ETA on the split?\n. Cool!\n. Closing as duplicate\n. @mimmi20 could you remove your packagist package so we can recreate it and set up auto update?\n. @mimmi20 true, there doesn\u2019t seem to be a remove button. Could you ask contact@packagist.org for help?\n. @mimmi20 try it by adding @lstrojny to it.\n. Done. Thanks!\n. I am coordinating with @tobie to set up the packagist hook.\n. It's most likely the prefix. Could you tag v3.3?\n. Hmm, I see. Alright everyone, please use master for now for PHP, it\u2019s stable enough.\n. Good catch!\n. `array_filter($array, function($el) {return $el !== null;});` should work.\n. Would you mind opening a PR?\n. Already fixed, thx!\n. Can we run test testsuite on travis against PyPy?\n. Already resolved\n. Looks sane to me\n. Thank you!\n. Fixed\n. Thanks, already fixed!\n. Looks good to me, thank you!\n. Thanks!\n. Do we have testcases for both variants?\n. Could you add one for the other case?\n. Thanks!\n. Could you rebase?\n. Thanks!\n. Could you rebase for the merge?\n. And another rebase \u2026\n. Could you rebase for a merge?\n. And another rebase :(\n. Thanks!\n. Could you have a look at the tests?\n. Thanks!\n. Looks good, please rebase.\n. Thanks!\n. Looks good, please rebase for merge.\n. Sorry, please rebase again :)\n. And we need another rebase :(\n. Thanks!\n. Hmmm, shouldn't this be detected as Opera Mini?\n. OK, fair enough. Please rebase for merge.\n. Merged. Thanks!\n. Did you install ua-parser via composer?\n. Nice one! Please rebase for a merge\n. Thanks!\n. Thank you for the many pull requests, much appreciated\n. Thank you!\n. Can we run the tests against python 3 to not break things in the future?\n. Thanks and sorry for the confusion\n. Thank you!\n. @commenthol thanks again, keep up the good work!\n. Merged, thank you!\n. can you check the tests?\n. Can you fix the remaining issue and squash the commits for the merge? Thanks!\n. Squashing is missing, then we are fine\n. You should install it via Composer. Have a look at https://getcomposer.org/doc/00-intro.md for how to get started.\n. Thank you! Next time, you can use `git rebase` and `git push --force` to squash commits in an already open pull request.\n. I assume you have not installed the PHP version by using composer, right?\n. No feedback for a while, closing.\n. We have to wait for more timely releases for the split of the repository (#304).\n. `rv.` matches `rv:` as well. Not a huge issue\n. Unfortunately our release process currently does not involve making the proper changes for the composer.json. This will be fixed once we split the project.\n. @Dav8152 can you show me the diff of the backup and the current version to see what we are searching for: `diff <oldfile> <newfile>`\n. What\u2019s your PHP version?\n. Another question: If you run test suite, does the error happen as well?\n. That is weird as it should show up in the test suite. Have you identified which regex it is?\n. Can you add a testcase for it?\n. ",
    "vsagar": "closing it, would give another!\n. closing it, would give another!\n. ",
    "mattvagni": "Merci.\n. Merci.\n. ",
    "ColtonProvias": "Strike this pull request.  It appears there are more issues being thrown than at first glance.\n. Strike this pull request.  It appears there are more issues being thrown than at first glance.\n. ",
    "nsonntag": "I am having issues with this as well.  But for me it is the 'pda' in 'AutoUpdate' (shown above) that is causing these user agents to show up as 'Generic Smartphone'.  \n. I am having issues with this as well.  But for me it is the 'pda' in 'AutoUpdate' (shown above) that is causing these user agents to show up as 'Generic Smartphone'.  \n. ",
    "xanview": "I am on ubuntu 12.10, clean install (dev box), I'm doing:\n\n```\n# pip install pyyaml ua-parser\nDownloading/unpacking pyyaml\n  Downloading PyYAML-3.10.zip (364Kb): 364Kb downloaded\n  Running setup.py egg_info for package pyyaml\n\nDownloading/unpacking ua-parser\n  Downloading ua-parser-0.3.2.tar.gz\n  Running setup.py egg_info for package ua-parser\n\nInstalling collected packages: pyyaml, ua-parser\n  Running setup.py install for pyyaml\n    checking if libyaml is compilable\n    gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/check_libyaml.c -o build/temp.linux-x86_64-2.7/check_libyaml.o\n    build/temp.linux-x86_64-2.7/check_libyaml.c:2:18: fatal error: yaml.h: No such file or directory\n    compilation terminated.\n\n    libyaml is not found or a compiler error: forcing --without-libyaml\n    (if libyaml is installed correctly, you may need to\n     specify the option --include-dirs or uncomment and\n     modify the parameter include_dirs in setup.cfg)\n\n  Running setup.py install for ua-parser\n\n    Converting regexes.yaml to json...\nSuccessfully installed pyyaml ua-parser\nCleaning up...\n```\n\nThen when I try to do from ua_parser import user_agent_parser I see the above error.\n. As a workaround this works:\n\n```\nln -s  /usr/local/lib/python2.7/dist-packages/ua_parser-0.3.2-py2.7.egg/data/regexes.yaml /usr/local/lib/python2.7/dist-packages/ua_parser-0.3.2-py2.7.egg/ua_parser/regexes.yaml\n```\n. I am on ubuntu 12.10, clean install (dev box), I'm doing:\n\n```\n# pip install pyyaml ua-parser\nDownloading/unpacking pyyaml\n  Downloading PyYAML-3.10.zip (364Kb): 364Kb downloaded\n  Running setup.py egg_info for package pyyaml\n\nDownloading/unpacking ua-parser\n  Downloading ua-parser-0.3.2.tar.gz\n  Running setup.py egg_info for package ua-parser\n\nInstalling collected packages: pyyaml, ua-parser\n  Running setup.py install for pyyaml\n    checking if libyaml is compilable\n    gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/check_libyaml.c -o build/temp.linux-x86_64-2.7/check_libyaml.o\n    build/temp.linux-x86_64-2.7/check_libyaml.c:2:18: fatal error: yaml.h: No such file or directory\n    compilation terminated.\n\n    libyaml is not found or a compiler error: forcing --without-libyaml\n    (if libyaml is installed correctly, you may need to\n     specify the option --include-dirs or uncomment and\n     modify the parameter include_dirs in setup.cfg)\n\n  Running setup.py install for ua-parser\n\n    Converting regexes.yaml to json...\nSuccessfully installed pyyaml ua-parser\nCleaning up...\n```\n\nThen when I try to do from ua_parser import user_agent_parser I see the above error.\n. As a workaround this works:\n\n```\nln -s  /usr/local/lib/python2.7/dist-packages/ua_parser-0.3.2-py2.7.egg/data/regexes.yaml /usr/local/lib/python2.7/dist-packages/ua_parser-0.3.2-py2.7.egg/ua_parser/regexes.yaml\n```\n. ",
    "rascalking": "I just posted a pull request as part of #213, sorry I forgot to check the existing issues first.\n\nI'm seeing the same issue in a virtualenv on a fedora 18 box, python 2.7.3, with both pyyaml (3.10) and ua-parser (0.3.2) installed via pip.  The regexes.yaml gets installed to $VIRTUALENV/lib/python2.7/site-packages/ua_parser-0.3.2-py2.7.egg/data/regexes.yaml.  The existing ROOT_DIR/regexes.yaml lookup, as well as the resource_string('ua_parser', 'regexes.yaml') call recommended in #160, both fail.\n. Just tested on a Mac as well, and you're right, works like a charm.  Wonder if it's just fedora, or if if rhel/centos do the same thing.\n. Hitting some issues with the install (the install command is trying to pass\n\"--no-deps\" to setup.py, which doesn't accept it), presumably because I've\ngot distribute installed on my machine instead of setuptools.\n\nHowever, I noticed that when I uninstalled the one from pypi, it removed a\ncopy of regexes.yaml from the root of my virtualenv.  Upon further\ninvestigation, I'm seeing the following:\n  a) After install, there are two copies of regexes.yaml,\n$VIRTUAL_ENV/data/regexes.yaml, and\n$VIRTUAL_ENV/lib/python2.7/ua_parser/regexes.yaml.\n  b) After install, there's one copy of regexes.json, at\n$VIRTUAL_ENV/lib/python2.7/ua_parser/regexes.json.\n  c) After uninstall, $VIRTUAL_ENV/data/regexes.yaml is gone, but both\nversions (.yaml and .json) in $VIRTUAL_ENV/lib/python2.7/ua_parser are\nstill there.\n\nI'm new to this library...is there a reason we're telling\nsetuptools/distribute to package regexes.yaml as a system-wide data file\n(by putting it under data_files instead of package_data), then manually\ncopying it into the package data directory?  Wouldn't it be easier to\nsimply specify it under package_data?  Then pkg_resources.resource_filename\nshould theoretically always work.\n\nLet me test a patch of my own on fedora and osx, and get back to you...I\nthink that may work better.\n\nOn Thu, Mar 14, 2013 at 9:32 AM, Selwin Ong notifications@github.comwrote:\n\n> I have uploaded the fix to my ua-parser repo\n> https://github.com/selwin/ua-parser\n> \n> @rascalking https://github.com/rascalking can you try installing it\n> with pip install -e git+git://\n> github.com/selwin/ua-parser.git#egg=ua-parser and check if it now works\n> on Fedora?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14902027\n> .\n\n## \n\ndavid bonner // dbonner@gmail.com\n. Ah, apparently one reason is because it's an incredible pain in the ass to\nfind a way to get distutils to include files outside your package directory\n(ua-parser/py) as package data.  I noticed the haskell port symlinks\nregexes.yaml in, and the perl port has its own copy, both presumably to\nwork around a similar packaging issue.\n\nIs there any objection to doing something similar for the python port?  If\nnot, I can try to copy it down before the install happens, but it'd be\neasier, and the setup.py would be cleaner, if we could just symlink it.\n\nOn Fri, Mar 15, 2013 at 9:46 AM, Selwin Ong notifications@github.comwrote:\n\n> @rascalking https://github.com/rascalking no reason other than\n> ignorance :). Alright, let me know how it goes. Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14961227\n> .\n\n## \n\ndavid bonner // dbonner@gmail.com\n. Managed to avoid needing a symlink, and I think I've got a fix.  Can somebody with an ubuntu vm try to install my patch via \"pip install git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\", and let me know if that works there?\n. PR is #217.\n. Hell.  I'm guessing that when installing this way, ua-parser's setup.py is being run from outside its directory.  If that's the case, a fix I just pushed on a branch should solve the issue.  I've verified that it continues to work for me with the test cases I can run (manyal setup.py, pip install .).\n\n@georgevreilly, any chance you can try out https://github.com/rascalking/ua-parser/tree/py-setup-fix-again on your private pypi server to see if it fixes the issue for you?\n. @malicustommade, it is a dependency...the issue we're trying to solve here is that due to different ways to install the package, it's tricky to get the data file we need (the regexes.yaml file).\n. Sending a more complete fix in a few.\n. I just posted a pull request as part of #213, sorry I forgot to check the existing issues first.\n\nI'm seeing the same issue in a virtualenv on a fedora 18 box, python 2.7.3, with both pyyaml (3.10) and ua-parser (0.3.2) installed via pip.  The regexes.yaml gets installed to $VIRTUALENV/lib/python2.7/site-packages/ua_parser-0.3.2-py2.7.egg/data/regexes.yaml.  The existing ROOT_DIR/regexes.yaml lookup, as well as the resource_string('ua_parser', 'regexes.yaml') call recommended in #160, both fail.\n. Just tested on a Mac as well, and you're right, works like a charm.  Wonder if it's just fedora, or if if rhel/centos do the same thing.\n. Hitting some issues with the install (the install command is trying to pass\n\"--no-deps\" to setup.py, which doesn't accept it), presumably because I've\ngot distribute installed on my machine instead of setuptools.\n\nHowever, I noticed that when I uninstalled the one from pypi, it removed a\ncopy of regexes.yaml from the root of my virtualenv.  Upon further\ninvestigation, I'm seeing the following:\n  a) After install, there are two copies of regexes.yaml,\n$VIRTUAL_ENV/data/regexes.yaml, and\n$VIRTUAL_ENV/lib/python2.7/ua_parser/regexes.yaml.\n  b) After install, there's one copy of regexes.json, at\n$VIRTUAL_ENV/lib/python2.7/ua_parser/regexes.json.\n  c) After uninstall, $VIRTUAL_ENV/data/regexes.yaml is gone, but both\nversions (.yaml and .json) in $VIRTUAL_ENV/lib/python2.7/ua_parser are\nstill there.\n\nI'm new to this library...is there a reason we're telling\nsetuptools/distribute to package regexes.yaml as a system-wide data file\n(by putting it under data_files instead of package_data), then manually\ncopying it into the package data directory?  Wouldn't it be easier to\nsimply specify it under package_data?  Then pkg_resources.resource_filename\nshould theoretically always work.\n\nLet me test a patch of my own on fedora and osx, and get back to you...I\nthink that may work better.\n\nOn Thu, Mar 14, 2013 at 9:32 AM, Selwin Ong notifications@github.comwrote:\n\n> I have uploaded the fix to my ua-parser repo\n> https://github.com/selwin/ua-parser\n> \n> @rascalking https://github.com/rascalking can you try installing it\n> with pip install -e git+git://\n> github.com/selwin/ua-parser.git#egg=ua-parser and check if it now works\n> on Fedora?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14902027\n> .\n\n## \n\ndavid bonner // dbonner@gmail.com\n. Ah, apparently one reason is because it's an incredible pain in the ass to\nfind a way to get distutils to include files outside your package directory\n(ua-parser/py) as package data.  I noticed the haskell port symlinks\nregexes.yaml in, and the perl port has its own copy, both presumably to\nwork around a similar packaging issue.\n\nIs there any objection to doing something similar for the python port?  If\nnot, I can try to copy it down before the install happens, but it'd be\neasier, and the setup.py would be cleaner, if we could just symlink it.\n\nOn Fri, Mar 15, 2013 at 9:46 AM, Selwin Ong notifications@github.comwrote:\n\n> @rascalking https://github.com/rascalking no reason other than\n> ignorance :). Alright, let me know how it goes. Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/209#issuecomment-14961227\n> .\n\n## \n\ndavid bonner // dbonner@gmail.com\n. Managed to avoid needing a symlink, and I think I've got a fix.  Can somebody with an ubuntu vm try to install my patch via \"pip install git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\", and let me know if that works there?\n. PR is #217.\n. Hell.  I'm guessing that when installing this way, ua-parser's setup.py is being run from outside its directory.  If that's the case, a fix I just pushed on a branch should solve the issue.  I've verified that it continues to work for me with the test cases I can run (manyal setup.py, pip install .).\n\n@georgevreilly, any chance you can try out https://github.com/rascalking/ua-parser/tree/py-setup-fix-again on your private pypi server to see if it fixes the issue for you?\n. @malicustommade, it is a dependency...the issue we're trying to solve here is that due to different ways to install the package, it's tricky to get the data file we need (the regexes.yaml file).\n. Sending a more complete fix in a few.\n. ",
    "georgevreilly": "I'm hitting this bug with regexex.yaml, if I use the PyYAML installed by `install_requires = ['PyYAML']` when I do `python setup.py develop`.\n\nI'm trying this on a Mac with Python 2.7.3 installed by [Homebrew](https://github.com/mxcl/homebrew/wiki/Homebrew-and-Python).\nI'm also using virtualenv and [virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/en/latest/)\n\nWhen I run @rascalking's patch, I get the following errors\n\n```\ngeorger@mac-georger:~/src/account_cob$ (master) mkvirtualenv account_cob\nNew python executable in account_cob/bin/python\nInstalling setuptools.............done.\nInstalling pip...............done.\n(account_cob)georger@mac-georger:~/src/account_cob$ (master) pip install git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\nDownloading/unpacking ua-parser from git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\n  Running setup.py egg_info for package ua-parser\n\nDownloading/unpacking pyyaml (from ua-parser)\n  Running setup.py egg_info for package pyyaml\n\nInstalling collected packages: ua-parser, pyyaml\n  Running setup.py install for ua-parser\n    Converting regexes.yaml to json...\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 54, in <module>\n        'Topic :: Software Development :: Libraries :: Python Modules',\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n        dist.run_commands()\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n        self.run_command(cmd)\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 972, in run_command\n        cmd_obj.run()\n      File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n        import yaml\n    ImportError: No module named yaml\n    Complete output from command /Users/georger/pyenvs/account_cob/bin/python -c \"import setuptools;__file__='/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-CGT0q9-record/install-record.txt --single-version-externally-managed --install-headers /Users/georger/pyenvs/account_cob/bin/../include/site/python2.7:\n    running install\n\nCopying regexes.yaml to package directory...\n\nConverting regexes.yaml to json...\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 54, in <module>\n\n    'Topic :: Software Development :: Libraries :: Python Modules',\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n\n    dist.run_commands()\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n\n    self.run_command(cmd)\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 972, in run_command\n\n    cmd_obj.run()\n\n  File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n\n    import yaml\n\nImportError: No module named yaml\n\n----------------------------------------\nCommand /Users/georger/pyenvs/account_cob/bin/python -c \"import setuptools;__file__='/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-CGT0q9-record/install-record.txt --single-version-externally-managed --install-headers /Users/georger/pyenvs/account_cob/bin/../include/site/python2.7 failed with error code 1 in /Users/georger/pyenvs/account_cob/build/ua-parser\nStoring complete log in /Users/georger/.pip/pip.log\n```\n. @selwin, you're right, of course. It works fine if I `pip install PyYAML` before installing @rascalking's patch, and I no longer get the error about the missing regexes.yaml at runtime.\n. When I install @rascalking's patched version of ua-parser via `setup.py develop`, I get the dreaded No such file regexes.yaml error. When I install via `pip`, it works.\n\nNote: I uploaded a custom package to our internal PyPI server, thus:\n\n```\n(ua-parser)georger@mac-georger:~/src/ua-parser$ (py-install-refactor) python setup.py --verbose sdist upload -r internal\n    <...>\nCreating tar archive\nremoving 'ua-parser-0.3.3' (and everything under it)\nrunning upload\nUsing PyPI login from /Users/georger/.pypirc\nSubmitting dist/ua-parser-0.3.3.tar.gz to http://pypi.build.cozi.com/\nServer response (200): OK\n```\n\nThen I tried to use it in a different package, which depends only on PyYAML and ua-parser:\n\n```\ngeorger@mac-georger:~/src/todo_cob$ (master) cat setup.py\nfrom setuptools import setup, find_packages\n\nsetup(\n    name='TodoCob',\n    version='0.1dev',\n    install_requires=[\n        'PyYAML',\n        'ua-parser',\n    ]\n)\n```\n\nI created a fresh virtualenv:\n\n```\ngeorger@mac-georger:~/src/todo_cob$ (master) mkvirtualenv todo_cob\nNew python executable in todo_cob/bin/python\nInstalling setuptools............done.\nInstalling pip...............done.\nvirtualenvwrapper.user_scripts creating /Users/georger/pyenvs/todo_cob/bin/predeactivate\n    <...>\n```\n\nRunning `setup.py develop` against the private PyPI server:\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) python setup.py -v develop -i http://pypi.build.cozi.com/simple\nrunning develop\nrunning egg_info\nwriting requirements to TodoCob.egg-info/requires.txt\nwriting TodoCob.egg-info/PKG-INFO\nwriting top-level names to TodoCob.egg-info/top_level.txt\nwriting dependency_links to TodoCob.egg-info/dependency_links.txt\nreading manifest file 'TodoCob.egg-info/SOURCES.txt'\nwriting manifest file 'TodoCob.egg-info/SOURCES.txt'\nrunning build_ext\nCreating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/TodoCob.egg-link (link to .)\nAdding TodoCob 0.1dev to easy-install.pth file\nSaving /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/src/todo_cob\nProcessing dependencies for TodoCob==0.1dev\n\nSearching for ua-parser\nReading http://pypi.build.cozi.com/simple/ua-parser/\nFound link: http://pypi.build.cozi.com/packages/ua-parser-0.3.3.tar.gz\nBest match: ua-parser 0.3.3\nDownloading http://pypi.build.cozi.com/packages/ua-parser-0.3.3.tar.gz\nProcessing ua-parser-0.3.3.tar.gz\nUnpacking ua-parser-0.3.3 to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3\nUnpacking ua-parser-0.3.3/MANIFEST.in to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/MANIFEST.in\nUnpacking ua-parser-0.3.3/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/PKG-INFO\nUnpacking ua-parser-0.3.3/py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py\nUnpacking ua-parser-0.3.3/py/ua_parser to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser\nUnpacking ua-parser-0.3.3/py/ua_parser/__init__.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/__init__.py\nUnpacking ua-parser-0.3.3/py/ua_parser/user_agent_parser.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/user_agent_parser.py\nUnpacking ua-parser-0.3.3/py/ua_parser/user_agent_parser_test.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/user_agent_parser_test.py\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/dependency_links.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/dependency_links.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/not-zip-safe to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/not-zip-safe\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/PKG-INFO\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/requires.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/requires.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/SOURCES.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/SOURCES.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/top_level.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/top_level.txt\nUnpacking ua-parser-0.3.3/regexes.yaml to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/regexes.yaml\nUnpacking ua-parser-0.3.3/setup.cfg to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/setup.cfg\nUnpacking ua-parser-0.3.3/setup.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/setup.py\nRunning ua-parser-0.3.3/setup.py bdist_egg --dist-dir /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/egg-dist-tmp-WZgZuM\nrunning bdist_egg\nrunning egg_info\nwriting requirements to py/ua_parser.egg-info/requires.txt\nwriting py/ua_parser.egg-info/PKG-INFO\nwriting top-level names to py/ua_parser.egg-info/top_level.txt\nwriting dependency_links to py/ua_parser.egg-info/dependency_links.txt\nreading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'py/ua_parser.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.7-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/ua_parser\ncopying py/ua_parser/__init__.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\ncreating build/bdist.macosx-10.7-x86_64\ncreating build/bdist.macosx-10.7-x86_64/egg\ncreating build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/__init__.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser_test.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\ncreating build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/PKG-INFO -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/SOURCES.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/dependency_links.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/not-zip-safe -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/requires.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/top_level.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncreating '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/egg-dist-tmp-WZgZuM/ua_parser-0.3.3-py2.7.egg' and adding 'build/bdist.macosx-10.7-x86_64/egg' to it\nremoving 'build/bdist.macosx-10.7-x86_64/egg' (and everything under it)\ncreating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\nExtracting ua_parser-0.3.3-py2.7.egg to /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\nAdding ua-parser 0.3.3 to easy-install.pth file\nSaving /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\n```\n\nNow `setup.py develop` is installing PyYAML (mostly elided):\n\n```\nSearching for PyYAML\nReading http://pypi.build.cozi.com/simple/PyYAML/\nFound link: http://pypi.build.cozi.com/packages/PyYAML-3.10.tar.gz\nBest match: PyYAML 3.10\nDownloading http://pypi.build.cozi.com/packages/PyYAML-3.10.tar.gz\nProcessing PyYAML-3.10.tar.gz\n  <snip>\nInstalled /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/PyYAML-3.10-py2.7-macosx-10.7-x86_64.egg\nFinished processing dependencies for TodoCob==0.1dev\n```\n\nWhat does pip think we have?\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip freeze\nPyYAML==3.10\n-e git+https://github.com/cozi/todo_cob.git@30718a8778a713e4a27d646b62fc3aaf7e022a84#egg=TodoCob-dev\nua-parser==0.3.3\nwsgiref==0.1.2\n```\n\nLet's try it out:\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) python\nPython 2.7.3 (default, Jan 25 2013, 18:53:54)\n[GCC 4.2.1 Compatible Apple Clang 4.1 ((tags/Apple/clang-421.11.66))] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser.py\", line 396, in <module>\n    yamlFile = open(yamlPath)\nIOError: [Errno 2] No such file or directory: '/Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/regexes.yaml'\n```\n\nUninstall.\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip uninstall ua-parser\nUninstalling ua-parser:\n  /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\nProceed (y/n)? y\n  Successfully uninstalled ua-parser\n```\n\nInstall with pip from the same private PyPI server.\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip install -v -i http://pypi.build.cozi.com/simple ua-parser\nDownloading/unpacking ua-parser\n  Downloading ua-parser-0.3.3.tar.gz\n  Running setup.py egg_info for package ua-parser\n    running egg_info\n    creating pip-egg-info/ua_parser.egg-info\n    writing requirements to pip-egg-info/ua_parser.egg-info/requires.txt\n    writing pip-egg-info/ua_parser.egg-info/PKG-INFO\n    writing top-level names to pip-egg-info/ua_parser.egg-info/top_level.txt\n    writing dependency_links to pip-egg-info/ua_parser.egg-info/dependency_links.txt\n    writing manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    writing manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\nRequirement already satisfied (use --upgrade to upgrade): pyyaml in /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/PyYAML-3.10-py2.7-macosx-10.7-x86_64.egg (from ua-parser)\nInstalling collected packages: ua-parser\n  Running setup.py install for ua-parser\n    running install\n    Copying regexes.yaml to package directory...\n    Converting regexes.yaml to json...\n    running build\n    running build_py\n    creating build\n    creating build/lib\n    creating build/lib/ua_parser\n    copying py/ua_parser/__init__.py -> build/lib/ua_parser\n    copying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\n    copying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\n    running egg_info\n    writing requirements to py/ua_parser.egg-info/requires.txt\n    writing py/ua_parser.egg-info/PKG-INFO\n    writing top-level names to py/ua_parser.egg-info/top_level.txt\n    writing dependency_links to py/ua_parser.egg-info/dependency_links.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    writing manifest file 'py/ua_parser.egg-info/SOURCES.txt'\n    copying py/ua_parser/regexes.yaml -> build/lib/ua_parser\n    copying py/ua_parser/regexes.json -> build/lib/ua_parser\n    running install_lib\n    creating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/__init__.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/regexes.json -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/regexes.yaml -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/user_agent_parser.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/user_agent_parser_test.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/__init__.py to __init__.pyc\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/user_agent_parser.py to user_agent_parser.pyc\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\n    running install_egg_info\n    Copying py/ua_parser.egg-info to /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg-info\n    running install_scripts\n    writing list of installed files to '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-MWZJyN-record/install-record.txt'\nSuccessfully installed ua-parser\nCleaning up...\n  Removing temporary dir /Users/georger/pyenvs/todo_cob/build...\n```\n\nNow it works!\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pythonPython 2.7.3 (default, Jan 25 2013, 18:53:54)\n[GCC 4.2.1 Compatible Apple Clang 4.1 ((tags/Apple/clang-421.11.66))] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\n>>> dir(user_agent_parser)\n['DEVICE_PARSERS', 'DeviceParser', 'GetFilters', 'OSParser', 'OS_PARSERS', 'Parse', 'ParseDevice', 'ParseOS', 'ParseUserAgent', 'ParseWithJSOverrides', 'Pretty', 'PrettyOS', 'PrettyUserAgent', 'UA_PARSER_YAML', 'USER_AGENT_PARSERS', 'UserAgentParser', '__author__', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '_device_parser', '_device_replacement', '_family_replacement', '_os_parser', '_os_replacement', '_regex', '_ua_parser', '_v1_replacement', 'json', 'json_file', 'json_path', 'os', 're', 'regexes', 'resource_filename', 'yaml', 'yamlPath']\n```\n. Sorry about the delay. I'm afraid that it doesn't work.\n\nI created a package of ua-parser with `python setup.py sdist`. Note: I bumped the version number to 0.3.4, to be sure that I was getting the right one.\n\nI confirmed that the updates to setup.py were present:\n\n```\n(todo_deploy)georger@mac-georger:~/src/ua-parser$ (py-setup-fix-again) tar -ztvf dist/ua-parser-0.3.4.tar.gz\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/\n-rw-r--r--  0 georger staff      20 Jan 11 18:19 ua-parser-0.3.4/MANIFEST.in\n-rw-r--r--  0 georger staff     657 May 23 17:12 ua-parser-0.3.4/PKG-INFO\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/ua_parser/\n-rw-r--r--  0 georger staff      20 Jan 11 18:19 ua-parser-0.3.4/py/ua_parser/__init__.py\n-rw-r--r--  0 georger staff   14722 May 23 15:54 ua-parser-0.3.4/py/ua_parser/user_agent_parser.py\n-rw-r--r--  0 georger staff    9353 Jan 11 18:19 ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/\n-rw-r--r--  0 georger staff       1 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt\n-rw-r--r--  0 georger staff       1 Feb 13 11:52 ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe\n-rw-r--r--  0 georger staff     657 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO\n-rw-r--r--  0 georger staff       6 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt\n-rw-r--r--  0 georger staff     345 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt\n-rw-r--r--  0 georger staff      10 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt\n-rw-r--r--  0 georger staff   32009 May 23 16:46 ua-parser-0.3.4/regexes.yaml\n-rw-r--r--  0 georger staff      59 May 23 17:12 ua-parser-0.3.4/setup.cfg\n-rw-r--r--  0 georger staff    2001 May 23 17:12 ua-parser-0.3.4/setup.py\n(todo_deploy)georger@mac-georger:~/src/ua-parser$ (py-setup-fix-again) cd dist/\n(todo_deploy)georger@mac-georger:~/src/ua-parser/dist$ (py-setup-fix-again) tar -zxvf ua-parser-0.3.4.tar.gz ua-parser-0.3.4/setup.py\nx ua-parser-0.3.4/setup.py\n(todo_deploy)georger@mac-georger:~/src/ua-parser/dist$ (py-setup-fix-again) grep os.path ua-parser-0.3.4/setup.py\n        cwd = os.path.abspath(os.path.dirname(__file__))\n        yaml_src = os.path.join(cwd, 'regexes.yaml')\n        if not os.path.exists(yaml_src):\n        yaml_dest = os.path.join(cwd, 'py', 'ua_parser', 'regexes.yaml')\n```\n\nHere's the `setup.cfg` for the package that's using ua-parser:\n\n```\n[easy_install]\nindex_url = http://pypi.corp.cozi.com/simple\n```\n\nHere's the relevant output from `python setup.py -v install`:\n\n```\n(todo_deploy)georger@mac-georger:~/src/slingr$ (master) python setup.py -v install\nrunning install\nrunning bdist_egg\nrunning egg_info\n    ...\nrunning install_lib\nrunning build_py\n    ...\nProcessing dependencies for Slingr==0.0.8\nSearching for ua-parser\nReading http://pypi.corp.cozi.com/simple/ua-parser/\nFound link: http://pypi.corp.cozi.com/packages/ua-parser-0.3.3.tar.gz\nFound link: http://pypi.corp.cozi.com/packages/ua-parser-0.3.4.tar.gz\nBest match: ua-parser 0.3.4\nDownloading http://pypi.corp.cozi.com/packages/ua-parser-0.3.4.tar.gz\nProcessing ua-parser-0.3.4.tar.gz\nUnpacking ua-parser-0.3.4 to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4\nUnpacking ua-parser-0.3.4/MANIFEST.in to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/MANIFEST.in\nUnpacking ua-parser-0.3.4/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/PKG-INFO\nUnpacking ua-parser-0.3.4/py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py\nUnpacking ua-parser-0.3.4/py/ua_parser to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser\nUnpacking ua-parser-0.3.4/py/ua_parser/__init__.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/__init__.py\nUnpacking ua-parser-0.3.4/py/ua_parser/user_agent_parser.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/user_agent_parser.py\nUnpacking ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt\nUnpacking ua-parser-0.3.4/regexes.yaml to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/regexes.yaml\nUnpacking ua-parser-0.3.4/setup.cfg to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/setup.cfg\nUnpacking ua-parser-0.3.4/setup.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/setup.py\nRunning ua-parser-0.3.4/setup.py bdist_egg --dist-dir /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/egg-dist-tmp-NtDAFg\nrunning bdist_egg\nrunning egg_info\nwriting requirements to py/ua_parser.egg-info/requires.txt\nwriting py/ua_parser.egg-info/PKG-INFO\nwriting top-level names to py/ua_parser.egg-info/top_level.txt\nwriting dependency_links to py/ua_parser.egg-info/dependency_links.txt\nreading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'py/ua_parser.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.7-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/ua_parser\ncopying py/ua_parser/__init__.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\ncreating build/bdist.macosx-10.7-x86_64\ncreating build/bdist.macosx-10.7-x86_64/egg\ncreating build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/__init__.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser_test.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\ncreating build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/PKG-INFO -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/SOURCES.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/dependency_links.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/not-zip-safe -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/requires.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/top_level.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncreating '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/egg-dist-tmp-NtDAFg/ua_parser-0.3.4-py2.7.egg' and adding 'build/bdist.macosx-10.7-x86_64/egg' to it\nremoving 'build/bdist.macosx-10.7-x86_64/egg' (and everything under it)\ncreating /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg\nExtracting ua_parser-0.3.4-py2.7.egg to /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\nAdding ua-parser 0.3.4 to easy-install.pth file\nSaving /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg\n```\n. I think you need to do something with `regexes.yaml` in the `build_py` command.\n. BTW, you can create a local PyPI easily with [pip2pi](https://github.com/wolever/pip2pi). You don't even need a web server. In a package that _depends_ on ua-parser, have a `setup.cfg` that looks like:\n\n```\n[easy_install]\nindex_url = file:///Users/georger/.pip2pi/simple\n```\n\nand `python setup.py install` will pull from `~/.pip2pi`.\n\nIn fact, you don't even need pip2pi. You can just drop the ua-parser tarball created by `python setup.py sdist` into `~/.pip2pi/simple/ua-parser/`.\n. I fixed an issue with the installer failing on Linux. I've pushed the fixes to my branch. See pull request #268 \n\nHere's my understanding of how it works.\n\n## `python setup.py develop` in `ua-parser` source directory\n- `ua-parser.egg-link` is created in `site-packages` pointing back to source directory\n- `regexes.yaml` and `regexes.json` get copied to `py/ua_parser`\n\n## `python setup.py install` in `ua-parser` source directory\n- `ua-parser` is created in `site-packages` \n- It contains `regexes.yaml` and `regexes.json`\n\n## `python setup.py sdist` in `ua-parser` source directory\n- `dist/ua-parser-VERSION.tar.gz` is created\n- It contains `regexes.yaml`, `py/ua_parser/regexes.yaml`, and `py/ua_parser/regexes.json`\n- The tarball can be uploaded to a PyPI server\n\n## `python setup.py install` in some _other_ package\n- Effectively the same as `easy_install ua-parser`\n- The sdist tarball is unpacked; then `python setup.py bdist_egg` is run\n\n## `pip install ua-parser`\n- The sdist tarball is unpacked; then `python setup.py install` is run\n\n# Running a PyPI\n\nYou can run a PyPI in your local filesystem.\n- Use [pip2pi](https://github.com/wolever/pip2pi) to populate it\n- For [setuptools](https://pypi.python.org/pypi/setuptools), create a `setup.cfg` in the current directory\n\n```\n[easy_install]\nindex_url = file:///Users/georger/.pip2pi/simple\n```\n- For [pip](http://www.pip-installer.org/en/latest/), use `-i` flag\n\n```\npip install ua-parser --index_url file:///Users/georger/.pip2pi/simple\n```\n. See https://github.com/tobie/ua-parser/pull/279 for a patch that no longer requires pyyaml for 'setup.py install' or subsequently at runtime.\n. It turns out that the installer was broken on Linux (Python 2.7.3 on Ubuntu 12.04 amd64).\n. The version number should be bumped in `setup.py`, if only to 0.3.3.1, to ensure that the updated release works on PyPI.\n. I just noticed that the Python instructions in `README.markdown` say `pip install pyyaml ua-parser`. That can be simplified to `pip install ua-parser` for normal users.\n. I'm hitting this bug with regexex.yaml, if I use the PyYAML installed by `install_requires = ['PyYAML']` when I do `python setup.py develop`.\n\nI'm trying this on a Mac with Python 2.7.3 installed by [Homebrew](https://github.com/mxcl/homebrew/wiki/Homebrew-and-Python).\nI'm also using virtualenv and [virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/en/latest/)\n\nWhen I run @rascalking's patch, I get the following errors\n\n```\ngeorger@mac-georger:~/src/account_cob$ (master) mkvirtualenv account_cob\nNew python executable in account_cob/bin/python\nInstalling setuptools.............done.\nInstalling pip...............done.\n(account_cob)georger@mac-georger:~/src/account_cob$ (master) pip install git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\nDownloading/unpacking ua-parser from git+git://github.com/rascalking/ua-parser.git@py-install-refactor#egg=ua-parser\n  Running setup.py egg_info for package ua-parser\n\nDownloading/unpacking pyyaml (from ua-parser)\n  Running setup.py egg_info for package pyyaml\n\nInstalling collected packages: ua-parser, pyyaml\n  Running setup.py install for ua-parser\n    Converting regexes.yaml to json...\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 54, in <module>\n        'Topic :: Software Development :: Libraries :: Python Modules',\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n        dist.run_commands()\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n        self.run_command(cmd)\n      File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 972, in run_command\n        cmd_obj.run()\n      File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n        import yaml\n    ImportError: No module named yaml\n    Complete output from command /Users/georger/pyenvs/account_cob/bin/python -c \"import setuptools;__file__='/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-CGT0q9-record/install-record.txt --single-version-externally-managed --install-headers /Users/georger/pyenvs/account_cob/bin/../include/site/python2.7:\n    running install\n\nCopying regexes.yaml to package directory...\n\nConverting regexes.yaml to json...\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 54, in <module>\n\n    'Topic :: Software Development :: Libraries :: Python Modules',\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n\n    dist.run_commands()\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n\n    self.run_command(cmd)\n\n  File \"/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 972, in run_command\n\n    cmd_obj.run()\n\n  File \"/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py\", line 24, in run\n\n    import yaml\n\nImportError: No module named yaml\n\n----------------------------------------\nCommand /Users/georger/pyenvs/account_cob/bin/python -c \"import setuptools;__file__='/Users/georger/pyenvs/account_cob/build/ua-parser/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-CGT0q9-record/install-record.txt --single-version-externally-managed --install-headers /Users/georger/pyenvs/account_cob/bin/../include/site/python2.7 failed with error code 1 in /Users/georger/pyenvs/account_cob/build/ua-parser\nStoring complete log in /Users/georger/.pip/pip.log\n```\n. @selwin, you're right, of course. It works fine if I `pip install PyYAML` before installing @rascalking's patch, and I no longer get the error about the missing regexes.yaml at runtime.\n. When I install @rascalking's patched version of ua-parser via `setup.py develop`, I get the dreaded No such file regexes.yaml error. When I install via `pip`, it works.\n\nNote: I uploaded a custom package to our internal PyPI server, thus:\n\n```\n(ua-parser)georger@mac-georger:~/src/ua-parser$ (py-install-refactor) python setup.py --verbose sdist upload -r internal\n    <...>\nCreating tar archive\nremoving 'ua-parser-0.3.3' (and everything under it)\nrunning upload\nUsing PyPI login from /Users/georger/.pypirc\nSubmitting dist/ua-parser-0.3.3.tar.gz to http://pypi.build.cozi.com/\nServer response (200): OK\n```\n\nThen I tried to use it in a different package, which depends only on PyYAML and ua-parser:\n\n```\ngeorger@mac-georger:~/src/todo_cob$ (master) cat setup.py\nfrom setuptools import setup, find_packages\n\nsetup(\n    name='TodoCob',\n    version='0.1dev',\n    install_requires=[\n        'PyYAML',\n        'ua-parser',\n    ]\n)\n```\n\nI created a fresh virtualenv:\n\n```\ngeorger@mac-georger:~/src/todo_cob$ (master) mkvirtualenv todo_cob\nNew python executable in todo_cob/bin/python\nInstalling setuptools............done.\nInstalling pip...............done.\nvirtualenvwrapper.user_scripts creating /Users/georger/pyenvs/todo_cob/bin/predeactivate\n    <...>\n```\n\nRunning `setup.py develop` against the private PyPI server:\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) python setup.py -v develop -i http://pypi.build.cozi.com/simple\nrunning develop\nrunning egg_info\nwriting requirements to TodoCob.egg-info/requires.txt\nwriting TodoCob.egg-info/PKG-INFO\nwriting top-level names to TodoCob.egg-info/top_level.txt\nwriting dependency_links to TodoCob.egg-info/dependency_links.txt\nreading manifest file 'TodoCob.egg-info/SOURCES.txt'\nwriting manifest file 'TodoCob.egg-info/SOURCES.txt'\nrunning build_ext\nCreating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/TodoCob.egg-link (link to .)\nAdding TodoCob 0.1dev to easy-install.pth file\nSaving /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/src/todo_cob\nProcessing dependencies for TodoCob==0.1dev\n\nSearching for ua-parser\nReading http://pypi.build.cozi.com/simple/ua-parser/\nFound link: http://pypi.build.cozi.com/packages/ua-parser-0.3.3.tar.gz\nBest match: ua-parser 0.3.3\nDownloading http://pypi.build.cozi.com/packages/ua-parser-0.3.3.tar.gz\nProcessing ua-parser-0.3.3.tar.gz\nUnpacking ua-parser-0.3.3 to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3\nUnpacking ua-parser-0.3.3/MANIFEST.in to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/MANIFEST.in\nUnpacking ua-parser-0.3.3/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/PKG-INFO\nUnpacking ua-parser-0.3.3/py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py\nUnpacking ua-parser-0.3.3/py/ua_parser to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser\nUnpacking ua-parser-0.3.3/py/ua_parser/__init__.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/__init__.py\nUnpacking ua-parser-0.3.3/py/ua_parser/user_agent_parser.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/user_agent_parser.py\nUnpacking ua-parser-0.3.3/py/ua_parser/user_agent_parser_test.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser/user_agent_parser_test.py\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/dependency_links.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/dependency_links.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/not-zip-safe to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/not-zip-safe\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/PKG-INFO\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/requires.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/requires.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/SOURCES.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/SOURCES.txt\nUnpacking ua-parser-0.3.3/py/ua_parser.egg-info/top_level.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/py/ua_parser.egg-info/top_level.txt\nUnpacking ua-parser-0.3.3/regexes.yaml to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/regexes.yaml\nUnpacking ua-parser-0.3.3/setup.cfg to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/setup.cfg\nUnpacking ua-parser-0.3.3/setup.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/setup.py\nRunning ua-parser-0.3.3/setup.py bdist_egg --dist-dir /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/egg-dist-tmp-WZgZuM\nrunning bdist_egg\nrunning egg_info\nwriting requirements to py/ua_parser.egg-info/requires.txt\nwriting py/ua_parser.egg-info/PKG-INFO\nwriting top-level names to py/ua_parser.egg-info/top_level.txt\nwriting dependency_links to py/ua_parser.egg-info/dependency_links.txt\nreading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'py/ua_parser.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.7-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/ua_parser\ncopying py/ua_parser/__init__.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\ncreating build/bdist.macosx-10.7-x86_64\ncreating build/bdist.macosx-10.7-x86_64/egg\ncreating build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/__init__.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser_test.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\ncreating build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/PKG-INFO -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/SOURCES.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/dependency_links.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/not-zip-safe -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/requires.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/top_level.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncreating '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-4TWQkf/ua-parser-0.3.3/egg-dist-tmp-WZgZuM/ua_parser-0.3.3-py2.7.egg' and adding 'build/bdist.macosx-10.7-x86_64/egg' to it\nremoving 'build/bdist.macosx-10.7-x86_64/egg' (and everything under it)\ncreating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\nExtracting ua_parser-0.3.3-py2.7.egg to /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\nAdding ua-parser 0.3.3 to easy-install.pth file\nSaving /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\n```\n\nNow `setup.py develop` is installing PyYAML (mostly elided):\n\n```\nSearching for PyYAML\nReading http://pypi.build.cozi.com/simple/PyYAML/\nFound link: http://pypi.build.cozi.com/packages/PyYAML-3.10.tar.gz\nBest match: PyYAML 3.10\nDownloading http://pypi.build.cozi.com/packages/PyYAML-3.10.tar.gz\nProcessing PyYAML-3.10.tar.gz\n  <snip>\nInstalled /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/PyYAML-3.10-py2.7-macosx-10.7-x86_64.egg\nFinished processing dependencies for TodoCob==0.1dev\n```\n\nWhat does pip think we have?\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip freeze\nPyYAML==3.10\n-e git+https://github.com/cozi/todo_cob.git@30718a8778a713e4a27d646b62fc3aaf7e022a84#egg=TodoCob-dev\nua-parser==0.3.3\nwsgiref==0.1.2\n```\n\nLet's try it out:\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) python\nPython 2.7.3 (default, Jan 25 2013, 18:53:54)\n[GCC 4.2.1 Compatible Apple Clang 4.1 ((tags/Apple/clang-421.11.66))] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/user_agent_parser.py\", line 396, in <module>\n    yamlFile = open(yamlPath)\nIOError: [Errno 2] No such file or directory: '/Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg/ua_parser/regexes.yaml'\n```\n\nUninstall.\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip uninstall ua-parser\nUninstalling ua-parser:\n  /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg\nProceed (y/n)? y\n  Successfully uninstalled ua-parser\n```\n\nInstall with pip from the same private PyPI server.\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pip install -v -i http://pypi.build.cozi.com/simple ua-parser\nDownloading/unpacking ua-parser\n  Downloading ua-parser-0.3.3.tar.gz\n  Running setup.py egg_info for package ua-parser\n    running egg_info\n    creating pip-egg-info/ua_parser.egg-info\n    writing requirements to pip-egg-info/ua_parser.egg-info/requires.txt\n    writing pip-egg-info/ua_parser.egg-info/PKG-INFO\n    writing top-level names to pip-egg-info/ua_parser.egg-info/top_level.txt\n    writing dependency_links to pip-egg-info/ua_parser.egg-info/dependency_links.txt\n    writing manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    writing manifest file 'pip-egg-info/ua_parser.egg-info/SOURCES.txt'\nRequirement already satisfied (use --upgrade to upgrade): pyyaml in /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/PyYAML-3.10-py2.7-macosx-10.7-x86_64.egg (from ua-parser)\nInstalling collected packages: ua-parser\n  Running setup.py install for ua-parser\n    running install\n    Copying regexes.yaml to package directory...\n    Converting regexes.yaml to json...\n    running build\n    running build_py\n    creating build\n    creating build/lib\n    creating build/lib/ua_parser\n    copying py/ua_parser/__init__.py -> build/lib/ua_parser\n    copying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\n    copying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\n    running egg_info\n    writing requirements to py/ua_parser.egg-info/requires.txt\n    writing py/ua_parser.egg-info/PKG-INFO\n    writing top-level names to py/ua_parser.egg-info/top_level.txt\n    writing dependency_links to py/ua_parser.egg-info/dependency_links.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    writing manifest file 'py/ua_parser.egg-info/SOURCES.txt'\n    copying py/ua_parser/regexes.yaml -> build/lib/ua_parser\n    copying py/ua_parser/regexes.json -> build/lib/ua_parser\n    running install_lib\n    creating /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/__init__.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/regexes.json -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/regexes.yaml -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/user_agent_parser.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    copying build/lib/ua_parser/user_agent_parser_test.py -> /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/__init__.py to __init__.pyc\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/user_agent_parser.py to user_agent_parser.pyc\n    byte-compiling /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\n    running install_egg_info\n    Copying py/ua_parser.egg-info to /Users/georger/pyenvs/todo_cob/lib/python2.7/site-packages/ua_parser-0.3.3-py2.7.egg-info\n    running install_scripts\n    writing list of installed files to '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/pip-MWZJyN-record/install-record.txt'\nSuccessfully installed ua-parser\nCleaning up...\n  Removing temporary dir /Users/georger/pyenvs/todo_cob/build...\n```\n\nNow it works!\n\n```\n(todo_cob)georger@mac-georger:~/src/todo_cob$ (master) pythonPython 2.7.3 (default, Jan 25 2013, 18:53:54)\n[GCC 4.2.1 Compatible Apple Clang 4.1 ((tags/Apple/clang-421.11.66))] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from ua_parser import user_agent_parser\n>>> dir(user_agent_parser)\n['DEVICE_PARSERS', 'DeviceParser', 'GetFilters', 'OSParser', 'OS_PARSERS', 'Parse', 'ParseDevice', 'ParseOS', 'ParseUserAgent', 'ParseWithJSOverrides', 'Pretty', 'PrettyOS', 'PrettyUserAgent', 'UA_PARSER_YAML', 'USER_AGENT_PARSERS', 'UserAgentParser', '__author__', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '_device_parser', '_device_replacement', '_family_replacement', '_os_parser', '_os_replacement', '_regex', '_ua_parser', '_v1_replacement', 'json', 'json_file', 'json_path', 'os', 're', 'regexes', 'resource_filename', 'yaml', 'yamlPath']\n```\n. Sorry about the delay. I'm afraid that it doesn't work.\n\nI created a package of ua-parser with `python setup.py sdist`. Note: I bumped the version number to 0.3.4, to be sure that I was getting the right one.\n\nI confirmed that the updates to setup.py were present:\n\n```\n(todo_deploy)georger@mac-georger:~/src/ua-parser$ (py-setup-fix-again) tar -ztvf dist/ua-parser-0.3.4.tar.gz\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/\n-rw-r--r--  0 georger staff      20 Jan 11 18:19 ua-parser-0.3.4/MANIFEST.in\n-rw-r--r--  0 georger staff     657 May 23 17:12 ua-parser-0.3.4/PKG-INFO\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/ua_parser/\n-rw-r--r--  0 georger staff      20 Jan 11 18:19 ua-parser-0.3.4/py/ua_parser/__init__.py\n-rw-r--r--  0 georger staff   14722 May 23 15:54 ua-parser-0.3.4/py/ua_parser/user_agent_parser.py\n-rw-r--r--  0 georger staff    9353 Jan 11 18:19 ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py\ndrwxr-xr-x  0 georger staff       0 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/\n-rw-r--r--  0 georger staff       1 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt\n-rw-r--r--  0 georger staff       1 Feb 13 11:52 ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe\n-rw-r--r--  0 georger staff     657 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO\n-rw-r--r--  0 georger staff       6 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt\n-rw-r--r--  0 georger staff     345 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt\n-rw-r--r--  0 georger staff      10 May 23 17:12 ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt\n-rw-r--r--  0 georger staff   32009 May 23 16:46 ua-parser-0.3.4/regexes.yaml\n-rw-r--r--  0 georger staff      59 May 23 17:12 ua-parser-0.3.4/setup.cfg\n-rw-r--r--  0 georger staff    2001 May 23 17:12 ua-parser-0.3.4/setup.py\n(todo_deploy)georger@mac-georger:~/src/ua-parser$ (py-setup-fix-again) cd dist/\n(todo_deploy)georger@mac-georger:~/src/ua-parser/dist$ (py-setup-fix-again) tar -zxvf ua-parser-0.3.4.tar.gz ua-parser-0.3.4/setup.py\nx ua-parser-0.3.4/setup.py\n(todo_deploy)georger@mac-georger:~/src/ua-parser/dist$ (py-setup-fix-again) grep os.path ua-parser-0.3.4/setup.py\n        cwd = os.path.abspath(os.path.dirname(__file__))\n        yaml_src = os.path.join(cwd, 'regexes.yaml')\n        if not os.path.exists(yaml_src):\n        yaml_dest = os.path.join(cwd, 'py', 'ua_parser', 'regexes.yaml')\n```\n\nHere's the `setup.cfg` for the package that's using ua-parser:\n\n```\n[easy_install]\nindex_url = http://pypi.corp.cozi.com/simple\n```\n\nHere's the relevant output from `python setup.py -v install`:\n\n```\n(todo_deploy)georger@mac-georger:~/src/slingr$ (master) python setup.py -v install\nrunning install\nrunning bdist_egg\nrunning egg_info\n    ...\nrunning install_lib\nrunning build_py\n    ...\nProcessing dependencies for Slingr==0.0.8\nSearching for ua-parser\nReading http://pypi.corp.cozi.com/simple/ua-parser/\nFound link: http://pypi.corp.cozi.com/packages/ua-parser-0.3.3.tar.gz\nFound link: http://pypi.corp.cozi.com/packages/ua-parser-0.3.4.tar.gz\nBest match: ua-parser 0.3.4\nDownloading http://pypi.corp.cozi.com/packages/ua-parser-0.3.4.tar.gz\nProcessing ua-parser-0.3.4.tar.gz\nUnpacking ua-parser-0.3.4 to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4\nUnpacking ua-parser-0.3.4/MANIFEST.in to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/MANIFEST.in\nUnpacking ua-parser-0.3.4/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/PKG-INFO\nUnpacking ua-parser-0.3.4/py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py\nUnpacking ua-parser-0.3.4/py/ua_parser to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser\nUnpacking ua-parser-0.3.4/py/ua_parser/__init__.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/__init__.py\nUnpacking ua-parser-0.3.4/py/ua_parser/user_agent_parser.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/user_agent_parser.py\nUnpacking ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser/user_agent_parser_test.py\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/dependency_links.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/not-zip-safe\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/PKG-INFO\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/requires.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/SOURCES.txt\nUnpacking ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/py/ua_parser.egg-info/top_level.txt\nUnpacking ua-parser-0.3.4/regexes.yaml to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/regexes.yaml\nUnpacking ua-parser-0.3.4/setup.cfg to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/setup.cfg\nUnpacking ua-parser-0.3.4/setup.py to /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/setup.py\nRunning ua-parser-0.3.4/setup.py bdist_egg --dist-dir /var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/egg-dist-tmp-NtDAFg\nrunning bdist_egg\nrunning egg_info\nwriting requirements to py/ua_parser.egg-info/requires.txt\nwriting py/ua_parser.egg-info/PKG-INFO\nwriting top-level names to py/ua_parser.egg-info/top_level.txt\nwriting dependency_links to py/ua_parser.egg-info/dependency_links.txt\nreading manifest file 'py/ua_parser.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'py/ua_parser.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.7-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/ua_parser\ncopying py/ua_parser/__init__.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser.py -> build/lib/ua_parser\ncopying py/ua_parser/user_agent_parser_test.py -> build/lib/ua_parser\ncreating build/bdist.macosx-10.7-x86_64\ncreating build/bdist.macosx-10.7-x86_64/egg\ncreating build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/__init__.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\ncopying build/lib/ua_parser/user_agent_parser_test.py -> build/bdist.macosx-10.7-x86_64/egg/ua_parser\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling build/bdist.macosx-10.7-x86_64/egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\ncreating build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/PKG-INFO -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/SOURCES.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/dependency_links.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/not-zip-safe -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/requires.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncopying py/ua_parser.egg-info/top_level.txt -> build/bdist.macosx-10.7-x86_64/egg/EGG-INFO\ncreating '/var/folders/j3/cblrmq691pd07lf4148ftplm0000gp/T/easy_install-JMIvVX/ua-parser-0.3.4/egg-dist-tmp-NtDAFg/ua_parser-0.3.4-py2.7.egg' and adding 'build/bdist.macosx-10.7-x86_64/egg' to it\nremoving 'build/bdist.macosx-10.7-x86_64/egg' (and everything under it)\ncreating /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg\nExtracting ua_parser-0.3.4-py2.7.egg to /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/__init__.py to __init__.pyc\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/user_agent_parser.py to user_agent_parser.pyc\nbyte-compiling /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg/ua_parser/user_agent_parser_test.py to user_agent_parser_test.pyc\nAdding ua-parser 0.3.4 to easy-install.pth file\nSaving /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/easy-install.pth\n\nInstalled /Users/georger/.virtualenvs/todo_deploy/lib/python2.7/site-packages/ua_parser-0.3.4-py2.7.egg\n```\n. I think you need to do something with `regexes.yaml` in the `build_py` command.\n. BTW, you can create a local PyPI easily with [pip2pi](https://github.com/wolever/pip2pi). You don't even need a web server. In a package that _depends_ on ua-parser, have a `setup.cfg` that looks like:\n\n```\n[easy_install]\nindex_url = file:///Users/georger/.pip2pi/simple\n```\n\nand `python setup.py install` will pull from `~/.pip2pi`.\n\nIn fact, you don't even need pip2pi. You can just drop the ua-parser tarball created by `python setup.py sdist` into `~/.pip2pi/simple/ua-parser/`.\n. I fixed an issue with the installer failing on Linux. I've pushed the fixes to my branch. See pull request #268 \n\nHere's my understanding of how it works.\n\n## `python setup.py develop` in `ua-parser` source directory\n- `ua-parser.egg-link` is created in `site-packages` pointing back to source directory\n- `regexes.yaml` and `regexes.json` get copied to `py/ua_parser`\n\n## `python setup.py install` in `ua-parser` source directory\n- `ua-parser` is created in `site-packages` \n- It contains `regexes.yaml` and `regexes.json`\n\n## `python setup.py sdist` in `ua-parser` source directory\n- `dist/ua-parser-VERSION.tar.gz` is created\n- It contains `regexes.yaml`, `py/ua_parser/regexes.yaml`, and `py/ua_parser/regexes.json`\n- The tarball can be uploaded to a PyPI server\n\n## `python setup.py install` in some _other_ package\n- Effectively the same as `easy_install ua-parser`\n- The sdist tarball is unpacked; then `python setup.py bdist_egg` is run\n\n## `pip install ua-parser`\n- The sdist tarball is unpacked; then `python setup.py install` is run\n\n# Running a PyPI\n\nYou can run a PyPI in your local filesystem.\n- Use [pip2pi](https://github.com/wolever/pip2pi) to populate it\n- For [setuptools](https://pypi.python.org/pypi/setuptools), create a `setup.cfg` in the current directory\n\n```\n[easy_install]\nindex_url = file:///Users/georger/.pip2pi/simple\n```\n- For [pip](http://www.pip-installer.org/en/latest/), use `-i` flag\n\n```\npip install ua-parser --index_url file:///Users/georger/.pip2pi/simple\n```\n. See https://github.com/tobie/ua-parser/pull/279 for a patch that no longer requires pyyaml for 'setup.py install' or subsequently at runtime.\n. It turns out that the installer was broken on Linux (Python 2.7.3 on Ubuntu 12.04 amd64).\n. The version number should be bumped in `setup.py`, if only to 0.3.3.1, to ensure that the updated release works on PyPI.\n. I just noticed that the Python instructions in `README.markdown` say `pip install pyyaml ua-parser`. That can be simplified to `pip install ua-parser` for normal users.\n. ",
    "malicustommade": "Hey, I hit the yaml missing message too. Shouldn't the PyYAML package be a dependency of this package? \n. @georgevreilly This fixes the bug for me on linux. Thanks a bunch! @selwin any plans to merge that in?\n. Actually, turns out this does not fix the issue at all. Steps to reproduce:\n\n```\nmkdir foo && cd foo\nvirtualenv env\n. env/bin/activate\npip install -e git+https://github.com/tobie/ua-parser.git@9fa4ae1157ebad928e8b24fb6f717c5a71b59267#egg=ua-parser\n```\n\nAnd I get:\n\n``` python\n\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n\n    cmd_obj.run()\n\n  File \"/home/vagrant/foo/env/src/ua-parser/setup.py\", line 29, in run\n\n    install_regexes()\n\n  File \"/home/vagrant/foo/env/src/ua-parser/setup.py\", line 22, in install_regexes\n\n    import yaml\n\nImportError: No module named yaml\n\n```\n. Fails both on python 2.7.3 on ubuntu 12.04 and OSX 10.8.2. Works when I install pyyaml manually and reinstall\n. Hey, I hit the yaml missing message too. Shouldn't the PyYAML package be a dependency of this package? \n. @georgevreilly This fixes the bug for me on linux. Thanks a bunch! @selwin any plans to merge that in?\n. Actually, turns out this does not fix the issue at all. Steps to reproduce:\n\n```\nmkdir foo && cd foo\nvirtualenv env\n. env/bin/activate\npip install -e git+https://github.com/tobie/ua-parser.git@9fa4ae1157ebad928e8b24fb6f717c5a71b59267#egg=ua-parser\n```\n\nAnd I get:\n\n``` python\n\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n\n    cmd_obj.run()\n\n  File \"/home/vagrant/foo/env/src/ua-parser/setup.py\", line 29, in run\n\n    install_regexes()\n\n  File \"/home/vagrant/foo/env/src/ua-parser/setup.py\", line 22, in install_regexes\n\n    import yaml\n\nImportError: No module named yaml\n\n```\n. Fails both on python 2.7.3 on ubuntu 12.04 and OSX 10.8.2. Works when I install pyyaml manually and reinstall\n. ",
    "aselder": "I'm trying to get the tests for the project passing so I can get some pull requests done.\n\nI'm running the tests under python (Python 2.7.2, OS X 10.8), and all tests in testStringDevice that expect Other are getting None\n\nExample:\n    ======================================================================\n    FAIL: testStringsDevice (**main**.ParseTest)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"user_agent_parser_test.py\", line 54, in testStringsDevice\n        TEST_RESOURCES_DIR, 'test_device.yaml'))\n      File \"user_agent_parser_test.py\", line 209, in runDeviceTestsFromYAML\n        result['family']))\n    AssertionError: UA: Mozilla/4.0 (Brew MP 1.0.2; U; en-us; Sanyo; NetFront/3.5.1/AMB) Sprint E4100\n     expected<Other> != actual<None>\n\n```\n----------------------------------------------------------------------\n```\n. I'm fixing the Python code right now.\n\nThere are two issues:\n1. The python parser doesn't reference the v2_replacement fields.\n2. The python code leaves None in if the family isn't found, instead of substituting in Other.\n\nI'll have Python fixed shortly.\n. I'd be happy to work on getting a pull request together, however a clean fork of the project doesn't pass its tests, so I'm very uncomfortable playing with things without a safety net.\n. @tobie How do you invoke the Node.js tests?\n. Cool thanks.\n. Sure. That was just a git goof...\n. Let me closes this and open a new pull request.\n. This is a fix for #214.\n. Easy enough to fix it so that it returns Other rather than None. I'm happy to submit that, I was just trying to avoid breaking users.\n. I'm trying to get the tests for the project passing so I can get some pull requests done.\n\nI'm running the tests under python (Python 2.7.2, OS X 10.8), and all tests in testStringDevice that expect Other are getting None\n\nExample:\n    ======================================================================\n    FAIL: testStringsDevice (**main**.ParseTest)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"user_agent_parser_test.py\", line 54, in testStringsDevice\n        TEST_RESOURCES_DIR, 'test_device.yaml'))\n      File \"user_agent_parser_test.py\", line 209, in runDeviceTestsFromYAML\n        result['family']))\n    AssertionError: UA: Mozilla/4.0 (Brew MP 1.0.2; U; en-us; Sanyo; NetFront/3.5.1/AMB) Sprint E4100\n     expected<Other> != actual<None>\n\n```\n----------------------------------------------------------------------\n```\n. I'm fixing the Python code right now.\n\nThere are two issues:\n1. The python parser doesn't reference the v2_replacement fields.\n2. The python code leaves None in if the family isn't found, instead of substituting in Other.\n\nI'll have Python fixed shortly.\n. I'd be happy to work on getting a pull request together, however a clean fork of the project doesn't pass its tests, so I'm very uncomfortable playing with things without a safety net.\n. @tobie How do you invoke the Node.js tests?\n. Cool thanks.\n. Sure. That was just a git goof...\n. Let me closes this and open a new pull request.\n. This is a fix for #214.\n. Easy enough to fix it so that it returns Other rather than None. I'm happy to submit that, I was just trying to avoid breaking users.\n. ",
    "nielsbasjes": "I added the user agent I ran into to the test_resources/test_device.yaml with the expectation it must return 'Spider'.\nThen I ran the java based unit test and it failed.\n\njava.lang.AssertionError:\nExpected: is <{family: \"Spider\"}>\n     got: <{family: \"iPhone\"}>\n\nUnfortunately the fix created by aselder does not fix this specific useragent issue.\nI'll put in a pull request for a fix for this one.\n. Yes, that sounds like a good idea.\nI did it this way because it seemed to be the cleanest way to do it (and this was my first set of real UDFs for PIG :) )\nI propose you make a feature request to add these and I'll start work on it in a few weeks.\nSo for this patch (if you agree) I think this can be merged.\n. Oh .... I made a mess of the git history. I'm apparently not very handy with this yet.\nCan someone point me to how I should fix this?\n. I close this one because the git history got wrecked by me.\nI just opened a new one here: https://github.com/tobie/ua-parser/pull/266\n. First raw version https://github.com/nielsbasjes/ua-parser/tree/PigTupleUdfs/pig\n. This one can be closed ( #295 has been merged a few months ago).\n. The pig wrapper is essentially a simple wrapper around the java implementation. So as soon as the Java implementation has this addition I'll add it to the pig implementation too.\n. @tobie Assume the Google Nexus 7. What do you expect to get: Google or Asus?\n. [ I'm unable to put a review comment with the offending line because github finds the file too big ]\n\nI'm trying to get the Java and Pig versions working. \nI just ran into a problem in test_resources/test_device.yaml\nLine 57938 looks like this:\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 2.3.6; de-de; SAMSUNG GT-I9070P/I9070PBOLK1 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@V\\x9aB\\x85I\\xa1@\\x89le Safari/533.1'\n\nThe Java YAML parser fails here with:\nunacceptable character '\ufffd' (0xFFFD) special characters are not allowed\nin \"<reader>\", position 2552789\n        at org.yaml.snakeyaml.reader.StreamReader.checkPrintable(StreamReader.java:97)\n        at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:190)\n        at org.yaml.snakeyaml.reader.StreamReader.forward(StreamReader.java:116)\n        at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1184)\n...\n\nI found these lines with this problem:\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 2.3.6; de-de; SAMSUNG GT-I9070P/I9070PBOLK1 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@V\\x9aB\\x85I\\xa1@\\x89le Safari/533.1'\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-I9105P Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.3>2v^\\x8e\\x84\\xa64e[\\x0553 n\\xb1\\x9a\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\xf0P'\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-I9300 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\x94\\xcb\\xdeP \\xebX8\\x06\\x81*\\xdf\\xa3\\x05\\xb0\\xb7\\x9bcept-EI\\x06\\x94\\xa9\\xb5\\xc7\\xfd\\xe1\\xca\\xde(\\xe0\\x13\\xfc\\x9beflate'\n- user_agent_string: 'SonyEricssonK850i/R1EA Browser/Net\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@Front/3.4 Profil/MIDP-2.1 Configuration/CLDC-1.1'\n. @commenthol Done. The 4 offending test cases are now removed as a commit in pull request #320 \n. Any progress on this?\n. I wrote this patch long ago. I have no idea why it has not been integrated yet. I see there is now a merge conflict which I could revolve. But if a patch for a part where I am the maintainer never gets merged then can't maintain anything. So what do we do now? \n. Yes, but if it then again does not get pulled in, it will have been useless\nwork ... _again_.\nThere hasn't been any activity on this project for ages.\n\nOn Sun, Aug 24, 2014 at 12:25 AM, Oliver Keyes notifications@github.com\nwrote:\n\n> Rebase it and solve for the conflict, and I'll trust you to know what\n> you're doing around the pig setup. Solved :).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/320#issuecomment-53168431.\n\n## \n\nBest regards / Met vriendelijke groeten,\n\nNiels Basjes\n. I added the user agent I ran into to the test_resources/test_device.yaml with the expectation it must return 'Spider'.\nThen I ran the java based unit test and it failed.\n\njava.lang.AssertionError:\nExpected: is <{family: \"Spider\"}>\n     got: <{family: \"iPhone\"}>\n\nUnfortunately the fix created by aselder does not fix this specific useragent issue.\nI'll put in a pull request for a fix for this one.\n. Yes, that sounds like a good idea.\nI did it this way because it seemed to be the cleanest way to do it (and this was my first set of real UDFs for PIG :) )\nI propose you make a feature request to add these and I'll start work on it in a few weeks.\nSo for this patch (if you agree) I think this can be merged.\n. Oh .... I made a mess of the git history. I'm apparently not very handy with this yet.\nCan someone point me to how I should fix this?\n. I close this one because the git history got wrecked by me.\nI just opened a new one here: https://github.com/tobie/ua-parser/pull/266\n. First raw version https://github.com/nielsbasjes/ua-parser/tree/PigTupleUdfs/pig\n. This one can be closed ( #295 has been merged a few months ago).\n. The pig wrapper is essentially a simple wrapper around the java implementation. So as soon as the Java implementation has this addition I'll add it to the pig implementation too.\n. @tobie Assume the Google Nexus 7. What do you expect to get: Google or Asus?\n. [ I'm unable to put a review comment with the offending line because github finds the file too big ]\n\nI'm trying to get the Java and Pig versions working. \nI just ran into a problem in test_resources/test_device.yaml\nLine 57938 looks like this:\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 2.3.6; de-de; SAMSUNG GT-I9070P/I9070PBOLK1 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@V\\x9aB\\x85I\\xa1@\\x89le Safari/533.1'\n\nThe Java YAML parser fails here with:\nunacceptable character '\ufffd' (0xFFFD) special characters are not allowed\nin \"<reader>\", position 2552789\n        at org.yaml.snakeyaml.reader.StreamReader.checkPrintable(StreamReader.java:97)\n        at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:190)\n        at org.yaml.snakeyaml.reader.StreamReader.forward(StreamReader.java:116)\n        at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1184)\n...\n\nI found these lines with this problem:\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 2.3.6; de-de; SAMSUNG GT-I9070P/I9070PBOLK1 Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@V\\x9aB\\x85I\\xa1@\\x89le Safari/533.1'\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-I9105P Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.3>2v^\\x8e\\x84\\xa64e[\\x0553 n\\xb1\\x9a\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\xf0P'\n- user_agent_string: 'Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-I9300 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\x94\\xcb\\xdeP \\xebX8\\x06\\x81*\\xdf\\xa3\\x05\\xb0\\xb7\\x9bcept-EI\\x06\\x94\\xa9\\xb5\\xc7\\xfd\\xe1\\xca\\xde(\\xe0\\x13\\xfc\\x9beflate'\n- user_agent_string: 'SonyEricssonK850i/R1EA Browser/Net\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@\\\ufffd\\\ufffd\\@Front/3.4 Profil/MIDP-2.1 Configuration/CLDC-1.1'\n. @commenthol Done. The 4 offending test cases are now removed as a commit in pull request #320 \n. Any progress on this?\n. I wrote this patch long ago. I have no idea why it has not been integrated yet. I see there is now a merge conflict which I could revolve. But if a patch for a part where I am the maintainer never gets merged then can't maintain anything. So what do we do now? \n. Yes, but if it then again does not get pulled in, it will have been useless\nwork ... _again_.\nThere hasn't been any activity on this project for ages.\n\nOn Sun, Aug 24, 2014 at 12:25 AM, Oliver Keyes notifications@github.com\nwrote:\n\n> Rebase it and solve for the conflict, and I'll trust you to know what\n> you're doing around the pig setup. Solved :).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/320#issuecomment-53168431.\n\n## \n\nBest regards / Met vriendelijke groeten,\n\nNiels Basjes\n. ",
    "quentin389": "JSON decoding by itself takes almost no time at all. However, decoding and **loading decoded data into PHP memory** does.\nPlease see my tests at https://github.com/quentin389/ua-speed-tests\n'uaparser revised' is the PHP ua-parser with PHP source file instead of JSON source file (exactly as proposed in this post).\n\nThere is no parsing time difference between JSON and PHP versions normally, but when you turn on **opcache** there is suddenly almost a **50%** performance boost.\n\nThat due to the fact that any kind of PHP bytecode cache will store representations of PHP files in shared memory between requests, and thus, loading a PHP file into process memory will take almost no time at all. However, obviously, it won't store the JSON file in the memory.\n\nThis also means that around 50% of execution time of ua-parser PHP implementation is loading the source file.\n\nIn my opinion changing JSON source files to PHP source files would provide a nice benefit for busy servers. Although, on the other hand, parsing a user agent in 2ms is not something that you'd try to improve at all costs :)\n. JSON decoding by itself takes almost no time at all. However, decoding and **loading decoded data into PHP memory** does.\nPlease see my tests at https://github.com/quentin389/ua-speed-tests\n'uaparser revised' is the PHP ua-parser with PHP source file instead of JSON source file (exactly as proposed in this post).\n\nThere is no parsing time difference between JSON and PHP versions normally, but when you turn on **opcache** there is suddenly almost a **50%** performance boost.\n\nThat due to the fact that any kind of PHP bytecode cache will store representations of PHP files in shared memory between requests, and thus, loading a PHP file into process memory will take almost no time at all. However, obviously, it won't store the JSON file in the memory.\n\nThis also means that around 50% of execution time of ua-parser PHP implementation is loading the source file.\n\nIn my opinion changing JSON source files to PHP source files would provide a nice benefit for busy servers. Although, on the other hand, parsing a user agent in 2ms is not something that you'd try to improve at all costs :)\n. ",
    "ignasbernotas": "@quentin389 Yeah that's what I'm doing at the moment :) I've got zend optimizer installed and since we get a lot of traffic, having a PHP file is worth the hassle :)\n. @quentin389 Yeah that's what I'm doing at the moment :) I've got zend optimizer installed and since we get a lot of traffic, having a PHP file is worth the hassle :)\n. ",
    "ben-gineer": "I would also appreciate this - as we are currently having to distribute the built jar alongside our product.\n. OK thanks. So if a release version is ever produced (and deployed somewhere) - then the 1.2.1 version will represent the version of the Java code together with the bundled version of the yaml code at that point in time? Note that this relates to another issue (#233) about deploying the Java port into a central maven repository. Currently I'm having to strip the -SNAPSHOT version from the pom and add some distributionManagement entries in order to deploy the Java ua-parser into our local Maven repository.\n. I would also appreciate this - as we are currently having to distribute the built jar alongside our product.\n. OK thanks. So if a release version is ever produced (and deployed somewhere) - then the 1.2.1 version will represent the version of the Java code together with the bundled version of the yaml code at that point in time? Note that this relates to another issue (#233) about deploying the Java port into a central maven repository. Currently I'm having to strip the -SNAPSHOT version from the pom and add some distributionManagement entries in order to deploy the Java ua-parser into our local Maven repository.\n. ",
    "magicknot": "Thank you very much :+1: \n. Thank you very much :+1: \n. ",
    "smola": "Would it be posible to publish it to Maven Central? Note that Maven Central is self-contained, so no artifact in Maven Central can depend on an artifact external to Central.\n. Would it be posible to publish it to Maven Central? Note that Maven Central is self-contained, so no artifact in Maven Central can depend on an artifact external to Central.\n. ",
    "eambrosio": "Could you publish it to Maven Central, please?\n. Could you publish it to Maven Central, please?\n. ",
    "kenrestivo": "Thanks. I don't know YAML but I guess I can figure it out, and will make those changes.\n. Thanks. I don't know YAML but I guess I can figure it out, and will make those changes.\n. ",
    "philipzae": "i'm new to github and when i go to the pull request tab, it doesnt give me an option to add a pull request.\n. i've figured it now and have added the pull for the rekonq part. not sure how to do the dillo part. looked into the hv3 and see that the code doesnt go into checking for the OS if it doesnt determine its a browser as the there is an os regexp '(Linux|BSD)'.\n. fixed\n. Quite simple to implement, but would need to be coded on the different languages. Here are some regex that could start it off, as there are only a few in use today.\n\n```\nbrowser_engine:\n\n  - regexp '(Presto)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Webkit\n  - regexp '(AppleWebKit)/(\\d+)\\.?(\\d+)?'\n    engine_replacement: 'Webkit'\n\n  # Presto (when opera snoofs firefox or ie)\n  - regexp 'Opera \\d+\\.\\d+'\n    egine_replacement: 'Presto'\n  - regexp 'Opera/\\d+\\.\\d+'\n    egine_replacement: 'Presto'\n\n  # Gecko\n  - regexp '(rv):(\\d+)\\.(\\d+)\\.?([ab]?\\d+(?:pre)?)?[^\\)]*\\) Gecko/\\d+'\n    engine_replacement: 'Gecko'\n  - regexp ' (Gecko)/\\d+ .*Firefox/([5-9]|[12]\\d)\\.(\\d)'\n  - regexp ' (Gecko)/(\\d+)'\n\n  # Trident\n  - regexp '(Trident)/(\\d+)\\.(\\d+)'\n  - regexp 'MSIE \\d+\\.\\d+'\n    engine_replacement: 'Trident'\n```\n. yes the code i gave was to return both the engine and its version, though i missed adding the version extraction on all of the code.\n. I dont remember seeing any user agents for ie 10 on windows 8 which had a missing 'MS'.  Here are some links to confirm it.\n\nhttp://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx\nhttp://en.wikipedia.org/wiki/Internet_Explorer_10#User_agent_string\n\nAbout the Windows Blue regexp, i think os_replacement should be 'Windows 8.1' as the name Windows Blue is just its codename.\n\nhttp://en.wikipedia.org/wiki/Windows_Blue#Windows_8.1\n. @JulienPalard took forward to seeing it and dont forget it might be a spider/spoofer. :)\n. tried to make changes, but for some strange reason i'm unable to do so (might be just that i'm a noob).\n\nWell the second part of the modified code should have been\n\n```\n  - regex: '(Avant) Browser'\n```\n\nwhere are the test databases.\n. i make changes on github, i'm a complete noob to this stuff.\n\nthanks, i see the folder, but which file should i put the UAs in?\n. regexes.yaml is in the root directory, the files in test_resources are pgts_browser-list.yaml, test_device.yaml, etc...\n\nhow do i try the former (making changes locally), i'm a noob. :)\n. noob to github and git. what i've been doign the last few days is make changes to regexes.yaml on github and submit it as a pull.\n\nthanks for the help, so how to a plug my local server to github.\n. thanks @elsigh, i'm installing git on my pc. there are a few windows clients and wondered what your recommendation is.\n\nwas able to figure out how to make changes to the pull, which i've done and have also added the bonecho UA to the test. unfortunately i see that they have already not passed the test, but dont see build error log for them.\n. Well the errors related to the new user agent (ELinks) show up as they are expecting 'Others'. The other error relates to Avant Browser stating \"AssertionError: Expected ua.major to be \"1\" got null instead.\" but Avant Browser doesnt provide version number in the UA.\n. added the reused pattern and test for avant browser.\n. this debian issue mentioned above regarding its version number, shows up with other linux distros\n\nMozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100723 SUSE/3.6.8-0.1.1 Firefox/3.6.8\nMozilla/5.0 (X11; U; Linux x86_64; en; rv:1.9.0.8) Gecko/20080528 Fedora/2.24.3-4.fc10 Epiphany/2.22 Firefox/3.0\nMozilla/5.0 (X11; U; Linux x86_64; nl; rv:1.9.1.11) Gecko/20100714 openSUSE/3.0.6 Thunderbird/3.0.6 ThunderBrowse/3.3.2\nMozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 SUSE/10.0.626.0 (KHTML, like Gecko) Chrome/10.0.626.0 Safari/534.16\n\nthe only distros that i've found so far that dont do this are ubuntu and slackware\n. was wondering why 'windows nt 5.2' is being shown as 'windows xp' rather than maybe 'windows xp 64-bit'\n\nhttp://en.wikipedia.org/wiki/Windows_NT_5.2\n. Will do.\n. can we get this pull added, so it can be closed and i can work on the next one.\n. Sorry about all the confusion. i have fixed everything except for the pgts_browser_list.yaml, as i'm unable to edit here in github and unable to upload my locally fixed one on github. Any suggestions?\n. shows error in build but in the build page, things went fine, not sure what to do now.\n. i've gotten my client to work, which is how i was able to update the pgts_browser_list.yaml file. will try to follow the guidelines in the future, but i think you may need to modify them as i had to change additional_os_tests.yaml to the list as mandriva failed that test. i'm not sure how i'll be able to move my changes from my master branch so that i can send them in one by one.\n. About the second part of the question, maybe i didnt ask it correctly. ua-parser takes the approach to search the full UA for patterns, i was wondering if you knew of others who have scripted another approach of chopping the agent into segments and analyzing the segments to give the final result.\n. Well after seeing websites like UserAgentString.com and WhatsMyUA.com, i felt it was a method worth trying out, which i've been doing for the last couple of days, and a friend of mine asked me if someone had already done it and though i've checked, i hadnt found any, which is why i asked. Well i've been testing my work these last couple of days, which is why i've been submitting pulls for any errors i come across. It still needs work, but here is a preview.\n\n![untitled1](https://f.cloud.github.com/assets/4412114/563946/b513ccd2-c52a-11e2-9e6b-49caf1dc3355.gif)\n![untitled2](https://f.cloud.github.com/assets/4412114/563947/b51b99f8-c52a-11e2-9ce4-95df4c93e313.gif)\n![untitled3](https://f.cloud.github.com/assets/4412114/563948/b521eb00-c52a-11e2-84bf-9354b3c60509.gif)\n. Well the drawbacks i've seen so far are that if the parser cant cut the UA into correct pieces, then information maybe incorrectly joined together and possibly missed. Also sometimes parts of the information are in separate pieces, which mains you have to take the time to make sure it works correctly.\n\nThe main benefit has been that the extracted information is more extensive, so it would be easier to set some filtering rules to pull up related results.\n![untitled4](https://f.cloud.github.com/assets/4412114/564008/65a65014-c531-11e2-86b4-41139e531b9b.gif)\n\nAs the array structure can easily be expanded on, its easy to add additional information into its structure. I've also decided to add error checking routines so i could for example easily detect safari's version, when it didnt have its version number in the UA.\n\nAs you can see from the earlier images, i'm also working on routines to strip down the UA as well as automatically convert it into a UA pattern, which makes it easy to determine unique UAs. With unique UAs, it should be easier to test a small set of UAs, which will definitely work on a larger set.\n. Sorry dont know what you mean by language agnostic. Dont know about crowd-source either.\n. i had read the history of the user agent string while i was doing my research about user agents and it was hilarious.\n\nThanks for the explanation. I hope that once i've completed it, i can release it as open source, as it would be my first and github will likely be its home for crowd sourcing. Yes i am happy that your project is language agnostic and hope i can do the same with my project if others would be willing to do the ports, as i can only handle the programming of it in php.\n\nThe project is built on php and javascript to accurate gather as much info as possible, as a user agent can easily be spoofed just relying on the http request. Something like browser-info.net. The javascript part will simply be feeding browser information to the php script, to help with the detection. Here is an example of the javascript part, with Opera masking itself as firefox.\n![untitled5](https://f.cloud.github.com/assets/4412114/564563/f97ce402-c57b-11e2-8c86-89aad57fee6c.gif)\n. i have `Linux i686` on my ubuntu installation, i think `Linux x86_64` maybe used by other distributions.\n. It wasnt an issue of how long it takes to parse, it was an issue of correcting the number of entries. in order to fix the issue with elinks, i had to modify 29 entries, when 5 would have been more than sufficient.\n. quite weird, i made the branch just for amiga os and wanted to just pull that entry but it pulls everything i did before in as well.\n. can you please suggest how i can get star from a fresh copy.\n. deleted the fork and started a new one, now my local client still wants to do stuff to it.\n. wouldnt making multiple branches cause the same problem as before when i made the branch for amigaos and it still pulled from the master branch.\n. is there something else needed for this one tobie?\n. is there anything else needed for this to be merged?\n. yes the ones i updated in issue #246 but unable to do it now due to my client not allowing me to and cant update the file on github.\n. was using the official github client for windows, but it stopped working properly after i deleted the repo and created a new one.\n. is there anything else needed for this to be merged?\n. the comment above is addressed to elsigh, which he hasnt replied to. If you wish for me to have it on two lines, i can do so.\n. incorrect return of the distros package number rather than the version number\n. fixed\n. @tobie sorry for any problems this may cause but i'm doing this all here in github as my local client isnt working and i'm just trying to bring in all the code i worked on in issue #246. this is the last of it except for elinks and avant browser which i can only fix once my client is working again.\n. Please excuse my ignorance, but i did give a helpful title to the pull request and gave a description to the commit request. Unfortunately i'm not sure which part of the guidelines i didnt follow, but if it was the issue of examples for this commit, i was browsing through the code and noticed that it seemed strange.\n. Was always making my pull request title descriptive to summarize all the commits as they are all for 1 issue now, normally across multiple files, but will do so in the commit entries as well.\n. sorry about the double commit. client is working again but i forgot to put in the example. :)\n. unfortunately github for windows doesnt provide any option for that, or maybe i just dont know how to do it. :)\n. yes it seems the first commit was from my master branch and the second with the additional tests was from my philipzae branch, so should i cancel the additional test commit so that it can be merged?\n. i'm new to github and when i go to the pull request tab, it doesnt give me an option to add a pull request.\n. i've figured it now and have added the pull for the rekonq part. not sure how to do the dillo part. looked into the hv3 and see that the code doesnt go into checking for the OS if it doesnt determine its a browser as the there is an os regexp '(Linux|BSD)'.\n. fixed\n. Quite simple to implement, but would need to be coded on the different languages. Here are some regex that could start it off, as there are only a few in use today.\n\n```\nbrowser_engine:\n\n  - regexp '(Presto)/(\\d+)\\.(\\d+)\\.(\\d+)'\n\n  # Webkit\n  - regexp '(AppleWebKit)/(\\d+)\\.?(\\d+)?'\n    engine_replacement: 'Webkit'\n\n  # Presto (when opera snoofs firefox or ie)\n  - regexp 'Opera \\d+\\.\\d+'\n    egine_replacement: 'Presto'\n  - regexp 'Opera/\\d+\\.\\d+'\n    egine_replacement: 'Presto'\n\n  # Gecko\n  - regexp '(rv):(\\d+)\\.(\\d+)\\.?([ab]?\\d+(?:pre)?)?[^\\)]*\\) Gecko/\\d+'\n    engine_replacement: 'Gecko'\n  - regexp ' (Gecko)/\\d+ .*Firefox/([5-9]|[12]\\d)\\.(\\d)'\n  - regexp ' (Gecko)/(\\d+)'\n\n  # Trident\n  - regexp '(Trident)/(\\d+)\\.(\\d+)'\n  - regexp 'MSIE \\d+\\.\\d+'\n    engine_replacement: 'Trident'\n```\n. yes the code i gave was to return both the engine and its version, though i missed adding the version extraction on all of the code.\n. I dont remember seeing any user agents for ie 10 on windows 8 which had a missing 'MS'.  Here are some links to confirm it.\n\nhttp://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx\nhttp://en.wikipedia.org/wiki/Internet_Explorer_10#User_agent_string\n\nAbout the Windows Blue regexp, i think os_replacement should be 'Windows 8.1' as the name Windows Blue is just its codename.\n\nhttp://en.wikipedia.org/wiki/Windows_Blue#Windows_8.1\n. @JulienPalard took forward to seeing it and dont forget it might be a spider/spoofer. :)\n. tried to make changes, but for some strange reason i'm unable to do so (might be just that i'm a noob).\n\nWell the second part of the modified code should have been\n\n```\n  - regex: '(Avant) Browser'\n```\n\nwhere are the test databases.\n. i make changes on github, i'm a complete noob to this stuff.\n\nthanks, i see the folder, but which file should i put the UAs in?\n. regexes.yaml is in the root directory, the files in test_resources are pgts_browser-list.yaml, test_device.yaml, etc...\n\nhow do i try the former (making changes locally), i'm a noob. :)\n. noob to github and git. what i've been doign the last few days is make changes to regexes.yaml on github and submit it as a pull.\n\nthanks for the help, so how to a plug my local server to github.\n. thanks @elsigh, i'm installing git on my pc. there are a few windows clients and wondered what your recommendation is.\n\nwas able to figure out how to make changes to the pull, which i've done and have also added the bonecho UA to the test. unfortunately i see that they have already not passed the test, but dont see build error log for them.\n. Well the errors related to the new user agent (ELinks) show up as they are expecting 'Others'. The other error relates to Avant Browser stating \"AssertionError: Expected ua.major to be \"1\" got null instead.\" but Avant Browser doesnt provide version number in the UA.\n. added the reused pattern and test for avant browser.\n. this debian issue mentioned above regarding its version number, shows up with other linux distros\n\nMozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100723 SUSE/3.6.8-0.1.1 Firefox/3.6.8\nMozilla/5.0 (X11; U; Linux x86_64; en; rv:1.9.0.8) Gecko/20080528 Fedora/2.24.3-4.fc10 Epiphany/2.22 Firefox/3.0\nMozilla/5.0 (X11; U; Linux x86_64; nl; rv:1.9.1.11) Gecko/20100714 openSUSE/3.0.6 Thunderbird/3.0.6 ThunderBrowse/3.3.2\nMozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 SUSE/10.0.626.0 (KHTML, like Gecko) Chrome/10.0.626.0 Safari/534.16\n\nthe only distros that i've found so far that dont do this are ubuntu and slackware\n. was wondering why 'windows nt 5.2' is being shown as 'windows xp' rather than maybe 'windows xp 64-bit'\n\nhttp://en.wikipedia.org/wiki/Windows_NT_5.2\n. Will do.\n. can we get this pull added, so it can be closed and i can work on the next one.\n. Sorry about all the confusion. i have fixed everything except for the pgts_browser_list.yaml, as i'm unable to edit here in github and unable to upload my locally fixed one on github. Any suggestions?\n. shows error in build but in the build page, things went fine, not sure what to do now.\n. i've gotten my client to work, which is how i was able to update the pgts_browser_list.yaml file. will try to follow the guidelines in the future, but i think you may need to modify them as i had to change additional_os_tests.yaml to the list as mandriva failed that test. i'm not sure how i'll be able to move my changes from my master branch so that i can send them in one by one.\n. About the second part of the question, maybe i didnt ask it correctly. ua-parser takes the approach to search the full UA for patterns, i was wondering if you knew of others who have scripted another approach of chopping the agent into segments and analyzing the segments to give the final result.\n. Well after seeing websites like UserAgentString.com and WhatsMyUA.com, i felt it was a method worth trying out, which i've been doing for the last couple of days, and a friend of mine asked me if someone had already done it and though i've checked, i hadnt found any, which is why i asked. Well i've been testing my work these last couple of days, which is why i've been submitting pulls for any errors i come across. It still needs work, but here is a preview.\n\n![untitled1](https://f.cloud.github.com/assets/4412114/563946/b513ccd2-c52a-11e2-9e6b-49caf1dc3355.gif)\n![untitled2](https://f.cloud.github.com/assets/4412114/563947/b51b99f8-c52a-11e2-9ce4-95df4c93e313.gif)\n![untitled3](https://f.cloud.github.com/assets/4412114/563948/b521eb00-c52a-11e2-84bf-9354b3c60509.gif)\n. Well the drawbacks i've seen so far are that if the parser cant cut the UA into correct pieces, then information maybe incorrectly joined together and possibly missed. Also sometimes parts of the information are in separate pieces, which mains you have to take the time to make sure it works correctly.\n\nThe main benefit has been that the extracted information is more extensive, so it would be easier to set some filtering rules to pull up related results.\n![untitled4](https://f.cloud.github.com/assets/4412114/564008/65a65014-c531-11e2-86b4-41139e531b9b.gif)\n\nAs the array structure can easily be expanded on, its easy to add additional information into its structure. I've also decided to add error checking routines so i could for example easily detect safari's version, when it didnt have its version number in the UA.\n\nAs you can see from the earlier images, i'm also working on routines to strip down the UA as well as automatically convert it into a UA pattern, which makes it easy to determine unique UAs. With unique UAs, it should be easier to test a small set of UAs, which will definitely work on a larger set.\n. Sorry dont know what you mean by language agnostic. Dont know about crowd-source either.\n. i had read the history of the user agent string while i was doing my research about user agents and it was hilarious.\n\nThanks for the explanation. I hope that once i've completed it, i can release it as open source, as it would be my first and github will likely be its home for crowd sourcing. Yes i am happy that your project is language agnostic and hope i can do the same with my project if others would be willing to do the ports, as i can only handle the programming of it in php.\n\nThe project is built on php and javascript to accurate gather as much info as possible, as a user agent can easily be spoofed just relying on the http request. Something like browser-info.net. The javascript part will simply be feeding browser information to the php script, to help with the detection. Here is an example of the javascript part, with Opera masking itself as firefox.\n![untitled5](https://f.cloud.github.com/assets/4412114/564563/f97ce402-c57b-11e2-8c86-89aad57fee6c.gif)\n. i have `Linux i686` on my ubuntu installation, i think `Linux x86_64` maybe used by other distributions.\n. It wasnt an issue of how long it takes to parse, it was an issue of correcting the number of entries. in order to fix the issue with elinks, i had to modify 29 entries, when 5 would have been more than sufficient.\n. quite weird, i made the branch just for amiga os and wanted to just pull that entry but it pulls everything i did before in as well.\n. can you please suggest how i can get star from a fresh copy.\n. deleted the fork and started a new one, now my local client still wants to do stuff to it.\n. wouldnt making multiple branches cause the same problem as before when i made the branch for amigaos and it still pulled from the master branch.\n. is there something else needed for this one tobie?\n. is there anything else needed for this to be merged?\n. yes the ones i updated in issue #246 but unable to do it now due to my client not allowing me to and cant update the file on github.\n. was using the official github client for windows, but it stopped working properly after i deleted the repo and created a new one.\n. is there anything else needed for this to be merged?\n. the comment above is addressed to elsigh, which he hasnt replied to. If you wish for me to have it on two lines, i can do so.\n. incorrect return of the distros package number rather than the version number\n. fixed\n. @tobie sorry for any problems this may cause but i'm doing this all here in github as my local client isnt working and i'm just trying to bring in all the code i worked on in issue #246. this is the last of it except for elinks and avant browser which i can only fix once my client is working again.\n. Please excuse my ignorance, but i did give a helpful title to the pull request and gave a description to the commit request. Unfortunately i'm not sure which part of the guidelines i didnt follow, but if it was the issue of examples for this commit, i was browsing through the code and noticed that it seemed strange.\n. Was always making my pull request title descriptive to summarize all the commits as they are all for 1 issue now, normally across multiple files, but will do so in the commit entries as well.\n. sorry about the double commit. client is working again but i forgot to put in the example. :)\n. unfortunately github for windows doesnt provide any option for that, or maybe i just dont know how to do it. :)\n. yes it seems the first commit was from my master branch and the second with the additional tests was from my philipzae branch, so should i cancel the additional test commit so that it can be merged?\n. ",
    "VictorBlomberg": "As @commenthol mentioned over at #318, this could possibly solve the problem with Internet Explorer compatibility modes (ua-parser today only gives the emulated IE version, not the real IE version). But then we would need not only the engine name, but also engine version.\n\nI am not familiar with the technical aspects of this proposal, but the idea is really great. This would make ua-parser truly relevant for analytical use.\n. @philipzae: Ah, great then!\n\nAnyone here _not_ in favor of this idea? Or can we all agree that we want this implemented?\n. Hi,\n\nIt is quite a deal-breaker that there is no way to get the real (non-emulated) browser version used. In the end, I as a site owner can, more or less, provoke different compatibility modes, but as a basis for decisions that information is useless if I have no idea what browser version the user really has.\n\nCompatibility mode/emulated version is, of course, still very interesting, but as an additional information to the real version, not as the only information.\n\nI strongly argue that ua-parser as soon as possible should pick 4, and until that is ready or if a fallback for existing parser versions is needed, go for 1. Otherwise 3, but definitely not 2.\n. As @commenthol mentioned over at #318, this could possibly solve the problem with Internet Explorer compatibility modes (ua-parser today only gives the emulated IE version, not the real IE version). But then we would need not only the engine name, but also engine version.\n\nI am not familiar with the technical aspects of this proposal, but the idea is really great. This would make ua-parser truly relevant for analytical use.\n. @philipzae: Ah, great then!\n\nAnyone here _not_ in favor of this idea? Or can we all agree that we want this implemented?\n. Hi,\n\nIt is quite a deal-breaker that there is no way to get the real (non-emulated) browser version used. In the end, I as a site owner can, more or less, provoke different compatibility modes, but as a basis for decisions that information is useless if I have no idea what browser version the user really has.\n\nCompatibility mode/emulated version is, of course, still very interesting, but as an additional information to the real version, not as the only information.\n\nI strongly argue that ua-parser as soon as possible should pick 4, and until that is ready or if a fallback for existing parser versions is needed, go for 1. Otherwise 3, but definitely not 2.\n. ",
    "JulienPalard": "@philipzae I only add what I see in my logs, don't worry they dont came out of my mind :)\n\nI'll grep them out of my logs to double check it and add a unit test.\n. @philipzae I only add what I see in my logs, don't worry they dont came out of my mind :)\n\nI'll grep them out of my logs to double check it and add a unit test.\n. ",
    "dangrossman": "It's IE11 on Windows 8.1 that dropped the MS.\n\nhttp://www.engadget.com/2013/03/25/ie-11-says-it-is-like-firefox/\n\nThe RT version seems to have dropped the IE label altogether. This UA was seen:\n\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko\n\nSo only the \"Trident\" portion can be used to identify IE11 safely.\n. \"I recon that Windows matchers do not use the major version info at present\"\n\nI do in order to track operating system usage share. Right now since no patch was accepted, Win8.1 shows up as \"Windows\" with no version. Windows 8 would've been better regardless of how you want to handle minor versions in the future.\n\nI patched my own copy of the regexes file in the meantime.\n. IE11 in compatibility mode (which is sometimes automatically enabled) is detected as IE7.\n\nThe regexes need to use the Trident version rather than the \"IE\" version in the user agent to correctly differentiate IE11 from IE7.\n. IE11 on Win 8.1 normal:\n\n```\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; ASU2JS; rv:11.0) like Gecko\n```\n\nIE11 on Win8.1 compatibility mode:\n\n```\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.3; WOW64; Trident/7.0; Touch; .NET4.0E; .NET4.0C; .NET CLR 3.5.30729; .NET CLR 2.0.50727; .NET CLR 3.0.30729; Tablet PC 2.0; ASU2JS)\n```\n\nStatCounter, Akamai and other orgs that identify browsers from UAs either have or will soon be updating to identify this as IE 11. I think ua-parser should as well.\n. It's IE11 on Windows 8.1 that dropped the MS.\n\nhttp://www.engadget.com/2013/03/25/ie-11-says-it-is-like-firefox/\n\nThe RT version seems to have dropped the IE label altogether. This UA was seen:\n\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko\n\nSo only the \"Trident\" portion can be used to identify IE11 safely.\n. \"I recon that Windows matchers do not use the major version info at present\"\n\nI do in order to track operating system usage share. Right now since no patch was accepted, Win8.1 shows up as \"Windows\" with no version. Windows 8 would've been better regardless of how you want to handle minor versions in the future.\n\nI patched my own copy of the regexes file in the meantime.\n. IE11 in compatibility mode (which is sometimes automatically enabled) is detected as IE7.\n\nThe regexes need to use the Trident version rather than the \"IE\" version in the user agent to correctly differentiate IE11 from IE7.\n. IE11 on Win 8.1 normal:\n\n```\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; ASU2JS; rv:11.0) like Gecko\n```\n\nIE11 on Win8.1 compatibility mode:\n\n```\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.3; WOW64; Trident/7.0; Touch; .NET4.0E; .NET4.0C; .NET CLR 3.5.30729; .NET CLR 2.0.50727; .NET CLR 3.0.30729; Tablet PC 2.0; ASU2JS)\n```\n\nStatCounter, Akamai and other orgs that identify browsers from UAs either have or will soon be updating to identify this as IE 11. I think ua-parser should as well.\n. ",
    "Fyrd": "Sorry about that, should have read the README before submitting. Will do.\n\nThere's a recent one for Opera Mobile which you may be thinking of, but I didn't see one that covers the desktop version released only today.\n. There you go, will that do?\n. Sorry about that, should have read the README before submitting. Will do.\n\nThere's a recent one for Opera Mobile which you may be thinking of, but I didn't see one that covers the desktop version released only today.\n. There you go, will that do?\n. ",
    "pkubat": "This needs to also address the os.version.(minor | major) to be set correctly for each family.\n\n'Mac OS X' and 'Android' (maybe others like iOS) already follow this.  and os_name seem represent the \"family\".\n. This needs to also address the os.version.(minor | major) to be set correctly for each family.\n\n'Mac OS X' and 'Android' (maybe others like iOS) already follow this.  and os_name seem represent the \"family\".\n. ",
    "rrangnekar": "This should be addressed in #270.\n. This should be addressed in #270.\n. ",
    "mandalm": "By any chance this PR going to be merged?\n. By any chance this PR going to be merged?\n. ",
    "jpvincent": "I haven't found the place where tests are wrotten\nI only saw this file : https://github.com/tobie/ua-parser/blob/master/tests/uas.js\nDo I have to update it with some UA strings I'm aware of ?\n. Ok, it took me time but I hope this addition will go really further than my quick first proposal.\nI wrote lot of tests with real user agents, determined the logic for each vendor for building their UA string and adapted the ua-parser classification to what's expected of the HbbTV spec and what the developer need to really target.\nSo, to copy latest commit message : \n- HbbTV TVs are of the same user agent family (HbbTV). Version number\n  of the standard is detected to help serve the appropriate\n  functionalities\n- tried a generic HbbTV detection (Manufacturer / year)\n- detecting specificities for TV models for Samsung, LG, Sony,\n  Panasonic and Philips, from 2011 to mid 2013\n- set TV manufacturer as OS family, year as OS major version and if two\n  models are released the same year and are very different (performances,\n  browser), TV model as OS minor\n- added 14 User agent tests\n\nI'm testing it sucessfully on a private testSwarm instance and I hope you will accept it so that I can use it on Browserscope.org :)\n. How do you see the conflicts ?\nI tested this locally : \n\n```\nmac-jpv:ua-parser jpv$ git status\n# On branch HbbTV\nnothing to commit (working directory clean)\nmac-jpv:ua-parser jpv$ git checkout master\nSwitched to branch 'master'\nmac-jpv:ua-parser jpv$ git pull\nAlready up-to-date.\nmac-jpv:ua-parser jpv$ git merge HbbTV\nUpdating 09593bb..75b1f89\nFast-forward\n regexes.yaml                                  |   64 +++++++++++++++-\n test_resources/test_device.yaml               |   53 +++++++++++++\n test_resources/test_user_agent_parser.yaml    |   11 +++\n test_resources/test_user_agent_parser_os.yaml |  103 +++++++++++++++++++++++++\n 4 files changed, 230 insertions(+), 1 deletions(-)\n```\n\n So I dont see any conflict with the master ?\n. I'm not too good into Git but force-rebasing from an up-to-date master still tells me I dont have any conflict\n\n``` shell\nmac-jpv:ua-parser jpv$ git checkout master\nSwitched to branch 'master'\nmac-jpv:ua-parser jpv$ git pull\nAlready up-to-date.\nmac-jpv:ua-parser jpv$ git checkout HbbTV\nAlready on 'HbbTV'\nmac-jpv:ua-parser jpv$ git rebase master\nCurrent branch HbbTV is up to date.\nmac-jpv:ua-parser jpv$ git rebase --force-rebase master\nCurrent branch HbbTV is up to date, rebase forced.\nFirst, rewinding head to replay your work on top of it...\nFast-forwarded HbbTV to master.\n```\n\nDo I miss something ?\n. Ok, thanks for the tips, I'm starting to better get Git\nI should be good now. However, as I was not seeing the latest pushes in this thread, I ended creating a new pull request (#286), sry for that\n. I haven't found the place where tests are wrotten\nI only saw this file : https://github.com/tobie/ua-parser/blob/master/tests/uas.js\nDo I have to update it with some UA strings I'm aware of ?\n. Ok, it took me time but I hope this addition will go really further than my quick first proposal.\nI wrote lot of tests with real user agents, determined the logic for each vendor for building their UA string and adapted the ua-parser classification to what's expected of the HbbTV spec and what the developer need to really target.\nSo, to copy latest commit message : \n- HbbTV TVs are of the same user agent family (HbbTV). Version number\n  of the standard is detected to help serve the appropriate\n  functionalities\n- tried a generic HbbTV detection (Manufacturer / year)\n- detecting specificities for TV models for Samsung, LG, Sony,\n  Panasonic and Philips, from 2011 to mid 2013\n- set TV manufacturer as OS family, year as OS major version and if two\n  models are released the same year and are very different (performances,\n  browser), TV model as OS minor\n- added 14 User agent tests\n\nI'm testing it sucessfully on a private testSwarm instance and I hope you will accept it so that I can use it on Browserscope.org :)\n. How do you see the conflicts ?\nI tested this locally : \n\n```\nmac-jpv:ua-parser jpv$ git status\n# On branch HbbTV\nnothing to commit (working directory clean)\nmac-jpv:ua-parser jpv$ git checkout master\nSwitched to branch 'master'\nmac-jpv:ua-parser jpv$ git pull\nAlready up-to-date.\nmac-jpv:ua-parser jpv$ git merge HbbTV\nUpdating 09593bb..75b1f89\nFast-forward\n regexes.yaml                                  |   64 +++++++++++++++-\n test_resources/test_device.yaml               |   53 +++++++++++++\n test_resources/test_user_agent_parser.yaml    |   11 +++\n test_resources/test_user_agent_parser_os.yaml |  103 +++++++++++++++++++++++++\n 4 files changed, 230 insertions(+), 1 deletions(-)\n```\n\n So I dont see any conflict with the master ?\n. I'm not too good into Git but force-rebasing from an up-to-date master still tells me I dont have any conflict\n\n``` shell\nmac-jpv:ua-parser jpv$ git checkout master\nSwitched to branch 'master'\nmac-jpv:ua-parser jpv$ git pull\nAlready up-to-date.\nmac-jpv:ua-parser jpv$ git checkout HbbTV\nAlready on 'HbbTV'\nmac-jpv:ua-parser jpv$ git rebase master\nCurrent branch HbbTV is up to date.\nmac-jpv:ua-parser jpv$ git rebase --force-rebase master\nCurrent branch HbbTV is up to date, rebase forced.\nFirst, rewinding head to replay your work on top of it...\nFast-forwarded HbbTV to master.\n```\n\nDo I miss something ?\n. Ok, thanks for the tips, I'm starting to better get Git\nI should be good now. However, as I was not seeing the latest pushes in this thread, I ended creating a new pull request (#286), sry for that\n. ",
    "shane-tomlinson": "@tobie - is there a timeline for a new version of the npm package with this fix? Thanks!\n. @tobie - is there a timeline for a new version of the npm package with this fix? Thanks!\n. ",
    "mgol": "Doesn't work for me on Windows 7 (I've tried the newest `ua-parser` 0.3.3 from npm):\n\n``` js\n> require('ua-parser').parse(\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko\")\n{ string: 'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko',\n  ua: \n   { family: 'Other',\n     major: null,\n     minor: null,\n     patch: null },\n  userAgent: \n   { family: 'Other',\n     major: null,\n     minor: null,\n     patch: null },\n  os: \n   { family: 'Windows 7',\n     major: null,\n     minor: null,\n     patch: null,\n     patchMinor: null },\n  device: { family: 'Other' },\n  family: 'Other',\n  major: undefined,\n  minor: undefined,\n  patch: undefined }\n```\n. Yeah, just got into the same problem...\n. Actually, my iOS 8.0.2 User Agent is:\n\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A405 Safari/600.1.4\n```\n\nso maybe only the emulator is broken.\n. This is fixed in the iOS 8.3 simulator.\n![screen shot 2015-04-10 at 11 50 30](https://cloud.githubusercontent.com/assets/1758366/7085529/d9adacac-df77-11e4-85c3-510f353e7ac2.png)\n. This probably means you're using IE7 mode, otherwise the UA would be different. Are you including the following tag on your page?\n\n```\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n```\n. This probably means that some of your users pressed the IE compatiblity mode button (a.k.a. \"break everything button\"). To guard against it, you should always put the `IE=edge` `X-UA-Compatible` entry, either via a meta tag or via a header.\n\nIf you have `MSIE 7.0` in your user agent, it means your IE is running in some kind of compatiblity mode. Therefore, there is nothing wrong with `ua-parser` here.\n. Doesn't work for me on Windows 7 (I've tried the newest `ua-parser` 0.3.3 from npm):\n\n``` js\n> require('ua-parser').parse(\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko\")\n{ string: 'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko',\n  ua: \n   { family: 'Other',\n     major: null,\n     minor: null,\n     patch: null },\n  userAgent: \n   { family: 'Other',\n     major: null,\n     minor: null,\n     patch: null },\n  os: \n   { family: 'Windows 7',\n     major: null,\n     minor: null,\n     patch: null,\n     patchMinor: null },\n  device: { family: 'Other' },\n  family: 'Other',\n  major: undefined,\n  minor: undefined,\n  patch: undefined }\n```\n. Yeah, just got into the same problem...\n. Actually, my iOS 8.0.2 User Agent is:\n\n```\nMozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A405 Safari/600.1.4\n```\n\nso maybe only the emulator is broken.\n. This is fixed in the iOS 8.3 simulator.\n![screen shot 2015-04-10 at 11 50 30](https://cloud.githubusercontent.com/assets/1758366/7085529/d9adacac-df77-11e4-85c3-510f353e7ac2.png)\n. This probably means you're using IE7 mode, otherwise the UA would be different. Are you including the following tag on your page?\n\n```\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n```\n. This probably means that some of your users pressed the IE compatiblity mode button (a.k.a. \"break everything button\"). To guard against it, you should always put the `IE=edge` `X-UA-Compatible` entry, either via a meta tag or via a header.\n\nIf you have `MSIE 7.0` in your user agent, it means your IE is running in some kind of compatiblity mode. Therefore, there is nothing wrong with `ua-parser` here.\n. ",
    "yihuanz": "Done!\n. I should be able to have the changes done in 3-4 weeks after the final specs for the golang port.\n. Done!\n. I should be able to have the changes done in 3-4 weeks after the final specs for the golang port.\n. ",
    "acdha": "`pip install ua-parser` does not work in a fresh virtualenv, failing during setup.py:\n\n```\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\", line 34, in run\n\n    install_regexes()\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\", line 22, in install_regexes\n\n    import yaml\n\nImportError: No module named yaml\n```\n. Great! I saw the version numbers matched & assumed PyPI was current. Thanks\nfor clearing that up.\n\nChris\n. `pip install ua-parser` does not work in a fresh virtualenv, failing during setup.py:\n\n```\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\", line 34, in run\n\n    install_regexes()\n\n  File \"/Users/cadams/.virtualenvs/wdl-stats/build/ua-parser/setup.py\", line 22, in install_regexes\n\n    import yaml\n\nImportError: No module named yaml\n```\n. Great! I saw the version numbers matched & assumed PyPI was current. Thanks\nfor clearing that up.\n\nChris\n. ",
    "ui": "I have just uploaded the latest version (0.3.4) to PyPI, this version should no longer require pyyaml to install. Sorry for the delay!\n. I have just uploaded the latest version (0.3.4) to PyPI, this version should no longer require pyyaml to install. Sorry for the delay!\n. ",
    "wlk": "Is there a way to claim / assign this issue to myself to indicate that I'm working on that?\n. It looks like both Java and python versions are failing on the same test, but both fail in different cases: \n\n```\nadditional_os_tests.yaml Mozilla/5.0 (Linux; U; Android Donut; de-de; HTC Tattoo 1.52.161.1 Build/Donut) AppleWebKit/528.5+ (KHTML, like Gecko) Version/3.1.2 Mobile Safari/525.20.1:\n     AssertionError: Expected os.minor to be null got \"2\" instead.\n```\n\nI have changed that from '2' to null, which was causing problems for java version.\n\nJava version: expects null\nPython versoin: expects '2'\n\nWill continue investigation later.\n. I wasn't claiming that there's a problem with tests, but if the test are failing under Java, then I think this should be fixed one way (changes to tests, that didn't work under Java when added) or other (changes to Java implementation).\n\nI can suggest that probably easiest way to fix that would be to remove that that test case from Java's version of tests, if that's OK.\n. Is there a way to claim / assign this issue to myself to indicate that I'm working on that?\n. It looks like both Java and python versions are failing on the same test, but both fail in different cases: \n\n```\nadditional_os_tests.yaml Mozilla/5.0 (Linux; U; Android Donut; de-de; HTC Tattoo 1.52.161.1 Build/Donut) AppleWebKit/528.5+ (KHTML, like Gecko) Version/3.1.2 Mobile Safari/525.20.1:\n     AssertionError: Expected os.minor to be null got \"2\" instead.\n```\n\nI have changed that from '2' to null, which was causing problems for java version.\n\nJava version: expects null\nPython versoin: expects '2'\n\nWill continue investigation later.\n. I wasn't claiming that there's a problem with tests, but if the test are failing under Java, then I think this should be fixed one way (changes to tests, that didn't work under Java when added) or other (changes to Java implementation).\n\nI can suggest that probably easiest way to fix that would be to remove that that test case from Java's version of tests, if that's OK.\n. ",
    "lcalvy": "I understand but 8 is not a version number but an os family name. \nWe don't know if 8.1 is a codename or a family name but from my point of view it's like a service pack.\nI prefer not mention windows 8.1 and update if needed when it will be officially released.\n. I understand but 8 is not a version number but an os family name. \nWe don't know if 8.1 is a codename or a family name but from my point of view it's like a service pack.\nI prefer not mention windows 8.1 and update if needed when it will be officially released.\n. ",
    "rthijssen": "Is this pull request still being considered?\n. @lstrojny sorry to pull you into this conversation. Not sure if you can help us out. But is it possible to give us some information on why this request is not being merged?\n. Thanks for the quick fix Lars! That worked.\n. One issue with removing it is that it will actually use elements that are NULL.\nSo in the case of the operating system some version numbers will contain 1 or more dots at the end of it. Not sure how to fix this yet. Can look into this tomorrow if you are short on time though.\n. That did the trick. Thanks.\n. Sure no props. I'll try to take care of that today.\n. Sorry my bad. This is properly detected. \n. Is this pull request still being considered?\n. @lstrojny sorry to pull you into this conversation. Not sure if you can help us out. But is it possible to give us some information on why this request is not being merged?\n. Thanks for the quick fix Lars! That worked.\n. One issue with removing it is that it will actually use elements that are NULL.\nSo in the case of the operating system some version numbers will contain 1 or more dots at the end of it. Not sure how to fix this yet. Can look into this tomorrow if you are short on time though.\n. That did the trick. Thanks.\n. Sure no props. I'll try to take care of that today.\n. Sorry my bad. This is properly detected. \n. ",
    "adambl": "Why doesn't the Nuget package nor the master branch contain this important change?\n. Why doesn't the Nuget package nor the master branch contain this important change?\n. ",
    "Lardjo": "We demand the resignation of the leadership :smiley: \n. We demand the resignation of the leadership :smiley: \n. ",
    "skemper": "Fixed. Sorry about that, forgot to check the Travis CI builds.\n. Here's Microsoft's \"Internet Explorer for Xbox\" developer documentation: http://msdn.microsoft.com/en-us/library/ie/jj883727%28v=vs.85%29.aspx\n\nThe way I read it, the application is based off of Trident like IE and IE Mobile, but is a separate product.\n. Fixed. Sorry about that, forgot to check the Travis CI builds.\n. Here's Microsoft's \"Internet Explorer for Xbox\" developer documentation: http://msdn.microsoft.com/en-us/library/ie/jj883727%28v=vs.85%29.aspx\n\nThe way I read it, the application is based off of Trident like IE and IE Mobile, but is a separate product.\n. ",
    "skyzyx": "If you [compare them for features](http://j.mp/device-info), you'll notice several differences. Having said that, IIRC, IE for Xbox is IE Mobile 9.0. (This is the only IE Mobile device I've tested, so I don't know how it differs from Windows Phone 7/8.)\n\nAt the very least, we should always track the version number.\n. _ping_\n\nWhere'd we land on this?\n. See #308.\n. :+1:\n. I was about to do, and contribute, most of this very same work. Thanks for beating me to the punch. :)\n. \"GT-N8000\" is the Samsung Galaxy Note 10.1. It's not really Safari.\n. If you [compare them for features](http://j.mp/device-info), you'll notice several differences. Having said that, IIRC, IE for Xbox is IE Mobile 9.0. (This is the only IE Mobile device I've tested, so I don't know how it differs from Windows Phone 7/8.)\n\nAt the very least, we should always track the version number.\n. _ping_\n\nWhere'd we land on this?\n. See #308.\n. :+1:\n. I was about to do, and contribute, most of this very same work. Thanks for beating me to the punch. :)\n. \"GT-N8000\" is the Samsung Galaxy Note 10.1. It's not really Safari.\n. ",
    "crazydan": "Breaks too many unit tests for previous devices\n. Breaks too many unit tests for previous devices\n. ",
    "SunilAgrawal": "Will be good if support for properly parsing IE 11 can be added.\n. Will be good if support for properly parsing IE 11 can be added.\n. ",
    "jamesearl": "IE 11.0.2 on Win7, using the default UA string:\n\n```\n    Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\n```\n\nParsed as \n\n```\n    Family: \"Other\"\n```\n\nwith other fields null.\n\nUsing the c# wrapper.\n\n---\n\nEdit: updating to the latest version of regexes.yaml fixed this.\n. IE 11.0.2 on Win7, using the default UA string:\n\n```\n    Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\n```\n\nParsed as \n\n```\n    Family: \"Other\"\n```\n\nwith other fields null.\n\nUsing the c# wrapper.\n\n---\n\nEdit: updating to the latest version of regexes.yaml fixed this.\n. ",
    "spadgos": "This PR would solve a couple of issues for me right now. Any update on whether it can get merged?\n. ...not exactly sure why that build failed.\n\n> 1) UAParser\\Tests\\Util\\FetcherTest::testFetchSuccess \n> UAParser\\Exception\\FetcherException: Could not fetch HTTP resource \"https://raw.github.com/tobie/ua-parser/master/regexes.yaml\": file_get_contents(https://raw.github.com/tobie/ua-parser/master/regexes.yaml): failed to open stream: operation failed\n. @klimashkin do you have a source for that? AFAICT the official docs haven't been updated with that string\n. This PR would solve a couple of issues for me right now. Any update on whether it can get merged?\n. ...not exactly sure why that build failed.\n\n> 1) UAParser\\Tests\\Util\\FetcherTest::testFetchSuccess \n> UAParser\\Exception\\FetcherException: Could not fetch HTTP resource \"https://raw.github.com/tobie/ua-parser/master/regexes.yaml\": file_get_contents(https://raw.github.com/tobie/ua-parser/master/regexes.yaml): failed to open stream: operation failed\n. @klimashkin do you have a source for that? AFAICT the official docs haven't been updated with that string\n. ",
    "crocker": "I recently created a small rest endpoint (in Java) based on this library. I'd be willing to help with that piece or provide more detail if anyone is interested.\n. I recently created a small rest endpoint (in Java) based on this library. I'd be willing to help with that piece or provide more detail if anyone is interested.\n. ",
    "puzrin": "IMHO, when rules data goes to separate repo, it worth to add capabilities-related fields to model info. May be, in separate files, for secondary optional request. I mean, creating devices db like WURFL. Since WURFL info is overcomplicated, i'd suggest to use fields from yandex API http://api.yandex.ru/detector/doc/dg/concepts/detector-response.xml (screen size, jvm type, cam/fs access). Exact list of fields is subject of separate discussion.\n\nPossible scope of such data are site legacy modes for feature-phones with bad js/css support.\n. I think, it whould be nice to discuss data format specs, for maintainability and optimal regex generation. Data from `ua-parser-caps` looks a bit overengeneered. For example, device types instead of just screen size look artificial.\n. IMHO, when rules data goes to separate repo, it worth to add capabilities-related fields to model info. May be, in separate files, for secondary optional request. I mean, creating devices db like WURFL. Since WURFL info is overcomplicated, i'd suggest to use fields from yandex API http://api.yandex.ru/detector/doc/dg/concepts/detector-response.xml (screen size, jvm type, cam/fs access). Exact list of fields is subject of separate discussion.\n\nPossible scope of such data are site legacy modes for feature-phones with bad js/css support.\n. I think, it whould be nice to discuss data format specs, for maintainability and optimal regex generation. Data from `ua-parser-caps` looks a bit overengeneered. For example, device types instead of just screen size look artificial.\n. ",
    "mrjgreen": "Hi, don't suppose anyone can update us on progress for this issue? The new separated repository looks great and @commenthol's device/brand additions look fantastic, but theres been no activity or discussion over there for over a month... Is there anything we can do to help (writing tests etc)? Is the hold up due to lack of time, or has the idea of a separate repo lost favour?\n\nHope someone can help :)\n. Hi Tobie, thanks for your helpful feedback. As I'm new to this project, perhaps you could give me a bit more information about where I ought to put tests, and how I should create the correct test for this change. Cheers\n. Hi the following errors on device matching on this sort of user agent also seem to be being caused by the android device matching not being at the bottom:\n\ncom.google.android.youtube/5.1.10(Linux; U; Android 2.3.6; en_GB; ALCATEL ONE TOUCH 903 Build/GRK39F) gzip\n_Parses to_\nen_GB; ALCATEL ONE TOUCH 903\n\ncom.google.android.youtube/5.3.32(Linux; U; Android 4.2.1; en_GB; ASUS Transformer Pad TF300T Build/JOP40D) gzip\n_Parses to_\nen_GB; ASUS Transformer Pad TF300T\n\netc...\n\nPlease could you explain what you would need in order to accept merges - I would really like to contribute my patches back to the project.\n\nCheers\n. Thanks for the links @commenthol  - I love the device matching power in your fork. This is exactly what I'm looking for.\n\nHowever with regard to the android false positive - I've noticed a similar issue in your fork for browsers with a UA like this:\n\nMozilla/5.0 (Linux;U; Android 4.0.4; engb; SurfTab_7.0 Build/IMM76D) AppleWebKit/534.30 (KHTML,like Gecko) Version/4.0 Safari/534.30\n\nAny UA from a browser running on android os will match the following rules\n- regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris) (\\d+).(\\d+).?(\\d+)?'\n\nfrom https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L237\n\nThis seems to be an issue across the board - The generic android rules MUST go below other rules to avoid this. Please let me know if am I mistaken about this. Hope someone can help - I'm having to fork the regexes.yaml and patch manually to get round this issue.\n. That seems to make sense and appears to match all the examples I have seen so far.\n\nCheers\nJoe Green\n\n> On 29 Jan 2014, at 22:40, commenthol notifications@github.com wrote:\n> \n> After doing some research:\n> \n> Not all UAs contain the Version/ info but all contain the technical version Safari/ \n> Would opt for a matcher like that\n> - regex: 'Android.*(Safari)/(\\d{3}).(\\d+)'\n>   family_replacement: 'Mobile Safari'\n>   \u2014\n>   Reply to this email directly or view it on GitHub.\n. Hang on....\nJust found this one that seems to be running a Non-mobile version of safari on an android os. Is that even possible?\n\n`Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-N8000 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30`\n. Just to add to this, if your application really needs to log some sort of device type for desktops and \"Other\" isn't acceptable to your users, you could make a reasonable effort by adding some simple custom logic after the UA Parser stage. Something like this may give you an acceptable output:\n\n```\nif($device === 'Other')\n{\n    $device = contains($osFamily, 'mac os') ? 'Mac' : 'PC'; // Or whatever identifiers you want\n}\n```\n\nWe have a similar issue to contend with - essentially our users don't understand the difficulties of user agent parsing, they just want to know how many Mac users VS PC users they have, so we have no choice but to try and provide that information, even if the results are spurious. Our logic is slightly more complex than this and also uses [this extended set of regexes which include brand/model](https://github.com/commenthol/ua-parser/blob/master/regexes.yaml), which commenthol has been trying to [get merged into the core](https://github.com/ua-parser/uap-core/pull/10) for some time now.\n\nIt all depends on what you need and how much work you are willing to do but as @Ironholds has said, it is impossible to tell what the desktop model is from the user agent string because the information is not supplied.\n. Hi, don't suppose anyone can update us on progress for this issue? The new separated repository looks great and @commenthol's device/brand additions look fantastic, but theres been no activity or discussion over there for over a month... Is there anything we can do to help (writing tests etc)? Is the hold up due to lack of time, or has the idea of a separate repo lost favour?\n\nHope someone can help :)\n. Hi Tobie, thanks for your helpful feedback. As I'm new to this project, perhaps you could give me a bit more information about where I ought to put tests, and how I should create the correct test for this change. Cheers\n. Hi the following errors on device matching on this sort of user agent also seem to be being caused by the android device matching not being at the bottom:\n\ncom.google.android.youtube/5.1.10(Linux; U; Android 2.3.6; en_GB; ALCATEL ONE TOUCH 903 Build/GRK39F) gzip\n_Parses to_\nen_GB; ALCATEL ONE TOUCH 903\n\ncom.google.android.youtube/5.3.32(Linux; U; Android 4.2.1; en_GB; ASUS Transformer Pad TF300T Build/JOP40D) gzip\n_Parses to_\nen_GB; ASUS Transformer Pad TF300T\n\netc...\n\nPlease could you explain what you would need in order to accept merges - I would really like to contribute my patches back to the project.\n\nCheers\n. Thanks for the links @commenthol  - I love the device matching power in your fork. This is exactly what I'm looking for.\n\nHowever with regard to the android false positive - I've noticed a similar issue in your fork for browsers with a UA like this:\n\nMozilla/5.0 (Linux;U; Android 4.0.4; engb; SurfTab_7.0 Build/IMM76D) AppleWebKit/534.30 (KHTML,like Gecko) Version/4.0 Safari/534.30\n\nAny UA from a browser running on android os will match the following rules\n- regex: '(iCab|Lunascape|Opera|Android|Jasmine|Polaris) (\\d+).(\\d+).?(\\d+)?'\n\nfrom https://github.com/commenthol/ua-parser/blob/master/regexes.yaml#L237\n\nThis seems to be an issue across the board - The generic android rules MUST go below other rules to avoid this. Please let me know if am I mistaken about this. Hope someone can help - I'm having to fork the regexes.yaml and patch manually to get round this issue.\n. That seems to make sense and appears to match all the examples I have seen so far.\n\nCheers\nJoe Green\n\n> On 29 Jan 2014, at 22:40, commenthol notifications@github.com wrote:\n> \n> After doing some research:\n> \n> Not all UAs contain the Version/ info but all contain the technical version Safari/ \n> Would opt for a matcher like that\n> - regex: 'Android.*(Safari)/(\\d{3}).(\\d+)'\n>   family_replacement: 'Mobile Safari'\n>   \u2014\n>   Reply to this email directly or view it on GitHub.\n. Hang on....\nJust found this one that seems to be running a Non-mobile version of safari on an android os. Is that even possible?\n\n`Mozilla/5.0 (Linux; U; Android 4.1.2; de-de; GT-N8000 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30`\n. Just to add to this, if your application really needs to log some sort of device type for desktops and \"Other\" isn't acceptable to your users, you could make a reasonable effort by adding some simple custom logic after the UA Parser stage. Something like this may give you an acceptable output:\n\n```\nif($device === 'Other')\n{\n    $device = contains($osFamily, 'mac os') ? 'Mac' : 'PC'; // Or whatever identifiers you want\n}\n```\n\nWe have a similar issue to contend with - essentially our users don't understand the difficulties of user agent parsing, they just want to know how many Mac users VS PC users they have, so we have no choice but to try and provide that information, even if the results are spurious. Our logic is slightly more complex than this and also uses [this extended set of regexes which include brand/model](https://github.com/commenthol/ua-parser/blob/master/regexes.yaml), which commenthol has been trying to [get merged into the core](https://github.com/ua-parser/uap-core/pull/10) for some time now.\n\nIt all depends on what you need and how much work you are willing to do but as @Ironholds has said, it is impossible to tell what the desktop model is from the user agent string because the information is not supplied.\n. ",
    "antonioribeiro": "Tobie, just to let you know that, to be able to use a 'stable' version, I forked, tagged and added it to packagist under my name: https://github.com/antonioribeiro/ua-parser.\n\nAs soon as you have time to do whatever you need to tag it, I will delete it and use this repo on my own packages. \n\nThanks for the hard work on this great package.\n. Trying to clarify the autoload issue.\n\nIf I download the full repository using Composer:\n\n```\n\"require\": {\n    \"tobie/ua-parser\" : \"dev-master\"\n},\n```\n\nThe `uaparser.php` script will be put at:\n\n```\n<root-app-dir>/vendor/tobie/ua-parser/php/bin/uaparser.php\n```\n\nSo, to have access to the `autoload.php` file at\n\n```\n<root-app-dir>/vendor/autoload.php\n```\n\nIt must recede 5 folders:\n\n```\nrequire_once __DIR__ . '/../../../../../vendor/autoload.php';\n```\n\nor just 4, since it is already inside vendor:\n\n```\nrequire_once __DIR__ . '/../../../../autoload.php';\n```\n\nBut it is actually just receding 2 folders, this is the original source code:\n\n```\nrequire_once __DIR__ . '/../../vendor/autoload.php';\n```\n. Tobie, just to let you know that, to be able to use a 'stable' version, I forked, tagged and added it to packagist under my name: https://github.com/antonioribeiro/ua-parser.\n\nAs soon as you have time to do whatever you need to tag it, I will delete it and use this repo on my own packages. \n\nThanks for the hard work on this great package.\n. Trying to clarify the autoload issue.\n\nIf I download the full repository using Composer:\n\n```\n\"require\": {\n    \"tobie/ua-parser\" : \"dev-master\"\n},\n```\n\nThe `uaparser.php` script will be put at:\n\n```\n<root-app-dir>/vendor/tobie/ua-parser/php/bin/uaparser.php\n```\n\nSo, to have access to the `autoload.php` file at\n\n```\n<root-app-dir>/vendor/autoload.php\n```\n\nIt must recede 5 folders:\n\n```\nrequire_once __DIR__ . '/../../../../../vendor/autoload.php';\n```\n\nor just 4, since it is already inside vendor:\n\n```\nrequire_once __DIR__ . '/../../../../autoload.php';\n```\n\nBut it is actually just receding 2 folders, this is the original source code:\n\n```\nrequire_once __DIR__ . '/../../vendor/autoload.php';\n```\n. ",
    "c0mm0n": "The timings i give you come from a fresh box (something like 32 cores, 32 gigs ram, ssd cache) dedicated to the project. The box is using nginx and php-fpm and has been setup by a professional sysadmin. (achieving the stable 40k rpm requests couldn't be done with a bad setup, box would have exploded). I also tried to cache us-parser results with memcache, this helped, but CPU load was still way too high, and it'd end up crashing.\n\nBenchmark/monitoring is being made by New Relic.\n\nMy view was that you could never achieve the speed of the varnish vmods using PHP, that it was like PHP wasn't the best at doing this. Thus i suggested ua-parser could offer the same \"connectors\" to varnish used in wurfl and dclass.\n\nI'll put a reminder on providing source and trace for this.\n. The timings i give you come from a fresh box (something like 32 cores, 32 gigs ram, ssd cache) dedicated to the project. The box is using nginx and php-fpm and has been setup by a professional sysadmin. (achieving the stable 40k rpm requests couldn't be done with a bad setup, box would have exploded). I also tried to cache us-parser results with memcache, this helped, but CPU load was still way too high, and it'd end up crashing.\n\nBenchmark/monitoring is being made by New Relic.\n\nMy view was that you could never achieve the speed of the varnish vmods using PHP, that it was like PHP wasn't the best at doing this. Thus i suggested ua-parser could offer the same \"connectors\" to varnish used in wurfl and dclass.\n\nI'll put a reminder on providing source and trace for this.\n. ",
    "teambob": "Hi,\n\nPerhaps the C++ module I contributed (see the pull requests) will give you some idea about the level of performance a native module.\n\nI haven't done any profiling but I suspect evaluating over 1000 regexes is the main bottleneck. One thing which could help is to have hints which could help to index the regexes.\n\nAlternatively integrating with dclass https://github.com/TheWeatherChannel/dClass looks like a good idea. This project seems to index the regex which would match what we need without needing to change the yaml file.\n\nHints example\n- regex: '(Opera Tablet).*Version/(\\d+).(\\d+)(?:.(\\d+))?'\n  hints:\n  - Opera Tablet\n- regex: '(YottaaMonitor|BrowserMob)'\n  hints:\n  - YottaMonitor\n  - BrowserMob\n. Any progress on this merge? Do you have any concerns?\n. Hi,\n\nPerhaps the C++ module I contributed (see the pull requests) will give you some idea about the level of performance a native module.\n\nI haven't done any profiling but I suspect evaluating over 1000 regexes is the main bottleneck. One thing which could help is to have hints which could help to index the regexes.\n\nAlternatively integrating with dclass https://github.com/TheWeatherChannel/dClass looks like a good idea. This project seems to index the regex which would match what we need without needing to change the yaml file.\n\nHints example\n- regex: '(Opera Tablet).*Version/(\\d+).(\\d+)(?:.(\\d+))?'\n  hints:\n  - Opera Tablet\n- regex: '(YottaaMonitor|BrowserMob)'\n  hints:\n  - YottaMonitor\n  - BrowserMob\n. Any progress on this merge? Do you have any concerns?\n. ",
    "switzer": "+1\n\nMy current app (NginX + Lua) is delivering 1K req/s with a [Lua port](https://github.com/sunblock/ua-parser) of this module, and almost 10K req/s without.  Seems like there should be some focus on performance:\n1. Organize the regex's by device popularity to reduce the number of regexes that need to be evaluated\n2. Add Hinting per above to further reduce regex evaluation\n3. **Add an Nginx module written in C**\n. +1\n\nMy current app (NginX + Lua) is delivering 1K req/s with a [Lua port](https://github.com/sunblock/ua-parser) of this module, and almost 10K req/s without.  Seems like there should be some focus on performance:\n1. Organize the regex's by device popularity to reduce the number of regexes that need to be evaluated\n2. Add Hinting per above to further reduce regex evaluation\n3. **Add an Nginx module written in C**\n. ",
    "sandinmyjoints": "No, though I like the idea. I would need to figure out how to make that\nwork -- it would take a bit of time.\n\nOn Fri, Aug 22, 2014 at 7:39 PM, Oliver Keyes notifications@github.com\nwrote:\n\n> @sandinmyjoints https://github.com/sandinmyjoints examining. Are you\n> actively porting the yaml file updates to the live example?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/309#issuecomment-53134764.\n\n## \n\nwilliamjohnbert.com | github.com/sandinmyjoints |\ntwitter.com/williamjohnbert\n. Ah, makes sense, easy enough. I updated just now, and I can make myself a\ncalendar reminder to pull latest and deploy every week or so. How does that\nsound?\n\nOn Sat, Aug 23, 2014 at 12:15 PM, Oliver Keyes notifications@github.com\nwrote:\n\n> Er. Git clone, grab the YAML file, upload it to your machine ;p. I'm not\n> saying \"update automatically and live\", just an assurance that updates are\n> being ported on a regular basis: otherwise linking is probably not\n> tremendously useful (a live example of a project that doesn't actually\n> provide represent the current state of the project...)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/309#issuecomment-53157391.\n\n## \n\nwilliamjohnbert.com | github.com/sandinmyjoints |\ntwitter.com/williamjohnbert\n. :+1: \n. No, though I like the idea. I would need to figure out how to make that\nwork -- it would take a bit of time.\n\nOn Fri, Aug 22, 2014 at 7:39 PM, Oliver Keyes notifications@github.com\nwrote:\n\n> @sandinmyjoints https://github.com/sandinmyjoints examining. Are you\n> actively porting the yaml file updates to the live example?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/309#issuecomment-53134764.\n\n## \n\nwilliamjohnbert.com | github.com/sandinmyjoints |\ntwitter.com/williamjohnbert\n. Ah, makes sense, easy enough. I updated just now, and I can make myself a\ncalendar reminder to pull latest and deploy every week or so. How does that\nsound?\n\nOn Sat, Aug 23, 2014 at 12:15 PM, Oliver Keyes notifications@github.com\nwrote:\n\n> Er. Git clone, grab the YAML file, upload it to your machine ;p. I'm not\n> saying \"update automatically and live\", just an assurance that updates are\n> being ported on a regular basis: otherwise linking is probably not\n> tremendously useful (a live example of a project that doesn't actually\n> provide represent the current state of the project...)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/pull/309#issuecomment-53157391.\n\n## \n\nwilliamjohnbert.com | github.com/sandinmyjoints |\ntwitter.com/williamjohnbert\n. :+1: \n. ",
    "aconway": "Also there is no device family identifying the surface tablet\n. Also there is no device family identifying the surface tablet\n. ",
    "guilbep": ":+1:  for that. I had a look at the code.. and adding a new feature requires to add this to all the languages implementation.. I really didn't figure out a simple way to bind device/os/browser to a category (plus what categories should be?). The more time I spend thinking about it.. the more it makes sense to use something on top of ua-parser.. despite being not that beautiful. It seems to be the more sane and easiest way.  I think this topic needs to be discussed.\n. :+1:  for that. I had a look at the code.. and adding a new feature requires to add this to all the languages implementation.. I really didn't figure out a simple way to bind device/os/browser to a category (plus what categories should be?). The more time I spend thinking about it.. the more it makes sense to use something on top of ua-parser.. despite being not that beautiful. It seems to be the more sane and easiest way.  I think this topic needs to be discussed.\n. ",
    "niklasae": "I don't understand why the test fails, it all runs fine in Python.\n. Awesome, thanks!\n\nOn 18 December 2013 21:52, Lars Strojny notifications@github.com wrote:\n\n> Fixed. Reason was that the regexes.yaml from master was used all the time.\n> Is no fixed in the travis.yml\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/319#issuecomment-30879589\n> .\n. I don't understand why the test fails, it all runs fine in Python.\n. Awesome, thanks!\n\nOn 18 December 2013 21:52, Lars Strojny notifications@github.com wrote:\n\n> Fixed. Reason was that the regexes.yaml from master was used all the time.\n> Is no fixed in the travis.yml\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/pull/319#issuecomment-30879589\n> .\n. ",
    "Jimflip": "+1\n. +1\n. ",
    "saadtazi": "+1\n. +1\n. ",
    "jakub-g": "@ all\n\nIf you guys really need a new version, you can have it without it being released in npm, by changing `package.json` to point to the GH repo directly:\n\n```\n\"ua-parser\": \"git+https://github.com/tobie/ua-parser.git#faad2c33ac1497e7b8fba5eb7aab55fac81b36c1\",\n```\n\n(this points to the newest commit in master as of today).\n\nHowever this is highly suboptimal since it \n- clones whole git repo (not only the Javascript part)\n- you'll have to manually remove `ua-parser` folder from `node_modules` first in order to have it installed with `npm install`\n\nLast time the package was updated on npm was when I emailed @tobie few months ago and he was wondering about somehow splitting the code and regexes, and this would probably be a good idea, but given the number of languages (basically separated subpackages linked only by the regexes file) hosted in this repo, this wouldn't be that easy and would require cooperation from everyone.\n\nAnyway for the time being, it would be good to find a maintainer of the npm package who would release a new version to npm every now and then, if @tobie is too busy.\n. @ all\n\nIf you guys really need a new version, you can have it without it being released in npm, by changing `package.json` to point to the GH repo directly:\n\n```\n\"ua-parser\": \"git+https://github.com/tobie/ua-parser.git#faad2c33ac1497e7b8fba5eb7aab55fac81b36c1\",\n```\n\n(this points to the newest commit in master as of today).\n\nHowever this is highly suboptimal since it \n- clones whole git repo (not only the Javascript part)\n- you'll have to manually remove `ua-parser` folder from `node_modules` first in order to have it installed with `npm install`\n\nLast time the package was updated on npm was when I emailed @tobie few months ago and he was wondering about somehow splitting the code and regexes, and this would probably be a good idea, but given the number of languages (basically separated subpackages linked only by the regexes file) hosted in this repo, this wouldn't be that easy and would require cooperation from everyone.\n\nAnyway for the time being, it would be good to find a maintainer of the npm package who would release a new version to npm every now and then, if @tobie is too busy.\n. ",
    "nathanjhastings": "+1\n. +1\n. ",
    "macinjosh32": "+1\n. +1\n. ",
    "martinschaer": "+1\n. +1\n. ",
    "bubenshchykov": "+1\n. +1\n. ",
    "mickaellcr": "Normally it should be only one useargent, but it's true that is a weird one. I didn't dig into the useragent spec to see if there is something wrong with this one, but I get this one like the others one (which are fine). But yes for me too it looks like many different UA\n. I don't known, apparently from Chrome.\n. Oki it happened only once and not from my browser. If it happens again, I will tell you.\n. Normally it should be only one useargent, but it's true that is a weird one. I didn't dig into the useragent spec to see if there is something wrong with this one, but I get this one like the others one (which are fine). But yes for me too it looks like many different UA\n. I don't known, apparently from Chrome.\n. Oki it happened only once and not from my browser. If it happens again, I will tell you.\n. ",
    "miketaylr": "Is there a device that actually has a UA string without spaces?\n. OK, understood. Let me clean this up and only include the parser change to detect Firefox OS tablets as `Firefox OS`\n. (That should have been past tense. I've removed the commit that added a Firefox Tablet family.)\n. Is there a device that actually has a UA string without spaces?\n. OK, understood. Let me clean this up and only include the parser change to detect Firefox OS tablets as `Firefox OS`\n. (That should have been past tense. I've removed the commit that added a Firefox Tablet family.)\n. ",
    "scottrobertson": "Could we get this tagged up if possible?\n. :+1: \n. @mimmi20 Login, go to the package, there is a big red \"delete\" button. \n. @mimmi20 I was about to say that, just add him as a maintainer :)\n. Thanks @tobie. Could you also create a new release so we can get the latest changes?\n. \"Releases\" on Github. It will create a tag, and push it to Packagist. Since right now only \"dev-master\" is on Packagist and no tagged releases. \n. Yeah basically. However, sometime i have had issues in the past. Simply creating a tag did not send it to packagist for some reason. You could try it :)\n. Hmm, have a look at https://packagist.org/about under \"Managing package versions\". May help. \n. Hmm yeah that is a good point about npm. \n\nUsing dev-master is not possible for us right now, since we (annoyingly) have to commit our /vendor folder for now due to deployment constraints (it uses git clone when you use a branch name, and not a tarball). We have forked, and created a tagged release for now, but I shall remove all of that once this is sorted :)\n\nThanks for your help. \n. Could we get this tagged up if possible?\n. :+1: \n. @mimmi20 Login, go to the package, there is a big red \"delete\" button. \n. @mimmi20 I was about to say that, just add him as a maintainer :)\n. Thanks @tobie. Could you also create a new release so we can get the latest changes?\n. \"Releases\" on Github. It will create a tag, and push it to Packagist. Since right now only \"dev-master\" is on Packagist and no tagged releases. \n. Yeah basically. However, sometime i have had issues in the past. Simply creating a tag did not send it to packagist for some reason. You could try it :)\n. Hmm, have a look at https://packagist.org/about under \"Managing package versions\". May help. \n. Hmm yeah that is a good point about npm. \n\nUsing dev-master is not possible for us right now, since we (annoyingly) have to commit our /vendor folder for now due to deployment constraints (it uses git clone when you use a branch name, and not a tarball). We have forked, and created a tagged release for now, but I shall remove all of that once this is sorted :)\n\nThanks for your help. \n. ",
    "karlcow": "@miketaylr I wonder if I do something wrong because manually testing it and not being able to get the right results.\n\n```\n>>> from ua_parser import user_agent_parser\n>>> ua = 'Mozilla/5.0 (Tablet; rv:29.0) Gecko/29.0 Firefox/29.0'\n>>> result_dict = user_agent_parser.Parse(ua)\n>>> print result_dict['user_agent']\n{'major': '29', 'minor': '0', 'family': 'Firefox', 'patch': None}\n>>> print result_dict['os']\n{'major': None, 'patch_minor': None, 'minor': None, 'family': 'Other', 'patch': None}\n```\n. @miketaylr I wonder if I do something wrong because manually testing it and not being able to get the right results.\n\n```\n>>> from ua_parser import user_agent_parser\n>>> ua = 'Mozilla/5.0 (Tablet; rv:29.0) Gecko/29.0 Firefox/29.0'\n>>> result_dict = user_agent_parser.Parse(ua)\n>>> print result_dict['user_agent']\n{'major': '29', 'minor': '0', 'family': 'Firefox', 'patch': None}\n>>> print result_dict['os']\n{'major': None, 'patch_minor': None, 'minor': None, 'family': 'Other', 'patch': None}\n```\n. ",
    "alexhouse": ":+1: \n\nIf no response, e-mail contact@packagist, or tweet them - super helpful.\n. :+1: \n\nIf no response, e-mail contact@packagist, or tweet them - super helpful.\n. ",
    "mimmi20": "How do I remove it?\n. @scottrobertson I did push that button, but the packe is still available. Only the release information is gone.\n@lstrojny I asked them, but they didnt answer yet.\nIs it possible to add one of you as maintainer and delete myself after that?\n. I added you, but I cant delete myself\n. How do I remove it?\n. @scottrobertson I did push that button, but the packe is still available. Only the release information is gone.\n@lstrojny I asked them, but they didnt answer yet.\nIs it possible to add one of you as maintainer and delete myself after that?\n. I added you, but I cant delete myself\n. ",
    "ChrisMcKee": "@soren-telerik / @enemaerke \n. Thanks :dash: \n. @soren-telerik / @enemaerke \n. Thanks :dash: \n. ",
    "wanst": "@skyzyx: What else is it? And, much more important, how can I simulate it? One of my customers has this Galaxy Note and got an error at his website. And I cannot verify it, because of all the newer devices (that I can test in stores ;) ) seems to have newer Browsers. \n. @skyzyx: What else is it? And, much more important, how can I simulate it? One of my customers has this Galaxy Note and got an error at his website. And I cannot verify it, because of all the newer devices (that I can test in stores ;) ) seems to have newer Browsers. \n. ",
    "rhhamburg": "Ahh ok. Thanks for your answer!\n. Ahh ok. Thanks for your answer!\n. ",
    "zachmayer": "Sure!\n\nOn Fri, Feb 28, 2014 at 2:46 PM, Tobie Langel notifications@github.comwrote:\n\n> Agree that would be super useful.\n> \n> We're in the process of breaking up the repo into an org. Can I ping you\n> once this is done?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/343#issuecomment-36387308\n> .\n. I've done that too, but I think it would be nice to have a pure R port.  We'll do what we can to make it fast, and people can choose whichever option works for them.\n\nFor example, in the environment I'm in, speed isn't a huge issue but getting R and Python to play nice is.  Hence my request!\n. Or C++!  Rcpp and inline are both great tools.\n. @Ironholds Did you ever make any progress on this?\n. Sure!\n\nOn Fri, Feb 28, 2014 at 2:46 PM, Tobie Langel notifications@github.comwrote:\n\n> Agree that would be super useful.\n> \n> We're in the process of breaking up the repo into an org. Can I ping you\n> once this is done?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/tobie/ua-parser/issues/343#issuecomment-36387308\n> .\n. I've done that too, but I think it would be nice to have a pure R port.  We'll do what we can to make it fast, and people can choose whichever option works for them.\n\nFor example, in the environment I'm in, speed isn't a huge issue but getting R and Python to play nice is.  Hence my request!\n. Or C++!  Rcpp and inline are both great tools.\n. @Ironholds Did you ever make any progress on this?\n. ",
    "superdweebie": "@tobie this is what I mean:\nhttps://github.com/tobie/ua-parser/blob/99c423603e326e1596a274887ce4a43dc4991104/php/src/UAParser/Util/Fetcher.php#L15\n\nThe fetcher shouldn't be using raw. I've had automated builds failing because of that.\n. ok\n. @tobie this is what I mean:\nhttps://github.com/tobie/ua-parser/blob/99c423603e326e1596a274887ce4a43dc4991104/php/src/UAParser/Util/Fetcher.php#L15\n\nThe fetcher shouldn't be using raw. I've had automated builds failing because of that.\n. ok\n. ",
    "klimashkin": "For today G+ bot looks like this\n`Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20110814 Firefox/6.0 Google (+)`\nSo regexp must be modified?\n. Such user-agent in request come to me when I share my page in G+\n. Try to share this page http://choister.ru/myua (it prints ua in page title) in your G+\n. I could not find a link to the change. I just made a page that displays in title user-agent string. This title takes Google + and displays in message when trying to post this link in Google+\nLink: https://pastvu.com/myua\nMy result: http://snag.gy/OfNBx.jpg\n\nSo when I try to cut off users with firefox smaller then version 7, and redirect them to badbrowser page, it also redirects G+ posting of any page to badbrowser page\n. For today G+ bot looks like this\n`Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20110814 Firefox/6.0 Google (+)`\nSo regexp must be modified?\n. Such user-agent in request come to me when I share my page in G+\n. Try to share this page http://choister.ru/myua (it prints ua in page title) in your G+\n. I could not find a link to the change. I just made a page that displays in title user-agent string. This title takes Google + and displays in message when trying to post this link in Google+\nLink: https://pastvu.com/myua\nMy result: http://snag.gy/OfNBx.jpg\n\nSo when I try to cut off users with firefox smaller then version 7, and redirect them to badbrowser page, it also redirects G+ posting of any page to badbrowser page\n. ",
    "d-simon": "This is already underway (https://github.com/tobie/ua-parser/issues/304)\n. This is already underway (https://github.com/tobie/ua-parser/issues/304)\n. ",
    "asuhan": "Re-based, removed dependence `folly`, tests in `test_resources` pass as far as I can tell (modulo `js_ua` support).\n. @Ironholds, thanks.\n. Re-based, removed dependence `folly`, tests in `test_resources` pass as far as I can tell (modulo `js_ua` support).\n. @Ironholds, thanks.\n. ",
    "rporrasluc": "Solved error. Just write www.github.com instead of raw.github.com as CN_MATCH.\n. Could you review Packagist? When I run composer update I don't get the last commit. Packagist references the commit 01b3561.\n\nI have the code <code>tobie/ua-parser\": \"dev-master</code> in composer.json.\n\n![a](https://f.cloud.github.com/assets/1927062/2446969/b6a3293c-ae8e-11e3-8412-644c2021541d.png)\n. Solved error. Just write www.github.com instead of raw.github.com as CN_MATCH.\n. Could you review Packagist? When I run composer update I don't get the last commit. Packagist references the commit 01b3561.\n\nI have the code <code>tobie/ua-parser\": \"dev-master</code> in composer.json.\n\n![a](https://f.cloud.github.com/assets/1927062/2446969/b6a3293c-ae8e-11e3-8412-644c2021541d.png)\n. ",
    "tomByrer": "How strange, the tests are posting now, sorry for the bother.\nI even refreshed in another browser to double check before...\n. How strange, the tests are posting now, sorry for the bother.\nI even refreshed in another browser to double check before...\n. ",
    "akhicks": "I'm getting a similar issue. Its relating to a signing issue with the yamlnet 3.3 assemblies.\n. I'm getting a similar issue. Its relating to a signing issue with the yamlnet 3.3 assemblies.\n. ",
    "nicholashead": "@tobie this is the error you'll get:\n\n```\nCould not load file or assembly 'YamlDotNet, Version=2.0.1.41986, Culture=neutral, PublicKeyToken=2b53052c5884d7a1' or one of its dependencies. The system cannot find the file specified.\n```\n. @tobie sorry, csharp\n. so maybe @enemaerke is person to look at this.\n\nthe whole yamldotnet dependency is kinda weird, anyway. it looks like it's only needed for the unit tests for the package. so that shouldn't be a dependency of the package, after it's built/deployed..\n. @enemaerke oops. yeah, you're right. missed that. so, i'm not sure how to fix this problem, otherwise i would have proposed a patch. is the fault with the yamldotnet package maintainers, or is there something the ua-parser package can do differently to solve the issue?\n. @tobie this is the error you'll get:\n\n```\nCould not load file or assembly 'YamlDotNet, Version=2.0.1.41986, Culture=neutral, PublicKeyToken=2b53052c5884d7a1' or one of its dependencies. The system cannot find the file specified.\n```\n. @tobie sorry, csharp\n. so maybe @enemaerke is person to look at this.\n\nthe whole yamldotnet dependency is kinda weird, anyway. it looks like it's only needed for the unit tests for the package. so that shouldn't be a dependency of the package, after it's built/deployed..\n. @enemaerke oops. yeah, you're right. missed that. so, i'm not sure how to fix this problem, otherwise i would have proposed a patch. is the fault with the yamldotnet package maintainers, or is there something the ua-parser package can do differently to solve the issue?\n. ",
    "andrvb": "Done. But I had to change language in `.travis.yml` from `node_js` to `python`.\n. Done. But I had to change language in `.travis.yml` from `node_js` to `python`.\n. ",
    "somechris": "> I changed to the release version 1.3.0.\n\nThe java part already has seen a version 1.3.0 (see 7239f0b33bdfaf5499e495c4c8c669a75aa3c365).\n\nIf you think a separate release for the java version is needed, I'd split that out to separate\ncommits, followed by a \"bump to SNAPSHOT\" commit as was done with previous releases:\n- 1.3.0 -> 7239f0b33bdfaf5499e495c4c8c669a75aa3c365\n- 1.2.2 -> 5e4a38e781b59c33d77b4f5d128bdbd0ac1ff2f4\n\nBut is this tiny change worth a version change at all?\n. I have no say here, but yes: staying on version 1.3.0-SNAPSHOT would make most sense to me.\n. Looks good to me now. Verified that tests now pass.\n\n(My inline comments are only nits anyways)\n. > According to the Git log, the version in the pom went to 1.3 and then back to 1.3-SNAPSHOT\n\nYes, and ua-parser has always put the SNAPSHOT version after the release:\n- 1.2.2\n- 1.2.2-SNAPSHOT\n- 1.3.0\n- 1.3.0-SNAPSHOT\n\nua-parsers approach may be unusual to some, but (as no release plugin etc is in place) it's\nnot a problem either. Maven can cope with that just fine.\n\nTrading the x -> x-SNAPSHOT -> (x+1) -> (x+1)-SNAPSHOT scheme for\nx-SNAPSHOT -> x -> (x+1)-SNAPSHOT -> (x+1) sounds good, but versioning is\nunrelated to issue #374 that this pull request covers.\nSo I'd put version changes in a separate pull request.\n. > So I'd put version changes in a separate pull request.\n\nI've done so in pull request #380\n. Mhmm. You're right, I missed that pull request.\nThanks for the pointer.\n. > I changed to the release version 1.3.0.\n\nThe java part already has seen a version 1.3.0 (see 7239f0b33bdfaf5499e495c4c8c669a75aa3c365).\n\nIf you think a separate release for the java version is needed, I'd split that out to separate\ncommits, followed by a \"bump to SNAPSHOT\" commit as was done with previous releases:\n- 1.3.0 -> 7239f0b33bdfaf5499e495c4c8c669a75aa3c365\n- 1.2.2 -> 5e4a38e781b59c33d77b4f5d128bdbd0ac1ff2f4\n\nBut is this tiny change worth a version change at all?\n. I have no say here, but yes: staying on version 1.3.0-SNAPSHOT would make most sense to me.\n. Looks good to me now. Verified that tests now pass.\n\n(My inline comments are only nits anyways)\n. > According to the Git log, the version in the pom went to 1.3 and then back to 1.3-SNAPSHOT\n\nYes, and ua-parser has always put the SNAPSHOT version after the release:\n- 1.2.2\n- 1.2.2-SNAPSHOT\n- 1.3.0\n- 1.3.0-SNAPSHOT\n\nua-parsers approach may be unusual to some, but (as no release plugin etc is in place) it's\nnot a problem either. Maven can cope with that just fine.\n\nTrading the x -> x-SNAPSHOT -> (x+1) -> (x+1)-SNAPSHOT scheme for\nx-SNAPSHOT -> x -> (x+1)-SNAPSHOT -> (x+1) sounds good, but versioning is\nunrelated to issue #374 that this pull request covers.\nSo I'd put version changes in a separate pull request.\n. > So I'd put version changes in a separate pull request.\n\nI've done so in pull request #380\n. Mhmm. You're right, I missed that pull request.\nThanks for the pointer.\n. ",
    "rbywater": "In terms of version I'd actually suggest it should 1.4.0-SNAPSHOT. According to the Git log, the version in the pom went to 1.3 and then back to 1.3-SNAPSHOT. There's also a tag already for java-1.3.0 so it would seem safest to bump the version up to avoid any issues where people have already picked up 1.3.0 as being \"official\".\n. Yes sorry - didn't mean to hijack the pull request! Thanks for putting in #380 - saves me jumping in to do the same.\n. In terms of version I'd actually suggest it should 1.4.0-SNAPSHOT. According to the Git log, the version in the pom went to 1.3 and then back to 1.3-SNAPSHOT. There's also a tag already for java-1.3.0 so it would seem safest to bump the version up to avoid any issues where people have already picked up 1.3.0 as being \"official\".\n. Yes sorry - didn't mean to hijack the pull request! Thanks for putting in #380 - saves me jumping in to do the same.\n. ",
    "yurigorokhov": "@commenthol are you suggesting just this:\n\n```\n- regex: 'Googlebot/\\d+.\\d+'\n  device_replacement: 'Spider'\n```\n. @commenthol are you suggesting just this:\n\n```\n- regex: 'Googlebot/\\d+.\\d+'\n  device_replacement: 'Spider'\n```\n. ",
    "MaximRouiller": "Which one do you have in mind? feedly is definitely one of them. How many are they? Do they each have their own signature? Wouldn't that apply to only one RSS feed url?\n\nJust trying to flesh out a \"story\" for this.\n. If you provide example, I can create a pull request for you. Or better, you can do a pull request and it might get incorporated.\n. I'm guessing that somebody somewhere might find it interesting.\n\nThey might not hang out in github issues but I'm sure it's interesting.\n. I think it means rebasing. So that we don't merge 25 commits but one instead.\n. Which one do you have in mind? feedly is definitely one of them. How many are they? Do they each have their own signature? Wouldn't that apply to only one RSS feed url?\n\nJust trying to flesh out a \"story\" for this.\n. If you provide example, I can create a pull request for you. Or better, you can do a pull request and it might get incorporated.\n. I'm guessing that somebody somewhere might find it interesting.\n\nThey might not hang out in github issues but I'm sure it's interesting.\n. I think it means rebasing. So that we don't merge 25 commits but one instead.\n. ",
    "rcmaniac25": "Somehow I saw the US Parser link and missed the \"Submit a Bug\" link. Thanks.\n\nEdit: posted http://code.google.com/p/browserscope/issues/detail?id=352\n. Somehow I saw the US Parser link and missed the \"Submit a Bug\" link. Thanks.\n\nEdit: posted http://code.google.com/p/browserscope/issues/detail?id=352\n. ",
    "Wyuld0": "Hi,\nI am one of numbers who encounter the same kind of issue trying to run ua-parser on a shared apache server (see for example theses comments: http://davidwalsh.name/user-agent-parser#comment-75418).\n\nSo, can you provide a composer-less version of demo.php please?\nThanks in advance.\n. Hi,\nI am one of numbers who encounter the same kind of issue trying to run ua-parser on a shared apache server (see for example theses comments: http://davidwalsh.name/user-agent-parser#comment-75418).\n\nSo, can you provide a composer-less version of demo.php please?\nThanks in advance.\n. ",
    "keshonok": "Need to test this a bit more. Close for the time being, and submit a new one later.\n. Need to test this a bit more. Close for the time being, and submit a new one later.\n. ",
    "JustinC474": "@tobie can we get this in? Causing is_mobile to return false on some Galaxy S3s.\n. @tobie can we get this in? Causing is_mobile to return false on some Galaxy S3s.\n. ",
    "glefait": "Hi coaic, I faced the same issue today, so I used your patch (and fixed a typo in escaping the $1) and submitted it here : https://github.com/tobie/ua-parser/pull/405\n. Hi coaic, I faced the same issue today, so I used your patch (and fixed a typo in escaping the $1) and submitted it here : https://github.com/tobie/ua-parser/pull/405\n. ",
    "atifaziz": "> Sorry for the long wait on this.\n\nNo problem. I can understand it must have taken time to review all the individual test cases now. :wink:\n\nI totally agree that we should have the T4 integration done for up to date test cases when building from the command line and on a build server without Visual Studio installed. I believe we should be able to make this work by [invoking the templates from MSBuild](http://www.olegsych.com/2010/04/understanding-t4-msbuild-integration/). I have the feeling, though, that doing so might require some sort of Visual Studio or SDK installation. There is [another option that requires `TextTransform.exe` only](http://blogs.clariusconsulting.net/kzu/how-to-transform-t4-templates-on-build-without-installing-a-visual-studio-sdk/) but I'm not sure we'd be allowed to redistribute that. However, [MonoDevelop's TextTemplating](https://github.com/mono/monodevelop/tree/master/main/src/addins/TextTemplating) includes a completely stand-alone and compatible [`TextTransform.exe`](https://github.com/mono/monodevelop/tree/master/main/src/addins/TextTemplating/TextTransform). Since it's open source and licensed under [MIT/X11](http://en.wikipedia.org/wiki/MIT_License), there's no redistribution issues. Point is, if you like the one test-case-per-yaml-test approach then I think this is a detail we can work out.\n\nOne downside to generating test cases on each build is slowing down build times. Ideally, this would be only done in the batch build or in another build configuration.\n\n> Regenerating the testcases would automatically change the generated cs file, since it includes the timestamp, so even if no new testcases are present, you'd have pending changes.\n\nThat's true but that's just an artifact of the initial setup. The idea of the timestamp was an indicator of whether the generated code is out of date or not. However if we can automate the generation as part of the build step then the timestamp could be removed.\n\n> while being more simple on the surface does present some maintainability issue that I'd rather not take on.\n\nCare to expand on those maintainability issues? Is it related to having up to date test cases from the YAML file or something else on your mind?\n\nI'll admit that there is some added infrastructural complexity here but having individual test cases would have helped a lot when I was refactoring the code. Finding the few failing tests was painful and since conditional breakpoints are very slow, I had to resort to modifying test code to step through the code only when the failing test was being exercised (and revert before committing).\n. > Sorry for the long wait on this.\n\nNo problem. I can understand it must have taken time to review all the individual test cases now. :wink:\n\nI totally agree that we should have the T4 integration done for up to date test cases when building from the command line and on a build server without Visual Studio installed. I believe we should be able to make this work by [invoking the templates from MSBuild](http://www.olegsych.com/2010/04/understanding-t4-msbuild-integration/). I have the feeling, though, that doing so might require some sort of Visual Studio or SDK installation. There is [another option that requires `TextTransform.exe` only](http://blogs.clariusconsulting.net/kzu/how-to-transform-t4-templates-on-build-without-installing-a-visual-studio-sdk/) but I'm not sure we'd be allowed to redistribute that. However, [MonoDevelop's TextTemplating](https://github.com/mono/monodevelop/tree/master/main/src/addins/TextTemplating) includes a completely stand-alone and compatible [`TextTransform.exe`](https://github.com/mono/monodevelop/tree/master/main/src/addins/TextTemplating/TextTransform). Since it's open source and licensed under [MIT/X11](http://en.wikipedia.org/wiki/MIT_License), there's no redistribution issues. Point is, if you like the one test-case-per-yaml-test approach then I think this is a detail we can work out.\n\nOne downside to generating test cases on each build is slowing down build times. Ideally, this would be only done in the batch build or in another build configuration.\n\n> Regenerating the testcases would automatically change the generated cs file, since it includes the timestamp, so even if no new testcases are present, you'd have pending changes.\n\nThat's true but that's just an artifact of the initial setup. The idea of the timestamp was an indicator of whether the generated code is out of date or not. However if we can automate the generation as part of the build step then the timestamp could be removed.\n\n> while being more simple on the surface does present some maintainability issue that I'd rather not take on.\n\nCare to expand on those maintainability issues? Is it related to having up to date test cases from the YAML file or something else on your mind?\n\nI'll admit that there is some added infrastructural complexity here but having individual test cases would have helped a lot when I was refactoring the code. Finding the few failing tests was painful and since conditional breakpoints are very slow, I had to resort to modifying test code to step through the code only when the failing test was being exercised (and revert before committing).\n. ",
    "abdelouahabb": "microsoft is doing it by the hard way:\n\nMozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.3; Win64, x64; Trident/7.0; Touch; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko\nMozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; Tablet PC 2.0)\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.3; Trident/7.0; Touch)\nMozilla/5.0 (Windows Phone 8.1; ARM; Trident/7.0; Touch; rv:11;IEMobile/11.0; NOKIA; Lumia 928) like Gecko\n\nand so on....\n\n-_-\n. microsoft is doing it by the hard way:\n\nMozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.3; Win64, x64; Trident/7.0; Touch; rv:11.0) like Gecko\nMozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko\nMozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; Tablet PC 2.0)\nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.3; Trident/7.0; Touch)\nMozilla/5.0 (Windows Phone 8.1; ARM; Trident/7.0; Touch; rv:11;IEMobile/11.0; NOKIA; Lumia 928) like Gecko\n\nand so on....\n\n-_-\n. ",
    "emilhem": "Hello,\n\nMy assumption is that you @shunanya is using the ua-parser from npm, am I correct?\n\nThe ua-parser in npm isn't up to date currently with the changes in the file `regexes.yaml`\n\nI have contacted @tobie about this. Until he has updated the npm package you can replace the `regexes.yaml` in `node_modules/ua-parser/` with the version here on GitHub (Download: https://raw.githubusercontent.com/tobie/ua-parser/master/regexes.yaml)\n. Related: #323 \n. Hello,\n\nMy assumption is that you @shunanya is using the ua-parser from npm, am I correct?\n\nThe ua-parser in npm isn't up to date currently with the changes in the file `regexes.yaml`\n\nI have contacted @tobie about this. Until he has updated the npm package you can replace the `regexes.yaml` in `node_modules/ua-parser/` with the version here on GitHub (Download: https://raw.githubusercontent.com/tobie/ua-parser/master/regexes.yaml)\n. Related: #323 \n. ",
    "shunanya": "Thank you Emilhem,\n\nI'm already understood this fact and taken <code>regexes.yaml</code> directly. \nVery bad idea to change something important in the package and don't change version number in the <code>package.json</code> file.\n. Thank you Emilhem,\n\nI'm already understood this fact and taken <code>regexes.yaml</code> directly. \nVery bad idea to change something important in the package and don't change version number in the <code>package.json</code> file.\n. ",
    "public": "I opened a PR with the new classifiers. It's #499 \n. Yep.\n. https://github.com/ua-parser/uap-python/pull/8\n. I opened a PR with the new classifiers. It's #499 \n. Yep.\n. https://github.com/ua-parser/uap-python/pull/8\n. ",
    "clearminds": "Hello,\n\nThus existed before but was removed due to the aspect of the library is to\nparse the user agent nothing else.\n\nBest regards\nDaniel\nOn 23 Jun 2014 19:39, \"Ignas Bernotas\" notifications@github.com wrote:\n\n> The current project I'm working on requires that I figure out whether the\n> devices is mobile/tablet/desktop/spider(bot).\n> \n> What would be the best way to incorporate this into the project? Maybe I'm\n> missing it and it's already been implemented somewhere (couldn't find it\n> though).\n> \n> I know there are other libraries that do that, however since performance\n> is essential, I wouldn't want to parse the UA string twice using multiple\n> libraries.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/413.\n. Hello,\n\nThus existed before but was removed due to the aspect of the library is to\nparse the user agent nothing else.\n\nBest regards\nDaniel\nOn 23 Jun 2014 19:39, \"Ignas Bernotas\" notifications@github.com wrote:\n\n> The current project I'm working on requires that I figure out whether the\n> devices is mobile/tablet/desktop/spider(bot).\n> \n> What would be the best way to incorporate this into the project? Maybe I'm\n> missing it and it's already been implemented somewhere (couldn't find it\n> though).\n> \n> I know there are other libraries that do that, however since performance\n> is essential, I wouldn't want to parse the UA string twice using multiple\n> libraries.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/tobie/ua-parser/issues/413.\n. ",
    "emidln": "#434 fixes this\n. #434 fixes this\n. #434 fixes this\n. #434 fixes this\n. ",
    "tcdaly": "Thanks for the info.\n. I've been developing a Javscript web application and wondered if the whole parsing operation could be carried out in the client browser, leaving the server out of it all together.  Perhaps that would not be possible for all clients though?\n. Thanks for your feedback and comments!\n. Thanks for the info.\n. I've been developing a Javscript web application and wondered if the whole parsing operation could be carried out in the client browser, leaving the server out of it all together.  Perhaps that would not be possible for all clients though?\n. Thanks for your feedback and comments!\n. ",
    "BradRuderman": "I think this is related to Issue #375 \n. I think this is related to Issue #375 \n. ",
    "angelajiang": "@Ironholds It's not in the original dataset; I created the field. Thought it might come in handy for others\n. @Ironholds It's not in the original dataset; I created the field. Thought it might come in handy for others\n. ",
    "gquinones": "You're welcome! There's more to come :)  I parse 500M events per day using this great tool.\n. You're welcome! There's more to come :)  I parse 500M events per day using this great tool.\n. ",
    "parcolee": "Becuase I've noticed that they are different in file size.\n. So are you meaning they are exactly completely the same contents and updated at the same time?\n. when broswer HTML5 audio player (<audio /> tag) load a forced download php file (output content-type audio/mpeg or audio/ogg), I caught from there.\nif just a simple text hyperlink (<a /> tag) to the same forced download php url, it caught:\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\n. I meant for PHP port for sure, never mean Perl.\n\nIn PHP UA-Parser,\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\nwould become:\n\nmajor = 28\n minor = 0\n patch = 1500\n family = Chrome Mobile\n\n major = 4\n minor = 4\n patch = 2\n patchMinor = \n family = Android\n\n Device Family = SAMSUNG SM-N9005\n To Full String = Chrome Mobile 28.0.1500/Android 4.4.2\n\nand for\nSamsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\nit would become:\n\nmajor = 4\n minor = 4\n patch = 2\n family = Android\n\n major = 4\n minor = 4\n patch = 2\n patchMinor = \n family = Android\n\n Device Family = Other\n To Full String = Android 4.4.2/Android 4.4.2\n. the chrome one? linked by just a simple text link \"a\" tag with href attribute\n. Becuase I've noticed that they are different in file size.\n. So are you meaning they are exactly completely the same contents and updated at the same time?\n. when broswer HTML5 audio player (<audio /> tag) load a forced download php file (output content-type audio/mpeg or audio/ogg), I caught from there.\nif just a simple text hyperlink (<a /> tag) to the same forced download php url, it caught:\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\n. I meant for PHP port for sure, never mean Perl.\n\nIn PHP UA-Parser,\nMozilla/5.0 (Linux; Android 4.4.2; zh-hk; SAMSUNG SM-N9005 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36\nwould become:\n\nmajor = 28\n minor = 0\n patch = 1500\n family = Chrome Mobile\n\n major = 4\n minor = 4\n patch = 2\n patchMinor = \n family = Android\n\n Device Family = SAMSUNG SM-N9005\n To Full String = Chrome Mobile 28.0.1500/Android 4.4.2\n\nand for\nSamsung SM-N9005 stagefright/1.2 (Linux;Android 4.4.2)\nit would become:\n\nmajor = 4\n minor = 4\n patch = 2\n family = Android\n\n major = 4\n minor = 4\n patch = 2\n patchMinor = \n family = Android\n\n Device Family = Other\n To Full String = Android 4.4.2/Android 4.4.2\n. the chrome one? linked by just a simple text link \"a\" tag with href attribute\n. ",
    "calvintwr": "I see thanks. Would it be helpful to change the documentation? I think straight from the documentation people should be able to make the code work without guessing what kinds of modification to make.\n\nUnless there are reasons unknown to me why the documentation recommends navigator.userAgent?\n\n> On 4 Sep, 2014, at 0:30, commenthol notifications@github.com wrote:\n> \n> nodejs is not a browser. The navigator object is not available.\n> You'll need to pass on req.headers['user-agent'].\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Thanks for that.\n\nWhen returning the JSON data using this:\n\n```\nvar uap = require('ua-parser').parse(req.headers['user-agent']);\nres.json({ data: uap.ua});\n```\n\nAll I get is this:\n\n```\n{\"data\":{\"family\":\"Chrome\",\"major\":\"37\",\"minor\":\"0\",\"patch\":\"2062\"}}\n```\n\nI'm using Nodejs + Express. Seems like the req.headers object doesn't contain the full set of information. Anyone knows why?\n. I see thanks. Would it be helpful to change the documentation? I think straight from the documentation people should be able to make the code work without guessing what kinds of modification to make.\n\nUnless there are reasons unknown to me why the documentation recommends navigator.userAgent?\n\n> On 4 Sep, 2014, at 0:30, commenthol notifications@github.com wrote:\n> \n> nodejs is not a browser. The navigator object is not available.\n> You'll need to pass on req.headers['user-agent'].\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Thanks for that.\n\nWhen returning the JSON data using this:\n\n```\nvar uap = require('ua-parser').parse(req.headers['user-agent']);\nres.json({ data: uap.ua});\n```\n\nAll I get is this:\n\n```\n{\"data\":{\"family\":\"Chrome\",\"major\":\"37\",\"minor\":\"0\",\"patch\":\"2062\"}}\n```\n\nI'm using Nodejs + Express. Seems like the req.headers object doesn't contain the full set of information. Anyone knows why?\n. ",
    "cxmcc": "@Ironholds Done.\n. What we know is that:\nit most likely only visit root pages.\nit does not take a look at robots.txt\n. Got some questions here.\n\nThe last big regex is catching \"bot\", \"msnbot\", \"bingbot\" etc.\nBut does \"bot\" covers whoever contains it as a substring? Correct me if wrong.\nIf so can we simplify that so the regex is smaller?\n. @Ironholds Done.\n. What we know is that:\nit most likely only visit root pages.\nit does not take a look at robots.txt\n. Got some questions here.\n\nThe last big regex is catching \"bot\", \"msnbot\", \"bingbot\" etc.\nBut does \"bot\" covers whoever contains it as a substring? Correct me if wrong.\nIf so can we simplify that so the regex is smaller?\n. ",
    "cjnoyes": "Thanks. I figured out to run the tests.\n\nOn Wed, September 17, 2014 7:37 am, Mamod Mehyar wrote:\n\n> Not sure, travis doesn't show a good indication, I tested against perl\n> and here's what I got\n> \n> # got: 'Samsung C3053/1.0 '\n> \n> # expected: 'Samsung C3053'\n> \n> The failing test appears to come from\n> [test_device.yaml](https://github.com/cjnoyes/ua-parser/blob/master/test_\n> resources/test_device.yaml)\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/445#issuecomment-55881607\n\n## \n\nChristopher J. Noyes\n. I figured it out later. I was doing some more changes around this work and\nwill be resubmitting it from my buines account.\n\nOn Wed, September 17, 2014 5:59 pm, Oliver Keyes wrote:\n\n> Yeah; it looks like [this\n> test](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/tes\n> t_device.yaml#L246-L247) is causing the problem. Your regex is including\n> the /1.0, whereas the existing device test isn't expecting it. Hrn. I\n> guess the test was designed for [this existing\n> regex](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L1227-\n> L1230)?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/445#issuecomment-55966883\n\n## \n\nChristopher J. Noyes\n. will be resubmittingb from other account.\n. Thanks. I figured out to run the tests.\n\nOn Wed, September 17, 2014 7:37 am, Mamod Mehyar wrote:\n\n> Not sure, travis doesn't show a good indication, I tested against perl\n> and here's what I got\n> \n> # got: 'Samsung C3053/1.0 '\n> \n> # expected: 'Samsung C3053'\n> \n> The failing test appears to come from\n> [test_device.yaml](https://github.com/cjnoyes/ua-parser/blob/master/test_\n> resources/test_device.yaml)\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/445#issuecomment-55881607\n\n## \n\nChristopher J. Noyes\n. I figured it out later. I was doing some more changes around this work and\nwill be resubmitting it from my buines account.\n\nOn Wed, September 17, 2014 5:59 pm, Oliver Keyes wrote:\n\n> Yeah; it looks like [this\n> test](https://github.com/cjnoyes/ua-parser/blob/master/test_resources/tes\n> t_device.yaml#L246-L247) is causing the problem. Your regex is including\n> the /1.0, whereas the existing device test isn't expecting it. Hrn. I\n> guess the test was designed for [this existing\n> regex](https://github.com/tobie/ua-parser/blob/master/regexes.yaml#L1227-\n> L1230)?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tobie/ua-parser/pull/445#issuecomment-55966883\n\n## \n\nChristopher J. Noyes\n. will be resubmittingb from other account.\n. ",
    "robvdl": "I think I found the problem, I was using a stable PIP release and this OS was not in the latest PIP release yet by the looks of it.\n\nTrunk should be fine.\n. I think I found the problem, I was using a stable PIP release and this OS was not in the latest PIP release yet by the looks of it.\n\nTrunk should be fine.\n. ",
    "Dav8152": "Still no solution.\nI have some older version of UAParser(ua-parser-php v1.4.5) the line which gets error contain this:\nif (preg_match(\"/\".str_replace(\"/\",\"\\/\",$deviceRegex['regex']).\"/i\",self::$ua,$matches)) {...}\nAnd the bad regex from regexes.yaml are probably these 2:\n  line 1305: - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n  line 1306: - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\nI'm not skilled much in regexes, but I think the slashes in it cause the problem.\nThanks for advices.\n. I don\u0165 have Linux, but differences are:\n+\n    920 + - regex: '(SCH-[A-Za-z0-9_-]+)'\n    921 + device_replacement: 'Samsung $1'\n    922 +\n    923 + - regex: '(SGH-[A-Za-z0-9_-]+)'\n    924 + device_replacement: 'Samsung $1'\n    925 +\n    926 + - regex: '(GT-[A-Za-z0-9_-]+)'\n    927 + device_replacement: 'Samsung $1'\n    928 +\n    929 + - regex: '(SM-[A-Za-z0-9_-]+)'\n    930 + device_replacement: 'Samsung $1'\n    931 +\n    932 + - regex: '(SPH-[A-Za-z0-9_-]+)'\n    933 + device_replacement: 'Samsung $1'\n    934 +\n    935 + - regex: 'SAMSUNG-([A-Za-z0-9_-]+)'\n    936 + device_replacement: 'Samsung $1'\n919 937 \n    938 + - regex: 'SAMSUNG ([A-Za-z0-9_-]+)'\n    939 + device_replacement: 'Samsung $1' \n- #########\n  964     - # Android General Device Matching (far from perfect)\n  965     - #########\n  966     - - regex: 'Android[- ][\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; WOWMobile (.+) Build'\n  967     - - regex: 'Android[- ][\\d]+.[\\d]+-update1; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  968     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  969     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+;[A-Za-z]{2}-[A-Za-z]{0,2};(.+) Build'\n  970     - - regex: 'Android[- ][\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  971     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; (.+) Build'\n  972     - - regex: 'Android[- ][\\d]+.[\\d]+; (.+) Build'\n- - regex: 'ALCATEL_ONE_TOUCH_([A-Za-z0-9]+)'\n    1096    + device_replacement: 'Alcatel ONE TOUCH $1'\n    1097    + - regex: 'ALCATEL (ONE TOUCH [A-Za-z0-9]+)'\n    1098    + device_replacement: 'Alcatel $1'\n    1099    + - regex: 'ALCATEL (one touch [A-Za-z0-9]+)'\n    1100    + device_replacement: 'Alcatel $1'\n    1101    + - regex: 'ALCATEL ([A-Za-z0-9]+)'\n    1102    + device_replacement: 'Alcatel $1'\n- device_replacement: 'Motorola $1'\n  1221    + - regex: ' (DROID RAZR [A-Za-z0-9 ]+) '\n  1222    + device_replacement: 'Motorola $1'\n  1223    + - regex: ' (DROID[2 ][A-Za-z0-9 ]+) '\n  1224    + device_replacement: 'Motorola $1'\n  1225    + - regex: ' (Droid2| )'\n  1226    + device_replacement: 'Motorola $1'\n  1227    + - regex: ' (DROID2| )'\n\n+\n    1260    + ##########\n    1261    + # ZTE\n    1262    + ##########\n    1263    + - regex: 'ZTE-([A-Za-z0-9-]+)'\n    1264    + device_replacement: 'ZTE $1'\n    1265    + - regex: 'ZTE ([A-Za-z0-9-]+)'\n    1266    + device_replacement: 'ZTE $1'\n    1267    + - regex: 'ZTE_([A-Za-z0-9-]+)'\n    1268    + device_replacement: 'ZTE $1'\n- ##########\n  1285    + # SONY #\n  1286    + ##########\n  1287    + - regex: 'Sony([^ ]+) '\n  1288    + device_replacement: 'Sony $1'\n  1289    + \n- #########\n  1296    + # Android General Device Matching (far from perfect)\n  1297    + #########\n  1298    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9 _-]+) '\n  1299    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9 _-]+) '\n  1300    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; WOWMobile ([A-Za-z0-9 _-]+) '\n  1301    + - regex: 'Android[- ][\\d]+.[\\d]+-update1; [^;]+; ([A-Za-z0-9 _-]+) '\n  1302    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+;[^;]+;([A-Za-z0-9 _-]+) '\n  1303    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; ([A-Za-z0-9 _-]+) '\n  1304    + - regex: 'Android[- ][\\d]+.[\\d]+; ([A-Za-z0-9 _-]+) '\n  1305    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n  1306    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n\nBut as I write I get 2 warning from these 2 lines:\n'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n. Isn't the problem that in current UAParser in AbstractParser.php in method tryMatch is:\n if (preg_match('@' . $regex['regex'] . '@', $userAgent, $matches))\nso the delimiters are \"@\" and in my version UAParser(ua-parser-php v1.4.5) is:\nif (preg_match(\"/\".str_replace(\"/\",\"\\/\",$deviceRegex['regex']).\"/i\",self::$ua,$matches)) \nso the delimiters are \"/\"\nand the regexes are not \"compatible\"?\nMy php version is 5.3.10.\n. I wrote:\nBut as I write I get 2 warning from these 2 lines:\n'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n. Still no solution.\nI have some older version of UAParser(ua-parser-php v1.4.5) the line which gets error contain this:\nif (preg_match(\"/\".str_replace(\"/\",\"\\/\",$deviceRegex['regex']).\"/i\",self::$ua,$matches)) {...}\nAnd the bad regex from regexes.yaml are probably these 2:\n  line 1305: - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n  line 1306: - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\nI'm not skilled much in regexes, but I think the slashes in it cause the problem.\nThanks for advices.\n. I don\u0165 have Linux, but differences are:\n+\n    920 + - regex: '(SCH-[A-Za-z0-9_-]+)'\n    921 + device_replacement: 'Samsung $1'\n    922 +\n    923 + - regex: '(SGH-[A-Za-z0-9_-]+)'\n    924 + device_replacement: 'Samsung $1'\n    925 +\n    926 + - regex: '(GT-[A-Za-z0-9_-]+)'\n    927 + device_replacement: 'Samsung $1'\n    928 +\n    929 + - regex: '(SM-[A-Za-z0-9_-]+)'\n    930 + device_replacement: 'Samsung $1'\n    931 +\n    932 + - regex: '(SPH-[A-Za-z0-9_-]+)'\n    933 + device_replacement: 'Samsung $1'\n    934 +\n    935 + - regex: 'SAMSUNG-([A-Za-z0-9_-]+)'\n    936 + device_replacement: 'Samsung $1'\n919 937 \n    938 + - regex: 'SAMSUNG ([A-Za-z0-9_-]+)'\n    939 + device_replacement: 'Samsung $1' \n- #########\n  964     - # Android General Device Matching (far from perfect)\n  965     - #########\n  966     - - regex: 'Android[- ][\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; WOWMobile (.+) Build'\n  967     - - regex: 'Android[- ][\\d]+.[\\d]+-update1; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  968     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  969     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+;[A-Za-z]{2}-[A-Za-z]{0,2};(.+) Build'\n  970     - - regex: 'Android[- ][\\d]+.[\\d]+; [A-Za-z]{2}-[A-Za-z]{0,2}; (.+) Build'\n  971     - - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; (.+) Build'\n  972     - - regex: 'Android[- ][\\d]+.[\\d]+; (.+) Build'\n- - regex: 'ALCATEL_ONE_TOUCH_([A-Za-z0-9]+)'\n    1096    + device_replacement: 'Alcatel ONE TOUCH $1'\n    1097    + - regex: 'ALCATEL (ONE TOUCH [A-Za-z0-9]+)'\n    1098    + device_replacement: 'Alcatel $1'\n    1099    + - regex: 'ALCATEL (one touch [A-Za-z0-9]+)'\n    1100    + device_replacement: 'Alcatel $1'\n    1101    + - regex: 'ALCATEL ([A-Za-z0-9]+)'\n    1102    + device_replacement: 'Alcatel $1'\n- device_replacement: 'Motorola $1'\n  1221    + - regex: ' (DROID RAZR [A-Za-z0-9 ]+) '\n  1222    + device_replacement: 'Motorola $1'\n  1223    + - regex: ' (DROID[2 ][A-Za-z0-9 ]+) '\n  1224    + device_replacement: 'Motorola $1'\n  1225    + - regex: ' (Droid2| )'\n  1226    + device_replacement: 'Motorola $1'\n  1227    + - regex: ' (DROID2| )'\n\n+\n    1260    + ##########\n    1261    + # ZTE\n    1262    + ##########\n    1263    + - regex: 'ZTE-([A-Za-z0-9-]+)'\n    1264    + device_replacement: 'ZTE $1'\n    1265    + - regex: 'ZTE ([A-Za-z0-9-]+)'\n    1266    + device_replacement: 'ZTE $1'\n    1267    + - regex: 'ZTE_([A-Za-z0-9-]+)'\n    1268    + device_replacement: 'ZTE $1'\n- ##########\n  1285    + # SONY #\n  1286    + ##########\n  1287    + - regex: 'Sony([^ ]+) '\n  1288    + device_replacement: 'Sony $1'\n  1289    + \n- #########\n  1296    + # Android General Device Matching (far from perfect)\n  1297    + #########\n  1298    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9 _-]+) '\n  1299    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9 _-]+) '\n  1300    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; WOWMobile ([A-Za-z0-9 _-]+) '\n  1301    + - regex: 'Android[- ][\\d]+.[\\d]+-update1; [^;]+; ([A-Za-z0-9 _-]+) '\n  1302    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+;[^;]+;([A-Za-z0-9 _-]+) '\n  1303    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; ([A-Za-z0-9 _-]+) '\n  1304    + - regex: 'Android[- ][\\d]+.[\\d]+; ([A-Za-z0-9 _-]+) '\n  1305    + - regex: 'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n  1306    + - regex: 'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/_-]+) '\n\nBut as I write I get 2 warning from these 2 lines:\n'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n. Isn't the problem that in current UAParser in AbstractParser.php in method tryMatch is:\n if (preg_match('@' . $regex['regex'] . '@', $userAgent, $matches))\nso the delimiters are \"@\" and in my version UAParser(ua-parser-php v1.4.5) is:\nif (preg_match(\"/\".str_replace(\"/\",\"\\/\",$deviceRegex['regex']).\"/i\",self::$ua,$matches)) \nso the delimiters are \"/\"\nand the regexes are not \"compatible\"?\nMy php version is 5.3.10.\n. I wrote:\nBut as I write I get 2 warning from these 2 lines:\n'Android[- ][\\d]+.[\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n'Android[- ][\\d]+.[\\d]+; [^;]+; ([A-Za-z0-9.\\/-]+) '\n. ",
    "docksteaderluke": "I seem to be running into this issue as well. Could it be linked to [this commit](https://github.com/tobie/ua-parser/commit/ec8f0529cabcced52f6dc9f824d19ce6d2403c06)?\n. I seem to be running into this issue as well. Could it be linked to [this commit](https://github.com/tobie/ua-parser/commit/ec8f0529cabcced52f6dc9f824d19ce6d2403c06)?\n. ",
    "Leikam": "Same problem, device send a proper UA, but 8.1 emulator \".. 10_10 like Mac OS\".\n. Same problem, device send a proper UA, but 8.1 emulator \".. 10_10 like Mac OS\".\n. ",
    "stevesouders": "Webviews are (notoriously) worse than their native browser counterpart. For example, in iOS 7 you get \"mobile safari\" for both a webview and mobile safari UA, but the webview does not have Nitro, IndexedDb, etc. So I'd like to separate that out in my metrics. It's also interesting to know how many people are visiting my website from a webview (Chrome for iOS, Facebook, Twitter) vs the mobile browser. \n\nSo it's not about whether FB can change the webview. Instead, it's about distinguishing webview from mobile browser traffic, and potentially slicing the webview traffic further to see the sources (FB, Chrome for iOS, Twitter, etc.). \n\nDoes that help pinpoint where to add the info?\n. Webviews are (notoriously) worse than their native browser counterpart. For example, in iOS 7 you get \"mobile safari\" for both a webview and mobile safari UA, but the webview does not have Nitro, IndexedDb, etc. So I'd like to separate that out in my metrics. It's also interesting to know how many people are visiting my website from a webview (Chrome for iOS, Facebook, Twitter) vs the mobile browser. \n\nSo it's not about whether FB can change the webview. Instead, it's about distinguishing webview from mobile browser traffic, and potentially slicing the webview traffic further to see the sources (FB, Chrome for iOS, Twitter, etc.). \n\nDoes that help pinpoint where to add the info?\n. ",
    "broggeri": "Hello, is someone working on this ? I might try to take a stab at it.\n. Hello, is someone working on this ? I might try to take a stab at it.\n. ",
    "floydwch": "To reproduce the problem, using `SunOS` as the user agent string.\n. @Ironholds I tested it on Python 3.4 but it's passed on Python 2.7.\n. @Ironholds \n\nFollowing code works on Python 2.7\n\n``` Python\nIn [2]: user_agent_parser.Parse('SunOS')\nOut[2]:\n{'device': {'family': 'Other'},\n 'os': {'family': 'Solaris',\n  'major': None,\n  'minor': None,\n  'patch': None,\n  'patch_minor': None},\n 'string': 'SunOS',\n 'user_agent': {'family': 'Other',\n  'major': None,\n  'minor': None,\n  'patch': None}}\n```\n\nSame code crashed on Python 3.4\n\n``` Python\nIn [2]: user_agent_parser.Parse('SunOS')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-*> in <module>()\n----> 1 user_agent_parser.Parse('SunOS')\n\n/ua-parser/py/ua_parser/user_agent_parser.py in Parse(user_agent_string, **jsParseBits)\n    185     return {\n    186         'user_agent': ParseUserAgent(user_agent_string, **jsParseBits),\n--> 187         'os': ParseOS(user_agent_string, **jsParseBits),\n    188         'device': ParseDevice(user_agent_string, **jsParseBits),\n    189         'string': user_agent_string\n\n/ua-parser/py/ua_parser/user_agent_parser.py in ParseOS(user_agent_string, **jsParseBits)\n    243     \"\"\"\n    244     for osParser in OS_PARSERS:\n--> 245         os, os_v1, os_v2, os_v3, os_v4 = osParser.Parse(user_agent_string)\n    246         if os:\n    247             break\n\n/ua-parser/py/ua_parser/user_agent_parser.py in Parse(self, user_agent_string)\n    123             if self.os_v1_replacement:\n    124                 os_v1 = self.os_v1_replacement\n--> 125             elif match.lastindex >= 2:\n    126                 os_v1 = match.group(2)\n    127\n\nTypeError: unorderable types: NoneType() >= int()\n```\n. To reproduce the problem, using `SunOS` as the user agent string.\n. @Ironholds I tested it on Python 3.4 but it's passed on Python 2.7.\n. @Ironholds \n\nFollowing code works on Python 2.7\n\n``` Python\nIn [2]: user_agent_parser.Parse('SunOS')\nOut[2]:\n{'device': {'family': 'Other'},\n 'os': {'family': 'Solaris',\n  'major': None,\n  'minor': None,\n  'patch': None,\n  'patch_minor': None},\n 'string': 'SunOS',\n 'user_agent': {'family': 'Other',\n  'major': None,\n  'minor': None,\n  'patch': None}}\n```\n\nSame code crashed on Python 3.4\n\n``` Python\nIn [2]: user_agent_parser.Parse('SunOS')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-*> in <module>()\n----> 1 user_agent_parser.Parse('SunOS')\n\n/ua-parser/py/ua_parser/user_agent_parser.py in Parse(user_agent_string, **jsParseBits)\n    185     return {\n    186         'user_agent': ParseUserAgent(user_agent_string, **jsParseBits),\n--> 187         'os': ParseOS(user_agent_string, **jsParseBits),\n    188         'device': ParseDevice(user_agent_string, **jsParseBits),\n    189         'string': user_agent_string\n\n/ua-parser/py/ua_parser/user_agent_parser.py in ParseOS(user_agent_string, **jsParseBits)\n    243     \"\"\"\n    244     for osParser in OS_PARSERS:\n--> 245         os, os_v1, os_v2, os_v3, os_v4 = osParser.Parse(user_agent_string)\n    246         if os:\n    247             break\n\n/ua-parser/py/ua_parser/user_agent_parser.py in Parse(self, user_agent_string)\n    123             if self.os_v1_replacement:\n    124                 os_v1 = self.os_v1_replacement\n--> 125             elif match.lastindex >= 2:\n    126                 os_v1 = match.group(2)\n    127\n\nTypeError: unorderable types: NoneType() >= int()\n```\n. ",
    "tpimh": "This is resolved, should now be closed.\n. This is resolved, should now be closed.\n. ",
    "Webictbyleo": "This is already resolved. This is already resolved. ",
    "tamarzil": "Thanks!. Thanks!\n. Thanks!. Thanks!\n. ",
    "pongacm": "I'm analyst so I can't prepare pull request. Is any chance to improve UA Parser based on my description by somone with you?\n. I'm analyst so I can't prepare pull request. Is any chance to improve UA Parser based on my description by somone with you?\n. ",
    "Mte90": "`Mozilla/5.0 (X11; Linux x86_64; rv:35.0) Gecko/20100101 Firefox/35.0 Iceweasel/35.0a2`\n:-)\n. Is the equivalent of Firefox, is only a change of the name for the debian users.\n. Sorry for the delay, I've open this ticket after read that http://cdn.polyfill.io/ use this ua database.\nIceweasel and Firefox are the same, the only difference that is debian can add some patch for security and compatibility in his system and this action not allows to use the official logo and name.\nGecko is the same, XUL is the same etc so add the name in this list allows to the user that use the official release of firefox in debian to have no problem of detection if someone use this list.\n. `Mozilla/5.0 (X11; Linux x86_64; rv:35.0) Gecko/20100101 Firefox/35.0 Iceweasel/35.0a2`\n:-)\n. Is the equivalent of Firefox, is only a change of the name for the debian users.\n. Sorry for the delay, I've open this ticket after read that http://cdn.polyfill.io/ use this ua database.\nIceweasel and Firefox are the same, the only difference that is debian can add some patch for security and compatibility in his system and this action not allows to use the official logo and name.\nGecko is the same, XUL is the same etc so add the name in this list allows to the user that use the official release of firefox in debian to have no problem of detection if someone use this list.\n. ",
    "jogjayr": "Fair enough :-). Like I said, I'm no expert.\n\nIs it OK to just JAR it and post it to Maven Central then? The package isn't named org.uaparser.\n. I didn't notice that uap-java had been split out into its own repo. Should I close this issue, recreate it there and also email the mailing list?\n. Fair enough :-). Like I said, I'm no expert.\n\nIs it OK to just JAR it and post it to Maven Central then? The package isn't named org.uaparser.\n. I didn't notice that uap-java had been split out into its own repo. Should I close this issue, recreate it there and also email the mailing list?\n. ",
    "vladikoff": "Can anyone review this? Is this the reason ua-parser cannot detect Windows 10 right now?\n. Thanks @commenthol ! :gift: \n. Can anyone review this? Is this the reason ua-parser cannot detect Windows 10 right now?\n. Thanks @commenthol ! :gift: \n. ",
    "r4fek": "https://github.com/tobie/ua-parser/pull/490\n. @patrickkettner yes, of course.\n. Done here: https://github.com/ua-parser/uap-core/pull/19\n. https://github.com/tobie/ua-parser/pull/490\n. @patrickkettner yes, of course.\n. Done here: https://github.com/ua-parser/uap-core/pull/19\n. ",
    "patrickkettner": "@r4fek belive this can be closed as a result of #490 - no?\n. @r4fek belive this can be closed as a result of #490 - no?\n. ",
    "Swaagie": "any updates on this? :) almost forgot about it myself\n. Closing this actually, since I also just noticed the project moved and the bot is added to https://github.com/ua-parser/uap-core/blob/master/regexes.yaml#L33. The project docs also state an y contributions should be made to that project.\n. any updates on this? :) almost forgot about it myself\n. Closing this actually, since I also just noticed the project moved and the bot is added to https://github.com/ua-parser/uap-core/blob/master/regexes.yaml#L33. The project docs also state an y contributions should be made to that project.\n. ",
    "client9": "LGMT, can this get merged in?\n\nthanks\n. LGMT, can this get merged in?\n\nthanks\n. ",
    "itismewxg": "Ok, let me try, anyway, is it possible move the latest version?\n. Thanks for the clarification, one question more, seems you made ua_parser.cpp and UaParser.cpp, any difference?\n. hahaha, I read it, confused and use c++11 compiled, remove some file, recompile and doing test, hahaha\n\nbtw, I think in your test, you do not need to construct ua_parser each time, and if you need to test the performance, we shall print out the construction of the ua_parser time and the analyzing on one single line time separately, hiahia\n. Ok, let me try, anyway, is it possible move the latest version?\n. Thanks for the clarification, one question more, seems you made ua_parser.cpp and UaParser.cpp, any difference?\n. hahaha, I read it, confused and use c++11 compiled, remove some file, recompile and doing test, hahaha\n\nbtw, I think in your test, you do not need to construct ua_parser each time, and if you need to test the performance, we shall print out the construction of the ua_parser time and the analyzing on one single line time separately, hiahia\n. ",
    "tylerbutler": "Ahhh, yes, I didn't realize the YAML had been split out and was now maintained separately. How does the main repository get the updated YAML? A submodule? Manual porting?\n. Ahhh, yes, I didn't realize the YAML had been split out and was now maintained separately. How does the main repository get the updated YAML? A submodule? Manual porting?\n. ",
    "mamoorkhan": "It should be saying as desktop or pc  or mac, something like that, which give a more clearer image, as in other could be some older era phones also\n. it can just simply point out that its a PC, simple\n. with the OS classified into device classes\n. can you point me in a direction if I want to know the device class too?\n. best of luck with that\n. It should be saying as desktop or pc  or mac, something like that, which give a more clearer image, as in other could be some older era phones also\n. it can just simply point out that its a PC, simple\n. with the OS classified into device classes\n. can you point me in a direction if I want to know the device class too?\n. best of luck with that\n. ",
    "maxbaldin": "Hmm. Looks like the problem is a bit deeper, that I thought.\nI have a lot of logs, that I need to analyze, this user agents has reference to Mac os and at first I thought, that is should be mac.\nAfter some google, I found this issue https://github.com/tobie/ua-parser/issues/127 and don't know what to think\nI will take a look into this problem, but maybe someone have any ideas?\n. Wow. It's not a bug - http://www.cardinalpath.com/tracking-the-kindle-fires-silk-browser-with-google-analytics/\nClosed.\n. Hmm. Looks like the problem is a bit deeper, that I thought.\nI have a lot of logs, that I need to analyze, this user agents has reference to Mac os and at first I thought, that is should be mac.\nAfter some google, I found this issue https://github.com/tobie/ua-parser/issues/127 and don't know what to think\nI will take a look into this problem, but maybe someone have any ideas?\n. Wow. It's not a bug - http://www.cardinalpath.com/tracking-the-kindle-fires-silk-browser-with-google-analytics/\nClosed.\n. ",
    "MaximumDamage": "+1 \nI found an old ticket about this, I could not find the maven dep tho.\nCould we have it published or documented? I'm not sure what is required here ...\n\nCheers\n. +1 \nI found an old ticket about this, I could not find the maven dep tho.\nCould we have it published or documented? I'm not sure what is required here ...\n\nCheers\n. ",
    "fbacchella": "Hello please publish it.\n. Hello please publish it.\n. ",
    "hwkns": ":+1: \n. :+1: \n. ",
    "obb12": "Mozilla/5.0 (X11; Linux Mint 17.2; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0\n. Mozilla/5.0 (X11; Linux Mint 17.2; Linux x86_64; rv:24.0) Gecko/20100101 Firefox/24.0\n. ",
    "AHorak": "Is there also a current NuGet Package for /ua-parser/uap-core?\n. Is there also a current NuGet Package for /ua-parser/uap-core?\n. ",
    "fourpastmidnight": "Using the c-sharp port via NuGet, I can confirm that this is an issue. Edge is not properly detected (it's probably being detected as Chrome, not Edge.) Because Edge attempts to look like Chrome, Edge detection must come before Chrome detection in the YAML regex files.\n\n**Edit**\nAnd, as @bluesmoon says (as does the README.md), the project has moved. However, the NuGet package for the C# implementation does still have an outdated YAML file included for the regex's. So Microsoft Edge detection is still \"broken\" in v1.2 of UAParser (that's the NuGet package name).\n\nTo fix it, I simply included the `regexes.yaml` file from the uap-core project mentioned above as an embedded resource in my assembly and used the `Parser.FromYaml(string yaml)` method to instantiate a parser. Using this method, Microsoft Edge was properly detected using the updated regex's.\n. Using the c-sharp port via NuGet, I can confirm that this is an issue. Edge is not properly detected (it's probably being detected as Chrome, not Edge.) Because Edge attempts to look like Chrome, Edge detection must come before Chrome detection in the YAML regex files.\n\n**Edit**\nAnd, as @bluesmoon says (as does the README.md), the project has moved. However, the NuGet package for the C# implementation does still have an outdated YAML file included for the regex's. So Microsoft Edge detection is still \"broken\" in v1.2 of UAParser (that's the NuGet package name).\n\nTo fix it, I simply included the `regexes.yaml` file from the uap-core project mentioned above as an embedded resource in my assembly and used the `Parser.FromYaml(string yaml)` method to instantiate a parser. Using this method, Microsoft Edge was properly detected using the updated regex's.\n. ",
    "0biwanken0bi": "Thanks for the response. I solved the problem and used it in my local JAR. I will open a pull request for the relevant project.\n. Thanks for the response. I solved the problem and used it in my local JAR. I will open a pull request for the relevant project.\n. ",
    "plutoshe": "Sorry, I miss the message of repo moving...\n. Sorry, I miss the message of repo moving...\n. ",
    "kapateldhruv": "Solved by using generic UDF.\n. Solved by using generic UDF.\n. ",
    "jvu120": "I noticed that I made the change to an out-of-date file. I should be making it to uap-core and add a test for it. Go ahead and reject this request. Thanks.\n. I noticed that I made the change to an out-of-date file. I should be making it to uap-core and add a test for it. Go ahead and reject this request. Thanks.\n. ",
    "russellwhitaker": "Looks like the travis build is failing @tobie ; shall I update your travis config file as well?. Looks like the travis build is failing @tobie ; shall I update your travis config file as well?. "
}