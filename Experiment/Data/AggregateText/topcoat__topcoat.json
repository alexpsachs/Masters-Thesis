{
    "ccoenraets": "also:\nhttps://github.com/ccoenraets/employee-directory-app\nhttps://github.com/ccoenraets/phonegap-explorer\nhttps://github.com/triceam/Fresh-Food-Finder\nhttps://github.com/triceam/US-Census-Browser\n. also:\nhttps://github.com/ccoenraets/employee-directory-app\nhttps://github.com/ccoenraets/phonegap-explorer\nhttps://github.com/triceam/Fresh-Food-Finder\nhttps://github.com/triceam/US-Census-Browser\n. ",
    "cataling": "I think the original idea was to benchmark Topcoat applications against native applications, to make sure that we build the right set of components and that they are just as smooth. \nMost of the apps we have listed here are PhoneGap apps, using various UI frameworks. \nI'm wondering if we shouldn't have some native apps for balance (like instagram)\n. Adding Behance to the list, I think we have a good pool of demo apps. \nI'll close this issue for now.\n. I've set up some bash scripts to run the telemetry tests on each commit touching the ./release folder on the CI server. I think this will do it for now, till we get someone to set up a Jenkins environment. \n. related conversation on the google group: https://groups.google.com/forum/#!topic/topcoat/cZbCUqQteHs\n. So can we conclude that we stick to idiomatic-css, mention it on the wiki and close this issue? \n. hmmm... I can't see any of the pages from the old wiki.\n. never mind, they're there - I was somehow expecting them to be linked from the Home page. \n. TopCoat will have two parts - TopCoat desktop (the part that @gaurav21r is talking about), and TopCoat mobile (the part that @piatra is refering to). \nThe current folder structure and docs do not reflect this - it's mostly because TopCoat mobile isn't really started yet, just some testing infrastructure added in the /test folder. \n\nAs the work on Topcoat mobile takes off, this separation will become more clear in the folder structure.\n. > Now I'm starting to get it! I am sure styling for Cordova will also mean styling for the mobile web right?\n\nYep!\n\n> Also, when you say \"our Edge desktop Applications\" you mean Adobe's HTML5 Canvas Authoring tool right? Or is Edge an entire suite of Applications?\n\nhttp://html.adobe.com/edge/\n. No roadmap for topcoat at this point.\nThe Adobe Edge suite has been introduced at the \"Create the web\" event series, see http://html.adobe.com/events/ for more info.\n. Thanks for the pull request @majornista.\nWe're currently in the process of putting a CLA in place, and unfortunately can't accept pull requests until we have it.\n. Hey, thanks for the pull request. Can you please fill in the CLA first, so I can accept you pull request? (http://topcoat.github.com/topcoat/dev/topcoat-cla.html). \n\nI merged everything in gh-pages because it's easier to maintain this way, instead of cherry-picking the right commits. the idea was to merge master in gh-pages any time it's stable enough. \nWhat's outdated about gh-pages? \n. Thanks.\n. closed, seems to be fixed now.\n. This issue is under \"working\" for quite some time. \nIs there any impediment preventing us from just adding the psd file to github and close this issue?\n. shouldn't this issue be closed?\n. closing - outside the scope for TopCoat\n. shouldn't this be closed?\n. Hi Jonathan, \n\nThank you for the pull request. \nIn order to accept your contributions to TopCoat, we're going to need you to sing the CLA at http://topcoat.github.com/topcoat/dev/topcoat-cla.html. \n. It seems to be a problem with our CLA processing script - just tested it myself today and it appears to be down. I'll get back to you once we get it back up and running.\n. @jrowny I can confirm that the CLA is ok, I've added you to the contributors file. We'll review your pull request soon.\n. I think this is a good idea, as soon as there will be apps using TopCoat.\nKeeping this issue for later. \n. Can you please point to the location of the POC?\nAre the learnings documented someplace?\n. POC functionality submitted under https://github.com/topcoat/topcoat/tree/master/test/perf/telemetry. \nThere's also a script to run all tests and push results to server: https://github.com/topcoat/topcoat/blob/master/test/perf/telemetry/bin/runAll.sh\n. Was the intention to move the fonts in the root of the /font directory in release, so we need to fix the CSS, or is it a bug in the build scripts that the fonts are not copied in their right folders (most likely introduced with the upgrade to grunt 0.4.0)?\n. Fixed by modifying the build file (fonts are now generated in their own folder)\n. Probably related to #116 \nThe way we generate the componen.json in Gruntfile.js is not right.\n. I'm working on a patch to address both #116 and #117. \nThe main issue comes from the fact that our script that generates component.json does not go deep in directories of /release, so all the fonts are missed. \n. That wasn't it... The component is registered in bower from the old location.\n. This work is related to switching to the new architecture, and seems top priority to me. Do you foresee other items coming in this area as well? If yes, I'm thinking we should create a milestone to put them all under.\n. Did you confirm with Adam that he changed the CLA URLs to the new repo? Otherwise we'll end up with a broken CLA page after this pull request.\n. Why is it re-adding the doc folder? I thought we decided to move that under the https://github.com/topcoat/topcoat.github.com (where topcoat.io is mapped to)\n. If we want to remove test/experiments, I suggest moving it to a new repo. There's stuff there we'll want to look at later - like the transition effects. \n. Which existing CSS does this refer to? \nCurrently we have the stylus files under src/style and some css files under doc/css (style.css, styleguide.css and topcoat-desktop.css)\n. Related question about the grunt task: can I specify a commit number (SHA version) of a component instead of a tag name (like 0.1.0)?\nCould be really useful for local development and debugging. \n. I understand how tagged version of the components are going to be downloaded using the grunt-topcoat task. \nWhat is the way to assemble the nightly version of components into a project?\n. Ok, agreed. \nThe implication is that we won't be able to run performance tests on nightly builds until we can build a nightly build - but that's ok for now.\n. Could you please add instruction to README.md in test/perf/telemetry about how to run the tests on an Android device? \nI wouldn't consider this issue closed until we have that. \n. The wiki page looks great!\nCan you please move the page to the topcoat/topcoat wiki (https://github.com/topcoat/topcoat/wiki)? \nI think we can close this issue after that.  \n. All right, then this is done!\n. Having the python version of runAll.sh is awesome. Any reason we're not using it on Mac and remove runAll.sh altogether? \n. Why pass --config Gruntfile.js to grunt? This is the default for grunt 0.4, which we're using - this parameter should be redundant. \n. I'm wandering why is GRUNT_PATH necessary. \nAccording to http://gruntjs.com/getting-started, npm install -g grunt-cli should add grunt to the system path. \nIs this not the case in Win7?\n. Could you also add instruction on how to run tests on an Android device in https://github.com/topcoat/topcoat/blob/master/test/perf/telemetry/README.md?\n. Consolidating commits are awesome - how did you do that? \n\nIt looks very well now. Some few minor things I'd like you to add to this pull request before merging it:\n- delete runAll.sh\n- add license headers to runAll.py (you can copy them from the old bash script)\n- in python.py document from what folder it needs to be invoked (btw, you can also leave it to be called from the bin folder, like it was before - grunt will still work because it searches Gruntfile.js up the directory chain, so invoking grunt from test/perf/telemetry/bin works the same as invoking it from the root folder)\n- update README.md in test/perf/telemetry according to the new modifications\n. How about submitting the fix for the bug in grunt-contrib-copy as a pull request? They'll probably thank us for it, it it will solve our problem in the long run. \nMeanwhile, any temporary workaround you see fit would work (like patching grunt-contrib-copy locally after npm install; btw you can use git to create and apply patches easily). You could also try changing the trailing \"\\\" to \"/\" before calling the grunt copy task, since the task is currently looking for \"/\" at the end.\n\nBtw, I'd use path.sep (http://nodejs.org/api/path.html#path_path_sep) for the fix, it's much cleaner and I doubt they'll accept your patch as it is now. \n. We still need the USE_CEF flag in runAll.py (defaulting to true). But let's create a new issue for that, and close this one. \n. Duplicate of #160 \n. This issue is duplicate of #156. \n. Looks good to me.\n. I think the original idea was to benchmark Topcoat applications against native applications, to make sure that we build the right set of components and that they are just as smooth. \nMost of the apps we have listed here are PhoneGap apps, using various UI frameworks. \nI'm wondering if we shouldn't have some native apps for balance (like instagram)\n. Adding Behance to the list, I think we have a good pool of demo apps. \nI'll close this issue for now.\n. I've set up some bash scripts to run the telemetry tests on each commit touching the ./release folder on the CI server. I think this will do it for now, till we get someone to set up a Jenkins environment. \n. related conversation on the google group: https://groups.google.com/forum/#!topic/topcoat/cZbCUqQteHs\n. So can we conclude that we stick to idiomatic-css, mention it on the wiki and close this issue? \n. hmmm... I can't see any of the pages from the old wiki.\n. never mind, they're there - I was somehow expecting them to be linked from the Home page. \n. TopCoat will have two parts - TopCoat desktop (the part that @gaurav21r is talking about), and TopCoat mobile (the part that @piatra is refering to). \nThe current folder structure and docs do not reflect this - it's mostly because TopCoat mobile isn't really started yet, just some testing infrastructure added in the /test folder. \n\nAs the work on Topcoat mobile takes off, this separation will become more clear in the folder structure.\n. > Now I'm starting to get it! I am sure styling for Cordova will also mean styling for the mobile web right?\n\nYep!\n\n> Also, when you say \"our Edge desktop Applications\" you mean Adobe's HTML5 Canvas Authoring tool right? Or is Edge an entire suite of Applications?\n\nhttp://html.adobe.com/edge/\n. No roadmap for topcoat at this point.\nThe Adobe Edge suite has been introduced at the \"Create the web\" event series, see http://html.adobe.com/events/ for more info.\n. Thanks for the pull request @majornista.\nWe're currently in the process of putting a CLA in place, and unfortunately can't accept pull requests until we have it.\n. Hey, thanks for the pull request. Can you please fill in the CLA first, so I can accept you pull request? (http://topcoat.github.com/topcoat/dev/topcoat-cla.html). \n\nI merged everything in gh-pages because it's easier to maintain this way, instead of cherry-picking the right commits. the idea was to merge master in gh-pages any time it's stable enough. \nWhat's outdated about gh-pages? \n. Thanks.\n. closed, seems to be fixed now.\n. This issue is under \"working\" for quite some time. \nIs there any impediment preventing us from just adding the psd file to github and close this issue?\n. shouldn't this issue be closed?\n. closing - outside the scope for TopCoat\n. shouldn't this be closed?\n. Hi Jonathan, \n\nThank you for the pull request. \nIn order to accept your contributions to TopCoat, we're going to need you to sing the CLA at http://topcoat.github.com/topcoat/dev/topcoat-cla.html. \n. It seems to be a problem with our CLA processing script - just tested it myself today and it appears to be down. I'll get back to you once we get it back up and running.\n. @jrowny I can confirm that the CLA is ok, I've added you to the contributors file. We'll review your pull request soon.\n. I think this is a good idea, as soon as there will be apps using TopCoat.\nKeeping this issue for later. \n. Can you please point to the location of the POC?\nAre the learnings documented someplace?\n. POC functionality submitted under https://github.com/topcoat/topcoat/tree/master/test/perf/telemetry. \nThere's also a script to run all tests and push results to server: https://github.com/topcoat/topcoat/blob/master/test/perf/telemetry/bin/runAll.sh\n. Was the intention to move the fonts in the root of the /font directory in release, so we need to fix the CSS, or is it a bug in the build scripts that the fonts are not copied in their right folders (most likely introduced with the upgrade to grunt 0.4.0)?\n. Fixed by modifying the build file (fonts are now generated in their own folder)\n. Probably related to #116 \nThe way we generate the componen.json in Gruntfile.js is not right.\n. I'm working on a patch to address both #116 and #117. \nThe main issue comes from the fact that our script that generates component.json does not go deep in directories of /release, so all the fonts are missed. \n. That wasn't it... The component is registered in bower from the old location.\n. This work is related to switching to the new architecture, and seems top priority to me. Do you foresee other items coming in this area as well? If yes, I'm thinking we should create a milestone to put them all under.\n. Did you confirm with Adam that he changed the CLA URLs to the new repo? Otherwise we'll end up with a broken CLA page after this pull request.\n. Why is it re-adding the doc folder? I thought we decided to move that under the https://github.com/topcoat/topcoat.github.com (where topcoat.io is mapped to)\n. If we want to remove test/experiments, I suggest moving it to a new repo. There's stuff there we'll want to look at later - like the transition effects. \n. Which existing CSS does this refer to? \nCurrently we have the stylus files under src/style and some css files under doc/css (style.css, styleguide.css and topcoat-desktop.css)\n. Related question about the grunt task: can I specify a commit number (SHA version) of a component instead of a tag name (like 0.1.0)?\nCould be really useful for local development and debugging. \n. I understand how tagged version of the components are going to be downloaded using the grunt-topcoat task. \nWhat is the way to assemble the nightly version of components into a project?\n. Ok, agreed. \nThe implication is that we won't be able to run performance tests on nightly builds until we can build a nightly build - but that's ok for now.\n. Could you please add instruction to README.md in test/perf/telemetry about how to run the tests on an Android device? \nI wouldn't consider this issue closed until we have that. \n. The wiki page looks great!\nCan you please move the page to the topcoat/topcoat wiki (https://github.com/topcoat/topcoat/wiki)? \nI think we can close this issue after that.  \n. All right, then this is done!\n. Having the python version of runAll.sh is awesome. Any reason we're not using it on Mac and remove runAll.sh altogether? \n. Why pass --config Gruntfile.js to grunt? This is the default for grunt 0.4, which we're using - this parameter should be redundant. \n. I'm wandering why is GRUNT_PATH necessary. \nAccording to http://gruntjs.com/getting-started, npm install -g grunt-cli should add grunt to the system path. \nIs this not the case in Win7?\n. Could you also add instruction on how to run tests on an Android device in https://github.com/topcoat/topcoat/blob/master/test/perf/telemetry/README.md?\n. Consolidating commits are awesome - how did you do that? \n\nIt looks very well now. Some few minor things I'd like you to add to this pull request before merging it:\n- delete runAll.sh\n- add license headers to runAll.py (you can copy them from the old bash script)\n- in python.py document from what folder it needs to be invoked (btw, you can also leave it to be called from the bin folder, like it was before - grunt will still work because it searches Gruntfile.js up the directory chain, so invoking grunt from test/perf/telemetry/bin works the same as invoking it from the root folder)\n- update README.md in test/perf/telemetry according to the new modifications\n. How about submitting the fix for the bug in grunt-contrib-copy as a pull request? They'll probably thank us for it, it it will solve our problem in the long run. \nMeanwhile, any temporary workaround you see fit would work (like patching grunt-contrib-copy locally after npm install; btw you can use git to create and apply patches easily). You could also try changing the trailing \"\\\" to \"/\" before calling the grunt copy task, since the task is currently looking for \"/\" at the end.\n\nBtw, I'd use path.sep (http://nodejs.org/api/path.html#path_path_sep) for the fix, it's much cleaner and I doubt they'll accept your patch as it is now. \n. We still need the USE_CEF flag in runAll.py (defaulting to true). But let's create a new issue for that, and close this one. \n. Duplicate of #160 \n. This issue is duplicate of #156. \n. Looks good to me.\n. ",
    "piatra": "I'm happy to get started with this. What grid system are we going to use ? \n. Did not know about this website http://aviary.com/ turns out it has a nice api we could use if we still wanted the Instagram app :)\n. The current tests check the numbers of ops/sec for various elements. I was thinking of setting a baseline for an element to be considered acceptable. I should have a server that aggregates test results up and running pretty soon (nodejs running on heroku or nodejitsu with a mongodb, how does that sound?) and once we have some data we could  start comparing results on different platforms and decide this baseline. Is it a correct approach ? \n. Ok so I updated the tests\nI've created a nodejs test server with \n\n``` javascript\nres.header(\"Access-Control-Allow-Origin\", \"*\");\n```\n\nSo anyone running the tests, even locally, sends the data to http://topcoat.jit.su/view/db\n (it's still work in progress haven't tested on mobile yet) but we can start looking into actual benchmarks from now on cus we can now store the results. I'm looking into headless testing w/ phantom and progress indication\n. Totally, can you share that account ? Also I have some questions about benchmarking. I'm going to continue this on the google group\n. For fun and science I'm doing visualisation/reports for the benchmarks http://i.imgur.com/dHv5j.png\nExplanation:\naxis X is ops/sec\naxis Y the test\nand the value you get when hovering over a bubble is the #number of tests which were in that vicinity (i.e. 1 test ran at 90.xxx ops/sec; 2 test ran at 53.xxx);\n\nhttp://topcoat.jit.su/json/[Browser_Name] outputs a json with all the info to generate the report. \nRight now only Chrome is available so => http://topcoat.jit.su/json/Chrome\n\nhttp://topcoat.jit.su/view/results outputs the graph for Chrome (it's all a little hard coded I only uploaded to make sure it works on the server just as well as localhost) also I was looking for some feedback\n. Right now I'm just building the infrastructure for the tests. For instance when I was referring to ops/sec the test was checking to see if really long lists styled differently can impact performance. For example what happens with a long list  of items that might have box-shadow and rounded corners applied to them. There is definitely a difference and from what I've seen mobile is at least 10x slower than laptops (so everything adds up to a slower interface on mobile).\n\nOnce we get more components we can start wireframing real life apps and hopefully spot the elements that slow down  the application experience (load time, navigation between pages etc)\n. Done, also added their demo page as a startup time test\n. Done\n. Updated scripts now a checkbox decides if the results are submitted. Also if a test is ran directly you get a prompt window (this is for testing mobile devices)\n. Updated README\n. Topcoat is meant to be mobile first tablets second. Bootstrap focuses more on desktop web apps. That's why fat launched Ratchet.\n. Nice :+1: \n. Done\n. Hi! Thanks a lot for the pull request. Unfortunately until there is a Contributor License Agreement (CLA) in place I can't accept any pull requests. Hope this is fixed soon.\n. From what I can see removing\n\n``` css\ndisplay: inline-block;\n```\n\nand\n\n``` css\nline-height: 21px;\n```\n\nLines `352` & `355` (from topcoat.css) removes this issue\n. We no longer have the same component.\n. There is a `Building the src` section in the readme. I don't think there is a watch task I'll try to make one \n. Updated the docs\n. I think this pull request is obsolete.\n. Agreed. I'll close this for now.\n. What are you referring to ? There is something similar under ./test/effects\n. I'll get this. I recently upgraded to 0.4.0\n. Done.\n. Results are send in the command line, spaces should be escaped if any, I'll have to test this.\n. http://bench.topcoat.io\n. @kristoferjoseph I added a grunt task to remove left over .zip files. I saw that point wasn't ticked. It's a pull req waiting\n. I can't reproduce the bug. The ChromiumSrc variable is specific only to task `grunt telemetry` and it does give off an explanatory error message.\nDid you simply run the `grunt` task with no arguments ? What version of grunt/nodejs do you use ? \n. Ok thanks. I'll look into it, I never tested on 0.10 \n. I saw that the theme variation comes first before the name of the component\n\n```\n.dark-text-input,\n.light-text-input\n```\n\nI'm sure there's a reason for this, but imo when writing the CSS class selector I'm first interested in naming the component and then the theme option.\n\nI named the repo `text input` to match the CSS class selector name and also it made more sense to me since it extends `input-base` and there will be a `search-input` as well.\n. https://github.com/topcoat/search-input\n. https://github.com/topcoat/textarea\n. Awesome I can add more benchmarks to bench.topcoat.io\nBut it's not entirely obvious to me how I use this new task. When I run `grunt telemetry` I get the following error\n\n```\nNo jade file is found in src/../test/perf/ Use --force to continue.\n```\n. Awesome :+1: \nI start merging those pull requests\n. Why isn't this a thing yet?\nI'm giving it a shot ! \n. https://github.com/topcoat/generator-topcoat\n. That guide is old and it does not really reflect the state of the current components. The topcoat repo contains all the components all in their own repo. You can generate a styleguide using styledocco. There will be a better view :)\n. Thanks for reporting. I'll look into this.\n. Hi, thanks for your interest. Right now the component isn't available\nsince it needs some refactoring. You can copy the css and use it for\nnow and switch for the actual component when it will be ready.\n\nOn 5/16/13, Thibault Durand notifications@github.com wrote:\n\n> Hi,\n> \n> I want to include the on/off switch in my custom topcoat build but i can't\n> find the repository?\n> \n> Where can i find it?  Do i need to inspect and copy the css rules from there\n> for now?\n> http://topcoat.io/topcoat/doc/mobile.html#m-switch\n> \n> Thanks for this great project.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/195\n\n## \n\nAndrei Oprea\n. From what I can see the div with `topcoat-navigation-bar__item right quarter` is responsible for this. It captures the users click because it overlaps the search input. I think the div should sit on the right side of the `Header` but it flows on the next row. It's not really the input fields fault here. I'll try to see how I can fix this.\n. I've found a fix for this. Hopefully I'll return with an update & an explanation for this behaviour :)\n\nYou have to add `white-space:nowrap; word-spacing:0;` to the parent container of the `divs` namely `.topcoat-navigation-bar`\n\nHere is a working example http://codepen.io/piatra/pen/nilxF\n. Anyone is welcomed to make a pull request against the theme repo. We have a\nvariables.styl folder from which all the components inherit the base font.\nAny changes will definitely land in the next release :)\n\nOn Wednesday, May 29, 2013, Andre wrote:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/206#issuecomment-18627879\n> .\n\n## \n\nAndrei Oprea\n. I think this is possible with the components we have in this version. Could\nyou give more details?\n\nOn Monday, July 15, 2013, SidneyS wrote:\n\n> Any progress on this? I'm currently deciding on using App-UI or Sidetap\n> just for this :-(\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20946781\n> .\n\n## \n\nAndrei Oprea\n. Hi, @SidneyS . I made a quick demo http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n. @Smart-Thinker It's the part at the end of the CSS area, I've added a \n\n```\n/* Extra bits from here on */\n```\n\nto mark the beginning. \n. The input base had the values for font family and size 'hard coded'\nin. I changed that to a variable with the same value as the theme file\nso that builiding this component on its own wouls result in the same\noutput as building topcoat.\n\nOn 5/30/13, Kristofer Joseph notifications@github.com wrote:\n\n> Font properties should come from the theme cascade.\n> Was there an issue that required us to add it to the input-base? If so I\n> would like to get to the bottom of it.\n> \n> https://github.com/topcoat/input-base/blob/master/src/mixins/input-mixin.styl#L10\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/214\n\n## \n\nAndrei Oprea\n. Now the output is the same no matter how you build it but you do have extra lines of CSS\n. Closing issues https://github.com/topcoat/input-base/commit/b2e0c0103b799fe3ce13cb575c43cf9ee42730eb #productive\n. Make sure that the page url inside the topcoat_button-base.test.json `\"url\": \"file:///topcoat/topcoat_buttons.html\"` has the correct path to the CSS. You can test this by running the telemetry test, opening the DevTool console (this will stop telemetry from running the test and closing the browser window) afterwards you can inspect the page source for broken links. Its definitely a path issue.\n. Look at the `/page_sets/top_25.json` (chromium/home/src_tarball/tarball/chromium/src/tools/perf/page_sets) Your topcoat_button-base.test.json must have the same format. For example\n\n```\n{\n  \"url\": \"http://techcrunch.com\",\n  \"why\": \"top tech blog\",\n  \"smoothness\": {\n    \"action\": \"scrolling_action\"\n  }\n}\n```\n. Should I be assigned ? \nMeanwhile I'm doing what @nnnnic said :)\n\n---\n\nUpdates\n\nI've extracted everything everything that is related to the structure of the overlay background and box into mixins: an overlay base with the overlay box, and the overlay background (i kept the shadow and bg color for this, I think it's relevant for perf testing).\n\nI've removed everything related to text style and size. Right now the component also contains some style for an h1 which is the title of the overlay, I'm sure this isn't right but without it the component doesn't make sense so I kept it until we find a better place to put it (another component for headings ?)\n\nAnd the guide will show the Yes button on the right :)\n. I think this issue should be closed. We have \nhttps://github.com/topcoat/overlay\nhttps://github.com/topcoat/overlay-base\nThey just need a review :)\n. Its due to the fact that node 0.10 is not fully supported yet by all\nmodules. I myself had to downgrade to be able to develop on Topcoat. Try to\nuse something like nvm (node version manager) to switch easily between\nversions.\n\nOn Monday, June 3, 2013, Jorge Pedret wrote:\n\n> I had the exact same issue, I showed it to @kristoferjosephhttps://github.com/kristoferjosephat jsconf. As soon as I changed to v0.8.x, it worked perfectly.\n> \n> Haven't tried it using 0.9 though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/221#issuecomment-18866502\n> .\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/search-input/commit/dbff3c92a785ca67b1671251348c89e3b0ee8703\n. The blog is at http://topcoat.io/blog/\n\nThe link is visible in the menu of the main page http://topcoat.io\n. We have the https://github.com/topcoat/icon-button repo. \n![screen shot 2013-06-04 at 2 52 51 pm](https://f.cloud.github.com/assets/810040/605171/52ff0918-cd0d-11e2-977d-ee5d64d18b2e.png)\n\nWith the that component. Is this what you are looking for ?\n. This is updated in the grunt-telemetry task but we need to update the CI\n\nYinan Liu notifications@github.com wrote:\n\n> I think it's still opened. I haven't got the chance to update the chromium bits for telemetry.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/227#issuecomment-22911116\n. Font size, weight and such are controlled via stylus variables, its\neasy to change/customise\n\nOn 6/6/13, Brian LeRoux notifications@github.com wrote:\n\n> http://cl.ly/image/3e051R153F1U\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/238\n\n## \n\nAndrei Oprea\n. Thanks. I'll have a look now :)\n\nOn Tue, Jul 9, 2013 at 5:29 PM, kombucha notifications@github.com wrote:\n\n> Hi,\n> \n> I'm using topcoat v0.5.1, and I've noticed this same issue in numerous\n> places.\n> For example, in topcoat-desktop-dark.css:\n> \n> background-color: var-background--focus;/\\* ... _/font: var-font--large;/_ etc */\n> \n> Cheers\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/246#issuecomment-20677649\n> .\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/radio-input/commit/4cd81307dc2fc37ac89d46d6304c134306c353ac\n. https://github.com/topcoat/checkbox/commit/332c91f2eec234848d95f1bd889716cea026ba13\n\nThis commit should solve it. I updated the grunt-topcoat version. You should probably remove your entire node_modules folder before trying just to be sure no cache gets in the way :)\n. First thing that comes to mind is that `var-font` should not be included at all. I'll make the tweaks necessary for the background variable in the theme.\n. I've added the radio background https://github.com/topcoat/theme/commit/e5eac29f28820a23b094b6319325f08ea12c926a\n. @nnnnic I sense a great deal of back and forth emails\n. Looks great!\n\nOn Wednesday, July 17, 2013, Kristofer Joseph wrote:\n\n> So sweet.\n> \n> Kristofer\n> \n> On Tue, Jul 16, 2013 at 3:13 PM, nnnnic <notifications@github.com<javascript:_e({}, 'cvml', 'notifications@github.com');>>\n> wrote:\n> \n> > Here's a quick restyling of what's already up. Full design is coming at\n> > a\n> > later date.\n> > \n> > I wonder if we could eliminate the need to drill into a detail view by\n> > just allowing people to just use the side nav. It seems like the only\n> > thing\n> > we gain from clicking on \"detail\" currently is a little more real estate\n> > for the graph.\n> > \n> > [image: tc-benchmark_main]<\n> > https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png>\n> > \n> > [image: tc-benchmark_detail]<\n> > https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png>\n> > \n> > [image: tc-benchmark_mobile]<\n> > https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png>\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/268#issuecomment-21078203>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/268#issuecomment-21078291\n> .\n\n## \n\nAndrei Oprea\n. I made a pull request. https://github.com/maxogden/flavors/pull/4\n\nGlad it's not a Topcoat issue :beer: \n. I have done a lot of research on this matter when I first started. I mostly looked into common patterns such as side menus that slide in, scrolling lists etc. I've worked even on old version of 2.\\* android and things run smoothly, that is until you hit the MSPointer Event wall.\n. Not sure if automation is absolutely necessary. Not that many components get added in, so it could be done manually. Also being automated it would be a little tricky to guess the naming convention of future components and people could take advantage of this and submit fake benchmarks (or even by accident) since the server is open.\n. I created a test for input-text component. http://jsperf.com/css-performance-test/6\nHere are my results. Fancy is completely styled, base is our base component, and simple in this case is w/o box-shadow or border-radius. Should I make the same for all component ? \n![screen shot 2013-06-27 at 1 25 20 pm](https://f.cloud.github.com/assets/810040/715204/ee85240e-df13-11e2-9351-58eac8e5707c.png)\n. Probably from all the components. I'll have a look at that.\n\nOn 6/27/13, Garth Braithwaite notifications@github.com wrote:\n\n> In the release css file it is in there a ton.\n> \n> https://github.com/topcoat/topcoat/blob/master/release/css/topcoat-desktop-dark.css\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/283\n\n## \n\nAndrei Oprea\n. Have you checked out my pull req ? https://github.com/topcoat/topcoat/pull/286\nI simply ignore the comments from the components and include it a single time\n. This works. Don't think it's the most `pretty` solution. Could replace the `copyright.styl` from tasks with a grunt-task that temporarily makes a `copyright.styl` file somewhere in ./src and then remove it. Open for discussion.\n. Ok I added a grunt task that simply copies the copyright file in /src. Now the copyrights from each of the components are ignored (this was causing the repeat) and just the one in /src is included (properly at the top of the release .css). I think it's fine to be in /src because it gets caught by the clean task and gets removed in the end.\n\ncc @GarthDB @kristoferjoseph \n. Thanks ! \n. Yeah probably. I will revert it, thanks :+1: \n\ncc @kristoferjoseph #:beer: ?\n. @bennybennet we have an overlay component. check it out https://github.com/topcoat/overlay\n. https://github.com/topcoat/overlay/commit/9b03acb91d691a8c23d777d3537be2b34297a5b1#commitcomment-3556301\n\nI'll have to check and make sure\n. Found the issue. It was a combination of the comment above and the fact that the HTML was indented using tabs and not spaces. Now topdoc correctly generates the guide for the component. Problems is that is the modal is positioned absolute.\n. Awesome idea. I'll do that\n\nOn 7/3/13, Garth Braithwaite notifications@github.com wrote:\n\n> Maybe put the example in an iframe?\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Wed, Jul 3, 2013 at 4:54 AM, Andrei Oprea notifications@github.com\n> wrote:\n> \n> > Found the issue. It was a combination of the comment above and the fact\n> > that the HTML was indented using tabs and not spaces. Now topdoc correctly\n> > generates the guide for the component. Problems is that is the modal is\n> > \n> > ## positioned absolute.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/290#issuecomment-20408182\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/290#issuecomment-20428757\n\n## \n\nAndrei Oprea\n. I've tried it, but that would mean extra markup that would also be visible to the user. I was thinking that our template used for generating the usage guidelines could include a .js script that could simply disable the position:absolute property of the element. Markup and CSS remain the same. And the script could be used later on for other such components.\n. Gave it a shot with iframes came across some issues.\n- [x] overlay variables missing from theme\n  - https://github.com/topcoat/theme/commit/fbb1f05ffc6f78704da580a2768dabc592ab5476\n- [x] including the topcoat-overlay.html page in an iframe still requires some js (to scroll into view)\n- I was thinking that the js could be included in the comments alongside the html but using topdoc it could be hidden away\n  - ~~I'm working on a pull request for that to see how it goes~~\n  - https://github.com/topcoat/usage-guide-theme/pull/2\n- [ ] ~~pages generated by topdoc (topcoat-[component name].html) have broken links to .css files and they are not styled~~\n. Thanks :)\n. https://github.com/topcoat/textarea/commit/892bc615ff8fb18c4577e52a838fcee10fb68a1c\n\nfixed\n. It was just a dependency issue in the package.json it's fixed now\n\nhttps://github.com/topcoat/range-input/commit/4209277b7d630aa9a855b2e5a55425e0de01401a\n. I've added as a test, the textarea component to travis ci so that I get notified and manage these things before an issue gets submitted. What do you think should I do the same for all the components ? Might be an overkill but most of the time it's not really a problem it is just that the expected .css has not been updated.\n\n[![Build Status](https://travis-ci.org/topcoat/textarea.png)](https://travis-ci.org/topcoat/textarea)\n. I've came across a node module that does pixel testing, draws the page to a\ncanvas and compares to an image. Is that something we might be interested\nin ?\n\nOn Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux notifications@github.comwrote:\n\n> I like this too. Its a good safety net. The test itself feels a little\n> synthetic. I wonder if we can create something that tests intent rather\n> than just expected output?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684410\n> .\n\n## \n\nAndrei Oprea\n. It would be cool if it could test for telemetry metrics and report if\nthe time increased. Seems useful to me. And we could implement it\nsince Yinan made the CI server\n\nOn 7/9/13, Brian LeRoux notifications@github.com wrote:\n\n> no, that would be slippery and difficult to maintain given the breadth of\n> devices. again, very hesitant to add to the testing infra unless things are\n> very measurably helpful to guiding our work\n> \n> On Tue, Jul 9, 2013 at 8:59 AM, Andrei Oprea\n> notifications@github.comwrote:\n> \n> > I've came across a node module that does pixel testing, draws the page to\n> > a\n> > canvas and compares to an image. Is that something we might be interested\n> > in ?\n> > \n> > On Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux\n> > notifications@github.comwrote:\n> > \n> > > I like this too. Its a good safety net. The test itself feels a little\n> > > synthetic. I wonder if we can create something that tests intent rather\n> > > than just expected output?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/topcoat/topcoat/issues/297#issuecomment-20684410>\n> > > .\n> > \n> > ## \n> > \n> > Andrei Oprea\n> > \n> > \u2014\n> > Reply to this email directly or view it on\n> > GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684588\n> > .\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/297#issuecomment-20684757\n\n## \n\nAndrei Oprea\n. Not with Travis. From my understanding the CI server you made tests at every new release of Topcoat, it's only a matter of comparing with the last result and sending an email informing us if the build failed, scored lower or higher in Telemetry.\n. We no longer have grunt-topcoat so I can close this.\n. I'm trying to make the use of the same images only change background-size and other variables. So far its going great. \n\n![screen shot 2013-07-10 at 2 57 18 pm](https://f.cloud.github.com/assets/810040/774449/8e4480ee-e959-11e2-9e99-eea1938a6235.png)\n\n![screen shot 2013-07-10 at 3 12 33 pm](https://f.cloud.github.com/assets/810040/774462/180dc754-e95a-11e2-9495-2a2b61396de7.png)\n\nIs this the way to go ? \n\n/cc @kristoferjoseph \n. Thanks! Fixed.\n. Work in progress !\n\nOn Thu, Aug 1, 2013 at 11:01 PM, Diogenes Buarque Ianakiara <\nnotifications@github.com> wrote:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/302#issuecomment-21969336\n> .\n\n## \n\nAndrei Oprea\n. Hi. Sorry about the guide, I will update it now with more detailed information.\n1. Fork https://github.com/topcoat/theme\n2. Modify your local fork and push the updates\n3. Make sure you create a tag for the commit\n\nAn example (that is how I would do it. Might be a better way)\n\n```\n$ git tag -a 0.4.1 -m 'incremented version'\n$ git push --tags origin\n```\n1. Modify the package.json in /topcoat/\n\n```\n\"theme\": {\n      \"YOUR_GITHUB_ACCOUNT/theme\": \"TAG_VERSION\"\n    }\n```\n\nThen when you run `grunt` in the /topcoat/ folder it will pull down your theme.\nLet me know if you run into any trouble.\n\nA quick way to test locally would be to modify the theme files in `src/theme/theme-X.X.X/*.styl` in your local topcoat clone. After that just run `grunt compile` (to skip the download step and use the local files) it will build topcoat with your local changes.\n. For each of the components the process involves fewer steps. If you clone a component you will find a variables.styl file in test/fixtures/variables. Modify that file, then run grunt and the component will build with your new variables.\n. Yes. As I described above you can edit the files in /src/theme/theme_/_.styl and simply run `grunt compile` afterwards.\n. What do you have in mind ? \nThe steps I described are just a couple of clicks in githubs interface and once set up its :cake: to update/make changes\n. We use grunt-topcoat task to download the files. The function that makes the download is \n\n```\nvar downloadResources = function(obj, path, callback) {\n```\n\nIt could be a simple `if` statement that is sets the `path` to your desired location when it sees the `theme` keyword . so it could be something as a .zip  that is hosted anywhere. The stack is not that tightly coupled, you can easily change things to fit your needs imo.\n\nI think I've answered the question so I can close this bug. If you need more info we have https://groups.google.com/forum/#!forum/topcoat\n. Yeah that is because the tag release does not contain them. That bug was 'expected'. @kristoferjoseph said he will bump to 0.5.2 this week and the issue should be fixed.\n. Ahead of you on that one. I started adding unit tests for components\nmissing components :D\n\nOn Thu, Jul 11, 2013 at 10:41 PM, Yinan Liu notifications@github.comwrote:\n\n> This brings me a idea that we could have a script to scan the compiled\n> release CSS files to look for any un-replaced variable, maybe once a day.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/304#issuecomment-20836808\n> .\n\n## \n\nAndrei Oprea\n. @ynliu I think I know why you have missing variables. When I added the variables to the theme repo I changed their names to include the name of the component (if there was something component specific about that variable, like var-modal-bg-color) but the tagged components still have the old name like var-bg-color. So you would need to update the components & the theme version to get the new files. \\* _hopes he's right_ *\n\nThis will happen with the new version. I'm done writing the tests for missing variables and I'm going to make a pull req now. Hopefully we won't have to deal with this from now on.\n. Thanks! I'll look into this.\n. https://github.com/topcoat/theme/commit/ccdab643ba2bf481e8815fbfe5f305512fa7efe6\n. I've made a working example http://codepen.io/piatra/pen/KinxG\nI have added the extra 2 links just to emphasise the focus switch using the tab key. When the checkbox is selected I've made the text bold and underline (just as an example, I was thinking that the images for the checkboxes could become slightly darker or any another visual change). You can use space to check/uncheck. And no js :)\n. Related : https://github.com/topcoat/topcoat/issues/194\n. @nnnnic I tried to update the example to use a box shadow but the sprite image has small border\n\n![image](https://f.cloud.github.com/assets/810040/874917/cd6c5b7a-f895-11e2-86d8-fd1e52c04d9c.png)\n\nI went ahead and edited the sprite and updated the codepen http://codepen.io/piatra/pen/KinxG might need some tweaking for radio-input as well. If everyone agrees I could make a pull request for the components\n. Yeah I totally missed that. Awesome !\n. Made this available for radio input, refactored the component to be CSS only.\n\nChrome & Firefox\n![screen shot 2013-08-01 at 1 42 20 pm](https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png)\n![screen shot 2013-08-01 at 1 42 33 pm](https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png)\n![screen shot 2013-08-01 at 1 42 49 pm](https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png)\n\n@kristoferjoseph have you worked on this ? Should I do a pull req ?\n. @nnnnic if you could add \n\n```\nposition:absolute\nleft:-9999px\n```\n\nI mentioned above I'll check in your component. That way we can simulate a :focus state\n. @nnnnic it should be the `input[type=radio]` that you want to position absolute outside of the page. And when it's focused add the box shadow to the label. (might be a little different on your code but thats the gist)\n\n```\ninput[type=\"radio\"]:focus + .topcoat-radio__label:before {\n   box-shadow: 0 0 3px #6fb5f1;\n}\n```\n\nI've just noticed that you actually expanded on the `input[type=checkbox]` example but I think we will want to use actual radio buttons for the markup. People might feel weird about having a checkbox behaviour on a radio input.\n. Again with the Nyan module issue (although same configs as button base which passes) & with grunt prepublish option from package.json. Log here: https://s3.amazonaws.com/archive.travis-ci.org/jobs/9346038/log.txt\n. sorry ! fixed ! https://github.com/topcoat/topcoat-server/commit/3f0e6ced75642ede09c3c3812dce22f2f0bce77a\nthanks for spotting that :)\n. We could use a workaround, I made a [codepen](http://cdpn.io/FwoJy) where I use a background image on the select element, and for Firefox I used a vendor specific prefix to cancel out the image (and fallbacks to default arrow down). At least this way people can see that it is in fact a `<select>` element and know what to expect when they click on it. I think this solution is good enough for the websites (not for Topcoat).\n. IE 8\n![screen shot 2013-07-25 at 1 03 02 am](https://f.cloud.github.com/assets/810040/852236/0e7a35c0-f4ad-11e2-9da4-cd1e9541dbe9.png)\nOpera curent stable\n![screen shot 2013-07-25 at 1 03 37 am](https://f.cloud.github.com/assets/810040/852237/0e959996-f4ad-11e2-90bf-a2f350d0a31e.png)\nFirefox curent stable\n![screen shot 2013-07-25 at 1 04 07 am](https://f.cloud.github.com/assets/810040/852238/0eafa93a-f4ad-11e2-8748-6ef2d7c85401.png)\nChrome\n![screen shot 2013-07-25 at 1 05 50 am](https://f.cloud.github.com/assets/810040/852241/3a2fa592-f4ad-11e2-9686-8a4f830e3966.png)\n. Agreed. Styling `<select>` elements is highly inconsistent across browsers hence tools like jqueryUI completely replace the element for custom ones made out of divs. It would help if we had a complete image (background color + arrow) it would fix the dimensions of the element.\nI made another iteration. No JS and only one browser specific selector `select::-ms-expand` \n\nhttp://codepen.io/piatra/full/aIujg\n\nIE 10\n![screen shot 2013-07-25 at 11 45 37 am](https://f.cloud.github.com/assets/810040/854497/ad7c1a72-f506-11e2-8025-e52cbfa3c9cf.png)\n\nIE 9\n![screen shot 2013-07-25 at 11 47 29 am](https://f.cloud.github.com/assets/810040/854503/df11bb32-f506-11e2-8f1c-30c6f4e49851.png)\n\nChrome\n![image](https://f.cloud.github.com/assets/810040/854508/ee8b16bc-f506-11e2-9fbc-eadcbd42f618.png)\n\nOpera\n![image](https://f.cloud.github.com/assets/810040/854512/f84ca33c-f506-11e2-82f0-43d21b304f7c.png)\n\nFirefox\n![image](https://f.cloud.github.com/assets/810040/854515/00fff812-f507-11e2-883e-bf9f5f1ae368.png)\n. What I did for bench.topcoat is added an arrow down character. Don't hate me for how it looks its 100% cross browser :fearful: \n\nI could change it. It currently uses an image bg. If you would like you can make a different one. If no one has anything against it I'm going to change it.\n- Just realised it should have two arrows \n. they have bg color. how does one photoshop\n\nhttp://codepen.io/Topcoat/full/pDvJs\n\nThey are rubbish. So to make it work in all browsers you have to have a complete image. That would mean fake the background & box-shadow. \n\n![select bg](http://i.imgur.com/7rGM4IX.png)\n- probably can't see it right because of the white background of github. I'm really not sure it's worth the effort.\n  Here is a really odd approach that is somewhat similar http://jsfiddle.net/danield770/YvCHW/6/\n  It makes the select completely transparent and uses an image in the containing background to fake the select.\n- Opera does not support _apperance_ at all and Firefox only removes some parts but still leaves the element styled when using _appearance:none_\n. [Buttons](http://topcoat.io/Topcoat-Effeckt.css/dist/buttons.html)\n\n[List Scroll](http://topcoat.io/Topcoat-Effeckt.css/dist/list-scroll.html)\n\n[Modals](http://topcoat.io/Topcoat-Effeckt.css/dist/modals.html)\n\nSeparate pages are better for benchmarking. Which I am still thinking about how it should be done.\n. @jonschlinkert what I did now was to remove from the layout.hbs the logo animation and all of the extra parts so that each individual page is at its basic. It would be nice to setup another task that creates different pages just for benchmarking (it would be easier to keep the fork up to date, no manual merges etc). \n. Added \n\n[Off screen navs](http://topcoat.io/topcoat-effeckt/dist/off-screen-navs.html) and [List items](http://topcoat.io/topcoat-effeckt/dist/list-items.html) going to get these into the benchmarking page as well. \n\nInterested in doing some nice user example/ui bits with some of these effects. What is the best way to extract a certain effect/animation from the Effeckt library ?\n. @jonschlinkert I'll be using chromium's Telemetry tool.\n\nThe generated page should only include the element that we are going to test (having the same element multiple times w/ different effects is ok, but having things not related to the element like animated logo, or extra markup is not because it increases the page load time and might affect scrolling results as well).\n\nAlso a method of including the element more than it appears in the demo page would be nice. For example when benchmarking the button element for Topcoat we generate it in the page 200 times to get a considerable load and actually see some difference, same could be for scrolling lists where we might want more elements in the `<ul>`\n. Looking forward to collaborate. And congrats! :)\n\nOn Sat, Aug 10, 2013 at 1:42 AM, Jon Schlinkert notifications@github.comwrote:\n\n> @piatra https://github.com/piatra very sorry for the late reply, and\n> thanks for the additional detail.\n> \n> based on your description it sounds like assemble is a good fit. I'll put\n> a quick example together this weekend and link it up here and we can go\n> from there.\n> \n> and just a heads up, my wife is due in the next couple of weeks so any day\n> now I could be off changing diapers somewhere :-). so I'm pinging @doowbhttps://github.com/doowbon this in case you need help with anything. Assemble is pretty easy to use\n> but we've released a few features recently that we haven't even had a\n> chance to document yet...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/318#issuecomment-22429466\n> .\n\n## \n\nAndrei Oprea\n. @jonschlinkert that is great! I'm now working on a grunt task to help make testing easier and I will base it off your examples.\n. I've been looking into this. Telemetry allows you to define interactions with the page while benchmarking. As an example see this [gist](https://gist.github.com/piatra/6080022) I used it to benchmark the buttons.html page.\n\nI think it makes more sense to benchmark individual pages (modals.html buttons.html etc) this way we can define specific interactions for each of the page and we can separate the results (it's nice that Effeckt.css is already setup to work like this). Some example of interactions that you can define: clicking on buttons, waiting for a specific period of time or for a phrase in the page, scrolling through lists or executing javascript into the page (to give some examples)/\n\nSince the results are Telemetry output they can be integrated into Topcoat Server with 0 overhead. I'll set up a special page for this and will start recording data.\n\nIf you have any suggestions about the sort of benchmarking that would be relevant I would love to hear.\n. The page is up \nhttp://bench.topcoat.io/view/effeckt\n\nNot a lot to see...yet! I'll have the rest of the components benchmarked today.\n. @kristoferjoseph we could announce it and I will be adding new components as we go. What do you think ? \nBtw we launching tomorrow ? \n. :metal: \n. nvm I didn't know we were doing this.\n. Thanks! You are right about using percentages, I'll look into that. \nVendor prefixes are something we would like to drop entirely and using the build process you can then specify the browsers you are interested in and have the tool add the prefix for you. I will remove the `-webkit-`.\nVertical alignment can be achieved in a similar manner but I think a fix height is required. \n. No problem. I updated overlay to use percentages. \n\nSteps to use a **nightly** build:\n1. Clone the component (or pull latest version)\n2. Clone the [theme repo](github.com/topcoat/theme)\n3. `cd topcoat-theme` && `npm link`\n4. `cd topcoat-<component>` && `npm link topcoat-theme`\nThis way you will make sure that you have the latest variables. \nLet me know if there are any other problems.\n. If you would like, you can sign our [CLA](http://topcoat.io/dev/topcoat-cla/) and make a pull request \n. Overlay will be updated for the next version.\n. You should not be running the topcoat grunt task anymore. The new architecture should use npm to install `\"topcoat-input-base\": \"~0.3.0\"` for the input-mixin dependency\n. Yeah we are aware of that will be fixed in the next release. You should try to build Topcoat yourself to fix that. \n1. Clone the Topcoat repo & the theme repo.\n2. In the theme repo `npm link`\n3. In the Topcoat repo `npm link topcoat-theme`\nThan just run npm install & grunt \n. Glad it helped. We now added a unit test for missing variables so things\nlike that will not go unnoticed in future releases.\n\nThanks\n\nOn Sun, Aug 4, 2013 at 6:56 AM, Christopher Martin <notifications@github.com\n\n> wrote:\n> \n> Hi @piatra https://github.com/piatra thanks for the tips, they were\n> helpful in getting me started (I didn't know about npm link, pretty\n> handy).\n> I ran into one hiccup, the Topcoat repo uses ./src/theme/theme-0.4.0/instead of the linked theme module. Changed the topcoat options themePath\n> in the Gruntfile.js to the theme module and was good to go.\n> \n> Here's a diff of the variable changes I made to fix the missing ones:\n> cgmartin/theme@2cfb36bhttps://github.com/cgmartin/theme/commit/2cfb36b2f6b17efe0ba961fe4aab7481a3127997\n> \n> Most of them look very similar to other vars in the variable files. Not\n> sure if they are a problem with the theme variable files or how they're\n> named in each the component styles. Hope the diff helps narrow things down\n> further.\n> \n> Cheers\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/334#issuecomment-22066853\n> .\n\n## \n\nAndrei Oprea\n. Looks great. Dunno how these things work but could you also add the hex inside the square ? \n. How does this look ? I just specified font and img. \nhttps://github.com/topcoat/topcoat/commit/4ff96046052b68fc35a70d9e07f685cc88581a3f\n. I've updated the 0.6.0 branch not master. Pull that branch and give it a try. It worked for me, and copied css, fonts and images. Topcoat 0.6.0 will be architecturally different so now it actually scans `node_modules/topcoat-<component-name>/...`\n\nAbout my comment, it is not really related to the grunt telemetry copy. If you are not benchmarking Topcoat, you should be running `grunt telemetry-submit` from the project you want to benchmark. Telemetry-submit uses git log to submit the SHA of the project and that way you can version the benchmark result.\n. Thank you for the pull request but I cannot merge this. You changed the output CSS, instead you would have to make the pull request against https://github.com/topcoat/search-input as the source files from there get compiled.\n. I'm not sure about the preloading the issue did not come up so far. I'll have to get back to you with an answer.\nOtherwise the pull req look good. Please [sign our CLA](http://topcoat.io/dev/topcoat-cla.html) if you haven't already before I can accept the pull req.\n\nThanks.\n. Great. Then all there is to it is just capture that event that overflows the stack and display an appropriate error message.\n. You can do this. Kinda.\n\n```\nvar jades = grunt.file.expand('node_modules/topcoat-*/test/perf/topcoat_*.jade');\n```\n\n```\nreturn \"release/css/topcoat-\" + platform + \"-\" + theme + \".min.css\";\n```\n\nThe grunt task just takes what it finds in the node_modules folder. The perf html & css.\nSo you can npm link the dev component you're working on and run grunt telemetry. Is there a need for a grunt task that you can drop in a component repo and just run the test on that component ?\nWhat's missing is a grunt task to actually start the tests so you don't have to remember weird parameters. \nThere is definitely a wiki page that should get updated and I'll post that here.\n. Yes. A lot. Right now I have to update the topcoat repo which doesn't\nfeel right + npm dependencies that are not topcoat specific. That will\nrequire modifications to jenkins but hoefully will save time in the\nfuture\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Awesome. We also need to update the Jenkins tasks to work with npm now. Do\n> you think publishing the telemetry grunt tasks would help with both of these\n> issues?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/352#issuecomment-22768756\n\n## \n\nAndrei Oprea\n. Why don't we https://cdnjs.com/  ? could be done before 0.7.0\n. I've added checkbox and fixed the failed builds but I'll have to go\nthrough that again and add the grunt plugin. Best part: does not have\nto be a component dep it will be specified in the jenkins build. We\nwant that right? How does grunt-topcoat-telemetry sound?\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Jenkins is still configured to work with the github urls. We need to update\n> this to use npm install. I'm wondering if we should publish the telemetry\n> tasks as well as look into assemble to help with this.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/356\n\n## \n\nAndrei Oprea\n. Ya. We should. I'll think about how we can separate the logic and post\nan return w/ update.\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Excellent. grunt-topcoat-telemetry sounds fine. What about something more\n> generic so we can add other benchmarking systems grunt-topcoat-benchmark?\n> grunt-topcoat-perf?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/356#issuecomment-22774061\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/topcoat-grunt-telemetry\n\nThe issue I'm running into now is that I'm expecting to build the test pages off the index.html, I created an extract-helper that gets just the body of the document, this works fine for search-input for example but the button example is really big and includes css snippets. What will be the norm across the repos ? Will the index.html be simple, with just an example of how the components work ? Otherwise I will have to keep a /test folder in each repo.\n\nMakes sense to have a simple index.html folder because we have topdoc and can generate the styleguide on the fly (same for people using Topcoat). \n\nWhat do you think ?\n. Got it. We can still drop the jade dependency.\n. Fixed! Thanks :)\n. Done :)\n. I really like the new syntax. Any recommendations for iframe ? \n. https://github.com/topcoat/search-input-base\n\nnow making a codepen... http://codepen.io/Topcoat/full/Kgbtn\n\nhttps://github.com/topcoat/search-input-base/commit/2f327aa15c71459fb2a535b3dc730b495d819732#L4L-1\n. http://manuel.manuelles.nl/blog/2011/12/22/shrinking-your-git-repository/\n\nUsing the script in that article I could track down some culprits for why Topcoat is around 60mb for example.\nWe used to have .psd files _design/TopCoat-Mobile-Sample-Usage.psd_ that were even moved from one folder to another. The files are in our git history and because of the move they are duplicated as well. We should consider erasing those commits.\n. All pages have a /test folder where people can see the test pages for the components. \nThe blog post goes into more details http://topcoat.io/posts/benchmarks/ \n\nI'll see how I can include more information in the bench.topcoat.io pages.\n. Looking into it.\n\nSo in the design it says that the difference is font-size & line height. Dimensions should be the same. But yeah variables are still broken. \n. My updates are inline. Review comment or modify if needed \nAlmost all of the updates depend on a version bump of topcoat-theme. Tests will fail until new version is published on npm. Use npm link to test locally.\n. - [x] [Button](http://topcoat.io/button/)\n- [x] [Icon Button](http://topcoat.io/icon-button/)\n- [x] [Checkbox](http://topcoat.io/checkbox/)\n- [x] [List](http://topcoat.io/list/)\n  - the list component does not exist in the psd\n  - mobile and desktop look very similar\n- [x] [Radio button](http://topcoat.io/radio-button/)\n- [x] [Search input](http://topcoat.io/search-input/)\n- [x] [Text input](http://topcoat.io/text-input)\n- [x] Textarea\n. Yeah. Saw what you did Garth for button did the same :)\n\nOn Wed, Aug 28, 2013 at 4:27 PM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> I'm just using topdoc to rebuild to the root directory.  Much easier.\n> \n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Wed, Aug 28, 2013 at 3:36 AM, Andrei Oprea notifications@github.com\n> wrote:\n> \n> > - [ ] Button\n> > - [ ] Checkbox\n> > - [ ] List\n> > - [ ] Radio button\n> > - [ ] Search input\n> > - [ ] Text input\n> > \n> > ## \\- [ ] Textarea\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/377#issuecomment-23404999\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/377#issuecomment-23413603\n> .\n\n## \n\nAndrei Oprea\n. Aware of that but the VM that is running the tests is using the older version at the moment. The changes are reflected in the grunt task for telemetry that I'm working on https://github.com/topcoat/topcoat-grunt-telemetry.\n\nThanks.\n. What should main point to ? /demo/index.html ? Will update the ^list as I go\n. :beers: \n. Blocker-ish issues:\n- the CI server needs to be on an updated version of chromium. Otherwise there would be great inconsistencies between dev and production and would have to maintain two different branches. (Also the current one does not support interaction in the tests and we want that especially for Effeckt + Topcoat)\n- I updated chromium source today myself (on my local machine) and **loading** test that we are currently testing disappeared (probably renamed) will need to find equivalent and update the code\n- the CI server does not have a git clone of the source, it's just a tarball most likely (so update will have to be done manually ?)\n. Thanks!\n. Made the necessary changes to topcoat-theme & topcoat-switch\n. Quick mention about the overlay codepen\n- it uses the centering advice from here http://codepen.io/shshaw/full/gEiDt and as far as I could tell the only caveat is the need for `min-*` properties. Not sure what the best values are so I think it's worth discussing.\n. a bit too fast maybe ? \n. We are actually considering Rework https://github.com/visionmedia/rework it's\ncloser to vanilla css (which is good because there is no barrier of entry\nfor contributions) and it also has mxins and css variables support.\nRight now its running with stylus which has all of the things you\nmentioned, we have a github repo just for theme specific variables. We use\na grunt task to build our release which does all of the versions ( mobile\nand desktop both dark and light) and could easily be customised to make\ntargeted releases ( that is a thing we want, having for instance a ios\ntargeted release with just the webkit vendor prefixes which you can use in\nyour phonegap app)\nWe are getting there :)\n\nOn Tuesday, September 24, 2013, DennisJohnsen wrote:\n\n> I recommend turning it into LESS instead. That way you could use\n> variables, extend and more to optimize the CSS.\n> \n> Also add a config file, in which you can easy state by true/false if you\n> want the dark theme, mobile light etc.\n> \n> Also the ability to nest your selectors works totally awesome with BEM.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/409\n> .\n\n## \n\nAndrei Oprea\n. @kristoferjoseph you mean 37 & 41 right ? because line 44 is not a duplicate.\n. should this be across several files ? \n. Can you provide some code example ? It's hard to tell what is really happening there due to the bad rendering.\n. I'll give it a try hope I can get to the bottom of it.\n\nOn Sat, Oct 5, 2013 at 2:29 AM, Yarlen V\u00e1squez notifications@github.comwrote:\n\n> hello, this is the method where I am adding controls to my div, but i was\n> unable to reproduce on web browser, obly happends in phonegap application\n> scrolling\n> \n> createLightSensor: function (lightSensor, container) {\n> \n> var $article = $('<article class=\"component\"></article>');\n> container.append($article);\n> var $header = $('<header><h2>Control de iluminaci\u00f3n ' +\n> lightSensor.name + '</h2></header>');\n> \n> var $section = $('<section class=\"component\"></section>');\n> \n> $article.append($header);\n> $article.append($section);\n> \n> var $slider = $('<input id=\"L-' + lightSensor.address + '\"\n> type=\"range\" min=\"0\" max=\"100\" class=\"topcoat-range\">');\n> \n> $section.append($slider);\n> $section.append('</br>');\n> $section.append('</br>');\n> $section.append('</br>');\n> \n> var $buttonbar = $('<div class=\"topcoat-button-bar\"></div>');\n> \n> $section.append($buttonbar);\n> \n> var $togglecontainer = $('<div\n> class=\"topcoat-button-bar__item\"></div>');\n> var $togglelabel = $('<label class=\"topcoat-switch\"></label>');\n> var $toggleinput = $('<input type=\"checkbox\"\n> class=\"topcoat-switch__input\"/>');\n> var $togglediv = $('<div class=\"topcoat-switch__toggle\"></div>')\n> $togglecontainer.append($togglelabel);\n> $togglelabel.append($toggleinput);\n> $togglelabel.append($togglediv);\n> \n> var $buttonSeparator = $('<div class=\"topcoat-button-bar__item\n> separator\"></div>');\n> \n> var $buttondownContainer = $('<div class=\"topcoat-button-bar__item\n> \"></div>');\n> var $buttondown = $('<button\n> class=\"topcoat-button-bar__button\">-</button>');\n> $buttondownContainer.append($buttondown);\n> \n> var $buttonUpContainer = $('<div class=\"topcoat-button-bar__item\n> \"></div>');\n> var $buttonup = $(' <button\n> class=\"topcoat-button-bar__button\">+</button>');\n> $buttonUpContainer.append($buttonup);\n> \n> $buttonbar.append($togglecontainer);\n> $buttonbar.append($buttonSeparator);\n> $buttonbar.append($buttondownContainer);\n> $buttonbar.append($buttonUpContainer);\n> \n> this.setSensorAttributes($slider, lightSensor.address, 'L', '127');\n> this.setSensorAttributes($toggleinput, lightSensor.address, 'L',\n> '127');\n> \n> $($slider).change(function () {\n> console.log($(this).val());\n> var newValue = $(this).val();\n> requestController.sendNewSensorState($(this), newValue);\n> });\n> \n> $($toggleinput).on(\"change\", function () {\n> \n> var newValue = 'off';\n> if ($(this).is(':checked')) {\n> newValue = 'on';\n> }\n> \n> requestController.sendNewSensorState($(this), newValue);\n> });\n> \n> $($buttonup).click(function () {\n> console.log('LUP');\n> \n> var newValue = $('#L-' + lightSensor.address).val();\n> newValue = parseInt(newValue) + 1;\n> \n> if (newValue > 100) {\n> return;\n> }\n> \n> $('#L-' + lightSensor.address).val(newValue);\n> requestController.sendNewSensorState($('#L-' +\n> lightSensor.address), newValue);\n> });\n> \n> $($buttondown).click(function () {\n> console.log('LDOWN');\n> \n> var newValue = $('#L-' + lightSensor.address).val();\n> newValue = parseInt(newValue) - 1;\n> \n> if (newValue < 0) {\n> return;\n> }\n> \n> $('#L-' + lightSensor.address).val(newValue);\n> \n> requestController.sendNewSensorState($('#L-' +\n> lightSensor.address), newValue);\n> \n> });\n> \n> },\n> \n> 2013/10/4 Andrei Oprea notifications@github.com\n> \n> > Can you provide some code example ? It's hard to tell what is really\n> > happening there due to the bad rendering.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/419#issuecomment-25736232>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/419#issuecomment-25736865\n> .\n\n## \n\nAndrei Oprea\n. Ok I've tried your code and it works fine, markup & code. Could you check on the phone browser to view your app ? Curios to see if its a browser issue or maybe something happens after you package it.\n. The plan for Topcoat in future releases is to be able to add vendor specific properties in custom builds. This is such an example that will be included. \n\nFor now you'll have to include it yourself.\n. https://github.com/topcoat/switch/pull/7\n. I think I have this issue fixed \n![screenshot from 2013-12-13 13 09 08](https://f.cloud.github.com/assets/810040/1741640/06a64b50-63e7-11e3-8168-b06a09aed854.png)\n\nWill submit a pull req :)\n. Hey,\n\nShouldn't this feature be implemented natively by the browser when you\nuse input type=search?\n\nOn 12/26/13, Artemij Fedosejev notifications@github.com wrote:\n\n> Search input element has \"search\" icon at the beginning, but no clear search\n> icon/button at the end that could be used to clear input's value.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/467\n\n## \n\nAndrei Oprea\n. Super weird. Think I have it figured out. Not actually related to the `<form>`. \nMy take: the radio button is somewhere in the top left corner of the button and it sometimes hijacks your click. Needs to be hidden behind the button or have `pointer-events:none;`\n\nMade a pen http://codepen.io/piatra/pen/sGJum\nTry adding `pointer-events:none` to the `input`\n\n/cc @kristoferjoseph @GarthDB \n. Thanks for the checklist @GarthDB I updated inline. I'll await a review on the first component before tackling the rest. \n. Yes there is. I removed line-height/height and increased the padding variable for that component.\n. I updated the variable in theme-mobile-\\* and used npm link. I also updated the tests to match the output. Is that what you're asking? \n. I didn't add anything new just updated the vars. Should I make a pull req for vars as well? Is it required for a review? \n. This is only my answer, @dam or @GarthDB  might know better.\n\nIt's because of the BEM (block element modifier) pattern that Topcoat uses as a CSS pattern.\nAll components should behave exactly the same everywhere you place them in the page (not relative to parents) this way you won't have any surprises and if you use a styleguide copy-pasting from the styleguide will result in the same output.\nIf you want a smaller component for a specific region you just make one with smaller font-size.\nYou might end up having\n\n```\nalert-box,\nalert-box--small,\nalert-box--tiny {\n  // all share the same CSS\n}\n\n/* and then */\n\nalert-box--tiny {\n  // only specific rules for size\n  // set width\n  // height\n  // font-size\n}\n```\n\nChances are you are going to need that small component someplace else in the future, either way it's an extra 5-6 lines of CSS with the benefit of having a static component that won't change if you move it around.\n. Depends on what your target browser is. \nBest case this: https://twitter.com/brianleroux/status/390573495479840768 would work everywhere. Topcoat will not include any js libraries for performance reasons and it also means you can use any library you wish :)\nNice work with **remove-hover** I guess it can easily be included in any workflow (grunt, gulp, shell script, whatev)\n. I've been working on Topcoat since day 0. I do not represent Adobe\nthat is why I did not respond to this thread, but I have to ask how\ndoes Adobe representing the project bring more value to it?\n\nOn 5/15/14, RobertCZ notifications@github.com wrote:\n\n> not good this radio silence - maybe it's time to check something else - any\n> recommendation?  ionic looks really promising...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/494#issuecomment-43220037\n\n## \n\nAndrei Oprea\n. This cannot be done in HTML. From my tests the `min` attr has to be smaller than the `max` attr so you cannot have `min=100` and `max=0` but what you could do is use a regular input from 0 to 100 and have something like this in your JS\n\n```\nvar value = 100 - input.value;\n```\n\nYou would invert the value and get your desired output\n. I'm closing this. Let me know if there is anything else.\n. The website is down because the testing infrastructure isn't in place anymore. It will return.\n. @GarthDB hey! Sure thing! Feel free to hit me up on hangouts or Twitter DMs.\n. I'm happy to get started with this. What grid system are we going to use ? \n. Did not know about this website http://aviary.com/ turns out it has a nice api we could use if we still wanted the Instagram app :)\n. The current tests check the numbers of ops/sec for various elements. I was thinking of setting a baseline for an element to be considered acceptable. I should have a server that aggregates test results up and running pretty soon (nodejs running on heroku or nodejitsu with a mongodb, how does that sound?) and once we have some data we could  start comparing results on different platforms and decide this baseline. Is it a correct approach ? \n. Ok so I updated the tests\nI've created a nodejs test server with \n\n``` javascript\nres.header(\"Access-Control-Allow-Origin\", \"*\");\n```\n\nSo anyone running the tests, even locally, sends the data to http://topcoat.jit.su/view/db\n (it's still work in progress haven't tested on mobile yet) but we can start looking into actual benchmarks from now on cus we can now store the results. I'm looking into headless testing w/ phantom and progress indication\n. Totally, can you share that account ? Also I have some questions about benchmarking. I'm going to continue this on the google group\n. For fun and science I'm doing visualisation/reports for the benchmarks http://i.imgur.com/dHv5j.png\nExplanation:\naxis X is ops/sec\naxis Y the test\nand the value you get when hovering over a bubble is the #number of tests which were in that vicinity (i.e. 1 test ran at 90.xxx ops/sec; 2 test ran at 53.xxx);\n\nhttp://topcoat.jit.su/json/[Browser_Name] outputs a json with all the info to generate the report. \nRight now only Chrome is available so => http://topcoat.jit.su/json/Chrome\n\nhttp://topcoat.jit.su/view/results outputs the graph for Chrome (it's all a little hard coded I only uploaded to make sure it works on the server just as well as localhost) also I was looking for some feedback\n. Right now I'm just building the infrastructure for the tests. For instance when I was referring to ops/sec the test was checking to see if really long lists styled differently can impact performance. For example what happens with a long list  of items that might have box-shadow and rounded corners applied to them. There is definitely a difference and from what I've seen mobile is at least 10x slower than laptops (so everything adds up to a slower interface on mobile).\n\nOnce we get more components we can start wireframing real life apps and hopefully spot the elements that slow down  the application experience (load time, navigation between pages etc)\n. Done, also added their demo page as a startup time test\n. Done\n. Updated scripts now a checkbox decides if the results are submitted. Also if a test is ran directly you get a prompt window (this is for testing mobile devices)\n. Updated README\n. Topcoat is meant to be mobile first tablets second. Bootstrap focuses more on desktop web apps. That's why fat launched Ratchet.\n. Nice :+1: \n. Done\n. Hi! Thanks a lot for the pull request. Unfortunately until there is a Contributor License Agreement (CLA) in place I can't accept any pull requests. Hope this is fixed soon.\n. From what I can see removing\n\n``` css\ndisplay: inline-block;\n```\n\nand\n\n``` css\nline-height: 21px;\n```\n\nLines `352` & `355` (from topcoat.css) removes this issue\n. We no longer have the same component.\n. There is a `Building the src` section in the readme. I don't think there is a watch task I'll try to make one \n. Updated the docs\n. I think this pull request is obsolete.\n. Agreed. I'll close this for now.\n. What are you referring to ? There is something similar under ./test/effects\n. I'll get this. I recently upgraded to 0.4.0\n. Done.\n. Results are send in the command line, spaces should be escaped if any, I'll have to test this.\n. http://bench.topcoat.io\n. @kristoferjoseph I added a grunt task to remove left over .zip files. I saw that point wasn't ticked. It's a pull req waiting\n. I can't reproduce the bug. The ChromiumSrc variable is specific only to task `grunt telemetry` and it does give off an explanatory error message.\nDid you simply run the `grunt` task with no arguments ? What version of grunt/nodejs do you use ? \n. Ok thanks. I'll look into it, I never tested on 0.10 \n. I saw that the theme variation comes first before the name of the component\n\n```\n.dark-text-input,\n.light-text-input\n```\n\nI'm sure there's a reason for this, but imo when writing the CSS class selector I'm first interested in naming the component and then the theme option.\n\nI named the repo `text input` to match the CSS class selector name and also it made more sense to me since it extends `input-base` and there will be a `search-input` as well.\n. https://github.com/topcoat/search-input\n. https://github.com/topcoat/textarea\n. Awesome I can add more benchmarks to bench.topcoat.io\nBut it's not entirely obvious to me how I use this new task. When I run `grunt telemetry` I get the following error\n\n```\nNo jade file is found in src/../test/perf/ Use --force to continue.\n```\n. Awesome :+1: \nI start merging those pull requests\n. Why isn't this a thing yet?\nI'm giving it a shot ! \n. https://github.com/topcoat/generator-topcoat\n. That guide is old and it does not really reflect the state of the current components. The topcoat repo contains all the components all in their own repo. You can generate a styleguide using styledocco. There will be a better view :)\n. Thanks for reporting. I'll look into this.\n. Hi, thanks for your interest. Right now the component isn't available\nsince it needs some refactoring. You can copy the css and use it for\nnow and switch for the actual component when it will be ready.\n\nOn 5/16/13, Thibault Durand notifications@github.com wrote:\n\n> Hi,\n> \n> I want to include the on/off switch in my custom topcoat build but i can't\n> find the repository?\n> \n> Where can i find it?  Do i need to inspect and copy the css rules from there\n> for now?\n> http://topcoat.io/topcoat/doc/mobile.html#m-switch\n> \n> Thanks for this great project.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/195\n\n## \n\nAndrei Oprea\n. From what I can see the div with `topcoat-navigation-bar__item right quarter` is responsible for this. It captures the users click because it overlaps the search input. I think the div should sit on the right side of the `Header` but it flows on the next row. It's not really the input fields fault here. I'll try to see how I can fix this.\n. I've found a fix for this. Hopefully I'll return with an update & an explanation for this behaviour :)\n\nYou have to add `white-space:nowrap; word-spacing:0;` to the parent container of the `divs` namely `.topcoat-navigation-bar`\n\nHere is a working example http://codepen.io/piatra/pen/nilxF\n. Anyone is welcomed to make a pull request against the theme repo. We have a\nvariables.styl folder from which all the components inherit the base font.\nAny changes will definitely land in the next release :)\n\nOn Wednesday, May 29, 2013, Andre wrote:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/206#issuecomment-18627879\n> .\n\n## \n\nAndrei Oprea\n. I think this is possible with the components we have in this version. Could\nyou give more details?\n\nOn Monday, July 15, 2013, SidneyS wrote:\n\n> Any progress on this? I'm currently deciding on using App-UI or Sidetap\n> just for this :-(\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20946781\n> .\n\n## \n\nAndrei Oprea\n. Hi, @SidneyS . I made a quick demo http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n. @Smart-Thinker It's the part at the end of the CSS area, I've added a \n\n```\n/* Extra bits from here on */\n```\n\nto mark the beginning. \n. The input base had the values for font family and size 'hard coded'\nin. I changed that to a variable with the same value as the theme file\nso that builiding this component on its own wouls result in the same\noutput as building topcoat.\n\nOn 5/30/13, Kristofer Joseph notifications@github.com wrote:\n\n> Font properties should come from the theme cascade.\n> Was there an issue that required us to add it to the input-base? If so I\n> would like to get to the bottom of it.\n> \n> https://github.com/topcoat/input-base/blob/master/src/mixins/input-mixin.styl#L10\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/214\n\n## \n\nAndrei Oprea\n. Now the output is the same no matter how you build it but you do have extra lines of CSS\n. Closing issues https://github.com/topcoat/input-base/commit/b2e0c0103b799fe3ce13cb575c43cf9ee42730eb #productive\n. Make sure that the page url inside the topcoat_button-base.test.json `\"url\": \"file:///topcoat/topcoat_buttons.html\"` has the correct path to the CSS. You can test this by running the telemetry test, opening the DevTool console (this will stop telemetry from running the test and closing the browser window) afterwards you can inspect the page source for broken links. Its definitely a path issue.\n. Look at the `/page_sets/top_25.json` (chromium/home/src_tarball/tarball/chromium/src/tools/perf/page_sets) Your topcoat_button-base.test.json must have the same format. For example\n\n```\n{\n  \"url\": \"http://techcrunch.com\",\n  \"why\": \"top tech blog\",\n  \"smoothness\": {\n    \"action\": \"scrolling_action\"\n  }\n}\n```\n. Should I be assigned ? \nMeanwhile I'm doing what @nnnnic said :)\n\n---\n\nUpdates\n\nI've extracted everything everything that is related to the structure of the overlay background and box into mixins: an overlay base with the overlay box, and the overlay background (i kept the shadow and bg color for this, I think it's relevant for perf testing).\n\nI've removed everything related to text style and size. Right now the component also contains some style for an h1 which is the title of the overlay, I'm sure this isn't right but without it the component doesn't make sense so I kept it until we find a better place to put it (another component for headings ?)\n\nAnd the guide will show the Yes button on the right :)\n. I think this issue should be closed. We have \nhttps://github.com/topcoat/overlay\nhttps://github.com/topcoat/overlay-base\nThey just need a review :)\n. Its due to the fact that node 0.10 is not fully supported yet by all\nmodules. I myself had to downgrade to be able to develop on Topcoat. Try to\nuse something like nvm (node version manager) to switch easily between\nversions.\n\nOn Monday, June 3, 2013, Jorge Pedret wrote:\n\n> I had the exact same issue, I showed it to @kristoferjosephhttps://github.com/kristoferjosephat jsconf. As soon as I changed to v0.8.x, it worked perfectly.\n> \n> Haven't tried it using 0.9 though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/221#issuecomment-18866502\n> .\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/search-input/commit/dbff3c92a785ca67b1671251348c89e3b0ee8703\n. The blog is at http://topcoat.io/blog/\n\nThe link is visible in the menu of the main page http://topcoat.io\n. We have the https://github.com/topcoat/icon-button repo. \n![screen shot 2013-06-04 at 2 52 51 pm](https://f.cloud.github.com/assets/810040/605171/52ff0918-cd0d-11e2-977d-ee5d64d18b2e.png)\n\nWith the that component. Is this what you are looking for ?\n. This is updated in the grunt-telemetry task but we need to update the CI\n\nYinan Liu notifications@github.com wrote:\n\n> I think it's still opened. I haven't got the chance to update the chromium bits for telemetry.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/227#issuecomment-22911116\n. Font size, weight and such are controlled via stylus variables, its\neasy to change/customise\n\nOn 6/6/13, Brian LeRoux notifications@github.com wrote:\n\n> http://cl.ly/image/3e051R153F1U\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/238\n\n## \n\nAndrei Oprea\n. Thanks. I'll have a look now :)\n\nOn Tue, Jul 9, 2013 at 5:29 PM, kombucha notifications@github.com wrote:\n\n> Hi,\n> \n> I'm using topcoat v0.5.1, and I've noticed this same issue in numerous\n> places.\n> For example, in topcoat-desktop-dark.css:\n> \n> background-color: var-background--focus;/\\* ... _/font: var-font--large;/_ etc */\n> \n> Cheers\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/246#issuecomment-20677649\n> .\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/radio-input/commit/4cd81307dc2fc37ac89d46d6304c134306c353ac\n. https://github.com/topcoat/checkbox/commit/332c91f2eec234848d95f1bd889716cea026ba13\n\nThis commit should solve it. I updated the grunt-topcoat version. You should probably remove your entire node_modules folder before trying just to be sure no cache gets in the way :)\n. First thing that comes to mind is that `var-font` should not be included at all. I'll make the tweaks necessary for the background variable in the theme.\n. I've added the radio background https://github.com/topcoat/theme/commit/e5eac29f28820a23b094b6319325f08ea12c926a\n. @nnnnic I sense a great deal of back and forth emails\n. Looks great!\n\nOn Wednesday, July 17, 2013, Kristofer Joseph wrote:\n\n> So sweet.\n> \n> Kristofer\n> \n> On Tue, Jul 16, 2013 at 3:13 PM, nnnnic <notifications@github.com<javascript:_e({}, 'cvml', 'notifications@github.com');>>\n> wrote:\n> \n> > Here's a quick restyling of what's already up. Full design is coming at\n> > a\n> > later date.\n> > \n> > I wonder if we could eliminate the need to drill into a detail view by\n> > just allowing people to just use the side nav. It seems like the only\n> > thing\n> > we gain from clicking on \"detail\" currently is a little more real estate\n> > for the graph.\n> > \n> > [image: tc-benchmark_main]<\n> > https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png>\n> > \n> > [image: tc-benchmark_detail]<\n> > https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png>\n> > \n> > [image: tc-benchmark_mobile]<\n> > https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png>\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/268#issuecomment-21078203>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/268#issuecomment-21078291\n> .\n\n## \n\nAndrei Oprea\n. I made a pull request. https://github.com/maxogden/flavors/pull/4\n\nGlad it's not a Topcoat issue :beer: \n. I have done a lot of research on this matter when I first started. I mostly looked into common patterns such as side menus that slide in, scrolling lists etc. I've worked even on old version of 2.\\* android and things run smoothly, that is until you hit the MSPointer Event wall.\n. Not sure if automation is absolutely necessary. Not that many components get added in, so it could be done manually. Also being automated it would be a little tricky to guess the naming convention of future components and people could take advantage of this and submit fake benchmarks (or even by accident) since the server is open.\n. I created a test for input-text component. http://jsperf.com/css-performance-test/6\nHere are my results. Fancy is completely styled, base is our base component, and simple in this case is w/o box-shadow or border-radius. Should I make the same for all component ? \n![screen shot 2013-06-27 at 1 25 20 pm](https://f.cloud.github.com/assets/810040/715204/ee85240e-df13-11e2-9351-58eac8e5707c.png)\n. Probably from all the components. I'll have a look at that.\n\nOn 6/27/13, Garth Braithwaite notifications@github.com wrote:\n\n> In the release css file it is in there a ton.\n> \n> https://github.com/topcoat/topcoat/blob/master/release/css/topcoat-desktop-dark.css\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/283\n\n## \n\nAndrei Oprea\n. Have you checked out my pull req ? https://github.com/topcoat/topcoat/pull/286\nI simply ignore the comments from the components and include it a single time\n. This works. Don't think it's the most `pretty` solution. Could replace the `copyright.styl` from tasks with a grunt-task that temporarily makes a `copyright.styl` file somewhere in ./src and then remove it. Open for discussion.\n. Ok I added a grunt task that simply copies the copyright file in /src. Now the copyrights from each of the components are ignored (this was causing the repeat) and just the one in /src is included (properly at the top of the release .css). I think it's fine to be in /src because it gets caught by the clean task and gets removed in the end.\n\ncc @GarthDB @kristoferjoseph \n. Thanks ! \n. Yeah probably. I will revert it, thanks :+1: \n\ncc @kristoferjoseph #:beer: ?\n. @bennybennet we have an overlay component. check it out https://github.com/topcoat/overlay\n. https://github.com/topcoat/overlay/commit/9b03acb91d691a8c23d777d3537be2b34297a5b1#commitcomment-3556301\n\nI'll have to check and make sure\n. Found the issue. It was a combination of the comment above and the fact that the HTML was indented using tabs and not spaces. Now topdoc correctly generates the guide for the component. Problems is that is the modal is positioned absolute.\n. Awesome idea. I'll do that\n\nOn 7/3/13, Garth Braithwaite notifications@github.com wrote:\n\n> Maybe put the example in an iframe?\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Wed, Jul 3, 2013 at 4:54 AM, Andrei Oprea notifications@github.com\n> wrote:\n> \n> > Found the issue. It was a combination of the comment above and the fact\n> > that the HTML was indented using tabs and not spaces. Now topdoc correctly\n> > generates the guide for the component. Problems is that is the modal is\n> > \n> > ## positioned absolute.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/290#issuecomment-20408182\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/290#issuecomment-20428757\n\n## \n\nAndrei Oprea\n. I've tried it, but that would mean extra markup that would also be visible to the user. I was thinking that our template used for generating the usage guidelines could include a .js script that could simply disable the position:absolute property of the element. Markup and CSS remain the same. And the script could be used later on for other such components.\n. Gave it a shot with iframes came across some issues.\n- [x] overlay variables missing from theme\n  - https://github.com/topcoat/theme/commit/fbb1f05ffc6f78704da580a2768dabc592ab5476\n- [x] including the topcoat-overlay.html page in an iframe still requires some js (to scroll into view)\n- I was thinking that the js could be included in the comments alongside the html but using topdoc it could be hidden away\n  - ~~I'm working on a pull request for that to see how it goes~~\n  - https://github.com/topcoat/usage-guide-theme/pull/2\n- [ ] ~~pages generated by topdoc (topcoat-[component name].html) have broken links to .css files and they are not styled~~\n. Thanks :)\n. https://github.com/topcoat/textarea/commit/892bc615ff8fb18c4577e52a838fcee10fb68a1c\n\nfixed\n. It was just a dependency issue in the package.json it's fixed now\n\nhttps://github.com/topcoat/range-input/commit/4209277b7d630aa9a855b2e5a55425e0de01401a\n. I've added as a test, the textarea component to travis ci so that I get notified and manage these things before an issue gets submitted. What do you think should I do the same for all the components ? Might be an overkill but most of the time it's not really a problem it is just that the expected .css has not been updated.\n\n[![Build Status](https://travis-ci.org/topcoat/textarea.png)](https://travis-ci.org/topcoat/textarea)\n. I've came across a node module that does pixel testing, draws the page to a\ncanvas and compares to an image. Is that something we might be interested\nin ?\n\nOn Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux notifications@github.comwrote:\n\n> I like this too. Its a good safety net. The test itself feels a little\n> synthetic. I wonder if we can create something that tests intent rather\n> than just expected output?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684410\n> .\n\n## \n\nAndrei Oprea\n. It would be cool if it could test for telemetry metrics and report if\nthe time increased. Seems useful to me. And we could implement it\nsince Yinan made the CI server\n\nOn 7/9/13, Brian LeRoux notifications@github.com wrote:\n\n> no, that would be slippery and difficult to maintain given the breadth of\n> devices. again, very hesitant to add to the testing infra unless things are\n> very measurably helpful to guiding our work\n> \n> On Tue, Jul 9, 2013 at 8:59 AM, Andrei Oprea\n> notifications@github.comwrote:\n> \n> > I've came across a node module that does pixel testing, draws the page to\n> > a\n> > canvas and compares to an image. Is that something we might be interested\n> > in ?\n> > \n> > On Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux\n> > notifications@github.comwrote:\n> > \n> > > I like this too. Its a good safety net. The test itself feels a little\n> > > synthetic. I wonder if we can create something that tests intent rather\n> > > than just expected output?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/topcoat/topcoat/issues/297#issuecomment-20684410>\n> > > .\n> > \n> > ## \n> > \n> > Andrei Oprea\n> > \n> > \u2014\n> > Reply to this email directly or view it on\n> > GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684588\n> > .\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/297#issuecomment-20684757\n\n## \n\nAndrei Oprea\n. Not with Travis. From my understanding the CI server you made tests at every new release of Topcoat, it's only a matter of comparing with the last result and sending an email informing us if the build failed, scored lower or higher in Telemetry.\n. We no longer have grunt-topcoat so I can close this.\n. I'm trying to make the use of the same images only change background-size and other variables. So far its going great. \n\n![screen shot 2013-07-10 at 2 57 18 pm](https://f.cloud.github.com/assets/810040/774449/8e4480ee-e959-11e2-9e99-eea1938a6235.png)\n\n![screen shot 2013-07-10 at 3 12 33 pm](https://f.cloud.github.com/assets/810040/774462/180dc754-e95a-11e2-9495-2a2b61396de7.png)\n\nIs this the way to go ? \n\n/cc @kristoferjoseph \n. Thanks! Fixed.\n. Work in progress !\n\nOn Thu, Aug 1, 2013 at 11:01 PM, Diogenes Buarque Ianakiara <\nnotifications@github.com> wrote:\n\n> +1\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/302#issuecomment-21969336\n> .\n\n## \n\nAndrei Oprea\n. Hi. Sorry about the guide, I will update it now with more detailed information.\n1. Fork https://github.com/topcoat/theme\n2. Modify your local fork and push the updates\n3. Make sure you create a tag for the commit\n\nAn example (that is how I would do it. Might be a better way)\n\n```\n$ git tag -a 0.4.1 -m 'incremented version'\n$ git push --tags origin\n```\n1. Modify the package.json in /topcoat/\n\n```\n\"theme\": {\n      \"YOUR_GITHUB_ACCOUNT/theme\": \"TAG_VERSION\"\n    }\n```\n\nThen when you run `grunt` in the /topcoat/ folder it will pull down your theme.\nLet me know if you run into any trouble.\n\nA quick way to test locally would be to modify the theme files in `src/theme/theme-X.X.X/*.styl` in your local topcoat clone. After that just run `grunt compile` (to skip the download step and use the local files) it will build topcoat with your local changes.\n. For each of the components the process involves fewer steps. If you clone a component you will find a variables.styl file in test/fixtures/variables. Modify that file, then run grunt and the component will build with your new variables.\n. Yes. As I described above you can edit the files in /src/theme/theme_/_.styl and simply run `grunt compile` afterwards.\n. What do you have in mind ? \nThe steps I described are just a couple of clicks in githubs interface and once set up its :cake: to update/make changes\n. We use grunt-topcoat task to download the files. The function that makes the download is \n\n```\nvar downloadResources = function(obj, path, callback) {\n```\n\nIt could be a simple `if` statement that is sets the `path` to your desired location when it sees the `theme` keyword . so it could be something as a .zip  that is hosted anywhere. The stack is not that tightly coupled, you can easily change things to fit your needs imo.\n\nI think I've answered the question so I can close this bug. If you need more info we have https://groups.google.com/forum/#!forum/topcoat\n. Yeah that is because the tag release does not contain them. That bug was 'expected'. @kristoferjoseph said he will bump to 0.5.2 this week and the issue should be fixed.\n. Ahead of you on that one. I started adding unit tests for components\nmissing components :D\n\nOn Thu, Jul 11, 2013 at 10:41 PM, Yinan Liu notifications@github.comwrote:\n\n> This brings me a idea that we could have a script to scan the compiled\n> release CSS files to look for any un-replaced variable, maybe once a day.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/304#issuecomment-20836808\n> .\n\n## \n\nAndrei Oprea\n. @ynliu I think I know why you have missing variables. When I added the variables to the theme repo I changed their names to include the name of the component (if there was something component specific about that variable, like var-modal-bg-color) but the tagged components still have the old name like var-bg-color. So you would need to update the components & the theme version to get the new files. \\* _hopes he's right_ *\n\nThis will happen with the new version. I'm done writing the tests for missing variables and I'm going to make a pull req now. Hopefully we won't have to deal with this from now on.\n. Thanks! I'll look into this.\n. https://github.com/topcoat/theme/commit/ccdab643ba2bf481e8815fbfe5f305512fa7efe6\n. I've made a working example http://codepen.io/piatra/pen/KinxG\nI have added the extra 2 links just to emphasise the focus switch using the tab key. When the checkbox is selected I've made the text bold and underline (just as an example, I was thinking that the images for the checkboxes could become slightly darker or any another visual change). You can use space to check/uncheck. And no js :)\n. Related : https://github.com/topcoat/topcoat/issues/194\n. @nnnnic I tried to update the example to use a box shadow but the sprite image has small border\n\n![image](https://f.cloud.github.com/assets/810040/874917/cd6c5b7a-f895-11e2-86d8-fd1e52c04d9c.png)\n\nI went ahead and edited the sprite and updated the codepen http://codepen.io/piatra/pen/KinxG might need some tweaking for radio-input as well. If everyone agrees I could make a pull request for the components\n. Yeah I totally missed that. Awesome !\n. Made this available for radio input, refactored the component to be CSS only.\n\nChrome & Firefox\n![screen shot 2013-08-01 at 1 42 20 pm](https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png)\n![screen shot 2013-08-01 at 1 42 33 pm](https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png)\n![screen shot 2013-08-01 at 1 42 49 pm](https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png)\n\n@kristoferjoseph have you worked on this ? Should I do a pull req ?\n. @nnnnic if you could add \n\n```\nposition:absolute\nleft:-9999px\n```\n\nI mentioned above I'll check in your component. That way we can simulate a :focus state\n. @nnnnic it should be the `input[type=radio]` that you want to position absolute outside of the page. And when it's focused add the box shadow to the label. (might be a little different on your code but thats the gist)\n\n```\ninput[type=\"radio\"]:focus + .topcoat-radio__label:before {\n   box-shadow: 0 0 3px #6fb5f1;\n}\n```\n\nI've just noticed that you actually expanded on the `input[type=checkbox]` example but I think we will want to use actual radio buttons for the markup. People might feel weird about having a checkbox behaviour on a radio input.\n. Again with the Nyan module issue (although same configs as button base which passes) & with grunt prepublish option from package.json. Log here: https://s3.amazonaws.com/archive.travis-ci.org/jobs/9346038/log.txt\n. sorry ! fixed ! https://github.com/topcoat/topcoat-server/commit/3f0e6ced75642ede09c3c3812dce22f2f0bce77a\nthanks for spotting that :)\n. We could use a workaround, I made a [codepen](http://cdpn.io/FwoJy) where I use a background image on the select element, and for Firefox I used a vendor specific prefix to cancel out the image (and fallbacks to default arrow down). At least this way people can see that it is in fact a `<select>` element and know what to expect when they click on it. I think this solution is good enough for the websites (not for Topcoat).\n. IE 8\n![screen shot 2013-07-25 at 1 03 02 am](https://f.cloud.github.com/assets/810040/852236/0e7a35c0-f4ad-11e2-9da4-cd1e9541dbe9.png)\nOpera curent stable\n![screen shot 2013-07-25 at 1 03 37 am](https://f.cloud.github.com/assets/810040/852237/0e959996-f4ad-11e2-90bf-a2f350d0a31e.png)\nFirefox curent stable\n![screen shot 2013-07-25 at 1 04 07 am](https://f.cloud.github.com/assets/810040/852238/0eafa93a-f4ad-11e2-8748-6ef2d7c85401.png)\nChrome\n![screen shot 2013-07-25 at 1 05 50 am](https://f.cloud.github.com/assets/810040/852241/3a2fa592-f4ad-11e2-9686-8a4f830e3966.png)\n. Agreed. Styling `<select>` elements is highly inconsistent across browsers hence tools like jqueryUI completely replace the element for custom ones made out of divs. It would help if we had a complete image (background color + arrow) it would fix the dimensions of the element.\nI made another iteration. No JS and only one browser specific selector `select::-ms-expand` \n\nhttp://codepen.io/piatra/full/aIujg\n\nIE 10\n![screen shot 2013-07-25 at 11 45 37 am](https://f.cloud.github.com/assets/810040/854497/ad7c1a72-f506-11e2-8025-e52cbfa3c9cf.png)\n\nIE 9\n![screen shot 2013-07-25 at 11 47 29 am](https://f.cloud.github.com/assets/810040/854503/df11bb32-f506-11e2-8f1c-30c6f4e49851.png)\n\nChrome\n![image](https://f.cloud.github.com/assets/810040/854508/ee8b16bc-f506-11e2-9fbc-eadcbd42f618.png)\n\nOpera\n![image](https://f.cloud.github.com/assets/810040/854512/f84ca33c-f506-11e2-82f0-43d21b304f7c.png)\n\nFirefox\n![image](https://f.cloud.github.com/assets/810040/854515/00fff812-f507-11e2-883e-bf9f5f1ae368.png)\n. What I did for bench.topcoat is added an arrow down character. Don't hate me for how it looks its 100% cross browser :fearful: \n\nI could change it. It currently uses an image bg. If you would like you can make a different one. If no one has anything against it I'm going to change it.\n- Just realised it should have two arrows \n. they have bg color. how does one photoshop\n\nhttp://codepen.io/Topcoat/full/pDvJs\n\nThey are rubbish. So to make it work in all browsers you have to have a complete image. That would mean fake the background & box-shadow. \n\n![select bg](http://i.imgur.com/7rGM4IX.png)\n- probably can't see it right because of the white background of github. I'm really not sure it's worth the effort.\n  Here is a really odd approach that is somewhat similar http://jsfiddle.net/danield770/YvCHW/6/\n  It makes the select completely transparent and uses an image in the containing background to fake the select.\n- Opera does not support _apperance_ at all and Firefox only removes some parts but still leaves the element styled when using _appearance:none_\n. [Buttons](http://topcoat.io/Topcoat-Effeckt.css/dist/buttons.html)\n\n[List Scroll](http://topcoat.io/Topcoat-Effeckt.css/dist/list-scroll.html)\n\n[Modals](http://topcoat.io/Topcoat-Effeckt.css/dist/modals.html)\n\nSeparate pages are better for benchmarking. Which I am still thinking about how it should be done.\n. @jonschlinkert what I did now was to remove from the layout.hbs the logo animation and all of the extra parts so that each individual page is at its basic. It would be nice to setup another task that creates different pages just for benchmarking (it would be easier to keep the fork up to date, no manual merges etc). \n. Added \n\n[Off screen navs](http://topcoat.io/topcoat-effeckt/dist/off-screen-navs.html) and [List items](http://topcoat.io/topcoat-effeckt/dist/list-items.html) going to get these into the benchmarking page as well. \n\nInterested in doing some nice user example/ui bits with some of these effects. What is the best way to extract a certain effect/animation from the Effeckt library ?\n. @jonschlinkert I'll be using chromium's Telemetry tool.\n\nThe generated page should only include the element that we are going to test (having the same element multiple times w/ different effects is ok, but having things not related to the element like animated logo, or extra markup is not because it increases the page load time and might affect scrolling results as well).\n\nAlso a method of including the element more than it appears in the demo page would be nice. For example when benchmarking the button element for Topcoat we generate it in the page 200 times to get a considerable load and actually see some difference, same could be for scrolling lists where we might want more elements in the `<ul>`\n. Looking forward to collaborate. And congrats! :)\n\nOn Sat, Aug 10, 2013 at 1:42 AM, Jon Schlinkert notifications@github.comwrote:\n\n> @piatra https://github.com/piatra very sorry for the late reply, and\n> thanks for the additional detail.\n> \n> based on your description it sounds like assemble is a good fit. I'll put\n> a quick example together this weekend and link it up here and we can go\n> from there.\n> \n> and just a heads up, my wife is due in the next couple of weeks so any day\n> now I could be off changing diapers somewhere :-). so I'm pinging @doowbhttps://github.com/doowbon this in case you need help with anything. Assemble is pretty easy to use\n> but we've released a few features recently that we haven't even had a\n> chance to document yet...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/318#issuecomment-22429466\n> .\n\n## \n\nAndrei Oprea\n. @jonschlinkert that is great! I'm now working on a grunt task to help make testing easier and I will base it off your examples.\n. I've been looking into this. Telemetry allows you to define interactions with the page while benchmarking. As an example see this [gist](https://gist.github.com/piatra/6080022) I used it to benchmark the buttons.html page.\n\nI think it makes more sense to benchmark individual pages (modals.html buttons.html etc) this way we can define specific interactions for each of the page and we can separate the results (it's nice that Effeckt.css is already setup to work like this). Some example of interactions that you can define: clicking on buttons, waiting for a specific period of time or for a phrase in the page, scrolling through lists or executing javascript into the page (to give some examples)/\n\nSince the results are Telemetry output they can be integrated into Topcoat Server with 0 overhead. I'll set up a special page for this and will start recording data.\n\nIf you have any suggestions about the sort of benchmarking that would be relevant I would love to hear.\n. The page is up \nhttp://bench.topcoat.io/view/effeckt\n\nNot a lot to see...yet! I'll have the rest of the components benchmarked today.\n. @kristoferjoseph we could announce it and I will be adding new components as we go. What do you think ? \nBtw we launching tomorrow ? \n. :metal: \n. nvm I didn't know we were doing this.\n. Thanks! You are right about using percentages, I'll look into that. \nVendor prefixes are something we would like to drop entirely and using the build process you can then specify the browsers you are interested in and have the tool add the prefix for you. I will remove the `-webkit-`.\nVertical alignment can be achieved in a similar manner but I think a fix height is required. \n. No problem. I updated overlay to use percentages. \n\nSteps to use a **nightly** build:\n1. Clone the component (or pull latest version)\n2. Clone the [theme repo](github.com/topcoat/theme)\n3. `cd topcoat-theme` && `npm link`\n4. `cd topcoat-<component>` && `npm link topcoat-theme`\nThis way you will make sure that you have the latest variables. \nLet me know if there are any other problems.\n. If you would like, you can sign our [CLA](http://topcoat.io/dev/topcoat-cla/) and make a pull request \n. Overlay will be updated for the next version.\n. You should not be running the topcoat grunt task anymore. The new architecture should use npm to install `\"topcoat-input-base\": \"~0.3.0\"` for the input-mixin dependency\n. Yeah we are aware of that will be fixed in the next release. You should try to build Topcoat yourself to fix that. \n1. Clone the Topcoat repo & the theme repo.\n2. In the theme repo `npm link`\n3. In the Topcoat repo `npm link topcoat-theme`\nThan just run npm install & grunt \n. Glad it helped. We now added a unit test for missing variables so things\nlike that will not go unnoticed in future releases.\n\nThanks\n\nOn Sun, Aug 4, 2013 at 6:56 AM, Christopher Martin <notifications@github.com\n\n> wrote:\n> \n> Hi @piatra https://github.com/piatra thanks for the tips, they were\n> helpful in getting me started (I didn't know about npm link, pretty\n> handy).\n> I ran into one hiccup, the Topcoat repo uses ./src/theme/theme-0.4.0/instead of the linked theme module. Changed the topcoat options themePath\n> in the Gruntfile.js to the theme module and was good to go.\n> \n> Here's a diff of the variable changes I made to fix the missing ones:\n> cgmartin/theme@2cfb36bhttps://github.com/cgmartin/theme/commit/2cfb36b2f6b17efe0ba961fe4aab7481a3127997\n> \n> Most of them look very similar to other vars in the variable files. Not\n> sure if they are a problem with the theme variable files or how they're\n> named in each the component styles. Hope the diff helps narrow things down\n> further.\n> \n> Cheers\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/334#issuecomment-22066853\n> .\n\n## \n\nAndrei Oprea\n. Looks great. Dunno how these things work but could you also add the hex inside the square ? \n. How does this look ? I just specified font and img. \nhttps://github.com/topcoat/topcoat/commit/4ff96046052b68fc35a70d9e07f685cc88581a3f\n. I've updated the 0.6.0 branch not master. Pull that branch and give it a try. It worked for me, and copied css, fonts and images. Topcoat 0.6.0 will be architecturally different so now it actually scans `node_modules/topcoat-<component-name>/...`\n\nAbout my comment, it is not really related to the grunt telemetry copy. If you are not benchmarking Topcoat, you should be running `grunt telemetry-submit` from the project you want to benchmark. Telemetry-submit uses git log to submit the SHA of the project and that way you can version the benchmark result.\n. Thank you for the pull request but I cannot merge this. You changed the output CSS, instead you would have to make the pull request against https://github.com/topcoat/search-input as the source files from there get compiled.\n. I'm not sure about the preloading the issue did not come up so far. I'll have to get back to you with an answer.\nOtherwise the pull req look good. Please [sign our CLA](http://topcoat.io/dev/topcoat-cla.html) if you haven't already before I can accept the pull req.\n\nThanks.\n. Great. Then all there is to it is just capture that event that overflows the stack and display an appropriate error message.\n. You can do this. Kinda.\n\n```\nvar jades = grunt.file.expand('node_modules/topcoat-*/test/perf/topcoat_*.jade');\n```\n\n```\nreturn \"release/css/topcoat-\" + platform + \"-\" + theme + \".min.css\";\n```\n\nThe grunt task just takes what it finds in the node_modules folder. The perf html & css.\nSo you can npm link the dev component you're working on and run grunt telemetry. Is there a need for a grunt task that you can drop in a component repo and just run the test on that component ?\nWhat's missing is a grunt task to actually start the tests so you don't have to remember weird parameters. \nThere is definitely a wiki page that should get updated and I'll post that here.\n. Yes. A lot. Right now I have to update the topcoat repo which doesn't\nfeel right + npm dependencies that are not topcoat specific. That will\nrequire modifications to jenkins but hoefully will save time in the\nfuture\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Awesome. We also need to update the Jenkins tasks to work with npm now. Do\n> you think publishing the telemetry grunt tasks would help with both of these\n> issues?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/352#issuecomment-22768756\n\n## \n\nAndrei Oprea\n. Why don't we https://cdnjs.com/  ? could be done before 0.7.0\n. I've added checkbox and fixed the failed builds but I'll have to go\nthrough that again and add the grunt plugin. Best part: does not have\nto be a component dep it will be specified in the jenkins build. We\nwant that right? How does grunt-topcoat-telemetry sound?\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Jenkins is still configured to work with the github urls. We need to update\n> this to use npm install. I'm wondering if we should publish the telemetry\n> tasks as well as look into assemble to help with this.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/356\n\n## \n\nAndrei Oprea\n. Ya. We should. I'll think about how we can separate the logic and post\nan return w/ update.\n\nOn 8/16/13, Kristofer Joseph notifications@github.com wrote:\n\n> Excellent. grunt-topcoat-telemetry sounds fine. What about something more\n> generic so we can add other benchmarking systems grunt-topcoat-benchmark?\n> grunt-topcoat-perf?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/356#issuecomment-22774061\n\n## \n\nAndrei Oprea\n. https://github.com/topcoat/topcoat-grunt-telemetry\n\nThe issue I'm running into now is that I'm expecting to build the test pages off the index.html, I created an extract-helper that gets just the body of the document, this works fine for search-input for example but the button example is really big and includes css snippets. What will be the norm across the repos ? Will the index.html be simple, with just an example of how the components work ? Otherwise I will have to keep a /test folder in each repo.\n\nMakes sense to have a simple index.html folder because we have topdoc and can generate the styleguide on the fly (same for people using Topcoat). \n\nWhat do you think ?\n. Got it. We can still drop the jade dependency.\n. Fixed! Thanks :)\n. Done :)\n. I really like the new syntax. Any recommendations for iframe ? \n. https://github.com/topcoat/search-input-base\n\nnow making a codepen... http://codepen.io/Topcoat/full/Kgbtn\n\nhttps://github.com/topcoat/search-input-base/commit/2f327aa15c71459fb2a535b3dc730b495d819732#L4L-1\n. http://manuel.manuelles.nl/blog/2011/12/22/shrinking-your-git-repository/\n\nUsing the script in that article I could track down some culprits for why Topcoat is around 60mb for example.\nWe used to have .psd files _design/TopCoat-Mobile-Sample-Usage.psd_ that were even moved from one folder to another. The files are in our git history and because of the move they are duplicated as well. We should consider erasing those commits.\n. All pages have a /test folder where people can see the test pages for the components. \nThe blog post goes into more details http://topcoat.io/posts/benchmarks/ \n\nI'll see how I can include more information in the bench.topcoat.io pages.\n. Looking into it.\n\nSo in the design it says that the difference is font-size & line height. Dimensions should be the same. But yeah variables are still broken. \n. My updates are inline. Review comment or modify if needed \nAlmost all of the updates depend on a version bump of topcoat-theme. Tests will fail until new version is published on npm. Use npm link to test locally.\n. - [x] [Button](http://topcoat.io/button/)\n- [x] [Icon Button](http://topcoat.io/icon-button/)\n- [x] [Checkbox](http://topcoat.io/checkbox/)\n- [x] [List](http://topcoat.io/list/)\n  - the list component does not exist in the psd\n  - mobile and desktop look very similar\n- [x] [Radio button](http://topcoat.io/radio-button/)\n- [x] [Search input](http://topcoat.io/search-input/)\n- [x] [Text input](http://topcoat.io/text-input)\n- [x] Textarea\n. Yeah. Saw what you did Garth for button did the same :)\n\nOn Wed, Aug 28, 2013 at 4:27 PM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> I'm just using topdoc to rebuild to the root directory.  Much easier.\n> \n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Wed, Aug 28, 2013 at 3:36 AM, Andrei Oprea notifications@github.com\n> wrote:\n> \n> > - [ ] Button\n> > - [ ] Checkbox\n> > - [ ] List\n> > - [ ] Radio button\n> > - [ ] Search input\n> > - [ ] Text input\n> > \n> > ## \\- [ ] Textarea\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/377#issuecomment-23404999\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/377#issuecomment-23413603\n> .\n\n## \n\nAndrei Oprea\n. Aware of that but the VM that is running the tests is using the older version at the moment. The changes are reflected in the grunt task for telemetry that I'm working on https://github.com/topcoat/topcoat-grunt-telemetry.\n\nThanks.\n. What should main point to ? /demo/index.html ? Will update the ^list as I go\n. :beers: \n. Blocker-ish issues:\n- the CI server needs to be on an updated version of chromium. Otherwise there would be great inconsistencies between dev and production and would have to maintain two different branches. (Also the current one does not support interaction in the tests and we want that especially for Effeckt + Topcoat)\n- I updated chromium source today myself (on my local machine) and **loading** test that we are currently testing disappeared (probably renamed) will need to find equivalent and update the code\n- the CI server does not have a git clone of the source, it's just a tarball most likely (so update will have to be done manually ?)\n. Thanks!\n. Made the necessary changes to topcoat-theme & topcoat-switch\n. Quick mention about the overlay codepen\n- it uses the centering advice from here http://codepen.io/shshaw/full/gEiDt and as far as I could tell the only caveat is the need for `min-*` properties. Not sure what the best values are so I think it's worth discussing.\n. a bit too fast maybe ? \n. We are actually considering Rework https://github.com/visionmedia/rework it's\ncloser to vanilla css (which is good because there is no barrier of entry\nfor contributions) and it also has mxins and css variables support.\nRight now its running with stylus which has all of the things you\nmentioned, we have a github repo just for theme specific variables. We use\na grunt task to build our release which does all of the versions ( mobile\nand desktop both dark and light) and could easily be customised to make\ntargeted releases ( that is a thing we want, having for instance a ios\ntargeted release with just the webkit vendor prefixes which you can use in\nyour phonegap app)\nWe are getting there :)\n\nOn Tuesday, September 24, 2013, DennisJohnsen wrote:\n\n> I recommend turning it into LESS instead. That way you could use\n> variables, extend and more to optimize the CSS.\n> \n> Also add a config file, in which you can easy state by true/false if you\n> want the dark theme, mobile light etc.\n> \n> Also the ability to nest your selectors works totally awesome with BEM.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/409\n> .\n\n## \n\nAndrei Oprea\n. @kristoferjoseph you mean 37 & 41 right ? because line 44 is not a duplicate.\n. should this be across several files ? \n. Can you provide some code example ? It's hard to tell what is really happening there due to the bad rendering.\n. I'll give it a try hope I can get to the bottom of it.\n\nOn Sat, Oct 5, 2013 at 2:29 AM, Yarlen V\u00e1squez notifications@github.comwrote:\n\n> hello, this is the method where I am adding controls to my div, but i was\n> unable to reproduce on web browser, obly happends in phonegap application\n> scrolling\n> \n> createLightSensor: function (lightSensor, container) {\n> \n> var $article = $('<article class=\"component\"></article>');\n> container.append($article);\n> var $header = $('<header><h2>Control de iluminaci\u00f3n ' +\n> lightSensor.name + '</h2></header>');\n> \n> var $section = $('<section class=\"component\"></section>');\n> \n> $article.append($header);\n> $article.append($section);\n> \n> var $slider = $('<input id=\"L-' + lightSensor.address + '\"\n> type=\"range\" min=\"0\" max=\"100\" class=\"topcoat-range\">');\n> \n> $section.append($slider);\n> $section.append('</br>');\n> $section.append('</br>');\n> $section.append('</br>');\n> \n> var $buttonbar = $('<div class=\"topcoat-button-bar\"></div>');\n> \n> $section.append($buttonbar);\n> \n> var $togglecontainer = $('<div\n> class=\"topcoat-button-bar__item\"></div>');\n> var $togglelabel = $('<label class=\"topcoat-switch\"></label>');\n> var $toggleinput = $('<input type=\"checkbox\"\n> class=\"topcoat-switch__input\"/>');\n> var $togglediv = $('<div class=\"topcoat-switch__toggle\"></div>')\n> $togglecontainer.append($togglelabel);\n> $togglelabel.append($toggleinput);\n> $togglelabel.append($togglediv);\n> \n> var $buttonSeparator = $('<div class=\"topcoat-button-bar__item\n> separator\"></div>');\n> \n> var $buttondownContainer = $('<div class=\"topcoat-button-bar__item\n> \"></div>');\n> var $buttondown = $('<button\n> class=\"topcoat-button-bar__button\">-</button>');\n> $buttondownContainer.append($buttondown);\n> \n> var $buttonUpContainer = $('<div class=\"topcoat-button-bar__item\n> \"></div>');\n> var $buttonup = $(' <button\n> class=\"topcoat-button-bar__button\">+</button>');\n> $buttonUpContainer.append($buttonup);\n> \n> $buttonbar.append($togglecontainer);\n> $buttonbar.append($buttonSeparator);\n> $buttonbar.append($buttondownContainer);\n> $buttonbar.append($buttonUpContainer);\n> \n> this.setSensorAttributes($slider, lightSensor.address, 'L', '127');\n> this.setSensorAttributes($toggleinput, lightSensor.address, 'L',\n> '127');\n> \n> $($slider).change(function () {\n> console.log($(this).val());\n> var newValue = $(this).val();\n> requestController.sendNewSensorState($(this), newValue);\n> });\n> \n> $($toggleinput).on(\"change\", function () {\n> \n> var newValue = 'off';\n> if ($(this).is(':checked')) {\n> newValue = 'on';\n> }\n> \n> requestController.sendNewSensorState($(this), newValue);\n> });\n> \n> $($buttonup).click(function () {\n> console.log('LUP');\n> \n> var newValue = $('#L-' + lightSensor.address).val();\n> newValue = parseInt(newValue) + 1;\n> \n> if (newValue > 100) {\n> return;\n> }\n> \n> $('#L-' + lightSensor.address).val(newValue);\n> requestController.sendNewSensorState($('#L-' +\n> lightSensor.address), newValue);\n> });\n> \n> $($buttondown).click(function () {\n> console.log('LDOWN');\n> \n> var newValue = $('#L-' + lightSensor.address).val();\n> newValue = parseInt(newValue) - 1;\n> \n> if (newValue < 0) {\n> return;\n> }\n> \n> $('#L-' + lightSensor.address).val(newValue);\n> \n> requestController.sendNewSensorState($('#L-' +\n> lightSensor.address), newValue);\n> \n> });\n> \n> },\n> \n> 2013/10/4 Andrei Oprea notifications@github.com\n> \n> > Can you provide some code example ? It's hard to tell what is really\n> > happening there due to the bad rendering.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/419#issuecomment-25736232>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/419#issuecomment-25736865\n> .\n\n## \n\nAndrei Oprea\n. Ok I've tried your code and it works fine, markup & code. Could you check on the phone browser to view your app ? Curios to see if its a browser issue or maybe something happens after you package it.\n. The plan for Topcoat in future releases is to be able to add vendor specific properties in custom builds. This is such an example that will be included. \n\nFor now you'll have to include it yourself.\n. https://github.com/topcoat/switch/pull/7\n. I think I have this issue fixed \n![screenshot from 2013-12-13 13 09 08](https://f.cloud.github.com/assets/810040/1741640/06a64b50-63e7-11e3-8168-b06a09aed854.png)\n\nWill submit a pull req :)\n. Hey,\n\nShouldn't this feature be implemented natively by the browser when you\nuse input type=search?\n\nOn 12/26/13, Artemij Fedosejev notifications@github.com wrote:\n\n> Search input element has \"search\" icon at the beginning, but no clear search\n> icon/button at the end that could be used to clear input's value.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/467\n\n## \n\nAndrei Oprea\n. Super weird. Think I have it figured out. Not actually related to the `<form>`. \nMy take: the radio button is somewhere in the top left corner of the button and it sometimes hijacks your click. Needs to be hidden behind the button or have `pointer-events:none;`\n\nMade a pen http://codepen.io/piatra/pen/sGJum\nTry adding `pointer-events:none` to the `input`\n\n/cc @kristoferjoseph @GarthDB \n. Thanks for the checklist @GarthDB I updated inline. I'll await a review on the first component before tackling the rest. \n. Yes there is. I removed line-height/height and increased the padding variable for that component.\n. I updated the variable in theme-mobile-\\* and used npm link. I also updated the tests to match the output. Is that what you're asking? \n. I didn't add anything new just updated the vars. Should I make a pull req for vars as well? Is it required for a review? \n. This is only my answer, @dam or @GarthDB  might know better.\n\nIt's because of the BEM (block element modifier) pattern that Topcoat uses as a CSS pattern.\nAll components should behave exactly the same everywhere you place them in the page (not relative to parents) this way you won't have any surprises and if you use a styleguide copy-pasting from the styleguide will result in the same output.\nIf you want a smaller component for a specific region you just make one with smaller font-size.\nYou might end up having\n\n```\nalert-box,\nalert-box--small,\nalert-box--tiny {\n  // all share the same CSS\n}\n\n/* and then */\n\nalert-box--tiny {\n  // only specific rules for size\n  // set width\n  // height\n  // font-size\n}\n```\n\nChances are you are going to need that small component someplace else in the future, either way it's an extra 5-6 lines of CSS with the benefit of having a static component that won't change if you move it around.\n. Depends on what your target browser is. \nBest case this: https://twitter.com/brianleroux/status/390573495479840768 would work everywhere. Topcoat will not include any js libraries for performance reasons and it also means you can use any library you wish :)\nNice work with **remove-hover** I guess it can easily be included in any workflow (grunt, gulp, shell script, whatev)\n. I've been working on Topcoat since day 0. I do not represent Adobe\nthat is why I did not respond to this thread, but I have to ask how\ndoes Adobe representing the project bring more value to it?\n\nOn 5/15/14, RobertCZ notifications@github.com wrote:\n\n> not good this radio silence - maybe it's time to check something else - any\n> recommendation?  ionic looks really promising...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/494#issuecomment-43220037\n\n## \n\nAndrei Oprea\n. This cannot be done in HTML. From my tests the `min` attr has to be smaller than the `max` attr so you cannot have `min=100` and `max=0` but what you could do is use a regular input from 0 to 100 and have something like this in your JS\n\n```\nvar value = 100 - input.value;\n```\n\nYou would invert the value and get your desired output\n. I'm closing this. Let me know if there is anything else.\n. The website is down because the testing infrastructure isn't in place anymore. It will return.\n. @GarthDB hey! Sure thing! Feel free to hit me up on hangouts or Twitter DMs.\n. ",
    "GarthDB": "Reflow has a grid. Talk with Kristofer Joseph.\n\nOn Thursday, November 15, 2012, Andrei Oprea wrote:\n\n> I'm happy to get started with this. What grid system are we going to use ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/adobe/topcoat/issues/1#issuecomment-10408145.\n. Larz would love that\n\nOn Monday, November 19, 2012, Kristofer Joseph wrote:\n\n> Looking into this.\n> Am proposing to use RECESS to help with consistency:\n> http://twitter.github.com/recess/\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/adobe/topcoat/issues/6#issuecomment-10531481.\n. MIT FTW\n\nSent from my iPhone\n\nOn Nov 1, 2012, at 1:05 PM, Brian LeRoux notifications@github.com wrote:\n\n> ...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. The benefit being the ability for patent grants?  \n\n## \n\nGarth Braithwaite\nSent with Sparrow (http://www.sparrowmailapp.com)\n\nOn Thursday, November 1, 2012 at 1:08 PM, Brian LeRoux wrote:\n\n> Actually, Apache2\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/adobe/topcoat/issues/7#issuecomment-9993934).  \n. URL?\n. Looks good, works great - very much needed.\n. you nailed it. hit it out of the park. way to succeed @kristoferjoseph.\n. taking a look.\n. this includes shadows as well right?\nAll the focus halos are solid colors now.\n. looks perfect, I like the way things overlap. ship it.\n. Yes! Glad to have those out of there.\n\nOn Tuesday, February 5, 2013, Kristofer Joseph wrote:\n\n> Removing node_modules since they should be managed by npm.\n> \n> ## Install dependencies locally with npm install\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/topcoat/topcoat gitignore\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/topcoat/topcoat/pull/76\n> Commit Summary\n> - Adding git ignore file\n> - Removing node_modules Install them locally from now on with npm\n>   install\n> - Adding package json to manage node modules\n> - Updating package json file in order to allow npm to install\n>   dependencies\n> \n> File Changes\n> - _M_ .gitignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-0(3)\n> - _D_ .gitmodules\n>   b/node_modules/grunt-contrib-stylus/node_modules/nib/.gitmoduleshttps://github.com/topcoat/topcoat/pull/76/files#diff-1(0)\n> - _D_ node_modules/grunt-contrib-copy/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-2(3)\n> - _D_ node_modules/grunt-contrib-copy/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-3(3)\n> - _D_ node_modules/grunt-contrib-copy/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-4(4)\n> - _D_ node_modules/grunt-contrib-copy/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-5(30)\n> - _D_ node_modules/grunt-contrib-copy/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-6(22)\n> - _D_ node_modules/grunt-contrib-copy/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-7(82)\n> - _D_ node_modules/grunt-contrib-copy/docs/examples.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-8(13)\n> - _D_ node_modules/grunt-contrib-copy/docs/options.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-9(48)\n> - _D_ node_modules/grunt-contrib-copy/docs/overview.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-10(3)\n> - _D_ node_modules/grunt-contrib-copy/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-11(101)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.gitattributeshttps://github.com/topcoat/topcoat/pull/76/files#diff-12(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-13(3)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-14(3)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-15(4)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-16(20)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-17(22)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-18(56)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-19(62)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/lib/contrib.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-20(200)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-21(54)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/test/lib_test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-22(127)\n> - _D_ node_modules/grunt-contrib-copy/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-23(64)\n> - _D_ node_modules/grunt-contrib-copy/tasks/copy.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-24(115)\n> - _D_ node_modules/grunt-contrib-copy/test/copy_test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-25(53)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_minimatch/.hiddenhttps://github.com/topcoat/topcoat/pull/76/files#diff-26(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_minimatch/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-27(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_files/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-28(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-29(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-30(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-31(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_one/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-32(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_two/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-33(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-34(1)\n> - _D_ node_modules/grunt-contrib-copy/test/expected/single.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-35(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/.hiddenhttps://github.com/topcoat/topcoat/pull/76/files#diff-36(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/folder_one/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-37(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/folder_two/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-38(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-39(1)\n> - _D_ node_modules/grunt-contrib-mincss/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-40(3)\n> - _D_ node_modules/grunt-contrib-mincss/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-41(3)\n> - _D_ node_modules/grunt-contrib-mincss/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-42(4)\n> - _D_ node_modules/grunt-contrib-mincss/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-43(16)\n> - _D_ node_modules/grunt-contrib-mincss/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-44(22)\n> - _D_ node_modules/grunt-contrib-mincss/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-45(46)\n> - _D_ node_modules/grunt-contrib-mincss/docs/examples.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-46(9)\n> - _D_ node_modules/grunt-contrib-mincss/docs/options.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-47(1)\n> - _D_ node_modules/grunt-contrib-mincss/docs/overview.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-48(1)\n> - _D_ node_modules/grunt-contrib-mincss/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-49(68)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/cleancsshttps://github.com/topcoat/topcoat/pull/76/files#diff-50(1)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/gunzip-jshttps://github.com/topcoat/topcoat/pull/76/files#diff-51(1)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/gzip-jshttps://github.com/topcoat/topcoat/pull/76/files#diff-52(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-53(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-54(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/History.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-55(122)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/LICENSEhttps://github.com/topcoat/topcoat/pull/76/files#diff-56(7)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/Makefilehttps://github.com/topcoat/topcoat/pull/76/files#diff-57(14)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-58(68)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/bin/cleancsshttps://github.com/topcoat/topcoat/pull/76/files#diff-59(62)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-60(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/lib/clean.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-61(296)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-62(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/LICENSEhttps://github.com/topcoat/topcoat/pull/76/files#diff-63(21)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/README.markdownhttps://github.com/topcoat/topcoat/pull/76/files#diff-64(487)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/bool.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-65(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/boolean_double.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-66(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/boolean_single.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-67(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/default_hash.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-68(8)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/default_singles.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-69(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/divide.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-70(8)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-71(20)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count_options.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-72(29)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count_wrap.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-73(29)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/nonopt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-74(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/reflect.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-75(2)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/short.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-76(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/string.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-77(11)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/usage-options.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-78(19)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/xup.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-79(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-80(475)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-81(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/README.markdownhttps://github.com/topcoat/topcoat/pull/76/files#diff-82(70)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/example/center.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-83(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/example/meat.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-84(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-85(76)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-86(40)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/test/break.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-87(30)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/test/idleness.txthttps://github.com/topcoat/topcoat/pull/76/files#diff-88(63)\n> - _D_ https://github.com/topcoat/topcoat/pull/76/files#diff-89\n. Sweet. Thanks.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:05 PM, nnnnic notifications@github.com wrote:\n\n> ## @GarthDB The show/hide code link looks like it got nudged to the right a bit. Should be left aligned with the rest of the content. Thanks holmes!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003196\n. I say always dark.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> Want. \n> \n> ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n. The darkest dark\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:21 PM, nnnnic notifications@github.com wrote:\n\n> Always dark!\n> Maybe we need a \"secondary dark dark\" for that case...\n> On Jun 25, 2013, at 1:16 PM, Garth Braithwaite <notifications@github.com<mailto:notifications@github.com>> wrote:\n> I say always dark.\n> \u2014\n> Sent from Mailbox for iPhone\n> On Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\n> <notifications@github.com<mailto:notifications@github.com>> wrote:\n> \n> > Want.\n> > \n> > ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n> > \u2014\n> > \n> > ## Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/77#issuecomment-20003858.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/77#issuecomment-20004171\n. Right now topcoat mobile and topcoat desktop components use the same markup. You could use media queries to swap between them.  However not all components are on desktop and mobile.\n. We're also using it on topcoat.io/topcoat on the smaller size.  The icon\npath is broken, fixing now, but the interaction works.\n\nOn Mon, Jul 15, 2013 at 6:14 AM, Andrei Oprea notifications@github.comwrote:\n\n> Hi, @SidneyS https://github.com/SidneyS . I made a quick demo\n> http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20968465\n> .\n. We need to create new style guides with the actual components and not just the design prototypes.\n. I'll reach into the past and bring it back today.\n. Fixed.  Verifying with @adrocknaphobia that it submits the data.\n. verified\n. @gpuberos same issue, these are just design prototypes.\n. @gpuberos http://topcoat.io/topcoat/doc/ are design prototypes, we are taking them out to replace them with the generated components.\n\nThe culprit though is that there is only `-webkit-animation`.\n\n``` css\n-webkit-animation: spinner 1s infinite linear;\n```\n. @ix-xerri Where are you looking? We have some prototypes that may not be properly formatted.\n. You're right, we do not have the well component yet.\n. I made a pull request that should fix the problem.  https://github.com/topcoat/search-input/pull/3\n. I'll update it.\n. Fixed - https://github.com/topcoat/icons/pull/1\n. https://github.com/topcoat/topcoat.github.com/pull/14\n\nProof reading is appreciated. We also need to add the list of new components.\n. http://topcoat.io/posts/generating-css-component-documentation/\n. I think it would be neat to have a show and hide with the base (reset) and theme styles separated.\n. ![Rad](http://www.reactiongifs.com/wp-content/uploads/2013/06/raddness.gif)\n. Changed it, thanks @rauhryan for the heads up.\n. Boom!\n. I agree. Are they generated from the kss documentation?\n. So it's just a matter of updating those.\n. I really like this decision chart.\n. I think we are pretty close on this.  If we need to fix any components let's open issues for them individually.\n. Would this entail more than the updated usage guides and planned blog posts?\n. I enjoyed reading this thread.\n. It's not a perfect solution.  I was able to use our existing form, but it submits and redirects to google's thank you page.  gh-pages doesn't support iframes, or I'd be able to work around that.\n\nStill it is [done](https://github.com/topcoat/topcoat.github.com/pull/5).  I'll send out invites to the google spreadsheet to @kristoferjoseph and @brianleroux.\n. It still lives at the same URL btw.  http://topcoat.io/dev/topcoat-cla/\n. Design is finished, and it looks like it is implemented.\n\n![topcoat server 2013-08-14 23-43-28](https://f.cloud.github.com/assets/125516/967375/ff9b5cf8-0575-11e3-8ee0-6685ad79c44f.jpg)\n. Even the files on topcoat.github.com?\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> add this:\n> \n> ```\n> /**\n>  *\n>  * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n>  *\n>  * Licensed under the Apache License, Version 2.0 (the \"License\");\n>  * you may not use this file except in compliance with the License.\n>  * You may obtain a copy of the License at\n>  * \n>  * http://www.apache.org/licenses/LICENSE-2.0\n>  *\n>  * Unless required by applicable law or agreed to in writing, software\n>  * distributed under the License is distributed on an \"AS IS\" BASIS,\n>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n>  * See the License for the specific language governing permissions and\n>  * limitations under the License.\n>  *\n>  */\n> ```\n> \n> ## TO ALL SOURCE FILES.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/272\n. I'm on it\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> Any source file we distribute needs this copyright. So says legal.\n> On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> wrote:\n> \n> > Even the files on topcoat.github.com?\n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > notifications@github.com wrote:\n> > \n> > > add this:\n> > > \n> > > ```\n> > > /**\n> > > *\n> > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > *\n> > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > * you may not use this file except in compliance with the License.\n> > > * You may obtain a copy of the License at\n> > > *\n> > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > *\n> > > * Unless required by applicable law or agreed to in writing, software\n> > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > implied.\n> > > * See the License for the specific language governing permissions and\n> > > * limitations under the License.\n> > > *\n> > > */\n> > > ```\n> > > \n> > > ## TO ALL SOURCE FILES.\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/272\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652150\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n. Boo. I mean, yay! (Secret boo)\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 5:26 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> I found out the hard way that compiled source files need extra special\n> care. Need to use some banner magic in most cases. Good times.\n> On Jun 18, 2013 5:22 PM, \"Garth Braithwaite\" notifications@github.com\n> wrote:\n> \n> > I'm on it\n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\n> > notifications@github.com wrote:\n> > \n> > > Any source file we distribute needs this copyright. So says legal.\n> > > On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> > > wrote:\n> > > \n> > > > Even the files on topcoat.github.com?\n> > > > \u2014\n> > > > Sent from Mailbox for iPhone\n> > > > \n> > > > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > > > notifications@github.com wrote:\n> > > > \n> > > > > add this:\n> > > > > \n> > > > > ```\n> > > > > /**\n> > > > > *\n> > > > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > > > *\n> > > > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > > > * you may not use this file except in compliance with the License.\n> > > > > * You may obtain a copy of the License at\n> > > > > *\n> > > > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > > > *\n> > > > > * Unless required by applicable law or agreed to in writing, software\n> > > > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > > > implied.\n> > > > > * See the License for the specific language governing permissions and\n> > > > > * limitations under the License.\n> > > > > *\n> > > > > */\n> > > > > ```\n> > > > > \n> > > > > ## TO ALL SOURCE FILES.\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/topcoat/topcoat/issues/272\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub<\n> > > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652150>\n> > > > .\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652537\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652931\n. We're putting together usage docs now and @kristoferjoseph is writing blog posts.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 11:36 PM, edwin xue notifications@github.com\nwrote:\n\n> What I can find are just benchmark and blog.\n> \n> ## The cache on Google's search result isn't good\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/273\n. Not yet, but there is a design for one https://github.com/topcoat/design\n. Kraig,\n\nThis is great, but the underlying problem is that it is being generated\nfrom other files with the header, and they are being included.  If we\naccepted your pull request it would fix it for now, but it would ultimately\nreturn if we don't fix the generator script.\n\nThanks,\nGarth\n\nOn Thu, Jun 27, 2013 at 11:44 AM, Kraig Walker notifications@github.comwrote:\n\n> Addresses #283 https://github.com/topcoat/topcoat/issues/283\n> \n> Moved License statement to the beginning of each file. Removed the\n> \n> ## duplicate license statements scattered across the files.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/KraigWalker/topcoat 283\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/topcoat/topcoat/pull/284\n> Commit Summary\n> - Remove duplicate license statements in files.\n> \n> File Changes\n> - _M_ release/css/topcoat-desktop-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-0(111)\n> - _M_ release/css/topcoat-desktop-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-1(110)\n> - _M_ release/css/topcoat-mobile-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-2(110)\n> - _M_ release/css/topcoat-mobile-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-3(113)\n> \n> Patch Links:\n> - https://github.com/topcoat/topcoat/pull/284.patch\n> - https://github.com/topcoat/topcoat/pull/284.diff\n. We could pass a regex through to topdoc for comments to ignore\n\nOn Tue, Jul 2, 2013 at 9:38 AM, Kristofer Joseph\nnotifications@github.comwrote:\n\n> @KraigWalker https://github.com/KraigWalker these duplicate headers are\n> the Bain of my existence. The issue is legal requires a license header in\n> every file and most usage guide generation libraries simply copy over any\n> comments and parse out the bits they need to display. Topdochttps://github.com/topcoat/topdocshould help us fix this. Thanks again for helping out!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/284#issuecomment-20358176\n> .\n. yes - strengthening the spec would help a ton.\n\nOn Tue, Jul 2, 2013 at 10:25 AM, Kristofer Joseph\nnotifications@github.comwrote:\n\n> @GarthDB https://github.com/GarthDB Totally. I think we should do what\n> we had discussed before and add a delimiter for comments we want ignored.\n> Example: comments starting with /**! should be ignored.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/284#issuecomment-20361331\n> .\n. Was it overwritten by the topdoc README? I'll file that as a bug- it shouldn't use the README file.\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Jul 1, 2013 at 6:13 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> Yeah probably. I will revert it, thanks :+1: \n> \n> ## cc @kristoferjoseph #:beer: ?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/288#issuecomment-20280579\n. need to fix, but I'm moving it out to 0.6.1 to get 0.6.0 released.\n. Maybe put the example in an iframe?\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Jul 3, 2013 at 4:54 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ## Found the issue. It was a combination of the comment above and the fact that the HTML was indented using tabs and not spaces. Now topdoc correctly generates the guide for the component. Problems is that is the modal is positioned absolute.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/290#issuecomment-20408182\n. We have one in progress, but I'm moving it out to 0.7.0\n. so, can we close this? or are you waiting on 0.7.5 to close it?\n. [added](http://topcoat.io/tab-bar/)\n. Implemented in 0.6.0 - tested, tab works.\n. We are removing StyleDocco dependency and we have a new documentation generation tool called [Topdoc](https://github.com/topcoat/topdoc)\n. added.\n\nhttps://github.com/topcoat/topcoat.github.com/pull/7\n. So - skinning a select is not really possible on firefox without a js workaround.  Something we can do, just wanted to explain why it wasn't done correctly the first time.\n\nhttp://stackoverflow.com/questions/9620404/styling-a-select-element-in-firefox\n. @nimbupani we have one in the works - it will come out with the next release.\n\nhttp://codepen.io/GarthDB/pen/lawjE\n. http://topcoat.io/topcoat/ ?\n\nI fixed it on Friday.  It might be cached or something, refresh it and let me know if you are still having issues.\n. ![image](https://f.cloud.github.com/assets/125516/844181/278d2b1a-f3ce-11e2-8242-8526ceae5dfd.png)\n. On mobile and desktop right?\n. @numediaweb it is something we would love to do, but it has to be iceboxed for now. Other higher priorities\n. This will be fixed with https://github.com/topcoat/topcoat/issues/363\n. fixed in 0.6.0\n. Some progress toward it this sprint.\n\nHow would you envision it working @kruyvanna?\n. Sorry I meant implementation. We were discussing it being a secondary color so that if you switched to a dark theme the foreground would be dark and the back menu would be light. Is that what you would expect?\n. Ok. That's what we're working towards.\n. I adjusted the topdoc-theme, to make the other stuff optional, so it works for components too now.\n. This is already fixed in 0.6.0.  We are working on getting that out shortly.\n\n![topcoat 2013-08-14 12-59-12](https://f.cloud.github.com/assets/125516/964748/fe1e3a6c-051b-11e3-98e3-1e4fd59f8cf8.jpg)\n. We do, you can specify a local directory for the theme as well.\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 5:32 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ![image](https://f.cloud.github.com/assets/810040/968595/92400308-05a6-11e3-96f0-a4a992ff7cc6.png)\n> \n> ## It happens if you are not connected to the internet to pull the theme files, we might want to have a fallback for this, but it can wait for 0.6.1\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/351\n. Great idea. \u00a0I'll close this bug and open one on topdoc.\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 7:09 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ## Great. Then all there is to it is just capture that event that overflows the stack and display an appropriate error message.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/351#issuecomment-22704923\n. Holly has updated the app. https://github.com/hollyschinsky/TopcoatPlay/\n\nWe still need to get overlay, spinner, and progress bar finished up so she can get rid of all the bleeding edge components.\n. Want\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 2:06 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> ## +100000\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/354#issuecomment-22730200\n. Nice, thanks @headwebmonkey.\n. let's just have the topcoat text clickable\n. Fine, I was curing cancer, but I'll stop that, and fix it now.\n. So, take out the edge web fonts? and css font-face embedding?\n. Topdoc can handle that.\n. done.\n. I fixed this in the theme, I'll be pushing it up shortly.\n. Sorry, I misread - this is for @piatra to change.  Just make it look like Topcoat.io and make it clickable to return home.\n. @piatra it would probably be best just to use:\n\n`iframe: true`\n. I hope so - I'm starting on button first, and testing the component specific theme, then I'll fill in the rest and we rinse and repeat.\n. Did it on button - seemed to work out pretty well.\n\nLet's make a list of all the components and start ripping through them.\n\n![nod](http://www.reactiongifs.com/wp-content/uploads/2013/08/dr-mccoy-and-captain-kirk-approve.gif)\n. I'm updated all the pull requests ready to be swarmed upon to accept them.\n\n![underwear dance](http://www.reactiongifs.com/wp-content/uploads/2013/08/underwear-dance.gif)\n. nailed it.  Thanks @kristoferjoseph \n. textarea is way to big\n. someone made a comment about it http://topcoat.io/posts/mini-release-0.7.5/#comment-1090571585\n. I'll throw it in\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Sat, Aug 24, 2013 at 8:41 AM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> ## The mobile layout of the Topdoc demo theme requires the \"Hamburger\" menu icon. This was previously being handled by the components gruntfile in a copy task. This should instead be bundled with the theme.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/372\n. I added it to the theme, and updated all the pull requests with the topdoc 0.2 update.\n. I'll delete it the script tag\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Mon, Aug 26, 2013 at 2:36 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> The topdoc theme still includes the edge web fonts script tag which cases an error in the page when ran locally.\n> \n> ## Fonts render correctly in the page though.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/374\n. Fixed.\n\nhttps://github.com/topcoat/topdoc-theme/commit/b6527cc7416c0252c4d79516a76812cf24267432\n. Making progress\n\n![dance](http://images.obesityhelp.com/uploads/profile/285814/albums/125682/HappyDance.gif)\n. I'm just using topdoc to rebuild to the root directory. \u00a0Much easier.\n. what are we holding on for this?\n. which will be out later today\n. can you? doesn't npm require a main?\n. Yes. It should.\n. It is having issues building tab-bar.\n\n```\nRunning \"clean:release\" (clean) task\n\nRunning \"stylus:mobilelight\" (stylus) task\n>> Error: src/topcoat-tab-bar.styl:19\n>>    15| * limitations under the License.\n>>    16| \n>>    17| */\n>>    18| @import button\n>>  > 19| @import button-bar\n>>    20| / topdoc\n>>    21|   name: Tab Bar\n>>    22|   description: Component of tab buttons\n>> \n>> failed to locate @import file button-bar.styl\nWarning: Stylus failed to compile. Use --force to continue.\n\nAborted due to warnings.\nnpm ERR! weird error 6\nnpm ERR! not ok code 0\n```\n. Found it - it needed topcoat-button-bar-base as a dependency as well.\n. now getting an error on the topcoat\n\n```\nRunning \"stylus:mobilelight\" (stylus) task\n>> Error: node_modules/topcoat-tab-bar/src/topcoat-tab-bar.styl:90\n>>    86|   @extend .button--disabled;\n>>    87| }\n>>    88| \n>>    89| .topcoat-tab-bar__button:focus,\n>>  > 90| .topcoat-tab-bar__button--large:focus {\n>>    91|   z-index: 1;\n>>    92| }\n>>    93| \n>> \n>> Failed to @extend \".button-bar__item > input\"\nWarning: Stylus failed to compile. Use --force to continue.\n```\n. https://github.com/topcoat/topcoat/pull/400\n. @nnnnic :+1: \n. FASTER!\n. Are you downloading it or building it yourself?\n. Yeah, the license header is repeated a ton. That's the only real issue.\n. I would use the min version in production, it doesn't have that issue.\n. They are actually separate selectors.  This is mostly caused by the fact that the stylesheet is generated by very modular individual components.  We need to find some better ways to optimized the built stylesheet, but those two line aren't wrong or repeating themselves exactly.\n. I'm closing this issue - I opened one that is a bit more clear. https://github.com/topcoat/topcoat/issues/398\n. ![2013-09-16 10-32-20](https://f.cloud.github.com/assets/125516/1151134/f0fe6e8a-1ef5-11e3-8c61-cbb7ae1d0da6.png)\n\nLooks really good.  We'll need to do some refactoring to get it in the build process we have in place, but this is great.\n. That's the plan, but we'll generate pngs for fallback.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 6:33 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> ## It seems to me that an efficient SVG is current best practice.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24558314\n. To be honest, svg support is so good now it may not be necessary.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 6:33 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> ## It seems to me that an efficient SVG is current best practice.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24558314\n. Svg has been spotty on previous versions of android browser too. Also topcoat isn't just mobile. We haven't optimized for ie yet, but I suspect we'll stick with ie9+\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 7:45 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> Yes, for all the mobile users that use IE <9. \n> \n> ## I recommend not testing for IE. Even JQuery does not support it.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24560601\n. It is not just mobile, we have [desktop components](http://topcoat.io/posts/desktop-parity-party/) as well, and they would use\nthe icons.\n. What issue are you seeing?\n. There shouldn't be a modal. Which browser and version?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Sep 18, 2013 at 7:39 AM, bedspax notifications@github.com wrote:\n\n> Hi @GarthDB take a look here: http://cl.ly/image/032B0K1n0a09\n> \n> ## maybe there is a bug in that modality. \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/402#issuecomment-24669033\n. Looking at http://www.topcoat.io/topcoat \n\nI'm not seeing the issue on Firefox \n![topcoat 2013-09-18 07-54-12](https://f.cloud.github.com/assets/125516/1165769/2cc87d7a-2072-11e3-9771-0b5c01c20073.png)\n\nor ios\n\n![ios 7 0 11a4372q 2013-09-18 07-56-00](https://f.cloud.github.com/assets/125516/1165789/6d8769d4-2072-11e3-935d-88abba187806.png)\n. are you trying to use the menu in a different project and it isn't working?\n. We're using the same code on the individual component demo sites, and it doesn't seem to have a problem with less  content.\n\nTry http://topcoat.io/button-bar/\n. I'm closing the issue for now.  Reopen if you still have an issue.\n. We looked for stylus sourcemap support but it doesn't seem to be finished.\n\nhttps://github.com/LearnBoost/stylus/pull/886\n. Closing this one, since it is a duplicate https://github.com/topcoat/topcoat/issues/346\n. Turns out autoprefixer is the culprit, that's when the topdoc for text-input disappears.\n\nNow that I've isolated it I need to pin point what about autoprefixer and the topdoc comment that isn't getting along.\n. Funny that the missing component issue happens to be number 404\n. It looks like there is an issue with notification coming in.  It works on the individual component so I'm not sure what's going on.\n. https://github.com/topcoat/topcoat/issues/406\n. It is intentionally left out. @kristoferjoseph had to a bit of tweaking to make sure it stayed out.\n. :+1:\n. I think the argument for keeping in one file is that it has a simplicity to it.  It feels simpler even if it isn't.\n\nIf we can get variables down to something manageable, we might want to consider keeping in one file with comments.\n. ![mlfw1021_rainbow_dash_says_youre_awesome](https://f.cloud.github.com/assets/125516/1268017/741b5dc4-2cd3-11e3-9234-46cb819e1741.gif)\n. Super weird. What platform and browser version?\n. well, then I'll assign you to it.\n. We do use preprocessors - we use stylus. We could make a way to set a default img folder and override it in variables.\n. Sounds great. Let's cdn our images.\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Feb 4, 2014 at 7:45 AM, nnnnic notifications@github.com wrote:\n\n> Ah good one!!\n> \n> > On Feb 4, 2014, at 7:34 AM, Kristofer Joseph notifications@github.com wrote:\n> > \n> > Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9.\n> > \n> > Thanks for the issue!\n> > \n> > \u2014\n> > \n> > ## Reply to this email directly or view it on GitHub.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/427#issuecomment-34072520\n. - [x] https://github.com/topcoat/list/pull/8\n- [x] https://github.com/topcoat/search-input/pull/12\n- [x] https://github.com/topcoat/textarea/pull/6\n- [x] https://github.com/topcoat/button-bar/pull/4\n- [x] https://github.com/topcoat/navigation-bar/pull/6\n- [ ] https://github.com/topcoat/tab-bar/pull/1\n. single css file?\n. they probably have icons as well (depending on what they pick).\n\nAlso it needs to be automated so when we add new components it gets added to the customizer.\n. We have our best man working round the clock on it now!\n\nThank you for alerting us kind citizen!.\n. just joking - @kristoferjoseph already fixed it.\n. We just released 0.8 - and updated the demo pages to show off the sweet sweet new features.  Blog post and all the other jazz coming next week.\n. I did a breadcrumb, color picker, and tree for brackets.\u00a0\n\nI'll post them here. Use them however you want.\n. @nnnnic made a nice codepen for the Breadcrumbs http://codepen.io/nnnnic/pen/Gtaug\n. ![nested_editors_breadcrumbs js editor](https://f.cloud.github.com/assets/125516/1434559/6912ab02-411f-11e3-9752-122d0aaad232.png)\n![nested_editors_inception editor](https://f.cloud.github.com/assets/125516/1434560/691a830e-411f-11e3-8c00-b9feebff4ebd.png)\n![nested_editors_popover color editor](https://f.cloud.github.com/assets/125516/1434561/6922375c-411f-11e3-88ac-7452ded16412.png)\n\nShows off designs that were just explorations on Breadcrumbs (not enough contrast, but more linky), Tree (file explorer), and Color Picker (both modal and inline).\n. Tony will be sad.\n. We are using stylus- the components are spread out through different repos.\n\nWhat are looking to change?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sat, Oct 26, 2013 at 10:38 AM, webos notifications@github.com wrote:\n\n> I'm a newbie - so please excuse if it's a stupid question.\n> I could not find LESS files corresponding to the CSS. Can someone please help?\n> \n> ## Thanks in advance\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/437\n. No problem. If you have any issues finding anything, let us know.\n\nAlso check out the latest [blog post](http://topcoat.io/posts/color-me-topcoat/) on theming.\n. Is there a way to set it to make a custom namespace with out it being a different theme?\n\nIf we setup the variable for the name space and let people change it - that would be interesting.\n. :+1: \n. I think it's the border around three sides, but not the 4th that is the issue.  Right @kruyvanna ?\n\nNot sure how we could fix that - we could look into it.\n. For accessibility. \u00a0The focus makes it easy to use tab and spacebar to activate buttons without a mouse.\n. Not sure about safari, but that's how ff treats focus. It also doesn't do active with the keyboard spacebar. Just how the browser acts.\n. let's take overlay off for this release - eh?\n. And progress bar\nand Spinner\n. overlay is finished http://topcoat.io/overlay\n. Yeah. Apple popovers are delicious.\n. A contribute page?\n. @Timothep very true. We are about to overhaul all the components and clean them up. \n. The theme file is compiled together with the main css file for each (ie mobile dark, desktop light, etc).\n\nDownload the latest build https://github.com/topcoat/topcoat/archive/v0.8.0.zip and in the css directory you should find everything. I just checked and switch and textarea are in mobile dark.\n. ![photo](https://f.cloud.github.com/assets/125516/1569805/78a327c0-50d5-11e3-9142-2ebb789684ed.PNG)\n. HELVETICA!\n\nThis was most likely caused by the optimizations, the other js files seemed to be loading fine, but it might be messing with the typekit loader.  I'll play with it and see what I can do.  Maybe I'll try edge web fonts.\n. Do you mean vertically, horizontally, or both?\n\nNeither placeholders nor the values are set to be centered horizontally in topcoat. If it is centering the value in your project it is coming from your css.\n\nIf you want to center the placeholder in your project use the placeholder selector.\u00a0http://css-tricks.com/snippets/css/style-placeholder-text/\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Nov 19, 2013 at 1:10 AM, Matthieu Hostache\nnotifications@github.com wrote:\n\n> Hi, I have a problem with placeholders inputs in mobile theme of topcoat v0.8.0 when testing on a android phone in version 4.1.2. Placeholders are not centered. The problem affect just placeholder not value like you can see in screenshots. With a computer browser i haven't the problem.\n> ![placeholder-pb](https://f.cloud.github.com/assets/1550192/1570954/7b8915b6-50f9-11e3-907e-115df6826659.jpg)\n> \n> ## ![screenshot_2013-11-19-09-59-59](https://f.cloud.github.com/assets/1550192/1570955/7f12cf60-50f9-11e3-81df-a73572c04b2f.png)\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/453\n. Because android. \u00a0In kitkat the inconsistencies should get better.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Nov 19, 2013 at 7:21 AM, Matthieu Hostache\nnotifications@github.com wrote:\n\n> ## I mean vertically. In an older version, v0.6.0 i guess, it work fine. By default it is vertically centered http://topcoat.io/topcoat/topcoat-mobile-dark.html. Why a difference between browsers ? Like i said in a computer browser it work fine (vertically centered).\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/453#issuecomment-28798201\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. The next release has a new design and will start from an orphaned branch, so none of this will still exist.. Looking into it now. \u00a0It should all be rem. \u00a0Only px for border width.\n\nOn November 25, 2013 at 2:06:51 PM, Oleg Slobodskoi (notifications@github.com) wrote:\n\nThere is a \"watch\" button in the bottom :)\n\n\u2014\nReply to this email directly or view it on GitHub.\n. We are updating all the components and the way the theme is used before the next version.\n\nIf the problem persists I look at it then.\n. We normally stick to the latest versions and heavily test WebKit/chrome. Is there something in particular you're looking for?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com wrote:\n\n> ## Is there a support list somewhere? Thanks\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/457\n. We probably won't go back as far as ie7 or the older android browser. We're focusing on chrome on android especially with kitkat's improved support.\n\nWe don't currently test on windows mobile, but we would like to include it in the future.\n\nWe wouldn't reject any contributions that make topcoat more universal if you'd like to help out.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 1, 2013 at 11:35 PM, kokujin notifications@github.com wrote:\n\n> Windows Phone, IE7 and 8, Android 2 the troublesome stuff actually\n> On Mon, Dec 2, 2013 at 7:37 AM, Garth Braithwaite\n> notifications@github.comwrote:\n> \n> > We normally stick to the latest versions and heavily test WebKit/chrome.\n> > Is there something in particular you're looking for?\n> > \n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com\n> > wrote:\n> > \n> > > ## Is there a support list somewhere? Thanks\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/457\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/457#issuecomment-29597374\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/457#issuecomment-29599209\n. Yes. We are in the process of updating to a new build process and all the pieces and components have to be updated or none of it will work, so using the older versions is a way to get around that.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Dec 11, 2013 at 5:37 AM, Eugen F notifications@github.com wrote:\n\n> Ok, so what I've found - here's what you should change in the package.json file:\n> \"topcoat-button-bar-base\": \"~0.1.3\", to \"topcoat-button-bar-base\": \"0.1.3\",\n> \n> ## then run npm install and after it compiles perfectly.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/458#issuecomment-30320470\n. Oleg,\n\nThis is true. We've done quite a bit of work to remove unnecessary shadows, but the main theme uses them in the design. We have done some initial work on a flat theme that could be used and will have better mobile optimization.\n\nThanks,\n\nGarth\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Fri, Dec 13, 2013 at 3:47 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> Hi\n> Topcoat seems to be a performance focused framework designed for mobile, but it still uses box and text shadows, which are known to cause performance issues on mobile devices.\n> What do you think? \n> Best,\n> \n> ## Oleg\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/461\n. @silverbucket So Topcoat is a css only.  We want to make so demo apps that show how it can be implemented in apps, but really it is about ui not functionality.  You need the js side of things to really get that slider action in your application/website.  Feel free to look at how we implemented it.\n. You could look at the source for the page or check out the topcoat.github.com repo\u2014\nSent from Mailbox for iPhone\n\nOn Fri, Dec 20, 2013 at 11:43 PM, Nick Jennings notifications@github.com\nwrote:\n\n> Hi @GarthDB thanks for the reply. One of the problems I'm having is that I cannot find any examples of how you implemented it. I only see it in the screenshots, but there are so many repositories in this github org, and nothing named 'slide'.\n> \n> ## Could you please point me to an example implementation?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/463#issuecomment-31058745\n. Good catch. We originally used kss and realized it didn't fit all of our needs and made topdoc.\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 22, 2013 at 10:15 AM, numediaweb notifications@github.com\nwrote:\n\n> In the [Coding Guidelines](https://github.com/topcoat/topcoat/wiki/Coding-Guidelines#wiki-comments) Wiki page, the documentation states that the best practice for commenting CSS is to use [KSS](https://github.com/kneath/kss). However, the Topcoat.io blog post [Generating Documentation for CSS Components](http://topcoat.io/posts/generating-css-component-documentation/) suggests using [Topdoc](https://github.com/topcoat/topdoc) for comment structure since it allows easier documentation generation.\n> \n> ## Looking inside the current CSS we find that it uses the Topdoc structure.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/464\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe; we'll have to do some more browser testing as part of that.. We are working on a new build process - I think there was an issue with the previous build with the npm version number.  @kristoferjoseph might know more.\n. @maelp I'm not sure if we want to hard code it in there, but you can just add `align-text: left;` to `.topcoat-checkbox` and it works.\n\nHere's a [codepen](http://codepen.io/GarthDB/pen/yghHk) showing it off.\n. Designers don't need access to design.\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Jan 22, 2014 at 5:58 PM, nnnnic notifications@github.com wrote:\n\n> ## Can't push the designz yo!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/473\n. Added you, try now.\n. We'll have to circle back to documentation like getting started stuff as part of the next release.. The copyright needs to be updated to reflect the release year correct?\n. moar less designs faster.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We'll have to start from scratch on this with the new release.. Thanks @nnnnic - we're clearing it all out and will have to start from scratch in the next release.. Nope. Could you Codepen the component?\u2014\nSent from Mailbox for iPhone\n\nOn Sat, Feb 15, 2014 at 1:12 AM, abampakos notifications@github.com\nwrote:\n\n> Hi,\n> I have an application that uses AngularUI's carousel directive and I plan to migrate it in topcoat css. Is there any similar directive in topcoat, that I can use?\n> \n> ## Thanks,\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/483\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. There are no current plans for a carousel component in the next release.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. - [ ] [navigation-bar](http://github.com/topcoat/navigation-bar) @piatra\n  - https://github.com/topcoat/navigation-bar/pull/8\n  - needs pull req for theme as well. \n  - tests only contained mobile. is that right?\n- [ ] [list](http://github.com/topcoat/list) @piatra \n  - this component does not use height properties, only padding. It's good to go :)\n- [ ] [button](http://github.com/topcoat/button) @garthdb\n- [ ] [textarea](http://github.com/topcoat/textarea)\n- [ ] [switch](http://github.com/topcoat/switch)\n- [ ] [icon-button](http://github.com/topcoat/icon-button)\n- [ ] [checkbox](http://github.com/topcoat/checkbox)\n- [ ] [search-input](http://github.com/topcoat/search-input)\n- [ ] [tab-bar](http://github.com/topcoat/tab-bar)\n- [ ] [radio-button](http://github.com/topcoat/radio-button)\n- [ ] [text-input](http://github.com/topcoat/text-input)\n- [ ] [notification](http://github.com/topcoat/notification)\n- [ ] [button-list](http://github.com/topcoat/button-list)\n- [ ] [range](http://github.com/topcoat/range)\n- [ ] [select](http://github.com/topcoat/select)\n- [ ] [button-bar](http://github.com/topcoat/button-bar)\n- [ ] [overlay](http://github.com/topcoat/overlay)\n. @piatra I'm working through button and I'll take a look at what you are doing with navigation-bar.  What changes do you think we need added to theme?  Is there a padding change?\n. did you put the value in it?\n. Wondering if he added anything to vars that would be the same in other components.  There is potential that we would be adding tons of different padding values, just trying to condense.  I'll have button done shortly. I got a little sidetracked, but I'll be back at it.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. We are no currently planning on supporting the android browser the next release, and just going to focus on Chrome for Android.. We are cleaning house on these issues as we are getting ready for a new start on Topcoat from a new team within Adobe. We'll have to circle back on this implementation to see if it will work for what we are thinking.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We'll have to address this with the new release.. Oleg,\n\nThe goal of the default theme is for the components to be the same regardless of the styles applied to the parent. It is safer and less complicated for a larger user base, but your right, there are times you want something different, in those cases you should alter the theme to fit your project's needs.\n. We went through the options and have discussed the benefits of both. After weighing the options we decided on rems for exactly the reasons @piatra mentioned. By using rems we have a more universal usable component set by default.\n\nI would encourage a custom theme for anything different.\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Apr 7, 2014 at 6:00 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> ## @GarthDB thats what @piatra said. The question is if we can do it play nicely for both cases. Making  size adjustment for 1 component just 1 single definition of font-size.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/492#issuecomment-39726388\n. We considered using classes instead, but it requires js for state, which is not the goal of topcoat. Anything that needs that level of integration with js should be custom.\n\nThe reason for the hover in mobile is because desktop and mobile are a single theme with separate variables which is easier for maintainance on the default theme. I agree with Andrei, if we wanted to fix it, we'd probably clean out hover on build using grunt.\n. Definitely a possibility. I'd get @kristoferjoseph's opinion.\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Apr 8, 2014 at 8:12 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> ## difficult ... topcoat first goal is mobile, but it ist ready to make it right ...\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/493#issuecomment-39860053\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We should be able to make a way to bring back the hover classes if needed.. I work for Adobe but do not necessarily represent it. I was working full time on topcoat for work and have been moved to another project. I'm still committed, but don't have the same amount of time.\n. And I'm on paternity leave so emails are sparse from me right now.\u2014\nSent from Mailbox\n\nOn Thu, May 15, 2014 at 8:40 AM, Garth Braithwaite garthdb@gmail.com\nwrote:\n\n> I work for Adobe but do not necessarily represent it. I was working full time on topcoat for work and have been moved to another project. I'm still committed, but don't have the same amount of time.\n. @iaef Adobe is not supporting Topcoat.  @kristoferjoseph and I want to work on it, but life is busy and we're working hard to carve out time.\n. @Cryrivers you can trust it as far as it is working for you. It is css, it isn't going to break anything.\n\nIt wasn't actually used in brackets, it was used in some other adobe products that are no longer in production. We are looking to resume work on Topcoat, but it will be on our own time, Adobe is not committed to it now.\n. @mscreenie I would love some help if you want to make any contributions.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe; we'll be focusing on the components needed for Adobe products, to begin with.. @Davidx7 we do want to fix it. We need to set our sever and testing phone back up again.\n. We haven't tested it. Is it something you'd like to help putting together?\n. We should add it to the README.\r\nWe are cleaning things up and getting ready for a new start on Topcoat from a team within Adobe; we should make sure to add it to the next release.. @allthingssmitty don't really worry about the tests. The main repo hasn't had tests in the past, I turned them on for the work I'm doing on 1.0.0. We could add a basic test to just see if it is building without errors.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. Hey @piatra do you want to chat sometime about getting it back? I could probably get budget to get a mac mini to set it up with a nexus I have around.\n. Hey @metaloha sorry for the delay.\n\nTopcoat is viable and I'm making progress. It is currently just me, so if you would like to contribute I would be happy to have any help.\n. Lots of progress - will write on the blog about it as I get more parts working together.\n. There isn't, and no current plans for one.. @misterbrownlee hahaha. Reflow has a grid. Talk with Kristofer Joseph.\n\nOn Thursday, November 15, 2012, Andrei Oprea wrote:\n\n> I'm happy to get started with this. What grid system are we going to use ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/adobe/topcoat/issues/1#issuecomment-10408145.\n. Larz would love that\n\nOn Monday, November 19, 2012, Kristofer Joseph wrote:\n\n> Looking into this.\n> Am proposing to use RECESS to help with consistency:\n> http://twitter.github.com/recess/\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/adobe/topcoat/issues/6#issuecomment-10531481.\n. MIT FTW\n\nSent from my iPhone\n\nOn Nov 1, 2012, at 1:05 PM, Brian LeRoux notifications@github.com wrote:\n\n> ...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. The benefit being the ability for patent grants?  \n\n## \n\nGarth Braithwaite\nSent with Sparrow (http://www.sparrowmailapp.com)\n\nOn Thursday, November 1, 2012 at 1:08 PM, Brian LeRoux wrote:\n\n> Actually, Apache2\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/adobe/topcoat/issues/7#issuecomment-9993934).  \n. URL?\n. Looks good, works great - very much needed.\n. you nailed it. hit it out of the park. way to succeed @kristoferjoseph.\n. taking a look.\n. this includes shadows as well right?\nAll the focus halos are solid colors now.\n. looks perfect, I like the way things overlap. ship it.\n. Yes! Glad to have those out of there.\n\nOn Tuesday, February 5, 2013, Kristofer Joseph wrote:\n\n> Removing node_modules since they should be managed by npm.\n> \n> ## Install dependencies locally with npm install\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/topcoat/topcoat gitignore\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/topcoat/topcoat/pull/76\n> Commit Summary\n> - Adding git ignore file\n> - Removing node_modules Install them locally from now on with npm\n>   install\n> - Adding package json to manage node modules\n> - Updating package json file in order to allow npm to install\n>   dependencies\n> \n> File Changes\n> - _M_ .gitignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-0(3)\n> - _D_ .gitmodules\n>   b/node_modules/grunt-contrib-stylus/node_modules/nib/.gitmoduleshttps://github.com/topcoat/topcoat/pull/76/files#diff-1(0)\n> - _D_ node_modules/grunt-contrib-copy/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-2(3)\n> - _D_ node_modules/grunt-contrib-copy/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-3(3)\n> - _D_ node_modules/grunt-contrib-copy/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-4(4)\n> - _D_ node_modules/grunt-contrib-copy/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-5(30)\n> - _D_ node_modules/grunt-contrib-copy/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-6(22)\n> - _D_ node_modules/grunt-contrib-copy/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-7(82)\n> - _D_ node_modules/grunt-contrib-copy/docs/examples.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-8(13)\n> - _D_ node_modules/grunt-contrib-copy/docs/options.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-9(48)\n> - _D_ node_modules/grunt-contrib-copy/docs/overview.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-10(3)\n> - _D_ node_modules/grunt-contrib-copy/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-11(101)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.gitattributeshttps://github.com/topcoat/topcoat/pull/76/files#diff-12(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-13(3)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-14(3)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-15(4)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-16(20)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-17(22)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-18(56)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-19(62)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/lib/contrib.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-20(200)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-21(54)\n> - _D_\n>   node_modules/grunt-contrib-copy/node_modules/grunt-lib-contrib/test/lib_test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-22(127)\n> - _D_ node_modules/grunt-contrib-copy/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-23(64)\n> - _D_ node_modules/grunt-contrib-copy/tasks/copy.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-24(115)\n> - _D_ node_modules/grunt-contrib-copy/test/copy_test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-25(53)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_minimatch/.hiddenhttps://github.com/topcoat/topcoat/pull/76/files#diff-26(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_minimatch/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-27(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_files/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-28(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-29(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-30(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-31(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_one/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-32(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_two/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-33(1)\n> - _D_\n>   node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-34(1)\n> - _D_ node_modules/grunt-contrib-copy/test/expected/single.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-35(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/.hiddenhttps://github.com/topcoat/topcoat/pull/76/files#diff-36(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/folder_one/one.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-37(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/folder_two/two.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-38(1)\n> - _D_ node_modules/grunt-contrib-copy/test/fixtures/test.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-39(1)\n> - _D_ node_modules/grunt-contrib-mincss/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-40(3)\n> - _D_ node_modules/grunt-contrib-mincss/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-41(3)\n> - _D_ node_modules/grunt-contrib-mincss/AUTHORShttps://github.com/topcoat/topcoat/pull/76/files#diff-42(4)\n> - _D_ node_modules/grunt-contrib-mincss/CHANGELOGhttps://github.com/topcoat/topcoat/pull/76/files#diff-43(16)\n> - _D_ node_modules/grunt-contrib-mincss/LICENSE-MIThttps://github.com/topcoat/topcoat/pull/76/files#diff-44(22)\n> - _D_ node_modules/grunt-contrib-mincss/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-45(46)\n> - _D_ node_modules/grunt-contrib-mincss/docs/examples.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-46(9)\n> - _D_ node_modules/grunt-contrib-mincss/docs/options.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-47(1)\n> - _D_ node_modules/grunt-contrib-mincss/docs/overview.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-48(1)\n> - _D_ node_modules/grunt-contrib-mincss/grunt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-49(68)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/cleancsshttps://github.com/topcoat/topcoat/pull/76/files#diff-50(1)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/gunzip-jshttps://github.com/topcoat/topcoat/pull/76/files#diff-51(1)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/.bin/gzip-jshttps://github.com/topcoat/topcoat/pull/76/files#diff-52(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-53(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-54(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/History.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-55(122)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/LICENSEhttps://github.com/topcoat/topcoat/pull/76/files#diff-56(7)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/Makefilehttps://github.com/topcoat/topcoat/pull/76/files#diff-57(14)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/README.mdhttps://github.com/topcoat/topcoat/pull/76/files#diff-58(68)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/bin/cleancsshttps://github.com/topcoat/topcoat/pull/76/files#diff-59(62)\n> - _D_ node_modules/grunt-contrib-mincss/node_modules/clean-css/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-60(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/lib/clean.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-61(296)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/.travis.ymlhttps://github.com/topcoat/topcoat/pull/76/files#diff-62(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/LICENSEhttps://github.com/topcoat/topcoat/pull/76/files#diff-63(21)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/README.markdownhttps://github.com/topcoat/topcoat/pull/76/files#diff-64(487)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/bool.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-65(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/boolean_double.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-66(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/boolean_single.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-67(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/default_hash.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-68(8)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/default_singles.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-69(7)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/divide.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-70(8)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-71(20)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count_options.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-72(29)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/line_count_wrap.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-73(29)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/nonopt.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-74(4)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/reflect.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-75(2)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/short.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-76(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/string.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-77(11)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/usage-options.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-78(19)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/example/xup.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-79(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-80(475)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/.npmignorehttps://github.com/topcoat/topcoat/pull/76/files#diff-81(1)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/README.markdownhttps://github.com/topcoat/topcoat/pull/76/files#diff-82(70)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/example/center.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-83(10)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/example/meat.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-84(3)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/index.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-85(76)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/package.jsonhttps://github.com/topcoat/topcoat/pull/76/files#diff-86(40)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/test/break.jshttps://github.com/topcoat/topcoat/pull/76/files#diff-87(30)\n> - _D_\n>   node_modules/grunt-contrib-mincss/node_modules/clean-css/node_modules/optimist/node_modules/wordwrap/test/idleness.txthttps://github.com/topcoat/topcoat/pull/76/files#diff-88(63)\n> - _D_ https://github.com/topcoat/topcoat/pull/76/files#diff-89\n. Sweet. Thanks.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:05 PM, nnnnic notifications@github.com wrote:\n\n> ## @GarthDB The show/hide code link looks like it got nudged to the right a bit. Should be left aligned with the rest of the content. Thanks holmes!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003196\n. I say always dark.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> Want. \n> \n> ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n. The darkest dark\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:21 PM, nnnnic notifications@github.com wrote:\n\n> Always dark!\n> Maybe we need a \"secondary dark dark\" for that case...\n> On Jun 25, 2013, at 1:16 PM, Garth Braithwaite <notifications@github.com<mailto:notifications@github.com>> wrote:\n> I say always dark.\n> \u2014\n> Sent from Mailbox for iPhone\n> On Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\n> <notifications@github.com<mailto:notifications@github.com>> wrote:\n> \n> > Want.\n> > \n> > ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n> > \u2014\n> > \n> > ## Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/77#issuecomment-20003858.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/77#issuecomment-20004171\n. Right now topcoat mobile and topcoat desktop components use the same markup. You could use media queries to swap between them.  However not all components are on desktop and mobile.\n. We're also using it on topcoat.io/topcoat on the smaller size.  The icon\npath is broken, fixing now, but the interaction works.\n\nOn Mon, Jul 15, 2013 at 6:14 AM, Andrei Oprea notifications@github.comwrote:\n\n> Hi, @SidneyS https://github.com/SidneyS . I made a quick demo\n> http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20968465\n> .\n. We need to create new style guides with the actual components and not just the design prototypes.\n. I'll reach into the past and bring it back today.\n. Fixed.  Verifying with @adrocknaphobia that it submits the data.\n. verified\n. @gpuberos same issue, these are just design prototypes.\n. @gpuberos http://topcoat.io/topcoat/doc/ are design prototypes, we are taking them out to replace them with the generated components.\n\nThe culprit though is that there is only `-webkit-animation`.\n\n``` css\n-webkit-animation: spinner 1s infinite linear;\n```\n. @ix-xerri Where are you looking? We have some prototypes that may not be properly formatted.\n. You're right, we do not have the well component yet.\n. I made a pull request that should fix the problem.  https://github.com/topcoat/search-input/pull/3\n. I'll update it.\n. Fixed - https://github.com/topcoat/icons/pull/1\n. https://github.com/topcoat/topcoat.github.com/pull/14\n\nProof reading is appreciated. We also need to add the list of new components.\n. http://topcoat.io/posts/generating-css-component-documentation/\n. I think it would be neat to have a show and hide with the base (reset) and theme styles separated.\n. ![Rad](http://www.reactiongifs.com/wp-content/uploads/2013/06/raddness.gif)\n. Changed it, thanks @rauhryan for the heads up.\n. Boom!\n. I agree. Are they generated from the kss documentation?\n. So it's just a matter of updating those.\n. I really like this decision chart.\n. I think we are pretty close on this.  If we need to fix any components let's open issues for them individually.\n. Would this entail more than the updated usage guides and planned blog posts?\n. I enjoyed reading this thread.\n. It's not a perfect solution.  I was able to use our existing form, but it submits and redirects to google's thank you page.  gh-pages doesn't support iframes, or I'd be able to work around that.\n\nStill it is [done](https://github.com/topcoat/topcoat.github.com/pull/5).  I'll send out invites to the google spreadsheet to @kristoferjoseph and @brianleroux.\n. It still lives at the same URL btw.  http://topcoat.io/dev/topcoat-cla/\n. Design is finished, and it looks like it is implemented.\n\n![topcoat server 2013-08-14 23-43-28](https://f.cloud.github.com/assets/125516/967375/ff9b5cf8-0575-11e3-8ee0-6685ad79c44f.jpg)\n. Even the files on topcoat.github.com?\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> add this:\n> \n> ```\n> /**\n>  *\n>  * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n>  *\n>  * Licensed under the Apache License, Version 2.0 (the \"License\");\n>  * you may not use this file except in compliance with the License.\n>  * You may obtain a copy of the License at\n>  * \n>  * http://www.apache.org/licenses/LICENSE-2.0\n>  *\n>  * Unless required by applicable law or agreed to in writing, software\n>  * distributed under the License is distributed on an \"AS IS\" BASIS,\n>  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n>  * See the License for the specific language governing permissions and\n>  * limitations under the License.\n>  *\n>  */\n> ```\n> \n> ## TO ALL SOURCE FILES.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/272\n. I'm on it\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> Any source file we distribute needs this copyright. So says legal.\n> On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> wrote:\n> \n> > Even the files on topcoat.github.com?\n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > notifications@github.com wrote:\n> > \n> > > add this:\n> > > \n> > > ```\n> > > /**\n> > > *\n> > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > *\n> > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > * you may not use this file except in compliance with the License.\n> > > * You may obtain a copy of the License at\n> > > *\n> > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > *\n> > > * Unless required by applicable law or agreed to in writing, software\n> > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > implied.\n> > > * See the License for the specific language governing permissions and\n> > > * limitations under the License.\n> > > *\n> > > */\n> > > ```\n> > > \n> > > ## TO ALL SOURCE FILES.\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/272\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652150\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n. Boo. I mean, yay! (Secret boo)\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 5:26 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> I found out the hard way that compiled source files need extra special\n> care. Need to use some banner magic in most cases. Good times.\n> On Jun 18, 2013 5:22 PM, \"Garth Braithwaite\" notifications@github.com\n> wrote:\n> \n> > I'm on it\n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\n> > notifications@github.com wrote:\n> > \n> > > Any source file we distribute needs this copyright. So says legal.\n> > > On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> > > wrote:\n> > > \n> > > > Even the files on topcoat.github.com?\n> > > > \u2014\n> > > > Sent from Mailbox for iPhone\n> > > > \n> > > > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > > > notifications@github.com wrote:\n> > > > \n> > > > > add this:\n> > > > > \n> > > > > ```\n> > > > > /**\n> > > > > *\n> > > > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > > > *\n> > > > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > > > * you may not use this file except in compliance with the License.\n> > > > > * You may obtain a copy of the License at\n> > > > > *\n> > > > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > > > *\n> > > > > * Unless required by applicable law or agreed to in writing, software\n> > > > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > > > implied.\n> > > > > * See the License for the specific language governing permissions and\n> > > > > * limitations under the License.\n> > > > > *\n> > > > > */\n> > > > > ```\n> > > > > \n> > > > > ## TO ALL SOURCE FILES.\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > > https://github.com/topcoat/topcoat/issues/272\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub<\n> > > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652150>\n> > > > .\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652537\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652931\n. We're putting together usage docs now and @kristoferjoseph is writing blog posts.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 18, 2013 at 11:36 PM, edwin xue notifications@github.com\nwrote:\n\n> What I can find are just benchmark and blog.\n> \n> ## The cache on Google's search result isn't good\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/273\n. Not yet, but there is a design for one https://github.com/topcoat/design\n. Kraig,\n\nThis is great, but the underlying problem is that it is being generated\nfrom other files with the header, and they are being included.  If we\naccepted your pull request it would fix it for now, but it would ultimately\nreturn if we don't fix the generator script.\n\nThanks,\nGarth\n\nOn Thu, Jun 27, 2013 at 11:44 AM, Kraig Walker notifications@github.comwrote:\n\n> Addresses #283 https://github.com/topcoat/topcoat/issues/283\n> \n> Moved License statement to the beginning of each file. Removed the\n> \n> ## duplicate license statements scattered across the files.\n> \n> You can merge this Pull Request by running\n> \n>   git pull https://github.com/KraigWalker/topcoat 283\n> \n> Or view, comment on, or merge it at:\n> \n>   https://github.com/topcoat/topcoat/pull/284\n> Commit Summary\n> - Remove duplicate license statements in files.\n> \n> File Changes\n> - _M_ release/css/topcoat-desktop-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-0(111)\n> - _M_ release/css/topcoat-desktop-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-1(110)\n> - _M_ release/css/topcoat-mobile-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-2(110)\n> - _M_ release/css/topcoat-mobile-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-3(113)\n> \n> Patch Links:\n> - https://github.com/topcoat/topcoat/pull/284.patch\n> - https://github.com/topcoat/topcoat/pull/284.diff\n. We could pass a regex through to topdoc for comments to ignore\n\nOn Tue, Jul 2, 2013 at 9:38 AM, Kristofer Joseph\nnotifications@github.comwrote:\n\n> @KraigWalker https://github.com/KraigWalker these duplicate headers are\n> the Bain of my existence. The issue is legal requires a license header in\n> every file and most usage guide generation libraries simply copy over any\n> comments and parse out the bits they need to display. Topdochttps://github.com/topcoat/topdocshould help us fix this. Thanks again for helping out!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/284#issuecomment-20358176\n> .\n. yes - strengthening the spec would help a ton.\n\nOn Tue, Jul 2, 2013 at 10:25 AM, Kristofer Joseph\nnotifications@github.comwrote:\n\n> @GarthDB https://github.com/GarthDB Totally. I think we should do what\n> we had discussed before and add a delimiter for comments we want ignored.\n> Example: comments starting with /**! should be ignored.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/284#issuecomment-20361331\n> .\n. Was it overwritten by the topdoc README? I'll file that as a bug- it shouldn't use the README file.\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Jul 1, 2013 at 6:13 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> Yeah probably. I will revert it, thanks :+1: \n> \n> ## cc @kristoferjoseph #:beer: ?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/288#issuecomment-20280579\n. need to fix, but I'm moving it out to 0.6.1 to get 0.6.0 released.\n. Maybe put the example in an iframe?\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Jul 3, 2013 at 4:54 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ## Found the issue. It was a combination of the comment above and the fact that the HTML was indented using tabs and not spaces. Now topdoc correctly generates the guide for the component. Problems is that is the modal is positioned absolute.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/290#issuecomment-20408182\n. We have one in progress, but I'm moving it out to 0.7.0\n. so, can we close this? or are you waiting on 0.7.5 to close it?\n. [added](http://topcoat.io/tab-bar/)\n. Implemented in 0.6.0 - tested, tab works.\n. We are removing StyleDocco dependency and we have a new documentation generation tool called [Topdoc](https://github.com/topcoat/topdoc)\n. added.\n\nhttps://github.com/topcoat/topcoat.github.com/pull/7\n. So - skinning a select is not really possible on firefox without a js workaround.  Something we can do, just wanted to explain why it wasn't done correctly the first time.\n\nhttp://stackoverflow.com/questions/9620404/styling-a-select-element-in-firefox\n. @nimbupani we have one in the works - it will come out with the next release.\n\nhttp://codepen.io/GarthDB/pen/lawjE\n. http://topcoat.io/topcoat/ ?\n\nI fixed it on Friday.  It might be cached or something, refresh it and let me know if you are still having issues.\n. ![image](https://f.cloud.github.com/assets/125516/844181/278d2b1a-f3ce-11e2-8242-8526ceae5dfd.png)\n. On mobile and desktop right?\n. @numediaweb it is something we would love to do, but it has to be iceboxed for now. Other higher priorities\n. This will be fixed with https://github.com/topcoat/topcoat/issues/363\n. fixed in 0.6.0\n. Some progress toward it this sprint.\n\nHow would you envision it working @kruyvanna?\n. Sorry I meant implementation. We were discussing it being a secondary color so that if you switched to a dark theme the foreground would be dark and the back menu would be light. Is that what you would expect?\n. Ok. That's what we're working towards.\n. I adjusted the topdoc-theme, to make the other stuff optional, so it works for components too now.\n. This is already fixed in 0.6.0.  We are working on getting that out shortly.\n\n![topcoat 2013-08-14 12-59-12](https://f.cloud.github.com/assets/125516/964748/fe1e3a6c-051b-11e3-98e3-1e4fd59f8cf8.jpg)\n. We do, you can specify a local directory for the theme as well.\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 5:32 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ![image](https://f.cloud.github.com/assets/810040/968595/92400308-05a6-11e3-96f0-a4a992ff7cc6.png)\n> \n> ## It happens if you are not connected to the internet to pull the theme files, we might want to have a fallback for this, but it can wait for 0.6.1\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/351\n. Great idea. \u00a0I'll close this bug and open one on topdoc.\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 7:09 AM, Andrei Oprea notifications@github.com\nwrote:\n\n> ## Great. Then all there is to it is just capture that event that overflows the stack and display an appropriate error message.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/351#issuecomment-22704923\n. Holly has updated the app. https://github.com/hollyschinsky/TopcoatPlay/\n\nWe still need to get overlay, spinner, and progress bar finished up so she can get rid of all the bleeding edge components.\n. Want\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Thu, Aug 15, 2013 at 2:06 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> ## +100000\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/354#issuecomment-22730200\n. Nice, thanks @headwebmonkey.\n. let's just have the topcoat text clickable\n. Fine, I was curing cancer, but I'll stop that, and fix it now.\n. So, take out the edge web fonts? and css font-face embedding?\n. Topdoc can handle that.\n. done.\n. I fixed this in the theme, I'll be pushing it up shortly.\n. Sorry, I misread - this is for @piatra to change.  Just make it look like Topcoat.io and make it clickable to return home.\n. @piatra it would probably be best just to use:\n\n`iframe: true`\n. I hope so - I'm starting on button first, and testing the component specific theme, then I'll fill in the rest and we rinse and repeat.\n. Did it on button - seemed to work out pretty well.\n\nLet's make a list of all the components and start ripping through them.\n\n![nod](http://www.reactiongifs.com/wp-content/uploads/2013/08/dr-mccoy-and-captain-kirk-approve.gif)\n. I'm updated all the pull requests ready to be swarmed upon to accept them.\n\n![underwear dance](http://www.reactiongifs.com/wp-content/uploads/2013/08/underwear-dance.gif)\n. nailed it.  Thanks @kristoferjoseph \n. textarea is way to big\n. someone made a comment about it http://topcoat.io/posts/mini-release-0.7.5/#comment-1090571585\n. I'll throw it in\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Sat, Aug 24, 2013 at 8:41 AM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> ## The mobile layout of the Topdoc demo theme requires the \"Hamburger\" menu icon. This was previously being handled by the components gruntfile in a copy task. This should instead be bundled with the theme.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/372\n. I added it to the theme, and updated all the pull requests with the topdoc 0.2 update.\n. I'll delete it the script tag\n\n```\n\u2014\n```\n\nSent from Mailbox for iPhone\n\nOn Mon, Aug 26, 2013 at 2:36 PM, Kristofer Joseph\nnotifications@github.com wrote:\n\n> The topdoc theme still includes the edge web fonts script tag which cases an error in the page when ran locally.\n> \n> ## Fonts render correctly in the page though.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/374\n. Fixed.\n\nhttps://github.com/topcoat/topdoc-theme/commit/b6527cc7416c0252c4d79516a76812cf24267432\n. Making progress\n\n![dance](http://images.obesityhelp.com/uploads/profile/285814/albums/125682/HappyDance.gif)\n. I'm just using topdoc to rebuild to the root directory. \u00a0Much easier.\n. what are we holding on for this?\n. which will be out later today\n. can you? doesn't npm require a main?\n. Yes. It should.\n. It is having issues building tab-bar.\n\n```\nRunning \"clean:release\" (clean) task\n\nRunning \"stylus:mobilelight\" (stylus) task\n>> Error: src/topcoat-tab-bar.styl:19\n>>    15| * limitations under the License.\n>>    16| \n>>    17| */\n>>    18| @import button\n>>  > 19| @import button-bar\n>>    20| / topdoc\n>>    21|   name: Tab Bar\n>>    22|   description: Component of tab buttons\n>> \n>> failed to locate @import file button-bar.styl\nWarning: Stylus failed to compile. Use --force to continue.\n\nAborted due to warnings.\nnpm ERR! weird error 6\nnpm ERR! not ok code 0\n```\n. Found it - it needed topcoat-button-bar-base as a dependency as well.\n. now getting an error on the topcoat\n\n```\nRunning \"stylus:mobilelight\" (stylus) task\n>> Error: node_modules/topcoat-tab-bar/src/topcoat-tab-bar.styl:90\n>>    86|   @extend .button--disabled;\n>>    87| }\n>>    88| \n>>    89| .topcoat-tab-bar__button:focus,\n>>  > 90| .topcoat-tab-bar__button--large:focus {\n>>    91|   z-index: 1;\n>>    92| }\n>>    93| \n>> \n>> Failed to @extend \".button-bar__item > input\"\nWarning: Stylus failed to compile. Use --force to continue.\n```\n. https://github.com/topcoat/topcoat/pull/400\n. @nnnnic :+1: \n. FASTER!\n. Are you downloading it or building it yourself?\n. Yeah, the license header is repeated a ton. That's the only real issue.\n. I would use the min version in production, it doesn't have that issue.\n. They are actually separate selectors.  This is mostly caused by the fact that the stylesheet is generated by very modular individual components.  We need to find some better ways to optimized the built stylesheet, but those two line aren't wrong or repeating themselves exactly.\n. I'm closing this issue - I opened one that is a bit more clear. https://github.com/topcoat/topcoat/issues/398\n. ![2013-09-16 10-32-20](https://f.cloud.github.com/assets/125516/1151134/f0fe6e8a-1ef5-11e3-8c61-cbb7ae1d0da6.png)\n\nLooks really good.  We'll need to do some refactoring to get it in the build process we have in place, but this is great.\n. That's the plan, but we'll generate pngs for fallback.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 6:33 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> ## It seems to me that an efficient SVG is current best practice.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24558314\n. To be honest, svg support is so good now it may not be necessary.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 6:33 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> ## It seems to me that an efficient SVG is current best practice.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24558314\n. Svg has been spotty on previous versions of android browser too. Also topcoat isn't just mobile. We haven't optimized for ie yet, but I suspect we'll stick with ie9+\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Sep 16, 2013 at 7:45 PM, Vic Cekvenich notifications@github.com\nwrote:\n\n> Yes, for all the mobile users that use IE <9. \n> \n> ## I recommend not testing for IE. Even JQuery does not support it.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/401#issuecomment-24560601\n. It is not just mobile, we have [desktop components](http://topcoat.io/posts/desktop-parity-party/) as well, and they would use\nthe icons.\n. What issue are you seeing?\n. There shouldn't be a modal. Which browser and version?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Sep 18, 2013 at 7:39 AM, bedspax notifications@github.com wrote:\n\n> Hi @GarthDB take a look here: http://cl.ly/image/032B0K1n0a09\n> \n> ## maybe there is a bug in that modality. \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/402#issuecomment-24669033\n. Looking at http://www.topcoat.io/topcoat \n\nI'm not seeing the issue on Firefox \n![topcoat 2013-09-18 07-54-12](https://f.cloud.github.com/assets/125516/1165769/2cc87d7a-2072-11e3-9771-0b5c01c20073.png)\n\nor ios\n\n![ios 7 0 11a4372q 2013-09-18 07-56-00](https://f.cloud.github.com/assets/125516/1165789/6d8769d4-2072-11e3-935d-88abba187806.png)\n. are you trying to use the menu in a different project and it isn't working?\n. We're using the same code on the individual component demo sites, and it doesn't seem to have a problem with less  content.\n\nTry http://topcoat.io/button-bar/\n. I'm closing the issue for now.  Reopen if you still have an issue.\n. We looked for stylus sourcemap support but it doesn't seem to be finished.\n\nhttps://github.com/LearnBoost/stylus/pull/886\n. Closing this one, since it is a duplicate https://github.com/topcoat/topcoat/issues/346\n. Turns out autoprefixer is the culprit, that's when the topdoc for text-input disappears.\n\nNow that I've isolated it I need to pin point what about autoprefixer and the topdoc comment that isn't getting along.\n. Funny that the missing component issue happens to be number 404\n. It looks like there is an issue with notification coming in.  It works on the individual component so I'm not sure what's going on.\n. https://github.com/topcoat/topcoat/issues/406\n. It is intentionally left out. @kristoferjoseph had to a bit of tweaking to make sure it stayed out.\n. :+1:\n. I think the argument for keeping in one file is that it has a simplicity to it.  It feels simpler even if it isn't.\n\nIf we can get variables down to something manageable, we might want to consider keeping in one file with comments.\n. ![mlfw1021_rainbow_dash_says_youre_awesome](https://f.cloud.github.com/assets/125516/1268017/741b5dc4-2cd3-11e3-9234-46cb819e1741.gif)\n. Super weird. What platform and browser version?\n. well, then I'll assign you to it.\n. We do use preprocessors - we use stylus. We could make a way to set a default img folder and override it in variables.\n. Sounds great. Let's cdn our images.\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Feb 4, 2014 at 7:45 AM, nnnnic notifications@github.com wrote:\n\n> Ah good one!!\n> \n> > On Feb 4, 2014, at 7:34 AM, Kristofer Joseph notifications@github.com wrote:\n> > \n> > Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9.\n> > \n> > Thanks for the issue!\n> > \n> > \u2014\n> > \n> > ## Reply to this email directly or view it on GitHub.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/427#issuecomment-34072520\n. - [x] https://github.com/topcoat/list/pull/8\n- [x] https://github.com/topcoat/search-input/pull/12\n- [x] https://github.com/topcoat/textarea/pull/6\n- [x] https://github.com/topcoat/button-bar/pull/4\n- [x] https://github.com/topcoat/navigation-bar/pull/6\n- [ ] https://github.com/topcoat/tab-bar/pull/1\n. single css file?\n. they probably have icons as well (depending on what they pick).\n\nAlso it needs to be automated so when we add new components it gets added to the customizer.\n. We have our best man working round the clock on it now!\n\nThank you for alerting us kind citizen!.\n. just joking - @kristoferjoseph already fixed it.\n. We just released 0.8 - and updated the demo pages to show off the sweet sweet new features.  Blog post and all the other jazz coming next week.\n. I did a breadcrumb, color picker, and tree for brackets.\u00a0\n\nI'll post them here. Use them however you want.\n. @nnnnic made a nice codepen for the Breadcrumbs http://codepen.io/nnnnic/pen/Gtaug\n. ![nested_editors_breadcrumbs js editor](https://f.cloud.github.com/assets/125516/1434559/6912ab02-411f-11e3-9752-122d0aaad232.png)\n![nested_editors_inception editor](https://f.cloud.github.com/assets/125516/1434560/691a830e-411f-11e3-8c00-b9feebff4ebd.png)\n![nested_editors_popover color editor](https://f.cloud.github.com/assets/125516/1434561/6922375c-411f-11e3-88ac-7452ded16412.png)\n\nShows off designs that were just explorations on Breadcrumbs (not enough contrast, but more linky), Tree (file explorer), and Color Picker (both modal and inline).\n. Tony will be sad.\n. We are using stylus- the components are spread out through different repos.\n\nWhat are looking to change?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sat, Oct 26, 2013 at 10:38 AM, webos notifications@github.com wrote:\n\n> I'm a newbie - so please excuse if it's a stupid question.\n> I could not find LESS files corresponding to the CSS. Can someone please help?\n> \n> ## Thanks in advance\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/437\n. No problem. If you have any issues finding anything, let us know.\n\nAlso check out the latest [blog post](http://topcoat.io/posts/color-me-topcoat/) on theming.\n. Is there a way to set it to make a custom namespace with out it being a different theme?\n\nIf we setup the variable for the name space and let people change it - that would be interesting.\n. :+1: \n. I think it's the border around three sides, but not the 4th that is the issue.  Right @kruyvanna ?\n\nNot sure how we could fix that - we could look into it.\n. For accessibility. \u00a0The focus makes it easy to use tab and spacebar to activate buttons without a mouse.\n. Not sure about safari, but that's how ff treats focus. It also doesn't do active with the keyboard spacebar. Just how the browser acts.\n. let's take overlay off for this release - eh?\n. And progress bar\nand Spinner\n. overlay is finished http://topcoat.io/overlay\n. Yeah. Apple popovers are delicious.\n. A contribute page?\n. @Timothep very true. We are about to overhaul all the components and clean them up. \n. The theme file is compiled together with the main css file for each (ie mobile dark, desktop light, etc).\n\nDownload the latest build https://github.com/topcoat/topcoat/archive/v0.8.0.zip and in the css directory you should find everything. I just checked and switch and textarea are in mobile dark.\n. ![photo](https://f.cloud.github.com/assets/125516/1569805/78a327c0-50d5-11e3-9142-2ebb789684ed.PNG)\n. HELVETICA!\n\nThis was most likely caused by the optimizations, the other js files seemed to be loading fine, but it might be messing with the typekit loader.  I'll play with it and see what I can do.  Maybe I'll try edge web fonts.\n. Do you mean vertically, horizontally, or both?\n\nNeither placeholders nor the values are set to be centered horizontally in topcoat. If it is centering the value in your project it is coming from your css.\n\nIf you want to center the placeholder in your project use the placeholder selector.\u00a0http://css-tricks.com/snippets/css/style-placeholder-text/\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Nov 19, 2013 at 1:10 AM, Matthieu Hostache\nnotifications@github.com wrote:\n\n> Hi, I have a problem with placeholders inputs in mobile theme of topcoat v0.8.0 when testing on a android phone in version 4.1.2. Placeholders are not centered. The problem affect just placeholder not value like you can see in screenshots. With a computer browser i haven't the problem.\n> ![placeholder-pb](https://f.cloud.github.com/assets/1550192/1570954/7b8915b6-50f9-11e3-907e-115df6826659.jpg)\n> \n> ## ![screenshot_2013-11-19-09-59-59](https://f.cloud.github.com/assets/1550192/1570955/7f12cf60-50f9-11e3-81df-a73572c04b2f.png)\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/453\n. Because android. \u00a0In kitkat the inconsistencies should get better.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Nov 19, 2013 at 7:21 AM, Matthieu Hostache\nnotifications@github.com wrote:\n\n> ## I mean vertically. In an older version, v0.6.0 i guess, it work fine. By default it is vertically centered http://topcoat.io/topcoat/topcoat-mobile-dark.html. Why a difference between browsers ? Like i said in a computer browser it work fine (vertically centered).\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/453#issuecomment-28798201\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. The next release has a new design and will start from an orphaned branch, so none of this will still exist.. Looking into it now. \u00a0It should all be rem. \u00a0Only px for border width.\n\nOn November 25, 2013 at 2:06:51 PM, Oleg Slobodskoi (notifications@github.com) wrote:\n\nThere is a \"watch\" button in the bottom :)\n\n\u2014\nReply to this email directly or view it on GitHub.\n. We are updating all the components and the way the theme is used before the next version.\n\nIf the problem persists I look at it then.\n. We normally stick to the latest versions and heavily test WebKit/chrome. Is there something in particular you're looking for?\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com wrote:\n\n> ## Is there a support list somewhere? Thanks\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/457\n. We probably won't go back as far as ie7 or the older android browser. We're focusing on chrome on android especially with kitkat's improved support.\n\nWe don't currently test on windows mobile, but we would like to include it in the future.\n\nWe wouldn't reject any contributions that make topcoat more universal if you'd like to help out.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 1, 2013 at 11:35 PM, kokujin notifications@github.com wrote:\n\n> Windows Phone, IE7 and 8, Android 2 the troublesome stuff actually\n> On Mon, Dec 2, 2013 at 7:37 AM, Garth Braithwaite\n> notifications@github.comwrote:\n> \n> > We normally stick to the latest versions and heavily test WebKit/chrome.\n> > Is there something in particular you're looking for?\n> > \n> > \u2014\n> > Sent from Mailbox for iPhone\n> > \n> > On Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com\n> > wrote:\n> > \n> > > ## Is there a support list somewhere? Thanks\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/457\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/457#issuecomment-29597374\n> > .\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/457#issuecomment-29599209\n. Yes. We are in the process of updating to a new build process and all the pieces and components have to be updated or none of it will work, so using the older versions is a way to get around that.\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Dec 11, 2013 at 5:37 AM, Eugen F notifications@github.com wrote:\n\n> Ok, so what I've found - here's what you should change in the package.json file:\n> \"topcoat-button-bar-base\": \"~0.1.3\", to \"topcoat-button-bar-base\": \"0.1.3\",\n> \n> ## then run npm install and after it compiles perfectly.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/458#issuecomment-30320470\n. Oleg,\n\nThis is true. We've done quite a bit of work to remove unnecessary shadows, but the main theme uses them in the design. We have done some initial work on a flat theme that could be used and will have better mobile optimization.\n\nThanks,\n\nGarth\n\n\u2014\nSent from Mailbox for iPhone\n\nOn Fri, Dec 13, 2013 at 3:47 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> Hi\n> Topcoat seems to be a performance focused framework designed for mobile, but it still uses box and text shadows, which are known to cause performance issues on mobile devices.\n> What do you think? \n> Best,\n> \n> ## Oleg\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/461\n. @silverbucket So Topcoat is a css only.  We want to make so demo apps that show how it can be implemented in apps, but really it is about ui not functionality.  You need the js side of things to really get that slider action in your application/website.  Feel free to look at how we implemented it.\n. You could look at the source for the page or check out the topcoat.github.com repo\u2014\nSent from Mailbox for iPhone\n\nOn Fri, Dec 20, 2013 at 11:43 PM, Nick Jennings notifications@github.com\nwrote:\n\n> Hi @GarthDB thanks for the reply. One of the problems I'm having is that I cannot find any examples of how you implemented it. I only see it in the screenshots, but there are so many repositories in this github org, and nothing named 'slide'.\n> \n> ## Could you please point me to an example implementation?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/463#issuecomment-31058745\n. Good catch. We originally used kss and realized it didn't fit all of our needs and made topdoc.\u2014\nSent from Mailbox for iPhone\n\nOn Sun, Dec 22, 2013 at 10:15 AM, numediaweb notifications@github.com\nwrote:\n\n> In the [Coding Guidelines](https://github.com/topcoat/topcoat/wiki/Coding-Guidelines#wiki-comments) Wiki page, the documentation states that the best practice for commenting CSS is to use [KSS](https://github.com/kneath/kss). However, the Topcoat.io blog post [Generating Documentation for CSS Components](http://topcoat.io/posts/generating-css-component-documentation/) suggests using [Topdoc](https://github.com/topcoat/topdoc) for comment structure since it allows easier documentation generation.\n> \n> ## Looking inside the current CSS we find that it uses the Topdoc structure.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/464\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe; we'll have to do some more browser testing as part of that.. We are working on a new build process - I think there was an issue with the previous build with the npm version number.  @kristoferjoseph might know more.\n. @maelp I'm not sure if we want to hard code it in there, but you can just add `align-text: left;` to `.topcoat-checkbox` and it works.\n\nHere's a [codepen](http://codepen.io/GarthDB/pen/yghHk) showing it off.\n. Designers don't need access to design.\u2014\nSent from Mailbox for iPhone\n\nOn Wed, Jan 22, 2014 at 5:58 PM, nnnnic notifications@github.com wrote:\n\n> ## Can't push the designz yo!\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/473\n. Added you, try now.\n. We'll have to circle back to documentation like getting started stuff as part of the next release.. The copyright needs to be updated to reflect the release year correct?\n. moar less designs faster.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We'll have to start from scratch on this with the new release.. Thanks @nnnnic - we're clearing it all out and will have to start from scratch in the next release.. Nope. Could you Codepen the component?\u2014\nSent from Mailbox for iPhone\n\nOn Sat, Feb 15, 2014 at 1:12 AM, abampakos notifications@github.com\nwrote:\n\n> Hi,\n> I have an application that uses AngularUI's carousel directive and I plan to migrate it in topcoat css. Is there any similar directive in topcoat, that I can use?\n> \n> ## Thanks,\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/483\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. There are no current plans for a carousel component in the next release.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. - [ ] [navigation-bar](http://github.com/topcoat/navigation-bar) @piatra\n  - https://github.com/topcoat/navigation-bar/pull/8\n  - needs pull req for theme as well. \n  - tests only contained mobile. is that right?\n- [ ] [list](http://github.com/topcoat/list) @piatra \n  - this component does not use height properties, only padding. It's good to go :)\n- [ ] [button](http://github.com/topcoat/button) @garthdb\n- [ ] [textarea](http://github.com/topcoat/textarea)\n- [ ] [switch](http://github.com/topcoat/switch)\n- [ ] [icon-button](http://github.com/topcoat/icon-button)\n- [ ] [checkbox](http://github.com/topcoat/checkbox)\n- [ ] [search-input](http://github.com/topcoat/search-input)\n- [ ] [tab-bar](http://github.com/topcoat/tab-bar)\n- [ ] [radio-button](http://github.com/topcoat/radio-button)\n- [ ] [text-input](http://github.com/topcoat/text-input)\n- [ ] [notification](http://github.com/topcoat/notification)\n- [ ] [button-list](http://github.com/topcoat/button-list)\n- [ ] [range](http://github.com/topcoat/range)\n- [ ] [select](http://github.com/topcoat/select)\n- [ ] [button-bar](http://github.com/topcoat/button-bar)\n- [ ] [overlay](http://github.com/topcoat/overlay)\n. @piatra I'm working through button and I'll take a look at what you are doing with navigation-bar.  What changes do you think we need added to theme?  Is there a padding change?\n. did you put the value in it?\n. Wondering if he added anything to vars that would be the same in other components.  There is potential that we would be adding tons of different padding values, just trying to condense.  I'll have button done shortly. I got a little sidetracked, but I'll be back at it.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. We are no currently planning on supporting the android browser the next release, and just going to focus on Chrome for Android.. We are cleaning house on these issues as we are getting ready for a new start on Topcoat from a new team within Adobe. We'll have to circle back on this implementation to see if it will work for what we are thinking.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We'll have to address this with the new release.. Oleg,\n\nThe goal of the default theme is for the components to be the same regardless of the styles applied to the parent. It is safer and less complicated for a larger user base, but your right, there are times you want something different, in those cases you should alter the theme to fit your project's needs.\n. We went through the options and have discussed the benefits of both. After weighing the options we decided on rems for exactly the reasons @piatra mentioned. By using rems we have a more universal usable component set by default.\n\nI would encourage a custom theme for anything different.\n\u2014\nSent from Mailbox for iPhone\n\nOn Mon, Apr 7, 2014 at 6:00 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> ## @GarthDB thats what @piatra said. The question is if we can do it play nicely for both cases. Making  size adjustment for 1 component just 1 single definition of font-size.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/492#issuecomment-39726388\n. We considered using classes instead, but it requires js for state, which is not the goal of topcoat. Anything that needs that level of integration with js should be custom.\n\nThe reason for the hover in mobile is because desktop and mobile are a single theme with separate variables which is easier for maintainance on the default theme. I agree with Andrei, if we wanted to fix it, we'd probably clean out hover on build using grunt.\n. Definitely a possibility. I'd get @kristoferjoseph's opinion.\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Apr 8, 2014 at 8:12 AM, Oleg Slobodskoi notifications@github.com\nwrote:\n\n> ## difficult ... topcoat first goal is mobile, but it ist ready to make it right ...\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/493#issuecomment-39860053\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. We should be able to make a way to bring back the hover classes if needed.. I work for Adobe but do not necessarily represent it. I was working full time on topcoat for work and have been moved to another project. I'm still committed, but don't have the same amount of time.\n. And I'm on paternity leave so emails are sparse from me right now.\u2014\nSent from Mailbox\n\nOn Thu, May 15, 2014 at 8:40 AM, Garth Braithwaite garthdb@gmail.com\nwrote:\n\n> I work for Adobe but do not necessarily represent it. I was working full time on topcoat for work and have been moved to another project. I'm still committed, but don't have the same amount of time.\n. @iaef Adobe is not supporting Topcoat.  @kristoferjoseph and I want to work on it, but life is busy and we're working hard to carve out time.\n. @Cryrivers you can trust it as far as it is working for you. It is css, it isn't going to break anything.\n\nIt wasn't actually used in brackets, it was used in some other adobe products that are no longer in production. We are looking to resume work on Topcoat, but it will be on our own time, Adobe is not committed to it now.\n. @mscreenie I would love some help if you want to make any contributions.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe; we'll be focusing on the components needed for Adobe products, to begin with.. @Davidx7 we do want to fix it. We need to set our sever and testing phone back up again.\n. We haven't tested it. Is it something you'd like to help putting together?\n. We should add it to the README.\r\nWe are cleaning things up and getting ready for a new start on Topcoat from a team within Adobe; we should make sure to add it to the next release.. @allthingssmitty don't really worry about the tests. The main repo hasn't had tests in the past, I turned them on for the work I'm doing on 1.0.0. We could add a basic test to just see if it is building without errors.\n. We are cleaning up and getting ready for a new start on Topcoat from a team within Adobe. This will be addressed with the next release.. Hey @piatra do you want to chat sometime about getting it back? I could probably get budget to get a mac mini to set it up with a nexus I have around.\n. Hey @metaloha sorry for the delay.\n\nTopcoat is viable and I'm making progress. It is currently just me, so if you would like to contribute I would be happy to have any help.\n. Lots of progress - will write on the blog about it as I get more parts working together.\n. There isn't, and no current plans for one.. @misterbrownlee hahaha. ",
    "kristoferjoseph": "@piatra Yup, we should talk over using Cartilage for this.\n. Looking into this.\nAm proposing to use RECESS to help with consistency:\nhttp://twitter.github.com/recess/\n. This is what we are using. https://github.com/necolas/idiomatic-css\n\nYou can use csscomb and/or recess to help you at dev time. \n. Idiomatic CSS is meant to be used as a guide for creating your own coding guidelines. I have added our specific coding guidelines here:\nhttps://github.com/topcoat/topcoat/wiki/Coding-Guidelines\n. Agreed. Definitely in the plans.\n. Bootstrap is awesome, we love it and we will be making contributions to that as well I am sure.\n\nWith that said we had different goals for TopCoat. \nWe actually started out by trying to theme Bootstrap and decided that it really didn't make sense.\n\nThere are two parts to TopCoat, as stated above: \n1.) A set of Mobile styles that is intended for use with Cordova projects, but will be useful to all HTML mobile projects *we hope. These will focus on extreme performance.\n2.) A set of Desktop caliber components that will blend with native operating systems. \nBoth of these goals are outside of Bootstrap's purview.\n*Think as Ratchet is to Bootstrap...\n\nFor desktop, we started out making a css and html style guide for use internally with our Edge desktop applications. \nThis style guide needed to make as few assumptions as possible so that different teams could drop in html and css \"components\". This was inspired mainly by Dan Cederholm's Pears project. The plan was to iterate on these lowest common denominator ( css, html ONLY ) components while working on Edge products to keep them lean. We always planned on growing this as needed ( LESS, components, modularizing, builds, and optional js *eventually ). \n\nFor Mobile the plan is to use a test suite, aimed at performance, to drive component decisions. *Someone else can fill this part in better.\n\nThe idea was to grow TopCoat organically as the needs arise, for real applications, with real use cases and real data.\nWhat you see here are the early stages so that we can develop in the open, with you.\n. > When you say \"teams could drop in html and css components\" you mean to say that while the styling of components will follow a particular style guide, the components themselves will be open to development from the community? This will certainly be different than Boostrap where the components are fixed, but people can skin them through the LESS files.\n\n@gaurav21r What I meant by \"teams could drop in html and css components\" was we were purposely not adding any steps to the process other than copy and paste.\n\nAs for taking pull requests from the community we definitely should.\n\nI would like to see us make it easy to theme as well.\n. Bug filed with chromium:\nhttps://code.google.com/p/chromium/issues/detail?id=95260\n. This is due to using background-clip: padding-box.\nThe comment states that this is used to keep the background from bleeding into the borders, but switching it to border-box fixes this and doesn't seem to cause any other issues.\n\nDoes anyone remember what case this was added for? Would like to test it. Thanks.\n. Fixed in new components. *This makes me so very happy to say.\n. This might be nice once we have javascript unit tests to run. This isn't needed currently though, unless we can create benchmark tests that output junit style data.\n. I totally agree that this is the lowest friction route to getting CI for unit tests up and running though.\n. Thanks for fixing the grunt file. I missed how badly the auto merge mangled it.\n. This seems to be a bug in Stylus that appears to be fixed:\nhttps://github.com/LearnBoost/stylus/pull/935\n\nI am still not able to get imported copyright comments to be included in the generated CSS though. I have added the copyright directly to the topcoat.styl file for the time being. We should check in on this at a later date to see if this gets fixed.\n. This is a duplicate of #125 Closing\n. Looks great, now with secret buttons.\n. Am Writing up documentation.\nSomeone will need to close this after signing off on the docs. \nWant to make sure they make sense ;)\n. Fixed!\n. @jrowny Good point. We could use an existing open source icon set. I'll post this to the list.\n. Solved by npm as of 0.6.0\n. Please test running npm install then grunt to make sure everything build correctly.\n. Nice!\nMoving forward grunt@0.4+ will need to be installed locally to the project\ninstead of globally. I am gearing up the project to be able to switch over\nas soon as 0.4 is released.\n\nOn Wednesday, February 6, 2013, Jonathan wrote:\n\n> NPM install worked fine. I did get one warning on the npm install\n> complaining that grunt@0.3.17 should be installed with -g. I already have\n> grunt installed globally, I'm not sure what the practice is on this but\n> running grunt worked fine.\n> \n> Grunt executed stylus, copied to font and img, and minified the CSS with\n> no errors. I tested src/desktop which seems to look okay.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/76#issuecomment-13217540.\n\n## \n\nKristofer\n. Want. \nIn the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n. Was able to get Telemetry set up and targeting our test pages.\nCan format data.\n_BLOCKED_ Need to set up server env to store data and graph. __deferred_ until I can find time or a server :(\n. @jrowny This fixes the issue you discovered. Thanks for catching that. Was a hold over from refactoring from LESS to stylus.\n. This should be added as [Topcoat Codepen](codepen.io/Topcoat) usage example. These examples will be listed in the Topdoc generated demo pages.\n. Fixed this with issue #125 \n. I think we should be ok once the \"next\" branch lands. I will be registering the components with Bower and Component as I build them out. We just need to keep checking to make sure that adobe/topcoat is removed from ALL registries. \n. Specific registry bug is being tracked at #128 which depends on https://github.com/twitter/bower/issues/search?q=120\n. Updating README\n. README correct for now. We will need to update these instructions once the \"next\" branch lands to describe how to incrementally include components. \n. TopCoat is for installed applications not responsive websites. i.e. PhoneGap apps / Chrome packaged apps.\n. @ChristianWeyer Depends on what you mean by responsive. All of the sizes in Topcoat are relative so the components scale proportionately. Very few installed applications ( think phone, tablet, desktop OS ) employ the same techniques as say a responsive website would. Furthermore interaction patterns; even though they are converging, are still not the same between say Photoshop on your desktop and Photoshop touch. Most applications we see have multiple compilation targets ( think Apple stores iPhone and iPad sections or Google Play's app and HD app ). As @GarthDB  stated above there is nothing stopping a developer from combining the Topcoat desktop and mobile themes with a media query. A Topcoat open web theme for making websites would look very different and have media queries baked in. This theme does not exist in Topcoat today.\n. Assigned to @g1sh to put the most capable designer on it. There is a similar request to ad h1-h6 recommendations. I feel that @garthdb's modal design should inform this decision. \n. Being tracked here: https://github.com/twitter/bower/issues/search?q=120\n. We  should lower the priority of this issue for the time being. I have a proposed solution for now that will get us to 1.0 without needing to solve the bower registry issues.\n\nBeing tracked here:\n#135 \n. The idea here is to use git as our distribution channel. We REALLY want to use component or bower or volo or or npm, we jus want to wait and see who wins. For now pulling from git in our grunt script will work just fine.\n. We should consider using [Typeplate](http://typeplate.com/)\n. :boom:\n. @nnnnic There is an existing bug that seems related about font weights and contrast. You think this is a two marmots with one pillow scenario? We might want to consider the blog font weights and contrast as well seeing as I am going blind while writing posts.\n:beers:\n#336 \n. [Forked to Topcoat](http://codepen.io/Topcoat/pen/dFiro)\n. related #127 \n. That is e beauty of source control. It isn't gone, we can always get it\nfrom commit history.\n\nOn Saturday, March 9, 2013, cataling wrote:\n\n> If we want to remove test/experiments, I suggest moving it to a new repo.\n> There's stuff there we'll want to look at later - like the transition\n> effects.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/143#issuecomment-14677650\n> .\n\n## \n\nKristofer\n. The idea here is we are distributing everything under the topcoat repo. We\nwill be generating docs i.e. a style guide that will be distributed with\nthe project. Think Jsdocs. This is where the generated style guide should\nend up so it makes sense to put our interim one here.\n\nOn Saturday, March 9, 2013, cataling wrote:\n\n> Why is it re-adding the doc folder? I thought we decided to move that\n> under the https://github.com/topcoat/topcoat.github.com (where topcoat.iois mapped to)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/143#issuecomment-14677643\n> .\n\n## \n\nKristofer\n. I think a topcoat/experiments repo could be cool though. \nThe reason for doing this cleanup is I had multiple people tell me that the last release was broken because of unused files being scattered around the project. We are distributing everything under this repo so only currently used items should be included. \n. @adrocknaphobia Can you update the cla scripts so we can move these pages out of this repo please?\nThe new urls are:\nhttp://topcoat.io/dev/topcoat-cla.html\nhttp://topcoat.io/dev/topcoat-cla-thanks.html\n\nThank you kindly\n. This is referring to renaming the css that is currently living in docs/css to be generated.\n. I have a grunt-topcoat task that reads the topcoat section of the package.json file and downloads the tagged version specified of all the controls listed as well as the theme. Am adding the same to the theme today to download all the listed skins. \n. posted the source for this grunt task here:\n[grunt-topcoat](https://github.com/topcoat/grunt-topcoat)\n. You can use the github API to download a nightly, but I am not sure if there is a way to specify a SHA. \n. Added nightly support.\n. There is a POC rework branch checked in to the topcoat/button repo.\nThe release CSS shows some of the bugs I ran into working with rework.\n. Steps to complete:\n- [x] add grunt-topcoat task to download tagged version zip of specified controls and theme\n- [x] add grunt-topcoat task to theme to download the tagged skins\n- [x]  add step to build to unzip dependencies.\n- [x] Add step to remove left over .zip files\n- [x] add step to build to compile the specified controls and their skin file and the appropriate variables\n- [x]  compile a mobile-light-theme.css, mobile-dark-theme.css, desktop-light-theme.css, desktop-dark-theme.css, and their minified versions.\n- [ ] Add all the existing mobile components to the generated mobile theme css files\n- [ ] Add all the existing desktop components to the generated mobile theme css files\n\n:boom:  \n. There is a [todo](https://github.com/topcoat/grunt-topcoat/blob/master/tasks/topcoat.js#L71) that outlines how to download a nightly. I couldn't find a way to download a sha, but there probably is a way. Am thinking we should create a separate task to add nightly support and focus on getting tagged artifacts working for this release. \n. I got nightly downloads working. If you leave off the version number in the package.json it pulls the nightly archive from master. Run the tests in grunt-topcoat to see it. \n. Some caveats:\nI don't like how specific the stylus compile task is now:\nhttps://github.com/topcoat/topcoat/blob/next/Gruntfile.js#L44\n\nTrying to think of a better way to do this. It would require a naming convention for elements to include in paths and import. The goal is to be able to swap out a theme and not have to edit the stylus compile task. \n\nI don't like having to lump the skins in with the theme:\nhttps://github.com/topcoat/theme/blob/master/src/skins/button-skin/src/topcoat-button.styl#L9\n\nThis is needed for now because I don't know what the name of the theme folder will be after it is unzipped. Otherwise I would rename it and then use the grunt-topcoat task to download the skins into it after its unzipped. \n\nPull down the topcoat[next] branch and run grunt. It will download dependencies, compile the correct CSS and generate a style guide. Now we just need to add all the components and tweak the CSS. \n. Awesome! Thanks @piatra. I think this clean task should be added to the main grunt file in the topcoat repo. Am trying to figure out a way to drive pulling in all assets from the topcoat repo's build. \n. Coming soon AnyConference\n. Coming soon in 0.4\n. Fixed with positioning:\nhttp://codepen.io/Topcoat/pen/AmnEu\n. If you make this pull request against the next branch I can merge it there.\n. Thanks Andrei!\n. Fixed by npm!\n. Added this style, now need to figure out how to integrate it into the build.\n. Thanks for the heads up. We will make sure to keep this in mind.\n. @standup75 I closed this because it was a duplicate of #282 \n. Started by @nnnnic http://codepen.io/nnnnic/pen/ahAtr\n. [Forked to Topcoat](http://codepen.io/Topcoat/pen/mbwIy)\n. How do we feel about:\nhttp://codepen.io/dam/pen/dIFeG\nAdded:\n/\\* ---------- darken ---------- */\nvar-dark    = 5\nvar-darker  = 5.5\nvar-darkest = 25.9\n\n/\\* ---------- lighten ---------- */\nvar-light    = 13.1\nvar-lighter  = 15\nvar-lightest = 24\n\n/\\* ---------- alphas ---------- */\nvar-alpha--high = 0.5\nvar-alpha--med  = 0.23\nvar-alpha--low  = 0.1\n\n/\\* ---------- colors ---------- */\nvar-color = #454545\nvar-background-color = #e5e9e8\nvar-background--body = #DFE2E2\nvar-highlight-color = #fff\nvar-shadow-color = #000\n\n/\\* ---------- thickness ---------- */\nvar-border-thickness = 1px\n. Sounds reasonable. Will edit and fork back to Topcoat now.\n@GarthDB do you have any edits?\n. Light Variables:\nhttps://gist.github.com/anonymous/6891678\n. OK good to know.\nI always develop against \"nightly\" untagged versions anyways.\n\nThanks\n. No longer needed since we are extending base components now.\n. This is due to a no longer used node module.\n. This node module has been removed due this issue.\nPlease let me know if this issue persists when you grab the latest and run the build again:\nhttps://github.com/topcoat/topcoat/archive/0.2.5.zip\n\nThanks!\n. All of the source is available for browsing. It is all in different repos. The grunt file just stitches them together based on what it included in the package.json file. \n. Please look in the docs/styleguide folder and tell me if that works for you.\nThanks for filing this. We really appreciate it!\n. Exactly. We are creating this from the ground up publicly. Adding more components and docs daily. This is open source so if anything is missing feel free to suggest it or make a pull request.\n. Will be fixing this when we switch from the design examples to the generated styleguide\n. Will be fixing this when we switch from the design examples to the generated style guide.\n. Depends on #201 \n. [FIXED](http://topcoat.io/topcoat/topcoat-mobile-light.html#navigation-bar)\n. Here is another example:\nhttp://codepen.io/kristoferjoseph/pen/EqADa\n. It is now, thanks for adding it.\n. Fixed in master of Navigtion bar base and Navigation bar and Utils\nWill be in 0.4.0 release.\n. +1 :+1:  :beers: \n. @larz0 Good point. I still feel the font is too small even in Brackets and Reflow.\n. The part I feel is missing is showing the styles in context of their use. We should show them in a desktop app setting and in comparison to common desktop applications like Mail etc.\nFurthermore font size is a theme variable that people can configure for their own use cases.\nClosing.\n. We are targeting installed apps currently, so if this effects Firefox OS we will ABSOLUTELY fix this. \n. Awesome. Thanks for the screen shots @sime!\n. @jlembeck Thanks for fixing those spelling mistakes. Can you sign out CLA so I can merge this?\nhttp://topcoat.io/dev/topcoat-cla.html\n\nThanks!\n. this was per @jared-wyles request. We should use pseudos for all other repeating components. i.e. button-group, tab-bar, etc.\n. Fixed in list master. Will be in 0.4.0 release.\n. Ah, are the instructions clear enough? Should we update them to keep others from having the same first run experience?\n. If you have any ideas on how to make this clearer, please file an issue and I will update. Thanks again!\n. We are planning on handling requests like these by making example apps. I made a quick and dirty example of this already and will be fixing it up.\n. @puppetMaster3 :beers:\n. No longer relevant since we have agreed that a theme and skins are dependent on each other. Seems you can make a new theme of an existing skin set, but not the other way around.\n. Good point. \n. @nicovalencia Thanks for looking into this. We really appreciate the follow up answer.\n\nFiled a bug with grunt-styleguide:\nhttps://github.com/indieisaconcept/grunt-styleguide/issues/12\n. @nicovalencia Thank you very much for following this. I really appreciate it.\n. This will effect people using a new checkout of chromium source and our telemetry tests.\n. @ynliu @piatra Is this bug still valid?\n. This is a bug. I already filed one #224 to address some of these issues. Yes we should be using grunt-topcoat and the same compile tasks to build the subcomponents.\n. Happening now\n. @nicovalencia Good questions!\nthe compile task in the /tasks dir runs the stylus tasks with the dynamic configuration data gathered _after_ the grunt-topcoat task has pulled down and unzipped all of the dependencies specified in package.json\n\nThis makes the watch task a little more complicated *which is why I haven't updated it yet. Was hoping to get feedback from someone like you who wants to use it.\n\nI was imagining the workflow would be something like:\nYou run the default grunt task which pulls down the initial dependent repos.\nYou edit the files downloaded in to the src/ dir and use the watch task to recompile the style guide to view your changes.\nYou then commit the final changes to the dependencies repo once you are happy with your edits.\nAlternatively if you follow the directory structure of the existing repos you could just create a new component in the src/ dir of topcoat and it would be automatically compiled into the style guide.\nYou then create a new repo for this new component.\n\nMain thing to keep in mind is a default build will run a clean, deleting all contents of the src/ dir and replacing them with downloaded content from the dependency repos specified in package.json\n\nYou can run grunt docs to generate a new style guide without deleting the contents of src/ if you are working out of that dir. *This is actually what I do when I work on new components.\n. @nicovalencia The way I would encourage a designer to work on a theme would be to fork the topcoat/theme to username/theme and make a new theme-mytheme.styl file and copy the variables you want to change into it. Then you could change which theme you use in package.json run grunt then use a watch that runs grunt docs while you make edits to your theme. After that you add your changes to your theme and push to your own theme repo. This is only until we get the visual tool built...\n. BTW I would really like feedback on what properties people want to have exposed in a theme.\n. @kristoferjoseph UR DOIN EET WRONG!!!\nhttps://github.com/topcoat/list/blob/master/src/list.styl#L8\n. Will add example codepens for discussion.\n. Exactly. You can hot swap and hot patch anything in the src  directory then run `grunt docs` . You could even clone your component into src for a development time workflow. The reason we don't use submodules is to enable this hot swap workflow.\n. Fixed in https://github.com/topcoat/search-input/pull/3\n. This will occur in any component that has not had grunt-topcoat updated to the latest. The gtihub api changed which caused this issue.\n. I would rather implement a \"Show/Hide\" code feature so that people can see it if they want.\n. Looks right. Only ambiguous step is the 'clone all repos into tmp\ndirectory.' Assuming this is just for easy local manipulations.\nOn Jun 19, 2013 6:05 AM, \"Brian LeRoux\" notifications@github.com wrote:\n\n> @kristoferjoseph https://github.com/kristoferjoseph I'm going to have a\n> look at this on the plane. Can you verify this flow?\n> 1. Iterate the controls in topcoat/topcoat/package.json\n> 2. Clone each repo into a tmp directory\n> 3. Bump the MINOR on each control package.json and tag\n> 4. Push the tags\n> 5. Update the control versions in topcoat/topcoat/package.json\n> 6. Commit changes to topcoat/topcoat/package.json and push to Github\n> 7. Update the website download url and text\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/255#issuecomment-19682271\n> .\n. They are indeed:\nhttps://github.com/topcoat/navigation-bar/blob/master/src/topcoat-navigation-bar.styl#L7\n. Exactly, update the comments, run the build, check the usage guide.\n. This feels like a sensible approach.\n![h5d-sectioning-flowchart](https://f.cloud.github.com/assets/76308/655677/79118072-d519-11e2-8a8d-e5ecc8179524.png)\n*from this article: http://html5doctor.com/avoiding-common-html5-mistakes/\n\nLast thing I want is to devolve into pedantic debate with zealots. I feel we should do what makes these most portable while keeping them logically semantic.\n. No longer needed. We are using Codepen page instead to lower viewing friction.\n[Topcoat on Codepen](codepen.io/Topcoat)\n. @Trott  you complete me.\n. Bring it. We spare no underscores.\n. Good question. Will find out and update. Thanks!\n. Can you help us out with some more details please?\nWhich version of IE are you testing in?\nWhich version of Safari?\n. Closing due to lack of repro steps.\n. So sweet.\n\nKristofer\n\nOn Tue, Jul 16, 2013 at 3:13 PM, nnnnic notifications@github.com wrote:\n\n> Here's a quick restyling of what's already up. Full design is coming at a\n> later date.\n> \n> I wonder if we could eliminate the need to drill into a detail view by\n> just allowing people to just use the side nav. It seems like the only thing\n> we gain from clicking on \"detail\" currently is a little more real estate\n> for the graph.\n> \n> [image: tc-benchmark_main]https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png\n> [image: tc-benchmark_detail]https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png\n> [image: tc-benchmark_mobile]https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/268#issuecomment-21078203\n> .\n. Ask and ye shall receive.\n. Interesting. I have not enabled this workflow. Can you elaborate on the reasons as to why you need to work this way? Worst case scenario you could fork grunt-topcaot and add this functionality to your own version.\n. Thanks for the explanation. Will look into adding this.\n. Here is my proposal:\nI can expose the `proxy` variable which you can set in the Gruntfile with a proxy setting:\n\n```\ntopcoat: {\n            download: {\n                options: {\n                    srcPath: 'tmp/src/',\n                    repos: '<%= pkg.topcoat %>',\n                    proxy: 'http://uid:pw@proxy.domain.tld'\n                }\n            }\n        },\n```\n\n[Request proxy variable](https://github.com/mikeal/request)\n\n> - proxy - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it's supported with the url parameter by embedding the auth info in the uri.\n\nWould that work for you?\n. @schiller256 Nice! I feel like it would be better to be more explicit though so as not to have env variable ambiguity. I fear env variables magically causing grunt-topcoat to fail. Would you be terribly opposed to the fix I proposed above?\n. I tend to agree. Nothing is more frustrating than trying to find out what is going wrong when ghost env variables are introduced unknowingly.\n\nThanks for the feedback! Really appreciated. Will be pushing the fix as soon as my tests pass.\n. Update to grunt-topcoat 0.0.8 and test for me please!\n. Awesome! Thanks for letting me know it worked for you.\n. Any source file we distribute needs this copyright. So says legal.\nOn Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\nwrote:\n\n> Even the files on topcoat.github.com?\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> notifications@github.com wrote:\n> \n> > add this:\n> > \n> > ```\n> > /**\n> > *\n> > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > *\n> > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > * you may not use this file except in compliance with the License.\n> > * You may obtain a copy of the License at\n> > *\n> > * http://www.apache.org/licenses/LICENSE-2.0\n> > *\n> > * Unless required by applicable law or agreed to in writing, software\n> > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > implied.\n> > * See the License for the specific language governing permissions and\n> > * limitations under the License.\n> > *\n> > */\n> > ```\n> > \n> > ## TO ALL SOURCE FILES.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652150\n> .\n. I found out the hard way that compiled source files need extra special\ncare. Need to use some banner magic in most cases. Good times.\nOn Jun 18, 2013 5:22 PM, \"Garth Braithwaite\" notifications@github.com\nwrote:\n\n> I'm on it\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\n> notifications@github.com wrote:\n> \n> > Any source file we distribute needs this copyright. So says legal.\n> > On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> > wrote:\n> > \n> > > Even the files on topcoat.github.com?\n> > > \u2014\n> > > Sent from Mailbox for iPhone\n> > > \n> > > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > > notifications@github.com wrote:\n> > > \n> > > > add this:\n> > > > \n> > > > ```\n> > > > /**\n> > > > *\n> > > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > > *\n> > > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > > * you may not use this file except in compliance with the License.\n> > > > * You may obtain a copy of the License at\n> > > > *\n> > > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > > *\n> > > > * Unless required by applicable law or agreed to in writing, software\n> > > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > > implied.\n> > > > * See the License for the specific language governing permissions and\n> > > > * limitations under the License.\n> > > > *\n> > > > */\n> > > > ```\n> > > > \n> > > > ## TO ALL SOURCE FILES.\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/topcoat/topcoat/issues/272\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652150>\n> > > .\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652537\n> .\n. On it. I am working to get 0.5.0 out the door now. Will make a screencast directly after. :boom: \n. Good idea.\nFill out the CLA:\nhttp://topcoat.io/dev/topcoat-cla.html\n\nI will merge this and add you to the contributors list.\n\nThanks!\n. Perfect. Thanks again.\n. :beers: \n. @zakkain you and me both :no_good: \n. ![ltc](https://f.cloud.github.com/assets/76308/1037018/9a479ef8-0f47-11e3-86eb-3372eea8438b.jpg)\n. @KraigWalker these duplicate headers are the Bain of my existence. The issue is legal requires a license header in every file and most usage guide generation libraries simply copy over any comments and parse out the bits they need to display. [Topdoc](https://github.com/topcoat/topdoc) should help us fix this. Thanks again for helping out!\n. @GarthDB Totally. I think we should do what we had discussed before and add a delimiter for comments we want ignored. Example: comments starting with `/**!` should be ignored.\n. grunt-contrib-stylus should be added by grunt-topcoat. Will add it to the dependencies there. Thanks for reporting.\n. @GarthDB it must have been overwritten by generating the docs. \n@bennybennet I agree with you about the release folder, but a lot of non-developers were confused by the original folder structure. I feel that this new structure is more approachable for more users. Having an index page in the root makes the usage guides more discoverable as well as makes the topcoat repo deployable as a gh-page. \n. @bennybennet You can thank @nnnnic and @GarthDB for the usage new guides. There is no example for the overlay component in the CSS comments that is why it isn't showing up. @piatra wasn't sure what the best way to demonstrate it was. Am planning to make a codepen to hash it out, but feel free to link one of your own if you have any suggestions.\n. I super agree:\nIssue #336 \n. I agree the contrast is not right for Topcoat.io.\n\nThe issue here is we have created a design language for our desktop applications, which we expanded on for mobile applications. There hasn't been much thought given to what this design language would look like for web sites *on purpose. We will need to create a web version of this design language for use in this context. Thanks everyone who brought this up.  \n\n18px base font FTW!!!!\n. Depends on #127 \n. We should have Topdoc wrap all examples in an Iframe to get around this issue. Another benefit of this approach is that the iFrame gives the example it's own viewport for demonstrating responsive behavior. One consideration though is that iFrames do create their own style context so the cascade needs to be duplicated.\n. We will wait to deal with opera until after the blink mating session.\n. Looking into this. Not sure why this would fail since grunt-contrib-stylus is listed as a dependency. Will keep everyone posted.\n. After trying everything I could think of I just did the easiest thing as @piatra had suggested and added `grunt-contrib-stylus` to the package.json. Will look into what else we can do in the future, but at least it's working for now.\n. Yes. That was the idea. \n. This has been fixed in grunt-topcoat. 0.5.2 will be going up soon. If you want to test is out locally you can open package.json and change grunt-topcoat version to 0.0.11.\nThanks for filing the issue! Please let me know if you run into any more issues.\n. @brianleroux it is basically a button bar without the bottom border. It has some other different styling in that the selected state is opposite of button bar's. Very similar though. Both will happen at the same time.\n. Tab Bar *mobile\nhttp://codepen.io/Topcoat/pen/rJICF\n. @kruyvanna Thank for making this example! `display: table` makes a lot of sense.\nOne note, Topcoat separates layout and positioning from styling so that the components are more reusable in different compositions. I have updated the pen to reflect this.\nhttp://codepen.io/Topcoat/pen/rJICF\n\nThanks!\n. Thank you!\n:beers:\n. We have tab bar ready to roll.\n. I was thinking we wouldn't close it until it is in an official release. So yes, if it get's into a 0.7.5 release I would like to wait to close it then.\n. :beers: \n. @nnnnic @jahoni @larz0 @GarthDB  What should the focus state for these components look like?\n. :beers:\n. No more need for sprite sheets. We can just add a glow as\n@nnnnichttps://github.com/nnnnic has\nshown.\n\nKristofer\n\nOn Mon, Jul 29, 2013 at 2:55 PM, nnnnic notifications@github.com wrote:\n\n> I didn't think we were using sprites for these anymore. @kristoferjosephhttps://github.com/kristoferjosephfound a way to do it with pure CSS.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21754871\n> .\n. Awesome! Please pull request.\nOn Aug 1, 2013 7:45 AM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> Made this available for radio input, refactored the component to be CSS\n> only.\n> \n> Chrome & Firefox\n> [image: screen shot 2013-08-01 at 1 42 20 pm]https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png\n> [image: screen shot 2013-08-01 at 1 42 33 pm]https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png\n> [image: screen shot 2013-08-01 at 1 42 49 pm]https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png\n> \n> @kristoferjoseph https://github.com/kristoferjoseph have you worked on\n> this ? Should I do a pull req ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21930932\n> .\n. Cage fight!\nOn Aug 1, 2013 1:09 PM, \"nnnnic\" notifications@github.com wrote:\n\n> D'oh I made one too\u2026 haha!\n> https://github.com/topcoat/prototypes/tree/master/radio\n> \n> On Aug 1, 2013, at 5:29 AM, Kristofer Joseph <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n> \n> Awesome! Please pull request.\n> On Aug 1, 2013 7:45 AM, \"Andrei Oprea\" <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n> \n> > Made this available for radio input, refactored the component to be CSS\n> > only.\n> > \n> > Chrome & Firefox\n> > [image: screen shot 2013-08-01 at 1 42 20 pm]<\n> > https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png>\n> > \n> > [image: screen shot 2013-08-01 at 1 42 33 pm]<\n> > https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png>\n> > \n> > [image: screen shot 2013-08-01 at 1 42 49 pm]<\n> > https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png>\n> > \n> > @kristoferjoseph https://github.com/kristoferjoseph have you worked\n> > on\n> > this ? Should I do a pull req ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/309#issuecomment-21930932>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub<\n> https://github.com/topcoat/topcoat/issues/309#issuecomment-21932807>.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21952875\n> .\n. :beers:\nOn Aug 1, 2013 2:15 PM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> @nnnnic https://github.com/nnnnic if you could add\n> \n> position:absolute\n> left:-9999px\n> \n> I mentioned above I'll check in your component. That way we can simulate a\n> :focus state\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21957986\n> .\n. Here is a link to the spec we need to adhere to:\nhttp://www.w3.org/TR/WCAG20-TECHS/H44.html\n\nNotice we are only supporting modern browsers though so we need to solicit CURRENT screen reader and browser accessibility concerns.\n\nHere is a link to a codepen by one of our accessibility engineers:\nhttp://codepen.io/topcoat/pen/HDcJj\n\nWe are trying to determine what is actually needed for modern browsers. \n. Here is an updated codepen for radio buttons:\nhttp://codepen.io/topcoat/pen/HDcJj\n. On it.\n. This component needs to be refactored to use npm. *see button, checkbox, radio button etc.\n. @paulirish I feel should be the publisher. Any thoughts?\n. @paulirish We have open sourced all of the infrastructure including the [ci config](https://github.com/topcoat/topcoat-ci-config) and the [server](https://github.com/topcoat/topcoat-server). Would be very interested in discussing criteria for applying benchmarks to Effeckt. I am more than happy to see an Effeckt specific server set up. Let me know if I can help in any way.\n. @piatra Should we lump this into the 0.6.0 milestone? Or would you rather have more time on this?\n. @piatra sounds like a good plan... and launching as soon as my computer stops crashing :crying_cat_face: \n. removed\n. FIxed:\nhttps://github.com/topcoat/radio-button\n. Thanks!\n. Fixed for 0.7.0 already\n. @larz no. These are all the colors pulled from the psd.\n. Awesome!\nOn Aug 14, 2013 12:06 PM, \"nnnnic\" notifications@github.com wrote:\n\n> Started working on this:\n> http://codepen.io/nnnnic/pen/ahAtr\n> \n> Was starting in on the Light theme and realized we should be able to reuse\n> a lot of the same logic when applying dark colors as well.\n> \n> This would be ideal:\n> https://github.com/timhettler/cssconf-2013/tree/master/sass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/337#issuecomment-22658845\n> .\n. @larz0 \n![suuure](https://f.cloud.github.com/assets/76308/2517861/b0fbc898-b45d-11e3-8e15-cce459ab0e49.gif)\n. Awsome work @piatra! Thanks guys!\n. [Resin has support for source maps baked in](https://github.com/topcoat/resin/blob/master/index.js#L32). All that is remaining here is testing it with the newly published version of rework and making a screencast and accompanying blog post demonstrating the workflow.\n. Will be fixed in Topdoc separately Issue #11\n. Awesome. We also need to update the Jenkins tasks to work with npm now. Do you think publishing the telemetry grunt tasks would help with both of these issues?\n. :+1:  An examples repo with examples by pattern.\n. +100000\n. Excellent. grunt-topcoat-telemetry sounds fine. What about something more generic so we can add other benchmarking systems grunt-topcoat-benchmark? grunt-topcoat-perf?\n. Let's use the existing HTML pages in test/perf for now. We want the topdoc generated HTML files to stay how they are. Makes local development and demo pages for components much easier.\n. We will switch this to use bundles fonts. Thanks for filing the issue!\n. Yes. The theme has the source pro bundled with it. We used the copy task in the past to move the font dir.\n. This is really great. I know a lot of work went into getting this right. I can already see how this will speed up Topcoat development. Hopefully other projects will be able to use this as well.\n. That underwear dance gif might be my favorite ever.\n. The greatest trick...\n![soze](https://f.cloud.github.com/assets/76308/1031001/6effb85e-0ecd-11e3-8a2b-24c595bcc139.gif)\n. I looked into what is contributing to the size of input base. Multiple tags are 27+ gb\nOnly thing I can think of is that the node modules were included accidentally.\n\nWe should definitely nuke the psd from topcoats git history. We would also need to remove old tags, which I feel is ok for items older than three releases.\n\nHow does that sound @brianleroux?\n. @larz0 once this issue is closed you should give a once through. \nI will add the links to the pages for you in the comments of this bug. \nPlease file issues for anything we miss after that. \nShould be much more manageable for you holmes.\n\n![pray_kitteh](https://f.cloud.github.com/assets/76308/1031054/b7c8006c-0ecf-11e3-866d-b80a81108bf1.jpg)\n. @larz0 Yo, is there a comp for a desktop search input? Is this one good?\n[Search input](http://topcoat.io/search-input/)\n\nOtherwise we can pull the desktop version until someone adds it to the psd........... loading NaN%\n. @larz0 Anything for you my ninja.\nIf you feel like banging out some sizing scales it would make this stuff more fun to build.\n. @nnnnic @larz0 \n![rebecca_black](https://f.cloud.github.com/assets/76308/1045607/e7cd3346-1027-11e3-81be-49b2d0e63be2.jpg)\n. @larz & @nnnnic Here are the links to the components for design review:\n[Button](http://topcoat.io/button)\n[Button Bar](http://topcoat.io/button-bar)\n[Checkbox](http://topcoat.io/checkbox)\n[Icon Button](http://topcoat.io/icon-button)\n[List](http://topcoat.io/list) *Mobile only since there was no desktop design\n[Navigation Bar](http://topcoat.io/navigation-bar) *Mobile only. Will need designs for desktop header\n[Radio Button](http://topcoat.io/radio-button)\n[Search Input](http://topcoat.io/search-input)\n[Text Input](http://topcoat.io/text-input) \n[Text Area](http://topcoat.io/textarea) *Desktop version was not in psd so we took our best shot\n![bungee_jumper_hesitates](https://f.cloud.github.com/assets/76308/1050979/d6a5b674-10c2-11e3-8440-2f1e33ad09b8.gif)\n. Added in 0.7.0\n. Scale has been published.\n. Hold on merging please.\n. I ran it locally and had some issues with it. Wanted to have someone give it a proper review.\n. Fixed in 0.7.0\n. @piatra Let's remove the main entry for now.\n. @shancat we have an issue open to fix this in a 7.5 point release. Thanks for the screen grab.\n. All icons are hosted in this repo:\nhttps://github.com/topcoat/icons\n\nWe are not currently packaging them with the download.\n\nHere is [Icon Button](http://topcoat.io/icon-button)\n. @doman412 We are working out a way to deliver icons for use with Topcoat. \nWhat you see in the download was a first take at it. That is why only menu stack was referenced. \nIf you look at the new [Icon Button](http://topcoat.io/icon-button) you can see that we have removed the icon reference.\n. @piatra Thanks for the update. Will jump on this right away. Thanks!\n. Awesome! Will be reviewing it today.\n. This is awesome!\n. @fabricematrat we would need to refactor your [Button List](https://github.com/fabricematrat/button-list) to work like our [Button Bar](https://github.com/topcoat/button-bar).\n- [x] Readme needs to be updated to reflect the new component name\n- [x] package.json needs version number set to 0\n- [x] Needs to be forked by us to the topcoat org\n- [ ] published to npm\n- [ ] Added to topcoat package.json as a dependency\n- [ ] Your name added as the first external contributor to add a Topcoat component!!!\n. @fabricematrat Check out the topcoat fork https://github.com/topcoat/button-list. Will be updating it so we can merge it into the Topcoat build. Do you have a screenshot of how you are using this in an app? would love to see it.\nThanks again!\n. Very cool!\n. :beers:\n. the word transition was getting added twice :/\n. Was thinking we should use the same red as the notification: rgb(236, 81, 78)\n. Nice. Thx.\n. That is a great idea\nOn Oct 3, 2013 10:12 PM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> should this be across several files ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/417#issuecomment-25676891\n> .\n. We should wait until range has wider support.\n. Can you post a reduced case to a codepen or github repo? We have not been able to reproduce this issue with the information supplied. Are you using any js libraries for scrolling?\nThanks.\n. :+1: on it.\n. Thanks for bumping this issue. I have been refactoring the themeing workflow in order to satisfy the many asks we've gotten ( a lot from the Onsen UI team ).  I was hoping to update the docs as soon as this work is done so as not to be immediately outdated again. Want to cut down I the things that frustrate users. So very sorry @ResentedHook it is only me and I have a full time job in top of topcoat work. I realize this isn't a good excuse, but I wanted you to know I hear you and appreciate your requests. Thank you again. \n. already has position: relative.\n. :+1: Adding another issue for a wireframe theme. Thin black line, white bg. BOOM.\n. Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9. \n\nThanks for the issue!\n. @GarthDB Whatever proves out the process. A single file would be a nice starting point.\n. Making some common layouts to run benchmarks against.\nWill compare:\n- [ ] Float\n- [ ] Absolute\n- [ ] Flexbox\n. @cburgdorf we realized we need to add some more server infrastructure to do this correctly. We will lump all of that work together.\n. Love it!\nWas wondering why we had the double tab stop. Thanks!\nI am really not a fan of all the JS needed to add aria attributes. Sad this is the only reliable way to be accessible :(\n. That sounds fine.\nI was planning on using a sibling selector to add display: none to the tab panel to avoid js, but you are correct we would still need to add the accessibility attributes for the selected section.\nThanks for all the work on this. Very exciting to have an accessible tab set!\n. No, we haven't taken on a generic label yet. Have any suggestions?\n. # Solution:\n\n## [Download](https://github.com/topcoat/topcoat/archive/v0.8.0.zip) the current version of Topcoat\n\nYou must not be using the latest version of Topcoat. The version you are using doesn't have the height set.\n[Current search input does](https://github.com/topcoat/search-input/blob/master/css/topcoat-search-input-mobile-dark.css#L71)\n. Might have to show me this one.\n. The issue here is that a switch is not a button. \nIf you relate it to switch in the real world you would never click on a sliding control.\nIt responds to drag as well as click on the labels. We would need to add Javascript to add the click functionality.\n\nUse this switch I am proposing:\nhttp://codepen.io/dam/pen/HGpfs\n. What did Tony say @nnnnic? \n. Thanks @nnnnic!\nI am not feeling the little arrows. they feel heavy compared to the rest of the theme. Can we try out some different delimiter treatments? \n. :love_hotel: \n. The rework refactor is using placeholders. Namespaces are set at a skin level so that a user can combine multiple types of themed components in the same project without collisions.\n\nI hear a lot of users not liking the namespace addition though. We could implement this proposal and default to the `topcoat-` namespace and let users change it to their liking.\n\nI fear that an addition of this sort would cause more harm than good though.\n\nThere is no real argument to remove them. It doesn't effect functionality at all. I don't feel that visual cleanliness is a valid argument for removing a namespace which effectively pollutes the global space.\n\nThis would require a lot of work to implement and leaves the door open for bugs due to collision.\n\nThe recommended way to use topcoat without the namespace is to fork all the skin repos and remove it in your own fork. You can have your own skins without the namespace or any namespace you like there. \n. This is fixed in the upcoming 0.9 release. I wrote a rework-namespace plugin for rework that adds a namespace to a non-namespaced selector. I've also updated http://github.com/topcoat/grunt-topcoat to use resin and support this at compile time by supplying an optional namespace property. It currently defaults to the namespace topcoat.\n. @ahx my pleasure. There is still work needing to be done on the namespace plugin to handle edge cases ( I.e. don't add a second namespace if the same one exists etc. ), but it works very well for the default use case. Feel free to open issues on that specifically if you have any additional feature requests.\nThanks for the suggestions!\n. This bug I will hunt down with extreme prejudice!\n. Fixed in master now.\nPlease use the staging version at http://topcoat.io/switch\nLet me know if you see any more issues.\nThanks!\n. :+1:  Awesome!\n. We have switched to http://github.com/topcoat/resin in order to better handle issues like these.\nThis issue will be fixed in the upcoming 0.9 release.\n. https://github.com/cdnjs/cdnjs/pull/2165\n:beers:\n. @kof They are up:\nhttps://github.com/cdnjs/cdnjs/tree/master/ajax/libs/topcoat-icons/0.1.0\n. @nodoherty This comment is really great!\nAny interest in writing a post for the Topcoat blog with this content?\n:clap:\n. @nodoherty The steps for writing a blog post are in the README here:\nhttps://github.com/topcoat/topcoat.github.com\n\nBasically I would love for you to expound on the comment above. \nFeel free to add screengrabs or a video if you want.\n\nHit me with any questions you have.\nThis is awesome!\n. @nodoherty Awesome!\nJust make a pull request for the review and we can discuss it in the comments there.\n\nThanks bundles!\n:beers:\n. @timothep the icomatic generation is in the icons repo. It is in the directory named font.\ngithub.com/topcoat/icons/tree/master/font\nThose steps above describe how you can make a custom set.\n. @kof is there something missing from the font there now?\n. @kof OK. I'll generate those other formats today. Thanks for clearing that up.\n. @kof here is the cdnjs link:\nhttp://cdnjs.com/libraries/topcoat-icons/\nand a starter codepen to play with:\nhttp://codepen.io/Topcoat/pen/hyDBw\n. @kof all the files you asked for are there. \nLook at the directory listing here.\nhttp://cdnjs.com/libraries/topcoat-icons/\nLet me know if I missed anything.\n. @kof \n//cdnjs.cloudflare.com/ajax/libs/topcoat-icons/0.2.0/font/icomatic.ttf\n//cdnjs.cloudflare.com/ajax/libs/topcoat-icons/0.2.0/font/icomatic.woff\n\nYou are starting to make me wonder if I'm going crazy.\n. @kof these fonts are meant to be used with icomatic CSS. If you want to use them without it that is fine, but you will need to generate your own fonts. If you do end up generating a font that works as you like please feel free to commit it back as we would love to understand and support your workflow.\n. @kof the reason behind using the icon font this way is that it is less of a hack. It depends on custom ligatures to supply an icon. The ligature \"like\" ends up being much more semantic and accessible than assigning a thumbs up icon to a random letter in a typeface. Does that make sense? This is why icomatic is the supported format for icon fonts in Topcoat.\n. @kof oh good! Happy to be useful. \n. @gitMatthieuH The way we are centering placeholders is by setting the line-height to be the same as the height. Inspect to make sure line-height is the same as height and that line-height is not getting overridden by looking in dev tools.\n. We've looked into this at length and determined this is due to CSS added to the employee directory app. Out of the box topcoat works as expected.\n. @holzerma, I looked deeper into why we were using line-height at all for this case and have decided to remove it since it is causing problems. Look for the fix in the v0.9.0 release. Thanks!\n. Yes. We were depending on line-height for consistent vertical centering of\ntext regardless of typeface. I have decided to revise this due to the edge\ncases such as this that we have encountered. Have been testing out the best\nreplacement method.\n\nOn Friday, May 9, 2014, benjamintoddweb notifications@github.com wrote:\n\n> I have just experienced this whilst developing on my Samsung Galaxy Note 1\n> using topcoat v 0.8.0 and v 0.9.0. Googling around, this issue appears to\n> be a problem with the Android webview, not with topcoat. I have just come\n> up with a solution (a hack I'm afraid :-/) that works on my Note. I'm not\n> sure if it has any side effects with other devices. What I have done is\n> added this rule to my css file: -\n> \n> .topcoat-search-input {\n> line-height: 0;\n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/453#issuecomment-42689207\n> .\n\n## \n\nKristofer\n. @axemclion Been testing submitting the results. Trying to get all the staging issues out of the way so we can roll this into our 0.9 release. Looks awesome! Thanks!\n. The base font size for topcoat is 16px. We set this in order to have a basis for our rem measurements. We needed to reset this font size on buttons because there were cases where they were being used in inline-block situations that set the font size to 0 in order to fix an issue where elements would wrap inappropriately. This should disappear over time now that we are using display-table for bars and a grid based on flex-box. This will still crop up in the wild so we are coding defensibly right now. Sorry for the confusion.\n. @Timothep Yes, lot's of ideas. We are planning on adding an example layout to the demo page.\n. Starting to prototype different solutions.\nThis is the one I see most commonly:\nhttp://codepen.io/dam/pen/ipnvm\n\nThis one I like the most:\nhttp://codepen.io/dam/pen/kJgse it uses flexbox though so make sure your target supports it. http://caniuse.com/#feat=flexbox\n\nTry these solutions out and let me know how they work for you. \nThanks!\n. We use autoprefixer so you can specify what your targets are in a custom build.\nWith that said we are not adding in any quirks CSS or browser specific hacks currently.\n. @tehfoo Good idea. I think we are experiencing our first burn from using ~ instead of a solid version number. It is a one character fix. We should get those in there. Good catch @eugenf \n\nThanks \n. Can you give it a whirl now with a fresh pull from master? I made specific version dependencies. Please let me know if this fixes your issue.\n. Fixed.\n\n![screen shot 2013-12-21 at 3 42 24 pm](https://f.cloud.github.com/assets/76308/1796959/9b6c1c2a-6a99-11e3-805a-e006c63b92ce.png)\n\nThank you so much for catching that!\n. @kof Short answer YES.\nLong answer How much slower?\nWithout benchmarks and a complete theme implemented we have nothing to compare against.\nFlat theme in the works... it is FAF.\n. True. We can get a baseline of performance impact from comparing the deltas of our current benchmarks. You are right though a comprehensive test would give device specific results. I'm OK with just knowing roughly what the tradeoff is.\n. Fixed:\nhttps://github.com/topcoat/topcoat/wiki/Coding-Guidelines#wiki-comments\n. @kof still trying to reproduce this. Found a bunch of other annoying z-index related issues, but haven't had any luck on this. Can you please try and make a Codepen that reproduces the issue you saw?\n\nThank you so much for filing this. Really appreciate it.\n. @kof thank you so much for posting this. Will use this to repro case to fix it.\n. OK. I understand what the issue is now. It is because of the label z-index.\nNeed to come up with some ways to manage z-index better. We are seeing a lot of unexpected behavior around z-index on pseudo elements.\n. @axemclion I am still super excited to get this added. Can we try and enumerate what needs to be done still?\n. A sample server would be useful. If you want to post some sample data I could make a server as well. Anything to get this public. We would really like to have it working on mobile devices. This is due to the bug we've been following with @saucelabs?\n. We have been running the phone tests locally on phones we control. We are currently connecting to an Android phone. Probably can do this the same way.\n@ynliu any insights to lend here?\n. Awesome!\n. @artfedosejev We decided to not include a clear button to our component since all browsers handle this differently and it is trivial to add. \n@piatra Yes, on iOS this was handled by the browser.\n. @MattFriedman The overflow:auto property is there to allow the list to scroll items inside of it. The list items need to be clipped by the height of the list in order to see this work.\nhttp://codepen.io/dam/pen/GCnig\n\nThis is not a bug in Topcoat but possibly a rendering issue.\n. @stevega thank you for following up and sharing your solution.\n. @sp4ke  thanks for this pull request! Need to make sure you have signed the CLA ( sigh, legalities ) then I will merge. You rock!\n. Good idea.\n. Little did I know this is actually part of the new github organizations rollout. The topcoat org just hadn't been updated when I looked. Closing this issue and opening another to add getting started blob to all repo README.\n. We are good on the copyright until legal tells us otherwise :)\nThanks for the lolz?\n. Thanks!\n. Thanks! Illustrator adds all of this CDATA for some unknown reason.\n. Great idea!\nWill add the fix for the next release.\nThank you so much!\n. This is awesome!\nWe are experimenting with templates right now.\nThe idea is to make a separate repo for each template so people could only include the code they need to use.\nAn example of this can be found here:\nhttps://github.com/topcoat/button-bar-template\n\nI would love to have something like:\nbutton-bar-react\nbutton-bar-angular\nbutton-bar-lodash\netc.\nSo people could pull in or contribute what they need.\nThis not only optimizes the final application size, but is also more flexible. \nIt also insulates us a bit from the flavor of the week syndrome that plagues the JavaScript community.\n\nDoes that make sense to you?\n. Can't seem to find the \"jump for joy\" emoji to correctly convey my feelings. \nVery exciting!\n. Exactly that. \n. @GarthDB ya, what did you mean by \"did you put the value in\" ?\n. AH, right. We need to work on that overall variable approach. Generalize better. Agreed. Maybe I will start there, break the world and add in defaults as I fix it.\n. Ah, on Android browser! that is what was missing from the original issue. \nWill test the $#!^ out of this and see what we can do.\nI have been running into issues with z-index on pseudo elements. Going to make a version without z-indexes and see if that helps.\nThanks!\n. Cool.\nAny interest in making a codepen of this?\n. Once again @kof you have an excellent suggestion. \nWe had those classes previously and after Heydon Pickering called us out for not being semantic ( huh? ) we removed them as a knee jerk reaction. \nYou make a great point and I will make sure to get those back in.\n. Was thinking it would be better to have them all open and then close them once JS loads. That way it defaults to working always. More progressive enhancement like.\n. The servers that served the data are no longer maintained. The benchmarks work fine, there just isn't a database anymore to return data. \n. That is not the way I would \n. @piatra Yup, we should talk over using Cartilage for this.\n. Looking into this.\nAm proposing to use RECESS to help with consistency:\nhttp://twitter.github.com/recess/\n. This is what we are using. https://github.com/necolas/idiomatic-css\n\nYou can use csscomb and/or recess to help you at dev time. \n. Idiomatic CSS is meant to be used as a guide for creating your own coding guidelines. I have added our specific coding guidelines here:\nhttps://github.com/topcoat/topcoat/wiki/Coding-Guidelines\n. Agreed. Definitely in the plans.\n. Bootstrap is awesome, we love it and we will be making contributions to that as well I am sure.\n\nWith that said we had different goals for TopCoat. \nWe actually started out by trying to theme Bootstrap and decided that it really didn't make sense.\n\nThere are two parts to TopCoat, as stated above: \n1.) A set of Mobile styles that is intended for use with Cordova projects, but will be useful to all HTML mobile projects *we hope. These will focus on extreme performance.\n2.) A set of Desktop caliber components that will blend with native operating systems. \nBoth of these goals are outside of Bootstrap's purview.\n*Think as Ratchet is to Bootstrap...\n\nFor desktop, we started out making a css and html style guide for use internally with our Edge desktop applications. \nThis style guide needed to make as few assumptions as possible so that different teams could drop in html and css \"components\". This was inspired mainly by Dan Cederholm's Pears project. The plan was to iterate on these lowest common denominator ( css, html ONLY ) components while working on Edge products to keep them lean. We always planned on growing this as needed ( LESS, components, modularizing, builds, and optional js *eventually ). \n\nFor Mobile the plan is to use a test suite, aimed at performance, to drive component decisions. *Someone else can fill this part in better.\n\nThe idea was to grow TopCoat organically as the needs arise, for real applications, with real use cases and real data.\nWhat you see here are the early stages so that we can develop in the open, with you.\n. > When you say \"teams could drop in html and css components\" you mean to say that while the styling of components will follow a particular style guide, the components themselves will be open to development from the community? This will certainly be different than Boostrap where the components are fixed, but people can skin them through the LESS files.\n\n@gaurav21r What I meant by \"teams could drop in html and css components\" was we were purposely not adding any steps to the process other than copy and paste.\n\nAs for taking pull requests from the community we definitely should.\n\nI would like to see us make it easy to theme as well.\n. Bug filed with chromium:\nhttps://code.google.com/p/chromium/issues/detail?id=95260\n. This is due to using background-clip: padding-box.\nThe comment states that this is used to keep the background from bleeding into the borders, but switching it to border-box fixes this and doesn't seem to cause any other issues.\n\nDoes anyone remember what case this was added for? Would like to test it. Thanks.\n. Fixed in new components. *This makes me so very happy to say.\n. This might be nice once we have javascript unit tests to run. This isn't needed currently though, unless we can create benchmark tests that output junit style data.\n. I totally agree that this is the lowest friction route to getting CI for unit tests up and running though.\n. Thanks for fixing the grunt file. I missed how badly the auto merge mangled it.\n. This seems to be a bug in Stylus that appears to be fixed:\nhttps://github.com/LearnBoost/stylus/pull/935\n\nI am still not able to get imported copyright comments to be included in the generated CSS though. I have added the copyright directly to the topcoat.styl file for the time being. We should check in on this at a later date to see if this gets fixed.\n. This is a duplicate of #125 Closing\n. Looks great, now with secret buttons.\n. Am Writing up documentation.\nSomeone will need to close this after signing off on the docs. \nWant to make sure they make sense ;)\n. Fixed!\n. @jrowny Good point. We could use an existing open source icon set. I'll post this to the list.\n. Solved by npm as of 0.6.0\n. Please test running npm install then grunt to make sure everything build correctly.\n. Nice!\nMoving forward grunt@0.4+ will need to be installed locally to the project\ninstead of globally. I am gearing up the project to be able to switch over\nas soon as 0.4 is released.\n\nOn Wednesday, February 6, 2013, Jonathan wrote:\n\n> NPM install worked fine. I did get one warning on the npm install\n> complaining that grunt@0.3.17 should be installed with -g. I already have\n> grunt installed globally, I'm not sure what the practice is on this but\n> running grunt worked fine.\n> \n> Grunt executed stylus, copied to font and img, and minified the CSS with\n> no errors. I tested src/desktop which seems to look okay.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/76#issuecomment-13217540.\n\n## \n\nKristofer\n. Want. \nIn the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n. Was able to get Telemetry set up and targeting our test pages.\nCan format data.\n_BLOCKED_ Need to set up server env to store data and graph. __deferred_ until I can find time or a server :(\n. @jrowny This fixes the issue you discovered. Thanks for catching that. Was a hold over from refactoring from LESS to stylus.\n. This should be added as [Topcoat Codepen](codepen.io/Topcoat) usage example. These examples will be listed in the Topdoc generated demo pages.\n. Fixed this with issue #125 \n. I think we should be ok once the \"next\" branch lands. I will be registering the components with Bower and Component as I build them out. We just need to keep checking to make sure that adobe/topcoat is removed from ALL registries. \n. Specific registry bug is being tracked at #128 which depends on https://github.com/twitter/bower/issues/search?q=120\n. Updating README\n. README correct for now. We will need to update these instructions once the \"next\" branch lands to describe how to incrementally include components. \n. TopCoat is for installed applications not responsive websites. i.e. PhoneGap apps / Chrome packaged apps.\n. @ChristianWeyer Depends on what you mean by responsive. All of the sizes in Topcoat are relative so the components scale proportionately. Very few installed applications ( think phone, tablet, desktop OS ) employ the same techniques as say a responsive website would. Furthermore interaction patterns; even though they are converging, are still not the same between say Photoshop on your desktop and Photoshop touch. Most applications we see have multiple compilation targets ( think Apple stores iPhone and iPad sections or Google Play's app and HD app ). As @GarthDB  stated above there is nothing stopping a developer from combining the Topcoat desktop and mobile themes with a media query. A Topcoat open web theme for making websites would look very different and have media queries baked in. This theme does not exist in Topcoat today.\n. Assigned to @g1sh to put the most capable designer on it. There is a similar request to ad h1-h6 recommendations. I feel that @garthdb's modal design should inform this decision. \n. Being tracked here: https://github.com/twitter/bower/issues/search?q=120\n. We  should lower the priority of this issue for the time being. I have a proposed solution for now that will get us to 1.0 without needing to solve the bower registry issues.\n\nBeing tracked here:\n#135 \n. The idea here is to use git as our distribution channel. We REALLY want to use component or bower or volo or or npm, we jus want to wait and see who wins. For now pulling from git in our grunt script will work just fine.\n. We should consider using [Typeplate](http://typeplate.com/)\n. :boom:\n. @nnnnic There is an existing bug that seems related about font weights and contrast. You think this is a two marmots with one pillow scenario? We might want to consider the blog font weights and contrast as well seeing as I am going blind while writing posts.\n:beers:\n#336 \n. [Forked to Topcoat](http://codepen.io/Topcoat/pen/dFiro)\n. related #127 \n. That is e beauty of source control. It isn't gone, we can always get it\nfrom commit history.\n\nOn Saturday, March 9, 2013, cataling wrote:\n\n> If we want to remove test/experiments, I suggest moving it to a new repo.\n> There's stuff there we'll want to look at later - like the transition\n> effects.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/143#issuecomment-14677650\n> .\n\n## \n\nKristofer\n. The idea here is we are distributing everything under the topcoat repo. We\nwill be generating docs i.e. a style guide that will be distributed with\nthe project. Think Jsdocs. This is where the generated style guide should\nend up so it makes sense to put our interim one here.\n\nOn Saturday, March 9, 2013, cataling wrote:\n\n> Why is it re-adding the doc folder? I thought we decided to move that\n> under the https://github.com/topcoat/topcoat.github.com (where topcoat.iois mapped to)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/143#issuecomment-14677643\n> .\n\n## \n\nKristofer\n. I think a topcoat/experiments repo could be cool though. \nThe reason for doing this cleanup is I had multiple people tell me that the last release was broken because of unused files being scattered around the project. We are distributing everything under this repo so only currently used items should be included. \n. @adrocknaphobia Can you update the cla scripts so we can move these pages out of this repo please?\nThe new urls are:\nhttp://topcoat.io/dev/topcoat-cla.html\nhttp://topcoat.io/dev/topcoat-cla-thanks.html\n\nThank you kindly\n. This is referring to renaming the css that is currently living in docs/css to be generated.\n. I have a grunt-topcoat task that reads the topcoat section of the package.json file and downloads the tagged version specified of all the controls listed as well as the theme. Am adding the same to the theme today to download all the listed skins. \n. posted the source for this grunt task here:\n[grunt-topcoat](https://github.com/topcoat/grunt-topcoat)\n. You can use the github API to download a nightly, but I am not sure if there is a way to specify a SHA. \n. Added nightly support.\n. There is a POC rework branch checked in to the topcoat/button repo.\nThe release CSS shows some of the bugs I ran into working with rework.\n. Steps to complete:\n- [x] add grunt-topcoat task to download tagged version zip of specified controls and theme\n- [x] add grunt-topcoat task to theme to download the tagged skins\n- [x]  add step to build to unzip dependencies.\n- [x] Add step to remove left over .zip files\n- [x] add step to build to compile the specified controls and their skin file and the appropriate variables\n- [x]  compile a mobile-light-theme.css, mobile-dark-theme.css, desktop-light-theme.css, desktop-dark-theme.css, and their minified versions.\n- [ ] Add all the existing mobile components to the generated mobile theme css files\n- [ ] Add all the existing desktop components to the generated mobile theme css files\n\n:boom:  \n. There is a [todo](https://github.com/topcoat/grunt-topcoat/blob/master/tasks/topcoat.js#L71) that outlines how to download a nightly. I couldn't find a way to download a sha, but there probably is a way. Am thinking we should create a separate task to add nightly support and focus on getting tagged artifacts working for this release. \n. I got nightly downloads working. If you leave off the version number in the package.json it pulls the nightly archive from master. Run the tests in grunt-topcoat to see it. \n. Some caveats:\nI don't like how specific the stylus compile task is now:\nhttps://github.com/topcoat/topcoat/blob/next/Gruntfile.js#L44\n\nTrying to think of a better way to do this. It would require a naming convention for elements to include in paths and import. The goal is to be able to swap out a theme and not have to edit the stylus compile task. \n\nI don't like having to lump the skins in with the theme:\nhttps://github.com/topcoat/theme/blob/master/src/skins/button-skin/src/topcoat-button.styl#L9\n\nThis is needed for now because I don't know what the name of the theme folder will be after it is unzipped. Otherwise I would rename it and then use the grunt-topcoat task to download the skins into it after its unzipped. \n\nPull down the topcoat[next] branch and run grunt. It will download dependencies, compile the correct CSS and generate a style guide. Now we just need to add all the components and tweak the CSS. \n. Awesome! Thanks @piatra. I think this clean task should be added to the main grunt file in the topcoat repo. Am trying to figure out a way to drive pulling in all assets from the topcoat repo's build. \n. Coming soon AnyConference\n. Coming soon in 0.4\n. Fixed with positioning:\nhttp://codepen.io/Topcoat/pen/AmnEu\n. If you make this pull request against the next branch I can merge it there.\n. Thanks Andrei!\n. Fixed by npm!\n. Added this style, now need to figure out how to integrate it into the build.\n. Thanks for the heads up. We will make sure to keep this in mind.\n. @standup75 I closed this because it was a duplicate of #282 \n. Started by @nnnnic http://codepen.io/nnnnic/pen/ahAtr\n. [Forked to Topcoat](http://codepen.io/Topcoat/pen/mbwIy)\n. How do we feel about:\nhttp://codepen.io/dam/pen/dIFeG\nAdded:\n/\\* ---------- darken ---------- */\nvar-dark    = 5\nvar-darker  = 5.5\nvar-darkest = 25.9\n\n/\\* ---------- lighten ---------- */\nvar-light    = 13.1\nvar-lighter  = 15\nvar-lightest = 24\n\n/\\* ---------- alphas ---------- */\nvar-alpha--high = 0.5\nvar-alpha--med  = 0.23\nvar-alpha--low  = 0.1\n\n/\\* ---------- colors ---------- */\nvar-color = #454545\nvar-background-color = #e5e9e8\nvar-background--body = #DFE2E2\nvar-highlight-color = #fff\nvar-shadow-color = #000\n\n/\\* ---------- thickness ---------- */\nvar-border-thickness = 1px\n. Sounds reasonable. Will edit and fork back to Topcoat now.\n@GarthDB do you have any edits?\n. Light Variables:\nhttps://gist.github.com/anonymous/6891678\n. OK good to know.\nI always develop against \"nightly\" untagged versions anyways.\n\nThanks\n. No longer needed since we are extending base components now.\n. This is due to a no longer used node module.\n. This node module has been removed due this issue.\nPlease let me know if this issue persists when you grab the latest and run the build again:\nhttps://github.com/topcoat/topcoat/archive/0.2.5.zip\n\nThanks!\n. All of the source is available for browsing. It is all in different repos. The grunt file just stitches them together based on what it included in the package.json file. \n. Please look in the docs/styleguide folder and tell me if that works for you.\nThanks for filing this. We really appreciate it!\n. Exactly. We are creating this from the ground up publicly. Adding more components and docs daily. This is open source so if anything is missing feel free to suggest it or make a pull request.\n. Will be fixing this when we switch from the design examples to the generated styleguide\n. Will be fixing this when we switch from the design examples to the generated style guide.\n. Depends on #201 \n. [FIXED](http://topcoat.io/topcoat/topcoat-mobile-light.html#navigation-bar)\n. Here is another example:\nhttp://codepen.io/kristoferjoseph/pen/EqADa\n. It is now, thanks for adding it.\n. Fixed in master of Navigtion bar base and Navigation bar and Utils\nWill be in 0.4.0 release.\n. +1 :+1:  :beers: \n. @larz0 Good point. I still feel the font is too small even in Brackets and Reflow.\n. The part I feel is missing is showing the styles in context of their use. We should show them in a desktop app setting and in comparison to common desktop applications like Mail etc.\nFurthermore font size is a theme variable that people can configure for their own use cases.\nClosing.\n. We are targeting installed apps currently, so if this effects Firefox OS we will ABSOLUTELY fix this. \n. Awesome. Thanks for the screen shots @sime!\n. @jlembeck Thanks for fixing those spelling mistakes. Can you sign out CLA so I can merge this?\nhttp://topcoat.io/dev/topcoat-cla.html\n\nThanks!\n. this was per @jared-wyles request. We should use pseudos for all other repeating components. i.e. button-group, tab-bar, etc.\n. Fixed in list master. Will be in 0.4.0 release.\n. Ah, are the instructions clear enough? Should we update them to keep others from having the same first run experience?\n. If you have any ideas on how to make this clearer, please file an issue and I will update. Thanks again!\n. We are planning on handling requests like these by making example apps. I made a quick and dirty example of this already and will be fixing it up.\n. @puppetMaster3 :beers:\n. No longer relevant since we have agreed that a theme and skins are dependent on each other. Seems you can make a new theme of an existing skin set, but not the other way around.\n. Good point. \n. @nicovalencia Thanks for looking into this. We really appreciate the follow up answer.\n\nFiled a bug with grunt-styleguide:\nhttps://github.com/indieisaconcept/grunt-styleguide/issues/12\n. @nicovalencia Thank you very much for following this. I really appreciate it.\n. This will effect people using a new checkout of chromium source and our telemetry tests.\n. @ynliu @piatra Is this bug still valid?\n. This is a bug. I already filed one #224 to address some of these issues. Yes we should be using grunt-topcoat and the same compile tasks to build the subcomponents.\n. Happening now\n. @nicovalencia Good questions!\nthe compile task in the /tasks dir runs the stylus tasks with the dynamic configuration data gathered _after_ the grunt-topcoat task has pulled down and unzipped all of the dependencies specified in package.json\n\nThis makes the watch task a little more complicated *which is why I haven't updated it yet. Was hoping to get feedback from someone like you who wants to use it.\n\nI was imagining the workflow would be something like:\nYou run the default grunt task which pulls down the initial dependent repos.\nYou edit the files downloaded in to the src/ dir and use the watch task to recompile the style guide to view your changes.\nYou then commit the final changes to the dependencies repo once you are happy with your edits.\nAlternatively if you follow the directory structure of the existing repos you could just create a new component in the src/ dir of topcoat and it would be automatically compiled into the style guide.\nYou then create a new repo for this new component.\n\nMain thing to keep in mind is a default build will run a clean, deleting all contents of the src/ dir and replacing them with downloaded content from the dependency repos specified in package.json\n\nYou can run grunt docs to generate a new style guide without deleting the contents of src/ if you are working out of that dir. *This is actually what I do when I work on new components.\n. @nicovalencia The way I would encourage a designer to work on a theme would be to fork the topcoat/theme to username/theme and make a new theme-mytheme.styl file and copy the variables you want to change into it. Then you could change which theme you use in package.json run grunt then use a watch that runs grunt docs while you make edits to your theme. After that you add your changes to your theme and push to your own theme repo. This is only until we get the visual tool built...\n. BTW I would really like feedback on what properties people want to have exposed in a theme.\n. @kristoferjoseph UR DOIN EET WRONG!!!\nhttps://github.com/topcoat/list/blob/master/src/list.styl#L8\n. Will add example codepens for discussion.\n. Exactly. You can hot swap and hot patch anything in the src  directory then run `grunt docs` . You could even clone your component into src for a development time workflow. The reason we don't use submodules is to enable this hot swap workflow.\n. Fixed in https://github.com/topcoat/search-input/pull/3\n. This will occur in any component that has not had grunt-topcoat updated to the latest. The gtihub api changed which caused this issue.\n. I would rather implement a \"Show/Hide\" code feature so that people can see it if they want.\n. Looks right. Only ambiguous step is the 'clone all repos into tmp\ndirectory.' Assuming this is just for easy local manipulations.\nOn Jun 19, 2013 6:05 AM, \"Brian LeRoux\" notifications@github.com wrote:\n\n> @kristoferjoseph https://github.com/kristoferjoseph I'm going to have a\n> look at this on the plane. Can you verify this flow?\n> 1. Iterate the controls in topcoat/topcoat/package.json\n> 2. Clone each repo into a tmp directory\n> 3. Bump the MINOR on each control package.json and tag\n> 4. Push the tags\n> 5. Update the control versions in topcoat/topcoat/package.json\n> 6. Commit changes to topcoat/topcoat/package.json and push to Github\n> 7. Update the website download url and text\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/255#issuecomment-19682271\n> .\n. They are indeed:\nhttps://github.com/topcoat/navigation-bar/blob/master/src/topcoat-navigation-bar.styl#L7\n. Exactly, update the comments, run the build, check the usage guide.\n. This feels like a sensible approach.\n![h5d-sectioning-flowchart](https://f.cloud.github.com/assets/76308/655677/79118072-d519-11e2-8a8d-e5ecc8179524.png)\n*from this article: http://html5doctor.com/avoiding-common-html5-mistakes/\n\nLast thing I want is to devolve into pedantic debate with zealots. I feel we should do what makes these most portable while keeping them logically semantic.\n. No longer needed. We are using Codepen page instead to lower viewing friction.\n[Topcoat on Codepen](codepen.io/Topcoat)\n. @Trott  you complete me.\n. Bring it. We spare no underscores.\n. Good question. Will find out and update. Thanks!\n. Can you help us out with some more details please?\nWhich version of IE are you testing in?\nWhich version of Safari?\n. Closing due to lack of repro steps.\n. So sweet.\n\nKristofer\n\nOn Tue, Jul 16, 2013 at 3:13 PM, nnnnic notifications@github.com wrote:\n\n> Here's a quick restyling of what's already up. Full design is coming at a\n> later date.\n> \n> I wonder if we could eliminate the need to drill into a detail view by\n> just allowing people to just use the side nav. It seems like the only thing\n> we gain from clicking on \"detail\" currently is a little more real estate\n> for the graph.\n> \n> [image: tc-benchmark_main]https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png\n> [image: tc-benchmark_detail]https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png\n> [image: tc-benchmark_mobile]https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/268#issuecomment-21078203\n> .\n. Ask and ye shall receive.\n. Interesting. I have not enabled this workflow. Can you elaborate on the reasons as to why you need to work this way? Worst case scenario you could fork grunt-topcaot and add this functionality to your own version.\n. Thanks for the explanation. Will look into adding this.\n. Here is my proposal:\nI can expose the `proxy` variable which you can set in the Gruntfile with a proxy setting:\n\n```\ntopcoat: {\n            download: {\n                options: {\n                    srcPath: 'tmp/src/',\n                    repos: '<%= pkg.topcoat %>',\n                    proxy: 'http://uid:pw@proxy.domain.tld'\n                }\n            }\n        },\n```\n\n[Request proxy variable](https://github.com/mikeal/request)\n\n> - proxy - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it's supported with the url parameter by embedding the auth info in the uri.\n\nWould that work for you?\n. @schiller256 Nice! I feel like it would be better to be more explicit though so as not to have env variable ambiguity. I fear env variables magically causing grunt-topcoat to fail. Would you be terribly opposed to the fix I proposed above?\n. I tend to agree. Nothing is more frustrating than trying to find out what is going wrong when ghost env variables are introduced unknowingly.\n\nThanks for the feedback! Really appreciated. Will be pushing the fix as soon as my tests pass.\n. Update to grunt-topcoat 0.0.8 and test for me please!\n. Awesome! Thanks for letting me know it worked for you.\n. Any source file we distribute needs this copyright. So says legal.\nOn Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\nwrote:\n\n> Even the files on topcoat.github.com?\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> notifications@github.com wrote:\n> \n> > add this:\n> > \n> > ```\n> > /**\n> > *\n> > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > *\n> > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > * you may not use this file except in compliance with the License.\n> > * You may obtain a copy of the License at\n> > *\n> > * http://www.apache.org/licenses/LICENSE-2.0\n> > *\n> > * Unless required by applicable law or agreed to in writing, software\n> > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > implied.\n> > * See the License for the specific language governing permissions and\n> > * limitations under the License.\n> > *\n> > */\n> > ```\n> > \n> > ## TO ALL SOURCE FILES.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/272\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652150\n> .\n. I found out the hard way that compiled source files need extra special\ncare. Need to use some banner magic in most cases. Good times.\nOn Jun 18, 2013 5:22 PM, \"Garth Braithwaite\" notifications@github.com\nwrote:\n\n> I'm on it\n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Tue, Jun 18, 2013 at 5:21 PM, Kristofer Joseph\n> notifications@github.com wrote:\n> \n> > Any source file we distribute needs this copyright. So says legal.\n> > On Jun 18, 2013 5:15 PM, \"Garth Braithwaite\" notifications@github.com\n> > wrote:\n> > \n> > > Even the files on topcoat.github.com?\n> > > \u2014\n> > > Sent from Mailbox for iPhone\n> > > \n> > > On Tue, Jun 18, 2013 at 4:00 PM, Kristofer Joseph\n> > > notifications@github.com wrote:\n> > > \n> > > > add this:\n> > > > \n> > > > ```\n> > > > /**\n> > > > *\n> > > > * Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n> > > > *\n> > > > * Licensed under the Apache License, Version 2.0 (the \"License\");\n> > > > * you may not use this file except in compliance with the License.\n> > > > * You may obtain a copy of the License at\n> > > > *\n> > > > * http://www.apache.org/licenses/LICENSE-2.0\n> > > > *\n> > > > * Unless required by applicable law or agreed to in writing, software\n> > > > * distributed under the License is distributed on an \"AS IS\" BASIS,\n> > > > * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n> > > > implied.\n> > > > * See the License for the specific language governing permissions and\n> > > > * limitations under the License.\n> > > > *\n> > > > */\n> > > > ```\n> > > > \n> > > > ## TO ALL SOURCE FILES.\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/topcoat/topcoat/issues/272\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652150>\n> > > .\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/topcoat/topcoat/issues/272#issuecomment-19652479\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/272#issuecomment-19652537\n> .\n. On it. I am working to get 0.5.0 out the door now. Will make a screencast directly after. :boom: \n. Good idea.\nFill out the CLA:\nhttp://topcoat.io/dev/topcoat-cla.html\n\nI will merge this and add you to the contributors list.\n\nThanks!\n. Perfect. Thanks again.\n. :beers: \n. @zakkain you and me both :no_good: \n. ![ltc](https://f.cloud.github.com/assets/76308/1037018/9a479ef8-0f47-11e3-86eb-3372eea8438b.jpg)\n. @KraigWalker these duplicate headers are the Bain of my existence. The issue is legal requires a license header in every file and most usage guide generation libraries simply copy over any comments and parse out the bits they need to display. [Topdoc](https://github.com/topcoat/topdoc) should help us fix this. Thanks again for helping out!\n. @GarthDB Totally. I think we should do what we had discussed before and add a delimiter for comments we want ignored. Example: comments starting with `/**!` should be ignored.\n. grunt-contrib-stylus should be added by grunt-topcoat. Will add it to the dependencies there. Thanks for reporting.\n. @GarthDB it must have been overwritten by generating the docs. \n@bennybennet I agree with you about the release folder, but a lot of non-developers were confused by the original folder structure. I feel that this new structure is more approachable for more users. Having an index page in the root makes the usage guides more discoverable as well as makes the topcoat repo deployable as a gh-page. \n. @bennybennet You can thank @nnnnic and @GarthDB for the usage new guides. There is no example for the overlay component in the CSS comments that is why it isn't showing up. @piatra wasn't sure what the best way to demonstrate it was. Am planning to make a codepen to hash it out, but feel free to link one of your own if you have any suggestions.\n. I super agree:\nIssue #336 \n. I agree the contrast is not right for Topcoat.io.\n\nThe issue here is we have created a design language for our desktop applications, which we expanded on for mobile applications. There hasn't been much thought given to what this design language would look like for web sites *on purpose. We will need to create a web version of this design language for use in this context. Thanks everyone who brought this up.  \n\n18px base font FTW!!!!\n. Depends on #127 \n. We should have Topdoc wrap all examples in an Iframe to get around this issue. Another benefit of this approach is that the iFrame gives the example it's own viewport for demonstrating responsive behavior. One consideration though is that iFrames do create their own style context so the cascade needs to be duplicated.\n. We will wait to deal with opera until after the blink mating session.\n. Looking into this. Not sure why this would fail since grunt-contrib-stylus is listed as a dependency. Will keep everyone posted.\n. After trying everything I could think of I just did the easiest thing as @piatra had suggested and added `grunt-contrib-stylus` to the package.json. Will look into what else we can do in the future, but at least it's working for now.\n. Yes. That was the idea. \n. This has been fixed in grunt-topcoat. 0.5.2 will be going up soon. If you want to test is out locally you can open package.json and change grunt-topcoat version to 0.0.11.\nThanks for filing the issue! Please let me know if you run into any more issues.\n. @brianleroux it is basically a button bar without the bottom border. It has some other different styling in that the selected state is opposite of button bar's. Very similar though. Both will happen at the same time.\n. Tab Bar *mobile\nhttp://codepen.io/Topcoat/pen/rJICF\n. @kruyvanna Thank for making this example! `display: table` makes a lot of sense.\nOne note, Topcoat separates layout and positioning from styling so that the components are more reusable in different compositions. I have updated the pen to reflect this.\nhttp://codepen.io/Topcoat/pen/rJICF\n\nThanks!\n. Thank you!\n:beers:\n. We have tab bar ready to roll.\n. I was thinking we wouldn't close it until it is in an official release. So yes, if it get's into a 0.7.5 release I would like to wait to close it then.\n. :beers: \n. @nnnnic @jahoni @larz0 @GarthDB  What should the focus state for these components look like?\n. :beers:\n. No more need for sprite sheets. We can just add a glow as\n@nnnnichttps://github.com/nnnnic has\nshown.\n\nKristofer\n\nOn Mon, Jul 29, 2013 at 2:55 PM, nnnnic notifications@github.com wrote:\n\n> I didn't think we were using sprites for these anymore. @kristoferjosephhttps://github.com/kristoferjosephfound a way to do it with pure CSS.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21754871\n> .\n. Awesome! Please pull request.\nOn Aug 1, 2013 7:45 AM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> Made this available for radio input, refactored the component to be CSS\n> only.\n> \n> Chrome & Firefox\n> [image: screen shot 2013-08-01 at 1 42 20 pm]https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png\n> [image: screen shot 2013-08-01 at 1 42 33 pm]https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png\n> [image: screen shot 2013-08-01 at 1 42 49 pm]https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png\n> \n> @kristoferjoseph https://github.com/kristoferjoseph have you worked on\n> this ? Should I do a pull req ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21930932\n> .\n. Cage fight!\nOn Aug 1, 2013 1:09 PM, \"nnnnic\" notifications@github.com wrote:\n\n> D'oh I made one too\u2026 haha!\n> https://github.com/topcoat/prototypes/tree/master/radio\n> \n> On Aug 1, 2013, at 5:29 AM, Kristofer Joseph <notifications@github.com\n> <mailto:notifications@github.com>> wrote:\n> \n> Awesome! Please pull request.\n> On Aug 1, 2013 7:45 AM, \"Andrei Oprea\" <notifications@github.com<mailto:\n> notifications@github.com>> wrote:\n> \n> > Made this available for radio input, refactored the component to be CSS\n> > only.\n> > \n> > Chrome & Firefox\n> > [image: screen shot 2013-08-01 at 1 42 20 pm]<\n> > https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png>\n> > \n> > [image: screen shot 2013-08-01 at 1 42 33 pm]<\n> > https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png>\n> > \n> > [image: screen shot 2013-08-01 at 1 42 49 pm]<\n> > https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png>\n> > \n> > @kristoferjoseph https://github.com/kristoferjoseph have you worked\n> > on\n> > this ? Should I do a pull req ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/309#issuecomment-21930932>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub<\n> https://github.com/topcoat/topcoat/issues/309#issuecomment-21932807>.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21952875\n> .\n. :beers:\nOn Aug 1, 2013 2:15 PM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> @nnnnic https://github.com/nnnnic if you could add\n> \n> position:absolute\n> left:-9999px\n> \n> I mentioned above I'll check in your component. That way we can simulate a\n> :focus state\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21957986\n> .\n. Here is a link to the spec we need to adhere to:\nhttp://www.w3.org/TR/WCAG20-TECHS/H44.html\n\nNotice we are only supporting modern browsers though so we need to solicit CURRENT screen reader and browser accessibility concerns.\n\nHere is a link to a codepen by one of our accessibility engineers:\nhttp://codepen.io/topcoat/pen/HDcJj\n\nWe are trying to determine what is actually needed for modern browsers. \n. Here is an updated codepen for radio buttons:\nhttp://codepen.io/topcoat/pen/HDcJj\n. On it.\n. This component needs to be refactored to use npm. *see button, checkbox, radio button etc.\n. @paulirish I feel should be the publisher. Any thoughts?\n. @paulirish We have open sourced all of the infrastructure including the [ci config](https://github.com/topcoat/topcoat-ci-config) and the [server](https://github.com/topcoat/topcoat-server). Would be very interested in discussing criteria for applying benchmarks to Effeckt. I am more than happy to see an Effeckt specific server set up. Let me know if I can help in any way.\n. @piatra Should we lump this into the 0.6.0 milestone? Or would you rather have more time on this?\n. @piatra sounds like a good plan... and launching as soon as my computer stops crashing :crying_cat_face: \n. removed\n. FIxed:\nhttps://github.com/topcoat/radio-button\n. Thanks!\n. Fixed for 0.7.0 already\n. @larz no. These are all the colors pulled from the psd.\n. Awesome!\nOn Aug 14, 2013 12:06 PM, \"nnnnic\" notifications@github.com wrote:\n\n> Started working on this:\n> http://codepen.io/nnnnic/pen/ahAtr\n> \n> Was starting in on the Light theme and realized we should be able to reuse\n> a lot of the same logic when applying dark colors as well.\n> \n> This would be ideal:\n> https://github.com/timhettler/cssconf-2013/tree/master/sass\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/337#issuecomment-22658845\n> .\n. @larz0 \n![suuure](https://f.cloud.github.com/assets/76308/2517861/b0fbc898-b45d-11e3-8e15-cce459ab0e49.gif)\n. Awsome work @piatra! Thanks guys!\n. [Resin has support for source maps baked in](https://github.com/topcoat/resin/blob/master/index.js#L32). All that is remaining here is testing it with the newly published version of rework and making a screencast and accompanying blog post demonstrating the workflow.\n. Will be fixed in Topdoc separately Issue #11\n. Awesome. We also need to update the Jenkins tasks to work with npm now. Do you think publishing the telemetry grunt tasks would help with both of these issues?\n. :+1:  An examples repo with examples by pattern.\n. +100000\n. Excellent. grunt-topcoat-telemetry sounds fine. What about something more generic so we can add other benchmarking systems grunt-topcoat-benchmark? grunt-topcoat-perf?\n. Let's use the existing HTML pages in test/perf for now. We want the topdoc generated HTML files to stay how they are. Makes local development and demo pages for components much easier.\n. We will switch this to use bundles fonts. Thanks for filing the issue!\n. Yes. The theme has the source pro bundled with it. We used the copy task in the past to move the font dir.\n. This is really great. I know a lot of work went into getting this right. I can already see how this will speed up Topcoat development. Hopefully other projects will be able to use this as well.\n. That underwear dance gif might be my favorite ever.\n. The greatest trick...\n![soze](https://f.cloud.github.com/assets/76308/1031001/6effb85e-0ecd-11e3-8a2b-24c595bcc139.gif)\n. I looked into what is contributing to the size of input base. Multiple tags are 27+ gb\nOnly thing I can think of is that the node modules were included accidentally.\n\nWe should definitely nuke the psd from topcoats git history. We would also need to remove old tags, which I feel is ok for items older than three releases.\n\nHow does that sound @brianleroux?\n. @larz0 once this issue is closed you should give a once through. \nI will add the links to the pages for you in the comments of this bug. \nPlease file issues for anything we miss after that. \nShould be much more manageable for you holmes.\n\n![pray_kitteh](https://f.cloud.github.com/assets/76308/1031054/b7c8006c-0ecf-11e3-866d-b80a81108bf1.jpg)\n. @larz0 Yo, is there a comp for a desktop search input? Is this one good?\n[Search input](http://topcoat.io/search-input/)\n\nOtherwise we can pull the desktop version until someone adds it to the psd........... loading NaN%\n. @larz0 Anything for you my ninja.\nIf you feel like banging out some sizing scales it would make this stuff more fun to build.\n. @nnnnic @larz0 \n![rebecca_black](https://f.cloud.github.com/assets/76308/1045607/e7cd3346-1027-11e3-81be-49b2d0e63be2.jpg)\n. @larz & @nnnnic Here are the links to the components for design review:\n[Button](http://topcoat.io/button)\n[Button Bar](http://topcoat.io/button-bar)\n[Checkbox](http://topcoat.io/checkbox)\n[Icon Button](http://topcoat.io/icon-button)\n[List](http://topcoat.io/list) *Mobile only since there was no desktop design\n[Navigation Bar](http://topcoat.io/navigation-bar) *Mobile only. Will need designs for desktop header\n[Radio Button](http://topcoat.io/radio-button)\n[Search Input](http://topcoat.io/search-input)\n[Text Input](http://topcoat.io/text-input) \n[Text Area](http://topcoat.io/textarea) *Desktop version was not in psd so we took our best shot\n![bungee_jumper_hesitates](https://f.cloud.github.com/assets/76308/1050979/d6a5b674-10c2-11e3-8440-2f1e33ad09b8.gif)\n. Added in 0.7.0\n. Scale has been published.\n. Hold on merging please.\n. I ran it locally and had some issues with it. Wanted to have someone give it a proper review.\n. Fixed in 0.7.0\n. @piatra Let's remove the main entry for now.\n. @shancat we have an issue open to fix this in a 7.5 point release. Thanks for the screen grab.\n. All icons are hosted in this repo:\nhttps://github.com/topcoat/icons\n\nWe are not currently packaging them with the download.\n\nHere is [Icon Button](http://topcoat.io/icon-button)\n. @doman412 We are working out a way to deliver icons for use with Topcoat. \nWhat you see in the download was a first take at it. That is why only menu stack was referenced. \nIf you look at the new [Icon Button](http://topcoat.io/icon-button) you can see that we have removed the icon reference.\n. @piatra Thanks for the update. Will jump on this right away. Thanks!\n. Awesome! Will be reviewing it today.\n. This is awesome!\n. @fabricematrat we would need to refactor your [Button List](https://github.com/fabricematrat/button-list) to work like our [Button Bar](https://github.com/topcoat/button-bar).\n- [x] Readme needs to be updated to reflect the new component name\n- [x] package.json needs version number set to 0\n- [x] Needs to be forked by us to the topcoat org\n- [ ] published to npm\n- [ ] Added to topcoat package.json as a dependency\n- [ ] Your name added as the first external contributor to add a Topcoat component!!!\n. @fabricematrat Check out the topcoat fork https://github.com/topcoat/button-list. Will be updating it so we can merge it into the Topcoat build. Do you have a screenshot of how you are using this in an app? would love to see it.\nThanks again!\n. Very cool!\n. :beers:\n. the word transition was getting added twice :/\n. Was thinking we should use the same red as the notification: rgb(236, 81, 78)\n. Nice. Thx.\n. That is a great idea\nOn Oct 3, 2013 10:12 PM, \"Andrei Oprea\" notifications@github.com wrote:\n\n> should this be across several files ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/417#issuecomment-25676891\n> .\n. We should wait until range has wider support.\n. Can you post a reduced case to a codepen or github repo? We have not been able to reproduce this issue with the information supplied. Are you using any js libraries for scrolling?\nThanks.\n. :+1: on it.\n. Thanks for bumping this issue. I have been refactoring the themeing workflow in order to satisfy the many asks we've gotten ( a lot from the Onsen UI team ).  I was hoping to update the docs as soon as this work is done so as not to be immediately outdated again. Want to cut down I the things that frustrate users. So very sorry @ResentedHook it is only me and I have a full time job in top of topcoat work. I realize this isn't a good excuse, but I wanted you to know I hear you and appreciate your requests. Thank you again. \n. already has position: relative.\n. :+1: Adding another issue for a wireframe theme. Thin black line, white bg. BOOM.\n. Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9. \n\nThanks for the issue!\n. @GarthDB Whatever proves out the process. A single file would be a nice starting point.\n. Making some common layouts to run benchmarks against.\nWill compare:\n- [ ] Float\n- [ ] Absolute\n- [ ] Flexbox\n. @cburgdorf we realized we need to add some more server infrastructure to do this correctly. We will lump all of that work together.\n. Love it!\nWas wondering why we had the double tab stop. Thanks!\nI am really not a fan of all the JS needed to add aria attributes. Sad this is the only reliable way to be accessible :(\n. That sounds fine.\nI was planning on using a sibling selector to add display: none to the tab panel to avoid js, but you are correct we would still need to add the accessibility attributes for the selected section.\nThanks for all the work on this. Very exciting to have an accessible tab set!\n. No, we haven't taken on a generic label yet. Have any suggestions?\n. # Solution:\n\n## [Download](https://github.com/topcoat/topcoat/archive/v0.8.0.zip) the current version of Topcoat\n\nYou must not be using the latest version of Topcoat. The version you are using doesn't have the height set.\n[Current search input does](https://github.com/topcoat/search-input/blob/master/css/topcoat-search-input-mobile-dark.css#L71)\n. Might have to show me this one.\n. The issue here is that a switch is not a button. \nIf you relate it to switch in the real world you would never click on a sliding control.\nIt responds to drag as well as click on the labels. We would need to add Javascript to add the click functionality.\n\nUse this switch I am proposing:\nhttp://codepen.io/dam/pen/HGpfs\n. What did Tony say @nnnnic? \n. Thanks @nnnnic!\nI am not feeling the little arrows. they feel heavy compared to the rest of the theme. Can we try out some different delimiter treatments? \n. :love_hotel: \n. The rework refactor is using placeholders. Namespaces are set at a skin level so that a user can combine multiple types of themed components in the same project without collisions.\n\nI hear a lot of users not liking the namespace addition though. We could implement this proposal and default to the `topcoat-` namespace and let users change it to their liking.\n\nI fear that an addition of this sort would cause more harm than good though.\n\nThere is no real argument to remove them. It doesn't effect functionality at all. I don't feel that visual cleanliness is a valid argument for removing a namespace which effectively pollutes the global space.\n\nThis would require a lot of work to implement and leaves the door open for bugs due to collision.\n\nThe recommended way to use topcoat without the namespace is to fork all the skin repos and remove it in your own fork. You can have your own skins without the namespace or any namespace you like there. \n. This is fixed in the upcoming 0.9 release. I wrote a rework-namespace plugin for rework that adds a namespace to a non-namespaced selector. I've also updated http://github.com/topcoat/grunt-topcoat to use resin and support this at compile time by supplying an optional namespace property. It currently defaults to the namespace topcoat.\n. @ahx my pleasure. There is still work needing to be done on the namespace plugin to handle edge cases ( I.e. don't add a second namespace if the same one exists etc. ), but it works very well for the default use case. Feel free to open issues on that specifically if you have any additional feature requests.\nThanks for the suggestions!\n. This bug I will hunt down with extreme prejudice!\n. Fixed in master now.\nPlease use the staging version at http://topcoat.io/switch\nLet me know if you see any more issues.\nThanks!\n. :+1:  Awesome!\n. We have switched to http://github.com/topcoat/resin in order to better handle issues like these.\nThis issue will be fixed in the upcoming 0.9 release.\n. https://github.com/cdnjs/cdnjs/pull/2165\n:beers:\n. @kof They are up:\nhttps://github.com/cdnjs/cdnjs/tree/master/ajax/libs/topcoat-icons/0.1.0\n. @nodoherty This comment is really great!\nAny interest in writing a post for the Topcoat blog with this content?\n:clap:\n. @nodoherty The steps for writing a blog post are in the README here:\nhttps://github.com/topcoat/topcoat.github.com\n\nBasically I would love for you to expound on the comment above. \nFeel free to add screengrabs or a video if you want.\n\nHit me with any questions you have.\nThis is awesome!\n. @nodoherty Awesome!\nJust make a pull request for the review and we can discuss it in the comments there.\n\nThanks bundles!\n:beers:\n. @timothep the icomatic generation is in the icons repo. It is in the directory named font.\ngithub.com/topcoat/icons/tree/master/font\nThose steps above describe how you can make a custom set.\n. @kof is there something missing from the font there now?\n. @kof OK. I'll generate those other formats today. Thanks for clearing that up.\n. @kof here is the cdnjs link:\nhttp://cdnjs.com/libraries/topcoat-icons/\nand a starter codepen to play with:\nhttp://codepen.io/Topcoat/pen/hyDBw\n. @kof all the files you asked for are there. \nLook at the directory listing here.\nhttp://cdnjs.com/libraries/topcoat-icons/\nLet me know if I missed anything.\n. @kof \n//cdnjs.cloudflare.com/ajax/libs/topcoat-icons/0.2.0/font/icomatic.ttf\n//cdnjs.cloudflare.com/ajax/libs/topcoat-icons/0.2.0/font/icomatic.woff\n\nYou are starting to make me wonder if I'm going crazy.\n. @kof these fonts are meant to be used with icomatic CSS. If you want to use them without it that is fine, but you will need to generate your own fonts. If you do end up generating a font that works as you like please feel free to commit it back as we would love to understand and support your workflow.\n. @kof the reason behind using the icon font this way is that it is less of a hack. It depends on custom ligatures to supply an icon. The ligature \"like\" ends up being much more semantic and accessible than assigning a thumbs up icon to a random letter in a typeface. Does that make sense? This is why icomatic is the supported format for icon fonts in Topcoat.\n. @kof oh good! Happy to be useful. \n. @gitMatthieuH The way we are centering placeholders is by setting the line-height to be the same as the height. Inspect to make sure line-height is the same as height and that line-height is not getting overridden by looking in dev tools.\n. We've looked into this at length and determined this is due to CSS added to the employee directory app. Out of the box topcoat works as expected.\n. @holzerma, I looked deeper into why we were using line-height at all for this case and have decided to remove it since it is causing problems. Look for the fix in the v0.9.0 release. Thanks!\n. Yes. We were depending on line-height for consistent vertical centering of\ntext regardless of typeface. I have decided to revise this due to the edge\ncases such as this that we have encountered. Have been testing out the best\nreplacement method.\n\nOn Friday, May 9, 2014, benjamintoddweb notifications@github.com wrote:\n\n> I have just experienced this whilst developing on my Samsung Galaxy Note 1\n> using topcoat v 0.8.0 and v 0.9.0. Googling around, this issue appears to\n> be a problem with the Android webview, not with topcoat. I have just come\n> up with a solution (a hack I'm afraid :-/) that works on my Note. I'm not\n> sure if it has any side effects with other devices. What I have done is\n> added this rule to my css file: -\n> \n> .topcoat-search-input {\n> line-height: 0;\n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/453#issuecomment-42689207\n> .\n\n## \n\nKristofer\n. @axemclion Been testing submitting the results. Trying to get all the staging issues out of the way so we can roll this into our 0.9 release. Looks awesome! Thanks!\n. The base font size for topcoat is 16px. We set this in order to have a basis for our rem measurements. We needed to reset this font size on buttons because there were cases where they were being used in inline-block situations that set the font size to 0 in order to fix an issue where elements would wrap inappropriately. This should disappear over time now that we are using display-table for bars and a grid based on flex-box. This will still crop up in the wild so we are coding defensibly right now. Sorry for the confusion.\n. @Timothep Yes, lot's of ideas. We are planning on adding an example layout to the demo page.\n. Starting to prototype different solutions.\nThis is the one I see most commonly:\nhttp://codepen.io/dam/pen/ipnvm\n\nThis one I like the most:\nhttp://codepen.io/dam/pen/kJgse it uses flexbox though so make sure your target supports it. http://caniuse.com/#feat=flexbox\n\nTry these solutions out and let me know how they work for you. \nThanks!\n. We use autoprefixer so you can specify what your targets are in a custom build.\nWith that said we are not adding in any quirks CSS or browser specific hacks currently.\n. @tehfoo Good idea. I think we are experiencing our first burn from using ~ instead of a solid version number. It is a one character fix. We should get those in there. Good catch @eugenf \n\nThanks \n. Can you give it a whirl now with a fresh pull from master? I made specific version dependencies. Please let me know if this fixes your issue.\n. Fixed.\n\n![screen shot 2013-12-21 at 3 42 24 pm](https://f.cloud.github.com/assets/76308/1796959/9b6c1c2a-6a99-11e3-805a-e006c63b92ce.png)\n\nThank you so much for catching that!\n. @kof Short answer YES.\nLong answer How much slower?\nWithout benchmarks and a complete theme implemented we have nothing to compare against.\nFlat theme in the works... it is FAF.\n. True. We can get a baseline of performance impact from comparing the deltas of our current benchmarks. You are right though a comprehensive test would give device specific results. I'm OK with just knowing roughly what the tradeoff is.\n. Fixed:\nhttps://github.com/topcoat/topcoat/wiki/Coding-Guidelines#wiki-comments\n. @kof still trying to reproduce this. Found a bunch of other annoying z-index related issues, but haven't had any luck on this. Can you please try and make a Codepen that reproduces the issue you saw?\n\nThank you so much for filing this. Really appreciate it.\n. @kof thank you so much for posting this. Will use this to repro case to fix it.\n. OK. I understand what the issue is now. It is because of the label z-index.\nNeed to come up with some ways to manage z-index better. We are seeing a lot of unexpected behavior around z-index on pseudo elements.\n. @axemclion I am still super excited to get this added. Can we try and enumerate what needs to be done still?\n. A sample server would be useful. If you want to post some sample data I could make a server as well. Anything to get this public. We would really like to have it working on mobile devices. This is due to the bug we've been following with @saucelabs?\n. We have been running the phone tests locally on phones we control. We are currently connecting to an Android phone. Probably can do this the same way.\n@ynliu any insights to lend here?\n. Awesome!\n. @artfedosejev We decided to not include a clear button to our component since all browsers handle this differently and it is trivial to add. \n@piatra Yes, on iOS this was handled by the browser.\n. @MattFriedman The overflow:auto property is there to allow the list to scroll items inside of it. The list items need to be clipped by the height of the list in order to see this work.\nhttp://codepen.io/dam/pen/GCnig\n\nThis is not a bug in Topcoat but possibly a rendering issue.\n. @stevega thank you for following up and sharing your solution.\n. @sp4ke  thanks for this pull request! Need to make sure you have signed the CLA ( sigh, legalities ) then I will merge. You rock!\n. Good idea.\n. Little did I know this is actually part of the new github organizations rollout. The topcoat org just hadn't been updated when I looked. Closing this issue and opening another to add getting started blob to all repo README.\n. We are good on the copyright until legal tells us otherwise :)\nThanks for the lolz?\n. Thanks!\n. Thanks! Illustrator adds all of this CDATA for some unknown reason.\n. Great idea!\nWill add the fix for the next release.\nThank you so much!\n. This is awesome!\nWe are experimenting with templates right now.\nThe idea is to make a separate repo for each template so people could only include the code they need to use.\nAn example of this can be found here:\nhttps://github.com/topcoat/button-bar-template\n\nI would love to have something like:\nbutton-bar-react\nbutton-bar-angular\nbutton-bar-lodash\netc.\nSo people could pull in or contribute what they need.\nThis not only optimizes the final application size, but is also more flexible. \nIt also insulates us a bit from the flavor of the week syndrome that plagues the JavaScript community.\n\nDoes that make sense to you?\n. Can't seem to find the \"jump for joy\" emoji to correctly convey my feelings. \nVery exciting!\n. Exactly that. \n. @GarthDB ya, what did you mean by \"did you put the value in\" ?\n. AH, right. We need to work on that overall variable approach. Generalize better. Agreed. Maybe I will start there, break the world and add in defaults as I fix it.\n. Ah, on Android browser! that is what was missing from the original issue. \nWill test the $#!^ out of this and see what we can do.\nI have been running into issues with z-index on pseudo elements. Going to make a version without z-indexes and see if that helps.\nThanks!\n. Cool.\nAny interest in making a codepen of this?\n. Once again @kof you have an excellent suggestion. \nWe had those classes previously and after Heydon Pickering called us out for not being semantic ( huh? ) we removed them as a knee jerk reaction. \nYou make a great point and I will make sure to get those back in.\n. Was thinking it would be better to have them all open and then close them once JS loads. That way it defaults to working always. More progressive enhancement like.\n. The servers that served the data are no longer maintained. The benchmarks work fine, there just isn't a database anymore to return data. \n. That is not the way I would \n. ",
    "bradee": "This would be awesome. Cartilige for topcoat.\n. This would be awesome. Cartilige for topcoat.\n. ",
    "g1sh": "Please assign this to larz0\n. Double checked that the copyright stuff is there.\n. Requirements:\n- State TopCoat's mission (What it is)\n- Showcase what it is now (performance, components, and tooling)\n- Link clearly to styleguides.\n- Drive contributors to Github.\n- Showcase blog posts, news and social\n- Showcase roadmap, and allow people to rate it, tell us what they are interested in.\n- Link to benchmarks.\n. Please assign this to larz0\n. Double checked that the copyright stuff is there.\n. Requirements:\n- State TopCoat's mission (What it is)\n- Showcase what it is now (performance, components, and tooling)\n- Link clearly to styleguides.\n- Drive contributors to Github.\n- Showcase blog posts, news and social\n- Showcase roadmap, and allow people to rate it, tell us what they are interested in.\n- Link to benchmarks.\n. ",
    "brianleroux": "@cataling I'm going to reassign to @piatra once I fix up the team for this repo!\n. ya that sounds great. gotta save the data so we can start reporting on it; only other things I'd say consider are test runner progress indication, and if we can headless testing/reporting locally w/ phantomjs, \n. awesome! where is the src? (I am squatting on github.com/topcoat ...thinking maybe we put it up there?)\n. Actually, Apache2\n. It is the main feature of Apache 2 that makes it more attractive for corporate use, adoption, and subsequently contribution. (We could dual MIT/Apache2 too but these days I'm thinking an Apache default is just better overall.)\n. this is done too\n. oh! good idea ---done!\n. http://groups.google.com/group/topcoat\n. also awesome.\n. awesome. \n. http://vimeo.com/48054442\n. @gaurav21r we're working on it.\n. :horse: css would approve\n. eh @joemccann there is a start/prototype from @kristoferjoseph here https://github.com/kristoferjoseph/topcoat-phonegap\n. just shot an email about this to the list\n. :beers: \n. wooo\n. kinda a duplicate / done \n. @erichiggins fully agree. we've been agonizing over the best architecture and will absolutely document when the dust settles. \n. Hi @erichiggins, respectfully I have to disagree. A CLA is a single step that ensures a projects open source nature is upheld. Many projects on Github and elsewhere require a CLA and with good reason! We very much want support and contribution and having a project CLA validates the state of the project license terms now, and forever in the future. \n. Hi @erichiggins! Appreciate the feedback. We do have auto-generated usage docs when you do a build. We'll be getting this stuff up and online as you suggest soon! \n. Thanks @cknadler! If we could we get you to sign our CLA http://topcoat.io/dev/topcoat-cla.html we'd love to add you as a collaborator. \n. Hi @jaymiejones86! We're using Stylus to generate the CSS for this end. We have designed so that ppl using the CSS as a static artifact can easily upgrade between versions, composed of only the css they need, with the theme they want. We obviously need better docs (they're coming!) and a theming tool (also coming!) to help this along. =)\n. https://github.com/topcoat/topcoat/wiki/How-to-request-a-feature-or-file-a-bug\n. Hi @eignerchris ---sorry for the confusion those are the original comps where we're extracting the framework. You can see the actual usage and docs by following these instructions:\n\nhttps://github.com/topcoat/topcoat/wiki/Installation-and-Usage\n. ya agree! :beers: <-- even better upvote\n. @hatsuseno @kristoferjoseph also we should pursue this w/ Moz at the same time. Hiding selects and using a wack of divs / JS is jank-sauce. \n. Great idea. +1\n. In combination with list and navigation-bar its pretty easy to compose that\npattern.\n\nOn Tue, Jun 4, 2013 at 4:54 AM, Andrei Oprea notifications@github.comwrote:\n\n> We have the https://github.com/topcoat/icon-button repo.\n> [image: screen shot 2013-06-04 at 2 52 51 pm]https://f.cloud.github.com/assets/810040/605171/52ff0918-cd0d-11e2-977d-ee5d64d18b2e.png\n> \n> With the that component. Is this what you are looking for ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/226#issuecomment-18904249\n> .\n. oh! nevermind. button-bar. doh!\n. :thumbsup: \n. ya for sure, just capturing some feedback\n. :beers:\n. cool thx guys\n. Garth you should be the guy to talk about this since you wrote it!\n. Maybe add that we'll be enhancing w/ i1118/localization support using YAML files. Otherwise: ship it! :shipit: \n. sgtm :facepunch: \n. @kristoferjoseph I'm going to have a look at this on the plane. Can you verify this flow?\n1. Iterate the controls in `topcoat/topcoat/package.json` \n2. Clone each repo into a tmp directory\n3. Bump the MINOR on each control `package.json` and tag\n4. Push the tags\n5. Update the control versions in `topcoat/topcoat/package.json` \n6. Commit changes to `topcoat/topcoat/package.json` and push to Github\n7. Update the website download url and text\n. First crack done: http://github.com/topcoat/topcoat-packager\n. Probably a blog post. The point was to clarify that there is Topcoat the design language which is different than our implementation of it. Thats confusing for some b/c Brackets/Reflow use more of the design language than the code (tho that is changing). \n. (thx for adding this @jiyoungchang!)\n. @colorful-white sorry but what do you mean by \"job\"? do you mean http://topcoat.io or some specific CSS? (Thanks more details make it easier for us to fix.)\n. ![image](https://f.cloud.github.com/assets/990/808730/d4c12b2e-ee6a-11e2-80d2-fae17a7fb583.png)\n. Marking as closed. Should be live today/tmrw. Thanks @luthur :beers: \n. Also related @nnnnic http://buildingfirefoxos.com/transitions/app-invokes-app.html\n. `bower lookup topcoat`\n\n:beers: \n. Ah, yes. But let me through something at you. We are working on getting Topcoat usage patterns better understood for ourselves and the broader community. \n\nOur ideal is for you to optimize your Topcoat builds to only the controls you need/want for the project at hand to maximize the performance. We're working on tooling for this, theming, and local benchmarking. Our hope being that our dev community builds up a practice of crafting their CSS to be as fast as possible and that Topcoat apps don't all look alike! \n\nWhat do you think? (This is all open to discussion of course.)\n\n@dam, @nnnnic, @nimbupani anything to add?\n. Sounds like you might have missed a version/tag # in a control you added. (If there is no version number it should work with an empty string to grab master. If its still failing pls report back!)\n. I'm good! No shutdown but clearing out my personal inbox of issues. Maybe\nhave something new soonish to say ;)\n\nOn Tue, Jun 21, 2016 at 11:44 AM, Anthony Trimble notifications@github.com\nwrote:\n\n> @brianleroux https://github.com/brianleroux how's it going? Are you\n> guys shutting down topcoat finally?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/topcoat/topcoat/issues/291#issuecomment-227533881,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAAD3rlRhk7fc_T8bYfPFUpDvmA_LsEcks5qODEJgaJpZM4AyXsI\n> .\n. Thx @0xsven! of course this project is a work in progress (0.5.1) but filing bugs like this is helping us get closer to that 1.x goal. I do wonder w/ Opera moving to Blink if this will be less an issue in the coming months.\n. I like this too. Its a good safety net. The test itself feels a little synthetic. I wonder if we can create something that tests intent rather than just expected output?\n. no, that would be slippery and difficult to maintain given the breadth of\ndevices. again, very hesitant to add to the testing infra unless things are\nvery measurably helpful to guiding our work\n\nOn Tue, Jul 9, 2013 at 8:59 AM, Andrei Oprea notifications@github.comwrote:\n\n> I've came across a node module that does pixel testing, draws the page to\n> a\n> canvas and compares to an image. Is that something we might be interested\n> in ?\n> \n> On Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux notifications@github.comwrote:\n> \n> > I like this too. Its a good safety net. The test itself feels a little\n> > synthetic. I wonder if we can create something that tests intent rather\n> > than just expected output?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/297#issuecomment-20684410>\n> > .\n> \n> ## \n> \n> Andrei Oprea\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684588\n> .\n. @piatra / @kristoferjoseph is this different than button-bar?\n. Topcoat is only CSS so if you want to effect tab order you need to set `tabindex` attribute on your input elements. Submitting w/ enter is enabled by making sure you have an `action` attribute set to a valid url. You can learn more about all this junk (and much more) on http://webplatform.org.\n. Agree, @kristoferjoseph do you feel our build sys is baked enough to incorporate into npm? They do have a [package.json](https://github.com/h5bp/Effeckt.css/blob/gh-pages/package.json) but perhaps @paulirish wants to be the one to make the first publish.\n. ![excellent2](https://f.cloud.github.com/assets/990/862969/98286370-f5ff-11e2-9880-d40e67be909d.jpg)\n. This has sorta happened. I think we need to go for a beer or twelve and figure out Effeckt packaging. (Discreet modules on npm would be my vote.)\n. Possibly! Dream scenario is to have the CDN url be a slug/hash of the package.json dependencies so optimized builds have a happy path.\n. sweet, thx @headwebmonkey \n. or perhaps topcoat/topcoat-brackets-extension (I don't really care as long as it continues the `topcoat-` all lowcase convention.)\n. closing duplicate: https://github.com/topcoat/topcoat/issues/373\n. Hi @puppetMaster3, thanks for the note! We're actively monitoring/evaluating the options. For now, we're asking everyone use Topcoat for the CSS until we get our tooling story really sorted out. For now Stylus is only a committer concern and not a target for our end users. Less, Stylus, Sass, Rework all have benefits and drawbacks but the real thing you need for your application is the CSS and so that is how we'd like you to use it.\n\nWhere you located? Always up for a coffee/beer to talk shop.\n\nCheers,\nBrian  \n. its back!1!! :beer:\n. think this might be a good thing to add to the docs but since it requires JS probably not appropriate for topcoat just yet\n. cannot reproduce / codepen in the future pls!\n. This is a theme issue. (Going to do a modular scale to fix this across controls/themes.) https://github.com/topcoat/topcoat/issues/410\n. :beers: \n. Something wherein we parse out `@imports \"topcoat-button\"` and inline. The big questions are def around what happens to static assets (do we inline them?) and fonts. Use this repo (and feel free to blast it all away in your adventures) http://github.com/topcoat/topcoatify \n. You know what, @kristoferjoseph, if we abstract this right then a change between impl doesn't matter. I say we ship/incorporate that flex grid from the list.\n. fk it, we can bench in the future. happy w/ the new grid\n. (To be clear we WILL bench but that is a separate issue. Likely an entire sprint.)\n. fixed!\n. Yes, I would really like the 'namespace' to be configurable for this use case. We are actually just getting into a refactor to move over to Rework so I'm not totally sure how this will effect things. @kristoferjoseph ?\n. That is focus. You could remove by ... if you ovrride :focus it will be gone... but accessibility gurus will cry.\n. Yea to this point we've been saying 'modern browsers' but not really strictly defining that. We want to have the infra in place to really polish this for 1.0 in the coming year. I'm going to icebox this: but only for now. \n. We def plan to have a flat theme. That said, we're benchmarking to ensure performance. Sometimes perf lore isn't accurate. \n. @cataling I'm going to reassign to @piatra once I fix up the team for this repo!\n. ya that sounds great. gotta save the data so we can start reporting on it; only other things I'd say consider are test runner progress indication, and if we can headless testing/reporting locally w/ phantomjs, \n. awesome! where is the src? (I am squatting on github.com/topcoat ...thinking maybe we put it up there?)\n. Actually, Apache2\n. It is the main feature of Apache 2 that makes it more attractive for corporate use, adoption, and subsequently contribution. (We could dual MIT/Apache2 too but these days I'm thinking an Apache default is just better overall.)\n. this is done too\n. oh! good idea ---done!\n. http://groups.google.com/group/topcoat\n. also awesome.\n. awesome. \n. http://vimeo.com/48054442\n. @gaurav21r we're working on it.\n. :horse: css would approve\n. eh @joemccann there is a start/prototype from @kristoferjoseph here https://github.com/kristoferjoseph/topcoat-phonegap\n. just shot an email about this to the list\n. :beers: \n. wooo\n. kinda a duplicate / done \n. @erichiggins fully agree. we've been agonizing over the best architecture and will absolutely document when the dust settles. \n. Hi @erichiggins, respectfully I have to disagree. A CLA is a single step that ensures a projects open source nature is upheld. Many projects on Github and elsewhere require a CLA and with good reason! We very much want support and contribution and having a project CLA validates the state of the project license terms now, and forever in the future. \n. Hi @erichiggins! Appreciate the feedback. We do have auto-generated usage docs when you do a build. We'll be getting this stuff up and online as you suggest soon! \n. Thanks @cknadler! If we could we get you to sign our CLA http://topcoat.io/dev/topcoat-cla.html we'd love to add you as a collaborator. \n. Hi @jaymiejones86! We're using Stylus to generate the CSS for this end. We have designed so that ppl using the CSS as a static artifact can easily upgrade between versions, composed of only the css they need, with the theme they want. We obviously need better docs (they're coming!) and a theming tool (also coming!) to help this along. =)\n. https://github.com/topcoat/topcoat/wiki/How-to-request-a-feature-or-file-a-bug\n. Hi @eignerchris ---sorry for the confusion those are the original comps where we're extracting the framework. You can see the actual usage and docs by following these instructions:\n\nhttps://github.com/topcoat/topcoat/wiki/Installation-and-Usage\n. ya agree! :beers: <-- even better upvote\n. @hatsuseno @kristoferjoseph also we should pursue this w/ Moz at the same time. Hiding selects and using a wack of divs / JS is jank-sauce. \n. Great idea. +1\n. In combination with list and navigation-bar its pretty easy to compose that\npattern.\n\nOn Tue, Jun 4, 2013 at 4:54 AM, Andrei Oprea notifications@github.comwrote:\n\n> We have the https://github.com/topcoat/icon-button repo.\n> [image: screen shot 2013-06-04 at 2 52 51 pm]https://f.cloud.github.com/assets/810040/605171/52ff0918-cd0d-11e2-977d-ee5d64d18b2e.png\n> \n> With the that component. Is this what you are looking for ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/226#issuecomment-18904249\n> .\n. oh! nevermind. button-bar. doh!\n. :thumbsup: \n. ya for sure, just capturing some feedback\n. :beers:\n. cool thx guys\n. Garth you should be the guy to talk about this since you wrote it!\n. Maybe add that we'll be enhancing w/ i1118/localization support using YAML files. Otherwise: ship it! :shipit: \n. sgtm :facepunch: \n. @kristoferjoseph I'm going to have a look at this on the plane. Can you verify this flow?\n1. Iterate the controls in `topcoat/topcoat/package.json` \n2. Clone each repo into a tmp directory\n3. Bump the MINOR on each control `package.json` and tag\n4. Push the tags\n5. Update the control versions in `topcoat/topcoat/package.json` \n6. Commit changes to `topcoat/topcoat/package.json` and push to Github\n7. Update the website download url and text\n. First crack done: http://github.com/topcoat/topcoat-packager\n. Probably a blog post. The point was to clarify that there is Topcoat the design language which is different than our implementation of it. Thats confusing for some b/c Brackets/Reflow use more of the design language than the code (tho that is changing). \n. (thx for adding this @jiyoungchang!)\n. @colorful-white sorry but what do you mean by \"job\"? do you mean http://topcoat.io or some specific CSS? (Thanks more details make it easier for us to fix.)\n. ![image](https://f.cloud.github.com/assets/990/808730/d4c12b2e-ee6a-11e2-80d2-fae17a7fb583.png)\n. Marking as closed. Should be live today/tmrw. Thanks @luthur :beers: \n. Also related @nnnnic http://buildingfirefoxos.com/transitions/app-invokes-app.html\n. `bower lookup topcoat`\n\n:beers: \n. Ah, yes. But let me through something at you. We are working on getting Topcoat usage patterns better understood for ourselves and the broader community. \n\nOur ideal is for you to optimize your Topcoat builds to only the controls you need/want for the project at hand to maximize the performance. We're working on tooling for this, theming, and local benchmarking. Our hope being that our dev community builds up a practice of crafting their CSS to be as fast as possible and that Topcoat apps don't all look alike! \n\nWhat do you think? (This is all open to discussion of course.)\n\n@dam, @nnnnic, @nimbupani anything to add?\n. Sounds like you might have missed a version/tag # in a control you added. (If there is no version number it should work with an empty string to grab master. If its still failing pls report back!)\n. I'm good! No shutdown but clearing out my personal inbox of issues. Maybe\nhave something new soonish to say ;)\n\nOn Tue, Jun 21, 2016 at 11:44 AM, Anthony Trimble notifications@github.com\nwrote:\n\n> @brianleroux https://github.com/brianleroux how's it going? Are you\n> guys shutting down topcoat finally?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/topcoat/topcoat/issues/291#issuecomment-227533881,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAAD3rlRhk7fc_T8bYfPFUpDvmA_LsEcks5qODEJgaJpZM4AyXsI\n> .\n. Thx @0xsven! of course this project is a work in progress (0.5.1) but filing bugs like this is helping us get closer to that 1.x goal. I do wonder w/ Opera moving to Blink if this will be less an issue in the coming months.\n. I like this too. Its a good safety net. The test itself feels a little synthetic. I wonder if we can create something that tests intent rather than just expected output?\n. no, that would be slippery and difficult to maintain given the breadth of\ndevices. again, very hesitant to add to the testing infra unless things are\nvery measurably helpful to guiding our work\n\nOn Tue, Jul 9, 2013 at 8:59 AM, Andrei Oprea notifications@github.comwrote:\n\n> I've came across a node module that does pixel testing, draws the page to\n> a\n> canvas and compares to an image. Is that something we might be interested\n> in ?\n> \n> On Tue, Jul 9, 2013 at 6:57 PM, Brian LeRoux notifications@github.comwrote:\n> \n> > I like this too. Its a good safety net. The test itself feels a little\n> > synthetic. I wonder if we can create something that tests intent rather\n> > than just expected output?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/297#issuecomment-20684410>\n> > .\n> \n> ## \n> \n> Andrei Oprea\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/297#issuecomment-20684588\n> .\n. @piatra / @kristoferjoseph is this different than button-bar?\n. Topcoat is only CSS so if you want to effect tab order you need to set `tabindex` attribute on your input elements. Submitting w/ enter is enabled by making sure you have an `action` attribute set to a valid url. You can learn more about all this junk (and much more) on http://webplatform.org.\n. Agree, @kristoferjoseph do you feel our build sys is baked enough to incorporate into npm? They do have a [package.json](https://github.com/h5bp/Effeckt.css/blob/gh-pages/package.json) but perhaps @paulirish wants to be the one to make the first publish.\n. ![excellent2](https://f.cloud.github.com/assets/990/862969/98286370-f5ff-11e2-9880-d40e67be909d.jpg)\n. This has sorta happened. I think we need to go for a beer or twelve and figure out Effeckt packaging. (Discreet modules on npm would be my vote.)\n. Possibly! Dream scenario is to have the CDN url be a slug/hash of the package.json dependencies so optimized builds have a happy path.\n. sweet, thx @headwebmonkey \n. or perhaps topcoat/topcoat-brackets-extension (I don't really care as long as it continues the `topcoat-` all lowcase convention.)\n. closing duplicate: https://github.com/topcoat/topcoat/issues/373\n. Hi @puppetMaster3, thanks for the note! We're actively monitoring/evaluating the options. For now, we're asking everyone use Topcoat for the CSS until we get our tooling story really sorted out. For now Stylus is only a committer concern and not a target for our end users. Less, Stylus, Sass, Rework all have benefits and drawbacks but the real thing you need for your application is the CSS and so that is how we'd like you to use it.\n\nWhere you located? Always up for a coffee/beer to talk shop.\n\nCheers,\nBrian  \n. its back!1!! :beer:\n. think this might be a good thing to add to the docs but since it requires JS probably not appropriate for topcoat just yet\n. cannot reproduce / codepen in the future pls!\n. This is a theme issue. (Going to do a modular scale to fix this across controls/themes.) https://github.com/topcoat/topcoat/issues/410\n. :beers: \n. Something wherein we parse out `@imports \"topcoat-button\"` and inline. The big questions are def around what happens to static assets (do we inline them?) and fonts. Use this repo (and feel free to blast it all away in your adventures) http://github.com/topcoat/topcoatify \n. You know what, @kristoferjoseph, if we abstract this right then a change between impl doesn't matter. I say we ship/incorporate that flex grid from the list.\n. fk it, we can bench in the future. happy w/ the new grid\n. (To be clear we WILL bench but that is a separate issue. Likely an entire sprint.)\n. fixed!\n. Yes, I would really like the 'namespace' to be configurable for this use case. We are actually just getting into a refactor to move over to Rework so I'm not totally sure how this will effect things. @kristoferjoseph ?\n. That is focus. You could remove by ... if you ovrride :focus it will be gone... but accessibility gurus will cry.\n. Yea to this point we've been saying 'modern browsers' but not really strictly defining that. We want to have the infra in place to really polish this for 1.0 in the coming year. I'm going to icebox this: but only for now. \n. We def plan to have a flat theme. That said, we're benchmarking to ensure performance. Sometimes perf lore isn't accurate. \n. ",
    "dwabyick": "Just curious, what exactly are the types of things we're benchmarking?  This sounds really interesting, and possibly applicable to an (internal) project I'm getting involved with.\n. sounds delicious ... what is this? ;-)\n. Just curious, what exactly are the types of things we're benchmarking?  This sounds really interesting, and possibly applicable to an (internal) project I'm getting involved with.\n. sounds delicious ... what is this? ;-)\n. ",
    "gaurav21r": "Any roadmap for this and the project in general?\n. ?\n. Just wanted an update on a roadmap. I could help with the work :-)\n. According to, http://adobe.github.com/topcoat `TopCoat was not meant for mobile apps, web sites and services, powerful authoring tools with a lot of configuration options. And extension of TopCoat would be required for those spaces.`\n. @kristoferjoseph Now I'm starting to get it! I am sure styling for Cordova will also mean styling for the mobile web right?\n\nWhen you say \"teams could drop in html and css components\" you mean to say that while the styling of components will follow a particular style guide, the components themselves will be open to development from the community? This will certainly be different than Boostrap where the components are fixed, but people can skin them through the LESS files.\n\nAlso, when you say \"our Edge desktop Applications\" you mean Adobe's HTML5 Canvas Authoring tool right? Or is Edge an entire suite of Applications?\n. @kristoferjoseph  sounds interesting. Any RoadMap being developed? I saw the link for the Edge products. Yea it resembles the topcoat ui. Whats the deal with Edge? Are we gonna see them replace fireworks, dreamweaver et al. ?\n. Any roadmap for this and the project in general?\n. ?\n. Just wanted an update on a roadmap. I could help with the work :-)\n. According to, http://adobe.github.com/topcoat `TopCoat was not meant for mobile apps, web sites and services, powerful authoring tools with a lot of configuration options. And extension of TopCoat would be required for those spaces.`\n. @kristoferjoseph Now I'm starting to get it! I am sure styling for Cordova will also mean styling for the mobile web right?\n\nWhen you say \"teams could drop in html and css components\" you mean to say that while the styling of components will follow a particular style guide, the components themselves will be open to development from the community? This will certainly be different than Boostrap where the components are fixed, but people can skin them through the LESS files.\n\nAlso, when you say \"our Edge desktop Applications\" you mean Adobe's HTML5 Canvas Authoring tool right? Or is Edge an entire suite of Applications?\n. @kristoferjoseph  sounds interesting. Any RoadMap being developed? I saw the link for the Edge products. Yea it resembles the topcoat ui. Whats the deal with Edge? Are we gonna see them replace fireworks, dreamweaver et al. ?\n. ",
    "larz0": "Could you take a screenshot of the issue? Which browser are you using?\n. Everything looks fine except the small dark button bar has thicker separators.\n![Screen Shot 2013-01-24 at 3 46 34 PM](https://f.cloud.github.com/assets/1495261/95818/6dced0e6-6680-11e2-9e18-11061e722f3c.png)\n. ![tumblr_inline_ml1o9qzesi1qz4rgp](https://f.cloud.github.com/assets/1495261/706033/a2a79a30-dde2-11e2-9f77-8d0d7751e7b9.gif)\n. Check out Reflow or Edge Code before we make any changes. The context is important. Topcoat Doc is not a desktop app.\n. @kristoferjoseph if it's too small we should use the large style. So far nobody is complaining. We should check other  pro-tools for reference e.g. Photoshop, Ableton LIve etc, those are established. This decision should be less about personal preference and knee-jerk reactions. But yeah if people want to make everything bigger I won't stop them.\n. (We could introduce five levels of sizes like frameworks for websites to please everyone if we feel there's a need.)\n. Rad.\n. Thanks for the heads up @iwehrman!\n. Do bands of shadows get added to this list?\n. ![uh](https://f.cloud.github.com/assets/1495261/2517801/0f812044-b45d-11e3-842d-0f17867da53d.gif)\n. ![tumblr_m6q2dqzad71ry10fwo1_500](https://f.cloud.github.com/assets/1495261/2517947/a16332e4-b45e-11e3-8c17-d92ef837efc4.gif)\n. @kristoferjoseph thanks for the heads up. Hoping to check it out on Friday.\n. Hahahaha\n. Thanks @kristoferjoseph. Will review one I'm done with other tasks~\n. Could you take a screenshot of the issue? Which browser are you using?\n. Everything looks fine except the small dark button bar has thicker separators.\n![Screen Shot 2013-01-24 at 3 46 34 PM](https://f.cloud.github.com/assets/1495261/95818/6dced0e6-6680-11e2-9e18-11061e722f3c.png)\n. ![tumblr_inline_ml1o9qzesi1qz4rgp](https://f.cloud.github.com/assets/1495261/706033/a2a79a30-dde2-11e2-9f77-8d0d7751e7b9.gif)\n. Check out Reflow or Edge Code before we make any changes. The context is important. Topcoat Doc is not a desktop app.\n. @kristoferjoseph if it's too small we should use the large style. So far nobody is complaining. We should check other  pro-tools for reference e.g. Photoshop, Ableton LIve etc, those are established. This decision should be less about personal preference and knee-jerk reactions. But yeah if people want to make everything bigger I won't stop them.\n. (We could introduce five levels of sizes like frameworks for websites to please everyone if we feel there's a need.)\n. Rad.\n. Thanks for the heads up @iwehrman!\n. Do bands of shadows get added to this list?\n. ![uh](https://f.cloud.github.com/assets/1495261/2517801/0f812044-b45d-11e3-842d-0f17867da53d.gif)\n. ![tumblr_m6q2dqzad71ry10fwo1_500](https://f.cloud.github.com/assets/1495261/2517947/a16332e4-b45e-11e3-8c17-d92ef837efc4.gif)\n. @kristoferjoseph thanks for the heads up. Hoping to check it out on Friday.\n. Hahahaha\n. Thanks @kristoferjoseph. Will review one I'm done with other tasks~\n. ",
    "zsalzbank": "![Screenshot from 2013-01-24 19:12:27](https://f.cloud.github.com/assets/939977/95911/fd8178c6-6683-11e2-859c-9b3e1570b639.png)\n\nChromium on Ubuntu 12.04\n. ![Screenshot from 2013-01-24 19:12:27](https://f.cloud.github.com/assets/939977/95911/fd8178c6-6683-11e2-859c-9b3e1570b639.png)\n\nChromium on Ubuntu 12.04\n. ",
    "ghost": "this should be reopened, since currently no font will be installed and the whole `component install topcoat/topcoat` will fail. try it out.\n\nevery single font-file should be listed. i feel like this is the problem on `component`-side, twice: for not copying folders and for aborting if even one file is missing ([reported+ignored](https://github.com/component/component/issues/199))\n. Screenshot?\n. sorry about the commit message, i ment `border-raduis:0` of course\n. ok, i'll wait. but it's almost christmas, so, next year?\n. another \"all urls changed to `topcoat/topcoat`\" commit landed here\n\nso, CLA _and_ it's own organization, it's officially big deal now :D\n. done.\n\nhm, ok, as long as it's stable, it's not outdated.\n. +1\n. Nice, using it now here: https://github.com/shawea/blueGrass\n. +1 a TabBar would be a killer addition to the library\n. Screenshot from my Nexus 4 confirms this. No hamburger drop down. ![topcoat.io website](http://i.imgur.com/wINwiWG.jpg)\n. It seems to me that an efficient SVG is current best practice.\n. Yes, for all the mobile users that use IE <9. \nI recommend not testing for IE. Even JQuery does not support it.\n. Yes please. Goal for topcat afaik is fast mobile and phonegap. Adding IE8 would hurt that goal, lots of alternatives for ie8 support.\n. this should be reopened, since currently no font will be installed and the whole `component install topcoat/topcoat` will fail. try it out.\n\nevery single font-file should be listed. i feel like this is the problem on `component`-side, twice: for not copying folders and for aborting if even one file is missing ([reported+ignored](https://github.com/component/component/issues/199))\n. Screenshot?\n. sorry about the commit message, i ment `border-raduis:0` of course\n. ok, i'll wait. but it's almost christmas, so, next year?\n. another \"all urls changed to `topcoat/topcoat`\" commit landed here\n\nso, CLA _and_ it's own organization, it's officially big deal now :D\n. done.\n\nhm, ok, as long as it's stable, it's not outdated.\n. +1\n. Nice, using it now here: https://github.com/shawea/blueGrass\n. +1 a TabBar would be a killer addition to the library\n. Screenshot from my Nexus 4 confirms this. No hamburger drop down. ![topcoat.io website](http://i.imgur.com/wINwiWG.jpg)\n. It seems to me that an efficient SVG is current best practice.\n. Yes, for all the mobile users that use IE <9. \nI recommend not testing for IE. Even JQuery does not support it.\n. Yes please. Goal for topcat afaik is fast mobile and phonegap. Adding IE8 would hurt that goal, lots of alternatives for ie8 support.\n. ",
    "njx": "![Screen Shot 2012-12-08 at 1.26.30 AM.png](https://f.cloud.github.com/assets/697759/1683/646653bc-4119-11e2-8189-a18315df521a.png)\n\nIt's the button in the upper left.\n. Note that this is on Retina at the moment. I don't recall whether I also looked at it on an external monitor.\n. ![Screen Shot 2012-12-08 at 1.26.30 AM.png](https://f.cloud.github.com/assets/697759/1683/646653bc-4119-11e2-8189-a18315df521a.png)\n\nIt's the button in the upper left.\n. Note that this is on Retina at the moment. I don't recall whether I also looked at it on an external monitor.\n. ",
    "andrewsimpson": "Thanks Andrei, no problem.\n\nAndrew\n\nPartner & Director\nhttp://stillbrandworks.com\n+1 778 318 4554\n\nOn Tuesday, 11 December, 2012 at 9:36 AM, Andrei Oprea wrote:\n\n> Hi! Thanks a lot for the pull request. Unfortunately until there is a Contributor License Agreement (CLA) in place I can't accept any pull requests. Hope this is fixed soon.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/adobe/topcoat/pull/24#issuecomment-11253605).  \n. Thanks Andrei, no problem.\n\nAndrew\n\nPartner & Director\nhttp://stillbrandworks.com\n+1 778 318 4554\n\nOn Tuesday, 11 December, 2012 at 9:36 AM, Andrei Oprea wrote:\n\n> Hi! Thanks a lot for the pull request. Unfortunately until there is a Contributor License Agreement (CLA) in place I can't accept any pull requests. Hope this is fixed soon.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/adobe/topcoat/pull/24#issuecomment-11253605).  \n. ",
    "jrowny": "![selectproblem](https://f.cloud.github.com/assets/367710/109072/d5d5d87a-6a67-11e2-9d2a-10c53bf5d33f.png)\n\nand a shot of the problem\n. I did sign the CLA yesterday so hopefully you've got it. \n. Just as a note, I used the default implementation of Font-Awesome and it's working fine, looks especially nice when they pick up that 1px of text shadow.\n. NPM install worked fine. I did get one warning on the npm install complaining that grunt@0.3.17 should be installed with -g. I already have grunt installed globally, I'm not sure what the practice is on this but running grunt worked fine.\n\nGrunt executed stylus, copied to font and img, and minified the CSS with no errors. I tested src/desktop which seems to look okay. I'm on windows with git bash.\n. ![selectproblem](https://f.cloud.github.com/assets/367710/109072/d5d5d87a-6a67-11e2-9d2a-10c53bf5d33f.png)\n\nand a shot of the problem\n. I did sign the CLA yesterday so hopefully you've got it. \n. Just as a note, I used the default implementation of Font-Awesome and it's working fine, looks especially nice when they pick up that 1px of text shadow.\n. NPM install worked fine. I did get one warning on the npm install complaining that grunt@0.3.17 should be installed with -g. I already have grunt installed globally, I'm not sure what the practice is on this but running grunt worked fine.\n\nGrunt executed stylus, copied to font and img, and minified the CSS with no errors. I tested src/desktop which seems to look okay. I'm on windows with git bash.\n. ",
    "nnnnic": "Hot potater!\n![tc-usage-mobile](https://f.cloud.github.com/assets/997862/705236/449c6570-ddd2-11e2-9987-2e1291529aa6.png)\n![tc-usage-light](https://f.cloud.github.com/assets/997862/705235/449a23aa-ddd2-11e2-827c-0ddaf71facdb.png)\n![tc-usage-dark](https://f.cloud.github.com/assets/997862/705237/44bafd64-ddd2-11e2-8bc4-e4914e5c2370.png)\n. @GarthDB The show/hide code link looks like it got nudged to the right a bit. Should be left aligned with the rest of the content. Thanks holmes!\n. Always dark!\n\nMaybe we need a \"secondary dark dark\" for that case...\n\nOn Jun 25, 2013, at 1:16 PM, Garth Braithwaite <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nI say always dark.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\n<notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> Want.\n> \n> ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/77#issuecomment-20003858.\n. Started this work at:\nhttp://codepen.io/nnnnic/pen/Bfnoy\n. Related:\n[#417](https://github.com/topcoat/topcoat/issues/417)\n[#337](https://github.com/topcoat/topcoat/issues/337)\n. :heart_eyes_cat: \n\nLooks great.\n\nThe gentleman from downstairs motions to remove the following from the main colors as it's dependent on actual values.\n\n``` css\nvar-border-color = darken(var-background-color, var-darkest)\n```\n\nThis way we can move the color values to the top and make it clearerer...\n. Thanks Daniel,\n\nIn addition to updating these guides for desktop browsers, we're also planning on making them mobile friendly. Since mobile components are intended for mobile devices they should definitely be represented in context on a phone or tablet.\n\nOn May 10, 2013, at 9:27 AM, \"Andrei Oprea\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nThat guide is old and it does not really reflect the state of the current components. The topcoat repo contains all the components all in their own repo. You can generate a styleguide using styledocco. There will be a view :)\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/191#issuecomment-17730140.\n. We should swap the order of the confirmation and dismissal buttons.\n\nTypically it's friendlier for people if the last thing they read is the call to action. Less eye scanning, etc needs to occur if the cta is in the right side.\n\nIt also matches the expected function where right means \"progress forward\" and left regresses to the previous step.\n\nOn May 31, 2013, at 7:15 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n-    Overlay reset component\n  -   [ ] mixins\n-    Overlay skin [https://f.cloud.github.com/assets/76308/591194/808219ac-c9fc-11e2-830d-9b2990f6368b.png] https://f.cloud.github.com/assets/76308/591194/808219ac-c9fc-11e2-830d-9b2990f6368b.png\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/219.\n. circleoutline.svg is olllllllllld. I'll remove it.\n\ncircle_outline.svg is the one you're looking for.\n\nOn Jun 17, 2013, at 10:31 AM, Kristofer Joseph <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nGood question. Will find out and update. Thanks!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/264#issuecomment-19560763.\n. @piatra I can try and reduce those by styling this by running a local version and sending it back your way.\n\nGonna be fun either way!\n. Here's a quick restyling of what's already up. Full design is coming at a later date.\n\nI wonder if we could eliminate the need to drill into a detail view by just allowing people to just use the side nav. It seems like the only thing we gain from clicking on \"detail\" currently is a little more real estate for the graph.\n\n![tc-benchmark_main](https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png)\n![tc-benchmark_detail](https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png)\n![tc-benchmark_mobile](https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png)\n. Like this:\n![image](https://f.cloud.github.com/assets/997862/873636/29fc0e9a-f87c-11e2-9ea3-a93348e3310c.png)\n\nbox-shadow: 0 0 3px rgba(111,181,241,1);\n. I didn't think we were using sprites for these anymore. @kristoferjoseph found a way to do it with pure CSS.\n. D'oh I made one too\u2026 haha!\nhttps://github.com/topcoat/prototypes/tree/master/radio\n\nOn Aug 1, 2013, at 5:29 AM, Kristofer Joseph <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nAwesome! Please pull request.\nOn Aug 1, 2013 7:45 AM, \"Andrei Oprea\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> Made this available for radio input, refactored the component to be CSS\n> only.\n> \n> Chrome & Firefox\n> [image: screen shot 2013-08-01 at 1 42 20 pm]https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png\n> [image: screen shot 2013-08-01 at 1 42 33 pm]https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png\n> [image: screen shot 2013-08-01 at 1 42 49 pm]https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png\n> \n> @kristoferjoseph https://github.com/kristoferjoseph have you worked on\n> this ? Should I do a pull req ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21930932\n> .\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21932807.\n. @piatra should I add it to\n`.topcoat-radio__label:before,\n.topcoat-radio__label--right:before,\n.topcoat-radio__label--left:before {`\n\nor somewhere else?\n. As long as it looks like a select I'm good with it. It works in more browsers than it doesn't work in right?\n\nHow does it degrade in FF if we don't do some wacky workarounds?\n. That's no fun.\n\nI think @GarthDB is onto something currently...\n. I like the screenshots above much better than what's [currently implemented](http://bench.topcoat.io).\n\nCan we shift to this?\n. Here's the new images. If you need something else (svg?) lemme know.\n\n![select-arrow](https://f.cloud.github.com/assets/997862/1010938/54ace148-0b53-11e3-8f26-f81814bc9065.png)\n![select-arrow 2x](https://f.cloud.github.com/assets/997862/1010939/54c015c4-0b53-11e3-9f77-232442efad61.png)\n. ;-(\n. All usage guidelines on the Desktop site.\n. Started working on this:\nhttp://codepen.io/nnnnic/pen/ahAtr\n\nWas starting in on the Light theme and realized we should be able to reuse a lot of the same logic when applying dark colors as well.\n\nThis would be ideal: https://github.com/timhettler/cssconf-2013/tree/master/sass\n. Yes please\n. Topcoat Server should say Topcoat and link back to home like the rest of the site.\n. Fridae is the Githubz Dae.\n. Dope thanks!\n\nHollering atcha soon.\n\nOn Aug 29, 2013, at 8:48 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n@larzhttps://github.com/larz & @nnnnichttps://github.com/nnnnic Here are the links to the components for design review:\nButtonhttp://topcoat.io/button\nCheckboxhttp://topcoat.io/checkbox\nIcon Buttonhttp://topcoat.io/icon-button\nListhttp://topcoat.io/list *Mobile only since there was no desktop design\nNavigation Barhttp://topcoat.io/navigation-bar *Mobile only. Will need designs for desktop header\nRadio Buttonhttp://topcoat.io/radio-button\nSearch Inputhttp://topcoat.io/search-input\nText Inputhttp://topcoat.io/text-input *Needs valid state added. Input turns green once Invalide Red state is satisfied.\nText Areahttp://topcoat.io/textarea *Desktop version was not in psd so we took our best shot\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/375#issuecomment-23499802.\n. The entire navigation should be available on every page via the hamburglar menu.\n\nhttps://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png\n\nOn Aug 29, 2013, at 11:22 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nDemo link is hidden on mobile.\nWe should expose it.\n*We should probably also optimize the hero image while we are at it.\n[https://f.cloud.github.com/assets/76308/1052122/bc726a80-10d7-11e3-9a9d-399faef33374.png]https://f.cloud.github.com/assets/76308/1052122/bc726a80-10d7-11e3-9a9d-399faef33374.png\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/384.\n. Spinner proposal: http://codepen.io/nnnnic/pen/JnKbx\n. Just right!\n\nSpeed could be a variable... Maybe once we get our own animation.css?\n\nOn Sep 29, 2013, at 9:41 AM, \"Garth Braithwaite\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nFASTER!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/394#issuecomment-25323832.\n. Just talked to @timriot about this. Could be amazeballs.\n. Proposed interaction:\n![topcoat-generator-map](https://f.cloud.github.com/assets/997862/1338615/851541d8-35ea-11e3-8f5a-412bd258b44c.jpg)\n. :heart_eyes: \n. I'm using\n\n``` Stylus\nvar-shadow-color\nvar-highlight-color\n```\n\nThis way we can declare whites and blacks and use them for things like:\n\n``` Stylus\nvar-background-color--text-input--focus\n```\n. Finished fiddling with the **[Light Theme](http://codepen.io/nnnnic/details/ajbKw)**\n\n##### Here's what changed\n\n**[Shared variables](http://codepen.io/nnnnic/pen/DwFAe)**\nThis contains the CTA variables as those are the same in both light and dark. There may be a few color values I missed due to how heavy the Light theme was. \n\n**[Variables Light](http://codepen.io/nnnnic/pen/krBoG)**\nThe top of the file contains the color variables. Everything else is tweaked based on these for easy theming based on a few colors.\n\nIt would be rad if we could swap between light and dark by simply editing these few colors... Seems like we'd have to perform some inversion magic in a few cases though.\n\nDark theme shouldn't be too tough to do now using this as a guide. I'll get started on it this weekend.\n\n'Night.\n\n![2013-10-03](https://f.cloud.github.com/assets/997862/1267690/ae7c39a8-2cc8-11e3-92c1-d179076b40b5.jpg)\n. Ah good one!!\n\n> On Feb 4, 2014, at 7:34 AM, Kristofer Joseph notifications@github.com wrote:\n> \n> Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9.\n> \n> Thanks for the issue!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Planning on doing a not so but tony one tomorrow. :)\n. @kristoferjoseph Tony says http://codepen.io/nnnnic/pen/FIgbd\n. Definitely!\n\nI'll be back!\n\n> On Feb 6, 2014, at 12:04 PM, Kristofer Joseph notifications@github.com wrote:\n> \n> Thanks @nnnnic!\n> I am not feeling the little arrows. they feel heavy compared to the rest of the theme. Can we try out some different delimiter treatments? \n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. :first-child :last-child!\n. Oh focus. Ignore me!\n. Popovers are cool too:\nhttp://codepen.io/nnnnic/pen/nJFfv\n. Might be good to add a more prominent link to the header as well. \n\n> On Nov 5, 2013, at 5:24 PM, Kristofer Joseph notifications@github.com wrote:\n> \n> Currently the github link in the footer of topcoat.io links to github.com/topcoat which drops you into the list of all the repos. We should instead drop you into github.com/topcoat/topcoat so users can see the README.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Related https://github.com/topcoat/topcoat/issues/481 ?\n. OMG WORKD! FANKS!\n. Yes!\n\nIn addition I think we could post some sort of redundant getting started\nblob to them all.\n\nOn Thu, Jan 23, 2014 at 10:34 AM, Kristofer Joseph <notifications@github.com\n\n> wrote:\n> \n> Something like:\n> https://github.com/lodash\n> \n> Users landing on the topcoat github section are overwhelmed by all of the\n> repos.\n> We should style this to be less scary and optimize the experience for what\n> they are looking for.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/474\n> .\n. http://codepen.io/nnnnic/pen/BGrsb\n\nWorkin on it!\n. Thanks Garth. \n\n> On Feb 14, 2014, at 10:41 AM, Garth Braithwaite notifications@github.com wrote:\n> \n> Merged #482.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hot potater!\n![tc-usage-mobile](https://f.cloud.github.com/assets/997862/705236/449c6570-ddd2-11e2-9987-2e1291529aa6.png)\n![tc-usage-light](https://f.cloud.github.com/assets/997862/705235/449a23aa-ddd2-11e2-827c-0ddaf71facdb.png)\n![tc-usage-dark](https://f.cloud.github.com/assets/997862/705237/44bafd64-ddd2-11e2-8bc4-e4914e5c2370.png)\n. @GarthDB The show/hide code link looks like it got nudged to the right a bit. Should be left aligned with the rest of the content. Thanks holmes!\n. Always dark!\n\nMaybe we need a \"secondary dark dark\" for that case...\n\nOn Jun 25, 2013, at 1:16 PM, Garth Braithwaite <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nI say always dark.\n\u2014\nSent from Mailbox for iPhone\n\nOn Tue, Jun 25, 2013 at 1:14 PM, Kristofer Joseph\n<notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> Want.\n> \n> ## In the responsive view is the secondary menu exposed in the slide out going to be dark when there is a dark page or will we be switching out the secondary menu to be light?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/topcoat/topcoat/issues/77#issuecomment-20003767\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/77#issuecomment-20003858.\n. Started this work at:\nhttp://codepen.io/nnnnic/pen/Bfnoy\n. Related:\n[#417](https://github.com/topcoat/topcoat/issues/417)\n[#337](https://github.com/topcoat/topcoat/issues/337)\n. :heart_eyes_cat: \n\nLooks great.\n\nThe gentleman from downstairs motions to remove the following from the main colors as it's dependent on actual values.\n\n``` css\nvar-border-color = darken(var-background-color, var-darkest)\n```\n\nThis way we can move the color values to the top and make it clearerer...\n. Thanks Daniel,\n\nIn addition to updating these guides for desktop browsers, we're also planning on making them mobile friendly. Since mobile components are intended for mobile devices they should definitely be represented in context on a phone or tablet.\n\nOn May 10, 2013, at 9:27 AM, \"Andrei Oprea\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nThat guide is old and it does not really reflect the state of the current components. The topcoat repo contains all the components all in their own repo. You can generate a styleguide using styledocco. There will be a view :)\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/191#issuecomment-17730140.\n. We should swap the order of the confirmation and dismissal buttons.\n\nTypically it's friendlier for people if the last thing they read is the call to action. Less eye scanning, etc needs to occur if the cta is in the right side.\n\nIt also matches the expected function where right means \"progress forward\" and left regresses to the previous step.\n\nOn May 31, 2013, at 7:15 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n-    Overlay reset component\n  -   [ ] mixins\n-    Overlay skin [https://f.cloud.github.com/assets/76308/591194/808219ac-c9fc-11e2-830d-9b2990f6368b.png] https://f.cloud.github.com/assets/76308/591194/808219ac-c9fc-11e2-830d-9b2990f6368b.png\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/219.\n. circleoutline.svg is olllllllllld. I'll remove it.\n\ncircle_outline.svg is the one you're looking for.\n\nOn Jun 17, 2013, at 10:31 AM, Kristofer Joseph <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nGood question. Will find out and update. Thanks!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/264#issuecomment-19560763.\n. @piatra I can try and reduce those by styling this by running a local version and sending it back your way.\n\nGonna be fun either way!\n. Here's a quick restyling of what's already up. Full design is coming at a later date.\n\nI wonder if we could eliminate the need to drill into a detail view by just allowing people to just use the side nav. It seems like the only thing we gain from clicking on \"detail\" currently is a little more real estate for the graph.\n\n![tc-benchmark_main](https://f.cloud.github.com/assets/997862/808463/bfb9b706-ee64-11e2-9d30-dd07cc79c588.png)\n![tc-benchmark_detail](https://f.cloud.github.com/assets/997862/808464/c2b3da04-ee64-11e2-85d3-61a57269f5a7.png)\n![tc-benchmark_mobile](https://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png)\n. Like this:\n![image](https://f.cloud.github.com/assets/997862/873636/29fc0e9a-f87c-11e2-9ea3-a93348e3310c.png)\n\nbox-shadow: 0 0 3px rgba(111,181,241,1);\n. I didn't think we were using sprites for these anymore. @kristoferjoseph found a way to do it with pure CSS.\n. D'oh I made one too\u2026 haha!\nhttps://github.com/topcoat/prototypes/tree/master/radio\n\nOn Aug 1, 2013, at 5:29 AM, Kristofer Joseph <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nAwesome! Please pull request.\nOn Aug 1, 2013 7:45 AM, \"Andrei Oprea\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n> Made this available for radio input, refactored the component to be CSS\n> only.\n> \n> Chrome & Firefox\n> [image: screen shot 2013-08-01 at 1 42 20 pm]https://f.cloud.github.com/assets/810040/893356/abcd487e-fa9f-11e2-83ce-d0a2ec84c23c.png\n> [image: screen shot 2013-08-01 at 1 42 33 pm]https://f.cloud.github.com/assets/810040/893357/abe637d0-fa9f-11e2-88a4-2e5a62ec04bb.png\n> [image: screen shot 2013-08-01 at 1 42 49 pm]https://f.cloud.github.com/assets/810040/893358/abefa554-fa9f-11e2-8f0c-2cb7ac50719b.png\n> \n> @kristoferjoseph https://github.com/kristoferjoseph have you worked on\n> this ? Should I do a pull req ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21930932\n> .\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/309#issuecomment-21932807.\n. @piatra should I add it to\n`.topcoat-radio__label:before,\n.topcoat-radio__label--right:before,\n.topcoat-radio__label--left:before {`\n\nor somewhere else?\n. As long as it looks like a select I'm good with it. It works in more browsers than it doesn't work in right?\n\nHow does it degrade in FF if we don't do some wacky workarounds?\n. That's no fun.\n\nI think @GarthDB is onto something currently...\n. I like the screenshots above much better than what's [currently implemented](http://bench.topcoat.io).\n\nCan we shift to this?\n. Here's the new images. If you need something else (svg?) lemme know.\n\n![select-arrow](https://f.cloud.github.com/assets/997862/1010938/54ace148-0b53-11e3-8f26-f81814bc9065.png)\n![select-arrow 2x](https://f.cloud.github.com/assets/997862/1010939/54c015c4-0b53-11e3-9f77-232442efad61.png)\n. ;-(\n. All usage guidelines on the Desktop site.\n. Started working on this:\nhttp://codepen.io/nnnnic/pen/ahAtr\n\nWas starting in on the Light theme and realized we should be able to reuse a lot of the same logic when applying dark colors as well.\n\nThis would be ideal: https://github.com/timhettler/cssconf-2013/tree/master/sass\n. Yes please\n. Topcoat Server should say Topcoat and link back to home like the rest of the site.\n. Fridae is the Githubz Dae.\n. Dope thanks!\n\nHollering atcha soon.\n\nOn Aug 29, 2013, at 8:48 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\n@larzhttps://github.com/larz & @nnnnichttps://github.com/nnnnic Here are the links to the components for design review:\nButtonhttp://topcoat.io/button\nCheckboxhttp://topcoat.io/checkbox\nIcon Buttonhttp://topcoat.io/icon-button\nListhttp://topcoat.io/list *Mobile only since there was no desktop design\nNavigation Barhttp://topcoat.io/navigation-bar *Mobile only. Will need designs for desktop header\nRadio Buttonhttp://topcoat.io/radio-button\nSearch Inputhttp://topcoat.io/search-input\nText Inputhttp://topcoat.io/text-input *Needs valid state added. Input turns green once Invalide Red state is satisfied.\nText Areahttp://topcoat.io/textarea *Desktop version was not in psd so we took our best shot\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/375#issuecomment-23499802.\n. The entire navigation should be available on every page via the hamburglar menu.\n\nhttps://f.cloud.github.com/assets/997862/808465/c875b3a4-ee64-11e2-92e1-5ddb0209d231.png\n\nOn Aug 29, 2013, at 11:22 AM, \"Kristofer Joseph\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nDemo link is hidden on mobile.\nWe should expose it.\n*We should probably also optimize the hero image while we are at it.\n[https://f.cloud.github.com/assets/76308/1052122/bc726a80-10d7-11e3-9a9d-399faef33374.png]https://f.cloud.github.com/assets/76308/1052122/bc726a80-10d7-11e3-9a9d-399faef33374.png\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/384.\n. Spinner proposal: http://codepen.io/nnnnic/pen/JnKbx\n. Just right!\n\nSpeed could be a variable... Maybe once we get our own animation.css?\n\nOn Sep 29, 2013, at 9:41 AM, \"Garth Braithwaite\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nFASTER!\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/394#issuecomment-25323832.\n. Just talked to @timriot about this. Could be amazeballs.\n. Proposed interaction:\n![topcoat-generator-map](https://f.cloud.github.com/assets/997862/1338615/851541d8-35ea-11e3-8f5a-412bd258b44c.jpg)\n. :heart_eyes: \n. I'm using\n\n``` Stylus\nvar-shadow-color\nvar-highlight-color\n```\n\nThis way we can declare whites and blacks and use them for things like:\n\n``` Stylus\nvar-background-color--text-input--focus\n```\n. Finished fiddling with the **[Light Theme](http://codepen.io/nnnnic/details/ajbKw)**\n\n##### Here's what changed\n\n**[Shared variables](http://codepen.io/nnnnic/pen/DwFAe)**\nThis contains the CTA variables as those are the same in both light and dark. There may be a few color values I missed due to how heavy the Light theme was. \n\n**[Variables Light](http://codepen.io/nnnnic/pen/krBoG)**\nThe top of the file contains the color variables. Everything else is tweaked based on these for easy theming based on a few colors.\n\nIt would be rad if we could swap between light and dark by simply editing these few colors... Seems like we'd have to perform some inversion magic in a few cases though.\n\nDark theme shouldn't be too tough to do now using this as a guide. I'll get started on it this weekend.\n\n'Night.\n\n![2013-10-03](https://f.cloud.github.com/assets/997862/1267690/ae7c39a8-2cc8-11e3-92c1-d179076b40b5.jpg)\n. Ah good one!!\n\n> On Feb 4, 2014, at 7:34 AM, Kristofer Joseph notifications@github.com wrote:\n> \n> Added this to resin. You will be able to supply an asset path for different build targets starting at 0.9.\n> \n> Thanks for the issue!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Planning on doing a not so but tony one tomorrow. :)\n. @kristoferjoseph Tony says http://codepen.io/nnnnic/pen/FIgbd\n. Definitely!\n\nI'll be back!\n\n> On Feb 6, 2014, at 12:04 PM, Kristofer Joseph notifications@github.com wrote:\n> \n> Thanks @nnnnic!\n> I am not feeling the little arrows. they feel heavy compared to the rest of the theme. Can we try out some different delimiter treatments? \n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. :first-child :last-child!\n. Oh focus. Ignore me!\n. Popovers are cool too:\nhttp://codepen.io/nnnnic/pen/nJFfv\n. Might be good to add a more prominent link to the header as well. \n\n> On Nov 5, 2013, at 5:24 PM, Kristofer Joseph notifications@github.com wrote:\n> \n> Currently the github link in the footer of topcoat.io links to github.com/topcoat which drops you into the list of all the repos. We should instead drop you into github.com/topcoat/topcoat so users can see the README.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Related https://github.com/topcoat/topcoat/issues/481 ?\n. OMG WORKD! FANKS!\n. Yes!\n\nIn addition I think we could post some sort of redundant getting started\nblob to them all.\n\nOn Thu, Jan 23, 2014 at 10:34 AM, Kristofer Joseph <notifications@github.com\n\n> wrote:\n> \n> Something like:\n> https://github.com/lodash\n> \n> Users landing on the topcoat github section are overwhelmed by all of the\n> repos.\n> We should style this to be less scary and optimize the experience for what\n> they are looking for.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/474\n> .\n. http://codepen.io/nnnnic/pen/BGrsb\n\nWorkin on it!\n. Thanks Garth. \n\n> On Feb 14, 2014, at 10:41 AM, Garth Braithwaite notifications@github.com wrote:\n> \n> Merged #482.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "eddanger": "Looks pretty! :+1: \n. Very slick!\n. Looks pretty! :+1: \n. Very slick!\n. ",
    "joemccann": "yes plz. need this nao. is there an example?\n. yes plz. need this nao. is there an example?\n. ",
    "ynliu": "Not sure if we still need this.\n. Done.\n. I created a wiki with detail steps of how to setup Ubuntu for running the test on Android. I'm thinking to add a link in the README.md after this wiki is reviewed and sign off. Could you help to take a look? Thanks!\n\nhttps://github.com/ynliu/topcoat/wiki/Running-Performance-Test-on-Android\n. I copied the wiki to topcoat repo at:\nhttps://github.com/topcoat/topcoat/wiki/Running-TopCoat-Performance-Test-on-Android\n\nAnd I also submitted a commit to update the README.md for performance test with this wiki. \n. Having the Python version for all platforms sounds good to me too. I haven't tested the script on Mac and Ubuntu yet. So let me do that and I will remove the shell script after it's ready.\n\nOn Mar 19, 2013, at 3:24, \"cataling\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHaving the python version of runAll.sh is awesome. Any reason we're not using it on Mac and remove runAll.sh altogether?\n. [Update] after upgrade to Grunt 0.4 on Ubuntu, now it works in the same way as Win and Mac.\n\nBecause the default grunt installed from   Node npm on Ubuntu is 0.3.7. It still uses grunt.js as the default Grunt file. But let me try manually installing ver0.4 to see if that would work for Ubuntu.\n\nOn Mar 19, 2013, at 3:25, \"cataling\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nWhy pass --config Gruntfile.js to grunt? This is the default for grunt 0.4, which we're using - this parameter should be redundant.\n. Hi, after I updated my Ubuntu then re-installed the latest version of Nodejs, the latest version of Grunt (0.4) is available for my Ubuntu to install. So after I upgraded to Grunt 0.4, everything works in the same way across all platforms (Win, Mac and Ubuntu). Therefore, I have rollbacked those commits that now is unnecessary.\n\nI also consolidated commits related to the newly added runAll.py into one commit for better organization :-)\n. Ubuntu is required for running Telemetry test on Android. Because there are few Android ARM binaries are required by Chromium Telemetry (device_forwarder, host_forwarder). And to build those binaries for Android, we have to setup Chromium to build for Android. Currently, Chromium only supports build for Android on 64bit Linux. \n\nDetails can be found in: \nhttp://www.chromium.org/developers/telemetry\nhttps://code.google.com/p/chromium/wiki/AndroidBuildInstructions\n. I created a wiki with detail steps of how to setup Ubuntu for running the test on Android. I'm thinking to add a link in the README.md after this wiki is reviewed and sign off. Could you help to take a look? Thanks!\n\nhttps://github.com/ynliu/topcoat/wiki/Running-Performance-Test-on-Android\n. > > Consolidating commits are awesome - how did you do that?\n\nThese should do it:\n\n1.) amend a commit\nhttp://stackoverflow.com/questions/3103589/how-can-i-easily-fixup-a-past-commit\n\n2.) delete a commit\nhttp://stackoverflow.com/questions/448919/how-can-i-remove-a-commit-on-github\n. I copied the wiki to topcoat repo at:\nhttps://github.com/topcoat/topcoat/wiki/Running-TopCoat-Performance-Test-on-Android\n\nI also submitted a commit to update the README.md for performance test with this wiki. \n. Finally I remembered why I changed to copy without the Release folder in copy:telemetry in Gruntfile.js. It's because that task doesn't work on Win. It seems it's a bug in grunt-contrib-copy that it doesn't take Win's path separator \"\\\" into account in the function which detects wether a path is directory or file. It should be the same issue as this one: http://stackoverflow.com/questions/14452751/grunt-multi-tasks-throwing-eisdir-error-when-building/15559764#15559764\n\nTo fix that, we need to touch grunt-contrib-copy for Win. Please refer to commit 12bbe02 above for my fix. But it could be inconvenient to update that file every time when you install grunt-contrib-copy. As a workaround, we could also set that copy task as Expand=true so that we don't need to touch grunt-contrib-copy. I like this walk around better ;-) Could you advice which approach we'd like to take? Thanks!\n. You right again :-) Somehow the path to npm is missing from my Win PATH. It should be added automatically when install Nodejs. After I added it back, now I can just use grunt.cmd to launch grunt from anywhere. \nrunAll.py has been updated with this change.\n\nOn Mar 19, 2013, at 3:35 AM, cataling <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nI'm wandering why is GRUNT_PATH necessary.\nAccording to http://gruntjs.com/getting-started, npm install -g grunt-cli should add grunt to the system path.\nIs this not the case in Win7?\n. Yeah, path.sep is much better :-) So I have submitted an issue report to grunt-conrib-copy for the bug on Win. I also provided my suggestion on the fix (by using path.sep).\n. Dup with another commit. Closing this one.\n. Thanks! Yah, that error is because the master jade file in topcoat repo can't find any telemetry test case in individual controls (those inside src/**/test/perf). I also have few pull requests sent to each topcoat control repos (e.g. text-input) for adding the telemetry test case. Once they got merged, then you can use `grunt topcoat` to download updated topcoat controls, then `grunt telemetry:mobile:light` or `test/perf/telemetry/bin/runAll.py mobile light` to run telemetry test. I will update the README.md for running telemetry test shortly.\n. Just realized we download tagged version of controls (not latest one) in topcoat project by default. So it doesn't have the telemetry jade file I added yesterday. To solve that, you can edit the package.json in topcoat project to remove tag into from each control and skin so `grunt topcoat` will download the latest code for those component (very nice design btw!).\n. In the latest version of Chromium Telemetry, \"scrolling_action\" has been renamed to \"scroll\".\n\nhttp://src.chromium.org/viewvc/chrome/trunk/src/tools/telemetry/telemetry/page/actions/scroll.py?view=log\n\nWe should log another issue for updating Topcoat Benchmark script to adopt that change.\n. I think it's still opened. I haven't got the chance to update the chromium bits for telemetry.\n. Right, this is a dup of #224 so closing this one. Thanks!\n. I see. Compile task now is moved into grunt-topcoat.\n\ngrunt-contrib-stylus is installed within grunt-topcoat. But somehow this error still occurs.\n. Thanks for adding the test!\n\nI personally like the idea of having Travis CI tests for all components. And we could put the status icons on a page so just a glance could know the overall status of all components.\n. Yeah, that would be very cool. But we need to connect and test on a physical device. \nI'm not sure if that's doable with Travis CI.\n. I see what you mean now. Yeah, it's doable. We just need to query the online db for previous telemetry result then compare it with the one we just got.\n. Actually, I think I'm using the latest theme code by manually git clone the theme repo into my topcoat/src/theme folder. And I checked that the variable is there in variables-shared.styl. Not sure why it didn't got picked up during topcoat:compile.\n. This brings me a idea that we could have a script to scan the compiled release CSS files to look for any un-replaced variable, maybe once a day.\n. Very nice ~\n. Yeah. Closing this one.\n. The unit test now is passed with my local run.\nBut the Nyan missing issue is still there with CI run. \nThat's a different issue than this one. So closing.\n. e4b6d6d looks good to me. Thanks!\n. Changed to use the base control by npm, but still got the same error:\n\n```\n\u001b[4mRunning \"stylus:src/theme/src/theme-topcoat-desktop-dark.styl\" (stylus) task\u001b[24m\n\u001b[31m>> \u001b[39mError: src/skins/radio-input/node_modules/topcoat-input-base/src/input.styl:19\u001b[31m\n>> \u001b[39m   15| * limitations under the License.\u001b[31m\n>> \u001b[39m   16| *\u001b[31m\n>> \u001b[39m   17| */\u001b[31m\n>> \u001b[39m   18| @import input-mixin\u001b[31m\n>> \u001b[39m > 19| \u001b[31m\n>> \u001b[39m   20| .input\u001b[31m\n>> \u001b[39m   21|   input-base()\u001b[31m\n>> \u001b[39m   22| \u001b[31m\n>> \u001b[39m\u001b[31m\n>> \u001b[39mfailed to locate @import file input-mixin.styl\n\u001b[33mWarning: Stylus failed to compile.\u0007 Use --force to continue.\u001b[39m\n```\n. Not sure if we still need this.\n. Done.\n. I created a wiki with detail steps of how to setup Ubuntu for running the test on Android. I'm thinking to add a link in the README.md after this wiki is reviewed and sign off. Could you help to take a look? Thanks!\n\nhttps://github.com/ynliu/topcoat/wiki/Running-Performance-Test-on-Android\n. I copied the wiki to topcoat repo at:\nhttps://github.com/topcoat/topcoat/wiki/Running-TopCoat-Performance-Test-on-Android\n\nAnd I also submitted a commit to update the README.md for performance test with this wiki. \n. Having the Python version for all platforms sounds good to me too. I haven't tested the script on Mac and Ubuntu yet. So let me do that and I will remove the shell script after it's ready.\n\nOn Mar 19, 2013, at 3:24, \"cataling\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nHaving the python version of runAll.sh is awesome. Any reason we're not using it on Mac and remove runAll.sh altogether?\n. [Update] after upgrade to Grunt 0.4 on Ubuntu, now it works in the same way as Win and Mac.\n\nBecause the default grunt installed from   Node npm on Ubuntu is 0.3.7. It still uses grunt.js as the default Grunt file. But let me try manually installing ver0.4 to see if that would work for Ubuntu.\n\nOn Mar 19, 2013, at 3:25, \"cataling\" <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nWhy pass --config Gruntfile.js to grunt? This is the default for grunt 0.4, which we're using - this parameter should be redundant.\n. Hi, after I updated my Ubuntu then re-installed the latest version of Nodejs, the latest version of Grunt (0.4) is available for my Ubuntu to install. So after I upgraded to Grunt 0.4, everything works in the same way across all platforms (Win, Mac and Ubuntu). Therefore, I have rollbacked those commits that now is unnecessary.\n\nI also consolidated commits related to the newly added runAll.py into one commit for better organization :-)\n. Ubuntu is required for running Telemetry test on Android. Because there are few Android ARM binaries are required by Chromium Telemetry (device_forwarder, host_forwarder). And to build those binaries for Android, we have to setup Chromium to build for Android. Currently, Chromium only supports build for Android on 64bit Linux. \n\nDetails can be found in: \nhttp://www.chromium.org/developers/telemetry\nhttps://code.google.com/p/chromium/wiki/AndroidBuildInstructions\n. I created a wiki with detail steps of how to setup Ubuntu for running the test on Android. I'm thinking to add a link in the README.md after this wiki is reviewed and sign off. Could you help to take a look? Thanks!\n\nhttps://github.com/ynliu/topcoat/wiki/Running-Performance-Test-on-Android\n. > > Consolidating commits are awesome - how did you do that?\n\nThese should do it:\n\n1.) amend a commit\nhttp://stackoverflow.com/questions/3103589/how-can-i-easily-fixup-a-past-commit\n\n2.) delete a commit\nhttp://stackoverflow.com/questions/448919/how-can-i-remove-a-commit-on-github\n. I copied the wiki to topcoat repo at:\nhttps://github.com/topcoat/topcoat/wiki/Running-TopCoat-Performance-Test-on-Android\n\nI also submitted a commit to update the README.md for performance test with this wiki. \n. Finally I remembered why I changed to copy without the Release folder in copy:telemetry in Gruntfile.js. It's because that task doesn't work on Win. It seems it's a bug in grunt-contrib-copy that it doesn't take Win's path separator \"\\\" into account in the function which detects wether a path is directory or file. It should be the same issue as this one: http://stackoverflow.com/questions/14452751/grunt-multi-tasks-throwing-eisdir-error-when-building/15559764#15559764\n\nTo fix that, we need to touch grunt-contrib-copy for Win. Please refer to commit 12bbe02 above for my fix. But it could be inconvenient to update that file every time when you install grunt-contrib-copy. As a workaround, we could also set that copy task as Expand=true so that we don't need to touch grunt-contrib-copy. I like this walk around better ;-) Could you advice which approach we'd like to take? Thanks!\n. You right again :-) Somehow the path to npm is missing from my Win PATH. It should be added automatically when install Nodejs. After I added it back, now I can just use grunt.cmd to launch grunt from anywhere. \nrunAll.py has been updated with this change.\n\nOn Mar 19, 2013, at 3:35 AM, cataling <notifications@github.com<mailto:notifications@github.com>> wrote:\n\nI'm wandering why is GRUNT_PATH necessary.\nAccording to http://gruntjs.com/getting-started, npm install -g grunt-cli should add grunt to the system path.\nIs this not the case in Win7?\n. Yeah, path.sep is much better :-) So I have submitted an issue report to grunt-conrib-copy for the bug on Win. I also provided my suggestion on the fix (by using path.sep).\n. Dup with another commit. Closing this one.\n. Thanks! Yah, that error is because the master jade file in topcoat repo can't find any telemetry test case in individual controls (those inside src/**/test/perf). I also have few pull requests sent to each topcoat control repos (e.g. text-input) for adding the telemetry test case. Once they got merged, then you can use `grunt topcoat` to download updated topcoat controls, then `grunt telemetry:mobile:light` or `test/perf/telemetry/bin/runAll.py mobile light` to run telemetry test. I will update the README.md for running telemetry test shortly.\n. Just realized we download tagged version of controls (not latest one) in topcoat project by default. So it doesn't have the telemetry jade file I added yesterday. To solve that, you can edit the package.json in topcoat project to remove tag into from each control and skin so `grunt topcoat` will download the latest code for those component (very nice design btw!).\n. In the latest version of Chromium Telemetry, \"scrolling_action\" has been renamed to \"scroll\".\n\nhttp://src.chromium.org/viewvc/chrome/trunk/src/tools/telemetry/telemetry/page/actions/scroll.py?view=log\n\nWe should log another issue for updating Topcoat Benchmark script to adopt that change.\n. I think it's still opened. I haven't got the chance to update the chromium bits for telemetry.\n. Right, this is a dup of #224 so closing this one. Thanks!\n. I see. Compile task now is moved into grunt-topcoat.\n\ngrunt-contrib-stylus is installed within grunt-topcoat. But somehow this error still occurs.\n. Thanks for adding the test!\n\nI personally like the idea of having Travis CI tests for all components. And we could put the status icons on a page so just a glance could know the overall status of all components.\n. Yeah, that would be very cool. But we need to connect and test on a physical device. \nI'm not sure if that's doable with Travis CI.\n. I see what you mean now. Yeah, it's doable. We just need to query the online db for previous telemetry result then compare it with the one we just got.\n. Actually, I think I'm using the latest theme code by manually git clone the theme repo into my topcoat/src/theme folder. And I checked that the variable is there in variables-shared.styl. Not sure why it didn't got picked up during topcoat:compile.\n. This brings me a idea that we could have a script to scan the compiled release CSS files to look for any un-replaced variable, maybe once a day.\n. Very nice ~\n. Yeah. Closing this one.\n. The unit test now is passed with my local run.\nBut the Nyan missing issue is still there with CI run. \nThat's a different issue than this one. So closing.\n. e4b6d6d looks good to me. Thanks!\n. Changed to use the base control by npm, but still got the same error:\n\n```\n\u001b[4mRunning \"stylus:src/theme/src/theme-topcoat-desktop-dark.styl\" (stylus) task\u001b[24m\n\u001b[31m>> \u001b[39mError: src/skins/radio-input/node_modules/topcoat-input-base/src/input.styl:19\u001b[31m\n>> \u001b[39m   15| * limitations under the License.\u001b[31m\n>> \u001b[39m   16| *\u001b[31m\n>> \u001b[39m   17| */\u001b[31m\n>> \u001b[39m   18| @import input-mixin\u001b[31m\n>> \u001b[39m > 19| \u001b[31m\n>> \u001b[39m   20| .input\u001b[31m\n>> \u001b[39m   21|   input-base()\u001b[31m\n>> \u001b[39m   22| \u001b[31m\n>> \u001b[39m\u001b[31m\n>> \u001b[39mfailed to locate @import file input-mixin.styl\n\u001b[33mWarning: Stylus failed to compile.\u0007 Use --force to continue.\u001b[39m\n```\n. ",
    "v1xingyue": "May you tell me  what is CI ?  Is it Codeigniter ?\n. I know thank u \n. May you tell me  what is CI ?  Is it Codeigniter ?\n. I know thank u \n. ",
    "sime": "Continuous Integration.\n\nOn Tue, May 14, 2013 at 9:19 AM, istrone notifications@github.com wrote:\n\n> May you tell me what is CI ? Is it Codeigniter ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/120#issuecomment-17851520\n> .\n\n## \n\nSimon Males\n. I can confirm it's an issue in FirefoxOS. Screenshots included.\n\n![2013-05-29-23-00-34](https://f.cloud.github.com/assets/216917/579407/fe7cfbc0-c870-11e2-82e9-6c04356369ad.png)\n![2013-05-29-23-01-56](https://f.cloud.github.com/assets/216917/579408/ff1b23ea-c870-11e2-922c-4ce9e83981e0.png)\n![2013-05-29-23-02-32](https://f.cloud.github.com/assets/216917/579409/00b5e690-c871-11e2-9b54-814e64911ce6.png)\n. Topcoat is a pure CSS framework. Sidetap has a Javascript dependency.\n\nOn Thu, May 30, 2013 at 12:17 PM, naveenprakash notifications@github.comwrote:\n\n> Hi,\n> \n> First of all I want to thank you for releasing topcoat.\n> \n> The component what I need most of the time and to see in the top coat is\n> side menu like path/ facebook most of the app I work on are either\n> enterprise or a site with lot of category so this menu fits well.\n> \n> I saw http://sidetap.it/ and liked it. There are few bugs in sidetap for\n> andriod.\n> \n> Is there any plan adding this component ??\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213\n> .\n\n## \n\nSimon Males\n. Reported in Issue #207 \n. Continuous Integration.\n\nOn Tue, May 14, 2013 at 9:19 AM, istrone notifications@github.com wrote:\n\n> May you tell me what is CI ? Is it Codeigniter ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/120#issuecomment-17851520\n> .\n\n## \n\nSimon Males\n. I can confirm it's an issue in FirefoxOS. Screenshots included.\n\n![2013-05-29-23-00-34](https://f.cloud.github.com/assets/216917/579407/fe7cfbc0-c870-11e2-82e9-6c04356369ad.png)\n![2013-05-29-23-01-56](https://f.cloud.github.com/assets/216917/579408/ff1b23ea-c870-11e2-922c-4ce9e83981e0.png)\n![2013-05-29-23-02-32](https://f.cloud.github.com/assets/216917/579409/00b5e690-c871-11e2-9b54-814e64911ce6.png)\n. Topcoat is a pure CSS framework. Sidetap has a Javascript dependency.\n\nOn Thu, May 30, 2013 at 12:17 PM, naveenprakash notifications@github.comwrote:\n\n> Hi,\n> \n> First of all I want to thank you for releasing topcoat.\n> \n> The component what I need most of the time and to see in the top coat is\n> side menu like path/ facebook most of the app I work on are either\n> enterprise or a site with lot of category so this menu fits well.\n> \n> I saw http://sidetap.it/ and liked it. There are few bugs in sidetap for\n> andriod.\n> \n> Is there any plan adding this component ??\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213\n> .\n\n## \n\nSimon Males\n. Reported in Issue #207 \n. ",
    "stevengill": "Thanks Kristofer! That makes sense.\n. Thanks Kristofer! That makes sense.\n. ",
    "ChristianWeyer": "But still it would make sense to have a responsive base - which adapts based on the device factor used in the native app shell.\n. Thanks guys. Media queries, FTW.\n. But still it would make sense to have a responsive base - which adapts based on the device factor used in the native app shell.\n. Thanks guys. Media queries, FTW.\n. ",
    "alexmorris": "Do it. Makes perfect sense \n\nSent from my iPhone\n\nOn 6 Mar 2013, at 22:10, Kristofer Joseph notifications@github.com wrote:\n\n> We should lower the priority of this issue for the time being. I have a proposed solution for now that will get us to 1.0 without needing to solve the bower registry issues.\n> \n> Being tracked here:\n> #135\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Do it. Makes perfect sense \n\nSent from my iPhone\n\nOn 6 Mar 2013, at 22:10, Kristofer Joseph notifications@github.com wrote:\n\n> We should lower the priority of this issue for the time being. I have a proposed solution for now that will get us to 1.0 without needing to solve the bower registry issues.\n> \n> Being tracked here:\n> #135\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "mcgraphix": "Yes. I just called grunt with no task arguments which is what the instructions say at https://github.com/topcoat/topcoat for building the CSS.\n\ngrunt-cli v0.1.7\ngrunt v0.4.1\nnode v0.10.1\n. Yes. I just called grunt with no task arguments which is what the instructions say at https://github.com/topcoat/topcoat for building the CSS.\n\ngrunt-cli v0.1.7\ngrunt v0.4.1\nnode v0.10.1\n. ",
    "ppcano": "I confirm this issue (Nexus 4, Android 4.2)\n. I confirm this issue (Nexus 4, Android 4.2)\n. ",
    "standup75": "Not sure why this is close, still need to remove text-rendering to make topcoat work with font-awesome in a webview on Nexus 7\n. Not sure why this is close, still need to remove text-rendering to make topcoat work with font-awesome in a webview on Nexus 7\n. ",
    "remotesynth": "I can confirm that the npm install successfully complete using 0.2.5. Thanks!\n. I can confirm that the npm install successfully complete using 0.2.5. Thanks!\n. ",
    "erichiggins": "Thanks @kristoferjoseph .\n\nI'd like to see the `README` of this repo updated to explain it's purpose as a wrapper/build system for the various pieces, and links added to those dependencies so developers don't need to parse `package.json` in order to track them down.\n. That sounds great. Thanks!\n. Thanks @kristoferjoseph .\n\nI'd like to see the `README` of this repo updated to explain it's purpose as a wrapper/build system for the various pieces, and links added to those dependencies so developers don't need to parse `package.json` in order to track them down.\n. That sounds great. Thanks!\n. ",
    "speckz": "+1 for this.\n. +1 for this.\n. ",
    "sur": "what's available in docs/styleguide is very limited. If a dev is actually planning to develop the real app using topcoat, it's going to be fairly time consuming to look into the topcoat's css code instead of documentation.\n\ntopcoat is certainly simple and great, but I guess as of now, only some basic UI elements have been covered by topcoat so far, it seems suitable for extremely small mobile apps. e.g. I couldn't find implementation of forms and form-elements like select etc which have been greatly covered by jqm... two are not comparable though.\n\nlooks like topcoat is going to evolve with time with more options and covering more elements.\n. yep, surely looking to do that... I've some ideas, will start spending some time over the weekends.\n\nThanks.\n. what's available in docs/styleguide is very limited. If a dev is actually planning to develop the real app using topcoat, it's going to be fairly time consuming to look into the topcoat's css code instead of documentation.\n\ntopcoat is certainly simple and great, but I guess as of now, only some basic UI elements have been covered by topcoat so far, it seems suitable for extremely small mobile apps. e.g. I couldn't find implementation of forms and form-elements like select etc which have been greatly covered by jqm... two are not comparable though.\n\nlooks like topcoat is going to evolve with time with more options and covering more elements.\n. yep, surely looking to do that... I've some ideas, will start spending some time over the weekends.\n\nThanks.\n. ",
    "padolsey": "Is it online yet? :cheeky_question:\n. Is it online yet? :cheeky_question:\n. ",
    "cknadler": "@brianleroux Done! ^_^\n. @brianleroux Done! ^_^\n. ",
    "jaymiejones86": "Oh Even Better! Looking forward to it, keep up the good work, loving it so far.\n. Oh Even Better! Looking forward to it, keep up the good work, loving it so far.\n. ",
    "creativeprogramming": "Topcoat enbraces the \"Just CSS\" philosophy. But i'm pretty sure the sliding movement detection is not available in CSS3 only and that an HTML5 `<input type=\"switchbutton\">` is not in the specs (at least now in 2013).\n\nI think some javascript is still needed for things like that. Hoping that topcoat team will add it when they will publish the mobile-switch repository.\n\nTopcoat is great, but please don't limit it being excessively fervent in this \"Just CSS\" philosophy: it's great to avoid unuseful javascript overhead, but if we are building a custom topcoat release with grunt and you need things like mobile-switch some extra .js can be accepted by the developer (if the fact that it adds some js is well documented)\n. Idea for the team: maybe something CSS3 only that supports multitouch \"without any extra js\" can be achieved if you base this topcoat input element on a binary **HTML5 range input**.  \n\nI mean something like: `<input type=\"range\" min=0 max=1 step=1 value=1/>` + some css attr() rules, and not on a `<input type=\"checkbox\" name=\"dark-switch\" id=\"slide\" checked=\"\">` but this will be not supported by old browsers\n. Topcoat enbraces the \"Just CSS\" philosophy. But i'm pretty sure the sliding movement detection is not available in CSS3 only and that an HTML5 `<input type=\"switchbutton\">` is not in the specs (at least now in 2013).\n\nI think some javascript is still needed for things like that. Hoping that topcoat team will add it when they will publish the mobile-switch repository.\n\nTopcoat is great, but please don't limit it being excessively fervent in this \"Just CSS\" philosophy: it's great to avoid unuseful javascript overhead, but if we are building a custom topcoat release with grunt and you need things like mobile-switch some extra .js can be accepted by the developer (if the fact that it adds some js is well documented)\n. Idea for the team: maybe something CSS3 only that supports multitouch \"without any extra js\" can be achieved if you base this topcoat input element on a binary **HTML5 range input**.  \n\nI mean something like: `<input type=\"range\" min=0 max=1 step=1 value=1/>` + some css attr() rules, and not on a `<input type=\"checkbox\" name=\"dark-switch\" id=\"slide\" checked=\"\">` but this will be not supported by old browsers\n. ",
    "tdurand": "Okay thanks !\n. Okay thanks !\n. ",
    "altryne": "Dunno how to vote, so +1, waaaay to small!\n. Dunno how to vote, so +1, waaaay to small!\n. ",
    "jefflembeck": "Done. Thank you! Looking forward to using the tests.\n. My bad, didn't build first.\n. I suppose somebody coming here for my case would be a bit rare (I had a link directly to the performance testing part), but it probably can't hurt if people are wondering the best way to go about doing all of this.\n. Done. Thank you! Looking forward to using the tests.\n. My bad, didn't build first.\n. I suppose somebody coming here for my case would be a bit rare (I had a link directly to the performance testing part), but it probably can't hurt if people are wondering the best way to go about doing all of this.\n. ",
    "sidneys": "Any progress on this? I'm currently deciding on using App-UI or Sidetap just for this :-(\n. Hi,\n\nI am looking to duplicate the \"Facebook Hamburger Menu\" using the\nnavigation bar from topcoat.\n\nFor a HTML-JS type implementation see http://sidetap.it/.\n\nThanks a lot!\n\nCheers\nSidney\n\nOn Monday, July 15, 2013, Andrei Oprea wrote:\n\n> I think this is possible with the components we have in this version.\n> Could\n> you give more details?\n> \n> On Monday, July 15, 2013, SidneyS wrote:\n> \n> > Any progress on this? I'm currently deciding on using App-UI or Sidetap\n> > just for this :-(\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/213#issuecomment-20946781>\n> > .\n> \n> ## \n> \n> Andrei Oprea\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20953397\n> .\n. Perfect, thats just what was need to get started. Will be using Topcoat in a big project.\n\nMany thanks\nSidney\n\nOn Jul 15, 2013, at 15:15 , Andrei Oprea notifications@github.com wrote:\n\n> Hi, @SidneyS . I made a quick demo http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Any progress on this? I'm currently deciding on using App-UI or Sidetap just for this :-(\n. Hi,\n\nI am looking to duplicate the \"Facebook Hamburger Menu\" using the\nnavigation bar from topcoat.\n\nFor a HTML-JS type implementation see http://sidetap.it/.\n\nThanks a lot!\n\nCheers\nSidney\n\nOn Monday, July 15, 2013, Andrei Oprea wrote:\n\n> I think this is possible with the components we have in this version.\n> Could\n> you give more details?\n> \n> On Monday, July 15, 2013, SidneyS wrote:\n> \n> > Any progress on this? I'm currently deciding on using App-UI or Sidetap\n> > just for this :-(\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/topcoat/topcoat/issues/213#issuecomment-20946781>\n> > .\n> \n> ## \n> \n> Andrei Oprea\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/213#issuecomment-20953397\n> .\n. Perfect, thats just what was need to get started. Will be using Topcoat in a big project.\n\nMany thanks\nSidney\n\nOn Jul 15, 2013, at 15:15 , Andrei Oprea notifications@github.com wrote:\n\n> Hi, @SidneyS . I made a quick demo http://codepen.io/piatra/pen/ofeDd I hope this help you out.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "Smart-Thinker": "@piatra: What part of the CSS is not TopCoat in the example on codepen (everything above Copyright 2012 Adobe Systems Inc.;?) - thanks for the example\n. @piatra: What part of the CSS is not TopCoat in the example on codepen (everything above Copyright 2012 Adobe Systems Inc.;?) - thanks for the example\n. ",
    "umaar": "`releaseBase/button.css` seems to load fine. There are no errors.\n![screen shot 2013-05-30 at 20 34 01](https://f.cloud.github.com/assets/381495/587182/1083cb1a-c960-11e2-93d2-5ebdd9d17d21.png)\n\nIn which case maybe `topcoat_button-base.test` is behaving as expected.\n. Thank you for your reply. Note, this test is from a fresh checkout of topcoat, the json file has not been modified from what `grunt telemetry` gave. But for reference, here are the contents of the file that was produced:\n\n```\n{\n    \"description\": \"Test\",\n    \"archive_data_file\": \"../data/topcoat_buttons.json\",\n    \"pages\": [\n        {\n            \"url\": \"file:///topcoat/topcoat_button-base.test.html\",\n            \"smoothness\": {\n                \"action\": \"scrolling_action\"\n            }\n        }\n    ]\n}\n```\n. `releaseBase/button.css` seems to load fine. There are no errors.\n![screen shot 2013-05-30 at 20 34 01](https://f.cloud.github.com/assets/381495/587182/1083cb1a-c960-11e2-93d2-5ebdd9d17d21.png)\n\nIn which case maybe `topcoat_button-base.test` is behaving as expected.\n. Thank you for your reply. Note, this test is from a fresh checkout of topcoat, the json file has not been modified from what `grunt telemetry` gave. But for reference, here are the contents of the file that was produced:\n\n```\n{\n    \"description\": \"Test\",\n    \"archive_data_file\": \"../data/topcoat_buttons.json\",\n    \"pages\": [\n        {\n            \"url\": \"file:///topcoat/topcoat_button-base.test.html\",\n            \"smoothness\": {\n                \"action\": \"scrolling_action\"\n            }\n        }\n    ]\n}\n```\n. ",
    "jiyoungchang": "now that a few major conferences are over, i'd like for us to see how topcoat is being used in the wild.\n. Per discussion during UX guild weekly yesterday, @nnnnic could you take a stab at adding examples to the usage guide for the 0.6 release?\n. Garth will ask Holly about using Topcoat components in her existing sample app. Adding Garth to this issue.\n. Kristofer to add description on the benchmark page.\n. now that a few major conferences are over, i'd like for us to see how topcoat is being used in the wild.\n. Per discussion during UX guild weekly yesterday, @nnnnic could you take a stab at adding examples to the usage guide for the 0.6 release?\n. Garth will ask Holly about using Topcoat components in her existing sample app. Adding Garth to this issue.\n. Kristofer to add description on the benchmark page.\n. ",
    "jorgepedret": "I had the exact same issue, I showed it to @kristoferjoseph at jsconf. As soon as I changed to v0.8.x, it worked perfectly.\n\nHaven't tried it using 0.9 though.\n. +1\n. I had the exact same issue, I showed it to @kristoferjoseph at jsconf. As soon as I changed to v0.8.x, it worked perfectly.\n\nHaven't tried it using 0.9 though.\n. +1\n. ",
    "nicovalencia": "Actually, it has to do with how `grunt-styleguide` is parsing template includes. They made a change that was intended to support backwards compatibility but has some issues with how Node is reading files.\n\nhttps://github.com/indieisaconcept/grunt-styleguide/blob/master/tasks/styleguide.js#L183\n\nI'm working on a patch now, which will probably just end in a pull request with a grunt-stylesheet version bump. Please hold.\n. ~~@kristoferjoseph I think I found what's causing the issue here, but I need to better understand how the dynamic iframes are dependent on the two included files. Once I understand this I can submit the relevant patch to grunt-styleguide. I'm **youngnico** on freenode, or you can gChat me **hello@nico.io**~~\n\nLooks like he has a fix pending. Built against it, and it seems to work alright w/ latest Node!\n\nThanks :+1: \n. Fixed in `grunt-styleguide` on 0.2.6 https://github.com/indieisaconcept/grunt-styleguide/commit/70e9a2e42f667631641c92a69eec999c5070b00c\n. Alternatively, we could just watch for `src/**/*.styl` changes and trigger `compile` which would still rebuild in the compile step. This seems to hit two birds with one stone, however the stylus build is really slow.\n. I'll need to put some thought into this, but that's exactly what I ended up doing. I created another watch task that ran the `docs` task when any of the theme or theme dep files were changed.\n\nI think the hardest part to wrap my head around right now is the proper workflow for creating/editing a theme. I start out with the topcoat base dark/light theme and make edits, but the ideal workflow here (for us anyways) would be to have the theme sources modularized a bit differently (I think - maybe I'm using them incorrectly). Typically, these theme and theme vars would be managed by a designer, and implementation / overrides would be managed by a developer after a topcoat build. How would a designer be able to easily version their edits, while still seeing live feedback in the built package? Do they fork the theme repo, and add it as a submodule in `src/style/`? I like the idea of pathing the themes by configuration, and pondering the best way to maintain package/modularization while still allowing easy version control.\n. I think the current setup is nice. The most important thing IMO is making it very obvious what composes a base \"reset\" and how to go about overriding variables at different levels. People understand this concept with CSS, but applying it here is slightly different. If the documentation is clear about what properties are available, I think more users will provide feedback on what they need that isn't already exposed.\n\nWhat do you have in mind for the visual tool? If designers could export attributes directly from PS/FW to attributes they can easily use in their theme creation tool, that would be the holy grail IMO. I'd be interested to hear your thoughts on theme creation's integration with telemetry, considering the high focus on performance.\n. Actually, it has to do with how `grunt-styleguide` is parsing template includes. They made a change that was intended to support backwards compatibility but has some issues with how Node is reading files.\n\nhttps://github.com/indieisaconcept/grunt-styleguide/blob/master/tasks/styleguide.js#L183\n\nI'm working on a patch now, which will probably just end in a pull request with a grunt-stylesheet version bump. Please hold.\n. ~~@kristoferjoseph I think I found what's causing the issue here, but I need to better understand how the dynamic iframes are dependent on the two included files. Once I understand this I can submit the relevant patch to grunt-styleguide. I'm **youngnico** on freenode, or you can gChat me **hello@nico.io**~~\n\nLooks like he has a fix pending. Built against it, and it seems to work alright w/ latest Node!\n\nThanks :+1: \n. Fixed in `grunt-styleguide` on 0.2.6 https://github.com/indieisaconcept/grunt-styleguide/commit/70e9a2e42f667631641c92a69eec999c5070b00c\n. Alternatively, we could just watch for `src/**/*.styl` changes and trigger `compile` which would still rebuild in the compile step. This seems to hit two birds with one stone, however the stylus build is really slow.\n. I'll need to put some thought into this, but that's exactly what I ended up doing. I created another watch task that ran the `docs` task when any of the theme or theme dep files were changed.\n\nI think the hardest part to wrap my head around right now is the proper workflow for creating/editing a theme. I start out with the topcoat base dark/light theme and make edits, but the ideal workflow here (for us anyways) would be to have the theme sources modularized a bit differently (I think - maybe I'm using them incorrectly). Typically, these theme and theme vars would be managed by a designer, and implementation / overrides would be managed by a developer after a topcoat build. How would a designer be able to easily version their edits, while still seeing live feedback in the built package? Do they fork the theme repo, and add it as a submodule in `src/style/`? I like the idea of pathing the themes by configuration, and pondering the best way to maintain package/modularization while still allowing easy version control.\n. I think the current setup is nice. The most important thing IMO is making it very obvious what composes a base \"reset\" and how to go about overriding variables at different levels. People understand this concept with CSS, but applying it here is slightly different. If the documentation is clear about what properties are available, I think more users will provide feedback on what they need that isn't already exposed.\n\nWhat do you have in mind for the visual tool? If designers could export attributes directly from PS/FW to attributes they can easily use in their theme creation tool, that would be the holy grail IMO. I'd be interested to hear your thoughts on theme creation's integration with telemetry, considering the high focus on performance.\n. ",
    "diegozhu": "U've done set up a blog ? Url ? \n. U've done set up a blog ? Url ? \n. ",
    "mikemaccana": "Ah bril. Haven't actually built anything with topcoat yet so will check it out when I do.\n. Ah bril. Haven't actually built anything with topcoat yet so will check it out when I do.\n. ",
    "ix-xerri": "@GarthDB I just downloaded the zip file in from topcoat.io and used the mobile-light css. It has no properties for me to create the well structure.\n. Ok no problem...was just checking :)\nThanks @GarthDB, UI kit looks great!\n. @GarthDB I just downloaded the zip file in from topcoat.io and used the mobile-light css. It has no properties for me to create the well structure.\n. Ok no problem...was just checking :)\nThanks @GarthDB, UI kit looks great!\n. ",
    "kruyvanna": "I got it. I need to get it in another repo.\nI wish the docs had told me this.\nhttps://github.com/topcoat/icons\n. Looks gorgeous! It would be great if i can use mobile light theme for my primary content and use mobile dark theme for TabBar.\n\nJust like your Issue #338 about Secondary UI Classes\n. I suggest we make the tabbar width 100%, and the tabbar-items auto fit tabbar's width.\nhttp://codepen.io/kruyvanna/pen/KGgDm\n. Awesome!! I like the idea separating layout and positioning from styling.\nGreat job!\n. +1\n. Is there any progress on this?\n. I want to use it in sliding menu where the menu behind is dark while the above page is light. Just as @kristoferjoseph  wrote.\n. @GarthDB : That's correct!\n. @GarthDB, thanks for the reference. can't wait for it.\n. Also this one?\nhttps://github.com/topcoat/range/blob/master/src/topcoat-range.styl#L41\n. @brianleroux : it's good for input component, but why button?\n. @GarthDB  brian is right. it's the focus!\n. @GarthDB : make sense!\n\nWhat is strange is that only Chrome desktop activate focus state when we do a mouse click.\nSafari and Firefox only do it when tap is pressed.\n. Duplicate.\n. Sorry I just realized I have filter on!\nClosing.\n. I got it. I need to get it in another repo.\nI wish the docs had told me this.\nhttps://github.com/topcoat/icons\n. Looks gorgeous! It would be great if i can use mobile light theme for my primary content and use mobile dark theme for TabBar.\n\nJust like your Issue #338 about Secondary UI Classes\n. I suggest we make the tabbar width 100%, and the tabbar-items auto fit tabbar's width.\nhttp://codepen.io/kruyvanna/pen/KGgDm\n. Awesome!! I like the idea separating layout and positioning from styling.\nGreat job!\n. +1\n. Is there any progress on this?\n. I want to use it in sliding menu where the menu behind is dark while the above page is light. Just as @kristoferjoseph  wrote.\n. @GarthDB : That's correct!\n. @GarthDB, thanks for the reference. can't wait for it.\n. Also this one?\nhttps://github.com/topcoat/range/blob/master/src/topcoat-range.styl#L41\n. @brianleroux : it's good for input component, but why button?\n. @GarthDB  brian is right. it's the focus!\n. @GarthDB : make sense!\n\nWhat is strange is that only Chrome desktop activate focus state when we do a mouse click.\nSafari and Firefox only do it when tap is pressed.\n. Duplicate.\n. Sorry I just realized I have filter on!\nClosing.\n. ",
    "remy": "Me: Link separately from homepage, but add visual icons to readme in the icons repo.\n. Me: Link separately from homepage, but add visual icons to readme in the icons repo.\n. ",
    "addyosmani": "> Link separately from homepage, but add visual icons to readme in the icons repo.\n\n:+1: \n. > Link separately from homepage, but add visual icons to readme in the icons repo.\n\n:+1: \n. ",
    "kombucha": "Hi,\n\nI'm using topcoat v0.5.1, and I've noticed this same issue in numerous places.\nFor example, in topcoat-desktop-dark.css:\n\n``` css\nbackground-color: var-background--focus;\n/* ... */\nfont: var-font--large;\n/* etc */\n```\n\nCheers\n. Hi,\n\nI'm using topcoat v0.5.1, and I've noticed this same issue in numerous places.\nFor example, in topcoat-desktop-dark.css:\n\n``` css\nbackground-color: var-background--focus;\n/* ... */\nfont: var-font--large;\n/* etc */\n```\n\nCheers\n. ",
    "simbas": "Hi,\n\nI found the following variable names in topcoat .css files:\n\n```\nvar-margin\nvar-overlay-padding\nvar-overlay-bg-color\nvar-bg-color\nvar-bg-box-shadow\nvar-background--focus\nvar-color-focus\nvar-font\nvar-font--large\n```\n\nRegards\n. Hi,\n\nI found the following variable names in topcoat .css files:\n\n```\nvar-margin\nvar-overlay-padding\nvar-overlay-bg-color\nvar-bg-color\nvar-bg-box-shadow\nvar-background--focus\nvar-color-focus\nvar-font\nvar-font--large\n```\n\nRegards\n. ",
    "Trott": "Guess this should really be filed on the topcat/navigation-bar repo instead. Closing here and will reopen there.\n. Uh, except that there doesn't appear to be an issue tracker on that repo. Reopening.\n. The trivial fix for this is now pull request 3 on the topcoat/navigation-bar repo.\n. @GarthDB If you enjoyed this issue report, brace yourself for the next one. Someone left an underscore out of a file name and THINGS ARE GOING TO GET WILD!!!!!\n. Guess this should really be filed on the topcat/navigation-bar repo instead. Closing here and will reopen there.\n. Uh, except that there doesn't appear to be an issue tracker on that repo. Reopening.\n. The trivial fix for this is now pull request 3 on the topcoat/navigation-bar repo.\n. @GarthDB If you enjoyed this issue report, brace yourself for the next one. Someone left an underscore out of a file name and THINGS ARE GOING TO GET WILD!!!!!\n. ",
    "bennybennet": "All connections from inside my company to the shiny world out there are going through a proxy, so i need to set the proxy to enable scripts, IDEs and stuff to connect to the internet. \nAs the team / author of the request module recommends to set the proxy data via options instead of reading it out of the system properties, i'd love to see that functionality in the grunt-topcoat-task. \n. What about mixing your both solutions? like:\n\n```\nvar proxy = process.env.HTTP_PROXY || process.en[...];\nproxy = proxy || options.proxy\n```\n. ```\ntopcoat: {\n  download: {\n    options: {\n      srcPath: \"src/\",\n      repos: \"<%= pkg.topcoat %>\",\n      proxy:  process.env.HTTPS_PROXY\n    }\n  }\n}\n```\n\nIs working like a charm with grunt-topcoat 0.0.8\n. I don't know if i should open a new issue for that but:\n\nFrom the old README.md:\n- Type `grunt` in the command line to build the css.\n- The results will be built into the release folder.\n\nbut since 0.5.0 it will be built into the `css` folder. IMHO I like the `release` folder better.\n. @kristoferjoseph probably yes. The new usage guide is awesome! :+1: (But is missing the overlay)\n. @piatra I know, but it is missing in the usage guide.\n. :+1: \n. hey @piatra \nafter some more time i found out, that i wasn't using overlay-base master. i used 0.1.0 instead. after switching to master i got (for mobile theme):\n\n```\n.topcoat-overlay {\n  padding: 0;\n  margin: 0;\n  font: inherit;\n  color: inherit;\n  background: transparent;\n  border: none;\n  cursor: default;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-background-clip: padding;\n  -moz-background-clip: padding;\n  background-clip: padding-box;\n  overflow: hidden;\n  position: absolute;\n  left: 50%;\n  top: 5%;\n  padding: 20px 10px;\n  -webkit-border-radius: 6px;\n  border-radius: 6px;\n  background-color: #e5e9e8;\n  border: 1px solid #a5a8a8;\n  width: 500px;\n  margin-left: -250px;\n  text-align: center;\n  z-index: 10;\n}\n```\n\nso some issues i mentioned are already fixed. sorry for that.\n. What about percentage in `var-overlay-padding = 20px 10px` too?\nI like `var-overlay-padding = 4% 4%` on mobile.\n. All connections from inside my company to the shiny world out there are going through a proxy, so i need to set the proxy to enable scripts, IDEs and stuff to connect to the internet. \nAs the team / author of the request module recommends to set the proxy data via options instead of reading it out of the system properties, i'd love to see that functionality in the grunt-topcoat-task. \n. What about mixing your both solutions? like:\n\n```\nvar proxy = process.env.HTTP_PROXY || process.en[...];\nproxy = proxy || options.proxy\n```\n. ```\ntopcoat: {\n  download: {\n    options: {\n      srcPath: \"src/\",\n      repos: \"<%= pkg.topcoat %>\",\n      proxy:  process.env.HTTPS_PROXY\n    }\n  }\n}\n```\n\nIs working like a charm with grunt-topcoat 0.0.8\n. I don't know if i should open a new issue for that but:\n\nFrom the old README.md:\n- Type `grunt` in the command line to build the css.\n- The results will be built into the release folder.\n\nbut since 0.5.0 it will be built into the `css` folder. IMHO I like the `release` folder better.\n. @kristoferjoseph probably yes. The new usage guide is awesome! :+1: (But is missing the overlay)\n. @piatra I know, but it is missing in the usage guide.\n. :+1: \n. hey @piatra \nafter some more time i found out, that i wasn't using overlay-base master. i used 0.1.0 instead. after switching to master i got (for mobile theme):\n\n```\n.topcoat-overlay {\n  padding: 0;\n  margin: 0;\n  font: inherit;\n  color: inherit;\n  background: transparent;\n  border: none;\n  cursor: default;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-background-clip: padding;\n  -moz-background-clip: padding;\n  background-clip: padding-box;\n  overflow: hidden;\n  position: absolute;\n  left: 50%;\n  top: 5%;\n  padding: 20px 10px;\n  -webkit-border-radius: 6px;\n  border-radius: 6px;\n  background-color: #e5e9e8;\n  border: 1px solid #a5a8a8;\n  width: 500px;\n  margin-left: -250px;\n  text-align: center;\n  z-index: 10;\n}\n```\n\nso some issues i mentioned are already fixed. sorry for that.\n. What about percentage in `var-overlay-padding = 20px 10px` too?\nI like `var-overlay-padding = 4% 4%` on mobile.\n. ",
    "schiller256": "I think, to expose the `proxy` variable is the better solution. With the explicit proxy declaration for every task it is easier to separate proxy from non-proxy hosts. \n. I think, to expose the `proxy` variable is the better solution. With the explicit proxy declaration for every task it is easier to separate proxy from non-proxy hosts. \n. ",
    "harsaharsa": "Ah, apologies for not looking that up first. :)\n\nHowever, that clones the whole repository \u2013 not just the `release/` folder. I guess there's different opinions, but my use case for bower and topcoat would be to use it in an actual mobile app project. There, I wouldn't want to include all the src and other files in my `awesomeApp/www/components/topcoat/` directory, but just the once I need in my project, i.e. the `release/` folder (and maybe necessary license files etc). If you look up e.g. the bower-angular repo, they include just the .js files \u2013 nothing extra. I can always `git clone` when I want to actually have access to the whole repo.\n. Ah, apologies for not looking that up first. :)\n\nHowever, that clones the whole repository \u2013 not just the `release/` folder. I guess there's different opinions, but my use case for bower and topcoat would be to use it in an actual mobile app project. There, I wouldn't want to include all the src and other files in my `awesomeApp/www/components/topcoat/` directory, but just the once I need in my project, i.e. the `release/` folder (and maybe necessary license files etc). If you look up e.g. the bower-angular repo, they include just the .js files \u2013 nothing extra. I can always `git clone` when I want to actually have access to the whole repo.\n. ",
    "emilkje": "I second that @brianleroux. Topcoat would be more appropriate outside the compiled webroot directory with simple yet powerful tools to generate customized, optimized and themed versions to your specified destination. This way developers could use their favorite workflow with sass/compass/less or similar as well. \n\nAnd because the topcoat repo is already utilizing the Grunt task manager, it is trivial to configure grunt-watch to automate this process. Just my two cents.\n. I second that @brianleroux. Topcoat would be more appropriate outside the compiled webroot directory with simple yet powerful tools to generate customized, optimized and themed versions to your specified destination. This way developers could use their favorite workflow with sass/compass/less or similar as well. \n\nAnd because the topcoat repo is already utilizing the Grunt task manager, it is trivial to configure grunt-watch to automate this process. Just my two cents.\n. ",
    "lholmquist": "I think I already did\n\nSent from my iPhone\n\nOn Jun 19, 2013, at 5:48 PM, Kristofer Joseph notifications@github.com wrote:\n\n> Good idea.\n> Fill out the CLA:\n> http://topcoat.io/dev/topcoat-cla.html\n> \n> I will merge this and add you to the contributors list.\n> \n> Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @kristoferjoseph ok,  i just signed the CLA,  i think ;)\n. I think I already did\n\nSent from my iPhone\n\nOn Jun 19, 2013, at 5:48 PM, Kristofer Joseph notifications@github.com wrote:\n\n> Good idea.\n> Fill out the CLA:\n> http://topcoat.io/dev/topcoat-cla.html\n> \n> I will merge this and add you to the contributors list.\n> \n> Thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. @kristoferjoseph ok,  i just signed the CLA,  i think ;)\n. ",
    "debianw": "The empty string works!, thanks\n. The empty string works!, thanks\n. ",
    "caycefischer": "I just discovered this on my own, and I am very sad :(\n. There's an issue in the Modernizr repo about this too\n\nhttps://github.com/Modernizr/Modernizr/issues/1028 \u2013 fairly recent\n\nAnd a less-than-ideal fix, but something that would work well enough, maybe: https://gist.github.com/indyplanets/1307515\n. I just discovered this on my own, and I am very sad :(\n. There's an issue in the Modernizr repo about this too\n\nhttps://github.com/Modernizr/Modernizr/issues/1028 \u2013 fairly recent\n\nAnd a less-than-ideal fix, but something that would work well enough, maybe: https://gist.github.com/indyplanets/1307515\n. ",
    "dschien": "This setting on the body element affects not only topcoat items. This is a big trap. I just spent a fair amount of time trying to fix my fontawesome icons, not knowing that the problem was elsewhere....\n. This setting on the body element affects not only topcoat items. This is a big trap. I just spent a fair amount of time trying to fix my fontawesome icons, not knowing that the problem was elsewhere....\n. ",
    "KraigWalker": "I know\u2026 as soon as I created the pull request I though \"hang on a minute there's a pattern I'm missing here\u2026\"\n\n/ doh\n\nI can look into it though.\n\nOn 27 Jun 2013, at 19:46, Garth Braithwaite notifications@github.com wrote:\n\n> Kraig,\n> \n> This is great, but the underlying problem is that it is being generated\n> from other files with the header, and they are being included. If we\n> accepted your pull request it would fix it for now, but it would ultimately\n> return if we don't fix the generator script.\n> \n> Thanks,\n> Garth\n> \n> On Thu, Jun 27, 2013 at 11:44 AM, Kraig Walker notifications@github.comwrote:\n> \n> > Addresses #283 https://github.com/topcoat/topcoat/issues/283\n> > \n> > Moved License statement to the beginning of each file. Removed the\n> > \n> > ## duplicate license statements scattered across the files.\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/KraigWalker/topcoat 283\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/topcoat/topcoat/pull/284\n> > Commit Summary\n> > - Remove duplicate license statements in files.\n> > \n> > File Changes\n> > - _M_ release/css/topcoat-desktop-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-0(111)\n> > - _M_ release/css/topcoat-desktop-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-1(110)\n> > - _M_ release/css/topcoat-mobile-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-2(110)\n> > - _M_ release/css/topcoat-mobile-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-3(113)\n> > \n> > Patch Links:\n> > - https://github.com/topcoat/topcoat/pull/284.patch\n> > - https://github.com/topcoat/topcoat/pull/284.diff\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n. I know\u2026 as soon as I created the pull request I though \"hang on a minute there's a pattern I'm missing here\u2026\"\n\n/ doh\n\nI can look into it though.\n\nOn 27 Jun 2013, at 19:46, Garth Braithwaite notifications@github.com wrote:\n\n> Kraig,\n> \n> This is great, but the underlying problem is that it is being generated\n> from other files with the header, and they are being included. If we\n> accepted your pull request it would fix it for now, but it would ultimately\n> return if we don't fix the generator script.\n> \n> Thanks,\n> Garth\n> \n> On Thu, Jun 27, 2013 at 11:44 AM, Kraig Walker notifications@github.comwrote:\n> \n> > Addresses #283 https://github.com/topcoat/topcoat/issues/283\n> > \n> > Moved License statement to the beginning of each file. Removed the\n> > \n> > ## duplicate license statements scattered across the files.\n> > \n> > You can merge this Pull Request by running\n> > \n> > git pull https://github.com/KraigWalker/topcoat 283\n> > \n> > Or view, comment on, or merge it at:\n> > \n> > https://github.com/topcoat/topcoat/pull/284\n> > Commit Summary\n> > - Remove duplicate license statements in files.\n> > \n> > File Changes\n> > - _M_ release/css/topcoat-desktop-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-0(111)\n> > - _M_ release/css/topcoat-desktop-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-1(110)\n> > - _M_ release/css/topcoat-mobile-dark.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-2(110)\n> > - _M_ release/css/topcoat-mobile-light.csshttps://github.com/topcoat/topcoat/pull/284/files#diff-3(113)\n> > \n> > Patch Links:\n> > - https://github.com/topcoat/topcoat/pull/284.patch\n> > - https://github.com/topcoat/topcoat/pull/284.diff\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub.\n. ",
    "jonjaques": "+1. Code examples are nearly unreadable on MacBook w/ Retina.\n. +1. Code examples are nearly unreadable on MacBook w/ Retina.\n. ",
    "shalinguyen": "+1 - improve color contrast in default themes as well\n. +1 - improve color contrast in default themes as well\n. ",
    "bobbyworld": "+1\n. +1\n. ",
    "red2678": "+1\n. +1\n. ",
    "0xsven": "Just wanted to tell you ;-) I am not so sure if I would even support shitty and not-so-much-used browsers..\n. is linking a local folder possible? instead of a github repository?\n. Ah thank you. No I am getting it.\n. I was kinda hoping to keep it updatable. Perhaps I need to use your solution...\n. I was thinking about how to integrate topcoat into our current development setup. We are not using github for instance. Not so sure on what is the best way..\n. Just wanted to tell you ;-) I am not so sure if I would even support shitty and not-so-much-used browsers..\n. is linking a local folder possible? instead of a github repository?\n. Ah thank you. No I am getting it.\n. I was kinda hoping to keep it updatable. Perhaps I need to use your solution...\n. I was thinking about how to integrate topcoat into our current development setup. We are not using github for instance. Not so sure on what is the best way..\n. ",
    "martinduparc": "Thanks!\n. Thanks!\n. ",
    "garybutton": "I agree. Any ideas when this will happen?\n. I agree. Any ideas when this will happen?\n. ",
    "dbuarque": "+1\n. +1\n. ",
    "nimbupani": "PLZ can we have this asap. I was totally confused when reading the readme on 'choosing a theme' and i didn't know where to choose from. \n. SWEEET. Thankyouuu\n\nOn Mon, Jan 27, 2014, at 01:14 PM, Garth Braithwaite wrote:\n\n  [1]@nimbupani we have one in the works - it will come out with the\n  next release.\n\n  [2]http://codepen.io/GarthDB/pen/lawjE\n\n  \u2014\n\nReply to this email directly or [3]view it on GitHub.\n[74513__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcwNjM5MDA3OCw\niZGF0YSI6eyJpZCI6MTM5NDIxOTl9fQ==--6afdc21264b61f8b6aa526df528109014ce3\nb1a2.gif]\n\nReferences\n1. https://github.com/nimbupani\n2. http://codepen.io/GarthDB/pen/lawjE\n3. https://github.com/topcoat/topcoat/issues/317#issuecomment-33423510\n. PLZ can we have this asap. I was totally confused when reading the readme on 'choosing a theme' and i didn't know where to choose from. \n. SWEEET. Thankyouuu\n\nOn Mon, Jan 27, 2014, at 01:14 PM, Garth Braithwaite wrote:\n\n  [1]@nimbupani we have one in the works - it will come out with the\n  next release.\n\n  [2]http://codepen.io/GarthDB/pen/lawjE\n\n  \u2014\n\nReply to this email directly or [3]view it on GitHub.\n[74513__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcwNjM5MDA3OCw\niZGF0YSI6eyJpZCI6MTM5NDIxOTl9fQ==--6afdc21264b61f8b6aa526df528109014ce3\nb1a2.gif]\n\nReferences\n1. https://github.com/nimbupani\n2. http://codepen.io/GarthDB/pen/lawjE\n3. https://github.com/topcoat/topcoat/issues/317#issuecomment-33423510\n. ",
    "grayghostvisuals": "Baller! :metal:\n. Baller! :metal:\n. ",
    "paulirish": "Published effeckt to NPM if it's helpful: https://npmjs.org/package/effeckt\n. Also, @piatra @kristoferjoseph I'm adding you two to the Effeckt.css repo. Feel free to add anyone else necessary.\n\nFor contributing policy. We've done major changes through PRs, but other than that, go wild. Truly wild. :dancer: \n. Excellent. That's something we've wanted to do with Effeckt on it's own. Ideally we'd run topcoat-server's benchmark infrastructure solo for Effeckt, but I'm happy to see it in topcoat side for now.\n. @piatra what you just described sounds ideal. Can't wait. \n. Published effeckt to NPM if it's helpful: https://npmjs.org/package/effeckt\n. Also, @piatra @kristoferjoseph I'm adding you two to the Effeckt.css repo. Feel free to add anyone else necessary.\n\nFor contributing policy. We've done major changes through PRs, but other than that, go wild. Truly wild. :dancer: \n. Excellent. That's something we've wanted to do with Effeckt on it's own. Ideally we'd run topcoat-server's benchmark infrastructure solo for Effeckt, but I'm happy to see it in topcoat side for now.\n. @piatra what you just described sounds ideal. Can't wait. \n. ",
    "jonschlinkert": "@piatra \n\n> Separate pages are better for benchmarking. \n\nWe could setup the [assemble task](https://github.com/h5bp/Effeckt.css/blob/gh-pages/Gruntfile.js#L75-L91) to generate the individual pages on the fly for benchmarking, would that help? I work on assemble, glad to assist. (forgive me if I misunderstood your comment completely...I just stumbled across this) if that is indeed what you want to accomplish, is there another issue to discuss?\n. @piatra do you know what you'll be using for benchmarking or what you'd like the generated pages to consist of? \n. @piatra very sorry for the late reply, and thanks for the additional detail. \n\nbased on your description it sounds like assemble is a good fit. I'll put a quick example together this weekend and link it up here and we can go from there. \n\nand just a heads up, my wife is due in the next couple of weeks so any day now I could be off changing diapers somewhere :-). so I'm pinging @doowb on this in case you need help with anything. Assemble is pretty easy to use but we've released a few features recently that we haven't even had a chance to document yet... \n. @piatra thank you! and sorry for the delay. please see this example whenever it's convenient: https://github.com/jonschlinkert/buttons\n\nThis is not a proposal for anything, the only goal I had here was to show how flexible assemble can be for building components, and to get feedback on whether or not this is in the right direction.  Obviously everything is static, but you are a better judge of what should or shouldn't be automated outside of Grunt. To that end, I incorporated a few different approaches for passing in data (JSON) so that you could decide which method is more useful for what you're doing (assemble allows use of YAML/JSON, so you can do '*_/_.{json,yml}' and it just works). I also created a few helpers to format HTML output.  hope this helps get some ideas going. I could have easily created 10 more examples for building button components alone (and probably will, since I that's how serious I take my role as a nerd).\n\nlet me know if you have any questions! \n. btw, as someone just reminded me, most of the example configs I did would probably be external to the Gruntfile in actual use - instead of cluttering up the Gruntfile with pages configs\n. @piatra nice! I have to say it was fun putting that together. I'm actually going to start adding some documentation to that project, it could be really instructive for new users. Let me know what else I can do to help out. \n\nI'm curious, would you consider generalizing/externalizing some of the benchmarking elements of the topcoat project and the task you're putting together so that it could be used on other projects?  If it's interesting to you and/or doesn't conflict with any goals you have for topcoat, I'd love to collaborate somehow.\n. @piatra \n\n> Separate pages are better for benchmarking. \n\nWe could setup the [assemble task](https://github.com/h5bp/Effeckt.css/blob/gh-pages/Gruntfile.js#L75-L91) to generate the individual pages on the fly for benchmarking, would that help? I work on assemble, glad to assist. (forgive me if I misunderstood your comment completely...I just stumbled across this) if that is indeed what you want to accomplish, is there another issue to discuss?\n. @piatra do you know what you'll be using for benchmarking or what you'd like the generated pages to consist of? \n. @piatra very sorry for the late reply, and thanks for the additional detail. \n\nbased on your description it sounds like assemble is a good fit. I'll put a quick example together this weekend and link it up here and we can go from there. \n\nand just a heads up, my wife is due in the next couple of weeks so any day now I could be off changing diapers somewhere :-). so I'm pinging @doowb on this in case you need help with anything. Assemble is pretty easy to use but we've released a few features recently that we haven't even had a chance to document yet... \n. @piatra thank you! and sorry for the delay. please see this example whenever it's convenient: https://github.com/jonschlinkert/buttons\n\nThis is not a proposal for anything, the only goal I had here was to show how flexible assemble can be for building components, and to get feedback on whether or not this is in the right direction.  Obviously everything is static, but you are a better judge of what should or shouldn't be automated outside of Grunt. To that end, I incorporated a few different approaches for passing in data (JSON) so that you could decide which method is more useful for what you're doing (assemble allows use of YAML/JSON, so you can do '*_/_.{json,yml}' and it just works). I also created a few helpers to format HTML output.  hope this helps get some ideas going. I could have easily created 10 more examples for building button components alone (and probably will, since I that's how serious I take my role as a nerd).\n\nlet me know if you have any questions! \n. btw, as someone just reminded me, most of the example configs I did would probably be external to the Gruntfile in actual use - instead of cluttering up the Gruntfile with pages configs\n. @piatra nice! I have to say it was fun putting that together. I'm actually going to start adding some documentation to that project, it could be really instructive for new users. Let me know what else I can do to help out. \n\nI'm curious, would you consider generalizing/externalizing some of the benchmarking elements of the topcoat project and the task you're putting together so that it could be used on other projects?  If it's interesting to you and/or doesn't conflict with any goals you have for topcoat, I'd love to collaborate somehow.\n. ",
    "numediaweb": "Thanks.\nAny updates?\n. Thanks.\nAny updates?\n. ",
    "cgmartin": "Hi @piatra thanks for the tips, they were helpful in getting me started (I didn't know about `npm link`, pretty handy). \nI ran into one hiccup, the Topcoat repo uses `./src/theme/theme-0.4.0/` instead of the linked theme module. Changed the topcoat options themePath in the Gruntfile.js to the theme module and was good to go.\n\nHere's a diff of the variable changes I made to fix the missing ones:\nhttps://github.com/cgmartin/theme/commit/2cfb36b2f6b17efe0ba961fe4aab7481a3127997\n\nMost of them look very similar to other vars in the variable files. Not sure if they are a problem with the theme variable files or how they're named in each the component styles. Hope the diff helps narrow things down further.\n\nCheers\n. Hi @piatra thanks for the tips, they were helpful in getting me started (I didn't know about `npm link`, pretty handy). \nI ran into one hiccup, the Topcoat repo uses `./src/theme/theme-0.4.0/` instead of the linked theme module. Changed the topcoat options themePath in the Gruntfile.js to the theme module and was good to go.\n\nHere's a diff of the variable changes I made to fix the missing ones:\nhttps://github.com/cgmartin/theme/commit/2cfb36b2f6b17efe0ba961fe4aab7481a3127997\n\nMost of them look very similar to other vars in the variable files. Not sure if they are a problem with the theme variable files or how they're named in each the component styles. Hope the diff helps narrow things down further.\n\nCheers\n. ",
    "axemclion": "Still not able to copy the CSS files to the correct directory. Closing this and will create a new request\n. Changing this still does not copy over the fonts - https://github.com/topcoat/topcoat/pull/344/files\n. What about expand and cwd for CSS ? Does the CSS run for you ? \n\nAlso @piatra, did not understand your comment on twitter  - https://twitter.com/ndreio/status/367541539498893312\n. Still not working - I think this is still an error - https://github.com/topcoat/topcoat/commit/4ff96046052b68fc35a70d9e07f685cc88581a3f#commitcomment-3872156\n. Let me know if there is any way I can help to submit/test results. Are you guys working in a dev branch that I can clone and contribute to ? \n. Format of data that will be submitted to the server - https://gist.github.com/kristoferjoseph/6999228\n. Closing this in favor of the other pull request\n. @kristoferjoseph We need a way to get the data to the server. Is there a way I can set up a sample server to see the kind of data I can send. \n\nAlso on a bigger question, this does not work on mobile devices yet. I am working on it, but looks like mobile devices will not work on Saucelabs. Is that acceptable ? \n. Here is how it works today - \n1. The node script launches the browser on saucelabs. \n2. For Chrome, the browser is launched with an extension. \n3. This extension is the one that records tracing and timeline data. \n\nFor Android, we cannot install extensions. The way Chromium telemetry works on Android is that it does not use the extension, but connects to the Chrome browser with the remote debugging protocol. In case of Saucelabs, we would need a way to know the IP of the virtual browser to know where the browser is running. Once if we know the IP and the port of Android can we connect to it using remote debugging protocol and get this data.\n\nWe should probably ask how to connect to the Android browser remotely. \n. I am working on the part of getting to connect to the android phone using selenium and Android driver. Should have something by the end of this week. \n. Closing this as the commits seem to be messed up. https://github.com/topcoat/topcoat/pull/487\n. +1\n. Still not able to copy the CSS files to the correct directory. Closing this and will create a new request\n. Changing this still does not copy over the fonts - https://github.com/topcoat/topcoat/pull/344/files\n. What about expand and cwd for CSS ? Does the CSS run for you ? \n\nAlso @piatra, did not understand your comment on twitter  - https://twitter.com/ndreio/status/367541539498893312\n. Still not working - I think this is still an error - https://github.com/topcoat/topcoat/commit/4ff96046052b68fc35a70d9e07f685cc88581a3f#commitcomment-3872156\n. Let me know if there is any way I can help to submit/test results. Are you guys working in a dev branch that I can clone and contribute to ? \n. Format of data that will be submitted to the server - https://gist.github.com/kristoferjoseph/6999228\n. Closing this in favor of the other pull request\n. @kristoferjoseph We need a way to get the data to the server. Is there a way I can set up a sample server to see the kind of data I can send. \n\nAlso on a bigger question, this does not work on mobile devices yet. I am working on it, but looks like mobile devices will not work on Saucelabs. Is that acceptable ? \n. Here is how it works today - \n1. The node script launches the browser on saucelabs. \n2. For Chrome, the browser is launched with an extension. \n3. This extension is the one that records tracing and timeline data. \n\nFor Android, we cannot install extensions. The way Chromium telemetry works on Android is that it does not use the extension, but connects to the Chrome browser with the remote debugging protocol. In case of Saucelabs, we would need a way to know the IP of the virtual browser to know where the browser is running. Once if we know the IP and the port of Android can we connect to it using remote debugging protocol and get this data.\n\nWe should probably ask how to connect to the Android browser remotely. \n. I am working on the part of getting to connect to the android phone using selenium and Android driver. Should have something by the end of this week. \n. Closing this as the commits seem to be messed up. https://github.com/topcoat/topcoat/pull/487\n. +1\n. ",
    "bittersweetryan": "Thanks for the feedback, sorry for the confusion.  I'll update .style file instead, any suggestions on how to accomplish the preload with the modularized approach?\n. @piatra @GarthDB I've updated the theme and search input .styl files, I'll post the commits here so you can take a look before I submit another PR. \n\nSearch input:\n[https://github.com/bittersweetryan/search-input/commit/ddc11c1ac95c540fd8f3292f50db9dd22c9ac5c3](https://github.com/bittersweetryan/search-input/commit/ddc11c1ac95c540fd8f3292f50db9dd22c9ac5c3)\n\nTheme:\n[https://github.com/bittersweetryan/theme/commit/5c94d8bec6563b9f0142a5363e0a7009fb20e240](https://github.com/bittersweetryan/theme/commit/5c94d8bec6563b9f0142a5363e0a7009fb20e240)\n\nThese doesn't address pre-loading however, do you have a preferred way to handle that?  \n. Done and done :)\n. Thanks for the feedback, sorry for the confusion.  I'll update .style file instead, any suggestions on how to accomplish the preload with the modularized approach?\n. @piatra @GarthDB I've updated the theme and search input .styl files, I'll post the commits here so you can take a look before I submit another PR. \n\nSearch input:\n[https://github.com/bittersweetryan/search-input/commit/ddc11c1ac95c540fd8f3292f50db9dd22c9ac5c3](https://github.com/bittersweetryan/search-input/commit/ddc11c1ac95c540fd8f3292f50db9dd22c9ac5c3)\n\nTheme:\n[https://github.com/bittersweetryan/theme/commit/5c94d8bec6563b9f0142a5363e0a7009fb20e240](https://github.com/bittersweetryan/theme/commit/5c94d8bec6563b9f0142a5363e0a7009fb20e240)\n\nThese doesn't address pre-loading however, do you have a preferred way to handle that?  \n. Done and done :)\n. ",
    "kodypeterson": "Does not hurt to have it on CDN JS. Took the time tonight to add 0.6 - https://github.com/cdnjs/cdnjs/pull/1767\n\nPlan on putting up the previous versions later.\n\nThis will at least be a good start until we can make the \"dream\" scenario possible :+1: \n. Does not hurt to have it on CDN JS. Took the time tonight to add 0.6 - https://github.com/cdnjs/cdnjs/pull/1767\n\nPlan on putting up the previous versions later.\n\nThis will at least be a good start until we can make the \"dream\" scenario possible :+1: \n. ",
    "thomasdavis": "I have just merged @headwebmonkey request onto cdnjs. Good work!\n. I have just merged @headwebmonkey request onto cdnjs. Good work!\n. ",
    "cfjedimaster": "I think the docs are also wrong for large search/disabled. It shows this\n\n```\ninput type=\"search\"value=\"\" placeholder=\"search\" class=\"topcoat-search-input--large .is-disabled\">\n```\n\nBut I believe you want is-disabled, not .is-disabled\n. Done.\n. I think the docs are also wrong for large search/disabled. It shows this\n\n```\ninput type=\"search\"value=\"\" placeholder=\"search\" class=\"topcoat-search-input--large .is-disabled\">\n```\n\nBut I believe you want is-disabled, not .is-disabled\n. Done.\n. ",
    "doman412": "I understand about the icons not being packaged, but the css in the snippets on that page you linked aren't in the topcoat-mobile-dark.css that gets downloaded when you click the download link on the homepage. Maybe I am mistaken in that I thought they should have been. I see now my issue post was poorly worded; I wasn't looking for the images, but the css in those snippets.\n. I understand about the icons not being packaged, but the css in the snippets on that page you linked aren't in the topcoat-mobile-dark.css that gets downloaded when you click the download link on the homepage. Maybe I am mistaken in that I thought they should have been. I see now my issue post was poorly worded; I wasn't looking for the images, but the css in those snippets.\n. ",
    "jribeiro": "I just cloned this repo, ran npm install and I'm facing the same issue. I'm on master.\n. I just cloned this repo, ran npm install and I'm facing the same issue. I'm on master.\n. ",
    "jdlich": "Just trying to download it for now, check it out: https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css\n. Still feels like there's some other repetition going on. Compare [L108](https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css#L108) with [L513](https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css#L513)\n. Just trying to download it for now, check it out: https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css\n. Still feels like there's some other repetition going on. Compare [L108](https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css#L108) with [L513](https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-light.css#L513)\n. ",
    "fabricematrat": "Great !\nLet me know if I can redo some parts so it can be easily integrated.\n\nOn Mon, Sep 16, 2013 at 7:33 PM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> [image: 2013-09-16 10-32-20]https://f.cloud.github.com/assets/125516/1151134/f0fe6e8a-1ef5-11e3-8c61-cbb7ae1d0da6.png\n> \n> Looks really good. We'll need to do some refactoring to get it in the\n> build process we have in place, but this is great.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/397#issuecomment-24528506\n> .\n\n## \n\nBest regards,\n\nhttp://rivieragug.org/\nhttp://3musket33rs.github.com/\n. I updated the readme, package.json\nthe 3 others (fork, npm, published)  is for you I suppose.\nThe last one is always great !!!\n\nPS: I will look at the refactor for continuous learning, as I say there is always for improvement.\nLooking forward to my next pull request.\n. In a multi player game http://kts.herokuapp.com/ (heroku passivate the app so you might try 1 minute after if it fails and 2 different browsers to play). This is a game to teach programming to kids written in Groovy and Scala DSL.\n. Great !\nLet me know if I can redo some parts so it can be easily integrated.\n\nOn Mon, Sep 16, 2013 at 7:33 PM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> [image: 2013-09-16 10-32-20]https://f.cloud.github.com/assets/125516/1151134/f0fe6e8a-1ef5-11e3-8c61-cbb7ae1d0da6.png\n> \n> Looks really good. We'll need to do some refactoring to get it in the\n> build process we have in place, but this is great.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/pull/397#issuecomment-24528506\n> .\n\n## \n\nBest regards,\n\nhttp://rivieragug.org/\nhttp://3musket33rs.github.com/\n. I updated the readme, package.json\nthe 3 others (fork, npm, published)  is for you I suppose.\nThe last one is always great !!!\n\nPS: I will look at the refactor for continuous learning, as I say there is always for improvement.\nLooking forward to my next pull request.\n. In a multi player game http://kts.herokuapp.com/ (heroku passivate the app so you might try 1 minute after if it fails and 2 different browsers to play). This is a game to teach programming to kids written in Groovy and Scala DSL.\n. ",
    "overra": "Yeah, the only browser it'd have to fallback for is <IE9\n. Yeah, the only browser it'd have to fallback for is <IE9\n. ",
    "m-misseri": "Hi @GarthDB take a look here: http://cl.ly/image/032B0K1n0a09\n\nmaybe there is a bug in this modality. \n. FF 23.0.1, but also on mobile android 4.2/iPhone iOS 6\n. The problem is displayed if the content on the right it's not enough:\n\nI have removed almost all the content on the right with Firebug and here we are: \n\nThis is the topcoat homepage: http://cl.ly/image/1j2f3f2J3c2C and mobile: http://cl.ly/image/3U2F2F0V3s2W\n. Ok thanks, I'll try with the code on the last link and I'll let you know.\n. Hi @GarthDB take a look here: http://cl.ly/image/032B0K1n0a09\n\nmaybe there is a bug in this modality. \n. FF 23.0.1, but also on mobile android 4.2/iPhone iOS 6\n. The problem is displayed if the content on the right it's not enough:\n\nI have removed almost all the content on the right with Firebug and here we are: \n\nThis is the topcoat homepage: http://cl.ly/image/1j2f3f2J3c2C and mobile: http://cl.ly/image/3U2F2F0V3s2W\n. Ok thanks, I'll try with the code on the last link and I'll let you know.\n. ",
    "DennisJohnsen": "Sweet! :+1: \n. Sweet! :+1: \n. ",
    "kof": "finally explained :)\n\n#450\n. thnanks\n. Can you guys please generate the fonts in the /topcoat/icons repo and push the repository again to cdnjs?\nThanks!\n. Sorry, by font I mean  all the font formats we need to support different engines (woff, ttf) ... in the repo are only svgs, right?\n. thanks!\n. There are still only svgs, what I asked for is 1 ttf, 1 otf and one woff file generated from svgs which contains all the icons. Also a css file which puts the char into span would be nice. I mean something similar to bootstraps glyphicons http://getbootstrap.com/components/#glyphicons-glyphs \n. Thanks for the link, I know that I can :) its just about one default font file containing all the icons, for the case optimization is not required.\n. @kristoferjoseph again, there are no ttf/otf/woff files which include all the icons in one set, to be included directly in the document.\n. Hmm probably an issue with standard mac fonts app, I opened it there and it shows  me alphabet and number chars ?\n. Same in finder preview\n. Lol, the reason I was asking for fonts on cdn was actually that I didn't wanted to do this optimization step (generating font with icons I use), I just wanted to include all the icons from cdn.\n. In one font file\n. @kristoferjoseph sorry for driving you crazy, just got to understand how icomatic works, this explains why font programs just show alphabet and numbers instead of icons :) \n\nThe way it works is great, much better than bootstrap icons, thank you!\n. There is a \"watch\" button in the bottom :) \n. https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L169\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L593\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L1048\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L1573\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2595\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2620\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2909\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L3231\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L3548\n. everything width or font-size etc in px .... but its actually a separate issue, I care right now about the bug with input fields ...\n. Its difficult to compare, for this you would need a worst case scenario + an old device ....\n. I mean animating lots of elements with shadows ....\n. I can't provide an easy reproducible snippet, but here is the computed css:\n\n.topcoat-radio-button\n-webkit-box-shadow: none;\n-webkit-font-smoothing: antialiased;\n-webkit-user-select: none;\nbox-shadow: none;\ncolor: rgb(198, 200, 200);\ncursor: default;\ndisplay: inline-block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: 0.800000011920929px;\nline-height: 30px;\nposition: relative;\ntext-shadow: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 71px;\n\ninput\n\n-webkit-appearance: radio;\n-webkit-box-shadow: none;\n-webkit-font-smoothing: auto;\n-webkit-rtl-ordering: logical;\n-webkit-user-select: text;\n-webkit-writing-mode: horizontal-tb;\nbackground-color: rgba(0, 0, 0, 0);\nborder-bottom-color: rgb(0, 0, 0);\nborder-bottom-style: none;\nborder-bottom-width: 0px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgb(0, 0, 0);\nborder-left-style: none;\nborder-left-width: 0px;\nborder-right-color: rgb(0, 0, 0);\nborder-right-style: none;\nborder-right-width: 0px;\nborder-top-color: rgb(0, 0, 0);\nborder-top-style: none;\nborder-top-width: 0px;\nbox-shadow: none;\nbox-sizing: border-box;\ncolor: rgb(0, 0, 0);\ncursor: auto;\ndisplay: block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: normal;\nline-height: normal;\nmargin-bottom: -30px;\nmargin-left: 0px;\nmargin-right: -30px;\nmargin-top: 0px;\nopacity: 0.0010000000474974513;\noutline-color: rgb(0, 0, 0);\noutline-style: none;\noutline-width: 0px;\noverflow-x: hidden;\noverflow-y: hidden;\npadding-bottom: 0px;\npadding-left: 0px;\npadding-right: 0px;\npadding-top: 0px;\nposition: absolute;\ntext-align: start;\ntext-indent: 0px;\ntext-shadow: none;\ntext-transform: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 30px;\nword-spacing: 0px;\nwriting-mode: lr-tb;\nz-index: 1;\n\ncheckmark\n\n-webkit-background-clip: padding-box;\n-webkit-box-shadow: none;\n-webkit-font-smoothing: antialiased;\n-webkit-user-select: none;\nbackground-clip: padding-box;\nbox-shadow: none;\nbox-sizing: border-box;\ncolor: rgb(198, 200, 200);\ncursor: default;\ndisplay: inline-block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: 0.800000011920929px;\nline-height: 30px;\nposition: relative;\ntext-shadow: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 30px;\n\ncheckmark:before\n\n-webkit-background-clip: border-box;\n-webkit-background-origin: padding-box;\n-webkit-background-size: auto;\n-webkit-box-shadow: rgb(115, 115, 115) 0px 1px 0px 0px inset;\nbackground-attachment: scroll;\nbackground-clip: border-box;\nbackground-color: rgb(89, 91, 91);\nbackground-image: none;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-bottom-color: rgb(51, 52, 52);\nborder-bottom-left-radius: 100%;\nborder-bottom-right-radius: 100%;\nborder-bottom-style: solid;\nborder-bottom-width: 1px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgb(51, 52, 52);\nborder-left-style: solid;\nborder-left-width: 1px;\nborder-right-color: rgb(51, 52, 52);\nborder-right-style: solid;\nborder-right-width: 1px;\nborder-top-color: rgb(51, 52, 52);\nborder-top-left-radius: 100%;\nborder-top-right-radius: 100%;\nborder-top-style: solid;\nborder-top-width: 1px;\nbox-shadow: rgb(115, 115, 115) 0px 1px 0px 0px inset;\nbox-sizing: border-box;\ndisplay: block;\nheight: 30px;\nposition: absolute;\nwidth: 30px;\n\ncheckmark:after\n\n-webkit-background-clip: border-box;\n-webkit-background-origin: padding-box;\n-webkit-background-size: auto;\n-webkit-box-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px 0px;\n-webkit-transform: none;\nbackground-attachment: scroll;\nbackground-clip: border-box;\nbackground-color: rgb(198, 200, 200);\nbackground-image: none;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-bottom-color: rgba(0, 0, 0, 0.0470588);\nborder-bottom-left-radius: 100%;\nborder-bottom-right-radius: 100%;\nborder-bottom-style: solid;\nborder-bottom-width: 1px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgba(0, 0, 0, 0.0470588);\nborder-left-style: solid;\nborder-left-width: 1px;\nborder-right-color: rgba(0, 0, 0, 0.0470588);\nborder-right-style: solid;\nborder-right-width: 1px;\nborder-top-color: rgba(0, 0, 0, 0.0470588);\nborder-top-left-radius: 100%;\nborder-top-right-radius: 100%;\nborder-top-style: solid;\nborder-top-width: 1px;\nbox-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px 0px;\ndisplay: block;\nheight: 14px;\nleft: 7px;\nopacity: 0;\nposition: absolute;\ntop: 7px;\nwidth: 14px;\n. My project is online now, here are the steps to reproduce:\n1. go to http://updeo.com/app f.e. in latest chrome \n2. start demo\n3. go to settings in the menu\n4. open debugger, go to the radio boxes\n5. remove my fix z-index: 2 from the the :after and :before elements\n6. click on radio button cycle (not on lable)\n. Its sounds like a different philosophy than the original css one about inheritance from parents etc.\n. Also the only issue you might get with em is when some parent container has different font size than you expect. This shouldn't be hard to find/fix. \n\nIts a kind of making component more robust in size by sacrificing flexibility.\n. Which is also kind of not web/css philosophy.\n. probably there is a way to make it configurable. Using em for sizes, but setting font-size on every component explicitly using variable. This way 1. every component has robust size, 2. one can adjust size by just setting font-size on the component container, or even change the variable font-size value to \"inherit\"\n. @GarthDB thats what @piatra said. The question is if we can do it play nicely for both cases. Making  size adjustment for 1 component just 1 single definition of font-size.\n. thanks.\n. http://www.nczonline.net/blog/2012/07/05/ios-has-a-hover-problem/\n\nhttp://mir.aculo.us/2013/01/26/why-and-how-to-not-use-hover-styles-on-touch-devices/\n. Also :active seems to have the 300ms delay in android chrome ... looks like to make it really good, we need to use custom classes and add them from javascript on touchstart\n. topcoat could use .active .hover etc. and let user add this classes using any lib or provide a separate optional one for this.\n. fact is pseudo classes on mobile devices are broken and topcoat uses them.\n. difficult ... topcoat first goal is mobile, but it isn't ready to make it right ...\n. idea: add .active, .hover selectors everywhere where pseudo selectors used ... user can then optionally ensure this classes are set on the elements.\n. :+1: \n. finally explained :)\n\n#450\n. thnanks\n. Can you guys please generate the fonts in the /topcoat/icons repo and push the repository again to cdnjs?\nThanks!\n. Sorry, by font I mean  all the font formats we need to support different engines (woff, ttf) ... in the repo are only svgs, right?\n. thanks!\n. There are still only svgs, what I asked for is 1 ttf, 1 otf and one woff file generated from svgs which contains all the icons. Also a css file which puts the char into span would be nice. I mean something similar to bootstraps glyphicons http://getbootstrap.com/components/#glyphicons-glyphs \n. Thanks for the link, I know that I can :) its just about one default font file containing all the icons, for the case optimization is not required.\n. @kristoferjoseph again, there are no ttf/otf/woff files which include all the icons in one set, to be included directly in the document.\n. Hmm probably an issue with standard mac fonts app, I opened it there and it shows  me alphabet and number chars ?\n. Same in finder preview\n. Lol, the reason I was asking for fonts on cdn was actually that I didn't wanted to do this optimization step (generating font with icons I use), I just wanted to include all the icons from cdn.\n. In one font file\n. @kristoferjoseph sorry for driving you crazy, just got to understand how icomatic works, this explains why font programs just show alphabet and numbers instead of icons :) \n\nThe way it works is great, much better than bootstrap icons, thank you!\n. There is a \"watch\" button in the bottom :) \n. https://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L169\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L593\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L1048\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L1573\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2595\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2620\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L2909\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L3231\n\nhttps://github.com/topcoat/topcoat/blob/master/css/topcoat-mobile-dark.css#L3548\n. everything width or font-size etc in px .... but its actually a separate issue, I care right now about the bug with input fields ...\n. Its difficult to compare, for this you would need a worst case scenario + an old device ....\n. I mean animating lots of elements with shadows ....\n. I can't provide an easy reproducible snippet, but here is the computed css:\n\n.topcoat-radio-button\n-webkit-box-shadow: none;\n-webkit-font-smoothing: antialiased;\n-webkit-user-select: none;\nbox-shadow: none;\ncolor: rgb(198, 200, 200);\ncursor: default;\ndisplay: inline-block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: 0.800000011920929px;\nline-height: 30px;\nposition: relative;\ntext-shadow: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 71px;\n\ninput\n\n-webkit-appearance: radio;\n-webkit-box-shadow: none;\n-webkit-font-smoothing: auto;\n-webkit-rtl-ordering: logical;\n-webkit-user-select: text;\n-webkit-writing-mode: horizontal-tb;\nbackground-color: rgba(0, 0, 0, 0);\nborder-bottom-color: rgb(0, 0, 0);\nborder-bottom-style: none;\nborder-bottom-width: 0px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgb(0, 0, 0);\nborder-left-style: none;\nborder-left-width: 0px;\nborder-right-color: rgb(0, 0, 0);\nborder-right-style: none;\nborder-right-width: 0px;\nborder-top-color: rgb(0, 0, 0);\nborder-top-style: none;\nborder-top-width: 0px;\nbox-shadow: none;\nbox-sizing: border-box;\ncolor: rgb(0, 0, 0);\ncursor: auto;\ndisplay: block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: normal;\nline-height: normal;\nmargin-bottom: -30px;\nmargin-left: 0px;\nmargin-right: -30px;\nmargin-top: 0px;\nopacity: 0.0010000000474974513;\noutline-color: rgb(0, 0, 0);\noutline-style: none;\noutline-width: 0px;\noverflow-x: hidden;\noverflow-y: hidden;\npadding-bottom: 0px;\npadding-left: 0px;\npadding-right: 0px;\npadding-top: 0px;\nposition: absolute;\ntext-align: start;\ntext-indent: 0px;\ntext-shadow: none;\ntext-transform: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 30px;\nword-spacing: 0px;\nwriting-mode: lr-tb;\nz-index: 1;\n\ncheckmark\n\n-webkit-background-clip: padding-box;\n-webkit-box-shadow: none;\n-webkit-font-smoothing: antialiased;\n-webkit-user-select: none;\nbackground-clip: padding-box;\nbox-shadow: none;\nbox-sizing: border-box;\ncolor: rgb(198, 200, 200);\ncursor: default;\ndisplay: inline-block;\nfont-family: Raleway, helvetica, arial, sans-serif;\nfont-size: 16px;\nfont-style: normal;\nfont-variant: normal;\nfont-weight: normal;\nheight: 30px;\nletter-spacing: 0.800000011920929px;\nline-height: 30px;\nposition: relative;\ntext-shadow: none;\nvertical-align: top;\nvisibility: visible;\nwidth: 30px;\n\ncheckmark:before\n\n-webkit-background-clip: border-box;\n-webkit-background-origin: padding-box;\n-webkit-background-size: auto;\n-webkit-box-shadow: rgb(115, 115, 115) 0px 1px 0px 0px inset;\nbackground-attachment: scroll;\nbackground-clip: border-box;\nbackground-color: rgb(89, 91, 91);\nbackground-image: none;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-bottom-color: rgb(51, 52, 52);\nborder-bottom-left-radius: 100%;\nborder-bottom-right-radius: 100%;\nborder-bottom-style: solid;\nborder-bottom-width: 1px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgb(51, 52, 52);\nborder-left-style: solid;\nborder-left-width: 1px;\nborder-right-color: rgb(51, 52, 52);\nborder-right-style: solid;\nborder-right-width: 1px;\nborder-top-color: rgb(51, 52, 52);\nborder-top-left-radius: 100%;\nborder-top-right-radius: 100%;\nborder-top-style: solid;\nborder-top-width: 1px;\nbox-shadow: rgb(115, 115, 115) 0px 1px 0px 0px inset;\nbox-sizing: border-box;\ndisplay: block;\nheight: 30px;\nposition: absolute;\nwidth: 30px;\n\ncheckmark:after\n\n-webkit-background-clip: border-box;\n-webkit-background-origin: padding-box;\n-webkit-background-size: auto;\n-webkit-box-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px 0px;\n-webkit-transform: none;\nbackground-attachment: scroll;\nbackground-clip: border-box;\nbackground-color: rgb(198, 200, 200);\nbackground-image: none;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-bottom-color: rgba(0, 0, 0, 0.0470588);\nborder-bottom-left-radius: 100%;\nborder-bottom-right-radius: 100%;\nborder-bottom-style: solid;\nborder-bottom-width: 1px;\nborder-image-outset: 0px;\nborder-image-repeat: stretch;\nborder-image-slice: 100%;\nborder-image-source: none;\nborder-image-width: 1;\nborder-left-color: rgba(0, 0, 0, 0.0470588);\nborder-left-style: solid;\nborder-left-width: 1px;\nborder-right-color: rgba(0, 0, 0, 0.0470588);\nborder-right-style: solid;\nborder-right-width: 1px;\nborder-top-color: rgba(0, 0, 0, 0.0470588);\nborder-top-left-radius: 100%;\nborder-top-right-radius: 100%;\nborder-top-style: solid;\nborder-top-width: 1px;\nbox-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px 0px;\ndisplay: block;\nheight: 14px;\nleft: 7px;\nopacity: 0;\nposition: absolute;\ntop: 7px;\nwidth: 14px;\n. My project is online now, here are the steps to reproduce:\n1. go to http://updeo.com/app f.e. in latest chrome \n2. start demo\n3. go to settings in the menu\n4. open debugger, go to the radio boxes\n5. remove my fix z-index: 2 from the the :after and :before elements\n6. click on radio button cycle (not on lable)\n. Its sounds like a different philosophy than the original css one about inheritance from parents etc.\n. Also the only issue you might get with em is when some parent container has different font size than you expect. This shouldn't be hard to find/fix. \n\nIts a kind of making component more robust in size by sacrificing flexibility.\n. Which is also kind of not web/css philosophy.\n. probably there is a way to make it configurable. Using em for sizes, but setting font-size on every component explicitly using variable. This way 1. every component has robust size, 2. one can adjust size by just setting font-size on the component container, or even change the variable font-size value to \"inherit\"\n. @GarthDB thats what @piatra said. The question is if we can do it play nicely for both cases. Making  size adjustment for 1 component just 1 single definition of font-size.\n. thanks.\n. http://www.nczonline.net/blog/2012/07/05/ios-has-a-hover-problem/\n\nhttp://mir.aculo.us/2013/01/26/why-and-how-to-not-use-hover-styles-on-touch-devices/\n. Also :active seems to have the 300ms delay in android chrome ... looks like to make it really good, we need to use custom classes and add them from javascript on touchstart\n. topcoat could use .active .hover etc. and let user add this classes using any lib or provide a separate optional one for this.\n. fact is pseudo classes on mobile devices are broken and topcoat uses them.\n. difficult ... topcoat first goal is mobile, but it isn't ready to make it right ...\n. idea: add .active, .hover selectors everywhere where pseudo selectors used ... user can then optionally ensure this classes are set on the elements.\n. :+1: \n. ",
    "yarlenvas": "Hello,\n\nAndroid Galaxy s3 mini GT-I8190L\nAndroid Version: 4.1.2\nCordova version: 3.0.0\n\nthx\n. hello, this is the method  where I am adding controls to my div, but i was unable to reproduce on web browser, obly happends in phonegap application scrolling\n\ncreateLightSensor: function (lightSensor, container) {\n\n```\n    var $article = $('<article class=\"component\"></article>');\n    container.append($article);\n    var $header = $('<header><h2>Control de iluminaci\u00f3n ' + lightSensor.name + '</h2></header>');\n\n    var $section = $('<section class=\"component\"></section>');\n\n\n    $article.append($header);\n    $article.append($section);\n\n    var $slider = $('<input id=\"L-' + lightSensor.address + '\" type=\"range\" min=\"0\" max=\"100\" class=\"topcoat-range\">');\n\n\n\n\n    $section.append($slider);\n    $section.append('</br>');\n    $section.append('</br>');\n    $section.append('</br>');\n\n\n\n\n    var $buttonbar = $('<div class=\"topcoat-button-bar\"></div>');\n\n    $section.append($buttonbar);\n\n\n    var $togglecontainer = $('<div class=\"topcoat-button-bar__item\"></div>');\n    var $togglelabel = $('<label class=\"topcoat-switch\"></label>');\n    var $toggleinput = $('<input type=\"checkbox\" class=\"topcoat-switch__input\"/>');\n    var $togglediv = $('<div class=\"topcoat-switch__toggle\"></div>')\n    $togglecontainer.append($togglelabel);\n    $togglelabel.append($toggleinput);\n    $togglelabel.append($togglediv);\n\n    var $buttonSeparator = $('<div class=\"topcoat-button-bar__item separator\"></div>');\n\n\n    var $buttondownContainer = $('<div class=\"topcoat-button-bar__item \"></div>');\n    var $buttondown = $('<button class=\"topcoat-button-bar__button\">-</button>');\n    $buttondownContainer.append($buttondown);\n\n    var $buttonUpContainer = $('<div class=\"topcoat-button-bar__item \"></div>');\n    var $buttonup = $(' <button class=\"topcoat-button-bar__button\">+</button>');\n    $buttonUpContainer.append($buttonup);\n\n\n\n    $buttonbar.append($togglecontainer);\n    $buttonbar.append($buttonSeparator);\n    $buttonbar.append($buttondownContainer);\n    $buttonbar.append($buttonUpContainer);\n\n\n    this.setSensorAttributes($slider, lightSensor.address, 'L', '127');\n    this.setSensorAttributes($toggleinput, lightSensor.address, 'L', '127');\n\n\n    $($slider).change(function () {\n        console.log($(this).val());\n        var newValue = $(this).val();\n        requestController.sendNewSensorState($(this), newValue);\n    });\n\n\n    $($toggleinput).on(\"change\", function () {\n\n\n        var newValue = 'off';\n        if ($(this).is(':checked')) {\n            newValue = 'on';\n        }\n\n        requestController.sendNewSensorState($(this), newValue);\n    });\n\n\n    $($buttonup).click(function () {\n        console.log('LUP');\n\n        var newValue = $('#L-' + lightSensor.address).val();\n        newValue = parseInt(newValue) + 1;\n\n        if (newValue > 100) {\n            return;\n        }\n\n        $('#L-' + lightSensor.address).val(newValue);\n        requestController.sendNewSensorState($('#L-' + lightSensor.address), newValue);\n    });\n\n    $($buttondown).click(function () {\n        console.log('LDOWN');\n\n\n        var newValue = $('#L-' + lightSensor.address).val();\n        newValue = parseInt(newValue) - 1;\n\n        if (newValue < 0) {\n            return;\n        }\n\n        $('#L-' + lightSensor.address).val(newValue);\n\n        requestController.sendNewSensorState($('#L-' + lightSensor.address), newValue);\n\n    });\n\n\n},\n```\n. I will test tomorrow.\n\nthx\n\n2013/10/7 Kristofer Joseph notifications@github.com\n\n> We need to add position: relative to the topcoat-switch class. This will\n> fix a few issues.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/419#issuecomment-25834073\n> .\n. Stills not working!\n. Same as https://github.com/topcoat/topcoat/issues/420\n\nmy apologies, :(\n. Hello,\n\nAndroid Galaxy s3 mini GT-I8190L\nAndroid Version: 4.1.2\nCordova version: 3.0.0\n\nthx\n. hello, this is the method  where I am adding controls to my div, but i was unable to reproduce on web browser, obly happends in phonegap application scrolling\n\ncreateLightSensor: function (lightSensor, container) {\n\n```\n    var $article = $('<article class=\"component\"></article>');\n    container.append($article);\n    var $header = $('<header><h2>Control de iluminaci\u00f3n ' + lightSensor.name + '</h2></header>');\n\n    var $section = $('<section class=\"component\"></section>');\n\n\n    $article.append($header);\n    $article.append($section);\n\n    var $slider = $('<input id=\"L-' + lightSensor.address + '\" type=\"range\" min=\"0\" max=\"100\" class=\"topcoat-range\">');\n\n\n\n\n    $section.append($slider);\n    $section.append('</br>');\n    $section.append('</br>');\n    $section.append('</br>');\n\n\n\n\n    var $buttonbar = $('<div class=\"topcoat-button-bar\"></div>');\n\n    $section.append($buttonbar);\n\n\n    var $togglecontainer = $('<div class=\"topcoat-button-bar__item\"></div>');\n    var $togglelabel = $('<label class=\"topcoat-switch\"></label>');\n    var $toggleinput = $('<input type=\"checkbox\" class=\"topcoat-switch__input\"/>');\n    var $togglediv = $('<div class=\"topcoat-switch__toggle\"></div>')\n    $togglecontainer.append($togglelabel);\n    $togglelabel.append($toggleinput);\n    $togglelabel.append($togglediv);\n\n    var $buttonSeparator = $('<div class=\"topcoat-button-bar__item separator\"></div>');\n\n\n    var $buttondownContainer = $('<div class=\"topcoat-button-bar__item \"></div>');\n    var $buttondown = $('<button class=\"topcoat-button-bar__button\">-</button>');\n    $buttondownContainer.append($buttondown);\n\n    var $buttonUpContainer = $('<div class=\"topcoat-button-bar__item \"></div>');\n    var $buttonup = $(' <button class=\"topcoat-button-bar__button\">+</button>');\n    $buttonUpContainer.append($buttonup);\n\n\n\n    $buttonbar.append($togglecontainer);\n    $buttonbar.append($buttonSeparator);\n    $buttonbar.append($buttondownContainer);\n    $buttonbar.append($buttonUpContainer);\n\n\n    this.setSensorAttributes($slider, lightSensor.address, 'L', '127');\n    this.setSensorAttributes($toggleinput, lightSensor.address, 'L', '127');\n\n\n    $($slider).change(function () {\n        console.log($(this).val());\n        var newValue = $(this).val();\n        requestController.sendNewSensorState($(this), newValue);\n    });\n\n\n    $($toggleinput).on(\"change\", function () {\n\n\n        var newValue = 'off';\n        if ($(this).is(':checked')) {\n            newValue = 'on';\n        }\n\n        requestController.sendNewSensorState($(this), newValue);\n    });\n\n\n    $($buttonup).click(function () {\n        console.log('LUP');\n\n        var newValue = $('#L-' + lightSensor.address).val();\n        newValue = parseInt(newValue) + 1;\n\n        if (newValue > 100) {\n            return;\n        }\n\n        $('#L-' + lightSensor.address).val(newValue);\n        requestController.sendNewSensorState($('#L-' + lightSensor.address), newValue);\n    });\n\n    $($buttondown).click(function () {\n        console.log('LDOWN');\n\n\n        var newValue = $('#L-' + lightSensor.address).val();\n        newValue = parseInt(newValue) - 1;\n\n        if (newValue < 0) {\n            return;\n        }\n\n        $('#L-' + lightSensor.address).val(newValue);\n\n        requestController.sendNewSensorState($('#L-' + lightSensor.address), newValue);\n\n    });\n\n\n},\n```\n. I will test tomorrow.\n\nthx\n\n2013/10/7 Kristofer Joseph notifications@github.com\n\n> We need to add position: relative to the topcoat-switch class. This will\n> fix a few issues.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/419#issuecomment-25834073\n> .\n. Stills not working!\n. Same as https://github.com/topcoat/topcoat/issues/420\n\nmy apologies, :(\n. ",
    "davosian": "I'd be glad to do it, but I cannot find the \"edit page\" button on the wiki. Guess I need access first. \n. Oh, sorry, I just realized that @kristoferjoseph is on it. Nice!\n. I'd be glad to do it, but I cannot find the \"edit page\" button on the wiki. Guess I need access first. \n. Oh, sorry, I just realized that @kristoferjoseph is on it. Nice!\n. ",
    "JasonAllenCorns": "Whoever is on it...I'm glad I found this; was starting to get a little frustrated.\n. Whoever is on it...I'm glad I found this; was starting to get a little frustrated.\n. ",
    "cburgdorf": "Ah, great! Super interesting that someone wants to investigate further to get some concrete numbers. I just leave the  [link to this post](http://updates.html5rocks.com/2013/10/Flexbox-layout-isn-t-slow) here as it already explains the perf differences between the old and the new flexbox.\n\nAlso pulling @pascalprecht in here :)\n. Meh.\n. Just leaving a comment here to become a participant on github because I asked myself that question, too.\n. I know, I'm watching it already but I want to see it under \"Participating\" and not among the other 429 regular updates ;-)\n\n![image](https://f.cloud.github.com/assets/521109/1617559/1c4db9d8-561e-11e3-9094-a7640657baff.png)\n. Ah, great! Super interesting that someone wants to investigate further to get some concrete numbers. I just leave the  [link to this post](http://updates.html5rocks.com/2013/10/Flexbox-layout-isn-t-slow) here as it already explains the perf differences between the old and the new flexbox.\n\nAlso pulling @pascalprecht in here :)\n. Meh.\n. Just leaving a comment here to become a participant on github because I asked myself that question, too.\n. I know, I'm watching it already but I want to see it under \"Participating\" and not among the other 429 regular updates ;-)\n\n![image](https://f.cloud.github.com/assets/521109/1617559/1c4db9d8-561e-11e3-9094-a7640657baff.png)\n. ",
    "PascalPrecht": "@brianleroux hahaha \n. @brianleroux hahaha \n. ",
    "majornista": "Here's a CodePen http://codepen.io/majornista/pen/HEkdv that implements changes to the Tab Bar with a little jQuery plugin experiment so that the radio buttons are properly identified as tabs using WAI-ARIA. One important change is to use span rather than button for the tab label. The button becomes another tab stop that receives focus and interferes with a keyboard/screen reader user's operation of the control.\n. Actually, if you add the roles, ids, aria-labelledby and aria-controls attributes statically, the only javascript you need to worry about is for the on change event handler, which updates the aria-selected values on the tabs and the aria-hidden and hidden attributes of the tabpanels. You'd need javascript to display the appropriate tabpanel anyway.\n. Simplified javascript with mostly static WAI-ARIA attributes: http://cdpn.io/bklzE. Also, for backward compatibility, I use fieldset and a hidden legend labeling the radio button group as a tablist.\n. @kristoferjoseph Does Topcoat have a generic label style that assigns the color for use with inputs? Radio button and checkbox labels have color: var-color, but there doesn't seem to be a style for a generic label.\n. I was just going to add .topcoat__label have it be an inline text element using color: var-color so that it matches the radio button and checkbox label text. \n\nThere's also a question as to how it should align with the inputs. .reset-input() sets vertical-align: top, which, depending on the input, could look off with inline labels. \n\nPositioning of labels can often be application UI specific, so I'm not sure how far you'd want to go with providing classes for different types of positioning. \n. Here's a CodePen http://codepen.io/majornista/pen/HEkdv that implements changes to the Tab Bar with a little jQuery plugin experiment so that the radio buttons are properly identified as tabs using WAI-ARIA. One important change is to use span rather than button for the tab label. The button becomes another tab stop that receives focus and interferes with a keyboard/screen reader user's operation of the control.\n. Actually, if you add the roles, ids, aria-labelledby and aria-controls attributes statically, the only javascript you need to worry about is for the on change event handler, which updates the aria-selected values on the tabs and the aria-hidden and hidden attributes of the tabpanels. You'd need javascript to display the appropriate tabpanel anyway.\n. Simplified javascript with mostly static WAI-ARIA attributes: http://cdpn.io/bklzE. Also, for backward compatibility, I use fieldset and a hidden legend labeling the radio button group as a tablist.\n. @kristoferjoseph Does Topcoat have a generic label style that assigns the color for use with inputs? Radio button and checkbox labels have color: var-color, but there doesn't seem to be a style for a generic label.\n. I was just going to add .topcoat__label have it be an inline text element using color: var-color so that it matches the radio button and checkbox label text. \n\nThere's also a question as to how it should align with the inputs. .reset-input() sets vertical-align: top, which, depending on the input, could look off with inline labels. \n\nPositioning of labels can often be application UI specific, so I'm not sure how far you'd want to go with providing classes for different types of positioning. \n. ",
    "ukris": "Awesome! Thanks a mil - for a really fast response.\n. Awesome! Thanks a mil - for a really fast response.\n. ",
    "ahx": "I tried applying this and it seems to work.\nIf you want a smooth migration path, one possible solution would be:\nFirst, convert all base classes to placeholder classes `.button` -> `$button`\nThen, add a (global) variable to topcoat-utils `topcoat-prefix = '.topcoat-'` and apply it like this:\nExample for `topcoat-button.styl`:\n\n```\n{topcoat-prefix}button {\n    @extend $button\n    padding: var-padding;\n\u2026\n```\n\nExample for `topcoat-button.styl`:\n\n```\n{topcoat-prefix}button-bar__button {\n  @extend {topcoat-prefix}button;\n  border-radius: inherit;\n}\n```\n\nIf you want to use the components without the prefix, just say `topcoat-prefix = '.'`\n\nThis would make things very flexible, but looks a bit verbose. I think it would be ok to just remove all \".topcoat-\" prefixes. Let me know what you think is the best solution and I am glad to help implementing it.\n. @kristoferjoseph Defaulting to the \"topcoat-\" namespace, but supporting a blank namespace sounds great.\n. https://github.com/csswizardry/csswizardry-grids/blob/master/csswizardry-grids.scss#L153 solves a problem like this really clever. By setting the prefix variable to $ (or % in Sass) you can configure that the modules are either placeholder classes or normal ones. I didn't know that you can do this before. Maybe it can be useful in your refactoring work.\n. Briliant. Thanks for the update.\n. I tried applying this and it seems to work.\nIf you want a smooth migration path, one possible solution would be:\nFirst, convert all base classes to placeholder classes `.button` -> `$button`\nThen, add a (global) variable to topcoat-utils `topcoat-prefix = '.topcoat-'` and apply it like this:\nExample for `topcoat-button.styl`:\n\n```\n{topcoat-prefix}button {\n    @extend $button\n    padding: var-padding;\n\u2026\n```\n\nExample for `topcoat-button.styl`:\n\n```\n{topcoat-prefix}button-bar__button {\n  @extend {topcoat-prefix}button;\n  border-radius: inherit;\n}\n```\n\nIf you want to use the components without the prefix, just say `topcoat-prefix = '.'`\n\nThis would make things very flexible, but looks a bit verbose. I think it would be ok to just remove all \".topcoat-\" prefixes. Let me know what you think is the best solution and I am glad to help implementing it.\n. @kristoferjoseph Defaulting to the \"topcoat-\" namespace, but supporting a blank namespace sounds great.\n. https://github.com/csswizardry/csswizardry-grids/blob/master/csswizardry-grids.scss#L153 solves a problem like this really clever. By setting the prefix variable to $ (or % in Sass) you can configure that the modules are either placeholder classes or normal ones. I didn't know that you can do this before. Maybe it can be useful in your refactoring work.\n. Briliant. Thanks for the update.\n. ",
    "marnen": "I just submitted topcoat/topcoat.github.com#33, which fixes this.\n. ...and in 7 months, no one has done anything about it.\n. I just submitted topcoat/topcoat.github.com#33, which fixes this.\n. ...and in 7 months, no one has done anything about it.\n. ",
    "nodoherty": "Hi Tim,\nI preferred to use the @fontface rule and refer to the icons using a font.  Below is some basic steps you can take to get this working.  \n\nYou need to use the icomatic service which can be found here to generate the font files:\nhttp://www.icomatic.io/ \n\nI simply added all the .svg files located in the \"svg\" folder within the GitHib repo https://github.com/topcoat/icons\nI like this because it means you can also only include the icons you need for your project so you can generate font files on a per project basis.\n\nThis will generate the font files you need.  Add these incuding the CSS below and ensure it's included in your template.  Also ensure the paths are correct for the font files otherwise it wont work correctly and you'll just see the text equivalent of the icon that you're trying to display.\n\n``` css\n@font-face {\n    font-family: 'Icomatic';\n    src: url('icomatic.svg#icomatic') format('svg'),\n         url('icomatic.woff')         format(\"woff\"),\n         url('icomatic.ttf')          format(\"truetype\");\n}\n\n.icomatic {\n    font-family: 'Icomatic','SourceSansPro-Light';\n    font-size: 26px;\n    color: #288EDF;\n    line-height: 1;\n    text-rendering: optimizeLegibility;\n    -webkit-font-feature-settings: \"liga\", \"dlig\";\n    -ms-font-feature-settings: \"liga\", \"dlig\";\n    -moz-font-feature-settings: \"liga\", \"dlig\";\n    -o-font-feature-settings: \"liga\", \"dlig\";\n    font-feature-settings: \"liga\", \"dlig\";\n    -webkit-font-smoothing: antialiased;\n}\n```\n\nThe font family \"SourceSansPro-Light\" is just a backup that I'm using that is also supplied with TopCoat.  Next here comes the sweet part of using the font.  I have some markup with a tab-bar that displays an icon with some text below it.\n\n``` html\n<div class=\"topcoat-tab-bar full\" style=\"position: fixed; bottom: 0px;\">\n    <label class=\"topcoat-tab-bar__item\">\n        <input type=\"radio\" name=\"topcoat\">\n        <button id=\"tab1\" class=\"topcoat-tab-bar__button full active\">\n            <div class='icomatic'>next</div>\n            <div class='icon-label'>To</div>\n        </button>\n    </label>\n\n    <label class=\"topcoat-tab-bar__item\">\n        <input type=\"radio\" name=\"topcoat\">\n        <button class=\"topcoat-tab-bar__button full\">\n            <div class='icomatic'>back</div>\n            <div class='icon-label'>From</div>\n        </button>\n    </label>\n</div>\n```\n\nAnything with the .icomatic class will then apply the icomatic font which in turn will display your icon (as long as there is an icon with the name of the text you have supplied within the markup in the font file).\n\nTo change the icon size and color you specify a font-size and color attribute.\nThere is a great example of this on the icomatic site: http://icomatic.github.io/sample-set/kit/icomatic.html\n\nUse the controls located at the top-right corner to update the icon size and color.\n\nThe other way, I would assume, would be to use the traditional sprite method.  Create a sprite using spritePad or other sprite creation utility of the icons you wosh to use then use CSS to reference each icon in the sprite.\n\nHope this is of help.\nNiall\n. Hi @kristoferjoseph thanks a million.  Sure I'd love to.  I can elaborate a little further for a blog post.  Contact me about the details and I can take it from there.\n. @kristoferjoseph Got it - I'll let you know when I've got something together for you to review.  I'll also ensure theres a nice mix of media for it to be easy to follow and interesting enough.\n\nAny questions, I'll give you a shout.\nCheers!!\n. @kristoferjoseph Cool - you're welcome.\n. Check out the blogpost on the topcoat site.  You can create your own.  Also includes some  example code you can get started with. \n\nhttp://topcoat.io/posts/semantic-icon-font-using-topcoat-icons/\n\nNiall\n\n> On 17 Dec 2013, at 08:36, Oleg Slobodskoi notifications@github.com wrote:\n> \n> There are still only svgs, what I asked for is 1 ttf, 1 otf and one woff file generated from svgs which contains all the icons. Also a css file which puts the char into span would be nice. I mean something similar to bootstraps glyphicons http://getbootstrap.com/components/#glyphicons-glyphs\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. Hi Tim,\nI preferred to use the @fontface rule and refer to the icons using a font.  Below is some basic steps you can take to get this working.  \n\nYou need to use the icomatic service which can be found here to generate the font files:\nhttp://www.icomatic.io/ \n\nI simply added all the .svg files located in the \"svg\" folder within the GitHib repo https://github.com/topcoat/icons\nI like this because it means you can also only include the icons you need for your project so you can generate font files on a per project basis.\n\nThis will generate the font files you need.  Add these incuding the CSS below and ensure it's included in your template.  Also ensure the paths are correct for the font files otherwise it wont work correctly and you'll just see the text equivalent of the icon that you're trying to display.\n\n``` css\n@font-face {\n    font-family: 'Icomatic';\n    src: url('icomatic.svg#icomatic') format('svg'),\n         url('icomatic.woff')         format(\"woff\"),\n         url('icomatic.ttf')          format(\"truetype\");\n}\n\n.icomatic {\n    font-family: 'Icomatic','SourceSansPro-Light';\n    font-size: 26px;\n    color: #288EDF;\n    line-height: 1;\n    text-rendering: optimizeLegibility;\n    -webkit-font-feature-settings: \"liga\", \"dlig\";\n    -ms-font-feature-settings: \"liga\", \"dlig\";\n    -moz-font-feature-settings: \"liga\", \"dlig\";\n    -o-font-feature-settings: \"liga\", \"dlig\";\n    font-feature-settings: \"liga\", \"dlig\";\n    -webkit-font-smoothing: antialiased;\n}\n```\n\nThe font family \"SourceSansPro-Light\" is just a backup that I'm using that is also supplied with TopCoat.  Next here comes the sweet part of using the font.  I have some markup with a tab-bar that displays an icon with some text below it.\n\n``` html\n<div class=\"topcoat-tab-bar full\" style=\"position: fixed; bottom: 0px;\">\n    <label class=\"topcoat-tab-bar__item\">\n        <input type=\"radio\" name=\"topcoat\">\n        <button id=\"tab1\" class=\"topcoat-tab-bar__button full active\">\n            <div class='icomatic'>next</div>\n            <div class='icon-label'>To</div>\n        </button>\n    </label>\n\n    <label class=\"topcoat-tab-bar__item\">\n        <input type=\"radio\" name=\"topcoat\">\n        <button class=\"topcoat-tab-bar__button full\">\n            <div class='icomatic'>back</div>\n            <div class='icon-label'>From</div>\n        </button>\n    </label>\n</div>\n```\n\nAnything with the .icomatic class will then apply the icomatic font which in turn will display your icon (as long as there is an icon with the name of the text you have supplied within the markup in the font file).\n\nTo change the icon size and color you specify a font-size and color attribute.\nThere is a great example of this on the icomatic site: http://icomatic.github.io/sample-set/kit/icomatic.html\n\nUse the controls located at the top-right corner to update the icon size and color.\n\nThe other way, I would assume, would be to use the traditional sprite method.  Create a sprite using spritePad or other sprite creation utility of the icons you wosh to use then use CSS to reference each icon in the sprite.\n\nHope this is of help.\nNiall\n. Hi @kristoferjoseph thanks a million.  Sure I'd love to.  I can elaborate a little further for a blog post.  Contact me about the details and I can take it from there.\n. @kristoferjoseph Got it - I'll let you know when I've got something together for you to review.  I'll also ensure theres a nice mix of media for it to be easy to follow and interesting enough.\n\nAny questions, I'll give you a shout.\nCheers!!\n. @kristoferjoseph Cool - you're welcome.\n. Check out the blogpost on the topcoat site.  You can create your own.  Also includes some  example code you can get started with. \n\nhttp://topcoat.io/posts/semantic-icon-font-using-topcoat-icons/\n\nNiall\n\n> On 17 Dec 2013, at 08:36, Oleg Slobodskoi notifications@github.com wrote:\n> \n> There are still only svgs, what I asked for is 1 ttf, 1 otf and one woff file generated from svgs which contains all the icons. Also a css file which puts the char into span would be nice. I mean something similar to bootstraps glyphicons http://getbootstrap.com/components/#glyphicons-glyphs\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n. ",
    "Timothep": "Wow, didn't expect such a nicely detailed answer ; thanks a bunch @nodoherty! Bytheway, the step I missed was the icomatic generation one, I kind of assumed it was included in Topcoat >_<\n. Thanks, looking forward to it!\n. Wow, didn't expect such a nicely detailed answer ; thanks a bunch @nodoherty! Bytheway, the step I missed was the icomatic generation one, I kind of assumed it was included in Topcoat >_<\n. Thanks, looking forward to it!\n. ",
    "sonoman": "yeap, you're right....I don't know where did I get the first css I was\nusing....thanks.\n\nOn Tue, Nov 19, 2013 at 1:32 AM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> The theme file is compiled together with the main css file for each (ie\n> mobile dark, desktop light, etc).\n> \n> Download the latest build\n> https://github.com/topcoat/topcoat/archive/v0.8.0.zip and in the css\n> directory you should find everything. I just checked and switch and\n> textarea are in mobile dark.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/451#issuecomment-28764488\n> .\n. yeap, you're right....I don't know where did I get the first css I was\nusing....thanks.\n\nOn Tue, Nov 19, 2013 at 1:32 AM, Garth Braithwaite <notifications@github.com\n\n> wrote:\n> \n> The theme file is compiled together with the main css file for each (ie\n> mobile dark, desktop light, etc).\n> \n> Download the latest build\n> https://github.com/topcoat/topcoat/archive/v0.8.0.zip and in the css\n> directory you should find everything. I just checked and switch and\n> textarea are in mobile dark.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/451#issuecomment-28764488\n> .\n. ",
    "matthieuh": "I mean vertically. In an older version, v0.6.0 i guess, it work fine. By default it is vertically centered http://topcoat.io/topcoat/topcoat-mobile-dark.html. Why a difference between browsers ? Like i said in a computer browser it work fine (vertically centered).\n. In setting \"line-height: 3rem !important;\" and \"height: 3rem; !important\" for my inputs i have same problem... Anyone have reproduce the same issue with Employee Directory (http://coenraets.org/blog/2013/11/sample-mobile-application-with-angularjs/) ? \n. I mean vertically. In an older version, v0.6.0 i guess, it work fine. By default it is vertically centered http://topcoat.io/topcoat/topcoat-mobile-dark.html. Why a difference between browsers ? Like i said in a computer browser it work fine (vertically centered).\n. In setting \"line-height: 3rem !important;\" and \"height: 3rem; !important\" for my inputs i have same problem... Anyone have reproduce the same issue with Employee Directory (http://coenraets.org/blog/2013/11/sample-mobile-application-with-angularjs/) ? \n. ",
    "staurand": "Setting line-height to normal or removing line-height css property should do the trick\n. Setting line-height to normal or removing line-height css property should do the trick\n. ",
    "holzerma": "I played around with topcoat the last des days and found out, that this is still an issue. It even occours ob Thema topcoat.io demo page. Is there a solution? Greets holzerma.\nPS: i am running Android 4.3\n. thank you! keep on you great work, greets\n. I played around with topcoat the last des days and found out, that this is still an issue. It even occours ob Thema topcoat.io demo page. Is there a solution? Greets holzerma.\nPS: i am running Android 4.3\n. thank you! keep on you great work, greets\n. ",
    "benjamintoddweb": "I have just experienced this whilst developing on my Samsung Galaxy Note 1 using topcoat v 0.8.0 and v 0.9.0. Googling around, this issue appears to be a problem with the Android webview, not with topcoat. I have just come up with a solution (a hack I'm afraid :-/) that works on my Note. I'm not sure if it has any side effects with other devices. What I have done is added this rule to my css file: -\n\n```\n.topcoat-search-input {\n    line-height: 0;\n}\n```\n. I have just experienced this whilst developing on my Samsung Galaxy Note 1 using topcoat v 0.8.0 and v 0.9.0. Googling around, this issue appears to be a problem with the Android webview, not with topcoat. I have just come up with a solution (a hack I'm afraid :-/) that works on my Note. I'm not sure if it has any side effects with other devices. What I have done is added this rule to my css file: -\n\n```\n.topcoat-search-input {\n    line-height: 0;\n}\n```\n. ",
    "kokujin": "Windows Phone, IE7 and 8, Android 2 the troublesome stuff actually\n\nOn Mon, Dec 2, 2013 at 7:37 AM, Garth Braithwaite\nnotifications@github.comwrote:\n\n> We normally stick to the latest versions and heavily test WebKit/chrome.\n> Is there something in particular you're looking for?\n> \n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com\n> wrote:\n> \n> > ## Is there a support list somewhere? Thanks\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/457\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/457#issuecomment-29597374\n> .\n. Windows Phone, IE7 and 8, Android 2 the troublesome stuff actually\n\nOn Mon, Dec 2, 2013 at 7:37 AM, Garth Braithwaite\nnotifications@github.comwrote:\n\n> We normally stick to the latest versions and heavily test WebKit/chrome.\n> Is there something in particular you're looking for?\n> \n> \u2014\n> Sent from Mailbox for iPhone\n> \n> On Sun, Dec 1, 2013 at 10:25 PM, kokujin notifications@github.com\n> wrote:\n> \n> > ## Is there a support list somewhere? Thanks\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/topcoat/topcoat/issues/457\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/topcoat/topcoat/issues/457#issuecomment-29597374\n> .\n. ",
    "eugenf": "I have the same problem. No clue how to fix it.\n. Ok, so what I've found - here's what you should change in the package.json file:\n\n\"topcoat-button-bar-base\": \"~0.1.3\", to \"topcoat-button-bar-base\": \"0.1.3\",\n\nthen run npm install and after it compiles perfectly.\n. I have the same problem. No clue how to fix it.\n. Ok, so what I've found - here's what you should change in the package.json file:\n\n\"topcoat-button-bar-base\": \"~0.1.3\", to \"topcoat-button-bar-base\": \"0.1.3\",\n\nthen run npm install and after it compiles perfectly.\n. ",
    "misterbrownlee": "Would it make sense patch master with fixed package.json versions while updating is in process?  Or do the build process updates in a branch instead of master?\n. I like helping :)\n. \"lurkmode\": \"\ud83c\udf7f \" . Would it make sense patch master with fixed package.json versions while updating is in process?  Or do the build process updates in a branch instead of master?\n. I like helping :)\n. \"lurkmode\": \"\ud83c\udf7f \" . ",
    "silverbucket": "Hi @GarthDB thanks for the reply. One of the problems I'm having is that I cannot find any examples of how you implemented it. I only see it in the screenshots, but there are so many repositories in this github org, and nothing named 'slide'.\n\nCould you please point me to an example implementation?\n. @GarthDB the source for what page? The problem is I can't find any page which implements it. Yet I see it in the screenshots on the main page.\n. @GarthDB nevermind I just realized the main page is responsive and the slider shows up when the browser window is resized :)\n. Hi @GarthDB thanks for the reply. One of the problems I'm having is that I cannot find any examples of how you implemented it. I only see it in the screenshots, but there are so many repositories in this github org, and nothing named 'slide'.\n\nCould you please point me to an example implementation?\n. @GarthDB the source for what page? The problem is I can't find any page which implements it. Yet I see it in the screenshots on the main page.\n. @GarthDB nevermind I just realized the main page is responsive and the slider shows up when the browser window is resized :)\n. ",
    "anselmo": "This is brilliant! Well done guys.\n. This is brilliant! Well done guys.\n. ",
    "kpko": "I have the same problem. Fresh clone.\nNode: v0.10.4\nnpm: v1.3.1\nstylus: v0.42.0\n\nC:\\topcoat>grunt\nRunning \"clean:release\" (clean) task\n\nRunning \"stylus:mobilelight\" (stylus) task\n\n> > Error: node_modules/topcoat-button-bar/src/topcoat-button-bar.styl:19\n> >    15| \\* limitations under the License.\n> >    16|\n> >    17| */\n> >    18| @import topcoat-button\n> > \n> > > 19| @import button-bar\n> > >    20| / topdoc\n> > >    21|   name: Button Bar\n> > >    22|   description: Component of grouped buttons\n> > \n> > failed to locate @import file button-bar.styl\n> > Warning: Stylus failed to compile. Use --force to continue.\n\nAborted due to warnings.\n. I have the same problem. Fresh clone.\nNode: v0.10.4\nnpm: v1.3.1\nstylus: v0.42.0\n\nC:\\topcoat>grunt\nRunning \"clean:release\" (clean) task\n\nRunning \"stylus:mobilelight\" (stylus) task\n\n> > Error: node_modules/topcoat-button-bar/src/topcoat-button-bar.styl:19\n> >    15| \\* limitations under the License.\n> >    16|\n> >    17| */\n> >    18| @import topcoat-button\n> > \n> > > 19| @import button-bar\n> > >    20| / topdoc\n> > >    21|   name: Button Bar\n> > >    22|   description: Component of grouped buttons\n> > \n> > failed to locate @import file button-bar.styl\n> > Warning: Stylus failed to compile. Use --force to continue.\n\nAborted due to warnings.\n. ",
    "AlexeyKupershtokh": "Same for me. Any fix or workaround for this?\n. @smorstabilini thanks :+1:. I've removed ~ from the versions in the package.json, updated the deps and it then compiled w/o any problems.\n. Same for me. Any fix or workaround for this?\n. @smorstabilini thanks :+1:. I've removed ~ from the versions in the package.json, updated the deps and it then compiled w/o any problems.\n. ",
    "smorstabilini": "Yep, it's probably this one: https://github.com/topcoat/topcoat/issues/458\n. Yep, it's probably this one: https://github.com/topcoat/topcoat/issues/458\n. ",
    "stevega": "OK the pen helped me figure out my problem as I could see what was going on more clearly than in my test page.  The issue I had is that the buttons in the form were automatically submitting the form. Most of the time,  this was causing the form to post the form back to itself as no action was set, therefore resetting the state of all the controls.  Adding type=\"button\" to the button solves this, as Firefox then doesn't handle it as a submit button.  So this isn't  a bug in topcoat.  Might be worth updating the documentation to make others aware of the usage in a form though -  as typically you don't want an option selection to submit the form. Thanks piatra for your help on this.\n. OK the pen helped me figure out my problem as I could see what was going on more clearly than in my test page.  The issue I had is that the buttons in the form were automatically submitting the form. Most of the time,  this was causing the form to post the form back to itself as no action was set, therefore resetting the state of all the controls.  Adding type=\"button\" to the button solves this, as Firefox then doesn't handle it as a submit button.  So this isn't  a bug in topcoat.  Might be worth updating the documentation to make others aware of the usage in a form though -  as typically you don't want an option selection to submit the form. Thanks piatra for your help on this.\n. ",
    "sp4ke": "@kristoferjoseph great I just signed the CLA\n. @kristoferjoseph great I just signed the CLA\n. ",
    "PatrickJS": "Actually it doesn't have to be updated each year but it should be on every file if you want to know the correct way. This is just a script running through a list of repos that checks if the Copyright is outdated and submits a pull request for lolz\n. Actually it doesn't have to be updated each year but it should be on every file if you want to know the correct way. This is just a script running through a list of repos that checks if the Copyright is outdated and submits a pull request for lolz\n. ",
    "abampakos": "Hi,\n\nThank you for your answer. Please find the link below to the CodePen component.\n\nhttp://codepen.io/anon/pen/mECAq\n. Hi,\nAre there any update news about the current issue?\n\nThanks\n. Hi,\n\nThank you for your answer. Please find the link below to the CodePen component.\n\nhttp://codepen.io/anon/pen/mECAq\n. Hi,\nAre there any update news about the current issue?\n\nThanks\n. ",
    "plaxdan": "Yep makes a lot of sense. I'll go ahead and break it up. Gives me a chance to bring the components up to speed with any changes that have been happening on your end.\n. FYI we've started on these. [topcoat-button-react](https://github.com/plaxdan/topcoat-button-react) is the first. When the others are done we can talk about publishing them to npmjs.org or bower.\n. I believe what you're looking for is this :)\n\n![](http://media2.giphy.com/media/33UbGsRWIZhkc/giphy.gif)\n. :+1: \n. Works fine on \n- Nexus 4\n- Chrome 0.37\n- Android 4.4.4\n. Yep makes a lot of sense. I'll go ahead and break it up. Gives me a chance to bring the components up to speed with any changes that have been happening on your end.\n. FYI we've started on these. [topcoat-button-react](https://github.com/plaxdan/topcoat-button-react) is the first. When the others are done we can talk about publishing them to npmjs.org or bower.\n. I believe what you're looking for is this :)\n\n![](http://media2.giphy.com/media/33UbGsRWIZhkc/giphy.gif)\n. :+1: \n. Works fine on \n- Nexus 4\n- Chrome 0.37\n- Android 4.4.4\n. ",
    "oddgames-david": "Wait this is better:\n\ninput[type=checkbox].topcoat-toggle:checked + label,\ninput[type=radio].topcoat-toggle:checked + label\n{\n    background-color: #454646;\n    box-shadow: none;\n}\n\ninput[type=checkbox].topcoat-toggle + label,\ninput[type=radio].topcoat-toggle + label\n{\n    padding: 3px 12px 3px 12px;\n    font-size: 12px;\n    line-height: 1.313rem;\n    letter-spacing: 0;\n    color: #c6c8c8;\n    text-shadow: 0 -1px rgba(0,0,0,0.69);\n    vertical-align: top;\n    background-color: #595b5b;\n    box-shadow: inset 0 1px #737373;\n    border: 1px solid #333434;\n    border-radius: 4px;\n    min-width: 100px;\n}\n\n```\n<input type=\"checkbox\" id=\"myToggleButton\" class=\"topcoat-toggle\"/>\n<label class=\"topcoat-toggle\" for=\"myToggleButton\">Test</label>\n\nor\n\n<form action=\"\">\n    <input type=\"radio\" value=\"1\" id=\"myToggleRadio1\" class=\"topcoat-toggle\" ng-model=\"toggleGroup\"/>\n    <label class=\"topcoat-toggle\" for=\"myToggleRadio1\">Columns</label>\n    <input type=\"radio\" value=\"2\" id=\"myToggleRadio2\" class=\"topcoat-toggle\" ng-model=\"toggleGroup\" />\n    <label class=\"topcoat-toggle\" for=\"myToggleRadio2\">Filter By</label>\n</form>\n```\n. Sure, here you go:\nhttp://codepen.io/anon/pen/ikbva\n. Did it make the cut?\n. I tried to integrate it into 0.8 with a menu bar version too but I've got a little spacing issue, can you take a look?\n\nhttp://codepen.io/anon/pen/eBwHn/\n. Wait this is better:\n\ninput[type=checkbox].topcoat-toggle:checked + label,\ninput[type=radio].topcoat-toggle:checked + label\n{\n    background-color: #454646;\n    box-shadow: none;\n}\n\ninput[type=checkbox].topcoat-toggle + label,\ninput[type=radio].topcoat-toggle + label\n{\n    padding: 3px 12px 3px 12px;\n    font-size: 12px;\n    line-height: 1.313rem;\n    letter-spacing: 0;\n    color: #c6c8c8;\n    text-shadow: 0 -1px rgba(0,0,0,0.69);\n    vertical-align: top;\n    background-color: #595b5b;\n    box-shadow: inset 0 1px #737373;\n    border: 1px solid #333434;\n    border-radius: 4px;\n    min-width: 100px;\n}\n\n```\n<input type=\"checkbox\" id=\"myToggleButton\" class=\"topcoat-toggle\"/>\n<label class=\"topcoat-toggle\" for=\"myToggleButton\">Test</label>\n\nor\n\n<form action=\"\">\n    <input type=\"radio\" value=\"1\" id=\"myToggleRadio1\" class=\"topcoat-toggle\" ng-model=\"toggleGroup\"/>\n    <label class=\"topcoat-toggle\" for=\"myToggleRadio1\">Columns</label>\n    <input type=\"radio\" value=\"2\" id=\"myToggleRadio2\" class=\"topcoat-toggle\" ng-model=\"toggleGroup\" />\n    <label class=\"topcoat-toggle\" for=\"myToggleRadio2\">Filter By</label>\n</form>\n```\n. Sure, here you go:\nhttp://codepen.io/anon/pen/ikbva\n. Did it make the cut?\n. I tried to integrate it into 0.8 with a menu bar version too but I've got a little spacing issue, can you take a look?\n\nhttp://codepen.io/anon/pen/eBwHn/\n. ",
    "logankoester": ":thumbsup: \n. Not looking good, eh?\n. Well, I'm planning to stick with Topcoat anyway, as it is the only good project in this space that doesn't try to shove a bunch of its own JavaScript down my application's throat.\n\nApart from that, I really like Topcoat's modular organization and build process - makes it so easy to theme and extend.\n\nA lot of quality engineering went into this thing and it makes me sad to see it abandoned like this, but there's no reason we can't carry the torch from here.\n. @piatra I don't think the concern raised in this issue is directly about Adobe sponsorship, so much as the lack of communication through the project blog and decrease in Github activity.\n. Thanks for the update @GarthDB - enjoy your time off!\n. :thumbsup: \n. Not looking good, eh?\n. Well, I'm planning to stick with Topcoat anyway, as it is the only good project in this space that doesn't try to shove a bunch of its own JavaScript down my application's throat.\n\nApart from that, I really like Topcoat's modular organization and build process - makes it so easy to theme and extend.\n\nA lot of quality engineering went into this thing and it makes me sad to see it abandoned like this, but there's no reason we can't carry the torch from here.\n. @piatra I don't think the concern raised in this issue is directly about Adobe sponsorship, so much as the lack of communication through the project blog and decrease in Github activity.\n. Thanks for the update @GarthDB - enjoy your time off!\n. ",
    "wpkita": ":+1: \n. :+1: \n. ",
    "RobertCZ": "not good this radio silence - maybe it's time to check something else - any recommendation?  ionic looks really promising...\n. not good this radio silence - maybe it's time to check something else - any recommendation?  ionic looks really promising...\n. ",
    "iaef": "I would love to know the actual status of this... @GarthDB any comments? (BTW, I hope you are enjoying your paternity so far, it is wonderful)\nI believe that there must still be some things left in the back, since it is at 0.8.0, which means there was something planned for 0.9.0 and 1.0.0 but I do not find a clear roadmap, as for some more people to come in and put some effort to acquire such completeness status. Or maybe 0.8.0 is completeness status. But what is pending here is dev documentation effort, as to move this thing further on.\n. I would love to know the actual status of this... @GarthDB any comments? (BTW, I hope you are enjoying your paternity so far, it is wonderful)\nI believe that there must still be some things left in the back, since it is at 0.8.0, which means there was something planned for 0.9.0 and 1.0.0 but I do not find a clear roadmap, as for some more people to come in and put some effort to acquire such completeness status. Or maybe 0.8.0 is completeness status. But what is pending here is dev documentation effort, as to move this thing further on.\n. ",
    "Cryrivers": "@GarthDB is Adobe still using TopCoat to build Brackets? or has it ever done this? Since TopCoat has not been updated for more than 1 year, can I still trust it and use it if I want to build a new web app now?\n. @GarthDB is Adobe still using TopCoat to build Brackets? or has it ever done this? Since TopCoat has not been updated for more than 1 year, can I still trust it and use it if I want to build a new web app now?\n. ",
    "mscreenie": "Would be great to see this project get some fresh air, I really like the concept and currently can't find anything to replace this from a ui perspective. \n. Would be great to see this project get some fresh air, I really like the concept and currently can't find anything to replace this from a ui perspective. \n. ",
    "geelen": "Whoa, experimental PR to the wrong master. Sorry!\n. Whoa, experimental PR to the wrong master. Sorry!\n. ",
    "NickBolles": "Works fine on my lg g2\n. Works fine on my lg g2\n. ",
    "kethinov": "Now that I'm on wifi I can't reproduce, but it definitely wasn't working before. I think it was a performance-related issue. When I tested before I was on a train.\n\nI think when it wasn't working before I was clicking the links before the JS loaded, because the URL was changing to http://topcoat.io/topcoat/# (note the hash at the end)\n\nIt might be a good idea to add the links to the DOM using JS instead so they are not present before the JS is loaded, or to progressively enhance the HTML to prevent this from happening.\n\nI'll edit the title to have a more accurate description of the bug.\n. :+1: \n. Now that I'm on wifi I can't reproduce, but it definitely wasn't working before. I think it was a performance-related issue. When I tested before I was on a train.\n\nI think when it wasn't working before I was clicking the links before the JS loaded, because the URL was changing to http://topcoat.io/topcoat/# (note the hash at the end)\n\nIt might be a good idea to add the links to the DOM using JS instead so they are not present before the JS is loaded, or to progressively enhance the HTML to prevent this from happening.\n\nI'll edit the title to have a more accurate description of the bug.\n. :+1: \n. ",
    "jemminger": "So, the benchmarks are expected not to work anymore?\n. So, the benchmarks are expected not to work anymore?\n. ",
    "AllThingsSmitty": "Submitted PR https://github.com/topcoat/topcoat/pull/505.\n. The Travis CI build failed. Closing this PR.\n. Build still failing.\n. @GarthDB ahhh, well that explains it then. I thought I had missed a step. Thanks!\n. See PR https://github.com/topcoat/topcoat/pull/506#issuecomment-150825628 regarding the tests.\n. Submitted PR https://github.com/topcoat/topcoat/pull/505.\n. The Travis CI build failed. Closing this PR.\n. Build still failing.\n. @GarthDB ahhh, well that explains it then. I thought I had missed a step. Thanks!\n. See PR https://github.com/topcoat/topcoat/pull/506#issuecomment-150825628 regarding the tests.\n. ",
    "abrander": "For anyone else coming here for signs of life - the 1.0 branch seems to be alive!\n\nhttps://github.com/topcoat/topcoat/tree/1.0.0\n. For anyone else coming here for signs of life - the 1.0 branch seems to be alive!\n\nhttps://github.com/topcoat/topcoat/tree/1.0.0\n. "
}